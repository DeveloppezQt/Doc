<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>InsightTracker QML Type</db:title>
<db:productname>QtInsightTracker</db:productname>
<db:edition>Qt Insight Tracker | Commercial</db:edition>
<db:titleabbrev>Qt Insight Tracker Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides an interface to the Qt Insight Tracker.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtInsightTracker 6.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qinsighttracker.xml">QInsightTracker</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="enabled-prop">
<db:title>enabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>enabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property can be used to enable and disable the tracker.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="clearCache-method">
<db:title>clearCache()</db:title>
<db:para>Clear all events from the local cache.</db:para>
</db:section>
<db:section xml:id="interaction-method">
<db:title>interaction(string <db:emphasis>name</db:emphasis>, string <db:emphasis>category</db:emphasis>)</db:title>
<db:para>Send a interaction event <db:code role="parameter">name</db:code>. The optional <db:code role="parameter">category</db:code> parameter can be used to filter tracking of the events.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qinsightconfiguration.xml#setCategories">QInsightConfiguration::setCategories</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="interaction-method-1">
<db:title>interaction(string <db:emphasis>name</db:emphasis>, const QString &amp;<db:emphasis>contextKey</db:emphasis>, double <db:emphasis>contextValue</db:emphasis>, string <db:emphasis>category</db:emphasis>)</db:title>
<db:para>Send a interaction event <db:code role="parameter">name</db:code> with additional context data. Context data can be sent as a key/value pair in <db:code role="parameter">contextKey</db:code> and <db:code role="parameter">contextValue</db:code>. The optional <db:code role="parameter">category</db:code> parameter can be used to filter tracking of the events.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qinsightconfiguration.xml#setCategories">QInsightConfiguration::setCategories</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="startNewSession-method">
<db:title>startNewSession()</db:title>
<db:para>Start a new session A new session id is generated and then used in all subsequent events.</db:para>
</db:section>
<db:section xml:id="transition-method">
<db:title>transition(string <db:emphasis>name</db:emphasis>)</db:title>
<db:para>Send a transition event <db:code role="parameter">name</db:code>. Use transition events to track the current state of the UI. Transition events can be sent whenever your application changes UI views or states, or whenever there are other UI flow changes such as dialog and notification pop-ups.</db:para>
</db:section>
<db:section xml:id="transition-method-1">
<db:title>transition(string <db:emphasis>name</db:emphasis>, const QString &amp;<db:emphasis>contextKey</db:emphasis>, double <db:emphasis>contextValue</db:emphasis>)</db:title>
<db:para>Send a transition event <db:code role="parameter">name</db:code> with additional context data. Context data can be sent as a key/value pair in <db:code role="parameter">contextKey</db:code> and <db:code role="parameter">contextValue</db:code>. Use transition events to track the current state of the UI. Transition events can be sent whenever your application changes UI views or states, or whenever there are other UI flow changes such as dialog and notification pop-ups.</db:para>
</db:section>
</db:section>
</db:article>
