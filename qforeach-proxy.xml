<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>&lt;QForeach&gt;</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Core Reference Documentation.</db:para></db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="macro-documentation">
<db:title>Macro Documentation</db:title>
<db:section xml:id="Q_FOREACH">
<db:title>Q_FOREACH(<db:emphasis>variable</db:emphasis>, <db:emphasis>container</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:methodname>Q_FOREACH</db:methodname>
<db:methodparam>
<db:type></db:type>
<db:parameter>variable</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type></db:type>
<db:parameter>container</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">macrowithparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_FOREACH(variable, container)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Same as foreach(<db:code role="parameter">variable</db:code>, <db:code role="parameter">container</db:code>).</db:para>
<db:para>This macro is available even when no_keywords is specified using the .pro file's CONFIG variable.</db:para>
<db:note>
<db:para>Since Qt 5.7, the use of this macro is discouraged. Use C++11 range-based for, possibly with std::as_const(), as needed.</db:para>
</db:note>
</db:section>
<db:section xml:id="Q_FOREVER">
<db:title>Q_FOREVER</db:title>
<db:methodsynopsis>
<db:methodname>Q_FOREVER</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_FOREVER</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Same as <db:link xlink:href="qforeach-proxy.xml#forever">forever</db:link>.</db:para>
<db:para>This macro is available even when no_keywords is specified using the .pro file's CONFIG variable.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qforeach-proxy.xml#foreach">foreach</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="foreach">
<db:title>foreach(<db:emphasis>variable</db:emphasis>, <db:emphasis>container</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:methodname>foreach</db:methodname>
<db:methodparam>
<db:type></db:type>
<db:parameter>variable</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type></db:type>
<db:parameter>container</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">macrowithparams</db:synopsisinfo>
<db:synopsisinfo role="signature">foreach(variable, container)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This macro is used to implement Qt's foreach loop. The <db:code role="parameter">variable</db:code> parameter is a variable name or variable definition; the <db:code role="parameter">container</db:code> parameter is a Qt container whose value type corresponds to the type of the variable. See <db:link xlink:href="foreach-keyword.xml#the-foreach-keyword">The foreach Keyword</db:link> for details.</db:para>
<db:para>If you're worried about namespace pollution, you can disable this macro by adding the following line to your .pro file:</db:para>
<db:programlisting language="cpp">CONFIG += no_keywords
</db:programlisting>
<db:note>
<db:para>Since Qt 5.7, the use of this macro is discouraged. Use C++11 range-based for, possibly with std::as_const(), as needed.</db:para>
</db:note>
</db:section>
<db:section xml:id="forever">
<db:title>forever</db:title>
<db:methodsynopsis>
<db:methodname>forever</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">forever</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This macro is provided for convenience for writing infinite loops.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">forever {
    ...
}
</db:programlisting>
<db:para>It is equivalent to for (;;).</db:para>
<db:para>If you're worried about namespace pollution, you can disable this macro by adding the following line to your .pro file:</db:para>
<db:programlisting language="cpp">CONFIG += no_keywords
</db:programlisting>
<db:para>If using other build systems, you can add QT_NO_KEYWORDS to the list of pre-defined macros.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qforeach-proxy.xml#Q_FOREVER">Q_FOREVER</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
