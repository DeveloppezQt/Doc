<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAttribute Class</db:title>
<db:subtitle>Qt3DCore::QAttribute</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Defines an attribute and how data should be read from a <db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link>.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Qt3DCore/QAttribute</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3DCore)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3DCore)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dcore</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-core-attribute.xml" xlink:role="">Attribute</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qnode.xml" xlink:role="class">Qt3DCore::QNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>There are 3 types of attributes.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qattribute.xml#AttributeType-enum">VertexAttribute</db:link>: used to define data to be read on a per vertex basis</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qattribute.xml#AttributeType-enum">IndexAttribute</db:link>: used to define vertex indices when indexed draw calls are to be used</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qattribute.xml#AttributeType-enum">DrawIndirectAttribute</db:link>: used to specify the DrawIndirect buffer to be used when indirect draw calls are to be used</db:para>
</db:listitem>
</db:itemizedlist>
<db:note>
<db:para>when an attribute is of type <db:link xlink:href="qt3dcore-qattribute.xml#AttributeType-enum">DrawIndirectAttribute</db:link>, only count, stride and offset are relevant.</db:para>
</db:note>
<db:para>When providing your own attributes, it may make sense to name your attribute using helpers such as <db:link xlink:href="qt3dcore-qattribute.xml#defaultPositionAttributeName">QAttribute::defaultPositionAttributeName</db:link>() as that will ensure your geometry will be compatible with picking and the various materials provided in the Qt3DExtras module.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="AttributeType-enum">
<db:title>enum QAttribute::AttributeType</db:title>
<db:para>The type of the attribute.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link></db:emphasis>::VertexAttribute</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link></db:emphasis>::IndexAttribute</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link></db:emphasis>::DrawIndirectAttribute</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="VertexBaseType-enum">
<db:title>enum QAttribute::VertexBaseType</db:title>
<db:para>The type of the data.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link></db:emphasis>::Byte</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link></db:emphasis>::UnsignedByte</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link></db:emphasis>::Short</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link></db:emphasis>::UnsignedShort</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link></db:emphasis>::Int</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link></db:emphasis>::UnsignedInt</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link></db:emphasis>::HalfFloat</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link></db:emphasis>::Float</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link></db:emphasis>::Double</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="attributeType-prop">
<db:title>attributeType : AttributeType</db:title>
<db:para>Holds the attribute type.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qattribute.xml#AttributeType-enum">Qt3DCore::QAttribute::AttributeType</db:link></db:type> <db:emphasis role="bold">attributeType</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setAttributeType</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qattribute.xml#AttributeType-enum">Qt3DCore::QAttribute::AttributeType</db:link></db:type> <db:emphasis>attributeType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">attributeTypeChanged</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qattribute.xml#AttributeType-enum">Qt3DCore::QAttribute::AttributeType</db:link></db:type> <db:emphasis>attributeType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="buffer-prop">
<db:title>buffer : Qt3DCore::QBuffer*</db:title>
<db:para>Holds the buffer.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qbuffer.xml">Qt3DCore::QBuffer</db:link></db:type> *<db:emphasis role="bold">buffer</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setBuffer</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qbuffer.xml">Qt3DCore::QBuffer</db:link></db:type> *<db:emphasis>buffer</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">bufferChanged</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qbuffer.xml">Qt3DCore::QBuffer</db:link></db:type> *<db:emphasis>buffer</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="byteOffset-prop">
<db:title>byteOffset : uint</db:title>
<db:para>Holds the byte offset.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>uint</db:type> <db:emphasis role="bold">byteOffset</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setByteOffset</db:emphasis>(<db:type>uint</db:type> <db:emphasis>byteOffset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">byteOffsetChanged</db:emphasis>(<db:type>uint</db:type> <db:emphasis>byteOffset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="byteStride-prop">
<db:title>byteStride : uint</db:title>
<db:para>Holds the byte stride.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>uint</db:type> <db:emphasis role="bold">byteStride</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setByteStride</db:emphasis>(<db:type>uint</db:type> <db:emphasis>byteStride</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">byteStrideChanged</db:emphasis>(<db:type>uint</db:type> <db:emphasis>byteStride</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="count-prop">
<db:title>count : uint</db:title>
<db:para>Holds the count.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>uint</db:type> <db:emphasis role="bold">count</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setCount</db:emphasis>(<db:type>uint</db:type> <db:emphasis>count</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">countChanged</db:emphasis>(<db:type>uint</db:type> <db:emphasis>count</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="divisor-prop">
<db:title>divisor : uint</db:title>
<db:para>Holds the divisor.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>uint</db:type> <db:emphasis role="bold">divisor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setDivisor</db:emphasis>(<db:type>uint</db:type> <db:emphasis>divisor</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">divisorChanged</db:emphasis>(<db:type>uint</db:type> <db:emphasis>divisor</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="name-prop">
<db:title>name : QString</db:title>
<db:para>Holds the name.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QString</db:type> <db:emphasis role="bold">name</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setName</db:emphasis>(const <db:type>QString</db:type> &amp;<db:emphasis>name</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">nameChanged</db:emphasis>(const <db:type>QString</db:type> &amp;<db:emphasis>name</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="vertexBaseType-prop">
<db:title>vertexBaseType : VertexBaseType</db:title>
<db:para>Holds the data type.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qattribute.xml#VertexBaseType-enum">Qt3DCore::QAttribute::VertexBaseType</db:link></db:type> <db:emphasis role="bold">vertexBaseType</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setVertexBaseType</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qattribute.xml#VertexBaseType-enum">Qt3DCore::QAttribute::VertexBaseType</db:link></db:type> <db:emphasis>type</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">vertexBaseTypeChanged</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qattribute.xml#VertexBaseType-enum">Qt3DCore::QAttribute::VertexBaseType</db:link></db:type> <db:emphasis>vertexBaseType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="vertexSize-prop">
<db:title>vertexSize : uint</db:title>
<db:para>Holds the data size, it can only be 1 to 4 units (scalars and vectors), 9 units (3x3 matrices) or 16 units (4x4 matrices).</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>uint</db:type> <db:emphasis role="bold">vertexSize</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setVertexSize</db:emphasis>(<db:type>uint</db:type> <db:emphasis>size</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">vertexSizeChanged</db:emphasis>(<db:type>uint</db:type> <db:emphasis>vertexSize</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QAttribute">
<db:title>[explicit] QAttribute::QAttribute(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a new <db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link> with <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="QAttribute-1">
<db:title>[explicit] QAttribute::QAttribute(Qt3DCore::QBuffer *<db:emphasis>buf</db:emphasis>, Qt3DCore::QAttribute::VertexBaseType <db:emphasis>type</db:emphasis>, uint <db:emphasis>dataSize</db:emphasis>, uint <db:emphasis>count</db:emphasis>, uint <db:emphasis>offset</db:emphasis> = 0, uint <db:emphasis>stride</db:emphasis> = 0, Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a new <db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link> from <db:code role="parameter">buf</db:code> of <db:code role="parameter">type</db:code>, <db:code role="parameter">dataSize</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">offset</db:code>, and <db:code role="parameter">stride</db:code> with <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="QAttribute-2">
<db:title>[explicit] QAttribute::QAttribute(Qt3DCore::QBuffer *<db:emphasis>buf</db:emphasis>, const QString &amp;<db:emphasis>name</db:emphasis>, Qt3DCore::QAttribute::VertexBaseType <db:emphasis>type</db:emphasis>, uint <db:emphasis>dataSize</db:emphasis>, uint <db:emphasis>count</db:emphasis>, uint <db:emphasis>offset</db:emphasis> = 0, uint <db:emphasis>stride</db:emphasis> = 0, Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a new <db:link xlink:href="qt3dcore-qattribute.xml">QAttribute</db:link> named <db:code role="parameter">name</db:code> from <db:code role="parameter">buf</db:code> of <db:code role="parameter">type</db:code>, <db:code role="parameter">dataSize</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">offset</db:code>, and <db:code role="parameter">stride</db:code> with <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dataSizeChanged">
<db:title>void QAttribute::dataSizeChanged(uint <db:emphasis>vertexSize</db:emphasis>)</db:title>
<db:para>The signal is emitted with <db:code role="parameter">vertexSize</db:code> when the dataSize changes.</db:para>
</db:section>
<db:section xml:id="dataTypeChanged">
<db:title>void QAttribute::dataTypeChanged(Qt3DCore::QAttribute::VertexBaseType <db:emphasis>vertexBaseType</db:emphasis>)</db:title>
<db:para>The signal is emitted with <db:code role="parameter">vertexBaseType</db:code> when the dataType changed.</db:para>
</db:section>
<db:section xml:id="defaultColorAttributeName">
<db:title>[static] QString QAttribute::defaultColorAttributeName()</db:title>
<db:para>QAttribute::defaultColorAttributeName Returns the name of the default color attribute</db:para>
<db:note>
<db:para>Getter function for property defaultColorAttributeName. </db:para>
</db:note>
</db:section>
<db:section xml:id="defaultJointIndicesAttributeName">
<db:title>[static] QString QAttribute::defaultJointIndicesAttributeName()</db:title>
<db:para>QAttribute::defaultJointIndicesAttributeName Returns the name of the default joint indices attribute</db:para>
<db:note>
<db:para>Getter function for property defaultJointIndicesAttributeName. </db:para>
</db:note>
</db:section>
<db:section xml:id="defaultJointWeightsAttributeName">
<db:title>[static] QString QAttribute::defaultJointWeightsAttributeName()</db:title>
<db:para><db:link xlink:href="qt3dcore-qattribute.xml#defaultJointIndicesAttributeName">QAttribute::defaultJointIndicesAttributeName</db:link> Returns the name of the default joint weights attribute</db:para>
<db:note>
<db:para>Getter function for property defaultJointWeightsAttributeName. </db:para>
</db:note>
</db:section>
<db:section xml:id="defaultNormalAttributeName">
<db:title>[static] QString QAttribute::defaultNormalAttributeName()</db:title>
<db:para>QAttribute::defaultNormalAttributeName Returns the name of the default normal attribute</db:para>
<db:note>
<db:para>Getter function for property defaultNormalAttributeName. </db:para>
</db:note>
</db:section>
<db:section xml:id="defaultPositionAttributeName">
<db:title>[static] QString QAttribute::defaultPositionAttributeName()</db:title>
<db:para>QAttribute::defaultPositionAttributeName Returns the name of the default position attribute</db:para>
<db:note>
<db:para>Getter function for property defaultPositionAttributeName. </db:para>
</db:note>
</db:section>
<db:section xml:id="defaultTangentAttributeName">
<db:title>[static] QString QAttribute::defaultTangentAttributeName()</db:title>
<db:para>QAttribute::defaultTangentAttributeName Returns the name of the default tangent attribute</db:para>
<db:note>
<db:para>Getter function for property defaultTangentAttributeName. </db:para>
</db:note>
</db:section>
<db:section xml:id="defaultTextureCoordinate1AttributeName">
<db:title>[static] QString QAttribute::defaultTextureCoordinate1AttributeName()</db:title>
<db:para>QAttribute::defaultTextureCoordinate1AttributeName Returns the name of the default attribute for the second layer of texture coordinates</db:para>
<db:note>
<db:para>Getter function for property defaultTextureCoordinate1AttributeName. </db:para>
</db:note>
</db:section>
<db:section xml:id="defaultTextureCoordinate2AttributeName">
<db:title>[static] QString QAttribute::defaultTextureCoordinate2AttributeName()</db:title>
<db:para>QAttribute::defaultTextureCoordinate2AttributeName Returns the name of the default attribute for the third layer of texture coordinates</db:para>
<db:note>
<db:para>Getter function for property defaultTextureCoordinate2AttributeName. </db:para>
</db:note>
</db:section>
<db:section xml:id="defaultTextureCoordinateAttributeName">
<db:title>[static] QString QAttribute::defaultTextureCoordinateAttributeName()</db:title>
<db:para>QAttribute::defaultTextureCoordinateAttributeName Returns the name of the default texture coordinate attribute</db:para>
<db:note>
<db:para>Getter function for property defaultTextureCoordinateAttributeName. </db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="QBufferPtr-typedef">
<db:title>QBufferPtr</db:title>
</db:section>
</db:section>
</db:article>
