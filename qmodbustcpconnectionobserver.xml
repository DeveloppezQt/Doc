<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QModbusTcpConnectionObserver Class</db:title>
<db:productname>QtSerialBus</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Serial Bus Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qmodbustcpconnectionobserver.xml">QModbusTcpConnectionObserver</db:link> class represents the interface for objects that can be passed to <db:link xlink:href="qmodbustcpserver.xml#installConnectionObserver">QModbusTcpServer::installConnectionObserver</db:link>.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QModbusTcpConnectionObserver</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS SerialBus)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::SerialBus)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += serialbus</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The interface must be implemented by the developer to be able to monitor every incoming TCP connection from another Modbus client.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmodbustcpserver.xml#installConnectionObserver">QModbusTcpServer::installConnectionObserver</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="acceptNewConnection">
<db:title>[pure virtual] bool QModbusTcpConnectionObserver::acceptNewConnection(QTcpSocket *<db:emphasis>newClient</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>bool</db:type>
<db:methodname>acceptNewConnection</db:methodname>
<db:methodparam>
<db:type>QTcpSocket *</db:type>
<db:parameter>newClient</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool acceptNewConnection(QTcpSocket *newClient) = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function is a callback for every incoming TCP connection. The user should provide <db:code role="parameter">newClient</db:code> to receive a notification when a new client connection is established and to determine whether the connection is to be accepted.</db:para>
<db:para>The function should return <db:code>true</db:code> if the connection is to be accepted. Otherwise, the socket is closed/rejected.</db:para>
</db:section>
</db:section>
</db:article>
