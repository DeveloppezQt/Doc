<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QXmlEntityResolver Class</db:title>
<db:productname>QtXml</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt XML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qxmlentityresolver.xml">QXmlEntityResolver</db:link> class provides an interface to resolve external entities contained in XML data.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QXmlEntityResolver</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qxmldefaulthandler.xml" xlink:role="class">QXmlDefaultHandler</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QXmlEntityResolver is part of <db:simplelist><db:member><db:link xlink:href="xml-tools.xml">XML Classes</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>If an application needs to implement customized handling for external entities, it must implement this interface, i.e. <db:link xlink:href="qxmlentityresolver.xml#resolveEntity">resolveEntity</db:link>(), and register it with <db:link xlink:href="qxmlreader.xml#setEntityResolver">QXmlReader::setEntityResolver</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qxmldtdhandler.xml">QXmlDTDHandler</db:link></db:member>
<db:member><db:link xlink:href="qxmldeclhandler.xml">QXmlDeclHandler</db:link></db:member>
<db:member><db:link xlink:href="qxmlcontenthandler.xml">QXmlContentHandler</db:link></db:member>
<db:member><db:link xlink:href="qxmlerrorhandler.xml">QXmlErrorHandler</db:link></db:member>
<db:member><db:link xlink:href="qxmllexicalhandler.xml">QXmlLexicalHandler</db:link></db:member>
<db:member><db:link xlink:href="xml-sax.xml#introduction-to-sax2">Introduction to SAX2</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="dtor.QXmlEntityResolver">
<db:title>[virtual noexcept] QXmlEntityResolver::~QXmlEntityResolver()</db:title>
<db:para>Destroys the entity resolver.</db:para>
</db:section>
<db:section xml:id="errorString">
<db:title>[pure virtual] QString QXmlEntityResolver::errorString() const</db:title>
<db:para>The reader calls this function to get an error string if any of the handler functions returns false.</db:para>
</db:section>
<db:section xml:id="resolveEntity">
<db:title>[pure virtual] bool QXmlEntityResolver::resolveEntity(const QString &amp;<db:emphasis>publicId</db:emphasis>, const QString &amp;<db:emphasis>systemId</db:emphasis>, QXmlInputSource *&amp;<db:emphasis>ret</db:emphasis>)</db:title>
<db:para>The reader calls this function before it opens any external entity, except the top-level document entity. The application may request the reader to resolve the entity itself (<db:code role="parameter">ret</db:code> is 0) or to use an entirely different input source (<db:code role="parameter">ret</db:code> points to the input source).</db:para>
<db:para>The reader deletes the input source <db:code role="parameter">ret</db:code> when it no longer needs it, so you should allocate it on the heap with new.</db:para>
<db:para>The argument <db:code role="parameter">publicId</db:code> is the public identifier of the external entity, <db:code role="parameter">systemId</db:code> is the system identifier of the external entity and <db:code role="parameter">ret</db:code> is the return value of this function. If <db:code role="parameter">ret</db:code> is 0 the reader should resolve the entity itself, if it is non-zero it must point to an input source which the reader uses instead.</db:para>
<db:para>If this function returns false the reader stops parsing and reports an error. The reader uses the function <db:link xlink:href="qxmlentityresolver.xml#errorString">errorString</db:link>() to get the error message.</db:para>
</db:section>
</db:section>
</db:article>
