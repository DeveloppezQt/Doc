<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Chapter 6: Skipping Tests with QSKIP</db:title>
<db:productname>QtTestLib</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Test Reference Documentation</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="qttestlib-tutorial5-example.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Chapter 5"/></db:extendedlink>
<db:abstract>
<db:para>How to skip tests in certain cases.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="using-qskip-description-in-a-test-function">
<db:title>Using QSKIP(<db:code role="parameter">description</db:code>) in a test function</db:title>
<db:para>If the <db:link xlink:href="qtest.xml#QSKIP">QSKIP</db:link>() macro is called from a test function, it stops the execution of the test without adding a failure to the test log. It can be used to skip tests that are certain to fail. The text in the QSKIP <db:code role="parameter">description</db:code> parameter is appended to the test log, and should explain why the test was not carried out.</db:para>
<db:para>QSKIP can be used to skip testing when the implementation is not yet complete or not supported on a certain platform. When there are known failures, <db:link xlink:href="qtest.xml#QEXPECT_FAIL">QEXPECT_FAIL</db:link> is recommended, as it supports running the rest of the test, when possible.</db:para>
<db:para>Example of QSKIP in a test function:</db:para>
<db:programlisting language="cpp">if (tst_Databases::getMySqlVersion(db).section(QChar('.'), 0, 0).toInt() &lt; 5)
    QSKIP(&quot;Test requires MySQL &gt;= 5.0&quot;);
</db:programlisting>
<db:para>In a data-driven test, each call to <db:link xlink:href="qtest.xml#QSKIP">QSKIP</db:link>() skips only the current row of test data. If the data-driven test contains an unconditional call to QSKIP, it produces a skip message for each row of test data.</db:para>
</db:section>
<db:section xml:id="using-qskip-in-a-data-function">
<db:title>Using QSKIP in a _data function</db:title>
<db:para>If called from a _data function, the <db:link xlink:href="qtest.xml#QSKIP">QSKIP</db:link>() macro stops execution of the _data function. This prevents execution of the associated test function.</db:para>
<db:para>See below for an example:</db:para>
<db:programlisting language="cpp">    QTest::addColumn&lt;bool&gt;(&quot;bool&quot;);
    QTest::newRow(&quot;local.1&quot;) &lt;&lt; false;
    QTest::newRow(&quot;local.2&quot;) &lt;&lt; true;

    QSKIP(&quot;skipping all&quot;);
</db:programlisting>
</db:section>
<db:section xml:id="using-qskip-from-inittestcase-or-inittestcase-data">
<db:title>Using QSKIP from initTestCase() or initTestCase_data()</db:title>
<db:para>If called from <db:code>initTestCase()</db:code> or <db:code>initTestCase_data()</db:code>, the <db:link xlink:href="qtest.xml#QSKIP">QSKIP</db:link>() macro will skip all test and _data functions.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qttest-best-practices-qdoc.xml#select-appropriate-mechanisms-to-exclude-tests">Select Appropriate Mechanisms to Exclude Tests</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
