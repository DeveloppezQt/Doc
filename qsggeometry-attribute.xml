<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title></db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qsggeometry-attribute.xml">QSGGeometry::Attribute</db:link> describes a single vertex attribute in a <db:link xlink:href="qsggeometry.xml">QSGGeometry</db:link>.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Attribute</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Quick)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Quick)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += quick</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qsggeometry-attribute.xml">QSGGeometry::Attribute</db:link> struct describes the attribute register position, the size of the attribute tuple and the attribute type.</db:para>
<db:para>It also contains a hint to the renderer if this attribute is the attribute describing the position. The scene graph renderer may use this information to perform optimizations.</db:para>
<db:para>It contains a number of bits which are reserved for future use.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsggeometry.xml">QSGGeometry</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="create">
<db:title>[static] QSGGeometry::Attribute Attribute::create(int <db:emphasis>pos</db:emphasis>, int <db:emphasis>tupleSize</db:emphasis>, int <db:emphasis>primitiveType</db:emphasis>, bool <db:emphasis>isPosition</db:emphasis> = false)</db:title>
<db:para>Creates a new <db:link xlink:href="qsggeometry-attribute.xml">QSGGeometry::Attribute</db:link> for attribute register <db:code role="parameter">pos</db:code> with <db:code role="parameter">tupleSize</db:code>. The <db:code role="parameter">primitiveType</db:code> can be any of the supported types from <db:link xlink:href="qsggeometry.xml#Type-enum">QSGGeometry::Type</db:link>, such as <db:link xlink:href="qsggeometry.xml#Type-enum">QSGGeometry::FloatType</db:link> or <db:link xlink:href="qsggeometry.xml#Type-enum">QSGGeometry::UnsignedByteType</db:link>.</db:para>
<db:para>If the attribute describes the position for the vertex, the <db:code role="parameter">isPosition</db:code> hint should be set to <db:code>true</db:code>. The scene graph renderer may use this information to perform optimizations.</db:para>
<db:para>Use the create function to construct the attribute, rather than an initialization list, to ensure that all fields are initialized.</db:para>
</db:section>
<db:section xml:id="createWithAttributeType">
<db:title>[static] QSGGeometry::Attribute Attribute::createWithAttributeType(int <db:emphasis>pos</db:emphasis>, int <db:emphasis>tupleSize</db:emphasis>, int <db:emphasis>primitiveType</db:emphasis>, QSGGeometry::AttributeType <db:emphasis>attributeType</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qsggeometry-attribute.xml">QSGGeometry::Attribute</db:link> for attribute register <db:code role="parameter">pos</db:code> with <db:code role="parameter">tupleSize</db:code>. The <db:code role="parameter">primitiveType</db:code> can be any of the supported types from <db:link xlink:href="qsggeometry.xml#Type-enum">QSGGeometry::Type</db:link>, such as <db:link xlink:href="qsggeometry.xml#Type-enum">QSGGeometry::FloatType</db:link> or <db:link xlink:href="qsggeometry.xml#Type-enum">QSGGeometry::UnsignedByteType</db:link>.</db:para>
<db:para><db:code role="parameter">attributeType</db:code> describes the intended use of the attribute.</db:para>
<db:para>Use the create function to construct the attribute, rather than an initialization list, to ensure that all fields are initialized.</db:para>
</db:section>
</db:section>
</db:article>
