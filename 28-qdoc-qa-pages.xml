<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QA Pages</db:title>
<db:productname>QDoc</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>QDoc Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="21-3-qt-dita-xml-output.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Generating DITA XML Output"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="qdoc-index.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="QDoc Manual"/></db:extendedlink>
<db:abstract>
<db:para>QDoc Manual.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>QDoc Manual</db:para>
<db:para>qdoc can generate some extra HTML pages that can be useful for debugging qdoc documentation. These <db:emphasis>QA</db:emphasis> pages make it easier for those who write documentation to find links that either go to the wrong targets or don't go anywhere at all.</db:para>
<db:section xml:id="generating-the-qa-pages">
<db:title>Generating the QA Pages</db:title>
<db:para>Add <db:code>-write-qa-pages</db:code> to the command line to tell qdoc to generate the QA pages. If this option is not provided, the QA pages will not be generated, and previolusly generated QA pages will be deleted.</db:para>
</db:section>
<db:section xml:id="finding-the-module-s-main-qa-page">
<db:title>Finding the Module's Main QA Page</db:title>
<db:para>The main QA page for a module is not linked into the module's generated documentation, but it is located in the same output directory. To find the top-level QA page for module <db:emphasis>xxx</db:emphasis>, set your browser to the qdoc output directory for module <db:emphasis>xxx</db:emphasis>. Several files whose names begin with <db:emphasis>aaa</db:emphasis> appear at the top of the list. These are the QA pages for module <db:emphasis>xxx</db:emphasis>. The file names begin with <db:emphasis>aaa</db:emphasis> to ensure that they are easy to find at the top of the directory.</db:para>
<db:para>For module <db:emphasis>xxx</db:emphasis>, find the file <db:emphasis>aaa-xxx-qa-page.html</db:emphasis>. This is the top-level QA page for module <db:emphasis>xxx</db:emphasis>. Load that file into the browser. The top-level QA page shows a table that contains links to several QA sub-pages.</db:para>
<db:para>For example, the main QA page for <db:link xlink:href="qtcore-module.xml">QtCore</db:link> is <db:code>aaa-qtcore-qa-page.html</db:code>. This was the table for <db:link xlink:href="qtcore-module.xml">QtCore</db:link> at one point:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qa-table.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Each table entry shows the number of links from <db:link xlink:href="qtcore-module.xml">QtCore</db:link> to some other module, except for the last entry, which shows the number of broken links in <db:link xlink:href="qtcore-module.xml">QtCore</db:link>. Click the <db:emphasis role="bold">qtquick</db:emphasis> entry to load the QA subpage showing the links from <db:link xlink:href="qtcore-module.xml">QtCore</db:link> to <db:link xlink:href="qtquick-module.xml">QtQuick</db:link>.</db:para>
</db:section>
<db:section xml:id="links-to-links-page">
<db:title>Links To Links Page</db:title>
<db:para>Clicking the <db:emphasis role="bold">qtquick</db:emphasis> table entry on the main QA page for <db:link xlink:href="qtcore-module.xml">QtCore</db:link> loads the QA subpage showing a table containing all the links from <db:link xlink:href="qtcore-module.xml">QtCore</db:link> to <db:link xlink:href="qtquick-module.xml">QtQuick</db:link>. The table contains all the links constructed with the <db:link xlink:href="08-qdoc-commands-creatinglinks.xml#l-link">\l command</db:link>, as well as the autolinks.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/links-to-links.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>At the time this table was generated, there were six links from <db:link xlink:href="qtcore-module.xml">QtCore</db:link> to <db:link xlink:href="qtquick-module.xml">QtQuick</db:link>. The first column of each table entry contains a link to some link in <db:link xlink:href="qtcore-module.xml">QtCore</db:link>. The link text as it appears in <db:link xlink:href="qtcore-module.xml">QtCore</db:link> is shown. The second and third columns contain the source file name and line number for where qdoc saw the link in a qdoc comment.</db:para>
<db:note>
<db:para>The line number will normally refer to the first line of the comment where qdoc saw the link.</db:para>
</db:note>
<db:para>Clicking on a link in the table takes you to that link in the documentation. There the link will be marked with three red asterisks. For example, clicking on the link in the fifth table entry takes you here:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/link-to-qquickitem.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The link is marked with three red asterisks. Now you can click on the actual link to check that it goes to the correct place. In this case, the link should go to the reference page for the <db:link xlink:href="qquickitem.xml">QQuickItem</db:link> class. You can check each link in the table this way. If you find a link that goes to the wrong place, use the source file name and line number to find the link, and fix the problem using the square bracket notation for the <db:link xlink:href="08-qdoc-commands-creatinglinks.xml#l-link">\l command</db:link>.</db:para>
</db:section>
</db:article>
