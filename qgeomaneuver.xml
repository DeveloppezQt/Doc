<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGeoManeuver Class</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link> class represents the information relevant to the point at which two QGeoRouteSegments meet.</db:para>
<db:para>This class was introduced in Qt 5.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGeoManeuver</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += location</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGeoManeuver is part of <db:simplelist><db:member>QtLocation-routing</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qgeoroutesegment.xml">QGeoRouteSegment</db:link> instances can be thought of as edges on a routing graph, with <db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link> instances as optional labels attached to the vertices of the graph.</db:para>
<db:para>The most interesting information help in a <db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link> instance is normally the textual navigation to provide and the position at which to provide it, accessible by <db:link xlink:href="qgeomaneuver.xml#instructionText">instructionText</db:link>() and <db:link xlink:href="qgeomaneuver.xml#position">position</db:link>() respectively.</db:para>
<db:para>It is also possible to determine if a routing waypoint has been passed by checking if <db:link xlink:href="qgeomaneuver.xml#waypoint">waypoint</db:link>() returns a valid <db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link>.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="InstructionDirection-enum">
<db:title>enum QGeoManeuver::InstructionDirection</db:title>
<db:para>Describes the change in direction associated with the instruction text that is associated with a QGeoManaeuver.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link></db:emphasis>::NoDirection</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>There is no direction associated with the instruction text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link></db:emphasis>::DirectionForward</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The instruction indicates that the direction of travel does not need to change.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link></db:emphasis>::DirectionBearRight</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The instruction indicates that the direction of travel should bear to the right.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link></db:emphasis>::DirectionLightRight</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>The instruction indicates that a light turn to the right is required.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link></db:emphasis>::DirectionRight</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>The instruction indicates that a turn to the right is required.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link></db:emphasis>::DirectionHardRight</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>The instruction indicates that a hard turn to the right is required.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link></db:emphasis>::DirectionUTurnRight</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>The instruction indicates that a u-turn to the right is required.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link></db:emphasis>::DirectionUTurnLeft</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>The instruction indicates that a u-turn to the left is required.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link></db:emphasis>::DirectionHardLeft</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>The instruction indicates that a hard turn to the left is required.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link></db:emphasis>::DirectionLeft</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>The instruction indicates that a turn to the left is required.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link></db:emphasis>::DirectionLightLeft</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>The instruction indicates that a light turn to the left is required.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeomaneuver.xml">QGeoManeuver</db:link></db:emphasis>::DirectionBearLeft</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>The instruction indicates that the direction of travel should bear to the left.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGeoManeuver">
<db:title>QGeoManeuver::QGeoManeuver()</db:title>
<db:para>Constructs a invalid maneuver object.</db:para>
<db:para>The maneuver will remain invalid until one of <db:link xlink:href="qgeomaneuver.xml#setPosition">setPosition</db:link>(), <db:link xlink:href="qgeomaneuver.xml#setInstructionText">setInstructionText</db:link>(), <db:link xlink:href="qgeomaneuver.xml#setDirection">setDirection</db:link>(), <db:link xlink:href="qgeomaneuver.xml#setTimeToNextInstruction">setTimeToNextInstruction</db:link>(), <db:link xlink:href="qgeomaneuver.xml#setDistanceToNextInstruction">setDistanceToNextInstruction</db:link>() or <db:link xlink:href="qgeomaneuver.xml#setWaypoint">setWaypoint</db:link>() is called.</db:para>
</db:section>
<db:section xml:id="QGeoManeuver-1">
<db:title>QGeoManeuver::QGeoManeuver(const QGeoManeuver &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a maneuver object from the contents of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QGeoManeuver">
<db:title>[noexcept] QGeoManeuver::~QGeoManeuver()</db:title>
<db:para>Destroys this maneuver object.</db:para>
</db:section>
<db:section xml:id="direction">
<db:title>QGeoManeuver::InstructionDirection QGeoManeuver::direction() const</db:title>
<db:para>Returns the direction associated with the associated instruction.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeomaneuver.xml#setDirection">setDirection</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="distanceToNextInstruction">
<db:title>qreal QGeoManeuver::distanceToNextInstruction() const</db:title>
<db:para>Returns the distance, in meters, between the point at which the associated instruction was issued and the point that the next instruction should be issued.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeomaneuver.xml#setDistanceToNextInstruction">setDistanceToNextInstruction</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="instructionText">
<db:title>QString QGeoManeuver::instructionText() const</db:title>
<db:para>Returns the textual navigation instructions.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeomaneuver.xml#setInstructionText">setInstructionText</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isValid">
<db:title>bool QGeoManeuver::isValid() const</db:title>
<db:para>Returns whether this maneuver is valid or not.</db:para>
<db:para>Invalid maneuvers are used when there is no information that needs to be attached to the endpoint of a <db:link xlink:href="qgeoroutesegment.xml">QGeoRouteSegment</db:link> instance.</db:para>
</db:section>
<db:section xml:id="position">
<db:title>QGeoCoordinate QGeoManeuver::position() const</db:title>
<db:para>Returns the position where <db:link xlink:href="qgeomaneuver.xml#instructionText">instructionText</db:link>() should be displayed.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeomaneuver.xml#setPosition">setPosition</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDirection">
<db:title>void QGeoManeuver::setDirection(QGeoManeuver::InstructionDirection <db:emphasis>direction</db:emphasis>)</db:title>
<db:para>Sets the direction associated with the associated instruction to <db:code role="parameter">direction</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeomaneuver.xml#direction">direction</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDistanceToNextInstruction">
<db:title>void QGeoManeuver::setDistanceToNextInstruction(qreal <db:emphasis>distance</db:emphasis>)</db:title>
<db:para>Sets the distance, in meters, between the point at which the associated instruction was issued and the point that the next instruction should be issued to <db:code role="parameter">distance</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeomaneuver.xml#distanceToNextInstruction">distanceToNextInstruction</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setInstructionText">
<db:title>void QGeoManeuver::setInstructionText(const QString &amp;<db:emphasis>instructionText</db:emphasis>)</db:title>
<db:para>Sets the textual navigation instructions to <db:code role="parameter">instructionText</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeomaneuver.xml#instructionText">instructionText</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPosition">
<db:title>void QGeoManeuver::setPosition(const QGeoCoordinate &amp;<db:emphasis>position</db:emphasis>)</db:title>
<db:para>Sets the position where <db:link xlink:href="qgeomaneuver.xml#instructionText">instructionText</db:link>() should be displayed to <db:code role="parameter">position</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeomaneuver.xml#position">position</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTimeToNextInstruction">
<db:title>void QGeoManeuver::setTimeToNextInstruction(int <db:emphasis>secs</db:emphasis>)</db:title>
<db:para>Sets the estimated time it will take to travel from the point at which the associated instruction was issued and the point that the next instruction should be issued, in seconds, to <db:code role="parameter">secs</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeomaneuver.xml#timeToNextInstruction">timeToNextInstruction</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setWaypoint">
<db:title>void QGeoManeuver::setWaypoint(const QGeoCoordinate &amp;<db:emphasis>coordinate</db:emphasis>)</db:title>
<db:para>Sets the waypoint associated with this maneuver to <db:code role="parameter">coordinate</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeomaneuver.xml#waypoint">waypoint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="timeToNextInstruction">
<db:title>int QGeoManeuver::timeToNextInstruction() const</db:title>
<db:para>Returns the estimated time it will take to travel from the point at which the associated instruction was issued and the point that the next instruction should be issued, in seconds.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeomaneuver.xml#setTimeToNextInstruction">setTimeToNextInstruction</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="waypoint">
<db:title>QGeoCoordinate QGeoManeuver::waypoint() const</db:title>
<db:para>Returns the waypoint associated with this maneuver.</db:para>
<db:para>If there is not waypoint associated with this maneuver an invalid <db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link> will be returned.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeomaneuver.xml#setWaypoint">setWaypoint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QGeoManeuver::operator!=(const QGeoManeuver &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns whether this maneuver is not equal to <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QGeoManeuver &amp;QGeoManeuver::operator=(const QGeoManeuver &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns <db:code role="parameter">other</db:code> to this maneuver object and then returns a reference to this maneuver object.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QGeoManeuver::operator==(const QGeoManeuver &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns whether this maneuver is equal to <db:code role="parameter">other</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
