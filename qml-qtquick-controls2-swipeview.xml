<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>SwipeView QML Type</db:title>
<db:productname>QtQuickControls2</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 2 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Enables the user to navigate pages by swiping sideways.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 2.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-container.xml">Container</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>SwipeView is part of <db:simplelist><db:member>qtquickcontrols2-navigation</db:member><db:member>qtquickcontrols2-containers</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link> provides a swipe-based navigation model.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-swipeview.gif"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link> is populated with a set of pages. One page is visible at a time. The user can navigate between the pages by swiping sideways. Notice that <db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link> itself is entirely non-visual. It is recommended to combine it with <db:link xlink:href="qml-qtquick-controls2-pageindicator.xml">PageIndicator</db:link>, to give the user a visual clue that there are multiple pages.</db:para>
<db:programlisting language="qml">SwipeView {
    id: view

    currentIndex: 1
    anchors.fill: parent

    Item {
        id: firstPage
    }
    Item {
        id: secondPage
    }
    Item {
        id: thirdPage
    }
}

PageIndicator {
    id: indicator

    count: view.count
    currentIndex: view.currentIndex

    anchors.bottom: view.bottom
    anchors.horizontalCenter: parent.horizontalCenter
}
</db:programlisting>
<db:para>As shown above, <db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link> is typically populated with a static set of pages that are defined inline as children of the view. It is also possible to <db:link xlink:href="qml-qtquick-controls2-container.xml#addItem-method">add</db:link>, <db:link xlink:href="qml-qtquick-controls2-container.xml#insertItem-method">insert</db:link>, <db:link xlink:href="qml-qtquick-controls2-container.xml#moveItem-method">move</db:link>, and <db:link xlink:href="qml-qtquick-controls2-container.xml#removeItem-method">remove</db:link> pages dynamically at run time.</db:para>
<db:para>It is generally not advisable to add excessive amounts of pages to a <db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link>. However, when the amount of pages grows larger, or individual pages are relatively complex, it may be desired free up resources by unloading pages that are outside the reach. The following example presents how to use <db:link xlink:href="qml-qtquick-loader.xml">Loader</db:link> to keep a maximum of three pages simultaneously instantiated.</db:para>
<db:programlisting language="cpp">SwipeView {
    Repeater {
        model: 6
        Loader {
            active: SwipeView.isCurrentItem || SwipeView.isNextItem || SwipeView.isPreviousItem
            sourceComponent: Text {
                text: index
                Component.onCompleted: console.log(&quot;created:&quot;, index)
                Component.onDestruction: console.log(&quot;destroyed:&quot;, index)
            }
        }
    }
}
</db:programlisting>
<db:note>
<db:para><db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link> takes over the geometry management of items added to the view. Using anchors on the items is not supported, and any <db:code>width</db:code> or <db:code>height</db:code> assignment will be overridden by the view. Notice that this only applies to the root of the item. Specifying width and height, or using anchors for its children works as expected.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-tabbar.xml">TabBar</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-pageindicator.xml">PageIndicator</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-swipeview">Customizing SwipeView</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-navigation.xml">Navigation Controls</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-containers.xml">Container Controls</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="interactive-prop">
<db:title>[since QtQuick.Controls 2.1] interactive : bool</db:title>
<db:para>This property describes whether the user can interact with the <db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link>. The user cannot swipe a view that is not interactive.</db:para>
<db:para>The default value is <db:code>true</db:code>.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.1.</db:para>
</db:section>
</db:section>
<db:section xml:id="attached-property-documentation">
<db:title>Attached Property Documentation</db:title>
<db:section xml:id="index-attached-prop">
<db:title>[read-only] SwipeView.index : int</db:title>
<db:para>This attached property holds the index of each child item in the <db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link>.</db:para>
<db:para>It is attached to each child item of the <db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link>.</db:para>
</db:section>
<db:section xml:id="isCurrentItem-attached-prop">
<db:title>[read-only] SwipeView.isCurrentItem : bool</db:title>
<db:para>This attached property is <db:code>true</db:code> if this child is the current item.</db:para>
<db:para>It is attached to each child item of the <db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link>.</db:para>
</db:section>
<db:section xml:id="isNextItem-attached-prop">
<db:title>[read-only, since QtQuick.Controls 2.1] SwipeView.isNextItem : bool</db:title>
<db:para>This attached property is <db:code>true</db:code> if this child is the next item.</db:para>
<db:para>It is attached to each child item of the <db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link>.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.1.</db:para>
</db:section>
<db:section xml:id="isPreviousItem-attached-prop">
<db:title>[read-only, since QtQuick.Controls 2.1] SwipeView.isPreviousItem : bool</db:title>
<db:para>This attached property is <db:code>true</db:code> if this child is the previous item.</db:para>
<db:para>It is attached to each child item of the <db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link>.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.1.</db:para>
</db:section>
<db:section xml:id="view-attached-prop">
<db:title>[read-only] SwipeView.view : SwipeView</db:title>
<db:para>This attached property holds the view that manages this child item.</db:para>
<db:para>It is attached to each child item of the <db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
