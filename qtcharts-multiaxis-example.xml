<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Using Multiple Axes</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Shows how to create a chart with a vertical axis for each series.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:note>
<db:para>This is part of the <db:link xlink:href="qtcharts-chartsgallery-example.xml">Charts with Widgets Gallery</db:link> example.</db:para>
</db:note>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_multiaxis.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Create the <db:link xlink:href="qchart.xml">QChart</db:link> instance, hide the legend of the chart, and set its title.</db:para>
<db:programlisting language="cpp">auto chart = new QChart;
chart-&amp;gt;legend()-&amp;gt;hide();
chart-&amp;gt;setTitle(&quot;Multiple Vertical Axes in Chart&quot;);
</db:programlisting>
<db:para>Create a <db:link xlink:href="qvalueaxis.xml">QValueAxis</db:link> instance that will be used as a horizontal axis by both series and add it the bottom of the chart. The axis can be shared between many series, but each series can have only one vertical and horizontal axis.</db:para>
<db:programlisting language="cpp">auto axisX = new QValueAxis;
axisX-&amp;gt;setTickCount(10);
chart-&amp;gt;addAxis(axisX, Qt::AlignBottom);
</db:programlisting>
<db:para>Create the first series, and add the data to it. Finally, add the series to the chart. Instantiate its own Y-axis, add it to the chart. Then attach both the common X-axis and the series specific Y-axis. In this example the color of the axis line is set to be the same as the color of the series to make it possible to distinguish which axis is attached to which series.</db:para>
<db:programlisting language="cpp">auto series = new QSplineSeries;
*series &amp;lt;&amp;lt; QPointF(1, 5) &amp;lt;&amp;lt; QPointF(3.5, 18) &amp;lt;&amp;lt; QPointF(4.8, 7.5) &amp;lt;&amp;lt; QPointF(10, 2.5);
chart-&amp;gt;addSeries(series);

auto axisY = new QValueAxis;
axisY-&amp;gt;setLinePenColor(series-&amp;gt;pen().color());

chart-&amp;gt;addAxis(axisY, Qt::AlignLeft);
series-&amp;gt;attachAxis(axisX);
series-&amp;gt;attachAxis(axisY);
</db:programlisting>
<db:para>Similarly prepare another series. This time a different axis type is used. Additionally grid lines color is also set to be the same as the color of the series.</db:para>
<db:programlisting language="cpp">series = new QSplineSeries;
*series &amp;lt;&amp;lt; QPointF(1, 0.5) &amp;lt;&amp;lt; QPointF(1.5, 4.5) &amp;lt;&amp;lt; QPointF(2.4, 2.5) &amp;lt;&amp;lt; QPointF(4.3, 12.5)
        &amp;lt;&amp;lt; QPointF(5.2, 3.5) &amp;lt;&amp;lt; QPointF(7.4, 16.5) &amp;lt;&amp;lt; QPointF(8.3, 7.5) &amp;lt;&amp;lt; QPointF(10, 17);
chart-&amp;gt;addSeries(series);

auto axisY3 = new QCategoryAxis;
axisY3-&amp;gt;append(&quot;Low&quot;, 5);
axisY3-&amp;gt;append(&quot;Medium&quot;, 12);
axisY3-&amp;gt;append(&quot;High&quot;, 17);
axisY3-&amp;gt;setLinePenColor(series-&amp;gt;pen().color());
axisY3-&amp;gt;setGridLinePen((series-&amp;gt;pen()));

chart-&amp;gt;addAxis(axisY3, Qt::AlignRight);
series-&amp;gt;attachAxis(axisX);
series-&amp;gt;attachAxis(axisY3);
</db:programlisting>
<db:para>Create a <db:link xlink:href="qchartview.xml">QChartView</db:link> object with <db:link xlink:href="qchart.xml">QChart</db:link> as a parameter.</db:para>
<db:programlisting language="cpp">createDefaultChartView(chart);
</db:programlisting>
</db:article>
