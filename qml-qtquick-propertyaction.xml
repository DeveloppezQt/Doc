<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>PropertyAction QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Specifies immediate property changes during animation.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-animation.xml">Animation</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>PropertyAction is part of <db:simplelist><db:member>qtquick-transitions-animations</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-propertyaction.xml">PropertyAction</db:link> is used to specify an immediate property change during an animation. The property change is not animated.</db:para>
<db:para>It is useful for setting non-animated property values during an animation.</db:para>
<db:para>For example, here is a <db:link xlink:href="qml-qtquick-sequentialanimation.xml">SequentialAnimation</db:link> that sets the image's <db:link xlink:href="qml-qtquick-item.xml#opacity-prop">opacity</db:link> property to .5, animates the width of the image, then sets <db:link xlink:href="qml-qtquick-item.xml#opacity-prop">opacity</db:link> back to 1:</db:para>
<db:programlisting language="qml">SequentialAnimation {
    PropertyAction { target: img; property: &quot;opacity&quot;; value: .5 }
    NumberAnimation { target: img; property: &quot;width&quot;; to: 300; duration: 1000 }
    PropertyAction { target: img; property: &quot;opacity&quot;; value: 1 }
}
</db:programlisting>
<db:para><db:link xlink:href="qml-qtquick-propertyaction.xml">PropertyAction</db:link> is also useful for setting the exact point at which a property change should occur during a <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link>. For example, if <db:link xlink:href="qml-qtquick-propertychanges.xml">PropertyChanges</db:link> was used in a <db:link xlink:href="qml-qtquick-state.xml">State</db:link> to rotate an item around a particular <db:link xlink:href="qml-qtquick-item.xml#transformOrigin-prop">transformOrigin</db:link>, it might be implemented like this:</db:para>
<db:programlisting language="qml">Item {
    width: 400; height: 400

    Rectangle {
        id: rect
        width: 200; height: 100
        color: &quot;red&quot;

        states: State {
            name: &quot;rotated&quot;
            PropertyChanges { target: rect; rotation: 180; transformOrigin: Item.BottomRight }
        }

        transitions: Transition {
            RotationAnimation { duration: 1000; direction: RotationAnimation.Counterclockwise }
        }

        MouseArea {
            anchors.fill: parent
            onClicked: rect.state = &quot;rotated&quot;
        }
    }
}
</db:programlisting>
<db:para>However, with this code, the transformOrigin is not set until <db:emphasis>after</db:emphasis> the animation, as a <db:link xlink:href="qml-qtquick-state.xml">State</db:link> is taken to define the values at the <db:emphasis>end</db:emphasis> of a transition. The animation would rotate at the default transformOrigin, then jump to Item.BottomRight. To fix this, insert a <db:link xlink:href="qml-qtquick-propertyaction.xml">PropertyAction</db:link> before the <db:link xlink:href="qml-qtquick-rotationanimation.xml">RotationAnimation</db:link> begins:</db:para>
<db:programlisting language="qml">transitions: Transition {
    SequentialAnimation {
        PropertyAction { target: rect; property: &quot;transformOrigin&quot; }
        RotationAnimation { duration: 1000; direction: RotationAnimation.Counterclockwise }
    }
}
</db:programlisting>
<db:para>This immediately sets the transformOrigin property to the value defined in the end state of the <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link> (i.e. the value defined in the <db:link xlink:href="qml-qtquick-propertyaction.xml">PropertyAction</db:link> object) so that the rotation animation begins with the correct transform origin.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-statesanimations-animations.xml">Animation and Transitions in Qt Quick</db:link></db:member>
<db:member><db:link xlink:href="qtqml-index.xml">Qt Qml</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="properties-prop">
<db:title>properties : string</db:title>
<db:bridgehead renderas="sect2">property : string</db:bridgehead><db:bridgehead renderas="sect2">target : QtObject</db:bridgehead><db:bridgehead renderas="sect2">[read-only] targets : list&lt;QtObject&gt;</db:bridgehead><db:para>These properties determine the items and their properties that are affected by this action.</db:para>
<db:para>The details of how these properties are interpreted in different situations is covered in the <db:link xlink:href="qml-qtquick-propertyanimation.xml#properties-prop">corresponding</db:link> <db:link xlink:href="qml-qtquick-propertyanimation.xml">PropertyAnimation</db:link> documentation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-propertyaction.xml#exclude-prop">exclude</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="exclude-prop">
<db:title>[read-only] exclude : list&lt;QtObject&gt;</db:title>
<db:para>This property holds the objects that should not be affected by this action.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-propertyaction.xml#targets-prop">targets</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="value-prop">
<db:title>value : var</db:title>
<db:para>This property holds the value to be set on the property.</db:para>
<db:para>If the <db:link xlink:href="qml-qtquick-propertyaction.xml">PropertyAction</db:link> is defined within a <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link> or <db:link xlink:href="qml-qtquick-behavior.xml">Behavior</db:link>, this value defaults to the value defined in the end state of the <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link>, or the value of the property change that triggered the <db:link xlink:href="qml-qtquick-behavior.xml">Behavior</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
