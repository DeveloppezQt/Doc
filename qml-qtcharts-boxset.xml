<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>BoxSet QML Type</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Building block for box-and-whiskers chart.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtCharts 2.1</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtcharts-boxset.xml">BoxSet</db:link> represents one box-and-whiskers item. It takes five values to create a graphical representation of range and three medians. There are two ways to give the values. The first one is with constructor or with append method. In these the values have to be given in the following order: lower extreme, lower quartile, median, upper quartile and upper extreme. The second method is to create an empty QBoxSet instance and give the values using value specific methods.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-boxplotseries.xml">BoxPlotSeries</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="brushFilename-prop">
<db:title>brushFilename : QString</db:title>
<db:para>The name of the file used as a brush for the box-and-whiskers set.</db:para>
</db:section>
<db:section xml:id="count-prop">
<db:title>count : int</db:title>
<db:para>The count of values on the box-and-whiskers set</db:para>
</db:section>
<db:section xml:id="label-prop">
<db:title>label : string</db:title>
<db:para>Defines the label of the category of the box-and-whiskers set.</db:para>
</db:section>
<db:section xml:id="values-prop">
<db:title>values : string</db:title>
<db:para>The values on the box-and-whiskers set.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="onBrushChanged-signal">
<db:title>onBrushChanged()</db:title>
<db:para>This signal is emitted when the brush of the box-and-whiskers item has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnBrushChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onChangedValue-signal">
<db:title>onChangedValue(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted values the value in the box-and-whiskers item has been modified. Parameter <db:code role="parameter">index</db:code> indicates the position of the modified value.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnChangedValue</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onChangedValues-signal">
<db:title>onChangedValues()</db:title>
<db:para>This signal is emitted when multiple values have been changed on the box-and-whiskers item.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnChangedValues</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onCleared-signal">
<db:title>onCleared()</db:title>
<db:para>This signal is emitted when all the values on the set are cleared to 0.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnCleared</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onClicked-signal">
<db:title>onClicked()</db:title>
<db:para>This signal is emitted when the user clicks with a mouse on top of box-and-whiskers item.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onDoubleClicked-signal">
<db:title>onDoubleClicked()</db:title>
<db:para>This signal is emitted when the user doubleclicks with a mouse on top of box-and-whiskers item.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnDoubleClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onHovered-signal">
<db:title>onHovered(bool <db:emphasis>status</db:emphasis>)</db:title>
<db:para>The signal is emitted if mouse is hovered on top of box-and-whiskers item. Parameter <db:code role="parameter">status</db:code> is true, if mouse entered on top of the item, and false if mouse left from top of the item.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnHovered</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onPenChanged-signal">
<db:title>onPenChanged()</db:title>
<db:para>This signal is emitted when the pen of the box-and-whiskers item has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPenChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onPressed-signal">
<db:title>onPressed()</db:title>
<db:para>This signal is emitted when the user presses with a mouse on top of box-and-whiskers item.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPressed</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onReleased-signal">
<db:title>onReleased()</db:title>
<db:para>This signal is emitted when the user releases with a mouse on top of box-and-whiskers item.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnReleased</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="append-method">
<db:title>void append(qreal <db:emphasis>value</db:emphasis>)</db:title>
<db:para>Appends new value <db:code role="parameter">value</db:code> to the end of set.</db:para>
</db:section>
<db:section xml:id="at-method">
<db:title>void at(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Returns the value at <db:code role="parameter">index</db:code> position.</db:para>
</db:section>
<db:section xml:id="clear-method">
<db:title>void clear()</db:title>
<db:para>Sets all values on the set to 0.</db:para>
</db:section>
<db:section xml:id="setValue-method">
<db:title>void setValue(int <db:emphasis>index</db:emphasis>, qreal <db:emphasis>value</db:emphasis>)</db:title>
<db:para>Sets a new <db:code role="parameter">value</db:code> on the <db:code role="parameter">index</db:code> position.</db:para>
</db:section>
</db:section>
</db:article>
