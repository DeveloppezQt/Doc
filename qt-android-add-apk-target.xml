<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>qt_android_add_apk_target</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Defines a build target that runs androiddeployqt to produce an APK.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Defines a build target that runs androiddeployqt to produce an APK.</db:para>
<db:para>The command is defined in the Core component of the Qt6 package, which can be loaded like so:</db:para>
<db:programlisting language="cpp" role="bad">find_package(Qt6 REQUIRED COMPONENTS Core)
</db:programlisting>
<db:para>This command was introduced in Qt 6.0.</db:para>
<db:warning>
<db:para>This command is deprecated since Qt 6.5. Use <db:link xlink:href="qt-add-executable.xml">qt_add_executable</db:link> instead.</db:para>
</db:warning>
<db:note>
<db:para>This command should only be called if targeting the Android platform.</db:para>
</db:note>
<db:section xml:id="synopsis">
<db:title>Synopsis</db:title>
<db:programlisting language="cpp" role="bad">qt_android_add_apk_target(target)
</db:programlisting>
<db:para>If <db:link xlink:href="cmake-qt5-and-qt6-compatibility.xml#versionless-commands">versionless commands</db:link> are disabled, use qt6_android_add_apk_target() instead. It supports the same set of arguments as this command.</db:para>
</db:section>
<db:section xml:id="description">
<db:title>Description</db:title>
<db:para>The &lt;target&gt;_make_apk and &lt;target&gt;_make_aab custom targets created by this command take an Android deployment settings file and generate APK and AAB respectively by running androiddeployqt. The location of the settings file is taken from the target's QT_ANDROID_DEPLOYMENT_SETTINGS_FILE property. This file is typically created by <db:link xlink:href="qt-android-generate-deployment-settings.xml">qt_android_generate_deployment_settings()</db:link>. The respective Android package will be generated in an android-build subdirectory below the CMake build directory of the target.</db:para>
<db:para>The &lt;target&gt;_make_apk and &lt;target&gt;_make_aab targets will be automatically added as dependencies of the apk and aab build targets respectively, which will be created automatically. Creating of the apk and aab targets can be disabled by setting the QT_NO_GLOBAL_APK_TARGET and QT_NO_GLOBAL_AAB_TARGET variables to TRUE.</db:para>
</db:section>
<db:section xml:id="example">
<db:title>Example</db:title>
<db:programlisting language="cpp">qt_android_generate_deployment_settings(myapp)
qt_android_add_apk_target(myapp)
</db:programlisting>
<db:para>The above commands define the myapp_make_apk, myapp_make_aab, apk, and aab build targets which can be used to generate just the myapp packages or all APKs and AABs in the project respectively.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt-android-generate-deployment-settings.xml">qt_android_generate_deployment_settings()</db:link></db:member>
<db:member><db:link xlink:href="qt-finalize-target.xml">qt_finalize_target()</db:link></db:member>
<db:member><db:link xlink:href="qt-finalize-project.xml">qt_finalize_project()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
