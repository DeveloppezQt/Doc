<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAbstractClipAnimator Class</db:title>
<db:subtitle>Qt3DAnimation::QAbstractClipAnimator</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qt3danimation-qabstractclipanimator.xml">QAbstractClipAnimator</db:link> is the base class for types providing animation playback capabilities.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAbstractClipAnimator</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3danimation)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3danimation)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3danimation</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-animation-abstractclipanimator.xml" xlink:role="">AbstractClipAnimator</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qcomponent.xml" xlink:role="class">Qt3DCore::QComponent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3danimation-qblendedclipanimator.xml" xlink:role="class">Qt3DAnimation::QBlendedClipAnimator</db:link> and <db:link xlink:href="qt3danimation-qclipanimator.xml" xlink:role="class">Qt3DAnimation::QClipAnimator</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Subclasses of <db:link xlink:href="qt3danimation-qabstractclipanimator.xml">QAbstractClipAnimator</db:link> can be aggregated by a QEntity to provide animation capabilities. The animator components provide an interface for controlling the animation (e.g. start, stop). Each animator type requires some form of animation data such as a <db:link xlink:href="qt3danimation-qabstractanimationclip.xml">QAbstractAnimationClip</db:link> as well as a <db:link xlink:href="qt3danimation-qchannelmapper.xml">QChannelMapper</db:link> which describes how the channels in the animation clip should be mapped onto the properties of the objects you wish to animate.</db:para>
<db:para>The following subclasses are available:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qt3danimation-qclipanimator.xml">Qt3DAnimation::QClipAnimator</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt3danimation-qblendedclipanimator.xml">Qt3DAnimation::QBlendedClipAnimator</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Loops-enum">
<db:title>enum QAbstractClipAnimator::Loops</db:title>
<db:para>Holds the number of times the animation should play.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3danimation.xml">Qt3DAnimation</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3danimation-qabstractclipanimator.xml">QAbstractClipAnimator</db:link></db:emphasis>::Infinite</db:code></db:para>
</db:td>
<db:td><db:code>-1</db:code></db:td>
<db:td>
<db:para>This will repeat the loop continuously until it is explicitly stopped.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="channelMapper-prop">
<db:title>channelMapper : Qt3DAnimation::QChannelMapper*</db:title>
<db:para>This property holds the ChannelMapper that controls how the channels in the animation clip map onto the properties of the target objects.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3danimation-qchannelmapper.xml">Qt3DAnimation::QChannelMapper</db:link></db:type> *<db:emphasis role="bold">channelMapper</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setChannelMapper</db:emphasis>(<db:type><db:link xlink:href="qt3danimation-qchannelmapper.xml">Qt3DAnimation::QChannelMapper</db:link></db:type> *<db:emphasis>channelMapper</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">channelMapperChanged</db:emphasis>(<db:type><db:link xlink:href="qt3danimation-qchannelmapper.xml">Qt3DAnimation::QChannelMapper</db:link></db:type> *<db:emphasis>channelMapper</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="clock-prop">
<db:title>clock : Qt3DAnimation::QClock*</db:title>
<db:para>The clock controls the speed with which an animation is played.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>Qt3DAnimation::QClock</db:type> *<db:emphasis role="bold">clock</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setClock</db:emphasis>(<db:type>Qt3DAnimation::QClock</db:type> *<db:emphasis>clock</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">clockChanged</db:emphasis>(<db:type>Qt3DAnimation::QClock</db:type> *<db:emphasis>clock</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="loops-prop">
<db:title>loops : int</db:title>
<db:para>Holds the number of times the animation should play.</db:para>
<db:para>The value is 1 by default: the animation will be played once and then stop.</db:para>
<db:para>If set to <db:link xlink:href="qt3danimation-qabstractclipanimator.xml#Loops-enum">QAbstractClipAnimator::Infinite</db:link>, the animation will continuously repeat until it is explicitly stopped.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3danimation-qabstractclipanimator.xml#loopCount">loopCount</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLoopCount</db:emphasis>(<db:type>int</db:type> <db:emphasis>loops</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">loopCountChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>loops</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="normalizedTime-prop">
<db:title>normalizedTime : float</db:title>
<db:para>This property holds the clips normalized time.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">normalizedTime</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setNormalizedTime</db:emphasis>(<db:type>float</db:type> <db:emphasis>timeFraction</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">normalizedTimeChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>index</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="running-prop">
<db:title>running : bool</db:title>
<db:para>This property holds a boolean indicating whether the animation is currently running.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3danimation-qabstractclipanimator.xml#isRunning">isRunning</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setRunning</db:emphasis>(<db:type>bool</db:type> <db:emphasis>running</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">runningChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>running</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="isRunning">
<db:title>bool QAbstractClipAnimator::isRunning() const</db:title>
<db:para>Returns a boolean indicating whether the animation is currently running.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3danimation-qabstractclipanimator.xml#running-prop">running</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="loopCount">
<db:title>int QAbstractClipAnimator::loopCount() const</db:title>
<db:para>Returns the number of times the animation should play.</db:para>
<db:para>The value is 1 by default: the animation will play through once and then stop.</db:para>
<db:para>If set to <db:link xlink:href="qt3danimation-qabstractclipanimator.xml#Loops-enum">QAbstractClipAnimator::Infinite</db:link>, the animation will continuously repeat until it is explicitly stopped.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3danimation-qabstractclipanimator.xml#loops-prop">loops</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3danimation-qabstractclipanimator.xml#loops-prop">setLoopCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="start">
<db:title>void QAbstractClipAnimator::start()</db:title>
<db:para>Starts the animation.</db:para>
</db:section>
<db:section xml:id="stop">
<db:title>void QAbstractClipAnimator::stop()</db:title>
<db:para>Stops the animation.</db:para>
</db:section>
</db:section>
</db:article>
