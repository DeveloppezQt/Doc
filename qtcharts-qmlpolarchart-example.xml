<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qml Polar Chart</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This is a demonstration on how to use a polar chart in your QML application.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="http://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section xml:id="using-polar-charts-in-qt-quick-applications">
<db:title>Using Polar Charts in Qt Quick Applications</db:title>
<db:para>We begin with a chart that has a spline series and a scatter series with random data. Both series use the same axes.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_qmlpolarchart1.png"/>
</db:imageobject>
</db:mediaobject>
<db:programlisting language="qml">PolarChartView {
    title: &quot;Two Series, Common Axes&quot;
    anchors.fill: parent
    legend.visible: false
    antialiasing: true

    ValueAxis {
        id: axisAngular
        min: 0
        max: 20
        tickCount: 9
    }

    ValueAxis {
        id: axisRadial
        min: -0.5
        max: 1.5
    }

    SplineSeries {
        id: series1
        axisAngular: axisAngular
        axisRadial: axisRadial
        pointsVisible: true
    }

    ScatterSeries {
        id: series2
        axisAngular: axisAngular
        axisRadial: axisRadial
        markerSize: 10
    }
}

// Add data dynamically to the series
Component.onCompleted: {
    for (var i = 0; i &amp;lt;= 20; i++) {
        series1.append(i, Math.random());
        series2.append(i, Math.random());
    }
}
</db:programlisting>
<db:para>The next example shows a chart with some accurate historical data for which we need to use a <db:link xlink:href="qml-qtcharts-datetimeaxis.xml">DateTimeAxis</db:link> and a <db:link xlink:href="qml-qtcharts-areaseries.xml">AreaSeries</db:link>.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_qmlpolarchart2.png"/>
</db:imageobject>
</db:mediaobject>
<db:programlisting language="qml">PolarChartView {
    title: &quot;Historical Area Series&quot;
    anchors.fill: parent
    legend.visible: false
    antialiasing: true

    DateTimeAxis {
        id: axis1
        format: &quot;yyyy MMM&quot;
        tickCount: 13
    }
    ValueAxis {
        id: axis2
    }
    LineSeries {
        id: lowerLine
        axisAngular: axis1
        axisRadial: axis2

        // Please note that month in JavaScript months are zero based, so 2 means March
        XYPoint { x: toMsecsSinceEpoch(new Date(1950, 0, 1)); y: 15 }
        XYPoint { x: toMsecsSinceEpoch(new Date(1962, 4, 1)); y: 35 }
        XYPoint { x: toMsecsSinceEpoch(new Date(1970, 0, 1)); y: 50 }
        XYPoint { x: toMsecsSinceEpoch(new Date(1978, 2, 1)); y: 75 }
        XYPoint { x: toMsecsSinceEpoch(new Date(1987, 11, 1)); y: 102 }
        XYPoint { x: toMsecsSinceEpoch(new Date(1992, 1, 1)); y: 132 }
        XYPoint { x: toMsecsSinceEpoch(new Date(1998, 7, 1)); y: 100 }
        XYPoint { x: toMsecsSinceEpoch(new Date(2002, 4, 1)); y: 120 }
        XYPoint { x: toMsecsSinceEpoch(new Date(2012, 8, 1)); y: 140 }
        XYPoint { x: toMsecsSinceEpoch(new Date(2013, 5, 1)); y: 150 }
    }
    LineSeries {
        id: upperLine
        axisAngular: axis1
        axisRadial: axis2

        // Please note that month in JavaScript months are zero based, so 2 means March
        XYPoint { x: toMsecsSinceEpoch(new Date(1950, 0, 1)); y: 30 }
        XYPoint { x: toMsecsSinceEpoch(new Date(1962, 4, 1)); y: 55 }
        XYPoint { x: toMsecsSinceEpoch(new Date(1970, 0, 1)); y: 80 }
        XYPoint { x: toMsecsSinceEpoch(new Date(1978, 2, 1)); y: 105 }
        XYPoint { x: toMsecsSinceEpoch(new Date(1987, 11, 1)); y: 125 }
        XYPoint { x: toMsecsSinceEpoch(new Date(1992, 1, 1)); y: 160 }
        XYPoint { x: toMsecsSinceEpoch(new Date(1998, 7, 1)); y: 140 }
        XYPoint { x: toMsecsSinceEpoch(new Date(2002, 4, 1)); y: 140 }
        XYPoint { x: toMsecsSinceEpoch(new Date(2012, 8, 1)); y: 170 }
        XYPoint { x: toMsecsSinceEpoch(new Date(2013, 5, 1)); y: 200 }
    }
    AreaSeries {
        axisAngular: axis1
        axisRadial: axis2
        lowerSeries: lowerLine
        upperSeries: upperLine
    }
}
// DateTimeAxis is based on QDateTimes so we must convert our JavaScript dates to
// milliseconds since epoch to make them match the DateTimeAxis values
function toMsecsSinceEpoch(date) {
    var msecs = date.getTime();
    return msecs;
}
</db:programlisting>
<db:para>And the final example with a chart that uses a <db:link xlink:href="qml-qtcharts-categoryaxis.xml">CategoryAxis</db:link> to make the data easier to understand.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_qmlpolarchart3.png"/>
</db:imageobject>
</db:mediaobject>
<db:programlisting language="qml">PolarChartView {
    title: &quot;Numerical Data for Dummies&quot;
    anchors.fill: parent
    legend.visible: false
    antialiasing: true

    LineSeries {
        axisRadial: CategoryAxis {
            min: 0
            max: 30
            CategoryRange {
                label: &quot;critical&quot;
                endValue: 2
            }
            CategoryRange {
                label: &quot;low&quot;
                endValue: 7
            }
            CategoryRange {
                label: &quot;normal&quot;
                endValue: 12
            }
            CategoryRange {
                label: &quot;high&quot;
                endValue: 18
            }
            CategoryRange {
                label: &quot;extremely high&quot;
                endValue: 30
            }
        }

        axisAngular: ValueAxis {
            tickCount: 13
        }

        XYPoint { x: 0; y: 4.3 }
        XYPoint { x: 1; y: 4.1 }
        XYPoint { x: 2; y: 4.7 }
        XYPoint { x: 3; y: 3.9 }
        XYPoint { x: 4; y: 5.2 }
        XYPoint { x: 5; y: 5.3 }
        XYPoint { x: 6; y: 6.1 }
        XYPoint { x: 7; y: 7.7 }
        XYPoint { x: 8; y: 12.9 }
        XYPoint { x: 9; y: 19.2 }
    }
}
</db:programlisting>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qmlpolarchart/main.cpp">qmlpolarchart/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmlpolarchart/qml/qmlpolarchart/View1.qml">qmlpolarchart/qml/qmlpolarchart/View1.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmlpolarchart/qml/qmlpolarchart/View2.qml">qmlpolarchart/qml/qmlpolarchart/View2.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmlpolarchart/qml/qmlpolarchart/View3.qml">qmlpolarchart/qml/qmlpolarchart/View3.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmlpolarchart/qml/qmlpolarchart/main.qml">qmlpolarchart/qml/qmlpolarchart/main.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmlpolarchart/qmlpolarchart.pro">qmlpolarchart/qmlpolarchart.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmlpolarchart/resources.qrc">qmlpolarchart/resources.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
