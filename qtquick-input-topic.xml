<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Important Concepts In Qt Quick - User Input</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Overview of user input concepts.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Being able to respond to user-input is a fundamental part of user-interface design. Depending on the use-case that an application solves, and the form-factor of the device that the application runs on, the best way to receive user-input may be different.</db:para>
<db:section xml:id="input-from-pointing-devices">
<db:title>Input from Pointing Devices</db:title>
<db:para>Allowing users to physically touch a screen to interact with an application is a popular user-interface paradigm on portable devices like smartphones and tablets. In desktop applications, detecting and reacting to clicks and presses according to the mouse cursor position is a fundamental concept in user-interface design.</db:para>
<db:para>Touch-driven and mouse-driven user interfaces are supported by various <db:link xlink:href="qtquickhandlers-index.xml">input handler</db:link> types, and visual object types such as <db:link xlink:href="qml-qtquick-flickable.xml">Flickable</db:link> and <db:link xlink:href="qml-qtquick-mousearea.xml">MouseArea</db:link>.</db:para>
<db:para>See also the documentation about <db:link xlink:href="qtquick-input-mouseevents.xml">mouse events in Qt Quick</db:link>.</db:para>
</db:section>
<db:section xml:id="keyboard-input-and-keyboard-focus">
<db:title>Keyboard Input and Keyboard Focus</db:title>
<db:para>Supporting input from a keyboard is a vital component of the user interface of many applications.</db:para>
<db:para>Any visual item can receive keyboard input through the <db:link xlink:href="qml-qtquick-keys.xml">Keys</db:link> attached type. Additionally, the issue of <db:emphasis>keyboard focus</db:emphasis> arises when multiple items are required to receive key events, as these events must be passed to the correct item. See the documentation about <db:link xlink:href="qtquick-input-focus.xml">Keyboard focus in Qt Quick</db:link> for more information on this topic.</db:para>
<db:para>Qt Quick also provides visual text items which automatically receive keyboard events and key-presses, and displays the appropriate text. See the documentation about <db:link xlink:href="qtquick-input-textinput.xml">text input</db:link> for in-depth information on the topic.</db:para>
</db:section>
</db:article>
