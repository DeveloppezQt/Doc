<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>TextArea QML Type</db:title>
<db:productname>QtQuickControls2</db:productname>
<db:edition>Qt 5.11.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 2 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Multi-line text input area.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 2.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>TextEdit</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>TextArea is part of <db:simplelist><db:member>qtquickcontrols2-input</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-controls2-textarea.xml">TextArea</db:link> is a multi-line text editor. <db:link xlink:href="qml-qtquick-controls2-textarea.xml">TextArea</db:link> extends <db:link xlink:href="qml-qtquick-textedit.xml">TextEdit</db:link> with a <db:link xlink:href="qml-qtquick-controls2-textarea.xml#placeholderText-prop">placeholder text</db:link> functionality, and adds decoration.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-textarea.png"/>
</db:imageobject>
</db:mediaobject>
<db:programlisting language="cpp">TextArea {
    placeholderText: qsTr(&quot;Enter description&quot;)
}
</db:programlisting>
<db:para><db:link xlink:href="qml-qtquick-controls2-textarea.xml">TextArea</db:link> is not scrollable by itself. Especially on screen-size constrained platforms, it is often preferable to make entire application pages scrollable. On such a scrollable page, a non-scrollable <db:link xlink:href="qml-qtquick-controls2-textarea.xml">TextArea</db:link> might behave better than nested scrollable controls. Notice, however, that in such a scenario, the background decoration of the <db:link xlink:href="qml-qtquick-controls2-textarea.xml">TextArea</db:link> scrolls together with the rest of the scrollable content.</db:para>
<db:section xml:id="scrollable-textarea">
<db:title>Scrollable TextArea</db:title>
<db:para>If you want to make a <db:link xlink:href="qml-qtquick-controls2-textarea.xml">TextArea</db:link> scrollable, for example, when it covers an entire application page, it can be placed inside a <db:link xlink:href="qml-qtquick-controls2-scrollview.xml">ScrollView</db:link>.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-textarea-scrollable.png"/>
</db:imageobject>
</db:mediaobject>
<db:programlisting language="qml">ScrollView {
    id: view
    anchors.fill: parent

    TextArea {
        text: &quot;TextArea\n...\n...\n...\n...\n...\n...\n&quot;
    }
}
</db:programlisting>
<db:para>A <db:link xlink:href="qml-qtquick-controls2-textarea.xml">TextArea</db:link> that is placed inside a <db:link xlink:href="qml-qtquick-controls2-scrollview.xml">ScrollView</db:link> does the following:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Sets the content size automatically</db:para>
</db:listitem>
<db:listitem>
<db:para>Ensures that the background decoration stays in place</db:para>
</db:listitem>
<db:listitem>
<db:para>Clips the content</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-textfield.xml">TextField</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-textarea">Customizing TextArea</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-input.xml">Input Controls</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="background-prop">
<db:title>background : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>background</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the background item.</db:para>
<db:note>
<db:para>If the background item has no explicit size specified, it automatically follows the control's size. In most cases, there is no need to specify width or height for a background item.</db:para>
</db:note>
<db:note>
<db:para>Most controls use the implicit size of the background item to calculate the implicit size of the control itself. If you replace the background item with a custom one, you should also consider providing a sensible implicit size for it (unless it is an item like <db:link xlink:href="qml-qtquick-image.xml">Image</db:link> which has its own implicit size).</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-textarea">Customizing TextArea</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="focusReason-prop">
<db:title>focusReason : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>focusReason</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the reason of the last focus change.</db:para>
<db:note>
<db:para>This property does not indicate whether the control has <db:link xlink:href="qml-qtquick-item.xml#activeFocus-prop">active focus</db:link>, but the reason why the control either gained or lost focus.</db:para>
</db:note>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Qt.MouseFocusReason</db:para>
</db:td>
<db:td>
<db:para>A mouse action occurred.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.TabFocusReason</db:para>
</db:td>
<db:td>
<db:para>The Tab key was pressed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.BacktabFocusReason</db:para>
</db:td>
<db:td>
<db:para>A Backtab occurred. The input for this may include the Shift or Control keys; e.g. Shift+Tab.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.ActiveWindowFocusReason</db:para>
</db:td>
<db:td>
<db:para>The window system made this window either active or inactive.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.PopupFocusReason</db:para>
</db:td>
<db:td>
<db:para>The application opened/closed a pop-up that grabbed/released the keyboard focus.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.ShortcutFocusReason</db:para>
</db:td>
<db:td>
<db:para>The user typed a label's buddy shortcut</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.MenuBarFocusReason</db:para>
</db:td>
<db:td>
<db:para>The menu bar took focus.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.OtherFocusReason</db:para>
</db:td>
<db:td>
<db:para>Another reason, usually application-specific.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-item.xml#activeFocus-prop">Item::activeFocus</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hoverEnabled-prop">
<db:title>[since QtQuick.Controls 2.1 (Qt 5.8)] hoverEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>hoverEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property determines whether the text area accepts hover events. The default value is <db:code>true</db:code>.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.1 (Qt 5.8).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-textarea.xml#hovered-prop">hovered</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hovered-prop">
<db:title>[read-only, since QtQuick.Controls 2.1 (Qt 5.8)] hovered : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>hovered</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the text area is hovered.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.1 (Qt 5.8).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-textarea.xml#hoverEnabled-prop">hoverEnabled</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="palette-prop">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] palette : palette</db:title>
<db:fieldsynopsis>
<db:type>palette</db:type>
<db:varname>palette</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the palette currently set for the text area.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#palette-prop">Control::palette</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="placeholderText-prop">
<db:title>placeholderText : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>placeholderText</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the short hint that is displayed in the text area before the user enters a value.</db:para>
</db:section>
</db:section>
<db:section xml:id="attached-property-documentation">
<db:title>Attached Property Documentation</db:title>
<db:section xml:id="flickable-attached-prop">
<db:title>TextArea.flickable : TextArea</db:title>
<db:fieldsynopsis>
<db:type>TextArea</db:type>
<db:varname>TextArea.flickable</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property attaches a text area to a <db:link xlink:href="qml-qtquick-flickable.xml">Flickable</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-scrollbar.xml">ScrollBar</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-scrollindicator.xml">ScrollIndicator</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-textarea.xml#scrollable-textarea">Scrollable TextArea</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="pressAndHold-signal">
<db:title>pressAndHold(MouseEvent <db:emphasis>event</db:emphasis>)</db:title>
<db:para>This signal is emitted when there is a long press (the delay depends on the platform plugin). The <db:link xlink:href="qml-qtquick-mouseevent.xml">event</db:link> parameter provides information about the press, including the x and y position of the press, and which button is pressed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPressAndHold</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-textarea.xml#pressed-signal">pressed</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-textarea.xml#released-signal">released</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pressed-signal">
<db:title>[since QtQuick.Controls 2.1 (Qt 5.8)] pressed(MouseEvent <db:emphasis>event</db:emphasis>)</db:title>
<db:para>This signal is emitted when the text area is pressed by the user. The <db:link xlink:href="qml-qtquick-mouseevent.xml">event</db:link> parameter provides information about the press, including the x and y position of the press, and which button is pressed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPressed</db:code>.</db:para>
</db:note>
<db:para>This signal was introduced in QtQuick.Controls 2.1 (Qt 5.8).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-textarea.xml#released-signal">released</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-textarea.xml#pressAndHold-signal">pressAndHold</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="released-signal">
<db:title>[since QtQuick.Controls 2.1 (Qt 5.8)] released(MouseEvent <db:emphasis>event</db:emphasis>)</db:title>
<db:para>This signal is emitted when the text area is released by the user. The <db:link xlink:href="qml-qtquick-mouseevent.xml">event</db:link> parameter provides information about the release, including the x and y position of the press, and which button is pressed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onReleased</db:code>.</db:para>
</db:note>
<db:para>This signal was introduced in QtQuick.Controls 2.1 (Qt 5.8).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-textarea.xml#pressed-signal">pressed</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-textarea.xml#pressAndHold-signal">pressAndHold</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
