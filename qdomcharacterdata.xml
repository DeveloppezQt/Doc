<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QDomCharacterData Class</db:title>
<db:productname>QtXml</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt XML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdomcharacterdata.xml">QDomCharacterData</db:link> class represents a generic string in the DOM.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDomCharacterData</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qdomnode.xml" xlink:role="class">QDomNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qdomcomment.xml" xlink:role="class">QDomComment</db:link> and <db:link xlink:href="qdomtext.xml" xlink:role="class">QDomText</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QDomCharacterData is part of <db:simplelist><db:member><db:link xlink:href="xml-tools.xml">XML Classes</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Character data as used in XML specifies a generic data string. More specialized versions of this class are <db:link xlink:href="qdomtext.xml">QDomText</db:link>, <db:link xlink:href="qdomcomment.xml">QDomComment</db:link> and <db:link xlink:href="qdomcdatasection.xml">QDomCDATASection</db:link>.</db:para>
<db:para>The data string is set with <db:link xlink:href="qdomcharacterdata.xml#setData">setData</db:link>() and retrieved with <db:link xlink:href="qdomcharacterdata.xml#data">data</db:link>(). You can retrieve a portion of the data string using <db:link xlink:href="qdomcharacterdata.xml#substringData">substringData</db:link>(). Extra data can be appended with <db:link xlink:href="qdomcharacterdata.xml#appendData">appendData</db:link>(), or inserted with <db:link xlink:href="qdomcharacterdata.xml#insertData">insertData</db:link>(). Portions of the data string can be deleted with <db:link xlink:href="qdomcharacterdata.xml#deleteData">deleteData</db:link>() or replaced with <db:link xlink:href="qdomcharacterdata.xml#replaceData">replaceData</db:link>(). The length of the data string is returned by <db:link xlink:href="qdomcharacterdata.xml#length">length</db:link>().</db:para>
<db:para>The node type of the node containing this character data is returned by <db:link xlink:href="qdomcharacterdata.xml#nodeType">nodeType</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdomtext.xml">QDomText</db:link></db:member>
<db:member><db:link xlink:href="qdomcomment.xml">QDomComment</db:link></db:member>
<db:member><db:link xlink:href="qdomcdatasection.xml">QDomCDATASection</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QDomCharacterData">
<db:title>QDomCharacterData::QDomCharacterData()</db:title>
<db:para>Constructs an empty character data object.</db:para>
</db:section>
<db:section xml:id="QDomCharacterData-1">
<db:title>QDomCharacterData::QDomCharacterData(const QDomCharacterData &amp;<db:emphasis>x</db:emphasis>)</db:title>
<db:para>Constructs a copy of <db:code role="parameter">x</db:code>.</db:para>
<db:para>The data of the copy is shared (shallow copy): modifying one node will also change the other. If you want to make a deep copy, use <db:link xlink:href="qdomnode.xml#cloneNode">cloneNode</db:link>().</db:para>
</db:section>
<db:section xml:id="appendData">
<db:title>void QDomCharacterData::appendData(const QString &amp;<db:emphasis>arg</db:emphasis>)</db:title>
<db:para>Appends the string <db:code role="parameter">arg</db:code> to the stored string.</db:para>
</db:section>
<db:section xml:id="data">
<db:title>QString QDomCharacterData::data() const</db:title>
<db:para>Returns the string stored in this object.</db:para>
<db:para>If the node is a <db:link xlink:href="qdomnode.xml#isNull">null node</db:link>, it will return an empty string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdomcharacterdata.xml#setData">setData</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="deleteData">
<db:title>void QDomCharacterData::deleteData(unsigned long <db:emphasis>offset</db:emphasis>, unsigned long <db:emphasis>count</db:emphasis>)</db:title>
<db:para>Deletes a substring of length <db:code role="parameter">count</db:code> from position <db:code role="parameter">offset</db:code>.</db:para>
</db:section>
<db:section xml:id="insertData">
<db:title>void QDomCharacterData::insertData(unsigned long <db:emphasis>offset</db:emphasis>, const QString &amp;<db:emphasis>arg</db:emphasis>)</db:title>
<db:para>Inserts the string <db:code role="parameter">arg</db:code> into the stored string at position <db:code role="parameter">offset</db:code>.</db:para>
</db:section>
<db:section xml:id="length">
<db:title>int QDomCharacterData::length() const</db:title>
<db:para>Returns the length of the stored string.</db:para>
</db:section>
<db:section xml:id="nodeType">
<db:title>QDomNode::NodeType QDomCharacterData::nodeType() const</db:title>
<db:para>Returns the type of node this object refers to (i.e. <db:code>TextNode</db:code>, <db:code>CDATASectionNode</db:code>, <db:code>CommentNode</db:code> or <db:code>CharacterDataNode</db:code>). For a <db:link xlink:href="qdomnode.xml#isNull">null node</db:link>, returns <db:code>CharacterDataNode</db:code>.</db:para>
</db:section>
<db:section xml:id="replaceData">
<db:title>void QDomCharacterData::replaceData(unsigned long <db:emphasis>offset</db:emphasis>, unsigned long <db:emphasis>count</db:emphasis>, const QString &amp;<db:emphasis>arg</db:emphasis>)</db:title>
<db:para>Replaces the substring of length <db:code role="parameter">count</db:code> starting at position <db:code role="parameter">offset</db:code> with the string <db:code role="parameter">arg</db:code>.</db:para>
</db:section>
<db:section xml:id="setData">
<db:title>void QDomCharacterData::setData(const QString &amp;<db:emphasis>v</db:emphasis>)</db:title>
<db:para>Sets this object's string to <db:code role="parameter">v</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdomcharacterdata.xml#data">data</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="substringData">
<db:title>QString QDomCharacterData::substringData(unsigned long <db:emphasis>offset</db:emphasis>, unsigned long <db:emphasis>count</db:emphasis>)</db:title>
<db:para>Returns the substring of length <db:code role="parameter">count</db:code> from position <db:code role="parameter">offset</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QDomCharacterData &amp;QDomCharacterData::operator=(const QDomCharacterData &amp;<db:emphasis>x</db:emphasis>)</db:title>
<db:para>Assigns <db:code role="parameter">x</db:code> to this character data.</db:para>
<db:para>The data of the copy is shared (shallow copy): modifying one node will also change the other. If you want to make a deep copy, use <db:link xlink:href="qdomnode.xml#cloneNode">cloneNode</db:link>().</db:para>
</db:section>
</db:section>
</db:article>
