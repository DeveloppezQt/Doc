<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Designer's Widget Editing Mode</db:title>
<db:productname>QtDesigner</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Designer Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="designer-editing-mode.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Qt Designer's Editing Modes"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="designer-connection-mode.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="Qt Designer's Signals and Slots Editing Mode"/></db:extendedlink>
<db:abstract>
<db:para>Qt Designer Manual.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>{Qt Designer Manual}{Contents}</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/designer-editing-mode.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>In the Widget Editing Mode, objects can be dragged from the main window's widget box to a form, edited, resized, dragged around on the form, and even dragged between forms. Object properties can be modified interactively, so that changes can be seen immediately. The editing interface is intuitive for simple operations, yet it still supports Qt's powerful layout facilities.</db:para>
<db:para>To create and edit new forms, open the <db:emphasis role="bold">File</db:emphasis> menu and select <db:emphasis role="bold">New Form...</db:emphasis> or press <db:emphasis role="bold">Ctrl+N</db:emphasis>. Existing forms can also be edited by selecting <db:emphasis role="bold">Open Form...</db:emphasis> from the <db:emphasis role="bold">File</db:emphasis> menu or pressing <db:emphasis role="bold">Ctrl+O</db:emphasis>.</db:para>
<db:para>At any point, you can save your form by selecting the <db:emphasis role="bold">Save From As...</db:emphasis> option from the <db:emphasis role="bold">File</db:emphasis> menu. The UI files saved by <db:emphasis>Qt Designer</db:emphasis> contain information about the objects used, and any details of signal and slot connections between them.</db:para>
<db:section xml:id="editing-a-form">
<db:title>Editing A Form</db:title>
<db:para>By default, new forms are opened in widget editing mode. To switch to Edit mode from another mode, select <db:emphasis role="bold">Edit Widgets</db:emphasis> from the <db:emphasis role="bold">Edit</db:emphasis> menu or press the <db:emphasis role="bold">F3</db:emphasis> key.</db:para>
<db:para>Objects are added to the form by dragging them from the main widget box and dropping them in the desired location on the form. Once there, they can be moved around simply by dragging them, or using the cursor keys. Pressing the <db:emphasis role="bold">Ctrl</db:emphasis> key at the same time moves the selected widget pixel by pixel, while using the cursor keys alone make the selected widget snap to the grid when it is moved. Objects can be selected by clicking on them with the left mouse button. You can also use the <db:emphasis role="bold">Tab</db:emphasis> key to change the selection.</db:para>
<db:para>The widget box contains objects in a number of different categories, all of which can be placed on the form as required. The only objects that require a little more preparation are the <db:emphasis role="bold">Container</db:emphasis> widgets. These are described in further detail in the <db:link xlink:href="designer-using-containers.xml">Using Containers in Qt Designer</db:link> chapter.</db:para>
<db:anchor xml:id="selectingobjects"/>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/designer-selecting-widget.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold">Selecting Objects</db:emphasis></db:para>
<db:para>Objects on the form are selected by clicking on them with the left mouse button. When an object is selected, resize handles are shown at each corner and the midpoint of each side, indicating that it can be resized.</db:para>
<db:para>To select additional objects, hold down the <db:emphasis role="bold">Shift</db:emphasis> key and click on them. If more than one object is selected, the current object will be displayed with resize handles of a different color.</db:para>
<db:para>To move a widget within a layout, hold down <db:emphasis role="bold">Shift</db:emphasis> and <db:emphasis role="bold">Control</db:emphasis> while dragging the widget. This extends the selection to the widget's parent layout.</db:para>
<db:para>Alternatively, objects can be selected in the <db:link xlink:href="designer-widget-mode.xml#the-object-inspector">Object Inspector</db:link>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>When a widget is selected, normal clipboard operations such as cut, copy, and paste can be performed on it. All of these operations can be done and undone, as necessary.</db:para>
<db:para>The following shortcuts can be used:</db:para>
<db:anchor xml:id="shortcutsforediting"/>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Action</db:para>
</db:th>
<db:th>
<db:para>Shortcut</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>Cut</db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold">Ctrl+X</db:emphasis></db:para>
</db:td>
<db:td>
<db:para>Cuts the selected objects to the clipboard.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Copy</db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold">Ctrl+C</db:emphasis></db:para>
</db:td>
<db:td>
<db:para>Copies the selected objects to the clipboard.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Paste</db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold">Ctrl+V</db:emphasis></db:para>
</db:td>
<db:td>
<db:para>Pastes the objects in the clipboard onto the form.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Delete</db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold">Delete</db:emphasis></db:para>
</db:td>
<db:td>
<db:para>Deletes the selected objects.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Clone object</db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold">Ctrl+drag</db:emphasis> (leftmouse button)</db:para>
</db:td>
<db:td>
<db:para>Makes a copy of the selected object or group of objects.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Preview</db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold">Ctrl+R</db:emphasis></db:para>
</db:td>
<db:td>
<db:para>Shows a preview of the form.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>All of the above actions (apart from cloning) can be accessed via both the <db:emphasis role="bold">Edit</db:emphasis> menu and the form's context menu. These menus also provide funcitons for laying out objects as well as a <db:emphasis role="bold">Select All</db:emphasis> function to select all the objects on the form.</db:para>
<db:para>Widgets are not unique objects; you can make as many copies of them as you need. To quickly duplicate a widget, you can clone it by holding down the <db:emphasis role="bold">Ctrl</db:emphasis> key and dragging it. This allows widgets to be copied and placed on the form more quickly than with clipboard operations.</db:para>
<db:anchor xml:id="draganddrop"/>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/designer-dragging-onto-form.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold">Drag and Drop</db:emphasis></db:para>
<db:para><db:emphasis>Qt Designer</db:emphasis> makes extensive use of the drag and drop facilities provided by Qt. Widgets can be dragged from the widget box and dropped onto the form.</db:para>
<db:para>Widgets can also be &quot;cloned&quot; on the form: Holding down <db:emphasis role="bold">Ctrl</db:emphasis> and dragging the widget creates a copy of the widget that can be dragged to a new position.</db:para>
<db:para>It is also possible to drop Widgets onto the <db:link xlink:href="designer-widget-mode.xml#the-object-inspector">Object Inspector</db:link> to handle nested layouts easily.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para><db:emphasis>Qt Designer</db:emphasis> allows selections of objects to be copied, pasted, and dragged between forms. You can use this feature to create more than one copy of the same form, and experiment with different layouts in each of them.</db:para>
<db:section xml:id="the-property-editor">
<db:title>The Property Editor</db:title>
<db:para>The Property Editor always displays properties of the currently selected object on the form. The available properties depend on the object being edited, but all of the widgets provided have common properties such as <db:link xlink:href="qobject.xml#objectName-prop">objectName</db:link>, the object's internal name, and <db:link xlink:href="qwidget.xml#enabled-prop">enabled</db:link>, the property that determines whether an object can be interacted with or not.</db:para>
<db:anchor xml:id="editingproperties"/>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/designer-property-editor.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold">Editing Properties</db:emphasis></db:para>
<db:para>The property editor uses standard Qt input widgets to manage the properties of objects on the form. Textual properties are shown in line edits, integer properties are displayed in spinboxes, boolean properties are displayed in check boxes, and compound properties such as colors and sizes are presented in drop-down lists of input widgets.</db:para>
<db:para>Modified properties are indicated with bold labels. To reset them, click the arrow button on the right.</db:para>
<db:para>Changes in properties are applied to all selected objects that have the same property.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Certain properties are treated specially by the property editor:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Compound properties – properties that are made up of more than one value – are represented as nodes that can be expanded, allowing their values to be edited.</db:para>
</db:listitem>
<db:listitem>
<db:para>Properties that contain a choice or selection of flags are edited via combo boxes with checkable items.</db:para>
</db:listitem>
<db:listitem>
<db:para>Properties that allow access to rich data types, such as <db:link xlink:href="qpalette.xml">QPalette</db:link>, are modified using dialogs that open when the properties are edited. <db:link xlink:href="qlabel.xml">QLabel</db:link> and the widgets in the <db:emphasis role="bold">Buttons</db:emphasis> section of the widget box have a <db:code>text</db:code> property that can also be edited by double-clicking on the widget or by pressing <db:emphasis role="bold">F2</db:emphasis>. <db:emphasis>Qt Designer</db:emphasis> interprets the backslash (\) character specially, enabling newline (\n) characters to be inserted into the text; the \\ character sequence is used to insert a single backslash into the text. A context menu can also be opened while editing, providing another way to insert special characters and newlines into the text.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="dynamic-properties">
<db:title>Dynamic Properties</db:title>
<db:para>The property editor can also be used to add new <db:link xlink:href="qobject.xml#dynamic-properties">dynamic properties</db:link> to both standard Qt widgets and to forms themselves. Since Qt 4.4, dynamic properties are added and removed via the property editor's toolbar, shown below.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/designer-property-editor-toolbar.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>To add a dynamic property, click on the <db:emphasis role="bold">Add</db:emphasis> button <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/designer-property-editor-add-dynamic.png"/>
</db:imageobject>
</db:inlinemediaobject> . To remove it, click on the <db:emphasis role="bold">Remove</db:emphasis> button <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/designer-property-editor-remove-dynamic.png"/>
</db:imageobject>
</db:inlinemediaobject> instead. You can also sort the properties alphabetically and change the color groups by clickinig on the <db:emphasis role="bold">Configure</db:emphasis> button <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/designer-property-editor-configure.png"/>
</db:imageobject>
</db:inlinemediaobject> .</db:para>
</db:section>
<db:section xml:id="the-object-inspector">
<db:title>The Object Inspector</db:title>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/designer-object-inspector.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold">The Object Inspector</db:emphasis></db:para>
<db:para>The <db:emphasis role="bold">Object Inspector</db:emphasis> displays a hierarchical list of all the objects on the form that is currently being edited. To show the child objects of a container widget or a layout, click the handle next to the object label.</db:para>
<db:para>Each object on a form can be selected by clicking on the corresponding item in the <db:emphasis role="bold">Object Inspector</db:emphasis>. Right-clicking opens the form's context menu. These features can be useful if you have many overlapping objects. To locate an object in the <db:emphasis role="bold">Object Inspector</db:emphasis>, use <db:emphasis role="bold">Ctrl+F</db:emphasis>.</db:para>
<db:para>Since Qt 4.4, double-clicking on the object's name allows you to change the object's name with the in-place editor.</db:para>
<db:para>Since Qt 4.5, the <db:emphasis role="bold">Object Inspector</db:emphasis> displays the layout state of the containers. The broken layout icon ###ICON is displayed if there is something wrong with the layouts.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
</db:article>
