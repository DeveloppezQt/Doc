<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick 3D - RuntimeLoader Example</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates how assets can be loaded at runtime.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">// Copyright (C) 2021 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR BSD-3-Clause
#ifdef HAS_MODULE_QT_WIDGETS
# include &amp;lt;QApplication&amp;gt;
#endif
#include &amp;lt;QGuiApplication&amp;gt;
#include &amp;lt;QQmlApplicationEngine&amp;gt;
#include &amp;lt;QQuickWindow&amp;gt;
#include &amp;lt;QtQuick3D/qquick3d.h&amp;gt;

int main(int argc, char *argv[])
{
#ifdef HAS_MODULE_QT_WIDGETS
    QApplication app(argc, argv);
#else
    QGuiApplication app(argc, argv);
#endif
    app.setOrganizationName(&quot;The Qt Company&quot;);
    app.setOrganizationDomain(&quot;qt.io&quot;);
    app.setApplicationName(&quot;Runtime Asset Loading Example&quot;);

    const auto importUrl = argc &amp;gt; 1 ? QUrl::fromLocalFile(argv[1]) : QUrl{};
    if (importUrl.isValid())
        qDebug() &amp;lt;&amp;lt; &quot;Importing&quot; &amp;lt;&amp;lt; importUrl;

    QSurfaceFormat::setDefaultFormat(QQuick3D::idealSurfaceFormat(4));

    QQmlApplicationEngine engine;
    const QUrl url(QStringLiteral(&quot;qrc:/main.qml&quot;));
    engine.load(url);

    if (engine.rootObjects().isEmpty()) {
        qWarning() &amp;lt;&amp;lt; &quot;Could not find root object in&quot; &amp;lt;&amp;lt; url;
        return -1;
    }

    QObject *topLevel = engine.rootObjects().value(0);
    QQuickWindow *window = qobject_cast&amp;lt;QQuickWindow *&amp;gt;(topLevel);

    if (window)
        window-&amp;gt;setProperty(&quot;importUrl&quot;, importUrl);

    return app.exec();
}

</db:programlisting>
</db:article>
