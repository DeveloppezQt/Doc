<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Vector Deformation</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates how to manipulate the elements of a <db:link xlink:href="qpainterpath.xml">QPainterPath</db:link>.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/deform-demo.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>We define a vector deformation field in the shape of a lens and apply this to all points in a path. This means that what is rendered on screen is not pixel manipulation, but modified vector representations of the glyphs themselves. This is visible from the high quality of the antialiased edges for the deformed glyphs.</db:para>
<db:para>To get a fairly complex path we allow the user to type in text and convert the text to paths. This is done using the <db:link xlink:href="qpainterpath.xml#addText">QPainterPath::addText</db:link>() function.</db:para>
<db:para>The lens is drawn using a single call to <db:link xlink:href="qpainter.xml#drawEllipse">QPainter::drawEllipse</db:link>(), using a <db:link xlink:href="qradialgradient.xml">QRadialGradient</db:link> to fill it with a specialized color table, giving the effect of the sun's reflection and a drop shadow. The lens is cached as a pixmap for better performance.</db:para>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtbase.git/tree/examples/widgets/painting/deform?h=6.0">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
