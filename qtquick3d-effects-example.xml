<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick 3D - Effects Example</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates the built-in post-processing effects.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/effects-example.jpg"/>
</db:imageobject>
</db:mediaobject>
<db:para>This example demonstrates all the pre-made post-processing effects that are available in the <db:link xlink:href="qtquick3d-effects-qmlmodule.xml">QtQuick3D.Effects</db:link> module. It provides a user interface for changing the properties of each effect, and allows effects to be chained together.</db:para>
<db:para>When effects are combined, the result of one effect is used as input for the next. Note that chaining a large number of effects will incur a performance penalty. A <db:link xlink:href="qtquick3d-customeffect-example.xml">custom effect</db:link> may be more suitable in this case.</db:para>
<db:para>The example itself is relatively straightforward. It consists of a scene with two cubes and a sphere with different textures and materials chosen to show the results of each effect:</db:para>
<db:programlisting language="qml">Node {
    id: scene

    Model {
        source: &quot;#Cube&quot;
        x: -100
        eulerRotation.y: 45
        eulerRotation.x: 30 + view3D.animationValue
        scale: Qt.vector3d(2, 2, 2)
        materials: DefaultMaterial {
            diffuseMap: corkTexture
        }
    }

    Model {
        source: &quot;#Cube&quot;
        x: 350 * Math.sin(view3D.fastAnimationValue/180 * Math.PI)
        y: 350 * Math.cos(view3D.fastAnimationValue/180 * Math.PI)
        z: -300
        eulerRotation.y: 5
        eulerRotation.x: 5
        scale: Qt.vector3d(1.2, 1.2, 1.2)
        materials: DefaultMaterial {
            diffuseMap: textTexture
        }
    }

    Model {
        source: &quot;#Sphere&quot;
        x: 80
        y: -40
        z: 200
        scale: Qt.vector3d(1.4, 1.4, 1.4)
        materials: PrincipledMaterial {
            baseColor: &quot;#41cd52&quot;
            metalness: 0.0
            roughness: 0.1
            opacity: 1.0
        }
    }
}
</db:programlisting>
<db:para>The bulk of the example is the code that sets up each effect and adds the user interface for its properties:</db:para>
<db:programlisting language="qml">EffectBox {
    id: chromaticBox
    text: &quot;ChromaticAberration&quot;
    effect: ChromaticAberration {
        aberrationAmount: chromaticAmount.sliderValue
        focusDepth: chromaticDepth.sliderValue
    }
}
SettingsGroup {
    visible: chromaticBox.checked
    EffectSlider {
        id: chromaticAmount
        fromValue: -200.0
        toValue: 200.0
        sliderValue: 50
        precision: 0
        description: &quot;aberration amount&quot;
    }
    EffectSlider {
        id: chromaticDepth
        fromValue: 0.0
        toValue: 1000.0
        sliderValue: 600
        precision: 0
        description: &quot;focus depth&quot;
    }
}
</db:programlisting>
<db:para>The example defines a number of custom QML types for convenience. These are made for the needs of this specific example, and will not be described in detail.</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:code>EffectBox</db:code></db:para>
</db:td>
<db:td>
<db:para>A <db:link xlink:href="qml-qtquick-controls2-checkbox.xml">CheckBox</db:link> containing and enabling/disabling an effect</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>EffectColor</db:code></db:para>
</db:td>
<db:td>
<db:para>A very simple color picker consisting of three <db:link xlink:href="qml-qtquick-controls2-slider.xml">Slider</db:link> items</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>EffectSlider</db:code></db:para>
</db:td>
<db:td>
<db:para>A <db:link xlink:href="qml-qtquick-controls2-slider.xml">Slider</db:link> with a label showing the value, and an optional exponential mode</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>SettingsGroup</db:code></db:para>
</db:td>
<db:td>
<db:para>A <db:link xlink:href="qml-qtquick-column.xml">Column</db:link> with a frame around it and a background color.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="effects/CMakeLists.txt">effects/CMakeLists.txt</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="effects/CustomEffect.qml">effects/CustomEffect.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="effects/EffectBox.qml">effects/EffectBox.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="effects/EffectColor.qml">effects/EffectColor.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="effects/EffectSlider.qml">effects/EffectSlider.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="effects/SettingsGroup.qml">effects/SettingsGroup.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="effects/effects.pro">effects/effects.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="effects/main.cpp">effects/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="effects/main.qml">effects/main.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="effects/qml.qrc">effects/qml.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Images:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="effects/cork.jpg">effects/cork.jpg</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="effects/texture.png">effects/texture.png</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:section></db:article>
