<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Overlay QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A window overlay for popups.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Item</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Overlay provides a layer for popups, ensuring that popups are displayed above other content and that the background is dimmed when a <db:link xlink:href="qml-qtquick-controls-popup.xml#modal-prop">modal</db:link> or <db:link xlink:href="qml-qtquick-controls-popup.xml#dim-prop">dimmed</db:link> popup is visible.</db:para>
<db:para>The overlay is an ordinary Item that covers the entire window. It can be used as a visual parent to position a popup in scene coordinates.</db:para>
<db:para>The following example uses the attached <db:link xlink:href="qml-qtquick-controls-overlay.xml#overlay-attached-prop">Overlay.overlay</db:link> property to position a popup in the center of the window, despite the position of the button that opens the popup:</db:para>
<db:programlisting language="cpp">Button {
    onClicked: popup.open()

    Popup {
        id: popup

        parent: Overlay.overlay

        x: Math.round((parent.width - width) / 2)
        y: Math.round((parent.height - height) / 2)
        width: 100
        height: 100
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-applicationwindow.xml">ApplicationWindow</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="attached-property-documentation">
<db:title>Attached Property Documentation</db:title>
<db:section xml:id="modal-attached-prop">
<db:title>Overlay.modal : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>Overlay.modal</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property holds a component to use as a visual item that implements background dimming for modal popups. It is created for and stacked below visible modal popups.</db:para>
<db:para>The property can be attached to any popup.</db:para>
<db:para>For example, to change the color of the background dimming for a modal popup, the following code can be used:</db:para>
<db:programlisting language="qml">Popup {
    id: popup
    width: 400
    height: 400
    modal: true
    visible: true

    Overlay.modal: Rectangle {
        color: &quot;#aacfdbe7&quot;
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-popup.xml#modal-prop">Popup::modal</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="modeless-attached-prop">
<db:title>Overlay.modeless : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>Overlay.modeless</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property holds a component to use as a visual item that implements background dimming for modeless popups. It is created for and stacked below visible dimming popups.</db:para>
<db:para>The property can be attached to any popup.</db:para>
<db:para>For example, to change the color of the background dimming for a modeless popup, the following code can be used:</db:para>
<db:programlisting language="qml">Popup {
    id: popup
    width: 400
    height: 400
    dim: true
    visible: true

    Overlay.modeless: Rectangle {
        color: &quot;#aacfdbe7&quot;
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-popup.xml#dim-prop">Popup::dim</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="overlay-attached-prop">
<db:title>[read-only] Overlay.overlay : Overlay</db:title>
<db:fieldsynopsis>
<db:type>Overlay</db:type>
<db:varname>Overlay.overlay</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property holds the window overlay item.</db:para>
<db:para>The property can be attached to any item, popup, or window. When attached to an item or a popup, the value is <db:code>null</db:code> if the item or popup is not in a window.</db:para>
</db:section>
</db:section>
<db:section xml:id="attached-signal-documentation">
<db:title>Attached Signal Documentation</db:title>
<db:section xml:id="pressed-signal">
<db:title>pressed()</db:title>
<db:para>This attached signal is emitted when the overlay is pressed by the user while a popup is visible.</db:para>
<db:para>The signal can be attached to any item, popup, or window. When attached to an item or a popup, the signal is only emitted if the item or popup is in a window.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPressed</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="released-signal">
<db:title>released()</db:title>
<db:para>This attached signal is emitted when the overlay is released by the user while a popup is visible.</db:para>
<db:para>The signal can be attached to any item, popup, or window. When attached to an item or a popup, the signal is only emitted if the item or popup is in a window.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onReleased</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
