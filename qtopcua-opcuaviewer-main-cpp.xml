<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt OPC UA Viewer</db:title>
<db:productname>QtOpcUa</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>An OPC UA module for Qt</db:titleabbrev>
<db:abstract>
<db:para>Using the model/view approach to display all nodes of an OPC UA server in a tree view.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">// Copyright (C) 2018 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR BSD-3-Clause

#include &quot;mainwindow.h&quot;
#include &amp;lt;QApplication&amp;gt;
#include &amp;lt;QCommandLineParser&amp;gt;
#include &amp;lt;QCommandLineOption&amp;gt;

using namespace Qt::Literals::StringLiterals;

int main(int argc, char **argv)
{
    QApplication app(argc, argv);
    QCoreApplication::setApplicationVersion(QLatin1StringView(QT_VERSION_STR));
    QCoreApplication::setApplicationName(&quot;Qt OpcUa Viewer&quot;_L1);

    QCommandLineParser parser;
    parser.addHelpOption();
    parser.addVersionOption();
    parser.addPositionalArgument(&quot;url&quot;_L1, &quot;The url to open.&quot;_L1);
    parser.process(app);

    const auto positionalArguments = parser.positionalArguments();
    const auto initialUrl = positionalArguments.value(0, &quot;opc.tcp://localhost:48010&quot;_L1);
    MainWindow mainWindow(initialUrl.trimmed());
    mainWindow.setWindowTitle(&quot;Qt OPC UA viewer&quot;_L1);
    mainWindow.show();
    return QCoreApplication::exec();
}

</db:programlisting>
</db:article>
