<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>AbstractButton QML Type</db:title>
<db:productname>QtQuickControls2</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 2 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Abstract base type providing functionality common to buttons.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 2.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-button.xml" xlink:role="">Button</db:link>, <db:link xlink:href="qml-qtquick-controls2-checkbox.xml" xlink:role="">CheckBox</db:link>, <db:link xlink:href="qml-qtquick-controls2-itemdelegate.xml" xlink:role="">ItemDelegate</db:link>, <db:link xlink:href="qml-qtquick-controls2-menuitem.xml" xlink:role="">MenuItem</db:link>, <db:link xlink:href="qml-qtquick-controls2-radiobutton.xml" xlink:role="">RadioButton</db:link>, <db:link xlink:href="qml-qtquick-controls2-switch.xml" xlink:role="">Switch</db:link>, and <db:link xlink:href="qml-qtquick-controls2-tabbutton.xml" xlink:role="">TabButton</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-control.xml">Control</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>AbstractButton is part of <db:simplelist><db:member>qtquickcontrols2-buttons</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml">AbstractButton</db:link> provides the interface for controls with button-like behavior; for example, push buttons and checkable controls like radio buttons and check boxes. As an abstract control, it has no delegate implementations, leaving them to the types that derive from it.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-buttongroup.xml">ButtonGroup</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-buttons.xml">Button Controls</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="autoExclusive-prop">
<db:title>autoExclusive : bool</db:title>
<db:para>This property holds whether auto-exclusivity is enabled.</db:para>
<db:para>If auto-exclusivity is enabled, checkable buttons that belong to the same parent item behave as if they were part of the same <db:link xlink:href="qml-qtquick-controls2-buttongroup.xml">ButtonGroup</db:link>. Only one button can be checked at any time; checking another button automatically unchecks the previously checked one.</db:para>
<db:note>
<db:para>The property has no effect on buttons that belong to a <db:link xlink:href="qml-qtquick-controls2-buttongroup.xml">ButtonGroup</db:link>.</db:para>
</db:note>
<db:para><db:link xlink:href="qml-qtquick-controls2-radiobutton.xml">RadioButton</db:link> and <db:link xlink:href="qml-qtquick-controls2-tabbutton.xml">TabButton</db:link> are auto-exclusive by default.</db:para>
</db:section>
<db:section xml:id="checkable-prop">
<db:title>checkable : bool</db:title>
<db:para>This property holds whether the button is checkable.</db:para>
<db:para>A checkable button toggles between checked (on) and unchecked (off) when the user clicks on it or presses the space bar while the button has active focus.</db:para>
<db:para>Setting <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#checked-prop">checked</db:link> to <db:code>true</db:code> forces this property to <db:code>true</db:code>.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#checked-prop">checked</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="checked-prop">
<db:title>checked : bool</db:title>
<db:para>This property holds whether the button is checked.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#checkable-prop">checkable</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="down-prop">
<db:title>down : bool</db:title>
<db:para>This property holds whether the button is visually down.</db:para>
<db:para>Unless explicitly set, this property follows the value of <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#pressed-signal">pressed</db:link>. To return to the default value, set this property to <db:code>undefined</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#pressed-signal">pressed</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="indicator-prop">
<db:title>indicator : Item</db:title>
<db:para>This property holds the indicator item.</db:para>
</db:section>
<db:section xml:id="pressed-prop">
<db:title>[read-only] pressed : bool</db:title>
<db:para>This property holds whether the button is physically pressed. A button can be pressed by either touch or key events.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#down-prop">down</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="text-prop">
<db:title>text : string</db:title>
<db:para>This property holds a textual description of the button.</db:para>
<db:note>
<db:para>The text is used for accessibility purposes, so it makes sense to set a textual description even if the content item is an image.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#contentItem-prop">contentItem</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="canceled-signal">
<db:title>canceled()</db:title>
<db:para>This signal is emitted when the button loses mouse grab while being pressed, or when it would emit the <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#released-signal">released</db:link> signal but the mouse cursor is not inside the button.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onCanceled</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="clicked-signal">
<db:title>clicked()</db:title>
<db:para>This signal is emitted when the button is interactively clicked by the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="doubleClicked-signal">
<db:title>doubleClicked()</db:title>
<db:para>This signal is emitted when the button is interactively double clicked by the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onDoubleClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="pressAndHold-signal">
<db:title>pressAndHold()</db:title>
<db:para>This signal is emitted when the button is interactively pressed and held down by the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPressAndHold</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="pressed-signal">
<db:title>pressed()</db:title>
<db:para>This signal is emitted when the button is interactively pressed by the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPressed</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="released-signal">
<db:title>released()</db:title>
<db:para>This signal is emitted when the button is interactively released by the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onReleased</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="toggle-method">
<db:title>void toggle()</db:title>
<db:para>Toggles the checked state of the button.</db:para>
</db:section>
</db:section>
</db:article>
