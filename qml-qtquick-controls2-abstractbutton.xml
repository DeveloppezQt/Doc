<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>AbstractButton QML Type</db:title>
<db:productname>QtQuickControls2</db:productname>
<db:edition>Qt 5.11.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 2 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Abstract base type providing functionality common to buttons.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 2.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-button.xml" xlink:role="">Button</db:link>, <db:link xlink:href="qml-qtquick-controls2-checkbox.xml" xlink:role="">CheckBox</db:link>, <db:link xlink:href="qml-qtquick-controls2-delaybutton.xml" xlink:role="">DelayButton</db:link>, <db:link xlink:href="qml-qtquick-controls2-itemdelegate.xml" xlink:role="">ItemDelegate</db:link>, <db:link xlink:href="qml-qtquick-controls2-menubaritem.xml" xlink:role="">MenuBarItem</db:link>, <db:link xlink:href="qml-qtquick-controls2-menuitem.xml" xlink:role="">MenuItem</db:link>, <db:link xlink:href="qml-qtquick-controls2-radiobutton.xml" xlink:role="">RadioButton</db:link>, <db:link xlink:href="qml-qtquick-controls2-switch.xml" xlink:role="">Switch</db:link>, and <db:link xlink:href="qml-qtquick-controls2-tabbutton.xml" xlink:role="">TabButton</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Control</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>AbstractButton is part of <db:simplelist><db:member>qtquickcontrols2-buttons</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml">AbstractButton</db:link> provides the interface for controls with button-like behavior; for example, push buttons and checkable controls like radio buttons and check boxes. As an abstract control, it has no delegate implementations, leaving them to the types that derive from it.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-buttongroup.xml">ButtonGroup</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-buttons.xml">Button Controls</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="action-prop">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] action : Action</db:title>
<db:fieldsynopsis>
<db:type>Action</db:type>
<db:varname>action</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the button action.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-action.xml">Action</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="autoExclusive-prop">
<db:title>autoExclusive : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>autoExclusive</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether auto-exclusivity is enabled.</db:para>
<db:para>If auto-exclusivity is enabled, checkable buttons that belong to the same parent item behave as if they were part of the same <db:link xlink:href="qml-qtquick-controls2-buttongroup.xml">ButtonGroup</db:link>. Only one button can be checked at any time; checking another button automatically unchecks the previously checked one.</db:para>
<db:note>
<db:para>The property has no effect on buttons that belong to a <db:link xlink:href="qml-qtquick-controls2-buttongroup.xml">ButtonGroup</db:link>.</db:para>
</db:note>
<db:para><db:link xlink:href="qml-qtquick-controls2-radiobutton.xml">RadioButton</db:link> and <db:link xlink:href="qml-qtquick-controls2-tabbutton.xml">TabButton</db:link> are auto-exclusive by default.</db:para>
</db:section>
<db:section xml:id="autoRepeat-prop">
<db:title>autoRepeat : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>autoRepeat</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the button repeats <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#pressed-signal">pressed</db:link>(), <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#released-signal">released</db:link>() and <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#clicked-signal">clicked</db:link>() signals while the button is pressed and held down.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
<db:para>The initial delay and the repetition interval are defined in milliseconds by <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#autoRepeatDelay-prop">autoRepeatDelay</db:link> and <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#autoRepeatInterval-prop">autoRepeatInterval</db:link>.</db:para>
</db:section>
<db:section xml:id="autoRepeatDelay-prop">
<db:title>[since QtQuick.Controls 2.4 (Qt 5.11)] autoRepeatDelay : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>autoRepeatDelay</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the initial delay of auto-repetition in milliseconds. The default value is <db:code>300</db:code> ms.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.4 (Qt 5.11).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#autoRepeat-prop">autoRepeat</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#autoRepeatInterval-prop">autoRepeatInterval</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="autoRepeatInterval-prop">
<db:title>[since QtQuick.Controls 2.4 (Qt 5.11)] autoRepeatInterval : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>autoRepeatInterval</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the interval of auto-repetition in milliseconds. The default value is <db:code>100</db:code> ms.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.4 (Qt 5.11).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#autoRepeat-prop">autoRepeat</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#autoRepeatDelay-prop">autoRepeatDelay</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="checkable-prop">
<db:title>checkable : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>checkable</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the button is checkable.</db:para>
<db:para>A checkable button toggles between checked (on) and unchecked (off) when the user clicks on it or presses the space bar while the button has active focus.</db:para>
<db:para>Setting <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#checked-prop">checked</db:link> to <db:code>true</db:code> forces this property to <db:code>true</db:code>.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#checked-prop">checked</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="checked-prop">
<db:title>checked : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>checked</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the button is checked.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#checkable-prop">checkable</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="display-prop">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] display : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>display</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property determines how the <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#icon-prop">icon</db:link> and <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#text-prop">text</db:link> are displayed within the button.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Display</db:para>
</db:th>
<db:th>
<db:para>Result</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>AbstractButton.IconOnly</db:code></db:para>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-button-icononly.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>AbstractButton.TextOnly</db:code></db:para>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-button-textonly.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>AbstractButton.TextBesideIcon</db:code></db:para>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-button-textbesideicon.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>AbstractButton.TextUnderIcon</db:code></db:para>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-button-textundericon.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#spacing-prop">spacing</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">padding</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="down-prop">
<db:title>down : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>down</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the button is visually down.</db:para>
<db:para>Unless explicitly set, this property follows the value of <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#pressed-signal">pressed</db:link>. To return to the default value, set this property to <db:code>undefined</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#pressed-signal">pressed</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="icon-prop">
<db:title>icon group</db:title>
<db:bridgehead renderas="sect2" xml:id="icon.color-prop">icon.color : color</db:bridgehead>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>icon.color</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="icon.height-prop">icon.height : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>icon.height</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="icon.name-prop">icon.name : string</db:bridgehead>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>icon.name</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="icon.source-prop">icon.source : url</db:bridgehead>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>icon.source</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="icon.width-prop">icon.width : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>icon.width</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property group was added in <db:link xlink:href="qtquick-module.xml">QtQuick</db:link>.Controls 2.3.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Name</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>name</db:para>
</db:td>
<db:td>
<db:para>This property holds the name of the icon to use.</db:para>
<db:para>The icon will be loaded from the platform theme. If the icon is found in the theme, it will always be used; even if <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#icon.source-prop">icon.source</db:link> is also set. If the icon is not found, <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#icon.source-prop">icon.source</db:link> will be used instead.</db:para>
<db:para>For more information on theme icons, see <db:link xlink:href="qicon.xml#fromTheme">QIcon::fromTheme</db:link>().</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>source</db:para>
</db:td>
<db:td>
<db:para>This property holds the name of the icon to use.</db:para>
<db:para>The icon will be loaded as a regular image.</db:para>
<db:para>If <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#icon.name-prop">icon.name</db:link> is set and refers to a valid theme icon, it will always be used instead of this property.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>width</db:para>
</db:td>
<db:td>
<db:para>This property holds the width of the icon.</db:para>
<db:para>The icon's width will never exceed this value, though it will shrink when necessary.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>height</db:para>
</db:td>
<db:td>
<db:para>This property holds the height of the icon.</db:para>
<db:para>The icon's height will never exceed this value, though it will shrink when necessary.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>color</db:para>
</db:td>
<db:td>
<db:para>This property holds the color of the icon.</db:para>
<db:para>The icon is tinted with the specified color, unless the color is set to <db:code>&quot;transparent&quot;</db:code>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#text-prop">text</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#display-prop">display</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-icons.xml">Icons in Qt Quick Controls 2</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="indicator-prop">
<db:title>indicator : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>indicator</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the indicator item.</db:para>
</db:section>
<db:section xml:id="pressX-prop">
<db:title>[read-only, since QtQuick.Controls 2.4 (Qt 5.11)] pressX : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>pressX</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the x-coordinate of the last press.</db:para>
<db:note>
<db:para>The value is updated on touch moves, but left intact after touch release.</db:para>
</db:note>
<db:para>This property was introduced in QtQuick.Controls 2.4 (Qt 5.11).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#pressY-prop">pressY</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pressY-prop">
<db:title>[read-only, since QtQuick.Controls 2.4 (Qt 5.11)] pressY : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>pressY</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the y-coordinate of the last press.</db:para>
<db:note>
<db:para>The value is updated on touch moves, but left intact after touch release.</db:para>
</db:note>
<db:para>This property was introduced in QtQuick.Controls 2.4 (Qt 5.11).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#pressX-prop">pressX</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pressed-prop">
<db:title>[read-only] pressed : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>pressed</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the button is physically pressed. A button can be pressed by either touch or key events.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#down-prop">down</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="text-prop">
<db:title>text : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>text</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a textual description of the button.</db:para>
<db:note>
<db:para>The text is used for accessibility purposes, so it makes sense to set a textual description even if the content item is an image.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#icon-prop">icon</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#display-prop">display</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#contentItem-prop">contentItem</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="canceled-signal">
<db:title>canceled()</db:title>
<db:para>This signal is emitted when the button loses mouse grab while being pressed, or when it would emit the <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#released-signal">released</db:link> signal but the mouse cursor is not inside the button.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onCanceled</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="clicked-signal">
<db:title>clicked()</db:title>
<db:para>This signal is emitted when the button is interactively clicked by the user via touch, mouse, or keyboard.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="doubleClicked-signal">
<db:title>doubleClicked()</db:title>
<db:para>This signal is emitted when the button is interactively double clicked by the user via touch or mouse.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onDoubleClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="pressAndHold-signal">
<db:title>pressAndHold()</db:title>
<db:para>This signal is emitted when the button is interactively pressed and held down by the user via touch or mouse.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPressAndHold</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="pressed-signal">
<db:title>pressed()</db:title>
<db:para>This signal is emitted when the button is interactively pressed by the user via touch, mouse, or keyboard.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPressed</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="released-signal">
<db:title>released()</db:title>
<db:para>This signal is emitted when the button is interactively released by the user via touch, mouse, or keyboard.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onReleased</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="toggled-signal">
<db:title>[since QtQuick.Controls 2.2 (Qt 5.9)] toggled()</db:title>
<db:para>This signal is emitted when a checkable button is interactively toggled by the user via touch, mouse, or keyboard.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onToggled</db:code>.</db:para>
</db:note>
<db:para>This signal was introduced in QtQuick.Controls 2.2 (Qt 5.9).</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="toggle-method">
<db:title>void toggle()</db:title>
<db:para>Toggles the checked state of the button.</db:para>
</db:section>
</db:section>
</db:article>
