<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Window Flags Example</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Window Flags example shows how to use the window flags available in Qt.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &lt;QtWidgets&gt;

#include &quot;previewwindow.h&quot;

PreviewWindow::PreviewWindow(QWidget *parent)
    : QWidget(parent)
{
    textEdit = new QTextEdit;
    textEdit-&gt;setReadOnly(true);
    textEdit-&gt;setLineWrapMode(QTextEdit::NoWrap);

    closeButton = new QPushButton(tr(&quot;&amp;Close&quot;));
    connect(closeButton, SIGNAL(clicked()), this, SLOT(close()));

    QVBoxLayout *layout = new QVBoxLayout;
    layout-&gt;addWidget(textEdit);
    layout-&gt;addWidget(closeButton);
    setLayout(layout);

    setWindowTitle(tr(&quot;Preview&quot;));
}

void PreviewWindow::setWindowFlags(Qt::WindowFlags flags)
{
    QWidget::setWindowFlags(flags);

    QString text;

    Qt::WindowFlags type = (flags &amp; Qt::WindowType_Mask);
    if (type == Qt::Window) {
        text = &quot;Qt::Window&quot;;
    } else if (type == Qt::Dialog) {
        text = &quot;Qt::Dialog&quot;;
    } else if (type == Qt::Sheet) {
        text = &quot;Qt::Sheet&quot;;
    } else if (type == Qt::Drawer) {
        text = &quot;Qt::Drawer&quot;;
    } else if (type == Qt::Popup) {
        text = &quot;Qt::Popup&quot;;
    } else if (type == Qt::Tool) {
        text = &quot;Qt::Tool&quot;;
    } else if (type == Qt::ToolTip) {
        text = &quot;Qt::ToolTip&quot;;
    } else if (type == Qt::SplashScreen) {
        text = &quot;Qt::SplashScreen&quot;;
    }

    if (flags &amp; Qt::MSWindowsFixedSizeDialogHint)
        text += &quot;\n| Qt::MSWindowsFixedSizeDialogHint&quot;;
    if (flags &amp; Qt::X11BypassWindowManagerHint)
        text += &quot;\n| Qt::X11BypassWindowManagerHint&quot;;
    if (flags &amp; Qt::FramelessWindowHint)
        text += &quot;\n| Qt::FramelessWindowHint&quot;;
    if (flags &amp; Qt::NoDropShadowWindowHint)
        text += &quot;\n| Qt::NoDropShadowWindowHint&quot;;
    if (flags &amp; Qt::WindowTitleHint)
        text += &quot;\n| Qt::WindowTitleHint&quot;;
    if (flags &amp; Qt::WindowSystemMenuHint)
        text += &quot;\n| Qt::WindowSystemMenuHint&quot;;
    if (flags &amp; Qt::WindowMinimizeButtonHint)
        text += &quot;\n| Qt::WindowMinimizeButtonHint&quot;;
    if (flags &amp; Qt::WindowMaximizeButtonHint)
        text += &quot;\n| Qt::WindowMaximizeButtonHint&quot;;
    if (flags &amp; Qt::WindowCloseButtonHint)
        text += &quot;\n| Qt::WindowCloseButtonHint&quot;;
    if (flags &amp; Qt::WindowContextHelpButtonHint)
        text += &quot;\n| Qt::WindowContextHelpButtonHint&quot;;
    if (flags &amp; Qt::WindowShadeButtonHint)
        text += &quot;\n| Qt::WindowShadeButtonHint&quot;;
    if (flags &amp; Qt::WindowStaysOnTopHint)
        text += &quot;\n| Qt::WindowStaysOnTopHint&quot;;
    if (flags &amp; Qt::CustomizeWindowHint)
        text += &quot;\n| Qt::CustomizeWindowHint&quot;;

    textEdit-&gt;setPlainText(text);
}

</db:programlisting>
</db:article>
