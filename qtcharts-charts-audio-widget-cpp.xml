<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Audio Example</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This example shows the drawing of dynamic data (microphone input).</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Qt Charts module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:GPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3 or (at your option) any later version
** approved by the KDE Free Qt Foundation. The licenses are as published by
** the Free Software Foundation and appearing in the file LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;widget.h&quot;
#include &quot;xyseriesiodevice.h&quot;

#include &amp;lt;QtMultimedia/QAudioDeviceInfo&amp;gt;
#include &amp;lt;QtMultimedia/QAudioInput&amp;gt;

#include &amp;lt;QtCharts/QChartView&amp;gt;
#include &amp;lt;QtCharts/QLineSeries&amp;gt;
#include &amp;lt;QtCharts/QChart&amp;gt;
#include &amp;lt;QtCharts/QValueAxis&amp;gt;

#include &amp;lt;QtWidgets/QVBoxLayout&amp;gt;

QT_CHARTS_USE_NAMESPACE

Widget::Widget(const QAudioDeviceInfo &amp;amp;deviceInfo, QWidget *parent) :
    QWidget(parent),
    m_chart(new QChart),
    m_series(new QLineSeries)
{
    QChartView *chartView = new QChartView(m_chart);
    chartView-&amp;gt;setMinimumSize(800, 600);
    m_chart-&amp;gt;addSeries(m_series);
    QValueAxis *axisX = new QValueAxis;
    axisX-&amp;gt;setRange(0, XYSeriesIODevice::sampleCount);
    axisX-&amp;gt;setLabelFormat(&quot;%g&quot;);
    axisX-&amp;gt;setTitleText(&quot;Samples&quot;);
    QValueAxis *axisY = new QValueAxis;
    axisY-&amp;gt;setRange(-1, 1);
    axisY-&amp;gt;setTitleText(&quot;Audio level&quot;);
    m_chart-&amp;gt;addAxis(axisX, Qt::AlignBottom);
    m_series-&amp;gt;attachAxis(axisX);
    m_chart-&amp;gt;addAxis(axisY, Qt::AlignLeft);
    m_series-&amp;gt;attachAxis(axisY);
    m_chart-&amp;gt;legend()-&amp;gt;hide();
    m_chart-&amp;gt;setTitle(&quot;Data from the microphone (&quot; + deviceInfo.deviceName() + ')');

    QVBoxLayout *mainLayout = new QVBoxLayout(this);
    mainLayout-&amp;gt;addWidget(chartView);

    QAudioFormat formatAudio;
    formatAudio.setSampleRate(8000);
    formatAudio.setChannelCount(1);
    formatAudio.setSampleSize(8);
    formatAudio.setCodec(&quot;audio/pcm&quot;);
    formatAudio.setByteOrder(QAudioFormat::LittleEndian);
    formatAudio.setSampleType(QAudioFormat::UnSignedInt);

    m_audioInput = new QAudioInput(deviceInfo, formatAudio, this);

    m_device = new XYSeriesIODevice(m_series, this);
    m_device-&amp;gt;open(QIODevice::WriteOnly);

    m_audioInput-&amp;gt;start(m_device);
}

Widget::~Widget()
{
    m_audioInput-&amp;gt;stop();
    m_device-&amp;gt;close();
}

</db:programlisting>
</db:article>
