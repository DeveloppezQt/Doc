<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QXmlDTDHandler Class</db:title>
<db:productname>QtXml</db:productname>
<db:titleabbrev>Qt XML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qxmldtdhandler.xml">QXmlDTDHandler</db:link> class provides an interface to report DTD content of XML data.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QXmlDTDHandler</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qxmldefaulthandler.xml" xlink:role="class">QXmlDefaultHandler</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QXmlDTDHandler is part of <db:simplelist><db:member><db:link xlink:href="xml-tools.xml">XML Classes</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>If an application needs information about notations and unparsed entities, it can implement this interface and register an instance with <db:link xlink:href="qxmlreader.xml#setDTDHandler">QXmlReader::setDTDHandler</db:link>().</db:para>
<db:para>Note that this interface includes only those DTD events that the XML recommendation requires processors to report, i.e. notation and unparsed entity declarations using <db:link xlink:href="qxmldtdhandler.xml#notationDecl">notationDecl</db:link>() and <db:link xlink:href="qxmldtdhandler.xml#unparsedEntityDecl">unparsedEntityDecl</db:link>() respectively.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qxmldeclhandler.xml">QXmlDeclHandler</db:link></db:member>
<db:member><db:link xlink:href="qxmlcontenthandler.xml">QXmlContentHandler</db:link></db:member>
<db:member><db:link xlink:href="qxmlentityresolver.xml">QXmlEntityResolver</db:link></db:member>
<db:member><db:link xlink:href="qxmlerrorhandler.xml">QXmlErrorHandler</db:link></db:member>
<db:member><db:link xlink:href="qxmllexicalhandler.xml">QXmlLexicalHandler</db:link></db:member>
<db:member><db:link xlink:href="xml-sax.xml#introduction-to-sax2">Introduction to SAX2</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="dtor.QXmlDTDHandler">
<db:title>[virtual noexcept] QXmlDTDHandler::~QXmlDTDHandler()</db:title>
<db:para>Destroys the DTD handler.</db:para>
</db:section>
<db:section xml:id="errorString">
<db:title>[pure virtual] QString QXmlDTDHandler::errorString() const</db:title>
<db:para>The reader calls this function to get an error string if any of the handler functions returns false.</db:para>
</db:section>
<db:section xml:id="notationDecl">
<db:title>[pure virtual] bool QXmlDTDHandler::notationDecl(const QString &amp;<db:emphasis>name</db:emphasis>, const QString &amp;<db:emphasis>publicId</db:emphasis>, const QString &amp;<db:emphasis>systemId</db:emphasis>)</db:title>
<db:para>The reader calls this function when it has parsed a notation declaration.</db:para>
<db:para>The argument <db:code role="parameter">name</db:code> is the notation name, <db:code role="parameter">publicId</db:code> is the notation's public identifier and <db:code role="parameter">systemId</db:code> is the notation's system identifier.</db:para>
<db:para>If this function returns false the reader stops parsing and reports an error. The reader uses the function <db:link xlink:href="qxmldtdhandler.xml#errorString">errorString</db:link>() to get the error message.</db:para>
</db:section>
<db:section xml:id="unparsedEntityDecl">
<db:title>[pure virtual] bool QXmlDTDHandler::unparsedEntityDecl(const QString &amp;<db:emphasis>name</db:emphasis>, const QString &amp;<db:emphasis>publicId</db:emphasis>, const QString &amp;<db:emphasis>systemId</db:emphasis>, const QString &amp;<db:emphasis>notationName</db:emphasis>)</db:title>
<db:para>The reader calls this function when it finds an unparsed entity declaration.</db:para>
<db:para>The argument <db:code role="parameter">name</db:code> is the unparsed entity's name, <db:code role="parameter">publicId</db:code> is the entity's public identifier, <db:code role="parameter">systemId</db:code> is the entity's system identifier and <db:code role="parameter">notationName</db:code> is the name of the associated notation.</db:para>
<db:para>If this function returns false the reader stops parsing and reports an error. The reader uses the function <db:link xlink:href="qxmldtdhandler.xml#errorString">errorString</db:link>() to get the error message.</db:para>
</db:section>
</db:section>
</db:article>
