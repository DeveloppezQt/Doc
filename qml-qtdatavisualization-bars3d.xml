<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Bars3D QML Type</db:title>
<db:productname>QtDataVisualization</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Data Visualization Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>3D bar graph.</db:para>
<db:para>This type was introduced in QtDataVisualization 1.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtDataVisualization 1.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtDataVisualization 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml">AbstractGraph3D</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Bars3D is part of <db:simplelist><db:member>datavisualization_qml</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This type enables developers to render bar graphs in 3D with Qt Quick 2.</db:para>
<db:para>You will need to import data visualization module to use this type:</db:para>
<db:programlisting language="cpp">import QtDataVisualization 1.2
</db:programlisting>
<db:para>After that you can use <db:link xlink:href="qml-qtdatavisualization-bars3d.xml">Bars3D</db:link> in your qml files:</db:para>
<db:programlisting language="cpp">import QtQuick 2.0
import QtDataVisualization 1.2

Item {
    width: 640
    height: 480

    Bars3D {
        width: parent.width
        height: parent.height

        Bar3DSeries {
            itemLabelFormat: &quot;@colLabel, @rowLabel: @valueLabel&quot;

            ItemModelBarDataProxy {
                itemModel: dataModel
                // Mapping model roles to bar series rows, columns, and values.
                rowRole: &quot;year&quot;
                columnRole: &quot;city&quot;
                valueRole: &quot;expenses&quot;
            }
        }
    }

    ListModel {
        id: dataModel
        ListElement{ year: &quot;2012&quot;; city: &quot;Oulu&quot;;     expenses: &quot;4200&quot;; }
        ListElement{ year: &quot;2012&quot;; city: &quot;Rauma&quot;;    expenses: &quot;2100&quot;; }
        ListElement{ year: &quot;2012&quot;; city: &quot;Helsinki&quot;; expenses: &quot;7040&quot;; }
        ListElement{ year: &quot;2012&quot;; city: &quot;Tampere&quot;;  expenses: &quot;4330&quot;; }
        ListElement{ year: &quot;2013&quot;; city: &quot;Oulu&quot;;     expenses: &quot;3960&quot;; }
        ListElement{ year: &quot;2013&quot;; city: &quot;Rauma&quot;;    expenses: &quot;1990&quot;; }
        ListElement{ year: &quot;2013&quot;; city: &quot;Helsinki&quot;; expenses: &quot;7230&quot;; }
        ListElement{ year: &quot;2013&quot;; city: &quot;Tampere&quot;;  expenses: &quot;4650&quot;; }
    }
}
</db:programlisting>
<db:para>See <db:link xlink:href="qtdatavisualization-qmlbars-example.xml">Qt Quick 2 Bars Example</db:link> for more thorough usage example.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-bar3dseries.xml">Bar3DSeries</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml">ItemModelBarDataProxy</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-scatter3d.xml">Scatter3D</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-surface3d.xml">Surface3D</db:link></db:member>
<db:member><db:link xlink:href="qtdatavisualization-module.xml">Qt Data Visualization C++ Classes</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="barSpacing-prop">
<db:title>barSpacing : size</db:title>
<db:para>Bar spacing in X and Z dimensions.</db:para>
</db:section>
<db:section xml:id="barSpacingRelative-prop">
<db:title>barSpacingRelative : bool</db:title>
<db:para>Relative or absolute bar spacing.</db:para>
</db:section>
<db:section xml:id="barThickness-prop">
<db:title>barThickness : real</db:title>
<db:para>Bar thickness ratio between X and Z dimensions. 1.0 means bars are as wide as they are deep, 0.5 makes them twice as deep as they are wide.</db:para>
</db:section>
<db:section xml:id="columnAxis-prop">
<db:title>columnAxis : CategoryAxis3D</db:title>
<db:para>The active column axis.</db:para>
<db:para>If an axis is not given, a temporary default axis with no labels is created. This temporary axis is destroyed if another axis is explicitly set to same orientation.</db:para>
</db:section>
<db:section xml:id="floorLevel-prop">
<db:title>floorLevel : real</db:title>
<db:para>The desired floor level for the bar graph in Y-axis data coordinates. The actual floor level cannot go below Y-axis minimum or above Y-axis maximum. Defaults to zero.</db:para>
</db:section>
<db:section xml:id="multiSeriesUniform-prop">
<db:title>multiSeriesUniform : bool</db:title>
<db:para>This property controls if bars are to be scaled with proportions set to a single series bar even if there are multiple series displayed. If set to <db:code>true</db:code>, <db:link xlink:href="qml-qtdatavisualization-bars3d.xml#barSpacing-prop">bar spacing</db:link> will affect only X-axis correctly. It is preset to <db:code>false</db:code> by default.</db:para>
</db:section>
<db:section xml:id="primarySeries-prop">
<db:title>primarySeries : Bar3DSeries</db:title>
<db:para>Specifies the <db:code role="parameter">series</db:code> that is the primary series of the graph. The primary series is used to determine the row and column axis labels when the labels are not explicitly set to the axes. If the specified <db:code role="parameter">series</db:code> is not already added to the graph, setting it as the primary series will also implicitly add it to the graph. If the primary series itself is removed from the graph, this property resets to default. If <db:code role="parameter">series</db:code> is null, this property resets to default. Defaults to the first added series or zero if no series are added to the graph.</db:para>
</db:section>
<db:section xml:id="rowAxis-prop">
<db:title>rowAxis : CategoryAxis3D</db:title>
<db:para>The active row axis.</db:para>
<db:para>If an axis is not given, a temporary default axis with no labels is created. This temporary axis is destroyed if another axis is explicitly set to same orientation.</db:para>
</db:section>
<db:section xml:id="selectedSeries-prop">
<db:title>selectedSeries : Bar3DSeries</db:title>
<db:para>The selected series or <db:code>null</db:code>. If selectionMode has <db:code>SelectionMultiSeries</db:code> flag set, this property holds the series which owns the selected bar.</db:para>
</db:section>
<db:section xml:id="seriesList-prop">
<db:title>seriesList : list&lt;Bar3DSeries&gt;</db:title>
<db:para>This property holds the series of the graph. By default, this property contains an empty list. To set the series, either use the <db:link xlink:href="qml-qtdatavisualization-bars3d.xml#addSeries-method">addSeries</db:link>() function or define them as children of the graph.</db:para>
</db:section>
<db:section xml:id="valueAxis-prop">
<db:title>valueAxis : ValueAxis3D</db:title>
<db:para>The active value axis.</db:para>
<db:para>If an axis is not given, a temporary default axis with no labels and automatically adjusting range is created. This temporary axis is destroyed if another axis is explicitly set to same orientation.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="addSeries-method">
<db:title>void addSeries(Bar3DSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Adds the <db:code role="parameter">series</db:code> to the graph. A graph can contain multiple series, but only one set of axes, so the rows and columns of all series must match for the visualized data to be meaningful. If the graph has multiple visible series, only the first one added will generate the row or column labels on the axes in cases where the labels are not explicitly set to the axes. If the newly added series has specified a selected bar, it will be highlighted and any existing selection will be cleared. Only one added series can have an active selection.</db:para>
</db:section>
<db:section xml:id="insertSeries-method">
<db:title>void insertSeries(int <db:emphasis>index</db:emphasis>, Bar3DSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Inserts the <db:code role="parameter">series</db:code> into the position <db:code role="parameter">index</db:code> in the series list. If the <db:code role="parameter">series</db:code> has already been added to the list, it is moved to the new <db:code role="parameter">index</db:code>.</db:para>
<db:note>
<db:para>When moving a series to a new <db:code role="parameter">index</db:code> that is after its old index, the new position in list is calculated as if the series was still in its old index, so the final index is actually the <db:code role="parameter">index</db:code> decremented by one.</db:para>
</db:note>
</db:section>
<db:section xml:id="removeSeries-method">
<db:title>void removeSeries(Bar3DSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Remove the <db:code role="parameter">series</db:code> from the graph.</db:para>
</db:section>
</db:section>
</db:article>
