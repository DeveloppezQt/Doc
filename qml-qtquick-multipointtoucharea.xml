<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>MultiPointTouchArea QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Enables handling of multiple touch points.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Item</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>MultiPointTouchArea is part of <db:simplelist><db:member>qtquick-input</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link> is an invisible item that is used to track multiple touch points.</db:para>
<db:para>The <db:link xlink:href="qml-qtquick-item.xml#enabled-prop">Item::enabled</db:link> property is used to enable and disable touch handling. When disabled, the touch area becomes transparent to mouse and touch events.</db:para>
<db:para>By default, the mouse will be handled the same way as a single touch point, and items under the touch area will not receive mouse events because the touch area is handling them. But if the <db:link xlink:href="qml-qtquick-multipointtoucharea.xml#mouseEnabled-prop">mouseEnabled</db:link> property is set to false, it becomes transparent to mouse events so that another mouse-sensitive Item (such as a <db:link xlink:href="qml-qtquick-mousearea.xml">MouseArea</db:link>) can be used to handle mouse interaction separately.</db:para>
<db:para><db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link> can be used in two ways:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>setting <db:code>touchPoints</db:code> to provide touch point objects with properties that can be bound to</db:para>
</db:listitem>
<db:listitem>
<db:para>using the onTouchUpdated or onPressed, onUpdated and onReleased handlers</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>While a <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link> <db:emphasis>can</db:emphasis> take exclusive ownership of certain touch points, it is also possible to have multiple MultiPointTouchAreas active at the same time, each operating on a different set of touch points.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-touchpoint.xml">TouchPoint</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="maximumTouchPoints-prop">
<db:title>maximumTouchPoints : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>maximumTouchPoints</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2">minimumTouchPoints : int</db:bridgehead><db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>minimumTouchPoints</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>These properties hold the range of touch points to be handled by the touch area.</db:para>
<db:para>These are convenience that allow you to, for example, have nested MultiPointTouchAreas, one handling two finger touches, and another handling three finger touches.</db:para>
<db:para>By default, all touch points within the touch area are handled.</db:para>
<db:para>If <db:link xlink:href="qml-qtquick-multipointtoucharea.xml#mouseEnabled-prop">mouseEnabled</db:link> is true, the mouse acts as a touch point, so it is also subject to these constraints: for example if <db:link xlink:href="qml-qtquick-multipointtoucharea.xml#maximumTouchPoints-prop">maximumTouchPoints</db:link> is two, you can use the mouse as one touch point and a finger as another touch point for a total of two.</db:para>
</db:section>
<db:section xml:id="mouseEnabled-prop">
<db:title>mouseEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>mouseEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property controls whether the <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link> will handle mouse events too. If it is true (the default), the touch area will treat the mouse the same as a single touch point; if it is false, the touch area will ignore mouse events and allow them to &quot;pass through&quot; so that they can be handled by other items underneath.</db:para>
</db:section>
<db:section xml:id="touchPoints-prop">
<db:title>[read-only] touchPoints : list&lt;TouchPoint&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;TouchPoint&gt;</db:type>
<db:varname>touchPoints</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a set of user-defined touch point objects that can be bound to.</db:para>
<db:para>If <db:link xlink:href="qml-qtquick-multipointtoucharea.xml#mouseEnabled-prop">mouseEnabled</db:link> is true (the default) and the left mouse button is pressed while the mouse is over the touch area, the current mouse position will be one of these touch points.</db:para>
<db:para>In the following example, we have two small rectangles that follow our touch points.</db:para>
<db:programlisting language="qml">import QtQuick 2.0

Rectangle {
    width: 400; height: 400
    MultiPointTouchArea {
        anchors.fill: parent
        touchPoints: [
            TouchPoint { id: point1 },
            TouchPoint { id: point2 }
        ]
    }

    Rectangle {
        width: 30; height: 30
        color: &quot;green&quot;
        x: point1.x
        y: point1.y
    }

    Rectangle {
        width: 30; height: 30
        color: &quot;yellow&quot;
        x: point2.x
        y: point2.y
    }
}
</db:programlisting>
<db:para>By default this property holds an empty list.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-touchpoint.xml">TouchPoint</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="canceled-signal">
<db:title>canceled(list&lt;TouchPoint&gt; <db:emphasis>touchPoints</db:emphasis>)</db:title>
<db:para>This signal is emitted when new touch events have been canceled because another item stole the touch event handling.</db:para>
<db:para>This signal is for advanced use: it is useful when there is more than one <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link> that is handling input, or when there is a <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link> inside a <db:link xlink:href="qml-qtquick-flickable.xml">Flickable</db:link>. In the latter case, if you execute some logic in the <db:code>onPressed</db:code> signal handler and then start dragging, the <db:link xlink:href="qml-qtquick-flickable.xml">Flickable</db:link> may steal the touch handling from the <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link>. In these cases, to reset the logic when the <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link> has lost the touch handling to the <db:link xlink:href="qml-qtquick-flickable.xml">Flickable</db:link>, <db:code>canceled</db:code> should be handled in addition to <db:link xlink:href="qml-qtquick-multipointtoucharea.xml#released-signal">released</db:link>.</db:para>
<db:para><db:code role="parameter">touchPoints</db:code> is the list of canceled points.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onCanceled</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="gestureStarted-signal">
<db:title>gestureStarted(GestureEvent <db:emphasis>gesture</db:emphasis>)</db:title>
<db:para>This signal is emitted when the global drag threshold has been reached.</db:para>
<db:para>This signal is typically used when a <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link> has been nested in a Flickable or another <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link>. When the threshold has been reached and the signal is handled, you can determine whether or not the touch area should grab the current touch points. By default they will not be grabbed; to grab them call <db:code>gesture.grab()</db:code>. If the gesture is not grabbed, the nesting Flickable, for example, would also have an opportunity to grab.</db:para>
<db:para>The <db:code role="parameter">gesture</db:code> object also includes information on the current set of <db:code>touchPoints</db:code> and the <db:code>dragThreshold</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onGestureStarted</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="pressed-signal">
<db:title>pressed(list&lt;TouchPoint&gt; <db:emphasis>touchPoints</db:emphasis>)</db:title>
<db:para>This signal is emitted when new touch points are added. <db:code role="parameter">touchPoints</db:code> is a list of these new points.</db:para>
<db:para>If <db:link xlink:href="qml-qtquick-multipointtoucharea.xml#minimumTouchPoints-prop">minimumTouchPoints</db:link> is set to a value greater than one, this signal will not be emitted until the minimum number of required touch points has been reached.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPressed</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="released-signal">
<db:title>released(list&lt;TouchPoint&gt; <db:emphasis>touchPoints</db:emphasis>)</db:title>
<db:para>This signal is emitted when existing touch points are removed. <db:code role="parameter">touchPoints</db:code> is a list of these removed points.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onReleased</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="touchUpdated-signal">
<db:title>touchUpdated(list&lt;TouchPoint&gt; <db:emphasis>touchPoints</db:emphasis>)</db:title>
<db:para>This signal is emitted when the touch points handled by the <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link> change. This includes adding new touch points, removing or canceling previous touch points, as well as updating current touch point data. <db:code role="parameter">touchPoints</db:code> is the list of all current touch points.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onTouchUpdated</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="updated-signal">
<db:title>updated(list&lt;TouchPoint&gt; <db:emphasis>touchPoints</db:emphasis>)</db:title>
<db:para>This signal is emitted when existing touch points are updated. <db:code role="parameter">touchPoints</db:code> is a list of these updated points.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onUpdated</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
