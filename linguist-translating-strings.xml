<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Translating strings</db:title>
<db:productname>QtLinguist</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Linguist Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="linguist-ui.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Qt Linguist user interface"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="linguist-selecting-context.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="Selecting context to translate"/></db:extendedlink>
<db:abstract>
<db:para>Qt Linguist Manual.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Open translation source (TS) files in <db:emphasis>Qt Linguist</db:emphasis> for translation. TS files are human-readable XML files containing source phrases and their translations. TS files are usually created and updated by <db:code>lupdate</db:code>. If you do not have a TS file, see <db:link xlink:href="linguist-creating-ts-files.xml">Creating translation files</db:link> to learn how to generate one.</db:para>
<db:para>You can use <db:emphasis>Qt Linguist</db:emphasis> also to translate files in the international XML Localization Interchange File Format (XLIFF) that are generated by other programs. However, for standard Qt projects, only the TS file format is used. Only XLIFF versions 1.1 and 1.2 are currently supported.</db:para>
<db:para><db:emphasis>Qt Linguist</db:emphasis> displays the target language in the translation area, and adapts the number of input fields for plural forms accordingly. When you open several TS files to translate simultaneously, the <db:guilabel>Translator</db:guilabel> and <db:guilabel>Translator comment</db:guilabel> fields are displayed for each language. For more information about setting the location information, see <db:link xlink:href="linguist-translating-strings.xml#changing-the-target-locale">Changing the target locale</db:link>.</db:para>
<db:para>If the developer provides a disambiguating comment, you can see it in the <db:guilabel>Developer comments</db:guilabel> field.</db:para>
<db:para>To translate strings:</db:para>
<db:orderedlist numeration="arabic">
<db:listitem>
<db:para>Select <db:guilabel>File</db:guilabel> &gt; <db:guilabel>Open</db:guilabel> to load a TS file.</db:para>
</db:listitem>
<db:listitem>
<db:para>Select a context in the <db:guilabel>Context</db:guilabel> view to display translatable strings in the <db:guilabel>Strings</db:guilabel> view.</db:para>
<db:mediaobject>
<db:alt>{Two TS files open in Qt Linguist}</db:alt>
<db:imageobject>
<db:imagedata fileref="images/linguist-ui.webp"/>
</db:imageobject>
</db:mediaobject>
</db:listitem>
<db:listitem>
<db:para>Select a string to display it in the <db:guilabel>Source text</db:guilabel> field in the translation area. The whitespace within the source text is visualized.</db:para>
</db:listitem>
<db:listitem>
<db:para>Enter the translation of the current string in the <db:guilabel>Translation</db:guilabel> field.</db:para>
<db:para>Double-click an existing translation in the <db:guilabel>Phrases and guesses</db:guilabel> field to use it as the translation for the current string. <db:emphasis>Qt Linguist</db:emphasis> reads the phrases from phrase books and bases the guesses on existing translations of similar phrases in the TS file.</db:para>
</db:listitem>
<db:listitem>
<db:para>Optionally, enter a comment for other translators in the <db:guilabel>Translator comment</db:guilabel> field.</db:para>
</db:listitem>
<db:listitem>
<db:para>To accept the translation, press <db:emphasis role="bold">Ctrl+Enter</db:emphasis>, select <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-doneandnext.png"/>
</db:imageobject>
</db:inlinemediaobject> , or click the icon to the left of the selected source string in the string list.</db:para>
</db:listitem>
<db:listitem>
<db:para>Select <db:guilabel>File</db:guilabel> &gt; <db:guilabel>Save</db:guilabel> to save your work.</db:para>
</db:listitem>
</db:orderedlist>
<db:para>Repeat this process until all strings in the string list are marked with <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-check-on.png"/>
</db:imageobject>
</db:inlinemediaobject> (<db:guilabel>Accepted/Correct</db:guilabel>) or <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-check-warning.png"/>
</db:imageobject>
</db:inlinemediaobject> (<db:guilabel>Accepted/Warnings</db:guilabel>). Then select the next context and continue.</db:para>
<db:para>To view the number of words and characters in the source text and in the translated text, select <db:guilabel>View</db:guilabel> &gt; <db:guilabel>Statistics</db:guilabel>.</db:para>
<db:para>Select <db:guilabel>File</db:guilabel> &gt; <db:guilabel>Release</db:guilabel> to create a QM file with the same base name as the current translation source file. The <db:code>lrelease</db:code> tool performs the same function on <db:emphasis>all</db:emphasis> of an application's translation source files.</db:para>
<db:para>To print the translation source and the translations, select <db:guilabel>File</db:guilabel> &gt; <db:guilabel>Print</db:guilabel>.</db:para>
<db:para>To quit <db:emphasis>Qt Linguist</db:emphasis>, select <db:guilabel>File</db:guilabel> &gt; <db:guilabel>Exit</db:guilabel>.</db:para>
<db:section xml:id="moving-between-translatable-strings">
<db:title>Moving between translatable strings</db:title>
<db:para>To move to the next unfinished translation, select <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/nextunfinished.png"/>
</db:imageobject>
</db:inlinemediaobject> (<db:guilabel>Next Unfinished</db:guilabel>) or press <db:emphasis role="bold">Ctrl+J</db:emphasis>.</db:para>
<db:para>To move to the next source text, select <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/next.png"/>
</db:imageobject>
</db:inlinemediaobject> , press <db:emphasis role="bold">Ctrl+Shift+J</db:emphasis>, or select <db:guilabel>Translation</db:guilabel> &gt; <db:guilabel>Next</db:guilabel>.</db:para>
</db:section>
<db:section xml:id="phrases-that-require-multiple-translations-depending-on-context">
<db:title>Phrases that require multiple translations depending on context</db:title>
<db:para>The same phrase may occur in more than one context without conflict. When you reach another occurrence of a translated phrase, <db:emphasis>Qt Linguist</db:emphasis> provides the previous translation as a possible translation in the <db:guilabel>Phrases and guesses</db:guilabel> view.</db:para>
<db:para>If a phrase occurs more than once within a particular context, it appears only once in the <db:guilabel>Context</db:guilabel> view, and the translation is applied to every occurrence within the context. If the same phrase means different things within the same context, the developer must provide a comment for each occurrence of the phrase. The duplicate phrases appear in the <db:guilabel>Context</db:guilabel> view. The developer's comments appear in the translation area on a light blue background.</db:para>
</db:section>
<db:section xml:id="changing-keyboard-shortcuts">
<db:title>Changing keyboard shortcuts</db:title>
<db:para>A keyboard shortcut is a key combination that performs an action.</db:para>
<db:section xml:id="alt-key-shortcuts">
<db:title>Alt key shortcuts</db:title>
<db:para>In menu item and button text, a <db:emphasis>mnemonic</db:emphasis> character (marked by underlining) indicates that pressing <db:emphasis role="bold">Alt</db:emphasis> or <db:emphasis role="bold">Ctrl</db:emphasis> with the underlined character performs the same action as clicking the menu item or pressing the button.</db:para>
<db:para>For example, applications often use <db:emphasis>F</db:emphasis> as the mnemonic character in the <db:guilabel>File</db:guilabel> menu, so you can either click the menu item or press <db:emphasis role="bold">Alt+F</db:emphasis> to open the menu. The mnemonic character in the translatable string is prefixed with an ampersand: <db:code>\&amp;File</db:code>. The translation for the string should also have an ampersand in it, preferably in front of the same character.</db:para>
<db:para>You can determine the meaning of an <db:emphasis role="bold">Alt</db:emphasis> key shortcut from the phrase that contains the ampersand. You can use another mnemonic character if the translated phrase does not contain the current one or if it is used in the translation of some other shortcut in the context. Some key shortcuts, usually those on the menu bar, may apply in other contexts.</db:para>
</db:section>
<db:section xml:id="ctrl-key-shortcuts">
<db:title>Ctrl key shortcuts</db:title>
<db:para><db:emphasis role="bold">Ctrl</db:emphasis> key shortcuts can exist independently of any visual control. Typically, they invoke actions in menus that would require multiple keystrokes or mouse clicks or actions that do not appear in any menu or on any button. For example, the <db:guilabel>File</db:guilabel> menu might contain a <db:guilabel><db:emphasis role="underline">N</db:emphasis>ew Ctrl+N</db:guilabel> item that you can invoke by pressing <db:emphasis role="bold">Ctrl+N</db:emphasis> even when the <db:guilabel>File</db:guilabel> menu is closed.</db:para>
<db:para>Each <db:emphasis role="bold">Ctrl</db:emphasis> key shortcut appears in the <db:guilabel>Strings</db:guilabel> view as a separate string. For example, <db:emphasis role="bold">Ctrl+Enter</db:emphasis>. Since the string does not have a context to give it meaning, such as the context of the phrase in which an <db:emphasis role="bold">Alt</db:emphasis> key shortcut appears, you must rely on the developer to include a <db:link xlink:href="qobject.xml#tr">disambiguation comment</db:link> to explain the action the <db:emphasis role="bold">Ctrl</db:emphasis> key shortcut performs. The comment appears under <db:guilabel>Developer comments</db:guilabel> in the translation area below the <db:guilabel>Source text</db:guilabel> field.</db:para>
<db:para>Ideally, you can copy translations for <db:emphasis role="bold">Ctrl</db:emphasis> key shortcuts by selecting <db:guilabel>Translation</db:guilabel> &gt; <db:guilabel>Copy from source text</db:guilabel>. However, if the character does not make sense in the target language, change it. Whichever character (alpha or digit) you choose, use the form <db:emphasis role="bold">Ctrl+</db:emphasis> followed by the upper case character. Qt automatically displays the correct name at runtime. As with <db:emphasis role="bold">Alt</db:emphasis> key shortcuts, if you change the character, make sure that it does not conflict with any other <db:emphasis role="bold">Ctrl</db:emphasis> key shortcut.</db:para>
<db:note>
<db:para>Do not translate the <db:emphasis role="bold">Alt</db:emphasis>, <db:emphasis role="bold">Ctrl</db:emphasis> or <db:emphasis role="bold">Shift</db:emphasis> parts of the shortcuts, as Qt recognizes them and automatically translates them for supported languages.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="handling-numbered-arguments-and-plural-forms">
<db:title>Handling numbered arguments and plural forms</db:title>
<db:para>A numbered argument is a placeholder that will be replaced with text at runtime. It appears in a source string as a percent sign followed by a digit. For example, in the <db:code>After processing file %1, file %2 is next in line</db:code> string, <db:code>%1</db:code> and <db:code>%2</db:code> are numbered arguments that are replaced with the first and second file names at runtime. The same numbered arguments must appear in the translation, but not necessarily in the same order. A German translation of the string might reverse the phrases, for example <db:code>Datei %2 wird bearbeitet, wenn Datei %1 fertig ist</db:code>. Both numbered arguments appear in the translation, but in the reverse order. A numbered argument is always replaced by the same text in the translations, regardless of the position in the argument sequence in the source string.</db:para>
<db:para>The use of numbered arguments is often accompanied by the use of plural forms in the source text. In many languages, the form of the text will depend on the value shown, and more than one translation is required. If the developers have marked up the source text in correct way, fields for each of the possible plural forms will be available in the translation area. For more information, see <db:link xlink:href="i18n-source-translation.xml">Writing Source Code for Translation</db:link>.</db:para>
</db:section>
<db:section xml:id="changing-the-target-locale">
<db:title>Changing the target locale</db:title>
<db:para>You can set the locale information explicitly in <db:guilabel>Edit</db:guilabel> &gt; <db:guilabel>Translation File Settings</db:guilabel>. If the target language and country are not explicitly set when you open a translation source file, <db:emphasis>Qt Linguist</db:emphasis> attempts to deduct them from the translation source file name. This requires that the translation files adhere to the following file name convention: <db:code>appname_language[_country].ts</db:code>, where:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:code>language</db:code> is an ISO 639 language code in lowercase.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>country</db:code> is an ISO 3166 two-letter country code in uppercase.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>If this attempt to resolve the target language and country fails, the <db:guilabel>Translation File Settings</db:guilabel> window opens.</db:para>
<db:para>For example, <db:code>app_de.ts</db:code> sets the target language to German, and <db:code>app_de_CH.ts</db:code> sets the target language to German and the target country to Switzerland. This also helps loading translations for the current locale automatically. For more information, see <db:link xlink:href="i18n-source-translation.xml#enable-translation">Enable Translation</db:link>.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-translationfilesettings.png"/>
</db:imageobject>
</db:mediaobject>
</db:section>
</db:article>
