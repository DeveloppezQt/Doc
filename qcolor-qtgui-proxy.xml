<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QColor</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 5.4.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt GUI Reference Documentation.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="type-documentation">
<db:title>Type Documentation</db:title>
<db:section xml:id="QRgb-typedef">
<db:title>QRgb</db:title>
<db:para>An ARGB quadruplet on the format #AARRGGBB, equivalent to an unsigned int.</db:para>
<db:para>The type also holds a value for the alpha-channel. The default alpha channel is <db:code>ff</db:code>, i.e opaque. For more information, see the <db:link xlink:href="">Alpha-Blended Drawing</db:link> section.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">QColor::rgb()</db:link></db:member>
<db:member><db:link xlink:href="">QColor::rgba()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="function-documentation">
<db:title>Function Documentation</db:title>
<db:section xml:id="qAlpha">
<db:title>int qAlpha(QRgb <db:emphasis>rgba</db:emphasis>)</db:title>
<db:para>Returns the alpha component of the ARGB quadruplet <db:code role="parameter">rgba</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">qRgb()</db:link></db:member>
<db:member><db:link xlink:href="">QColor::alpha()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qBlue">
<db:title>int qBlue(QRgb <db:emphasis>rgb</db:emphasis>)</db:title>
<db:para>Returns the blue component of the ARGB quadruplet <db:code role="parameter">rgb</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">qRgb()</db:link></db:member>
<db:member><db:link xlink:href="">QColor::blue()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qGray">
<db:title>int qGray(int <db:emphasis>r</db:emphasis>, int <db:emphasis>g</db:emphasis>, int <db:emphasis>b</db:emphasis>)</db:title>
<db:para>Returns a gray value (0 to 255) from the (<db:code role="parameter">r</db:code>, <db:code role="parameter">g</db:code>, <db:code role="parameter">b</db:code>) triplet.</db:para>
<db:para>The gray value is calculated using the formula (<db:code role="parameter">r</db:code> * 11 + <db:code role="parameter">g</db:code> * 16 + <db:code role="parameter">b</db:code> * 5)/32.</db:para>
</db:section>
<db:section xml:id="qGray-1">
<db:title>int qGray(QRgb <db:emphasis>rgb</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns a gray value (0 to 255) from the given ARGB quadruplet <db:code role="parameter">rgb</db:code>.</db:para>
<db:para>The gray value is calculated using the formula (R * 11 + G * 16 + B * 5)/32; the alpha-channel is ignored.</db:para>
</db:section>
<db:section xml:id="qGreen">
<db:title>int qGreen(QRgb <db:emphasis>rgb</db:emphasis>)</db:title>
<db:para>Returns the green component of the ARGB quadruplet <db:code role="parameter">rgb</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">qRgb()</db:link></db:member>
<db:member><db:link xlink:href="">QColor::green()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qPremultiply">
<db:title>[since 5.3] QRgb qPremultiply(QRgb <db:emphasis>rgb</db:emphasis>)</db:title>
<db:para>Converts an unpremultiplied ARGB quadruplet <db:code role="parameter">rgb</db:code> into a premultiplied ARGB quadruplet.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcolor-qtgui-proxy.xml#qUnpremultiply">qUnpremultiply</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qRed">
<db:title>int qRed(QRgb <db:emphasis>rgb</db:emphasis>)</db:title>
<db:para>Returns the red component of the ARGB quadruplet <db:code role="parameter">rgb</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">qRgb()</db:link></db:member>
<db:member><db:link xlink:href="">QColor::red()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qUnpremultiply">
<db:title>[since 5.3] QRgb qUnpremultiply(QRgb <db:emphasis>rgb</db:emphasis>)</db:title>
<db:para>Converts a premultiplied ARGB quadruplet <db:code role="parameter">rgb</db:code> into an unpremultiplied ARGB quadruplet.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcolor-qtgui-proxy.xml#qPremultiply">qPremultiply</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
