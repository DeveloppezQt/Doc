<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QCalendarWidget Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qcalendarwidget.xml">QCalendarWidget</db:link> class provides a monthly based calendar widget allowing the user to select a date.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QCalendarWidget</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qwidget.xml" xlink:role="class">QWidget</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QCalendarWidget is part of <db:simplelist><db:member>advanced</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/fusion-calendarwidget.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The widget is initialized with the current month and year, but <db:link xlink:href="qcalendarwidget.xml">QCalendarWidget</db:link> provides several public slots to change the year and month that is shown.</db:para>
<db:para>By default, today's date is selected, and the user can select a date using both mouse and keyboard. The currently selected date can be retrieved using the <db:link xlink:href="qcalendarwidget.xml#selectedDate-prop">selectedDate</db:link>() function. It is possible to constrain the user selection to a given date range by setting the <db:link xlink:href="qcalendarwidget.xml#minimumDate-prop">minimumDate</db:link> and <db:link xlink:href="qcalendarwidget.xml#maximumDate-prop">maximumDate</db:link> properties. Alternatively, both properties can be set in one go using the <db:link xlink:href="qcalendarwidget.xml#setDateRange">setDateRange</db:link>() convenience slot. Set the <db:link xlink:href="qcalendarwidget.xml#selectionMode-prop">selectionMode</db:link> property to <db:link xlink:href="qcalendarwidget.xml#SelectionMode-enum">NoSelection</db:link> to prohibit the user from selecting at all. Note that a date also can be selected programmatically using the <db:link xlink:href="qcalendarwidget.xml#selectedDate-prop">setSelectedDate</db:link>() slot.</db:para>
<db:para>The currently displayed month and year can be retrieved using the <db:link xlink:href="qcalendarwidget.xml#monthShown">monthShown</db:link>() and <db:link xlink:href="qcalendarwidget.xml#yearShown">yearShown</db:link>() functions, respectively.</db:para>
<db:para>A newly created calendar widget uses abbreviated day names, and both Saturdays and Sundays are marked in red. The calendar grid is not visible. The week numbers are displayed, and the first column day is the first day of the week for the calendar's locale.</db:para>
<db:para>The notation of the days can be altered to a single letter abbreviations (&quot;M&quot; for &quot;Monday&quot;) by setting the <db:link xlink:href="qcalendarwidget.xml#horizontalHeaderFormat-prop">horizontalHeaderFormat</db:link> property to <db:link xlink:href="qcalendarwidget.xml#HorizontalHeaderFormat-enum">QCalendarWidget::SingleLetterDayNames</db:link>. Setting the same property to <db:link xlink:href="qcalendarwidget.xml#HorizontalHeaderFormat-enum">QCalendarWidget::LongDayNames</db:link> makes the header display the complete day names. The week numbers can be removed by setting the <db:link xlink:href="qcalendarwidget.xml#verticalHeaderFormat-prop">verticalHeaderFormat</db:link> property to <db:link xlink:href="qcalendarwidget.xml#VerticalHeaderFormat-enum">QCalendarWidget::NoVerticalHeader</db:link>. The calendar grid can be turned on by setting the <db:link xlink:href="qcalendarwidget.xml#gridVisible-prop">gridVisible</db:link> property to true using the <db:link xlink:href="qcalendarwidget.xml#gridVisible-prop">setGridVisible</db:link>() function:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qcalendarwidget-grid.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:programlisting language="cpp">QCalendarWidget *calendar;
calendar-&amp;gt;setGridVisible(true);
</db:programlisting>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Finally, the day in the first column can be altered using the <db:link xlink:href="qcalendarwidget.xml#firstDayOfWeek-prop">setFirstDayOfWeek</db:link>() function.</db:para>
<db:para>The <db:link xlink:href="qcalendarwidget.xml">QCalendarWidget</db:link> class also provides three signals, <db:link xlink:href="qcalendarwidget.xml#selectionChanged">selectionChanged</db:link>(), <db:link xlink:href="qcalendarwidget.xml#activated">activated</db:link>() and <db:link xlink:href="qcalendarwidget.xml#currentPageChanged">currentPageChanged</db:link>() making it possible to respond to user interaction.</db:para>
<db:para>The rendering of the headers, weekdays or single days can be largely customized by setting <db:link xlink:href="qtextcharformat.xml">QTextCharFormat</db:link>'s for some special weekday, a special date or for the rendering of the headers.</db:para>
<db:para>Only a subset of the properties in <db:link xlink:href="qtextcharformat.xml">QTextCharFormat</db:link> are used by the calendar widget. Currently, the foreground, background and font properties are used to determine the rendering of individual cells in the widget.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdate.xml">QDate</db:link></db:member>
<db:member><db:link xlink:href="qdateedit.xml">QDateEdit</db:link></db:member>
<db:member><db:link xlink:href="qtextcharformat.xml">QTextCharFormat</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="HorizontalHeaderFormat-enum">
<db:title>enum QCalendarWidget::HorizontalHeaderFormat</db:title>
<db:enumsynopsis>
<db:enumname>HorizontalHeaderFormat</db:enumname>
<db:enumitem>
<db:enumidentifier>NoHorizontalHeader</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SingleLetterDayNames</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ShortDayNames</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>LongDayNames</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum type defines the various formats the horizontal header can display.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcalendarwidget.xml">QCalendarWidget</db:link></db:emphasis>::SingleLetterDayNames</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The header displays a single letter abbreviation for day names (e.g. M for Monday).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcalendarwidget.xml">QCalendarWidget</db:link></db:emphasis>::ShortDayNames</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The header displays a short abbreviation for day names (e.g. Mon for Monday).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcalendarwidget.xml">QCalendarWidget</db:link></db:emphasis>::LongDayNames</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>The header displays complete day names (e.g. Monday).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcalendarwidget.xml">QCalendarWidget</db:link></db:emphasis>::NoHorizontalHeader</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The header is hidden.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#horizontalHeaderFormat-prop">horizontalHeaderFormat</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#VerticalHeaderFormat-enum">VerticalHeaderFormat</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="SelectionMode-enum">
<db:title>enum QCalendarWidget::SelectionMode</db:title>
<db:enumsynopsis>
<db:enumname>SelectionMode</db:enumname>
<db:enumitem>
<db:enumidentifier>NoSelection</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SingleSelection</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the types of selection offered to the user for selecting dates in the calendar.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcalendarwidget.xml">QCalendarWidget</db:link></db:emphasis>::NoSelection</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Dates cannot be selected.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcalendarwidget.xml">QCalendarWidget</db:link></db:emphasis>::SingleSelection</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Single dates can be selected.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#selectionMode-prop">selectionMode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="VerticalHeaderFormat-enum">
<db:title>enum QCalendarWidget::VerticalHeaderFormat</db:title>
<db:enumsynopsis>
<db:enumname>VerticalHeaderFormat</db:enumname>
<db:enumitem>
<db:enumidentifier>NoVerticalHeader</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ISOWeekNumbers</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum type defines the various formats the vertical header can display.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcalendarwidget.xml">QCalendarWidget</db:link></db:emphasis>::ISOWeekNumbers</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The header displays ISO week numbers as described by <db:link xlink:href="qdate.xml#weekNumber">QDate::weekNumber</db:link>().</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcalendarwidget.xml">QCalendarWidget</db:link></db:emphasis>::NoVerticalHeader</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The header is hidden.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#verticalHeaderFormat-prop">verticalHeaderFormat</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#HorizontalHeaderFormat-enum">HorizontalHeaderFormat</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="dateEditAcceptDelay-prop">
<db:title>dateEditAcceptDelay : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>dateEditAcceptDelay</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">dateEditAcceptDelay</db:synopsisinfo>
<db:synopsisinfo role="setter">setDateEditAcceptDelay</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the time an inactive date edit is shown before its contents are accepted</db:para>
<db:para>If the calendar widget's <db:link xlink:href="qcalendarwidget.xml#dateEditEnabled-prop">date edit is enabled</db:link>, this property specifies the amount of time (in millseconds) that the date edit remains open after the most recent user input. Once this time has elapsed, the date specified in the date edit is accepted and the popup is closed.</db:para>
<db:para>By default, the delay is defined to be 1500 milliseconds (1.5 seconds).</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">dateEditAcceptDelay</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setDateEditAcceptDelay</db:emphasis>(<db:type>int</db:type> <db:emphasis>delay</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="dateEditEnabled-prop">
<db:title>dateEditEnabled : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>dateEditEnabled</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isDateEditEnabled</db:synopsisinfo>
<db:synopsisinfo role="setter">setDateEditEnabled</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the date edit popup is enabled</db:para>
<db:para>If this property is enabled, pressing a non-modifier key will cause a date edit to popup if the calendar widget has focus, allowing the user to specify a date in the form specified by the current locale.</db:para>
<db:para>By default, this property is enabled.</db:para>
<db:para>The date edit is simpler in appearance than <db:link xlink:href="qdateedit.xml">QDateEdit</db:link>, but allows the user to navigate between fields using the left and right cursor keys, increment and decrement individual fields using the up and down cursor keys, and enter values directly using the number keys.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isDateEditEnabled</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setDateEditEnabled</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enable</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#dateEditAcceptDelay-prop">QCalendarWidget::dateEditAcceptDelay</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="firstDayOfWeek-prop">
<db:title>firstDayOfWeek : Qt::DayOfWeek</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt::DayOfWeek</db:type>
<db:varname>firstDayOfWeek</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">firstDayOfWeek</db:synopsisinfo>
<db:synopsisinfo role="setter">setFirstDayOfWeek</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a value identifying the day displayed in the first column.</db:para>
<db:para>By default, the day displayed in the first column is the first day of the week for the calendar's locale.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt.xml#DayOfWeek-enum">Qt::DayOfWeek</db:link></db:type> <db:emphasis role="bold">firstDayOfWeek</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setFirstDayOfWeek</db:emphasis>(<db:type><db:link xlink:href="qt.xml#DayOfWeek-enum">Qt::DayOfWeek</db:link></db:type> <db:emphasis>dayOfWeek</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="gridVisible-prop">
<db:title>gridVisible : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>gridVisible</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isGridVisible</db:synopsisinfo>
<db:synopsisinfo role="setter">setGridVisible</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the table grid is displayed.</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qcalendarwidget-grid.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:programlisting language="cpp">QCalendarWidget *calendar;
calendar-&amp;gt;setGridVisible(true);
</db:programlisting>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The default value is false.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isGridVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setGridVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>show</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="horizontalHeaderFormat-prop">
<db:title>horizontalHeaderFormat : HorizontalHeaderFormat</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>HorizontalHeaderFormat</db:type>
<db:varname>horizontalHeaderFormat</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">horizontalHeaderFormat</db:synopsisinfo>
<db:synopsisinfo role="setter">setHorizontalHeaderFormat</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the format of the horizontal header.</db:para>
<db:para>The default value is <db:link xlink:href="qcalendarwidget.xml#HorizontalHeaderFormat-enum">QCalendarWidget::ShortDayNames</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcalendarwidget.xml#HorizontalHeaderFormat-enum">QCalendarWidget::HorizontalHeaderFormat</db:link></db:type> <db:emphasis role="bold">horizontalHeaderFormat</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setHorizontalHeaderFormat</db:emphasis>(<db:type><db:link xlink:href="qcalendarwidget.xml#HorizontalHeaderFormat-enum">QCalendarWidget::HorizontalHeaderFormat</db:link></db:type> <db:emphasis>format</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="maximumDate-prop">
<db:title>maximumDate : QDate</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QDate</db:type>
<db:varname>maximumDate</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">maximumDate</db:synopsisinfo>
<db:synopsisinfo role="setter">setMaximumDate</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the maximum date of the currently specified date range.</db:para>
<db:para>The user will not be able to select a date which is after the currently set maximum date.</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qcalendarwidget-maximum.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:programlisting language="cpp">QCalendarWidget *calendar;
calendar-&amp;gt;setGridVisible(true);
calendar-&amp;gt;setMaximumDate(QDate(2006, 7, 3));
</db:programlisting>
</db:td>
</db:tr>
</db:informaltable>
<db:para>By default, the maximum date is the last day the <db:link xlink:href="qdate.xml">QDate</db:link> class can handle.</db:para>
<db:para>When setting a maximum date, the <db:link xlink:href="qcalendarwidget.xml#minimumDate-prop">minimumDate</db:link> and <db:link xlink:href="qcalendarwidget.xml#selectedDate-prop">selectedDate</db:link> properties are adjusted if the selection range becomes invalid. If the provided date is not a valid <db:link xlink:href="qdate.xml">QDate</db:link> object, the setMaximumDate() function does nothing.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qdate.xml">QDate</db:link></db:type> <db:emphasis role="bold">maximumDate</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMaximumDate</db:emphasis>(<db:type><db:link xlink:href="qdate.xml">QDate</db:link></db:type> <db:emphasis>date</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#setDateRange">setDateRange</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="minimumDate-prop">
<db:title>minimumDate : QDate</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QDate</db:type>
<db:varname>minimumDate</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">minimumDate</db:synopsisinfo>
<db:synopsisinfo role="setter">setMinimumDate</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the minimum date of the currently specified date range.</db:para>
<db:para>The user will not be able to select a date that is before the currently set minimum date.</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qcalendarwidget-minimum.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:programlisting language="cpp">QCalendarWidget *calendar;
calendar-&amp;gt;setGridVisible(true);
calendar-&amp;gt;setMinimumDate(QDate(2006, 6, 19));
</db:programlisting>
</db:td>
</db:tr>
</db:informaltable>
<db:para>By default, the minimum date is the earliest date that the <db:link xlink:href="qdate.xml">QDate</db:link> class can handle.</db:para>
<db:para>When setting a minimum date, the <db:link xlink:href="qcalendarwidget.xml#maximumDate-prop">maximumDate</db:link> and <db:link xlink:href="qcalendarwidget.xml#selectedDate-prop">selectedDate</db:link> properties are adjusted if the selection range becomes invalid. If the provided date is not a valid <db:link xlink:href="qdate.xml">QDate</db:link> object, the setMinimumDate() function does nothing.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qdate.xml">QDate</db:link></db:type> <db:emphasis role="bold">minimumDate</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinimumDate</db:emphasis>(<db:type><db:link xlink:href="qdate.xml">QDate</db:link></db:type> <db:emphasis>date</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#setDateRange">setDateRange</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="navigationBarVisible-prop">
<db:title>navigationBarVisible : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>navigationBarVisible</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isNavigationBarVisible</db:synopsisinfo>
<db:synopsisinfo role="setter">setNavigationBarVisible</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the navigation bar is shown or not</db:para>
<db:para>When this property is <db:code>true</db:code> (the default), the next month, previous month, month selection, year selection controls are shown on top.</db:para>
<db:para>When the property is set to false, these controls are hidden.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isNavigationBarVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setNavigationBarVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="selectedDate-prop">
<db:title>selectedDate : QDate</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QDate</db:type>
<db:varname>selectedDate</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">selectedDate</db:synopsisinfo>
<db:synopsisinfo role="setter">setSelectedDate</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the currently selected date.</db:para>
<db:para>The selected date must be within the date range specified by the <db:link xlink:href="qcalendarwidget.xml#minimumDate-prop">minimumDate</db:link> and <db:link xlink:href="qcalendarwidget.xml#maximumDate-prop">maximumDate</db:link> properties. By default, the selected date is the current date.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qdate.xml">QDate</db:link></db:type> <db:emphasis role="bold">selectedDate</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSelectedDate</db:emphasis>(<db:type><db:link xlink:href="qdate.xml">QDate</db:link></db:type> <db:emphasis>date</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#setDateRange">setDateRange</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectionMode-prop">
<db:title>selectionMode : SelectionMode</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>SelectionMode</db:type>
<db:varname>selectionMode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">selectionMode</db:synopsisinfo>
<db:synopsisinfo role="setter">setSelectionMode</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the type of selection the user can make in the calendar</db:para>
<db:para>When this property is set to <db:link xlink:href="qcalendarwidget.xml#SelectionMode-enum">SingleSelection</db:link>, the user can select a date within the minimum and maximum allowed dates, using either the mouse or the keyboard.</db:para>
<db:para>When the property is set to <db:link xlink:href="qcalendarwidget.xml#SelectionMode-enum">NoSelection</db:link>, the user will be unable to select dates, but they can still be selected programmatically. Note that the date that is selected when the property is set to <db:link xlink:href="qcalendarwidget.xml#SelectionMode-enum">NoSelection</db:link> will still be the selected date of the calendar.</db:para>
<db:para>The default value is <db:link xlink:href="qcalendarwidget.xml#SelectionMode-enum">SingleSelection</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcalendarwidget.xml#SelectionMode-enum">QCalendarWidget::SelectionMode</db:link></db:type> <db:emphasis role="bold">selectionMode</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSelectionMode</db:emphasis>(<db:type><db:link xlink:href="qcalendarwidget.xml#SelectionMode-enum">QCalendarWidget::SelectionMode</db:link></db:type> <db:emphasis>mode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="verticalHeaderFormat-prop">
<db:title>verticalHeaderFormat : VerticalHeaderFormat</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>VerticalHeaderFormat</db:type>
<db:varname>verticalHeaderFormat</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">verticalHeaderFormat</db:synopsisinfo>
<db:synopsisinfo role="setter">setVerticalHeaderFormat</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the format of the vertical header.</db:para>
<db:para>The default value is QCalendarWidget::ISOWeekNumber.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcalendarwidget.xml#VerticalHeaderFormat-enum">QCalendarWidget::VerticalHeaderFormat</db:link></db:type> <db:emphasis role="bold">verticalHeaderFormat</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setVerticalHeaderFormat</db:emphasis>(<db:type><db:link xlink:href="qcalendarwidget.xml#VerticalHeaderFormat-enum">QCalendarWidget::VerticalHeaderFormat</db:link></db:type> <db:emphasis>format</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QCalendarWidget">
<db:title>[explicit] QCalendarWidget::QCalendarWidget(QWidget *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QCalendarWidget</db:methodname>
<db:methodparam>
<db:type>QWidget *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QCalendarWidget(QWidget *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a calendar widget with the given <db:code role="parameter">parent</db:code>.</db:para>
<db:para>The widget is initialized with the current month and year, and the currently selected date is today.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#setCurrentPage">setCurrentPage</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dtor.QCalendarWidget">
<db:title>[virtual] QCalendarWidget::~QCalendarWidget()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QCalendarWidget</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QCalendarWidget()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the calendar widget.</db:para>
</db:section>
<db:section xml:id="activated">
<db:title>void QCalendarWidget::activated(QDate <db:emphasis>date</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>activated</db:methodname>
<db:methodparam>
<db:type>QDate</db:type>
<db:parameter>date</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void activated(QDate date)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted whenever the user presses the Return or Enter key or double-clicks a <db:code role="parameter">date</db:code> in the calendar widget.</db:para>
</db:section>
<db:section xml:id="clicked">
<db:title>void QCalendarWidget::clicked(QDate <db:emphasis>date</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>clicked</db:methodname>
<db:methodparam>
<db:type>QDate</db:type>
<db:parameter>date</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void clicked(QDate date)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when a mouse button is clicked. The date the mouse was clicked on is specified by <db:code role="parameter">date</db:code>. The signal is only emitted when clicked on a valid date, e.g., dates are not outside the <db:link xlink:href="qcalendarwidget.xml#minimumDate-prop">minimumDate</db:link>() and <db:link xlink:href="qcalendarwidget.xml#maximumDate-prop">maximumDate</db:link>(). If the selection mode is <db:link xlink:href="qcalendarwidget.xml#SelectionMode-enum">NoSelection</db:link>, this signal will not be emitted.</db:para>
</db:section>
<db:section xml:id="currentPageChanged">
<db:title>void QCalendarWidget::currentPageChanged(int <db:emphasis>year</db:emphasis>, int <db:emphasis>month</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>currentPageChanged</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>year</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>month</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void currentPageChanged(int year, int month)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the currently shown month is changed. The new <db:code role="parameter">year</db:code> and <db:code role="parameter">month</db:code> are passed as parameters.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#setCurrentPage">setCurrentPage</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dateTextFormat">
<db:title>QMap&lt;QDate, QTextCharFormat&gt; QCalendarWidget::dateTextFormat() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QMap&lt;QDate, QTextCharFormat&gt;</db:type>
<db:methodname>dateTextFormat</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QMap&lt;QDate, QTextCharFormat&gt; dateTextFormat() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a <db:link xlink:href="qmap.xml">QMap</db:link> from <db:link xlink:href="qdate.xml">QDate</db:link> to <db:link xlink:href="qtextcharformat.xml">QTextCharFormat</db:link> showing all dates that use a special format that alters their rendering.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#setDateTextFormat">setDateTextFormat</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dateTextFormat-1">
<db:title>QTextCharFormat QCalendarWidget::dateTextFormat(QDate <db:emphasis>date</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QTextCharFormat</db:type>
<db:methodname>dateTextFormat</db:methodname>
<db:methodparam>
<db:type>QDate</db:type>
<db:parameter>date</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QTextCharFormat dateTextFormat(QDate date) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a <db:link xlink:href="qtextcharformat.xml">QTextCharFormat</db:link> for <db:code role="parameter">date</db:code>. The char format can be be empty if the date is not renderd specially.</db:para>
</db:section>
<db:section xml:id="event">
<db:title>[override virtual protected] bool QCalendarWidget::event(QEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>bool</db:type>
<db:methodname>event</db:methodname>
<db:methodparam>
<db:type>QEvent *</db:type>
<db:parameter>event</db:parameter>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool event(QEvent *event) override</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#event" role="function">QWidget::event(QEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="eventFilter">
<db:title>[override virtual protected] bool QCalendarWidget::eventFilter(QObject *<db:emphasis>watched</db:emphasis>, QEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>bool</db:type>
<db:methodname>eventFilter</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>watched</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QEvent *</db:type>
<db:parameter>event</db:parameter>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool eventFilter(QObject *watched, QEvent *event) override</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qobject.xml#eventFilter" role="function">QObject::eventFilter(QObject *watched, QEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="headerTextFormat">
<db:title>QTextCharFormat QCalendarWidget::headerTextFormat() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QTextCharFormat</db:type>
<db:methodname>headerTextFormat</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QTextCharFormat headerTextFormat() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the text char format for rendering the header.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#setHeaderTextFormat">setHeaderTextFormat</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="keyPressEvent">
<db:title>[override virtual protected] void QCalendarWidget::keyPressEvent(QKeyEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>keyPressEvent</db:methodname>
<db:methodparam>
<db:type>QKeyEvent *</db:type>
<db:parameter>event</db:parameter>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void keyPressEvent(QKeyEvent *event) override</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#keyPressEvent" role="function">QWidget::keyPressEvent(QKeyEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="minimumSizeHint">
<db:title>[override virtual] QSize QCalendarWidget::minimumSizeHint() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QSize</db:type>
<db:methodname>minimumSizeHint</db:methodname>
<db:void/>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QSize minimumSizeHint() const override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements an access function for property: <db:link xlink:href="qwidget.xml#minimumSizeHint-prop" role="property">QWidget::minimumSizeHint</db:link>.</db:para>
</db:section>
<db:section xml:id="monthShown">
<db:title>int QCalendarWidget::monthShown() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>monthShown</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int monthShown() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the currently displayed month. Months are numbered from 1 to 12.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#yearShown">yearShown</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#setCurrentPage">setCurrentPage</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mousePressEvent">
<db:title>[override virtual protected] void QCalendarWidget::mousePressEvent(QMouseEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>mousePressEvent</db:methodname>
<db:methodparam>
<db:type>QMouseEvent *</db:type>
<db:parameter>event</db:parameter>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void mousePressEvent(QMouseEvent *event) override</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#mousePressEvent" role="function">QWidget::mousePressEvent(QMouseEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="paintCell">
<db:title>[virtual protected] void QCalendarWidget::paintCell(QPainter *<db:emphasis>painter</db:emphasis>, const QRect &amp;<db:emphasis>rect</db:emphasis>, QDate <db:emphasis>date</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:void/>
<db:methodname>paintCell</db:methodname>
<db:methodparam>
<db:type>QPainter *</db:type>
<db:parameter>painter</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>rect</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QDate</db:type>
<db:parameter>date</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void paintCell(QPainter *painter, const QRect &amp;rect, QDate date) const</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Paints the cell specified by the given <db:code role="parameter">date</db:code>, using the given <db:code role="parameter">painter</db:code> and <db:code role="parameter">rect</db:code>.</db:para>
</db:section>
<db:section xml:id="resizeEvent">
<db:title>[override virtual protected] void QCalendarWidget::resizeEvent(QResizeEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>resizeEvent</db:methodname>
<db:methodparam>
<db:type>QResizeEvent *</db:type>
<db:parameter>event</db:parameter>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void resizeEvent(QResizeEvent *event) override</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#resizeEvent" role="function">QWidget::resizeEvent(QResizeEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="selectionChanged">
<db:title>void QCalendarWidget::selectionChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>selectionChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void selectionChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the currently selected date is changed.</db:para>
<db:para>The currently selected date can be changed by the user using the mouse or keyboard, or by the programmer using <db:link xlink:href="qcalendarwidget.xml#selectedDate-prop">setSelectedDate</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#selectedDate-prop">selectedDate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCurrentPage">
<db:title>void QCalendarWidget::setCurrentPage(int <db:emphasis>year</db:emphasis>, int <db:emphasis>month</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setCurrentPage</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>year</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>month</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setCurrentPage(int year, int month)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Displays the given <db:code role="parameter">month</db:code> of the given <db:code role="parameter">year</db:code> without changing the selected date. Use the <db:link xlink:href="qcalendarwidget.xml#selectedDate-prop">setSelectedDate</db:link>() function to alter the selected date.</db:para>
<db:para>The currently displayed month and year can be retrieved using the <db:link xlink:href="qcalendarwidget.xml#monthShown">monthShown</db:link>() and <db:link xlink:href="qcalendarwidget.xml#yearShown">yearShown</db:link>() functions respectively.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#yearShown">yearShown</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#monthShown">monthShown</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#showPreviousMonth">showPreviousMonth</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#showNextMonth">showNextMonth</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#showPreviousYear">showPreviousYear</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#showNextYear">showNextYear</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDateRange">
<db:title>void QCalendarWidget::setDateRange(QDate <db:emphasis>min</db:emphasis>, QDate <db:emphasis>max</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setDateRange</db:methodname>
<db:methodparam>
<db:type>QDate</db:type>
<db:parameter>min</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QDate</db:type>
<db:parameter>max</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setDateRange(QDate min, QDate max)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defines a date range by setting the <db:link xlink:href="qcalendarwidget.xml#minimumDate-prop">minimumDate</db:link> and <db:link xlink:href="qcalendarwidget.xml#maximumDate-prop">maximumDate</db:link> properties.</db:para>
<db:para>The date range restricts the user selection, i.e. the user can only select dates within the specified date range. Note that</db:para>
<db:programlisting language="cpp">QCalendarWidget *calendar;

calendar-&amp;gt;setDateRange(min, max);
</db:programlisting>
<db:para>is analogous to</db:para>
<db:programlisting language="cpp">QCalendarWidget *calendar;

calendar-&amp;gt;setMinimumDate(min);
calendar-&amp;gt;setMaximumDate(max);
</db:programlisting>
<db:para>If either the <db:code role="parameter">min</db:code> or <db:code role="parameter">max</db:code> parameters are not valid <db:link xlink:href="qdate.xml">QDate</db:link> objects, this function does nothing.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#minimumDate-prop">setMinimumDate</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#maximumDate-prop">setMaximumDate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDateTextFormat">
<db:title>void QCalendarWidget::setDateTextFormat(QDate <db:emphasis>date</db:emphasis>, const QTextCharFormat &amp;<db:emphasis>format</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setDateTextFormat</db:methodname>
<db:methodparam>
<db:type>QDate</db:type>
<db:parameter>date</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QTextCharFormat &amp;</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setDateTextFormat(QDate date, const QTextCharFormat &amp;format)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the format used to render the given <db:code role="parameter">date</db:code> to that specified by <db:code role="parameter">format</db:code>.</db:para>
<db:para>If <db:code role="parameter">date</db:code> is null, all date formats are cleared.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#dateTextFormat">dateTextFormat</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setHeaderTextFormat">
<db:title>void QCalendarWidget::setHeaderTextFormat(const QTextCharFormat &amp;<db:emphasis>format</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setHeaderTextFormat</db:methodname>
<db:methodparam>
<db:type>const QTextCharFormat &amp;</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setHeaderTextFormat(const QTextCharFormat &amp;format)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the text char format for rendering the header to <db:code role="parameter">format</db:code>. If you also set a weekday text format, this format's foreground and background color will take precedence over the header's format. The other formatting information will still be decided by the header's format.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#headerTextFormat">headerTextFormat</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setWeekdayTextFormat">
<db:title>void QCalendarWidget::setWeekdayTextFormat(Qt::DayOfWeek <db:emphasis>dayOfWeek</db:emphasis>, const QTextCharFormat &amp;<db:emphasis>format</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setWeekdayTextFormat</db:methodname>
<db:methodparam>
<db:type>Qt::DayOfWeek</db:type>
<db:parameter>dayOfWeek</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QTextCharFormat &amp;</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setWeekdayTextFormat(Qt::DayOfWeek dayOfWeek, const QTextCharFormat &amp;format)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the text char format for rendering of day in the week <db:code role="parameter">dayOfWeek</db:code> to <db:code role="parameter">format</db:code>. The format will take precedence over the header format in case of foreground and background color. Other text formatting information is taken from the headers format.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#weekdayTextFormat">weekdayTextFormat</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#setHeaderTextFormat">setHeaderTextFormat</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="showNextMonth">
<db:title>void QCalendarWidget::showNextMonth()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>showNextMonth</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void showNextMonth()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Shows the next month relative to the currently displayed month. Note that the selected date is not changed.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#showPreviousMonth">showPreviousMonth</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#setCurrentPage">setCurrentPage</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#selectedDate-prop">setSelectedDate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="showNextYear">
<db:title>void QCalendarWidget::showNextYear()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>showNextYear</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void showNextYear()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Shows the currently displayed month in the <db:emphasis>next</db:emphasis> year relative to the currently displayed year. Note that the selected date is not changed.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#showPreviousYear">showPreviousYear</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#setCurrentPage">setCurrentPage</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#selectedDate-prop">setSelectedDate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="showPreviousMonth">
<db:title>void QCalendarWidget::showPreviousMonth()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>showPreviousMonth</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void showPreviousMonth()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Shows the previous month relative to the currently displayed month. Note that the selected date is not changed.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#showNextMonth">showNextMonth</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#setCurrentPage">setCurrentPage</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#selectedDate-prop">setSelectedDate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="showPreviousYear">
<db:title>void QCalendarWidget::showPreviousYear()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>showPreviousYear</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void showPreviousYear()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Shows the currently displayed month in the <db:emphasis>previous</db:emphasis> year relative to the currently displayed year. Note that the selected date is not changed.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#showNextYear">showNextYear</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#setCurrentPage">setCurrentPage</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#selectedDate-prop">setSelectedDate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="showSelectedDate">
<db:title>void QCalendarWidget::showSelectedDate()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>showSelectedDate</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void showSelectedDate()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Shows the month of the selected date.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#selectedDate-prop">selectedDate</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#setCurrentPage">setCurrentPage</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="showToday">
<db:title>void QCalendarWidget::showToday()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>showToday</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void showToday()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Shows the month of the today's date.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#selectedDate-prop">selectedDate</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#setCurrentPage">setCurrentPage</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sizeHint">
<db:title>[override virtual] QSize QCalendarWidget::sizeHint() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QSize</db:type>
<db:methodname>sizeHint</db:methodname>
<db:void/>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QSize sizeHint() const override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements an access function for property: <db:link xlink:href="qwidget.xml#sizeHint-prop" role="property">QWidget::sizeHint</db:link>.</db:para>
</db:section>
<db:section xml:id="updateCell">
<db:title>[protected] void QCalendarWidget::updateCell(QDate <db:emphasis>date</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>updateCell</db:methodname>
<db:methodparam>
<db:type>QDate</db:type>
<db:parameter>date</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void updateCell(QDate date)</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Updates the cell specified by the given <db:code role="parameter">date</db:code> unless updates are disabled or the cell is hidden.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#updateCells">updateCells</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#yearShown">yearShown</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#monthShown">monthShown</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="updateCells">
<db:title>[protected] void QCalendarWidget::updateCells()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>updateCells</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void updateCells()</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Updates all visible cells unless updates are disabled.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#updateCell">updateCell</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="weekdayTextFormat">
<db:title>QTextCharFormat QCalendarWidget::weekdayTextFormat(Qt::DayOfWeek <db:emphasis>dayOfWeek</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QTextCharFormat</db:type>
<db:methodname>weekdayTextFormat</db:methodname>
<db:methodparam>
<db:type>Qt::DayOfWeek</db:type>
<db:parameter>dayOfWeek</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QTextCharFormat weekdayTextFormat(Qt::DayOfWeek dayOfWeek) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the text char format for rendering of day in the week <db:code role="parameter">dayOfWeek</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#setWeekdayTextFormat">setWeekdayTextFormat</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#headerTextFormat">headerTextFormat</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="yearShown">
<db:title>int QCalendarWidget::yearShown() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>yearShown</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int yearShown() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the year of the currently displayed month. Months are numbered from 1 to 12.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcalendarwidget.xml#monthShown">monthShown</db:link>()</db:member>
<db:member><db:link xlink:href="qcalendarwidget.xml#setCurrentPage">setCurrentPage</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
