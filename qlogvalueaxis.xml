<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QLogValueAxis Class</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qlogvalueaxis.xml">QLogValueAxis</db:link> class adds a logarithmic scale to a chart's axis.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QLogValueAxis</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qtcharts-logvalueaxis.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstractaxis.xml" xlink:role="class">QAbstractAxis</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A logarithmic scale is a nonlinear scale that is based on orders of magnitude, so that each tick mark on the axis is the previous tick mark multiplied by a value.</db:para>
<db:note>
<db:para>If <db:link xlink:href="qlogvalueaxis.xml">QLogValueAxis</db:link> is attached to a series with one or more points with negative or zero values on the associated dimension, the series will not be plotted at all. This is particularly relevant when XYModelMappers are used, since empty cells in models typically contain zero values.</db:para>
</db:note>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="base-prop">
<db:title>base : qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>base</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">base</db:synopsisinfo>
<db:synopsisinfo role="setter">setBase</db:synopsisinfo>
<db:synopsisinfo role="notifier">baseChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the base of the logarithm.</db:para>
<db:para>The value has to be greater than 0 and cannot equal 1.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qtglobal.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">base</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setBase</db:emphasis>(<db:type><db:link xlink:href="qtglobal.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>base</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlogvalueaxis.xml#baseChanged">baseChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qtglobal.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>base</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelFormat-prop">
<db:title>labelFormat : QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>labelFormat</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">labelFormat</db:synopsisinfo>
<db:synopsisinfo role="setter">setLabelFormat</db:synopsisinfo>
<db:synopsisinfo role="notifier">labelFormatChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the label format of the axis.</db:para>
<db:para>The format string supports the following conversion specifiers, length modifiers, and flags provided by <db:code>printf()</db:code> in the standard C++ library: d, i, o, x, X, f, F, e, E, g, G, c.</db:para>
<db:para>If <db:link xlink:href="qchart.xml#localizeNumbers-prop">QChart::localizeNumbers</db:link> is <db:code>true</db:code>, the supported specifiers are limited to: d, e, E, f, g, G, and i. Also, only the precision modifier is supported. The rest of the formatting comes from the default <db:link xlink:href="qlocale.xml">QLocale</db:link> of the application.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">labelFormat</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLabelFormat</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>format</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlogvalueaxis.xml#labelFormatChanged">labelFormatChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>format</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstring.xml#asprintf">QString::asprintf</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="max-prop">
<db:title>max : qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>max</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">max</db:synopsisinfo>
<db:synopsisinfo role="setter">setMax</db:synopsisinfo>
<db:synopsisinfo role="notifier">maxChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the maximum value on the axis.</db:para>
<db:para>When setting this property, the minimum value is adjusted if necessary, to ensure that the range remains valid. The value has to be greater than 0.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qtglobal.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">max</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMax</db:emphasis>(<db:type><db:link xlink:href="qtglobal.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>max</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlogvalueaxis.xml#maxChanged">maxChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qtglobal.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>max</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="min-prop">
<db:title>min : qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>min</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">min</db:synopsisinfo>
<db:synopsisinfo role="setter">setMin</db:synopsisinfo>
<db:synopsisinfo role="notifier">minChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the minimum value on the axis.</db:para>
<db:para>When setting this property, the maximum value is adjusted if necessary, to ensure that the range remains valid. The value has to be greater than 0.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qtglobal.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">min</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMin</db:emphasis>(<db:type><db:link xlink:href="qtglobal.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>min</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlogvalueaxis.xml#minChanged">minChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qtglobal.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>min</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="minorTickCount-prop">
<db:title>minorTickCount : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>minorTickCount</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">minorTickCount</db:synopsisinfo>
<db:synopsisinfo role="setter">setMinorTickCount</db:synopsisinfo>
<db:synopsisinfo role="notifier">minorTickCountChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the number of minor tick marks on the axis. This indicates how many grid lines are drawn between major ticks on the chart. Labels are not drawn for minor ticks. The default value is 0. Set the value to -1 and the number of grid lines between major ticks will be calculated automatically.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">minorTickCount</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinorTickCount</db:emphasis>(<db:type>int</db:type> <db:emphasis>minorTickCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlogvalueaxis.xml#minorTickCountChanged">minorTickCountChanged</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>minorTickCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="tickCount-prop">
<db:title>[read-only] tickCount : const int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>tickCount</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">tickCount</db:synopsisinfo>
<db:synopsisinfo role="notifier">tickCountChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the number of tick marks on the axis. This indicates how many grid lines are drawn on the chart. This value is read-only.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">tickCount</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlogvalueaxis.xml#tickCountChanged">tickCountChanged</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>tickCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QLogValueAxis">
<db:title>[explicit] QLogValueAxis::QLogValueAxis(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QLogValueAxis</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QLogValueAxis(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an axis object that is a child of <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QLogValueAxis">
<db:title>[virtual] QLogValueAxis::~QLogValueAxis()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QLogValueAxis</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QLogValueAxis()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the object.</db:para>
</db:section>
<db:section xml:id="baseChanged">
<db:title>void QLogValueAxis::baseChanged(qreal <db:emphasis>base</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>baseChanged</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>base</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">base</db:synopsisinfo>
<db:synopsisinfo role="signature">void baseChanged(qreal base)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the <db:code role="parameter">base</db:code> of the logarithm of the axis changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qlogvalueaxis.xml#base-prop">base</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="labelFormatChanged">
<db:title>void QLogValueAxis::labelFormatChanged(const QString &amp;<db:emphasis>format</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>labelFormatChanged</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">labelFormat</db:synopsisinfo>
<db:synopsisinfo role="signature">void labelFormatChanged(const QString &amp;format)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the <db:code role="parameter">format</db:code> of axis labels changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qlogvalueaxis.xml#labelFormat-prop">labelFormat</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="maxChanged">
<db:title>void QLogValueAxis::maxChanged(qreal <db:emphasis>max</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>maxChanged</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>max</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">max</db:synopsisinfo>
<db:synopsisinfo role="signature">void maxChanged(qreal max)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the maximum value of the axis, specified by <db:code role="parameter">max</db:code>, changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qlogvalueaxis.xml#max-prop">max</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="minChanged">
<db:title>void QLogValueAxis::minChanged(qreal <db:emphasis>min</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>minChanged</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>min</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">min</db:synopsisinfo>
<db:synopsisinfo role="signature">void minChanged(qreal min)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the minimum value of the axis, specified by <db:code role="parameter">min</db:code>, changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qlogvalueaxis.xml#min-prop">min</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="minorTickCountChanged">
<db:title>void QLogValueAxis::minorTickCountChanged(int <db:emphasis>minorTickCount</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>minorTickCountChanged</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>minorTickCount</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">minorTickCount</db:synopsisinfo>
<db:synopsisinfo role="signature">void minorTickCountChanged(int minorTickCount)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the number of minor tick marks on the axis, specified by <db:code role="parameter">minorTickCount</db:code>, changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qlogvalueaxis.xml#minorTickCount-prop">minorTickCount</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="rangeChanged">
<db:title>void QLogValueAxis::rangeChanged(qreal <db:emphasis>min</db:emphasis>, qreal <db:emphasis>max</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>rangeChanged</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>min</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>max</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void rangeChanged(qreal min, qreal max)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the minimum or maximum value of the axis, specified by <db:code role="parameter">min</db:code> and <db:code role="parameter">max</db:code>, changes.</db:para>
</db:section>
<db:section xml:id="setRange">
<db:title>void QLogValueAxis::setRange(qreal <db:emphasis>min</db:emphasis>, qreal <db:emphasis>max</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setRange</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>min</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>max</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setRange(qreal min, qreal max)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the range from <db:code role="parameter">min</db:code> to <db:code role="parameter">max</db:code> on the axis. If <db:code role="parameter">min</db:code> is greater than <db:code role="parameter">max</db:code>, this function returns without making any changes.</db:para>
</db:section>
<db:section xml:id="tickCountChanged">
<db:title>void QLogValueAxis::tickCountChanged(int <db:emphasis>tickCount</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>tickCountChanged</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>tickCount</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">tickCount</db:synopsisinfo>
<db:synopsisinfo role="signature">void tickCountChanged(int tickCount)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the number of tick marks on the axis, specified by <db:code role="parameter">tickCount</db:code>, changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qlogvalueaxis.xml#tickCount-prop">tickCount</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="type">
<db:title>[override virtual] QAbstractAxis::AxisType QLogValueAxis::type() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QAbstractAxis::AxisType</db:type>
<db:methodname>type</db:methodname>
<db:void/>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QAbstractAxis::AxisType type() const override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qabstractaxis.xml#type" role="function">QAbstractAxis::type() const</db:link>.</db:para>
<db:para>Returns the type of the axis.</db:para>
</db:section>
</db:section>
</db:article>
