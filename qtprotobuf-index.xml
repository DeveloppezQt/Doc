<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Protobuf</db:title>
<db:productname>QtProtobuf</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Protobuf Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Protobuf Reference Documentation.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt Protobuf <db:link xlink:href="qtprotobufgen-qt-tool.xml">generator plugin</db:link> generates Qt-based classes from <db:code>.proto</db:code> files. You can use the classes to serialize and deserialize their associated protobuf messages.</db:para>
<db:section xml:id="overview">
<db:title>Overview</db:title>
<db:section xml:id="what-are-protocol-buffers">
<db:title>What are protocol buffers?</db:title>
<db:para>Protocol buffers are a language-neutral, platform-neutral, and extensible mechanism for serializing structured data, which is compact and easy to use:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>A user defines the structure of data in <db:code>.proto</db:code> files.</db:para>
</db:listitem>
<db:listitem>
<db:para>Proto compiler is invoked at build time on <db:code>.proto</db:code> files to generate code in various programming languages.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The provided format is suitable for network traffic or long-term data storage.</db:para>
</db:section>
<db:section xml:id="which-problems-do-protocol-buffers-solve">
<db:title>Which problems do protocol buffers solve?</db:title>
<db:para>Protocol buffers provide a serialization format for packets of typed and structured data that are up to a few megabytes in size. Moreover, it can be extended with new information without invalidating existing data or requiring code to be updated. For more information, see <db:link xlink:href="https://protobuf.dev/">Protocol Buffers Overview</db:link>.</db:para>
</db:section>
<db:section xml:id="what-are-the-benefits-of-using-qt-protobuf">
<db:title>What are the benefits of using Qt Protobuf?</db:title>
<db:para>You can use a Protocol buffers mechanism in any Qt-based project:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>No need to call a protocol buffer compiler explicitly.</db:para>
</db:listitem>
<db:listitem>
<db:para>No need to integrate generated code into project tree manually.</db:para>
</db:listitem>
<db:listitem>
<db:para>Convenient serialization and deserialization API.</db:para>
</db:listitem>
<db:listitem>
<db:para>Integrated properties mechanism for generated protobuf messages.</db:para>
</db:listitem>
<db:listitem>
<db:para>Integrated gRPC-client support (see <db:link xlink:href="qtgrpc-index.xml">Qt GRPC module</db:link>).</db:para>
</db:listitem>
<db:listitem>
<db:para>Integrated QML-types support for generated protobuf messages. See <db:link xlink:href="qtprotobuf-qml-types.xml">Qt Protobuf QML Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para>Enabled using Qt Core and Qt GUI types as a part of *.proto schema. See <db:link xlink:href="qtprotobufqtcoretypes-module.xml">Protobuf Qt Core Types Module</db:link> and <db:link xlink:href="qtprotobufqtguitypes-module.xml">Protobuf Qt GUI types module</db:link>.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="incoming-features">
<db:title>Incoming features</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Enabling gRPC-server support.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="using-the-module">
<db:title>Using the Module</db:title>
<db:para>Google protocol buffers provide a generator called <db:code>protoc</db:code> that supports extensions. <db:link xlink:href="qtprotobufgen-qt-tool.xml">The qtprotobufgen Tool</db:link> is an extension for <db:code>protoc</db:code> and requires that you install <db:code>protoc</db:code> on your host system. For more information about the installation, see <db:link xlink:href="https://grpc.io/docs/protoc-installation/">Protoc Installation</db:link>.</db:para>
<db:section xml:id="qml-api">
<db:title></db:title><db:itemizedlist>
<db:listitem>
<db:para>Example of installation for Linux, using <db:emphasis>apt</db:emphasis>:</db:para>
<db:programlisting language="cpp" role="bad">apt install -y protobuf-compiler
protoc --version  # Ensure compiler version is 3+
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtprotobuf-installation-windows-vcpkg.xml">Example of installation for Windows using vcpkg</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qml-api">
<db:title>QML API</db:title>
<db:para>The QML types of the module are available through the QML and QML_URI options in the <db:link xlink:href="qt-add-protobuf.xml">qt_add_protobuf</db:link> macro. The import name is equal to the <db:code>.proto</db:code> package name or defined by QML_URI option in the <db:link xlink:href="qt-add-protobuf.xml">qt_add_protobuf</db:link> macro. To use the types, add the following import statement to your .qml file:</db:para>
<db:programlisting language="cpp">import my.proto.package.uri
</db:programlisting>
</db:section>
<db:section xml:id="c-api">
<db:title>C++ API</db:title>
<db:para>Using a Qt module's C++ API requires linking against the module library, either directly or through other dependencies. Several build tools have dedicated support for this, including <db:link xlink:href="https://cmake.org/cmake/help/latest/">CMake</db:link> and <db:link xlink:href="qmake-manual.xml">qmake</db:link>.</db:para>
<db:section xml:id="building-with-cmake">
<db:title>Building with CMake</db:title>
<db:para>Use the <db:code>find_package()</db:code> command to locate the needed module component in the <db:code>Qt6</db:code> package:</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS Protobuf)
target_link_libraries(mytarget PRIVATE Qt6::Protobuf)
</db:programlisting>
<db:para>For more details, see the <db:link xlink:href="cmake-manual.xml">Build with CMake</db:link> overview.</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="articles-and-guides">
<db:title>Articles and Guides</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="cmake-commands-qtprotobuf.xml">CMake Commands in Qt6 Protobuf</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtprotobufqtcoretypes-module.xml">Protobuf Qt Core Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtprotobufqtguitypes-module.xml">Protobuf Qt GUI Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtprotobufwellknowntypes-module.xml">Qt Protobuf Well-Known types</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="references">
<db:title>References</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtprotobuf-module.xml">Qt Protobuf C++ Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtprotobuf-qml-types.xml">Qt Protobuf QML Types</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtprotobuf-examples.xml">Qt Protobuf Examples</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="licenses-and-attributions">
<db:title>Licenses and Attributions</db:title>
<db:para>The Qt Protobuf module is available under commercial licenses from <db:link xlink:href="http://www.qt.io/about-us/">The Qt Company</db:link>. In addition, it is available under free software licenses: The <db:link xlink:href="http://www.gnu.org/licenses/lgpl-3.0.html">GNU Lesser General Public License, version 3</db:link>, or the <db:link xlink:href="http://www.gnu.org/licenses/gpl-2.0.html">GNU General Public License, version 2</db:link>, or the <db:link xlink:href="http://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License, version 3</db:link>. See <db:link xlink:href="licensing.xml">Qt Licensing</db:link> for further details.</db:para>
<db:para>Furthermore, the <db:code>qtprotobufgen</db:code> tool in Qt 6.7.2 may contain third party modules under the following permissive licenses:</db:para>
<db:variablelist role="groupsbymodule attributions-qtprotobuf-tools">
<db:varlistentry>
<db:term><db:link xlink:href="qtprotobuf-attribution-protobuf-qtprotobufgen.xml" xlink:role="page">protobuf, version 21.9</db:link></db:term>
<db:listitem>
<db:para>BSD 3-clause &quot;New&quot; or &quot;Revised&quot; License</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
</db:article>
