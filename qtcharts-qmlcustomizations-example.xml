<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qml Customizations</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This application shows you how to customize different visual properties of a <db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link> and series.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_qmlcustomizations.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>This example shows a wheel of fortune by customizing a pie series.</db:para>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="http://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section xml:id="customizing-chart-views">
<db:title>Customizing Chart Views</db:title>
<db:para>First we create the <db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link> and a couple of series.</db:para>
<db:programlisting language="qml">ChartView {
    id: chartView
    anchors.fill: parent
    title: &quot;Wheel of fortune&quot;
    legend.visible: false
    antialiasing: true

    PieSeries {
        id: wheelOfFortune
        horizontalPosition: 0.3
    }

    SplineSeries {
        id: splineSeries
    }

    ScatterSeries {
        id: scatterSeries
    }
}
</db:programlisting>
<db:para>The application data is generated in Component.onCompleted of the main rectangle:</db:para>
<db:programlisting language="qml">Component.onCompleted: {
    __intervalCoefficient = Math.random() + 0.25;

    for (var i = 0; i &amp;lt; 20; i++)
        wheelOfFortune.append(&quot;&quot;, 1);

    var interval = 1;
    for (var j = 0; interval &amp;lt; 800; j++) {
        interval = __intervalCoefficient * j * j;
        splineSeries.append(j, interval);
    }
    chartView.axisX(scatterSeries).max = j;
    chartView.axisY(scatterSeries).max = 1000;
}
</db:programlisting>
<db:para>The following customizations are done repeatedly with a timer. To highlight one of the pie slices at time we modify its exploded property:</db:para>
<db:programlisting language="qml">wheelOfFortune.at(index).exploded = false;
__activeIndex++;
index = __activeIndex % wheelOfFortune.count;
wheelOfFortune.at(index).exploded = true;
</db:programlisting>
<db:para>Then an animation using a scatter series with one data point:</db:para>
<db:programlisting language="qml">scatterSeries.clear();
scatterSeries.append(__activeIndex, interval);
scatterSeries.color = Qt.tint(scatterSeries.color, &quot;#05FF0000&quot;);
scatterSeries.markerSize += 0.5;
</db:programlisting>
<db:para>When the wheel of fortune has stopped, we make the active slice blink by modifying its colors.</db:para>
<db:programlisting language="qml">// Switch the colors of the slice and the border
wheelOfFortune.at(index).borderWidth = 2;
switchColor = wheelOfFortune.at(index).borderColor;
wheelOfFortune.at(index).borderColor = wheelOfFortune.at(index).color;
wheelOfFortune.at(index).color = switchColor;
</db:programlisting>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qmlcustomizations/main.cpp">qmlcustomizations/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmlcustomizations/qml/qmlcustomizations/main.qml">qmlcustomizations/qml/qmlcustomizations/main.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmlcustomizations/qmlcustomizations.pro">qmlcustomizations/qmlcustomizations.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmlcustomizations/resources.qrc">qmlcustomizations/resources.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
