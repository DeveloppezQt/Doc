<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAbstractAxis Class</db:title>
<db:productname>QtGraphs</db:productname>
<db:edition>Qt Graphs | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Graphs Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qabstractaxis.xml">QAbstractAxis</db:link> class is a base class used for specialized axis classes.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAbstractAxis</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Graphs)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Graphs)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += graphs</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qbarcategoryaxis.xml" xlink:role="class">QBarCategoryAxis</db:link> and <db:link xlink:href="qvalueaxis.xml" xlink:role="class">QValueAxis</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qtgraphs-abstractaxis.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qbarcategoryaxis.xml" xlink:role="class">QBarCategoryAxis</db:link> and <db:link xlink:href="qvalueaxis.xml" xlink:role="class">QValueAxis</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QAbstractAxis is part of <db:simplelist><db:member><db:link xlink:href="graphs-2d.xml">Qt Graphs C++ Classes for 2D</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Each series can be bound to only one horizontal and vertical axis.</db:para>
<db:para>The properties and visibility of various axis elements, such as axis line, title, labels, and grid lines, can be individually controlled.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="AxisType-enum">
<db:title>enum QAbstractAxis::AxisType</db:title>
<db:bridgehead renderas="sect2">flags QAbstractAxis::AxisTypes</db:bridgehead>
<db:enumsynopsis>
<db:enumname>AxisType</db:enumname>
<db:enumitem>
<db:enumidentifier>AxisTypeNoAxis</db:enumidentifier>
<db:enumvalue>0x0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AxisTypeValue</db:enumidentifier>
<db:enumvalue>0x1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AxisTypeBarCategory</db:enumidentifier>
<db:enumvalue>0x2</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:typedefsynopsis>
<db:typedefname>QAbstractAxis::AxisTypes</db:typedefname>
</db:typedefsynopsis>
<db:para>This enum type specifies the type of the axis object.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml">QAbstractAxis</db:link></db:emphasis>::AxisTypeNoAxis</db:code></db:para>
</db:td>
<db:td><db:code>0x0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml">QAbstractAxis</db:link></db:emphasis>::AxisTypeValue</db:code></db:para>
</db:td>
<db:td><db:code>0x1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml">QAbstractAxis</db:link></db:emphasis>::AxisTypeBarCategory</db:code></db:para>
</db:td>
<db:td><db:code>0x2</db:code></db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>AxisTypes</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;AxisType&gt;. </db:code>It stores an OR combination of <db:code>AxisType</db:code> values.</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="alignment-prop">
<db:title>[read-only] alignment : const Qt::Alignment</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt::Alignment</db:type>
<db:varname>alignment</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">alignment</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the alignment of the axis.</db:para>
<db:para>Can be <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignLeft</db:link>, <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignRight</db:link>, <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignBottom</db:link>, or <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignTop</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::Alignment</db:link></db:type> <db:emphasis role="bold">alignment</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="gridVisible-prop">
<db:title>gridVisible : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>gridVisible</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isGridLineVisible</db:synopsisinfo>
<db:synopsisinfo role="setter">setGridLineVisible</db:synopsisinfo>
<db:synopsisinfo role="notifier">gridVisibleChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the visibility of the grid lines. By default, the value is <db:code>true</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isGridLineVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setGridLineVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#gridVisibleChanged">gridVisibleChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelsAngle-prop">
<db:title>labelsAngle : qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>labelsAngle</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">labelsAngle</db:synopsisinfo>
<db:synopsisinfo role="setter">setLabelsAngle</db:synopsisinfo>
<db:synopsisinfo role="notifier">labelsAngleChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the angle of the axis labels in degrees.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">labelsAngle</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLabelsAngle</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>angle</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#labelsAngleChanged">labelsAngleChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>angle</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelsVisible-prop">
<db:title>labelsVisible : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>labelsVisible</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">labelsVisible</db:synopsisinfo>
<db:synopsisinfo role="setter">setLabelsVisible</db:synopsisinfo>
<db:synopsisinfo role="notifier">labelsVisibleChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether axis labels are visible. By default, the value is <db:code>true</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">labelsVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLabelsVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#labelsVisibleChanged">labelsVisibleChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="lineVisible-prop">
<db:title>lineVisible : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>lineVisible</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isLineVisible</db:synopsisinfo>
<db:synopsisinfo role="setter">setLineVisible</db:synopsisinfo>
<db:synopsisinfo role="notifier">lineVisibleChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the visibility of the axis line. By default, the value is <db:code>true</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isLineVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#setLineVisible">setLineVisible</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#lineVisibleChanged">lineVisibleChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="minorGridVisible-prop">
<db:title>minorGridVisible : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>minorGridVisible</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isMinorGridLineVisible</db:synopsisinfo>
<db:synopsisinfo role="setter">setMinorGridLineVisible</db:synopsisinfo>
<db:synopsisinfo role="notifier">minorGridVisibleChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the visibility of the minor grid lines.</db:para>
<db:para>Applies only to axes that support minor grid lines. By default, the value is <db:code>true</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isMinorGridLineVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinorGridLineVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#minorGridVisibleChanged">minorGridVisibleChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="orientation-prop">
<db:title>[read-only] orientation : const Qt::Orientation</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt::Orientation</db:type>
<db:varname>orientation</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">orientation</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the orientation of the axis.</db:para>
<db:para>Fixed to either <db:link xlink:href="qt.xml#Orientation-enum">Qt::Horizontal</db:link> or <db:link xlink:href="qt.xml#Orientation-enum">Qt::Vertical</db:link> when the axis is added to a graph.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt.xml#Orientation-enum">Qt::Orientation</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#orientation">orientation</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="titleColor-prop">
<db:title>titleColor : QColor</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QColor</db:type>
<db:varname>titleColor</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">titleColor</db:synopsisinfo>
<db:synopsisinfo role="setter">setTitleColor</db:synopsisinfo>
<db:synopsisinfo role="notifier">titleColorChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the color used to draw the title text.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#titleColor">titleColor</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#setTitleColor">setTitleColor</db:link></db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#titleColorChanged">titleColorChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="titleFont-prop">
<db:title>titleFont : QFont</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QFont</db:type>
<db:varname>titleFont</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">titleFont</db:synopsisinfo>
<db:synopsisinfo role="setter">setTitleFont</db:synopsisinfo>
<db:synopsisinfo role="notifier">titleFontChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the font of the title of the axis.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#titleFont">titleFont</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#setTitleFont">setTitleFont</db:link></db:emphasis>(const <db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> &amp;<db:emphasis>font</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#titleFontChanged">titleFontChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> &amp;<db:emphasis>font</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="titleText-prop">
<db:title>titleText : QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>titleText</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">titleText</db:synopsisinfo>
<db:synopsisinfo role="setter">setTitleText</db:synopsisinfo>
<db:synopsisinfo role="notifier">titleTextChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the title of the axis.</db:para>
<db:para>Empty by default. Axis titles support HTML formatting.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">titleText</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTitleText</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>title</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#titleTextChanged">titleTextChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>text</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="titleVisible-prop">
<db:title>titleVisible : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>titleVisible</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isTitleVisible</db:synopsisinfo>
<db:synopsisinfo role="setter">setTitleVisible</db:synopsisinfo>
<db:synopsisinfo role="notifier">titleVisibleChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the visibility of the axis title.</db:para>
<db:para>By default, the value is <db:code>true</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isTitleVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTitleVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#titleVisibleChanged">titleVisibleChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="visible-prop">
<db:title>visible : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>visible</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isVisible</db:synopsisinfo>
<db:synopsisinfo role="setter">setVisible</db:synopsisinfo>
<db:synopsisinfo role="notifier">visibleChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the visibility of the axis. By default, the value is <db:code>true</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#setVisible">setVisible</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis.xml#visibleChanged">visibleChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="dtor.QAbstractAxis">
<db:title>[virtual] QAbstractAxis::~QAbstractAxis()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QAbstractAxis</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QAbstractAxis()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destructs the axis object. When the axis is added to a graph, the graph object takes ownership.</db:para>
</db:section>
<db:section xml:id="gridVisibleChanged">
<db:title>void QAbstractAxis::gridVisibleChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>gridVisibleChanged</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>visible</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">gridVisible</db:synopsisinfo>
<db:synopsisinfo role="signature">void gridVisibleChanged(bool visible)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the visibility of the grid lines of the axis changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis.xml#gridVisible-prop">gridVisible</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="hide">
<db:title>void QAbstractAxis::hide()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>hide</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void hide()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Makes the axis, labels, and grid lines invisible.</db:para>
</db:section>
<db:section xml:id="labelsAngleChanged">
<db:title>void QAbstractAxis::labelsAngleChanged(qreal <db:emphasis>angle</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>labelsAngleChanged</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>angle</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">labelsAngle</db:synopsisinfo>
<db:synopsisinfo role="signature">void labelsAngleChanged(qreal angle)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the angle of the axis labels changes to <db:code role="parameter">angle</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis.xml#labelsAngle-prop">labelsAngle</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="labelsVisibleChanged">
<db:title>void QAbstractAxis::labelsVisibleChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>labelsVisibleChanged</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>visible</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">labelsVisible</db:synopsisinfo>
<db:synopsisinfo role="signature">void labelsVisibleChanged(bool visible)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the visibility of the labels of the axis changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis.xml#labelsVisible-prop">labelsVisible</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="lineVisibleChanged">
<db:title>void QAbstractAxis::lineVisibleChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>lineVisibleChanged</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>visible</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">lineVisible</db:synopsisinfo>
<db:synopsisinfo role="signature">void lineVisibleChanged(bool visible)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the visibility of the axis line changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis.xml#lineVisible-prop">lineVisible</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="minorGridVisibleChanged">
<db:title>void QAbstractAxis::minorGridVisibleChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>minorGridVisibleChanged</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>visible</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">minorGridVisible</db:synopsisinfo>
<db:synopsisinfo role="signature">void minorGridVisibleChanged(bool visible)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the visibility of the minor grid lines of the axis changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis.xml#minorGridVisible-prop">minorGridVisible</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="orientation">
<db:title>Qt::Orientation QAbstractAxis::orientation() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>Qt::Orientation</db:type>
<db:methodname>orientation</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">orientation</db:synopsisinfo>
<db:synopsisinfo role="signature">Qt::Orientation orientation() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the orientation of the axis (vertical or horizontal).</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qabstractaxis.xml#orientation-prop">orientation</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="setLineVisible">
<db:title>void QAbstractAxis::setLineVisible(bool <db:emphasis>visible</db:emphasis> = true)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setLineVisible</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>visible</db:parameter>
<db:initializer>true</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">lineVisible</db:synopsisinfo>
<db:synopsisinfo role="signature">void setLineVisible(bool visible)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Determines whether the axis line and tick marks are <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis.xml#lineVisible-prop">lineVisible</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis.xml#lineVisible-prop">isLineVisible</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setMax">
<db:title>void QAbstractAxis::setMax(const QVariant &amp;<db:emphasis>max</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setMax</db:methodname>
<db:methodparam>
<db:type>const QVariant &amp;</db:type>
<db:parameter>max</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setMax(const QVariant &amp;max)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the maximum value shown on the axis. Depending on the actual axis type, the <db:code role="parameter">max</db:code> parameter is converted to the appropriate type of value. If the conversion is impossible, the function call does nothing.</db:para>
</db:section>
<db:section xml:id="setMin">
<db:title>void QAbstractAxis::setMin(const QVariant &amp;<db:emphasis>min</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setMin</db:methodname>
<db:methodparam>
<db:type>const QVariant &amp;</db:type>
<db:parameter>min</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setMin(const QVariant &amp;min)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the minimum value shown on the axis. Depending on the actual axis type, the <db:code role="parameter">min</db:code> parameter is converted to the appropriate type of value. If the conversion is impossible, the function call does nothing.</db:para>
</db:section>
<db:section xml:id="setRange">
<db:title>void QAbstractAxis::setRange(const QVariant &amp;<db:emphasis>min</db:emphasis>, const QVariant &amp;<db:emphasis>max</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setRange</db:methodname>
<db:methodparam>
<db:type>const QVariant &amp;</db:type>
<db:parameter>min</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QVariant &amp;</db:type>
<db:parameter>max</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setRange(const QVariant &amp;min, const QVariant &amp;max)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the range shown on the axis. Depending on the actual axis type, the <db:code role="parameter">min</db:code> and <db:code role="parameter">max</db:code> parameters are converted to appropriate types of values. If the conversion is impossible, the function call does nothing.</db:para>
</db:section>
<db:section xml:id="setTitleColor">
<db:title>void QAbstractAxis::setTitleColor(const QColor &amp;<db:emphasis>color</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setTitleColor</db:methodname>
<db:methodparam>
<db:type>const QColor &amp;</db:type>
<db:parameter>color</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">titleColor</db:synopsisinfo>
<db:synopsisinfo role="signature">void setTitleColor(const QColor &amp;color)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the color used to draw titles to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis.xml#titleColor-prop">titleColor</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis.xml#titleColor">titleColor</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTitleFont">
<db:title>void QAbstractAxis::setTitleFont(const QFont &amp;<db:emphasis>font</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setTitleFont</db:methodname>
<db:methodparam>
<db:type>const QFont &amp;</db:type>
<db:parameter>font</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">titleFont</db:synopsisinfo>
<db:synopsisinfo role="signature">void setTitleFont(const QFont &amp;font)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the font used to draw titles to <db:code role="parameter">font</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis.xml#titleFont-prop">titleFont</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis.xml#titleFont">titleFont</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setVisible">
<db:title>void QAbstractAxis::setVisible(bool <db:emphasis>visible</db:emphasis> = true)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setVisible</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>visible</db:parameter>
<db:initializer>true</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">visible</db:synopsisinfo>
<db:synopsisinfo role="signature">void setVisible(bool visible)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the visibility of the axis, labels, and grid lines to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis.xml#visible-prop">visible</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis.xml#visible-prop">isVisible</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="show">
<db:title>void QAbstractAxis::show()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>show</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void show()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Makes the axis, labels, and grid lines visible.</db:para>
</db:section>
<db:section xml:id="titleColor">
<db:title>QColor QAbstractAxis::titleColor() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QColor</db:type>
<db:methodname>titleColor</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">titleColor</db:synopsisinfo>
<db:synopsisinfo role="signature">QColor titleColor() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the color used to draw titles.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qabstractaxis.xml#titleColor-prop">titleColor</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis.xml#setTitleColor">setTitleColor</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="titleColorChanged">
<db:title>void QAbstractAxis::titleColorChanged(const QColor &amp;<db:emphasis>color</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>titleColorChanged</db:methodname>
<db:methodparam>
<db:type>const QColor &amp;</db:type>
<db:parameter>color</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">titleColor</db:synopsisinfo>
<db:synopsisinfo role="signature">void titleColorChanged(const QColor &amp;color)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the color used to draw the axis title changes to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis.xml#titleColor-prop">titleColor</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="titleFont">
<db:title>QFont QAbstractAxis::titleFont() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QFont</db:type>
<db:methodname>titleFont</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">titleFont</db:synopsisinfo>
<db:synopsisinfo role="signature">QFont titleFont() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the font used to draw titles.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qabstractaxis.xml#titleFont-prop">titleFont</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis.xml#setTitleFont">setTitleFont</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="titleFontChanged">
<db:title>void QAbstractAxis::titleFontChanged(const QFont &amp;<db:emphasis>font</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>titleFontChanged</db:methodname>
<db:methodparam>
<db:type>const QFont &amp;</db:type>
<db:parameter>font</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">titleFont</db:synopsisinfo>
<db:synopsisinfo role="signature">void titleFontChanged(const QFont &amp;font)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the font of the axis title changes to <db:code role="parameter">font</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis.xml#titleFont-prop">titleFont</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="titleTextChanged">
<db:title>void QAbstractAxis::titleTextChanged(const QString &amp;<db:emphasis>text</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>titleTextChanged</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>text</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">titleText</db:synopsisinfo>
<db:synopsisinfo role="signature">void titleTextChanged(const QString &amp;text)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the text of the axis title changes to <db:code role="parameter">text</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis.xml#titleText-prop">titleText</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="titleVisibleChanged">
<db:title>void QAbstractAxis::titleVisibleChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>titleVisibleChanged</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>visible</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">titleVisible</db:synopsisinfo>
<db:synopsisinfo role="signature">void titleVisibleChanged(bool visible)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the visibility of the title text of the axis changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis.xml#titleVisible-prop">titleVisible</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="type">
<db:title>[pure virtual] QAbstractAxis::AxisType QAbstractAxis::type() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QAbstractAxis::AxisType</db:type>
<db:methodname>type</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QAbstractAxis::AxisType type() const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the type of the axis.</db:para>
</db:section>
<db:section xml:id="update">
<db:title>void QAbstractAxis::update()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>update</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void update()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the axis needs to be updated.</db:para>
</db:section>
<db:section xml:id="visibleChanged">
<db:title>void QAbstractAxis::visibleChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>visibleChanged</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>visible</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">visible</db:synopsisinfo>
<db:synopsisinfo role="signature">void visibleChanged(bool visible)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the visibility of the axis changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis.xml#visible-prop">visible</db:link>. </db:para>
</db:note>
</db:section>
</db:section>
</db:article>
