<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QKeySequence Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qkeysequence.xml">QKeySequence</db:link> class encapsulates a key sequence as used by shortcuts.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QKeySequence</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QKeySequence is part of <db:simplelist><db:member>shared</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>In its most common form, a key sequence describes a combination of keys that must be used together to perform some action. Key sequences are used with <db:link xlink:href="qaction.xml">QAction</db:link> objects to specify which keyboard shortcuts can be used to trigger actions.</db:para>
<db:para>Key sequences can be constructed for use as keyboard shortcuts in three different ways:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>For standard shortcuts, a <db:link xlink:href="qkeysequence.xml#StandardKey-enum">standard key</db:link> can be used to request the platform-specific key sequence associated with each shortcut.</db:para>
</db:listitem>
<db:listitem>
<db:para>For custom shortcuts, human-readable strings such as &quot;Ctrl+X&quot; can be used, and these can be translated into the appropriate shortcuts for users of different languages. Translations are made in the &quot;<db:link xlink:href="qshortcut.xml">QShortcut</db:link>&quot; context.</db:para>
</db:listitem>
<db:listitem>
<db:para>For hard-coded shortcuts, integer key codes can be specified with a combination of values defined by the <db:link xlink:href="qt.xml#Key-enum">Qt::Key</db:link> and <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::KeyboardModifier</db:link> enum values. Each key code consists of a single <db:link xlink:href="qt.xml#Key-enum">Qt::Key</db:link> value and zero or more modifiers, such as <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::ShiftModifier</db:link>, <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::ControlModifier</db:link>, <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::AltModifier</db:link> and <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::MetaModifier</db:link>.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>For example, <db:guilabel>Ctrl P</db:guilabel> might be a sequence used as a shortcut for printing a document, and can be specified in any of the following ways:</db:para>
<db:programlisting language="cpp">QKeySequence(QKeySequence::Print);
QKeySequence(tr(&quot;Ctrl+P&quot;));
QKeySequence(tr(&quot;Ctrl+p&quot;));
QKeySequence(Qt::CTRL | Qt::Key_P);
QKeySequence(Qt::CTRL + Qt::Key_P); // deprecated
</db:programlisting>
<db:para>Note that, for letters, the case used in the specification string does not matter. In the above examples, the user does not need to hold down the <db:guilabel>Shift</db:guilabel> key to activate a shortcut specified with &quot;Ctrl+P&quot;. However, for other keys, the use of <db:guilabel>Shift</db:guilabel> as an unspecified extra modifier key can lead to confusion for users of an application whose keyboards have different layouts to those used by the developers. See the <db:link xlink:href="qkeysequence.xml#keyboard-layout-issues">Keyboard Layout Issues</db:link> section below for more details.</db:para>
<db:para>It is preferable to use standard shortcuts where possible. When creating key sequences for non-standard shortcuts, you should use human-readable strings in preference to hard-coded integer values.</db:para>
<db:para><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link> objects can be cast to a <db:link xlink:href="qstring.xml">QString</db:link> to obtain a human-readable translated version of the sequence. Similarly, the <db:link xlink:href="qkeysequence.xml#toString">toString</db:link>() function produces human-readable strings for use in menus. On macOS, the appropriate symbols are used to describe keyboard shortcuts using special keys on the Macintosh keyboard.</db:para>
<db:para>An alternative way to specify hard-coded key codes is to use the Unicode code point of the character; for example, 'A' gives the same key sequence as <db:link xlink:href="qt.xml#Key-enum">Qt::Key_A</db:link>.</db:para>
<db:note>
<db:para>On macOS, references to &quot;Ctrl&quot;, <db:link xlink:href="qt.xml#Modifier-enum">Qt::CTRL</db:link>, <db:link xlink:href="qt.xml#Key-enum">Qt::Key_Control</db:link> and <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::ControlModifier</db:link> correspond to the <db:guilabel>Command</db:guilabel> keys on the Macintosh keyboard, and references to &quot;Meta&quot;, <db:link xlink:href="qt.xml#Modifier-enum">Qt::META</db:link>, <db:link xlink:href="qt.xml#Key-enum">Qt::Key_Meta</db:link> and <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::MetaModifier</db:link> correspond to the <db:guilabel>Control</db:guilabel> keys. Developers on macOS can use the same shortcut descriptions across all platforms, and their applications will automatically work as expected on macOS.</db:para>
</db:note>
<db:section xml:id="standard-shortcuts">
<db:title>Standard Shortcuts</db:title>
<db:para><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link> defines many <db:link xlink:href="qkeysequence.xml#StandardKey-enum">standard keyboard shortcuts</db:link> to reduce the amount of effort required when setting up actions in a typical application. The table below shows some common key sequences that are often used for these standard shortcuts by applications on four widely-used platforms. Note that on macOS, the <db:guilabel>Ctrl</db:guilabel> value corresponds to the <db:guilabel>Command</db:guilabel> keys on the Macintosh keyboard, and the <db:guilabel>Meta</db:guilabel> value corresponds to the <db:guilabel>Control</db:guilabel> keys.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">StandardKey</db:link></db:para>
</db:th>
<db:th>
<db:para>Windows</db:para>
</db:th>
<db:th>
<db:para>macOS</db:para>
</db:th>
<db:th>
<db:para>KDE Plasma</db:para>
</db:th>
<db:th>
<db:para>GNOME</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">HelpContents</db:link></db:para>
</db:td>
<db:td>
<db:para>F1</db:para>
</db:td>
<db:td>
<db:para>Ctrl+?</db:para>
</db:td>
<db:td>
<db:para>F1</db:para>
</db:td>
<db:td>
<db:para>F1</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">WhatsThis</db:link></db:para>
</db:td>
<db:td>
<db:para>Shift+F1</db:para>
</db:td>
<db:td>
<db:para>Shift+F1</db:para>
</db:td>
<db:td>
<db:para>Shift+F1</db:para>
</db:td>
<db:td>
<db:para>Shift+F1</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Open</db:para>
</db:td>
<db:td>
<db:para>Ctrl+O</db:para>
</db:td>
<db:td>
<db:para>Ctrl+O</db:para>
</db:td>
<db:td>
<db:para>Ctrl+O</db:para>
</db:td>
<db:td>
<db:para>Ctrl+O</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Close</db:para>
</db:td>
<db:td>
<db:para>Ctrl+F4, Ctrl+W</db:para>
</db:td>
<db:td>
<db:para>Ctrl+W, Ctrl+F4</db:para>
</db:td>
<db:td>
<db:para>Ctrl+W</db:para>
</db:td>
<db:td>
<db:para>Ctrl+W</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Save</db:para>
</db:td>
<db:td>
<db:para>Ctrl+S</db:para>
</db:td>
<db:td>
<db:para>Ctrl+S</db:para>
</db:td>
<db:td>
<db:para>Ctrl+S</db:para>
</db:td>
<db:td>
<db:para>Ctrl+S</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Quit</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Ctrl+Q</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Q</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Q</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SaveAs</db:link></db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Ctrl+Shift+S</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Ctrl+Shift+S</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>New</db:para>
</db:td>
<db:td>
<db:para>Ctrl+N</db:para>
</db:td>
<db:td>
<db:para>Ctrl+N</db:para>
</db:td>
<db:td>
<db:para>Ctrl+N</db:para>
</db:td>
<db:td>
<db:para>Ctrl+N</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Delete</db:para>
</db:td>
<db:td>
<db:para>Del</db:para>
</db:td>
<db:td>
<db:para>Del, Meta+D</db:para>
</db:td>
<db:td>
<db:para>Del, Ctrl+D</db:para>
</db:td>
<db:td>
<db:para>Del, Ctrl+D</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Cut</db:para>
</db:td>
<db:td>
<db:para>Ctrl+X, Shift+Del</db:para>
</db:td>
<db:td>
<db:para>Ctrl+X, Meta+K</db:para>
</db:td>
<db:td>
<db:para>Ctrl+X, F20, Shift+Del</db:para>
</db:td>
<db:td>
<db:para>Ctrl+X, F20, Shift+Del</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Copy</db:para>
</db:td>
<db:td>
<db:para>Ctrl+C, Ctrl+Ins</db:para>
</db:td>
<db:td>
<db:para>Ctrl+C</db:para>
</db:td>
<db:td>
<db:para>Ctrl+C, F16, Ctrl+Ins</db:para>
</db:td>
<db:td>
<db:para>Ctrl+C, F16, Ctrl+Ins</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Paste</db:para>
</db:td>
<db:td>
<db:para>Ctrl+V, Shift+Ins</db:para>
</db:td>
<db:td>
<db:para>Ctrl+V, Meta+Y</db:para>
</db:td>
<db:td>
<db:para>Ctrl+V, F18, Shift+Ins</db:para>
</db:td>
<db:td>
<db:para>Ctrl+V, F18, Shift+Ins</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Preferences</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Ctrl+,</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Undo</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Z, Alt+Backspace</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Z</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Z, F14</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Z, F14</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Redo</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Y, Shift+Ctrl+Z, Alt+Shift+Backspace</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Z</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Z</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Z</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Back</db:para>
</db:td>
<db:td>
<db:para>Alt+Left, Backspace</db:para>
</db:td>
<db:td>
<db:para>Ctrl+[</db:para>
</db:td>
<db:td>
<db:para>Alt+Left</db:para>
</db:td>
<db:td>
<db:para>Alt+Left</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Forward</db:para>
</db:td>
<db:td>
<db:para>Alt+Right, Shift+Backspace</db:para>
</db:td>
<db:td>
<db:para>Ctrl+]</db:para>
</db:td>
<db:td>
<db:para>Alt+Right</db:para>
</db:td>
<db:td>
<db:para>Alt+Right</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Refresh</db:para>
</db:td>
<db:td>
<db:para>F5</db:para>
</db:td>
<db:td>
<db:para>F5</db:para>
</db:td>
<db:td>
<db:para>F5</db:para>
</db:td>
<db:td>
<db:para>Ctrl+R, F5</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">ZoomIn</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+Plus</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Plus</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Plus</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Plus</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">ZoomOut</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+Minus</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Minus</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Minus</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Minus</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">FullScreen</db:link></db:para>
</db:td>
<db:td>
<db:para>F11, Alt+Enter</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Meta+F</db:para>
</db:td>
<db:td>
<db:para>F11, Ctrl+Shift+F</db:para>
</db:td>
<db:td>
<db:para>Ctrl+F11</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Print</db:para>
</db:td>
<db:td>
<db:para>Ctrl+P</db:para>
</db:td>
<db:td>
<db:para>Ctrl+P</db:para>
</db:td>
<db:td>
<db:para>Ctrl+P</db:para>
</db:td>
<db:td>
<db:para>Ctrl+P</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">AddTab</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+T</db:para>
</db:td>
<db:td>
<db:para>Ctrl+T</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+N, Ctrl+T</db:para>
</db:td>
<db:td>
<db:para>Ctrl+T</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">NextChild</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+Tab, Forward, Ctrl+F6</db:para>
</db:td>
<db:td>
<db:para>Ctrl+}, Forward, Ctrl+Tab</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Tab, Forward, Ctrl+Comma</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Tab, Forward</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">PreviousChild</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Tab, Back, Ctrl+Shift+F6</db:para>
</db:td>
<db:td>
<db:para>Ctrl+{, Back, Ctrl+Shift+Tab</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Tab, Back, Ctrl+Period</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Tab, Back</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Find</db:para>
</db:td>
<db:td>
<db:para>Ctrl+F</db:para>
</db:td>
<db:td>
<db:para>Ctrl+F</db:para>
</db:td>
<db:td>
<db:para>Ctrl+F</db:para>
</db:td>
<db:td>
<db:para>Ctrl+F</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">FindNext</db:link></db:para>
</db:td>
<db:td>
<db:para>F3, Ctrl+G</db:para>
</db:td>
<db:td>
<db:para>Ctrl+G</db:para>
</db:td>
<db:td>
<db:para>F3</db:para>
</db:td>
<db:td>
<db:para>Ctrl+G, F3</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">FindPrevious</db:link></db:para>
</db:td>
<db:td>
<db:para>Shift+F3, Ctrl+Shift+G</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+G</db:para>
</db:td>
<db:td>
<db:para>Shift+F3</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+G, Shift+F3</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Replace</db:para>
</db:td>
<db:td>
<db:para>Ctrl+H</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>Ctrl+R</db:para>
</db:td>
<db:td>
<db:para>Ctrl+H</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectAll</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+A</db:para>
</db:td>
<db:td>
<db:para>Ctrl+A</db:para>
</db:td>
<db:td>
<db:para>Ctrl+A</db:para>
</db:td>
<db:td>
<db:para>Ctrl+A</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Deselect</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Ctrl+Shift+A</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+A</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Bold</db:para>
</db:td>
<db:td>
<db:para>Ctrl+B</db:para>
</db:td>
<db:td>
<db:para>Ctrl+B</db:para>
</db:td>
<db:td>
<db:para>Ctrl+B</db:para>
</db:td>
<db:td>
<db:para>Ctrl+B</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Italic</db:para>
</db:td>
<db:td>
<db:para>Ctrl+I</db:para>
</db:td>
<db:td>
<db:para>Ctrl+I</db:para>
</db:td>
<db:td>
<db:para>Ctrl+I</db:para>
</db:td>
<db:td>
<db:para>Ctrl+I</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Underline</db:para>
</db:td>
<db:td>
<db:para>Ctrl+U</db:para>
</db:td>
<db:td>
<db:para>Ctrl+U</db:para>
</db:td>
<db:td>
<db:para>Ctrl+U</db:para>
</db:td>
<db:td>
<db:para>Ctrl+U</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToNextChar</db:link></db:para>
</db:td>
<db:td>
<db:para>Right</db:para>
</db:td>
<db:td>
<db:para>Right, Meta+F</db:para>
</db:td>
<db:td>
<db:para>Right</db:para>
</db:td>
<db:td>
<db:para>Right</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToPreviousChar</db:link></db:para>
</db:td>
<db:td>
<db:para>Left</db:para>
</db:td>
<db:td>
<db:para>Left, Meta+B</db:para>
</db:td>
<db:td>
<db:para>Left</db:para>
</db:td>
<db:td>
<db:para>Left</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToNextWord</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+Right</db:para>
</db:td>
<db:td>
<db:para>Alt+Right</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Right</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Right</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToPreviousWord</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+Left</db:para>
</db:td>
<db:td>
<db:para>Alt+Left</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Left</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Left</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToNextLine</db:link></db:para>
</db:td>
<db:td>
<db:para>Down</db:para>
</db:td>
<db:td>
<db:para>Down, Meta+N</db:para>
</db:td>
<db:td>
<db:para>Down</db:para>
</db:td>
<db:td>
<db:para>Down</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToPreviousLine</db:link></db:para>
</db:td>
<db:td>
<db:para>Up</db:para>
</db:td>
<db:td>
<db:para>Up, Meta+P</db:para>
</db:td>
<db:td>
<db:para>Up</db:para>
</db:td>
<db:td>
<db:para>Up</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToNextPage</db:link></db:para>
</db:td>
<db:td>
<db:para>PgDown</db:para>
</db:td>
<db:td>
<db:para>PgDown, Alt+PgDown, Meta+Down, Meta+PgDown, Meta+V</db:para>
</db:td>
<db:td>
<db:para>PgDown</db:para>
</db:td>
<db:td>
<db:para>PgDown</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToPreviousPage</db:link></db:para>
</db:td>
<db:td>
<db:para>PgUp</db:para>
</db:td>
<db:td>
<db:para>PgUp, Alt+PgUp, Meta+Up, Meta+PgUp</db:para>
</db:td>
<db:td>
<db:para>PgUp</db:para>
</db:td>
<db:td>
<db:para>PgUp</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToStartOfLine</db:link></db:para>
</db:td>
<db:td>
<db:para>Home</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Left, Meta+Left</db:para>
</db:td>
<db:td>
<db:para>Home</db:para>
</db:td>
<db:td>
<db:para>Home</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToEndOfLine</db:link></db:para>
</db:td>
<db:td>
<db:para>End</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Right, Meta+Right</db:para>
</db:td>
<db:td>
<db:para>End, Ctrl+E</db:para>
</db:td>
<db:td>
<db:para>End, Ctrl+E</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToStartOfBlock</db:link></db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>Alt+Up, Meta+A</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToEndOfBlock</db:link></db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>Alt+Down, Meta+E</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToStartOfDocument</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+Home</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Up, Home</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Home</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Home</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">MoveToEndOfDocument</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+End</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Down, End</db:para>
</db:td>
<db:td>
<db:para>Ctrl+End</db:para>
</db:td>
<db:td>
<db:para>Ctrl+End</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectNextChar</db:link></db:para>
</db:td>
<db:td>
<db:para>Shift+Right</db:para>
</db:td>
<db:td>
<db:para>Shift+Right</db:para>
</db:td>
<db:td>
<db:para>Shift+Right</db:para>
</db:td>
<db:td>
<db:para>Shift+Right</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectPreviousChar</db:link></db:para>
</db:td>
<db:td>
<db:para>Shift+Left</db:para>
</db:td>
<db:td>
<db:para>Shift+Left</db:para>
</db:td>
<db:td>
<db:para>Shift+Left</db:para>
</db:td>
<db:td>
<db:para>Shift+Left</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectNextWord</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Right</db:para>
</db:td>
<db:td>
<db:para>Alt+Shift+Right</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Right</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Right</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectPreviousWord</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Left</db:para>
</db:td>
<db:td>
<db:para>Alt+Shift+Left</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Left</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Left</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectNextLine</db:link></db:para>
</db:td>
<db:td>
<db:para>Shift+Down</db:para>
</db:td>
<db:td>
<db:para>Shift+Down</db:para>
</db:td>
<db:td>
<db:para>Shift+Down</db:para>
</db:td>
<db:td>
<db:para>Shift+Down</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectPreviousLine</db:link></db:para>
</db:td>
<db:td>
<db:para>Shift+Up</db:para>
</db:td>
<db:td>
<db:para>Shift+Up</db:para>
</db:td>
<db:td>
<db:para>Shift+Up</db:para>
</db:td>
<db:td>
<db:para>Shift+Up</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectNextPage</db:link></db:para>
</db:td>
<db:td>
<db:para>Shift+PgDown</db:para>
</db:td>
<db:td>
<db:para>Shift+PgDown</db:para>
</db:td>
<db:td>
<db:para>Shift+PgDown</db:para>
</db:td>
<db:td>
<db:para>Shift+PgDown</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectPreviousPage</db:link></db:para>
</db:td>
<db:td>
<db:para>Shift+PgUp</db:para>
</db:td>
<db:td>
<db:para>Shift+PgUp</db:para>
</db:td>
<db:td>
<db:para>Shift+PgUp</db:para>
</db:td>
<db:td>
<db:para>Shift+PgUp</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectStartOfLine</db:link></db:para>
</db:td>
<db:td>
<db:para>Shift+Home</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Left</db:para>
</db:td>
<db:td>
<db:para>Shift+Home</db:para>
</db:td>
<db:td>
<db:para>Shift+Home</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectEndOfLine</db:link></db:para>
</db:td>
<db:td>
<db:para>Shift+End</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Right</db:para>
</db:td>
<db:td>
<db:para>Shift+End</db:para>
</db:td>
<db:td>
<db:para>Shift+End</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectStartOfBlock</db:link></db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>Alt+Shift+Up, Meta+Shift+A</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectEndOfBlock</db:link></db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>Alt+Shift+Down, Meta+Shift+E</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectStartOfDocument</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Home</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Up, Shift+Home</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Home</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Home</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">SelectEndOfDocument</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+End</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+Down, Shift+End</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+End</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Shift+End</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">DeleteStartOfWord</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+Backspace</db:para>
</db:td>
<db:td>
<db:para>Alt+Backspace</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Backspace</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Backspace</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">DeleteEndOfWord</db:link></db:para>
</db:td>
<db:td>
<db:para>Ctrl+Del</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Del</db:para>
</db:td>
<db:td>
<db:para>Ctrl+Del</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">DeleteEndOfLine</db:link></db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>Ctrl+K</db:para>
</db:td>
<db:td>
<db:para>Ctrl+K</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">DeleteCompleteLine</db:link></db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>Ctrl+U</db:para>
</db:td>
<db:td>
<db:para>Ctrl+U</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">InsertParagraphSeparator</db:link></db:para>
</db:td>
<db:td>
<db:para>Enter</db:para>
</db:td>
<db:td>
<db:para>Enter</db:para>
</db:td>
<db:td>
<db:para>Enter</db:para>
</db:td>
<db:td>
<db:para>Enter</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qkeysequence.xml#StandardKey-enum">InsertLineSeparator</db:link></db:para>
</db:td>
<db:td>
<db:para>Shift+Enter</db:para>
</db:td>
<db:td>
<db:para>Meta+Enter, Meta+O</db:para>
</db:td>
<db:td>
<db:para>Shift+Enter</db:para>
</db:td>
<db:td>
<db:para>Shift+Enter</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Backspace</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>Meta+H</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
<db:td>
<db:para>(none)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Cancel</db:para>
</db:td>
<db:td>
<db:para>Escape</db:para>
</db:td>
<db:td>
<db:para>Escape, Ctrl+.</db:para>
</db:td>
<db:td>
<db:para>Escape</db:para>
</db:td>
<db:td>
<db:para>Escape</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Note that, since the key sequences used for the standard shortcuts differ between platforms, you still need to test your shortcuts on each platform to ensure that you do not unintentionally assign the same key sequence to many actions.</db:para>
</db:section>
<db:section xml:id="keyboard-layout-issues">
<db:title>Keyboard Layout Issues</db:title>
<db:para>Many key sequence specifications are chosen by developers based on the layout of certain types of keyboard, rather than choosing keys that represent the first letter of an action's name, such as <db:guilabel>Ctrl S</db:guilabel> (&quot;Ctrl+S&quot;) or <db:guilabel>Ctrl C</db:guilabel> (&quot;Ctrl+C&quot;). Additionally, because certain symbols can only be entered with the help of modifier keys on certain keyboard layouts, key sequences intended for use with one keyboard layout may map to a different key, map to no keys at all, or require an additional modifier key to be used on different keyboard layouts.</db:para>
<db:para>For example, the shortcuts, <db:guilabel>Ctrl plus</db:guilabel> and <db:guilabel>Ctrl minus</db:guilabel>, are often used as shortcuts for zoom operations in graphics applications, and these may be specified as &quot;Ctrl++&quot; and &quot;Ctrl+-&quot; respectively. However, the way these shortcuts are specified and interpreted depends on the keyboard layout. Users of Norwegian keyboards will note that the <db:guilabel>+</db:guilabel> and <db:guilabel>-</db:guilabel> keys are not adjacent on the keyboard, but will still be able to activate both shortcuts without needing to press the <db:guilabel>Shift</db:guilabel> key. However, users with British keyboards will need to hold down the <db:guilabel>Shift</db:guilabel> key to enter the <db:guilabel>+</db:guilabel> symbol, making the shortcut effectively the same as &quot;Ctrl+Shift+=&quot;.</db:para>
<db:para>Although some developers might resort to fully specifying all the modifiers they use on their keyboards to activate a shortcut, this will also result in unexpected behavior for users of different keyboard layouts.</db:para>
<db:para>For example, a developer using a British keyboard may decide to specify &quot;Ctrl+Shift+=&quot; as the key sequence in order to create a shortcut that coincidentally behaves in the same way as <db:guilabel>Ctrl plus</db:guilabel>. However, the <db:guilabel>=</db:guilabel> key needs to be accessed using the <db:guilabel>Shift</db:guilabel> key on Norwegian keyboard, making the required shortcut effectively <db:guilabel>Ctrl Shift Shift =</db:guilabel> (an impossible key combination).</db:para>
<db:para>As a result, both human-readable strings and hard-coded key codes can both be problematic to use when specifying a key sequence that can be used on a variety of different keyboard layouts. Only the use of <db:link xlink:href="qkeysequence.xml#StandardKey-enum">standard shortcuts</db:link> guarantees that the user will be able to use the shortcuts that the developer intended.</db:para>
<db:para>Despite this, we can address this issue by ensuring that human-readable strings are used, making it possible for translations of key sequences to be made for users of different languages. This approach will be successful for users whose keyboards have the most typical layout for the language they are using.</db:para>
</db:section>
<db:section xml:id="gnu-emacs-style-key-sequences">
<db:title>GNU Emacs Style Key Sequences</db:title>
<db:para>Key sequences similar to those used in <db:link xlink:href="http://www.gnu.org/software/emacs/">GNU Emacs</db:link>, allowing up to four key codes, can be created by using the multiple argument constructor, or by passing a human-readable string of comma-separated key sequences.</db:para>
<db:para>For example, the key sequence, <db:guilabel>Ctrl X</db:guilabel> followed by <db:guilabel>Ctrl C</db:guilabel>, can be specified using either of the following ways:</db:para>
<db:programlisting language="cpp">QKeySequence(tr(&quot;Ctrl+X, Ctrl+C&quot;));
QKeySequence(Qt::CTRL | Qt::Key_X, Qt::CTRL | Qt::Key_C);
QKeySequence(Qt::CTRL + Qt::Key_X, Qt::CTRL + Qt::Key_C); // deprecated
</db:programlisting>
<db:warning>
<db:para>A <db:link xlink:href="qapplication.xml">QApplication</db:link> instance must have been constructed before a <db:link xlink:href="qkeysequence.xml">QKeySequence</db:link> is created; otherwise, your application may crash.</db:para>
</db:warning>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qshortcut.xml">QShortcut</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="SequenceFormat-enum">
<db:title>enum QKeySequence::SequenceFormat</db:title>
<db:enumsynopsis>
<db:enumname>SequenceFormat</db:enumname>
<db:enumitem>
<db:enumidentifier>NativeText</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PortableText</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::NativeText</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The key sequence as a platform specific string. This means that it will be shown translated and on the Mac it will resemble a key sequence from the menu bar. This enum is best used when you want to display the string to the user.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::PortableText</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The key sequence is given in a &quot;portable&quot; format, suitable for reading and writing to a file. In many cases, it will look similar to the native text on Windows and X11.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="SequenceMatch-enum">
<db:title>enum QKeySequence::SequenceMatch</db:title>
<db:enumsynopsis>
<db:enumname>SequenceMatch</db:enumname>
<db:enumitem>
<db:enumidentifier>NoMatch</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PartialMatch</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ExactMatch</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::NoMatch</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The key sequences are different; not even partially matching.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::PartialMatch</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The key sequences match partially, but are not the same.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::ExactMatch</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The key sequences are the same.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="StandardKey-enum">
<db:title>enum QKeySequence::StandardKey</db:title>
<db:enumsynopsis>
<db:enumname>StandardKey</db:enumname>
<db:enumitem>
<db:enumidentifier>UnknownKey</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>HelpContents</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>WhatsThis</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Open</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Close</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Save</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>New</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Delete</db:enumidentifier>
<db:enumvalue>7</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Cut</db:enumidentifier>
<db:enumvalue>8</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Copy</db:enumidentifier>
<db:enumvalue>9</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Paste</db:enumidentifier>
<db:enumvalue>10</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Undo</db:enumidentifier>
<db:enumvalue>11</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Redo</db:enumidentifier>
<db:enumvalue>12</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Back</db:enumidentifier>
<db:enumvalue>13</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Forward</db:enumidentifier>
<db:enumvalue>14</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Refresh</db:enumidentifier>
<db:enumvalue>15</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ZoomIn</db:enumidentifier>
<db:enumvalue>16</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ZoomOut</db:enumidentifier>
<db:enumvalue>17</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Print</db:enumidentifier>
<db:enumvalue>18</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AddTab</db:enumidentifier>
<db:enumvalue>19</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NextChild</db:enumidentifier>
<db:enumvalue>20</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PreviousChild</db:enumidentifier>
<db:enumvalue>21</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Find</db:enumidentifier>
<db:enumvalue>22</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FindNext</db:enumidentifier>
<db:enumvalue>23</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FindPrevious</db:enumidentifier>
<db:enumvalue>24</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Replace</db:enumidentifier>
<db:enumvalue>25</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectAll</db:enumidentifier>
<db:enumvalue>26</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Bold</db:enumidentifier>
<db:enumvalue>27</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Italic</db:enumidentifier>
<db:enumvalue>28</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Underline</db:enumidentifier>
<db:enumvalue>29</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToNextChar</db:enumidentifier>
<db:enumvalue>30</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToPreviousChar</db:enumidentifier>
<db:enumvalue>31</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToNextWord</db:enumidentifier>
<db:enumvalue>32</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToPreviousWord</db:enumidentifier>
<db:enumvalue>33</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToNextLine</db:enumidentifier>
<db:enumvalue>34</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToPreviousLine</db:enumidentifier>
<db:enumvalue>35</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToNextPage</db:enumidentifier>
<db:enumvalue>36</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToPreviousPage</db:enumidentifier>
<db:enumvalue>37</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToStartOfLine</db:enumidentifier>
<db:enumvalue>38</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToEndOfLine</db:enumidentifier>
<db:enumvalue>39</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToStartOfBlock</db:enumidentifier>
<db:enumvalue>40</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToEndOfBlock</db:enumidentifier>
<db:enumvalue>41</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToStartOfDocument</db:enumidentifier>
<db:enumvalue>42</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MoveToEndOfDocument</db:enumidentifier>
<db:enumvalue>43</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectNextChar</db:enumidentifier>
<db:enumvalue>44</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectPreviousChar</db:enumidentifier>
<db:enumvalue>45</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectNextWord</db:enumidentifier>
<db:enumvalue>46</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectPreviousWord</db:enumidentifier>
<db:enumvalue>47</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectNextLine</db:enumidentifier>
<db:enumvalue>48</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectPreviousLine</db:enumidentifier>
<db:enumvalue>49</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectNextPage</db:enumidentifier>
<db:enumvalue>50</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectPreviousPage</db:enumidentifier>
<db:enumvalue>51</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectStartOfLine</db:enumidentifier>
<db:enumvalue>52</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectEndOfLine</db:enumidentifier>
<db:enumvalue>53</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectStartOfBlock</db:enumidentifier>
<db:enumvalue>54</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectEndOfBlock</db:enumidentifier>
<db:enumvalue>55</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectStartOfDocument</db:enumidentifier>
<db:enumvalue>56</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SelectEndOfDocument</db:enumidentifier>
<db:enumvalue>57</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DeleteStartOfWord</db:enumidentifier>
<db:enumvalue>58</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DeleteEndOfWord</db:enumidentifier>
<db:enumvalue>59</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DeleteEndOfLine</db:enumidentifier>
<db:enumvalue>60</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>InsertParagraphSeparator</db:enumidentifier>
<db:enumvalue>61</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>InsertLineSeparator</db:enumidentifier>
<db:enumvalue>62</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SaveAs</db:enumidentifier>
<db:enumvalue>63</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Preferences</db:enumidentifier>
<db:enumvalue>64</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Quit</db:enumidentifier>
<db:enumvalue>65</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FullScreen</db:enumidentifier>
<db:enumvalue>66</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Deselect</db:enumidentifier>
<db:enumvalue>67</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DeleteCompleteLine</db:enumidentifier>
<db:enumvalue>68</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Backspace</db:enumidentifier>
<db:enumvalue>69</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Cancel</db:enumidentifier>
<db:enumvalue>70</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum represent standard key bindings. They can be used to assign platform dependent keyboard shortcuts to a <db:link xlink:href="qaction.xml">QAction</db:link>.</db:para>
<db:para>Note that the key bindings are platform dependent. The currently bound shortcuts can be queried using <db:link xlink:href="qkeysequence.xml#keyBindings">keyBindings</db:link>().</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::AddTab</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>Add new tab.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Back</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>Navigate back.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Backspace</db:code></db:para>
</db:td>
<db:td><db:code>69</db:code></db:td>
<db:td>
<db:para>Delete previous character.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Bold</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
<db:td>
<db:para>Bold text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Close</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>Close document/tab.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Copy</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>Copy.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Cut</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>Cut.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Delete</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>Delete.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::DeleteEndOfLine</db:code></db:para>
</db:td>
<db:td><db:code>60</db:code></db:td>
<db:td>
<db:para>Delete end of line.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::DeleteEndOfWord</db:code></db:para>
</db:td>
<db:td><db:code>59</db:code></db:td>
<db:td>
<db:para>Delete word from the end of the cursor.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::DeleteStartOfWord</db:code></db:para>
</db:td>
<db:td><db:code>58</db:code></db:td>
<db:td>
<db:para>Delete the beginning of a word up to the cursor.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::DeleteCompleteLine</db:code></db:para>
</db:td>
<db:td><db:code>68</db:code></db:td>
<db:td>
<db:para>Delete the entire line.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Find</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>Find in document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::FindNext</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>Find next result.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::FindPrevious</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td>
<db:para>Find previous result.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Forward</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>Navigate forward.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::HelpContents</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Open help contents.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::InsertLineSeparator</db:code></db:para>
</db:td>
<db:td><db:code>62</db:code></db:td>
<db:td>
<db:para>Insert a new line.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::InsertParagraphSeparator</db:code></db:para>
</db:td>
<db:td><db:code>61</db:code></db:td>
<db:td>
<db:para>Insert a new paragraph.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Italic</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
<db:td>
<db:para>Italic text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToEndOfBlock</db:code></db:para>
</db:td>
<db:td><db:code>41</db:code></db:td>
<db:td>
<db:para>Move cursor to end of block. This shortcut is only used on the macOS.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToEndOfDocument</db:code></db:para>
</db:td>
<db:td><db:code>43</db:code></db:td>
<db:td>
<db:para>Move cursor to end of document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToEndOfLine</db:code></db:para>
</db:td>
<db:td><db:code>39</db:code></db:td>
<db:td>
<db:para>Move cursor to end of line.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToNextChar</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
<db:td>
<db:para>Move cursor to next character.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToNextLine</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
<db:td>
<db:para>Move cursor to next line.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToNextPage</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
<db:td>
<db:para>Move cursor to next page.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToNextWord</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
<db:td>
<db:para>Move cursor to next word.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToPreviousChar</db:code></db:para>
</db:td>
<db:td><db:code>31</db:code></db:td>
<db:td>
<db:para>Move cursor to previous character.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToPreviousLine</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
<db:td>
<db:para>Move cursor to previous line.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToPreviousPage</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td>
<db:para>Move cursor to previous page.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToPreviousWord</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td>
<db:para>Move cursor to previous word.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToStartOfBlock</db:code></db:para>
</db:td>
<db:td><db:code>40</db:code></db:td>
<db:td>
<db:para>Move cursor to start of a block. This shortcut is only used on macOS.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToStartOfDocument</db:code></db:para>
</db:td>
<db:td><db:code>42</db:code></db:td>
<db:td>
<db:para>Move cursor to start of document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::MoveToStartOfLine</db:code></db:para>
</db:td>
<db:td><db:code>38</db:code></db:td>
<db:td>
<db:para>Move cursor to start of line.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::New</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>Create new document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::NextChild</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>Navigate to next tab or child window.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Open</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Open document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Paste</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>Paste.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Preferences</db:code></db:para>
</db:td>
<db:td><db:code>64</db:code></db:td>
<db:td>
<db:para>Open the preferences dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::PreviousChild</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>Navigate to previous tab or child window.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Print</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td>
<db:para>Print document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Quit</db:code></db:para>
</db:td>
<db:td><db:code>65</db:code></db:td>
<db:td>
<db:para>Quit the application.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Redo</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>Redo.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Refresh</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>Refresh or reload current document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Replace</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
<db:td>
<db:para>Find and replace.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SaveAs</db:code></db:para>
</db:td>
<db:td><db:code>63</db:code></db:td>
<db:td>
<db:para>Save document after prompting the user for a file name.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Save</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>Save document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectAll</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
<db:td>
<db:para>Select all text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Deselect</db:code></db:para>
</db:td>
<db:td><db:code>67</db:code></db:td>
<db:td>
<db:para>Deselect text. Since 5.1</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectEndOfBlock</db:code></db:para>
</db:td>
<db:td><db:code>55</db:code></db:td>
<db:td>
<db:para>Extend selection to the end of a text block. This shortcut is only used on macOS.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectEndOfDocument</db:code></db:para>
</db:td>
<db:td><db:code>57</db:code></db:td>
<db:td>
<db:para>Extend selection to end of document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectEndOfLine</db:code></db:para>
</db:td>
<db:td><db:code>53</db:code></db:td>
<db:td>
<db:para>Extend selection to end of line.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectNextChar</db:code></db:para>
</db:td>
<db:td><db:code>44</db:code></db:td>
<db:td>
<db:para>Extend selection to next character.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectNextLine</db:code></db:para>
</db:td>
<db:td><db:code>48</db:code></db:td>
<db:td>
<db:para>Extend selection to next line.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectNextPage</db:code></db:para>
</db:td>
<db:td><db:code>50</db:code></db:td>
<db:td>
<db:para>Extend selection to next page.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectNextWord</db:code></db:para>
</db:td>
<db:td><db:code>46</db:code></db:td>
<db:td>
<db:para>Extend selection to next word.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectPreviousChar</db:code></db:para>
</db:td>
<db:td><db:code>45</db:code></db:td>
<db:td>
<db:para>Extend selection to previous character.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectPreviousLine</db:code></db:para>
</db:td>
<db:td><db:code>49</db:code></db:td>
<db:td>
<db:para>Extend selection to previous line.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectPreviousPage</db:code></db:para>
</db:td>
<db:td><db:code>51</db:code></db:td>
<db:td>
<db:para>Extend selection to previous page.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectPreviousWord</db:code></db:para>
</db:td>
<db:td><db:code>47</db:code></db:td>
<db:td>
<db:para>Extend selection to previous word.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectStartOfBlock</db:code></db:para>
</db:td>
<db:td><db:code>54</db:code></db:td>
<db:td>
<db:para>Extend selection to the start of a text block. This shortcut is only used on macOS.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectStartOfDocument</db:code></db:para>
</db:td>
<db:td><db:code>56</db:code></db:td>
<db:td>
<db:para>Extend selection to start of document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::SelectStartOfLine</db:code></db:para>
</db:td>
<db:td><db:code>52</db:code></db:td>
<db:td>
<db:para>Extend selection to start of line.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Underline</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
<db:td>
<db:para>Underline text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Undo</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>Undo.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::UnknownKey</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Unbound key.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::WhatsThis</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Activate &quot;what's this&quot;.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::ZoomIn</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>Zoom in.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::ZoomOut</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>Zoom out.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::FullScreen</db:code></db:para>
</db:td>
<db:td><db:code>66</db:code></db:td>
<db:td>
<db:para>Toggle the window state to/from full screen.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qkeysequence.xml">QKeySequence</db:link></db:emphasis>::Cancel</db:code></db:para>
</db:td>
<db:td><db:code>70</db:code></db:td>
<db:td>
<db:para>Cancel the current operation.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QKeySequence">
<db:title>QKeySequence::QKeySequence()</db:title>
<db:constructorsynopsis>
<db:methodname>QKeySequence</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QKeySequence()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an empty key sequence.</db:para>
</db:section>
<db:section xml:id="QKeySequence-1">
<db:title>QKeySequence::QKeySequence(const QString &amp;<db:emphasis>key</db:emphasis>, QKeySequence::SequenceFormat <db:emphasis>format</db:emphasis> = NativeText)</db:title>
<db:constructorsynopsis>
<db:methodname>QKeySequence</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>key</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QKeySequence::SequenceFormat</db:type>
<db:parameter>format</db:parameter>
<db:initializer>NativeText</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QKeySequence(const QString &amp;key, QKeySequence::SequenceFormat format)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a key sequence from the <db:code role="parameter">key</db:code> string, based on <db:code role="parameter">format</db:code>.</db:para>
<db:para>For example &quot;Ctrl+O&quot; gives CTRL+'O'. The strings &quot;Ctrl&quot;, &quot;Shift&quot;, &quot;Alt&quot; and &quot;Meta&quot; are recognized, as well as their translated equivalents in the &quot;<db:link xlink:href="qshortcut.xml">QShortcut</db:link>&quot; context (using <db:link xlink:href="qobject.xml#tr">QObject::tr</db:link>()).</db:para>
<db:para>Up to four key codes may be entered by separating them with commas, e.g. &quot;Alt+X,Ctrl+S,Q&quot;.</db:para>
<db:para>This constructor is typically used with <db:link xlink:href="qobject.xml#tr">tr</db:link>(), so that shortcut keys can be replaced in translations:</db:para>
<db:programlisting language="cpp">QMenu *file = new QMenu(this);
file-&amp;gt;addAction(tr(&quot;&amp;amp;Open...&quot;), QKeySequence(tr(&quot;Ctrl+O&quot;, &quot;File|Open&quot;)),
                this, &amp;amp;MainWindow::open);
</db:programlisting>
<db:para>Note the &quot;File|Open&quot; translator comment. It is by no means necessary, but it provides some context for the human translator.</db:para>
</db:section>
<db:section xml:id="QKeySequence-2">
<db:title>QKeySequence::QKeySequence(int <db:emphasis>k1</db:emphasis>, int <db:emphasis>k2</db:emphasis> = 0, int <db:emphasis>k3</db:emphasis> = 0, int <db:emphasis>k4</db:emphasis> = 0)</db:title>
<db:constructorsynopsis>
<db:methodname>QKeySequence</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>k1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>k2</db:parameter>
<db:initializer>0</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>k3</db:parameter>
<db:initializer>0</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>k4</db:parameter>
<db:initializer>0</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QKeySequence(int k1, int k2, int k3, int k4)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a key sequence with up to 4 keys <db:code role="parameter">k1</db:code>, <db:code role="parameter">k2</db:code>, <db:code role="parameter">k3</db:code> and <db:code role="parameter">k4</db:code>.</db:para>
<db:para>The key codes are listed in <db:link xlink:href="qt.xml#Key-enum">Qt::Key</db:link> and can be combined with modifiers (see <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::KeyboardModifier</db:link>) such as <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::ShiftModifier</db:link>, <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::ControlModifier</db:link>, <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::AltModifier</db:link>, or <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::MetaModifier</db:link>.</db:para>
</db:section>
<db:section xml:id="QKeySequence-3">
<db:title>QKeySequence::QKeySequence(QKeyCombination <db:emphasis>k1</db:emphasis>, QKeyCombination <db:emphasis>k2</db:emphasis> = QKeyCombination::fromCombined(0), QKeyCombination <db:emphasis>k3</db:emphasis> = QKeyCombination::fromCombined(0), QKeyCombination <db:emphasis>k4</db:emphasis> = QKeyCombination::fromCombined(0))</db:title>
<db:constructorsynopsis>
<db:methodname>QKeySequence</db:methodname>
<db:methodparam>
<db:type>QKeyCombination</db:type>
<db:parameter>k1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QKeyCombination</db:type>
<db:parameter>k2</db:parameter>
<db:initializer>QKeyCombination::fromCombined(0)</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QKeyCombination</db:type>
<db:parameter>k3</db:parameter>
<db:initializer>QKeyCombination::fromCombined(0)</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QKeyCombination</db:type>
<db:parameter>k4</db:parameter>
<db:initializer>QKeyCombination::fromCombined(0)</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">3</db:synopsisinfo>
<db:synopsisinfo role="signature">QKeySequence(QKeyCombination k1, QKeyCombination k2, QKeyCombination k3, QKeyCombination k4)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a key sequence with up to 4 keys <db:code role="parameter">k1</db:code>, <db:code role="parameter">k2</db:code>, <db:code role="parameter">k3</db:code> and <db:code role="parameter">k4</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qkeycombination.xml">QKeyCombination</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QKeySequence-5">
<db:title>QKeySequence::QKeySequence(QKeySequence::StandardKey <db:emphasis>key</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QKeySequence</db:methodname>
<db:methodparam>
<db:type>QKeySequence::StandardKey</db:type>
<db:parameter>key</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">5</db:synopsisinfo>
<db:synopsisinfo role="signature">QKeySequence(QKeySequence::StandardKey key)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qkeysequence.xml">QKeySequence</db:link> object for the given <db:code role="parameter">key</db:code>. The result will depend on the currently running platform.</db:para>
<db:para>The resulting object will be based on the first element in the list of key bindings for the <db:code role="parameter">key</db:code>.</db:para>
</db:section>
<db:section xml:id="QKeySequence-4">
<db:title>QKeySequence::QKeySequence(const QKeySequence &amp;<db:emphasis>keysequence</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QKeySequence</db:methodname>
<db:methodparam>
<db:type>const QKeySequence &amp;</db:type>
<db:parameter>keysequence</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">4</db:synopsisinfo>
<db:synopsisinfo role="signature">QKeySequence(const QKeySequence &amp;keysequence)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Copy constructor. Makes a copy of <db:code role="parameter">keysequence</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QKeySequence">
<db:title>QKeySequence::~QKeySequence()</db:title>
<db:destructorsynopsis>
<db:methodname>~QKeySequence</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QKeySequence()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the key sequence.</db:para>
</db:section>
<db:section xml:id="count">
<db:title>int QKeySequence::count() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>count</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int count() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the number of keys in the key sequence. The maximum is 4.</db:para>
</db:section>
<db:section xml:id="fromString">
<db:title>[static] QKeySequence QKeySequence::fromString(const QString &amp;<db:emphasis>str</db:emphasis>, QKeySequence::SequenceFormat <db:emphasis>format</db:emphasis> = PortableText)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QKeySequence</db:type>
<db:methodname>fromString</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>str</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QKeySequence::SequenceFormat</db:type>
<db:parameter>format</db:parameter>
<db:initializer>PortableText</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QKeySequence fromString(const QString &amp;str, QKeySequence::SequenceFormat format)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Return a <db:link xlink:href="qkeysequence.xml">QKeySequence</db:link> from the string <db:code role="parameter">str</db:code> based on <db:code role="parameter">format</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qkeysequence.xml#toString">toString</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isEmpty">
<db:title>bool QKeySequence::isEmpty() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isEmpty</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isEmpty() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if the key sequence is empty; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="keyBindings">
<db:title>[static] QList&lt;QKeySequence&gt; QKeySequence::keyBindings(QKeySequence::StandardKey <db:emphasis>key</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QList&lt;QKeySequence&gt;</db:type>
<db:methodname>keyBindings</db:methodname>
<db:methodparam>
<db:type>QKeySequence::StandardKey</db:type>
<db:parameter>key</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QKeySequence&gt; keyBindings(QKeySequence::StandardKey key)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of key bindings for the given <db:code role="parameter">key</db:code>. The result of calling this function will vary based on the target platform. The first element of the list indicates the primary shortcut for the given platform. If the result contains more than one result, these can be considered alternative shortcuts on the same platform for the given <db:code role="parameter">key</db:code>.</db:para>
</db:section>
<db:section xml:id="listFromString">
<db:title>[static] QList&lt;QKeySequence&gt; QKeySequence::listFromString(const QString &amp;<db:emphasis>str</db:emphasis>, QKeySequence::SequenceFormat <db:emphasis>format</db:emphasis> = PortableText)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QList&lt;QKeySequence&gt;</db:type>
<db:methodname>listFromString</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>str</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QKeySequence::SequenceFormat</db:type>
<db:parameter>format</db:parameter>
<db:initializer>PortableText</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QKeySequence&gt; listFromString(const QString &amp;str, QKeySequence::SequenceFormat format)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Return a list of <db:link xlink:href="qkeysequence.xml">QKeySequence</db:link> from the string <db:code role="parameter">str</db:code> based on <db:code role="parameter">format</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qkeysequence.xml#fromString">fromString</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#listToString">listToString</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="listToString">
<db:title>[static] QString QKeySequence::listToString(const QList&lt;QKeySequence&gt; &amp;<db:emphasis>list</db:emphasis>, QKeySequence::SequenceFormat <db:emphasis>format</db:emphasis> = PortableText)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QString</db:type>
<db:methodname>listToString</db:methodname>
<db:methodparam>
<db:type>const QList&lt;QKeySequence&gt; &amp;</db:type>
<db:parameter>list</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QKeySequence::SequenceFormat</db:type>
<db:parameter>format</db:parameter>
<db:initializer>PortableText</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString listToString(const QList&lt;QKeySequence&gt; &amp;list, QKeySequence::SequenceFormat format)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Return a string representation of <db:code role="parameter">list</db:code> based on <db:code role="parameter">format</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qkeysequence.xml#toString">toString</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#listFromString">listFromString</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="matches">
<db:title>QKeySequence::SequenceMatch QKeySequence::matches(const QKeySequence &amp;<db:emphasis>seq</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QKeySequence::SequenceMatch</db:type>
<db:methodname>matches</db:methodname>
<db:methodparam>
<db:type>const QKeySequence &amp;</db:type>
<db:parameter>seq</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QKeySequence::SequenceMatch matches(const QKeySequence &amp;seq) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Matches the sequence with <db:code role="parameter">seq</db:code>. Returns <db:link xlink:href="qkeysequence.xml#SequenceMatch-enum">ExactMatch</db:link> if successful, <db:link xlink:href="qkeysequence.xml#SequenceMatch-enum">PartialMatch</db:link> if <db:code role="parameter">seq</db:code> matches incompletely, and <db:link xlink:href="qkeysequence.xml#SequenceMatch-enum">NoMatch</db:link> if the sequences have nothing in common. Returns <db:link xlink:href="qkeysequence.xml#SequenceMatch-enum">NoMatch</db:link> if <db:code role="parameter">seq</db:code> is shorter.</db:para>
</db:section>
<db:section xml:id="mnemonic">
<db:title>[static] QKeySequence QKeySequence::mnemonic(const QString &amp;<db:emphasis>text</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QKeySequence</db:type>
<db:methodname>mnemonic</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>text</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QKeySequence mnemonic(const QString &amp;text)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the shortcut key sequence for the mnemonic in <db:code role="parameter">text</db:code>, or an empty key sequence if no mnemonics are found.</db:para>
<db:para>For example, mnemonic(&quot;E&amp;xit&quot;) returns <db:code>Qt::ALT+Qt::Key_X</db:code>, mnemonic(&quot;&amp;Quit&quot;) returns <db:code>ALT+Key_Q</db:code>, and mnemonic(&quot;Quit&quot;) returns an empty <db:link xlink:href="qkeysequence.xml">QKeySequence</db:link>.</db:para>
</db:section>
<db:section xml:id="swap">
<db:title>void QKeySequence::swap(QKeySequence &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>swap</db:methodname>
<db:methodparam>
<db:type>QKeySequence &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void swap(QKeySequence &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Swaps key sequence <db:code role="parameter">other</db:code> with this key sequence. This operation is very fast and never fails.</db:para>
</db:section>
<db:section xml:id="toString">
<db:title>QString QKeySequence::toString(QKeySequence::SequenceFormat <db:emphasis>format</db:emphasis> = PortableText) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>toString</db:methodname>
<db:methodparam>
<db:type>QKeySequence::SequenceFormat</db:type>
<db:parameter>format</db:parameter>
<db:initializer>PortableText</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString toString(QKeySequence::SequenceFormat format) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Return a string representation of the key sequence, based on <db:code role="parameter">format</db:code>.</db:para>
<db:para>For example, the value <db:link xlink:href="qt.xml#Modifier-enum">Qt::CTRL</db:link>+<db:link xlink:href="qt.xml#Key-enum">Qt::Key_O</db:link> results in &quot;Ctrl+O&quot;. If the key sequence has multiple key codes, each is separated by commas in the string returned, such as &quot;Alt+X, Ctrl+Y, Z&quot;. The strings, &quot;Ctrl&quot;, &quot;Shift&quot;, etc. are translated using <db:link xlink:href="qobject.xml#tr">QObject::tr</db:link>() in the &quot;<db:link xlink:href="qshortcut.xml">QShortcut</db:link>&quot; context.</db:para>
<db:para>If the key sequence has no keys, an empty string is returned.</db:para>
<db:para>On macOS, the string returned resembles the sequence that is shown in the menu bar if <db:code role="parameter">format</db:code> is <db:link xlink:href="qkeysequence.xml#SequenceFormat-enum">QKeySequence::NativeText</db:link>; otherwise, the string uses the &quot;portable&quot; format, suitable for writing to a file.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qkeysequence.xml#fromString">fromString</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-QVariant">
<db:title>QVariant QKeySequence::operator QVariant() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QVariant</db:type>
<db:methodname>operator QVariant</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QVariant operator QVariant() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the key sequence as a <db:link xlink:href="qvariant.xml">QVariant</db:link></db:para>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QKeySequence::operator!=(const QKeySequence &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator!=</db:methodname>
<db:methodparam>
<db:type>const QKeySequence &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator!=(const QKeySequence &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if this key sequence is not equal to the <db:code role="parameter">other</db:code> key sequence; otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-lt">
<db:title>bool QKeySequence::operator&lt;(const QKeySequence &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator&lt;</db:methodname>
<db:methodparam>
<db:type>const QKeySequence &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator&lt;(const QKeySequence &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Provides an arbitrary comparison of this key sequence and <db:code role="parameter">other</db:code> key sequence. All that is guaranteed is that the operator returns <db:code>false</db:code> if both key sequences are equal and that (ks1 &lt; ks2) == !( ks2 &lt; ks1) if the key sequences are not equal.</db:para>
<db:para>This function is useful in some circumstances, for example if you want to use <db:link xlink:href="qkeysequence.xml">QKeySequence</db:link> objects as keys in a <db:link xlink:href="qmap.xml">QMap</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qkeysequence.xml#operator-eq-eq">operator==</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-not-eq">operator!=</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-gt">operator&gt;</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-lt-eq">operator&lt;=</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-gt-eq">operator&gt;=</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-lt-eq">
<db:title>bool QKeySequence::operator&lt;=(const QKeySequence &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator&lt;=</db:methodname>
<db:methodparam>
<db:type>const QKeySequence &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator&lt;=(const QKeySequence &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if this key sequence is smaller or equal to the <db:code role="parameter">other</db:code> key sequence; otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qkeysequence.xml#operator-eq-eq">operator==</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-not-eq">operator!=</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-lt">operator&lt;</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-gt">operator&gt;</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-gt-eq">operator&gt;=</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QKeySequence &amp;QKeySequence::operator=(const QKeySequence &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QKeySequence &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QKeySequence &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QKeySequence &amp; operator=(const QKeySequence &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Assignment operator. Assigns the <db:code role="parameter">other</db:code> key sequence to this object.</db:para>
</db:section>
<db:section xml:id="operator-eq-1">
<db:title>QKeySequence &amp;QKeySequence::operator=(QKeySequence &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QKeySequence &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>QKeySequence &amp;&amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">move-assign</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QKeySequence &amp; operator=(QKeySequence &amp;&amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Move-assigns <db:code role="parameter">other</db:code> to this <db:link xlink:href="qkeysequence.xml">QKeySequence</db:link> instance.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QKeySequence::operator==(const QKeySequence &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>const QKeySequence &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(const QKeySequence &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if this key sequence is equal to the <db:code role="parameter">other</db:code> key sequence; otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-gt">
<db:title>bool QKeySequence::operator&gt;(const QKeySequence &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator&gt;</db:methodname>
<db:methodparam>
<db:type>const QKeySequence &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator&gt;(const QKeySequence &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if this key sequence is larger than the <db:code role="parameter">other</db:code> key sequence; otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qkeysequence.xml#operator-eq-eq">operator==</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-not-eq">operator!=</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-lt">operator&lt;</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-lt-eq">operator&lt;=</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-gt-eq">operator&gt;=</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-gt-eq">
<db:title>bool QKeySequence::operator&gt;=(const QKeySequence &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator&gt;=</db:methodname>
<db:methodparam>
<db:type>const QKeySequence &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator&gt;=(const QKeySequence &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if this key sequence is larger or equal to the <db:code role="parameter">other</db:code> key sequence; otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qkeysequence.xml#operator-eq-eq">operator==</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-not-eq">operator!=</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-lt">operator&lt;</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-gt">operator&gt;</db:link>()</db:member>
<db:member><db:link xlink:href="qkeysequence.xml#operator-lt-eq">operator&lt;=</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-5b-5d">
<db:title>QKeyCombination QKeySequence::operator[](uint <db:emphasis>index</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QKeyCombination</db:type>
<db:methodname>operator[]</db:methodname>
<db:methodparam>
<db:type>uint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QKeyCombination operator[](uint index) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a reference to the element at position <db:code role="parameter">index</db:code> in the key sequence. This can only be used to read an element.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="qHash">
<db:title>size_t qHash(const QKeySequence &amp;<db:emphasis>key</db:emphasis>, size_t <db:emphasis>seed</db:emphasis> = 0)</db:title>
<db:methodsynopsis>
<db:type>size_t</db:type>
<db:methodname>qHash</db:methodname>
<db:methodparam>
<db:type>const QKeySequence &amp;</db:type>
<db:parameter>key</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>size_t</db:type>
<db:parameter>seed</db:parameter>
<db:initializer>0</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">size_t qHash(const QKeySequence &amp;key, size_t seed)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Calculates the hash value of <db:code role="parameter">key</db:code>, using <db:code role="parameter">seed</db:code> to seed the calculation.</db:para>
</db:section>
<db:section xml:id="qt_set_sequence_auto_mnemonic">
<db:title>void qt_set_sequence_auto_mnemonic(bool <db:emphasis>b</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>qt_set_sequence_auto_mnemonic</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>b</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void qt_set_sequence_auto_mnemonic(bool b)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Specifies whether mnemonics for menu items, labels, etc., should be honored or not. On Windows and X11, this feature is on by default; on macOS, it is off. When this feature is off (that is, when <db:code role="parameter">b</db:code> is false), <db:link xlink:href="qkeysequence.xml#mnemonic">QKeySequence::mnemonic</db:link>() always returns an empty string.</db:para>
<db:note>
<db:para>This function is not declared in any of Qt's header files. To use it in your application, declare the function prototype before calling it.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qshortcut.xml">QShortcut</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-lt-lt">
<db:title>QDataStream &amp;operator&lt;&lt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, const QKeySequence &amp;<db:emphasis>sequence</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QDataStream &amp;</db:type>
<db:methodname>operator&lt;&lt;</db:methodname>
<db:methodparam>
<db:type>QDataStream &amp;</db:type>
<db:parameter>stream</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QKeySequence &amp;</db:type>
<db:parameter>sequence</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QDataStream &amp; operator&lt;&lt;(QDataStream &amp;stream, const QKeySequence &amp;sequence)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Writes the key <db:code role="parameter">sequence</db:code> to the <db:code role="parameter">stream</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="datastreamformat.xml">Format of the QDataStream operators</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-gt-gt">
<db:title>QDataStream &amp;operator&gt;&gt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, QKeySequence &amp;<db:emphasis>sequence</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QDataStream &amp;</db:type>
<db:methodname>operator&gt;&gt;</db:methodname>
<db:methodparam>
<db:type>QDataStream &amp;</db:type>
<db:parameter>stream</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QKeySequence &amp;</db:type>
<db:parameter>sequence</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QDataStream &amp; operator&gt;&gt;(QDataStream &amp;stream, QKeySequence &amp;sequence)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reads a key sequence from the <db:code role="parameter">stream</db:code> into the key <db:code role="parameter">sequence</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="datastreamformat.xml">Format of the QDataStream operators</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
