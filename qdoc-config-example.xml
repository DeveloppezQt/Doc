<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>Configuration File Example</db:title>
<db:productname>QDoc</db:productname>
<db:titleabbrev>QDoc Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="qdoc-categories.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Categories of Documentation"/></db:extendedlink>
<db:abstract>
<db:para>configuration files for the QDoc Manual and QDoc Guide.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The QDoc Manual uses these <db:code>qdocconf</db:code> files to generate the QDoc Guide and the <db:link xlink:href="">QDoc Manual</db:link>.</db:para>
<db:note>
<db:para>The configuration files are similar to the Qt Reference Documentation and the QDoc Manual do not use all of the variables. The variables are included to demonstrate a full project scenario.</db:para>
</db:note>
<db:section xml:id="macros-and-other-definitions">
<db:title>Macros and other Definitions</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="">config/compat.qdocconf</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="">config/macros.qdocconf</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="">config/qt-cpp-ignore.qdocconf</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="">config/qt-defines.qdocconf</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>QDoc allows macros to help with aliasing and for inputting special HTML characters within the documentation. Macros are a form of workarounds if QDoc is unable to resolve formatting issues such as when QDoc should disregard QDoc comments in documentation paragraphs.</db:para>
<db:para>QDoc is also aware of the common C++ and Qt preprocessors and can decide which documentation to generate according to the definitions in the configuration files.</db:para>
</db:section>
<db:section xml:id="project-information">
<db:title>Project Information</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="">config/qdoc-online.qdocconf</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="">config/qdoc.qdocconf</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="">config/qdoc-project.qdocconf</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>These configuration files dictate how QDoc will generate the project. Depending which configuration file QDoc processes, the formatting and the information about the project will be different. If QDoc processes <db:code>qdoc-online.qdocconf</db:code>, QDoc will generate the HTML version of the manual will have the style suitable for online viewing.</db:para>
<db:para>Additionally, the settings for creating the <db:link xlink:href="">Qt Help File</db:link> is in the configuration.</db:para>
<db:note>
<db:para>The project file uses variables used during Qt's configuration step.</db:para>
</db:note>
</db:section>
<db:section xml:id="html-styles">
<db:title>HTML Styles</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="">config/qt-html-default-styles.qdocconf</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="">config/qt-html-online-styles.qdocconf</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="">config/qt-html-templates-online.qdocconf</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="">config/qt-html-templates.qdocconf</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>These files indicate which styles QDoc should use for the HTML formats. Typically, there are two templates, one for online viewing and one for offline. Qt Creator is able to fit more content in a page with the offline template. The templates store HTML information as strings and QDoc will copy the template to each HTML page.</db:para>
</db:section>
<db:section xml:id="project-file">
<db:title>Project File</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="">config/config.pro</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Every example page (such as this one) needs a Qt project file. QDoc will use the project file to determine which files are part of the example. QDoc will then create a page listing all the files that are part of the example.</db:para>
<db:note>
<db:para>the directory name of the example and the name of the project file must match. The example directory is found using the <db:link xlink:href="qdoc-guide-conf.xml#input-and-output-directories">exampledirs</db:link> variable.</db:para>
</db:note>
</db:section>
</db:article>
