<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Desktop Integration</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Integrating with the user's desktop environment.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt applications behave well in the user's desktop environment, but certain integrations require additional, and sometimes platform specific, techniques.</db:para>
<db:section xml:id="useful-classes">
<db:title>Useful Classes</db:title>
<db:para>Various classes in Qt are designed to help developers integrate applications into users' desktop environments. These classes enable developers to take advantage of native services while still using a cross-platform API.</db:para>
<db:variablelist role="desktop">
<db:varlistentry>
<db:term><db:link xlink:href="qdesktopservices.xml" xlink:role="class">QDesktopServices</db:link></db:term>
<db:listitem>
<db:para>The QDesktopServices class provides methods for accessing common desktop services.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="opening-external-resources">
<db:title>Opening External Resources</db:title>
<db:para>Although Qt provides facilities to handle and display resources, such as <db:link xlink:href="qimageiohandler.xml">common image formats</db:link> and <db:link xlink:href="qtextdocument.xml">HTML</db:link>, it is sometimes necessary to open files and external resources using external applications.</db:para>
<db:para><db:link xlink:href="qdesktopservices.xml">QDesktopServices</db:link> provides an interface to services offered by the user's desktop environment. In particular, the <db:link xlink:href="qdesktopservices.xml#openUrl">openUrl</db:link>() function is used to open resources using the appropriate application, which may have been specifically configured by the user.</db:para>
</db:section>
<db:section xml:id="system-tray-icons">
<db:title>System Tray Icons</db:title>
<db:para>Many modern desktop environments feature docks or panels with <db:emphasis>system trays</db:emphasis> in which applications can install icons. Applications often use system tray icons to display status information, either by updating the icon itself or by showing information in &quot;balloon messages&quot;. Additionally, many applications provide pop-up menus that can be accessed via their system tray icons.</db:para>
<db:para>The <db:link xlink:href="qsystemtrayicon.xml">QSystemTrayIcon</db:link> class exposes all of the above features via an intuitive Qt-style API that can be used on all desktop platforms.</db:para>
</db:section>
<db:section xml:id="desktop-widgets">
<db:title>Desktop Widgets</db:title>
<db:para>On systems where the user's desktop is displayed using more than one screen, certain types of applications may need to obtain information about the configuration of the user's workspace to ensure that new windows and dialogs are opened in appropriate locations.</db:para>
<db:para>The QDesktopWidget class can be used to monitor the positions of widgets and notify applications about changes to the way the desktop is split over the available screens. This enables applications to implement policies for positioning new windows so that, for example, they do not distract a user who is working on a specific task.</db:para>
</db:section>
</db:article>
