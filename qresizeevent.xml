<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QResizeEvent Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qresizeevent.xml">QResizeEvent</db:link> class contains event parameters for resize events.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QResizeEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qevent.xml" xlink:role="class">QEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QResizeEvent is part of <db:simplelist><db:member>events</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Resize events are sent to widgets that have been resized.</db:para>
<db:para>The event handler <db:link xlink:href="qwidget.xml#resizeEvent">QWidget::resizeEvent</db:link>() receives resize events.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwidget.xml#size-prop">QWidget::resize</db:link>()</db:member>
<db:member><db:link xlink:href="qwidget.xml#geometry-prop">QWidget::setGeometry</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QResizeEvent-2">
<db:title>QResizeEvent::QResizeEvent(const QSize &amp;<db:emphasis>size</db:emphasis>, const QSize &amp;<db:emphasis>oldSize</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QResizeEvent</db:methodname>
<db:methodparam>
<db:type>const QSize &amp;</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QSize &amp;</db:type>
<db:parameter>oldSize</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QResizeEvent(const QSize &amp;size, const QSize &amp;oldSize)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a resize event with the new and old widget sizes, <db:code role="parameter">size</db:code> and <db:code role="parameter">oldSize</db:code> respectively.</db:para>
</db:section>
<db:section xml:id="oldSize">
<db:title>const QSize &amp;QResizeEvent::oldSize() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>const QSize &amp;</db:type>
<db:methodname>oldSize</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">const QSize &amp; oldSize() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the old size of the widget.</db:para>
</db:section>
<db:section xml:id="size">
<db:title>const QSize &amp;QResizeEvent::size() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>const QSize &amp;</db:type>
<db:methodname>size</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">const QSize &amp; size() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the new size of the widget. This is the same as <db:link xlink:href="qwidget.xml#size-prop">QWidget::size</db:link>().</db:para>
</db:section>
</db:section>
</db:article>
