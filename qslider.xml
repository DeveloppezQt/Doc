<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSlider Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qslider.xml">QSlider</db:link> widget provides a vertical or horizontal slider.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSlider</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstractslider.xml" xlink:role="class">QAbstractSlider</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSlider is part of <db:simplelist><db:member>basicwidgets</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The slider is the classic widget for controlling a bounded value. It lets the user move a slider handle along a horizontal or vertical groove and translates the handle's position into an integer value within the legal range.</db:para>
<db:para><db:link xlink:href="qslider.xml">QSlider</db:link> has very few of its own functions; most of the functionality is in <db:link xlink:href="qabstractslider.xml">QAbstractSlider</db:link>. The most useful functions are <db:link xlink:href="qabstractslider.xml#value-prop">setValue</db:link>() to set the slider directly to some value; <db:link xlink:href="qabstractslider.xml#triggerAction">triggerAction</db:link>() to simulate the effects of clicking (useful for shortcut keys); <db:link xlink:href="qabstractslider.xml#singleStep-prop">setSingleStep</db:link>(), <db:link xlink:href="qabstractslider.xml#pageStep-prop">setPageStep</db:link>() to set the steps; and <db:link xlink:href="qabstractslider.xml#minimum-prop">setMinimum</db:link>() and <db:link xlink:href="qabstractslider.xml#maximum-prop">setMaximum</db:link>() to define the range of the scroll bar.</db:para>
<db:para><db:link xlink:href="qslider.xml">QSlider</db:link> provides methods for controlling tickmarks. You can use <db:link xlink:href="qslider.xml#tickPosition-prop">setTickPosition</db:link>() to indicate where you want the tickmarks to be, <db:link xlink:href="qslider.xml#tickInterval-prop">setTickInterval</db:link>() to indicate how many of them you want. the currently set tick position and interval can be queried using the <db:link xlink:href="qslider.xml#tickPosition-prop">tickPosition</db:link>() and <db:link xlink:href="qslider.xml#tickInterval-prop">tickInterval</db:link>() functions, respectively.</db:para>
<db:para><db:link xlink:href="qslider.xml">QSlider</db:link> inherits a comprehensive set of signals:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Signal</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qabstractslider.xml#valueChanged">valueChanged</db:link>()</db:para>
</db:td>
<db:td>
<db:para>Emitted when the slider's value has changed. The tracking() determines whether this signal is emitted during user interaction.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qabstractslider.xml#sliderPressed">sliderPressed</db:link>()</db:para>
</db:td>
<db:td>
<db:para>Emitted when the user starts to drag the slider.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qabstractslider.xml#sliderMoved">sliderMoved</db:link>()</db:para>
</db:td>
<db:td>
<db:para>Emitted when the user drags the slider.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qabstractslider.xml#sliderReleased">sliderReleased</db:link>()</db:para>
</db:td>
<db:td>
<db:para>Emitted when the user releases the slider.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para><db:link xlink:href="qslider.xml">QSlider</db:link> only provides integer ranges. Note that although <db:link xlink:href="qslider.xml">QSlider</db:link> handles very large numbers, it becomes difficult for users to use a slider accurately for very large ranges.</db:para>
<db:para>A slider accepts focus on Tab and provides both a mouse wheel and a keyboard interface. The keyboard interface is the following:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Left/Right move a horizontal slider by one single step.</db:para>
</db:listitem>
<db:listitem>
<db:para>Up/Down move a vertical slider by one single step.</db:para>
</db:listitem>
<db:listitem>
<db:para>PageUp moves up one page.</db:para>
</db:listitem>
<db:listitem>
<db:para>PageDown moves down one page.</db:para>
</db:listitem>
<db:listitem>
<db:para>Home moves to the start (mininum).</db:para>
</db:listitem>
<db:listitem>
<db:para>End moves to the end (maximum).</db:para>
</db:listitem>
</db:itemizedlist>
<db:informaltable style="generic" width="100%">
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/macintosh-slider.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of a Macintosh slider</db:para>
</db:td>
<db:td>
<db:para>A slider shown in the <db:link xlink:href="gallery-macintosh.xml">Macintosh widget style</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/windowsvista-slider.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of a Windows Vista slider</db:para>
</db:td>
<db:td>
<db:para>A slider shown in the <db:link xlink:href="gallery-windowsvista.xml">Windows Vista widget style</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/fusion-slider.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of a Fusion slider</db:para>
</db:td>
<db:td>
<db:para>A slider shown in the <db:link xlink:href="gallery-fusion.xml">Fusion widget style</db:link>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscrollbar.xml">QScrollBar</db:link></db:member>
<db:member><db:link xlink:href="qspinbox.xml">QSpinBox</db:link></db:member>
<db:member><db:link xlink:href="qdial.xml">QDial</db:link></db:member>
<db:member><db:link xlink:href="guibooks.xml#fowler">GUI Design Handbook: Slider</db:link></db:member>
<db:member><db:link xlink:href="qtwidgets-widgets-sliders-example.xml">Sliders Example</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="TickPosition-enum">
<db:title>enum QSlider::TickPosition</db:title>
<db:para>This enum specifies where the tick marks are to be drawn relative to the slider's groove and the handle the user moves.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qslider.xml">QSlider</db:link></db:emphasis>::NoTicks</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Do not draw any tick marks.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qslider.xml">QSlider</db:link></db:emphasis>::TicksBothSides</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Draw tick marks on both sides of the groove.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qslider.xml">QSlider</db:link></db:emphasis>::TicksAbove</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Draw tick marks above the (horizontal) slider</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qslider.xml">QSlider</db:link></db:emphasis>::TicksBelow</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Draw tick marks below the (horizontal) slider</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qslider.xml">QSlider</db:link></db:emphasis>::TicksLeft</db:code></db:para>
</db:td>
<db:td><db:code>TicksAbove</db:code></db:td>
<db:td>
<db:para>Draw tick marks to the left of the (vertical) slider</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qslider.xml">QSlider</db:link></db:emphasis>::TicksRight</db:code></db:para>
</db:td>
<db:td><db:code>TicksBelow</db:code></db:td>
<db:td>
<db:para>Draw tick marks to the right of the (vertical) slider</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="tickInterval-prop">
<db:title>tickInterval : int</db:title>
<db:para>This property holds the interval between tickmarks</db:para>
<db:para>This is a value interval, not a pixel interval. If it is 0, the slider will choose between singleStep and pageStep.</db:para>
<db:para>The default value is 0.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">tickInterval</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTickInterval</db:emphasis>(<db:type>int</db:type> <db:emphasis>ti</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qslider.xml#tickPosition-prop">tickPosition</db:link></db:member>
<db:member><db:link xlink:href="qabstractslider.xml#singleStep-prop">singleStep</db:link></db:member>
<db:member><db:link xlink:href="qabstractslider.xml#pageStep-prop">pageStep</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="tickPosition-prop">
<db:title>tickPosition : TickPosition</db:title>
<db:para>This property holds the tickmark position for this slider</db:para>
<db:para>The valid values are described by the <db:link xlink:href="qslider.xml#TickPosition-enum">QSlider::TickPosition</db:link> enum.</db:para>
<db:para>The default value is <db:link xlink:href="qslider.xml#TickPosition-enum">QSlider::NoTicks</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qslider.xml#TickPosition-enum">QSlider::TickPosition</db:link></db:type> <db:emphasis role="bold">tickPosition</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTickPosition</db:emphasis>(<db:type><db:link xlink:href="qslider.xml#TickPosition-enum">QSlider::TickPosition</db:link></db:type> <db:emphasis>position</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qslider.xml#tickInterval-prop">tickInterval</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSlider">
<db:title>[explicit] QSlider::QSlider(QWidget *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a vertical slider with the given <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="QSlider-1">
<db:title>[explicit] QSlider::QSlider(Qt::Orientation <db:emphasis>orientation</db:emphasis>, QWidget *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a slider with the given <db:code role="parameter">parent</db:code>. The <db:code role="parameter">orientation</db:code> parameter determines whether the slider is horizontal or vertical; the valid values are <db:link xlink:href="qt.xml#Orientation-enum">Qt::Vertical</db:link> and <db:link xlink:href="qt.xml#Orientation-enum">Qt::Horizontal</db:link>.</db:para>
</db:section>
<db:section xml:id="dtor.QSlider">
<db:title>[virtual noexcept] QSlider::~QSlider()</db:title>
<db:para>Destroys this slider.</db:para>
</db:section>
<db:section xml:id="event">
<db:title>[override virtual] bool QSlider::event(QEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractslider.xml#event" role="function">QAbstractSlider::event(QEvent *e)</db:link>.</db:para>
</db:section>
<db:section xml:id="initStyleOption">
<db:title>[protected] void QSlider::initStyleOption(QStyleOptionSlider *<db:emphasis>option</db:emphasis>) const</db:title>
<db:para>Initialize <db:code role="parameter">option</db:code> with the values from this <db:link xlink:href="qslider.xml">QSlider</db:link>. This method is useful for subclasses when they need a <db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link>, but don't want to fill in all the information themselves.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#initFrom">QStyleOption::initFrom</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="minimumSizeHint">
<db:title>[override virtual] QSize QSlider::minimumSizeHint() const</db:title>
<db:para>Reimplements an access function for property: <db:link xlink:href="qwidget.xml#minimumSizeHint-prop" role="property">QWidget::minimumSizeHint</db:link>.</db:para>
</db:section>
<db:section xml:id="mouseMoveEvent">
<db:title>[override virtual protected] void QSlider::mouseMoveEvent(QMouseEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#mouseMoveEvent" role="function">QWidget::mouseMoveEvent(QMouseEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="mousePressEvent">
<db:title>[override virtual protected] void QSlider::mousePressEvent(QMouseEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#mousePressEvent" role="function">QWidget::mousePressEvent(QMouseEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="mouseReleaseEvent">
<db:title>[override virtual protected] void QSlider::mouseReleaseEvent(QMouseEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#mouseReleaseEvent" role="function">QWidget::mouseReleaseEvent(QMouseEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="paintEvent">
<db:title>[override virtual protected] void QSlider::paintEvent(QPaintEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#paintEvent" role="function">QWidget::paintEvent(QPaintEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="sizeHint">
<db:title>[override virtual] QSize QSlider::sizeHint() const</db:title>
<db:para>Reimplements an access function for property: <db:link xlink:href="qwidget.xml#sizeHint-prop" role="property">QWidget::sizeHint</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
