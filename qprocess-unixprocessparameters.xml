<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title></db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This struct was introduced in Qt 6.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>UnixProcessParameters</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Core)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Core)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:note>
<db:para>This struct is only available on Unix platforms</db:para>
</db:note>
<db:para>This struct can be used to pass extra, Unix-specific configuration for the child process using <db:link xlink:href="qprocess.xml#setUnixProcessParameters">QProcess::setUnixProcessParameters</db:link>().</db:para>
<db:para>Its members are:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>UnixProcessParameters::flags Flags, see <db:link xlink:href="qprocess.xml#UnixProcessFlag-enum">QProcess::UnixProcessFlags</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para>UnixProcessParameters::lowestFileDescriptorToClose The lowest file descriptor to close.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>When the QProcess::UnixProcessFlags::CloseFileDescriptors flag is set in the flags field, <db:link xlink:href="qprocess.xml">QProcess</db:link> closes the application's open file descriptors before executing the child process. The descriptors 0, 1, and 2 (that is, stdin, stdout, and stderr) are left alone, along with the ones numbered lower than the value of the lowestFileDescriptorToClose field.</db:para>
<db:para>All of the settings above can also be manually achieved by calling the respective POSIX function from a handler set with <db:link xlink:href="qprocess.xml#setChildProcessModifier">QProcess::setChildProcessModifier</db:link>(). This structure allows <db:link xlink:href="qprocess.xml">QProcess</db:link> to deal with any platform-specific differences, benefit from certain optimizations, and reduces code duplication. Moreover, if any of those functions fail, <db:link xlink:href="qprocess.xml">QProcess</db:link> will enter <db:link xlink:href="qprocess.xml#ProcessError-enum">QProcess::FailedToStart</db:link> state, while the child process modifier callback is not allowed to fail.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprocess.xml#setUnixProcessParameters">QProcess::setUnixProcessParameters</db:link>()</db:member>
<db:member><db:link xlink:href="qprocess.xml#setChildProcessModifier">QProcess::setChildProcessModifier</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:article>
