<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Multiple Example (ActiveQt)</db:title>
<db:productname>ActiveQt</db:productname>
<db:edition>Qt 5.5.1 Reference Documentation</db:edition>
<db:titleabbrev>ActiveQt</db:titleabbrev>
<db:abstract>
<db:para>The Multiple example demonstrates the implementation of a <db:link xlink:href="qaxfactory.xml">QAxFactory</db:link> to provide multiple ActiveX controls in a single in process ActiveX server using the <db:code>QAXFACTORY_EXPORT()</db:code> macro. The ActiveX controls in this example are simple QWidget subclasses that reimplement QWidget::paintEvent().</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">include(../shared.pri)

TEMPLATE = lib
TARGET   = multipleax

CONFIG += warn_off dll
QT += widgets axserver

SOURCES  = main.cpp
HEADERS  = ax1.h ax2.h
RC_FILE  = multipleax.rc
DEF_FILE = multipleax.def

# install
target.path = $$[QT_INSTALL_EXAMPLES]/activeqt/multiple
INSTALLS += target

</db:programlisting>
</db:article>
