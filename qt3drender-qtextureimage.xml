<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QTextureImage Class</db:title>
<db:subtitle>Qt3DRender::QTextureImage</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Encapsulates the necessary information to create an OpenGL texture image from an image source.</db:para>
<db:para>This class was introduced in Qt 5.5.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QTextureImage</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-textureimage.xml" xlink:role="">TextureImage</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qabstracttextureimage.xml" xlink:role="class">Qt3DRender::QAbstractTextureImage</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>It contains the necessary information mipmap level, layer, cube face and source URL to load at the proper place data into an OpenGL texture.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="source-prop">
<db:title>source : QUrl</db:title>
<db:para>This property holdsthe source url from which data for the texture image will be loaded.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qtextureimage.xml#source">source</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qtextureimage.xml#setSource">setSource</db:link></db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>source</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">sourceChanged</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>source</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QTextureImage">
<db:title>[explicit] QTextureImage::QTextureImage(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a new <db:link xlink:href="qt3drender-qtextureimage.xml">Qt3DRender::QTextureImage</db:link> instance with <db:code role="parameter">parent</db:code> as parent.</db:para>
</db:section>
<db:section xml:id="dtor.QTextureImage">
<db:title>[virtual noexcept] QTextureImage::~QTextureImage()</db:title>
<db:para>The destructor.</db:para>
</db:section>
<db:section xml:id="copy">
<db:title>[override virtual protected] void QTextureImage::copy(const Qt3DCore::QNode *<db:emphasis>ref</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qt3drender-qabstracttextureimage.xml#copy" role="function">QAbstractTextureImage::copy(const Qt3DCore::QNode *ref)</db:link>.</db:para>
<db:para>Copies <db:code role="parameter">ref</db:code> into this texture image.</db:para>
</db:section>
<db:section xml:id="dataFunctor">
<db:title>[override virtual] Qt3DRender::QTextureDataFunctorPtr QTextureImage::dataFunctor() const</db:title>
<db:para>Returns the Qt3DRender::QTextureDataFunctorPtr functor to be used by the backend to load the texture image data into an OpenGL texture object.</db:para>
</db:section>
<db:section xml:id="setSource">
<db:title>void QTextureImage::setSource(const QUrl &amp;<db:emphasis>source</db:emphasis>)</db:title>
<db:para>Sets the source url of the texture image to <db:code role="parameter">source</db:code>.</db:para>
<db:note>
<db:para>This triggers a call to <db:link xlink:href="qt3drender-qabstracttextureimage.xml#update">update</db:link>()</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qtextureimage.xml#source-prop">source</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qtextureimage.xml#source">source</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="source">
<db:title>QUrl QTextureImage::source() const</db:title>
<db:para>Returns the source url from which data for the texture image will be loaded.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qtextureimage.xml#source-prop">source</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qtextureimage.xml#setSource">setSource</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
