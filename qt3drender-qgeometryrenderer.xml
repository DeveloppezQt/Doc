<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGeometryRenderer Class</db:title>
<db:subtitle>Qt3DRender::QGeometryRenderer</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Encapsulates geometry rendering.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGeometryRenderer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-geometryrenderer.xml" xlink:role="">GeometryRenderer</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qboundingvolume.xml" xlink:role="class">Qt3DCore::QBoundingVolume</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dextras-qconemesh.xml" xlink:role="class">Qt3DExtras::QConeMesh</db:link>, <db:link xlink:href="qt3dextras-qcuboidmesh.xml" xlink:role="class">Qt3DExtras::QCuboidMesh</db:link>, <db:link xlink:href="qt3dextras-qcylindermesh.xml" xlink:role="class">Qt3DExtras::QCylinderMesh</db:link>, <db:link xlink:href="qt3dextras-qextrudedtextmesh.xml" xlink:role="class">Qt3DExtras::QExtrudedTextMesh</db:link>, <db:link xlink:href="qt3dextras-qplanemesh.xml" xlink:role="class">Qt3DExtras::QPlaneMesh</db:link>, <db:link xlink:href="qt3dextras-qspheremesh.xml" xlink:role="class">Qt3DExtras::QSphereMesh</db:link>, <db:link xlink:href="qt3dextras-qtorusmesh.xml" xlink:role="class">Qt3DExtras::QTorusMesh</db:link>, and <db:link xlink:href="qt3drender-qmesh.xml" xlink:role="class">Qt3DRender::QMesh</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qt3drender-qgeometryrenderer.xml">Qt3DRender::QGeometryRenderer</db:link> holds all the information necessary to draw a <db:link xlink:href="qt3dcore-qgeometry.xml">Qt3DCore::QGeometry</db:link>. A QGeometry holds the coordinates of the geometry data - <db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link> specifies how to interpret that data.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="PrimitiveType-enum">
<db:title>enum QGeometryRenderer::PrimitiveType</db:title>
<db:para>The type of the primitive.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link></db:emphasis>::Points</db:code></db:para>
</db:td>
<db:td><db:code>0x0000</db:code></db:td>
<db:td>
<db:para>List of points</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link></db:emphasis>::Lines</db:code></db:para>
</db:td>
<db:td><db:code>0x0001</db:code></db:td>
<db:td>
<db:para>List of lines</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link></db:emphasis>::LineLoop</db:code></db:para>
</db:td>
<db:td><db:code>0x0002</db:code></db:td>
<db:td>
<db:para>Connected group of lines connected at ends forming a loop</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link></db:emphasis>::LineStrip</db:code></db:para>
</db:td>
<db:td><db:code>0x0003</db:code></db:td>
<db:td>
<db:para>Connected group of lines</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link></db:emphasis>::Triangles</db:code></db:para>
</db:td>
<db:td><db:code>0x0004</db:code></db:td>
<db:td>
<db:para>List of triangles</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link></db:emphasis>::TriangleStrip</db:code></db:para>
</db:td>
<db:td><db:code>0x0005</db:code></db:td>
<db:td>
<db:para>List of connected triangles</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link></db:emphasis>::TriangleFan</db:code></db:para>
</db:td>
<db:td><db:code>0x0006</db:code></db:td>
<db:td>
<db:para>List of connected triagles where all triangles share the first vertex</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link></db:emphasis>::LinesAdjacency</db:code></db:para>
</db:td>
<db:td><db:code>0x000A</db:code></db:td>
<db:td>
<db:para>Allows geometry shader to access adjacent lines in a line list</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link></db:emphasis>::TrianglesAdjacency</db:code></db:para>
</db:td>
<db:td><db:code>0x000C</db:code></db:td>
<db:td>
<db:para>Allows geometry shader to access adjacent triangles in a triangle list</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link></db:emphasis>::LineStripAdjacency</db:code></db:para>
</db:td>
<db:td><db:code>0x000B</db:code></db:td>
<db:td>
<db:para>Allows geometry shader to access adjacent lines in a line strip</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link></db:emphasis>::TriangleStripAdjacency</db:code></db:para>
</db:td>
<db:td><db:code>0x000D</db:code></db:td>
<db:td>
<db:para>Allows geometry shader to access adjacent triangles in a triangle strip</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link></db:emphasis>::Patches</db:code></db:para>
</db:td>
<db:td><db:code>0x000E</db:code></db:td>
<db:td>
<db:para>Only primitive type accepted by tesselation shader where a patch consists of arbitrary number of vertices</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="firstInstance-prop">
<db:title>firstInstance : int</db:title>
<db:para>Holds the base instance.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">firstInstance</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setFirstInstance</db:emphasis>(<db:type>int</db:type> <db:emphasis>firstInstance</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">firstInstanceChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>firstInstance</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="firstVertex-prop">
<db:title>firstVertex : int</db:title>
<db:para>Holds the base vertex.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">firstVertex</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setFirstVertex</db:emphasis>(<db:type>int</db:type> <db:emphasis>firstVertex</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">firstVertexChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>firstVertex</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="geometry-prop">
<db:title>geometry : Qt3DCore::QGeometry*</db:title>
<db:para>Holds the geometry.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qgeometry.xml">Qt3DCore::QGeometry</db:link></db:type> *<db:emphasis role="bold">geometry</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setGeometry</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qgeometry.xml">Qt3DCore::QGeometry</db:link></db:type> *<db:emphasis>geometry</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">geometryChanged</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qgeometry.xml">Qt3DCore::QGeometry</db:link></db:type> *<db:emphasis>geometry</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="indexBufferByteOffset-prop">
<db:title>indexBufferByteOffset : int</db:title>
<db:para>Holds the byte offset into the index buffer.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">indexBufferByteOffset</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setIndexBufferByteOffset</db:emphasis>(<db:type>int</db:type> <db:emphasis>offset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">indexBufferByteOffsetChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>offset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="indexOffset-prop">
<db:title>indexOffset : int</db:title>
<db:para>Holds the base vertex.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">indexOffset</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setIndexOffset</db:emphasis>(<db:type>int</db:type> <db:emphasis>indexOffset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">indexOffsetChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>indexOffset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="instanceCount-prop">
<db:title>instanceCount : int</db:title>
<db:para>Holds the instance count.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">instanceCount</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setInstanceCount</db:emphasis>(<db:type>int</db:type> <db:emphasis>instanceCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">instanceCountChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>instanceCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="primitiveRestartEnabled-prop">
<db:title>primitiveRestartEnabled : bool</db:title>
<db:para>Holds the primitive restart flag.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">primitiveRestartEnabled</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setPrimitiveRestartEnabled</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">primitiveRestartEnabledChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>primitiveRestartEnabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="primitiveType-prop">
<db:title>primitiveType : PrimitiveType</db:title>
<db:para>Holds the primitive type.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qgeometryrenderer.xml#PrimitiveType-enum">Qt3DRender::QGeometryRenderer::PrimitiveType</db:link></db:type> <db:emphasis role="bold">primitiveType</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setPrimitiveType</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qgeometryrenderer.xml#PrimitiveType-enum">Qt3DRender::QGeometryRenderer::PrimitiveType</db:link></db:type> <db:emphasis>primitiveType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">primitiveTypeChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qgeometryrenderer.xml#PrimitiveType-enum">Qt3DRender::QGeometryRenderer::PrimitiveType</db:link></db:type> <db:emphasis>primitiveType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="restartIndexValue-prop">
<db:title>restartIndexValue : int</db:title>
<db:para>Holds the restart index.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">restartIndexValue</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setRestartIndexValue</db:emphasis>(<db:type>int</db:type> <db:emphasis>index</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">restartIndexValueChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>restartIndexValue</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="sortIndex-prop">
<db:title>[since 6.0] sortIndex : float</db:title>
<db:para>Overrides the sorting index when depth sorting is enabled.</db:para>
<db:para>If depth sorting is enabled on the frame graph, the renderer will sort objects based on how far the center of the bounding volume is from the camera and render objects from the furthest to the closest.</db:para>
<db:para>This property can be used to override the depth index and precisely control the order in which objects are rendered. This is useful when all objects are at the same physical distance from the camera.</db:para>
<db:para>The actual values are not significant, only that they define an order to sort the objects. These are sorted such as the object with the smallest value is drawn first, then the second smallest, and so on.</db:para>
<db:note>
<db:para>Setting this to -1.f will disable the explicit sorting for this entity and revert to using the distance from the center of the bounding volume.</db:para>
</db:note>
<db:para>This property was introduced in Qt 6.0.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">sortIndex</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSortIndex</db:emphasis>(<db:type>float</db:type> <db:emphasis>sortIndex</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">sortIndexChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>sortIndex</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qsortpolicy.xml">Qt3DRender::QSortPolicy</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="vertexCount-prop">
<db:title>vertexCount : int</db:title>
<db:para>Holds the primitive count.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">vertexCount</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setVertexCount</db:emphasis>(<db:type>int</db:type> <db:emphasis>vertexCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">vertexCountChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>vertexCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="verticesPerPatch-prop">
<db:title>verticesPerPatch : int</db:title>
<db:para>Holds vertices per patch.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">verticesPerPatch</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setVerticesPerPatch</db:emphasis>(<db:type>int</db:type> <db:emphasis>verticesPerPatch</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">verticesPerPatchChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>verticesPerPatch</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGeometryRenderer">
<db:title>[explicit] QGeometryRenderer::QGeometryRenderer(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a new <db:link xlink:href="qt3drender-qgeometryrenderer.xml">QGeometryRenderer</db:link> with <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
