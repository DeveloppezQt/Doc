<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick 3D - Dynamic Texture Example</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates how to use a 2D layer as a 3D texture.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">// Copyright (C) 2019 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR BSD-3-Clause

import QtQuick3D
import QtQuick

Node {
    id: doorRoot
    property PerspectiveCamera activeCamera: camera

    PointLight {
        id: lamp
        x: -10
        y: 100
        z: -100
        color: &quot;#ffffffff&quot;
        linearFade: 1
        brightness: 3
    }

    PerspectiveCamera {
        id: camera

        x: 180.067
        y: 225.598
        z: -411.521
        eulerRotation.x: -15.4614

        eulerRotation.y: 171.605

        fieldOfViewOrientation: PerspectiveCamera.Horizontal
    }
    DefaultMaterial {
        id: doorMaterial
        diffuseMap: Texture {
            sourceItem: object2d
        }
    }

    Model {
        id: door1
        objectName: &quot;left door&quot;
        pivot.x: 20
        x: 80
        y: 70
        scale.x: 1.98
        scale.y: 3.5
        scale.z: 0.5

        source: &quot;meshes/door1.mesh&quot;
        materials: doorMaterial
        pickable: true

        states: State {
            name: &quot;opened&quot;
            PropertyChanges {
                target: door1
                eulerRotation.y: 90
            }
        }
        transitions: Transition {
            to: &quot;opened&quot;
            reversible: true
            SequentialAnimation {
                PropertyAnimation { property: &quot;eulerRotation.y&quot;; duration: 2000 }
            }
        }
     }

    Model {
        id: wall
        y: 100
        scale.x: 400
        scale.y: 100
        scale.z: 10
        source: &quot;meshes/wall.mesh&quot;

        DefaultMaterial {
            id: wallMaterial
            diffuseColor: &quot;lightgreen&quot;
        }
        materials: [
            wallMaterial
        ]
    }

    Model {
        id: door2
        objectName: &quot;right door&quot;
        x: -80
        y: 70
        scale.x: 1.98
        scale.y: 3.5
        scale.z: 0.5
        pivot.x: -20
        source: &quot;meshes/door2.mesh&quot;
        pickable: true
        materials: doorMaterial

        states: State {
            name: &quot;opened&quot;
            PropertyChanges {
                target: door2
                eulerRotation.y: -90
            }
        }
        transitions: Transition {
            to: &quot;opened&quot;
            reversible: true
            SequentialAnimation {
                PropertyAnimation { property: &quot;eulerRotation.y&quot;; duration: 2000 }
            }
        }
    }
}

</db:programlisting>
</db:article>
