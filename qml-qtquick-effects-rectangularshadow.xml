<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>RectangularShadow QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Creates smoothed rectangle, suitable for example for shadow and glow effects.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Effects</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-item.xml">Item</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>RectangularShadow is part of <db:simplelist><db:member>qtquick-effects</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> is a rounded rectangle with blur applied. The performance of <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> is much better than a general one that creates blurred shadow/glow of any shaped item.</db:para>
<db:para>The following example shows how to add a shadow to a <db:link xlink:href="qml-qtquick-rectangle.xml">Rectangle</db:link>:</db:para>
<db:informaltable style="generic" width="70%">
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/rectangularshadow-example-1.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:programlisting language="qml">import QtQuick
import QtQuick.Effects

...
RectangularShadow {
    anchors.fill: myRectangle
    offset.x: -10
    offset.y: -5
    radius: myRectangle.radius
    blur: 30
    spread: 10
    color: Qt.darker(myRectangle.color, 1.6)
}
Rectangle {
    id: myRectangle
    anchors.centerIn: parent
    width: 200
    height: 100
    radius: 50
    color: &quot;#c0d0f0&quot;
}
</db:programlisting>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The API of <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> is similar to CSS box-shadow, with color, offset, spread, and blur values. Additionally, <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> API contains:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:code>real</db:code> <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml#radius-prop">radius</db:link>: Controls the rounding radius applied to rectangle corners. Compared to CSS box-shadow, which inherits radius from the parent element, <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> expects user to set it. This allows you to use different radiuses and move the <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> separately from its parent item.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>bool</db:code> <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml#cached-prop">cached</db:link>: Allows caching the blurred shadow texture. This increases memory usage while potentially improving rendering performance, especially with bigger shadows that don't change dynamically.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>item</db:code> <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml#material-prop">material</db:link>: Contains the <db:link xlink:href="qml-qtquick-shadereffect.xml">ShaderEffect</db:link> element of the <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> for advanced use. This allows, for example, extending the effect with a custom shader.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The rendering output also matches the CSS box-shadow, with few notable differences. These differences exist to make the <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> as high-performance as possible.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Blurring is calculated mathematically in the shader rather than using Gaussian blur, which CSS box-shadow implementations often use. This makes the shadow look slightly different, especially with larger blur values.</db:para>
</db:listitem>
<db:listitem>
<db:para>All the rectangle corners must have an even radius. When creating a shadow for a <db:link xlink:href="qml-qtquick-rectangle.xml">Rectangle</db:link> with different radiuses, select the best-matching radius for the shadow or use an alternative shadow method, for example, <db:link xlink:href="qml-qtquick-effects-multieffect.xml">MultiEffect</db:link>.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Here is a table with screenshots to compare the rendering output of <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> and CSS box-shadow in the Chrome browser. The right-most element is <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> in blur multiplied with <db:code>1.2</db:code> (so <db:code>24</db:code>, <db:code>48</db:code>, <db:code>48</db:code>) for a closer match.</db:para>
<db:informaltable style="generic" width="80%">
<db:thead>
<db:tr>
<db:th>
<db:para>type</db:para>
</db:th>
<db:th>
<db:para>CSS box-shadow</db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link></db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> + extra blur</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>offset: (0, 0)  blur: 20  spread: 0 </db:para>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/rectangularshadow-css-1.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/rectangularshadow-item-1.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/rectangularshadow-itemblur-1.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>offset: (-10, -20)  blur: 40  spread: 0 </db:para>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/rectangularshadow-css-2.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/rectangularshadow-item-2.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/rectangularshadow-itemblur-2.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>offset: (-10, -20)  blur: 40  spread: 10 </db:para>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/rectangularshadow-css-3.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/rectangularshadow-item-3.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/rectangularshadow-itemblur-3.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
<db:para><db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> extends the shadow size with an exact amount regarding the blur amount, while some other shadows (including CSS box-shadow) have a multiplier for the size. The size of the shadow item inside a <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> is:</db:para>
<db:programlisting language="cpp" role="bad">width = rectangularShadow.width + 2 * blur +  2 * spread
height = rectangularShadow.height + 2 * blur + 2 * spread
</db:programlisting>
<db:para>For example, the shadow item size of the code below is 280x180 pixels. Radius or offset values do not affect the shadow item size.</db:para>
<db:programlisting language="qml">RectangularShadow {
    width: 200
    height: 100
    blur: 30
    spread: 10
    radius: 20
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="antialiasing-prop">
<db:title>antialiasing : bool</db:title>
<db:para>Used to decide if the shadow should use antialiasing or not. When this is <db:code>true</db:code>, a single pixel antialiasing is used even when the <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml#blur-prop">blur</db:link> is <db:code>0</db:code>.</db:para>
<db:para>The default value is <db:code>true</db:code>.</db:para>
</db:section>
<db:section xml:id="blur-prop">
<db:title>blur : real</db:title>
<db:para>This property defines how many pixels outside the item area are reached by the shadow.</db:para>
<db:para>The value ranges from 0.0 (no blur) to inf (infinite blur). The default value is <db:code>10.0</db:code>.</db:para>
<db:note>
<db:para>To match with the CSS box-shadow rendering output, the optimal blur amount is something like: <db:code>1.2 * cssBlur</db:code></db:para>
</db:note>
</db:section>
<db:section xml:id="cached-prop">
<db:title>cached : bool</db:title>
<db:para>This property allows the effect output pixels to be cached in order to improve the rendering performance.</db:para>
<db:para>Every time the effect properties are changed, the pixels in the cache must be updated. Memory consumption is increased, because an extra buffer of memory is required for storing the effect output.</db:para>
<db:para>It is recommended to disable the cache when the source or the effect properties are animated.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="color-prop">
<db:title>color : color</db:title>
<db:para>This property defines the RGBA color value that is used for the shadow.</db:para>
<db:para>The default value is <db:code>Qt.rgba(0.0, 0.0, 0.0, 1.0)</db:code> (black).</db:para>
</db:section>
<db:section xml:id="material-prop">
<db:title>material : item</db:title>
<db:para>This property contains the <db:link xlink:href="qml-qtquick-shadereffect.xml">ShaderEffect</db:link> item of the shadow. You can use this property to visualize the reach of the shadow, because the effect item often has different position and size than the <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> item, due to <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml#blur-prop">blur</db:link>, <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml#offset-prop">offset</db:link> and <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml#spread-prop">spread</db:link>.</db:para>
<db:para>The material can also be replaced with a custom one. The default material is a <db:link xlink:href="qml-qtquick-shadereffect.xml">ShaderEffect</db:link> with the following <db:link xlink:href="qml-qtquick-shadereffect.xml#fragmentShader-prop">fragmentShader</db:link>:</db:para>
<db:programlisting language="cpp" role="bad">#version 440

layout(location = 0) in vec2 texCoord;
layout(location = 1) in vec2 fragCoord;
layout(location = 0) out vec4 fragColor;

layout(std140, binding = 0) uniform buf {
    mat4 qt_Matrix;
    float qt_Opacity;
    vec4 color;
    vec3 iResolution;
    vec2 rectSize;
    float radius;
    float blur;
};

float roundedBox(vec2 centerPos, vec2 size, float radii) {
    return length(max(abs(centerPos) - size + radii, 0.0)) - radii;
}

void main()
{
    float box = roundedBox(fragCoord - iResolution.xy * 0.5, rectSize, radius);
    float a = 1.0 - smoothstep(0.0, blur, box);
    fragColor = color * qt_Opacity * a * a;
}
</db:programlisting>
<db:para>Qt Quick Effect Maker contains the <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> node that can be used as a starting point for a custom material. You can directly use the exported effect containing that node as a <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> material.</db:para>
<db:programlisting language="qml">RectangularShadow {
    ...
    material: MyShadowEffect { }
}
</db:programlisting>
<db:para>To return to use the default material, set the material property to <db:code>null</db:code>.</db:para>
</db:section>
<db:section xml:id="offset-prop">
<db:title>offset : vector2d</db:title>
<db:para>This property defines the position offset that is used for the shadow. This offset is appended to the shadow position, relative to the <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> item position.</db:para>
<db:para>The default value is <db:code>Qt.vector2d(0.0, 0.0)</db:code> (no offset).</db:para>
</db:section>
<db:section xml:id="radius-prop">
<db:title>radius : real</db:title>
<db:para>This property defines the corner radius that is used to draw a shadow with rounded corners.</db:para>
<db:para>The value ranges from 0.0 to half of the effective width or height of the item, whichever is smaller.</db:para>
<db:para>The default value is <db:code>0</db:code>.</db:para>
</db:section>
<db:section xml:id="spread-prop">
<db:title>spread : real</db:title>
<db:para>This property defines how much the shadow is spread (extended) in pixels. This spread is appended to the shadow size, relative to the <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> item size.</db:para>
<db:para>The value ranges from -inf to inf. The default value is <db:code>0.0</db:code>.</db:para>
<db:note>
<db:para>The radius behavior with spread matches to CSS box-shadow standard. So when the spread is smaller than the radius, the shadow radius grows by the amount of spread. When the spread grows bigger, radius grows only partially. See <db:link xlink:href="https://www.w3.org/TR/css-backgrounds-3/#shadow-shape">https://www.w3.org/TR/css-backgrounds-3/#shadow-shape</db:link>. If the shadow radius should grow in sync when the shadow grows (like with the Firefox CSS box-shadow implementation), increase the <db:link xlink:href="qml-qtquick-effects-rectangularshadow.xml">RectangularShadow</db:link> <db:code>width</db:code> and <db:code>height</db:code> instead of using the <db:code>spread</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
