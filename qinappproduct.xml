<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QInAppProduct Class</db:title>
<db:productname>QtPurchasing</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Purchasing Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A product registered in the store.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QInAppProduct</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qinappproduct.xml">QInAppProduct</db:link> encapsulates a product in the external store after it has been registered in <db:code>QInAppStore</db:code> and confirmed to exist. It has an identifier which matches the identifier of the product in the external store, it has a price which is retrieved from the external store, and it has a product type.</db:para>
<db:para>The product type can be either <db:code>Consumable</db:code> or <db:code>Unlockable</db:code>. The former type of products can be purchased any number of times as long as each transaction is finalized explicitly by the application. The latter type can only be purchased once.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="ProductType-enum">
<db:title>enum QInAppProduct::ProductType</db:title>
<db:para>This enum type is used to specify the product type when registering the product.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qinappproduct.xml">QInAppProduct</db:link></db:emphasis>::Consumable</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The product is consumable, meaning that once the transaction for a purchase of the product has been finalized, it can be purchased again.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qinappproduct.xml">QInAppProduct</db:link></db:emphasis>::Unlockable</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The product is unlockable, meaning that it can only be purchased once per user. Purchases of unlockable products can be restored using the <db:link xlink:href="qinappstore.xml#restorePurchases">QInAppStore::restorePurchases</db:link>().</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="description-prop">
<db:title>[read-only] description : const QString</db:title>
<db:para>This property holds the description of the product as reported by the external store. This description is returned from the store in the locale language if available.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">description</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="identifier-prop">
<db:title>[read-only] identifier : const QString</db:title>
<db:para>This property holds the identifier of the product. It matches the identifier which is registered in the external store.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">identifier</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="price-prop">
<db:title>[read-only] price : const QString</db:title>
<db:para>This property holds the price of the product as reported by the external store. This is the full price including currency, usually in the locale of the current user.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">price</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="productType-prop">
<db:title>[read-only] productType : const ProductType</db:title>
<db:para>This property holds the type of the product. This can either be <db:code>Consumable</db:code> or <db:code>Unlockable</db:code>. The former are products which can be purchased any number of times (granted that each transaction is explicitly finalized by the application first) and the latter are products which can only be purchased once per user.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qinappproduct.xml#ProductType-enum">QInAppProduct::ProductType</db:link></db:type> <db:emphasis role="bold">productType</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="title-prop">
<db:title>[read-only] title : const QString</db:title>
<db:para>This property holds the title of the product as reported by the external store. This title is returned from the store in the locale language if available.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">title</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="purchase">
<db:title>[pure virtual] void QInAppProduct::purchase()</db:title>
<db:para>Launches the purchase flow for this product. The purchase is done asynchronously. When the purchase has either been completed successfully or failed for some reason, the <db:link xlink:href="qinappstore.xml">QInAppStore</db:link> instance containing this product will emit a <db:link xlink:href="qinappstore.xml#transactionReady">QInAppStore::transactionReady</db:link>() signal with information about the transaction.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qinapptransaction.xml">QInAppTransaction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
