<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Hello Qt Quick 3D Example</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates simple instanced drawing.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">// Copyright (C) 2020 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR BSD-3-Clause

import QtQuick
import QtQuick.Timeline
import QtQuick3D
import HelloExample

Window {
    id: window
    width: 1280
    height: 720
    visible: true

    View3D {
        id: view
        anchors.fill: parent

        environment: SceneEnvironment {
            clearColor: &quot;black&quot;
            backgroundMode: SceneEnvironment.Color
        }

        Node {
            id: cameraNode

            PerspectiveCamera {
                id: camera
                position: Qt.vector3d(0, 0, 650)
            }

            property bool isRotating: false
            PropertyAnimation on eulerRotation.x {
                from: 0
                to: 360
                duration: 20000
                loops: Animation.Infinite
                running: cameraNode.isRotating
            }

            Timeline {
                id: timeline0
                startFrame: 0
                endFrame: 1000
                currentFrame: 0
                enabled: true

                SequentialAnimation on currentFrame {
                    NumberAnimation {
                        from: 0
                        to: 500
                        duration: 4000
                    }
                    NumberAnimation {
                        from: 500
                        to: 1000
                        duration: 10000
                        loops: Animation.Infinite
                    }
                }

                KeyframeGroup {
                    target: cameraNode
                    property: &quot;isRotating&quot;

                    Keyframe {
                        frame: 0
                        value: false
                    }
                    Keyframe {
                        frame: 500
                        value: true
                    }
                }

                KeyframeGroup {
                    target: oldLogo
                    property: &quot;isRotating&quot;

                    Keyframe {
                        frame: 0
                        value: false
                    }
                    Keyframe {
                        frame: 100
                        value: true
                    }
                }

                KeyframeGroup {
                    target: camera
                    property: &quot;z&quot;

                    Keyframe {
                        frame: 0
                        value: 2000
                    }
                    Keyframe {
                        frame: 100
                        value: 2000
                    }
                    Keyframe {
                        frame: 400
                        value: 100
                    }
                    Keyframe {
                        frame: 500
                        value: 200
                    }
                    Keyframe {
                        frame: 550
                        value: 200
                    }
                    Keyframe {
                        frame: 700
                        value: 1000
                        easing.type: Easing.OutElastic
                    }
                    Keyframe {
                        frame: 750
                        value: 1000
                    }
                    Keyframe {
                        frame: 800
                        value: 1000
                    }
                    Keyframe {
                        frame: 950
                        value: 200
                        easing.type: Easing.OutElastic
                    }
                    Keyframe {
                        frame: 1000
                        value: 200
                    }

                }
            }
        }

        DirectionalLight {
            eulerRotation.x: 250
            eulerRotation.y: -30
            brightness: 1.0
            ambientColor: &quot;#7f7f7f&quot;
        }

        Model {
            id: oldLogo
            property real s: 4.75
            property real r: 0
            property bool isRotating: false
            scale: Qt.vector3d(s, s, s);
            source: &quot;oldqtlogo.mesh&quot;
            instancing: ImageInstanceTable {
                gridSize: 40
                gridSpacing: 20
                image: &quot;:/qt_logo.png&quot;
            }
            materials: DefaultMaterial { diffuseColor: &quot;white&quot; }
            NumberAnimation on r {
                running: oldLogo.isRotating
                from: 0
                to: 360
                duration: 3000
                loops: Animation.Infinite
            }
            onRChanged: rotate(2.5, Qt.vector3d(1, -1, 0), Node.LocalSpace)
        }
    }
}

</db:programlisting>
</db:article>
