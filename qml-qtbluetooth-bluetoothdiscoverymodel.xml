<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>BluetoothDiscoveryModel QML Type</db:title>
<db:productname>QtBluetooth</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Bluetooth Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Enables searching for the Bluetooth devices and services in range.</db:para>
<db:para>This type was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtBluetooth 5.12</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtbluetooth-bluetoothdiscoverymodel.xml">BluetoothDiscoveryModel</db:link> provides a model of connectable services. The contents of the model can be filtered by UUID allowing discovery to be limited to a single service such as a game.</db:para>
<db:para>The model roles provided by <db:link xlink:href="qml-qtbluetooth-bluetoothdiscoverymodel.xml">BluetoothDiscoveryModel</db:link> are <db:code>service</db:code>, <db:code>name</db:code>, <db:code>remoteAddress</db:code> and <db:code>deviceName</db:code>. The meaning of the roles changes based on the current <db:link xlink:href="qml-qtbluetooth-bluetoothdiscoverymodel.xml#discoveryMode-prop">discoveryMode</db:link>.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Model role</db:para>
</db:th>
<db:th>
<db:para>Device Discovery</db:para>
</db:th>
<db:th>
<db:para>Service Discovery</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>name</db:code></db:para>
</db:td>
<db:td>
<db:para>The device's name and address.</db:para>
</db:td>
<db:td>
<db:para>The service name and the name of the device offering the service. If the device name is empty the devices address will be used.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>deviceName</db:code></db:para>
</db:td>
<db:td>
<db:para>The name of the device.</db:para>
</db:td>
<db:td>
<db:para>The name of the device offering the service.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>service</db:code></db:para>
</db:td>
<db:td>
<db:para>The role is undefined in this mode.</db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qml-qtbluetooth-bluetoothservice.xml">BluetoothService</db:link> object describing the discovered service.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>remoteAddress</db:code></db:para>
</db:td>
<db:td>
<db:para>The address of the found device.</db:para>
</db:td>
<db:td>
<db:para>The address of the device offering the service.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbluetoothservicediscoveryagent.xml">QBluetoothServiceDiscoveryAgent</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="discoveryMode-prop">
<db:title>discoveryMode : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>discoveryMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the discovery mode. The discovery mode has to be set before the discovery is started</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Property</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>BluetoothDiscoveryModel.FullServiceDiscovery</db:code></db:para>
</db:td>
<db:td>
<db:para>Starts a full discovery of all services of all devices in range.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>BluetoothDiscoveryModel.MinimalServiceDiscovery</db:code></db:para>
</db:td>
<db:td>
<db:para>(Default) Starts a minimal discovery of all services of all devices in range. A minimal discovery is faster but only guarantees the device and UUID information to be correct.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>BluetoothDiscoveryModel.DeviceDiscovery</db:code></db:para>
</db:td>
<db:td>
<db:para>Discovers only devices in range. The service role will be 0 for any model item.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="error-prop">
<db:title>[read-only] error : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>error</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the last error reported during discovery.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Property</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>BluetoothDiscoveryModel.NoError</db:code></db:para>
</db:td>
<db:td>
<db:para>No error occurred.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>BluetoothDiscoveryModel.InputOutputError</db:code></db:para>
</db:td>
<db:td>
<db:para>An IO failure occurred during device discovery</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>BluetoothDiscoveryModel.PoweredOffError</db:code></db:para>
</db:td>
<db:td>
<db:para>The bluetooth device is not powered on.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>BluetoothDiscoveryModel.InvalidBluetoothAdapterError</db:code></db:para>
</db:td>
<db:td>
<db:para>There is no default Bluetooth device to perform the service discovery. The model always uses the local default adapter. Specifying a default adapter is not possible. If that's required, <db:link xlink:href="qbluetoothservicediscoveryagent.xml">QBluetoothServiceDiscoveryAgent</db:link> should be directly used. This value was introduced by Qt 5.4.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>BluetoothDiscoveryModel.UnknownError</db:code></db:para>
</db:td>
<db:td>
<db:para>An unknown error occurred.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This property is read-only.</db:para>
</db:section>
<db:section xml:id="remoteAddress-prop">
<db:title>remoteAddress : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>remoteAddress</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds an optional bluetooth address for a remote bluetooth device. Only services on this remote device will be discovered. It has no effect if an invalid bluetooth address was set or if the property was set after the discovery was started.</db:para>
<db:para>The property is ignored if device discovery is selected.</db:para>
</db:section>
<db:section xml:id="running-prop">
<db:title>running : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>running</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property starts or stops discovery. A restart of the discovery process requires setting this property to <db:code>false</db:code> and subsequently to <db:code>true</db:code> again.</db:para>
</db:section>
<db:section xml:id="uuidFilter-prop">
<db:title>uuidFilter : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>uuidFilter</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds an optional UUID filter. A UUID can be used to return only matching services. 16 bit, 32 bit or 128 bit UUIDs can be used. The string format is same as the format of <db:link xlink:href="quuid.xml">QUuid</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbluetoothuuid.xml">QBluetoothUuid</db:link></db:member>
<db:member><db:link xlink:href="quuid.xml">QUuid</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="deviceDiscovered-signal">
<db:title>deviceDiscovered(string <db:emphasis>device</db:emphasis>)</db:title>
<db:para>This signal is emitted when a new device is discovered. <db:code role="parameter">device</db:code> contains the Bluetooth address of the discovered device.</db:para>
<db:para>The corresponding handler is <db:code>onDeviceDiscovered</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onDeviceDiscovered</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="serviceDiscovered-signal">
<db:title>serviceDiscovered(BluetoothService <db:emphasis>service</db:emphasis>)</db:title>
<db:para>This signal is emitted when a new service is discovered. The <db:code role="parameter">service</db:code> parameter contains the service details.</db:para>
<db:para>The corresponding handler is <db:code>onServiceDiscovered</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onServiceDiscovered</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtbluetooth-bluetoothservice.xml">BluetoothService</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
