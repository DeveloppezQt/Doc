<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick C++ Classes</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Qt Quick module provides classes for embedding Qt Quick in Qt/C++ applications.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt Quick module provides classes for embedding Qt Quick in Qt/C++ applications.</db:para>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="qquickasyncimageprovider.xml" xlink:role="class">QQuickAsyncImageProvider</db:link></db:term>
<db:listitem>
<db:para>The QQuickAsyncImageProvider class provides an interface for for asynchronous control of QML image requests.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickframebufferobject.xml" xlink:role="class">QQuickFramebufferObject</db:link></db:term>
<db:listitem>
<db:para>The QQuickFramebufferObject class is a convenience class for integrating OpenGL rendering using a framebuffer object (FBO) with Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickframebufferobject-renderer.xml" xlink:role="class">QQuickFramebufferObject::Renderer</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickimageprovider.xml" xlink:role="class">QQuickImageProvider</db:link></db:term>
<db:listitem>
<db:para>The QQuickImageProvider class provides an interface for supporting pixmaps and threaded image requests in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickimageresponse.xml" xlink:role="class">QQuickImageResponse</db:link></db:term>
<db:listitem>
<db:para>The QQuickImageResponse class provides an interface for asynchronous image loading in QQuickAsyncImageProvider.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickitem.xml" xlink:role="class">QQuickItem</db:link></db:term>
<db:listitem>
<db:para>The QQuickItem class provides the most basic of all visual items in Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickitem-itemchangedata.xml" xlink:role="class">QQuickItem::ItemChangeData</db:link></db:term>
<db:listitem>
<db:para>Adds supplimentary information to the QQuickItem::itemChange() function.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickitemgrabresult.xml" xlink:role="class">QQuickItemGrabResult</db:link></db:term>
<db:listitem>
<db:para>The QQuickItemGrabResult contains the result from QQuickItem::grabToImage().</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickpainteditem.xml" xlink:role="class">QQuickPaintedItem</db:link></db:term>
<db:listitem>
<db:para>The QQuickPaintedItem class provides a way to use the QPainter API in the QML Scene Graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickrendercontrol.xml" xlink:role="class">QQuickRenderControl</db:link></db:term>
<db:listitem>
<db:para>The QQuickRenderControl class provides a mechanism for rendering the Qt Quick scenegraph onto an offscreen render target in a fully application-controlled manner.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquicktextdocument.xml" xlink:role="class">QQuickTextDocument</db:link></db:term>
<db:listitem>
<db:para>The QQuickTextDocument class provides access to the QTextDocument of QQuickTextEdit.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquicktexturefactory.xml" xlink:role="class">QQuickTextureFactory</db:link></db:term>
<db:listitem>
<db:para>The QQuickTextureFactory class provides an interface for loading custom textures from QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickview.xml" xlink:role="class">QQuickView</db:link></db:term>
<db:listitem>
<db:para>The QQuickView class provides a window for displaying a Qt Quick user interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickwindow.xml" xlink:role="class">QQuickWindow</db:link></db:term>
<db:listitem>
<db:para>The QQuickWindow class provides the window for displaying a graphical QML scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgabstractrenderer.xml" xlink:role="class">QSGAbstractRenderer</db:link></db:term>
<db:listitem>
<db:para>QSGAbstractRenderer gives access to the scene graph nodes and rendering of a QSGEngine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgbasicgeometrynode.xml" xlink:role="class">QSGBasicGeometryNode</db:link></db:term>
<db:listitem>
<db:para>The QSGBasicGeometryNode class serves as a baseclass for geometry based nodes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgclipnode.xml" xlink:role="class">QSGClipNode</db:link></db:term>
<db:listitem>
<db:para>The QSGClipNode class implements the clipping functionality in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgdynamictexture.xml" xlink:role="class">QSGDynamicTexture</db:link></db:term>
<db:listitem>
<db:para>The QSGDynamicTexture class serves as a baseclass for dynamically changing textures, such as content that is rendered to FBO's.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgengine.xml" xlink:role="class">QSGEngine</db:link></db:term>
<db:listitem>
<db:para>The QSGEngine class allows low level rendering of a scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgflatcolormaterial.xml" xlink:role="class">QSGFlatColorMaterial</db:link></db:term>
<db:listitem>
<db:para>The QSGFlatColorMaterial class provides a convenient way of rendering solid colored geometry in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsggeometry.xml" xlink:role="class">QSGGeometry</db:link></db:term>
<db:listitem>
<db:para>The QSGGeometry class provides low-level storage for graphics primitives in the Qt Quick Scene Graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsggeometry-attribute.xml" xlink:role="class">QSGGeometry::Attribute</db:link></db:term>
<db:listitem>
<db:para>The QSGGeometry::Attribute describes a single vertex attribute in a QSGGeometry.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsggeometry-attributeset.xml" xlink:role="class">QSGGeometry::AttributeSet</db:link></db:term>
<db:listitem>
<db:para>The QSGGeometry::AttributeSet describes how the vertices in a QSGGeometry are built up.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsggeometry-coloredpoint2d.xml" xlink:role="class">QSGGeometry::ColoredPoint2D</db:link></db:term>
<db:listitem>
<db:para>The QSGGeometry::ColoredPoint2D struct is a convenience struct for accessing 2D Points with a color.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsggeometry-point2d.xml" xlink:role="class">QSGGeometry::Point2D</db:link></db:term>
<db:listitem>
<db:para>The QSGGeometry::Point2D struct is a convenience struct for accessing 2D Points.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsggeometry-texturedpoint2d.xml" xlink:role="class">QSGGeometry::TexturedPoint2D</db:link></db:term>
<db:listitem>
<db:para>The QSGGeometry::TexturedPoint2D struct is a convenience struct for accessing 2D Points with texture coordinates.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsggeometrynode.xml" xlink:role="class">QSGGeometryNode</db:link></db:term>
<db:listitem>
<db:para>The QSGGeometryNode class is used for all rendered content in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgimagenode.xml" xlink:role="class">QSGImageNode</db:link></db:term>
<db:listitem>
<db:para>The QSGImageNode class is provided for convenience to easily draw textured content using the QML scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgmaterial.xml" xlink:role="class">QSGMaterial</db:link></db:term>
<db:listitem>
<db:para>The QSGMaterial class encapsulates rendering state for a shader program.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgmaterialshader.xml" xlink:role="class">QSGMaterialShader</db:link></db:term>
<db:listitem>
<db:para>The QSGMaterialShader class represents an OpenGL shader program in the renderer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgmaterialshader-renderstate.xml" xlink:role="class">QSGMaterialShader::RenderState</db:link></db:term>
<db:listitem>
<db:para>The QSGMaterialShader::RenderState encapsulates the current rendering state during a call to QSGMaterialShader::updateState().</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgmaterialtype.xml" xlink:role="class">QSGMaterialType</db:link></db:term>
<db:listitem>
<db:para>The QSGMaterialType class is used as a unique type token in combination with QSGMaterial.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgnode.xml" xlink:role="class">QSGNode</db:link></db:term>
<db:listitem>
<db:para>The QSGNode class is the base class for all nodes in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgopacitynode.xml" xlink:role="class">QSGOpacityNode</db:link></db:term>
<db:listitem>
<db:para>The QSGOpacityNode class is used to change opacity of nodes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgopaquetexturematerial.xml" xlink:role="class">QSGOpaqueTextureMaterial</db:link></db:term>
<db:listitem>
<db:para>The QSGOpaqueTextureMaterial class provides a convenient way of rendering textured geometry in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgrectanglenode.xml" xlink:role="class">QSGRectangleNode</db:link></db:term>
<db:listitem>
<db:para>The QSGRectangleNode class is a convenience class for drawing solid filled rectangles using scenegraph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgrendernode.xml" xlink:role="class">QSGRenderNode</db:link></db:term>
<db:listitem>
<db:para>The QSGRenderNode class represents a set of custom rendering commands targeting the graphics API that is in use by the scenegraph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgrendererinterface.xml" xlink:role="class">QSGRendererInterface</db:link></db:term>
<db:listitem>
<db:para>An interface providing access to some of the graphics API specific internals of the scenegraph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgsimplematerial.xml" xlink:role="class">QSGSimpleMaterial</db:link></db:term>
<db:listitem>
<db:para>The QSGSimpleMaterial class is a template generated class used to store the state used with a QSGSimpleMateralShader.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgsimplematerialshader.xml" xlink:role="class">QSGSimpleMaterialShader</db:link></db:term>
<db:listitem>
<db:para>The QSGSimpleMaterialShader class provides a convenient way of building custom OpenGL-based materials for the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgtexture.xml" xlink:role="class">QSGTexture</db:link></db:term>
<db:listitem>
<db:para>The QSGTexture class is a baseclass for textures used in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgtexturematerial.xml" xlink:role="class">QSGTextureMaterial</db:link></db:term>
<db:listitem>
<db:para>The QSGTextureMaterial class provides a convenient way of rendering textured geometry in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgtextureprovider.xml" xlink:role="class">QSGTextureProvider</db:link></db:term>
<db:listitem>
<db:para>The QSGTextureProvider class encapsulates texture based entities in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgtransformnode.xml" xlink:role="class">QSGTransformNode</db:link></db:term>
<db:listitem>
<db:para>The QSGTransformNode class implements transformations in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgvertexcolormaterial.xml" xlink:role="class">QSGVertexColorMaterial</db:link></db:term>
<db:listitem>
<db:para>The QSGVertexColorMaterial class provides a convenient way of rendering per-vertex colored geometry in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>To include the definitions of the module's classes, use the following directive:</db:para>
<db:programlisting language="cpp">#include &amp;lt;QtQuick&amp;gt;
</db:programlisting>
<db:para>To link against the module, add this line to your <db:link xlink:href="qmake-manual.xml">qmake</db:link> <db:code>.pro</db:code> file:</db:para>
<db:programlisting language="cpp">QT += quick
</db:programlisting>
<db:para>For more information on the Qt Quick module, see the <db:link xlink:href="qtquick-index.xml">Qt Quick</db:link> module documentation.</db:para>
</db:section>
</db:article>
