<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ApplicationWindow QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 5.13.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Styled top-level window with support for a header and footer.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 2.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Window</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>ApplicationWindow is part of <db:simplelist><db:member>qtquickcontrols2-containers</db:member><db:member>qtquickcontrols2-focusscopes</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link> is a <db:link xlink:href="qml-qtquick-window-window.xml">Window</db:link> which makes it convenient to add a <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#menuBar-attached-prop">menu bar</db:link>, <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#header-attached-prop">header</db:link> and <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#footer-attached-prop">footer</db:link> item to the window.</db:para>
<db:para>You can declare <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link> as the root item of your application, and run it by using QQmlApplicationEngine. In this way you can control the window's properties, appearance and layout from QML.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-applicationwindow-wireframe.png"/>
</db:imageobject>
</db:mediaobject>
<db:programlisting language="qml">import QtQuick.Controls 2.12

ApplicationWindow {
    visible: true

    menuBar: MenuBar {
        // ...
    }

    header: ToolBar {
        // ...
    }

    footer: TabBar {
        // ...
    }

    StackView {
        anchors.fill: parent
    }
}
</db:programlisting>
<db:note>
<db:para>By default, an <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link> is not visible.</db:para>
</db:note>
<db:section xml:id="attached-applicationwindow-properties">
<db:title>Attached ApplicationWindow Properties</db:title>
<db:para>Due to how <db:link xlink:href="qtqml-documents-scope.xml">Scope and Naming Resolution</db:link> works in QML, it is possible to reference the <db:code>id</db:code> of the application root element anywhere in its child QML objects. Even though this approach is fine for many applications and use cases, for a generic QML component it may not be acceptable as it creates a dependency to the surrounding environment.</db:para>
<db:para><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link> provides a set of attached properties that can be used to access the window and its building blocks from places where no direct access to the window is available, without creating a dependency to a certain window <db:code>id</db:code>. A QML component that uses the <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link> attached properties works in any window regardless of its <db:code>id</db:code>.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-applicationwindow">Customizing ApplicationWindow</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-overlay.xml">Overlay</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-page.xml">Page</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-containers.xml">Container Controls</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-focus.xml">Focus Management in Qt Quick Controls</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="activeFocusControl-prop">
<db:title>[read-only] activeFocusControl : Control</db:title>
<db:fieldsynopsis>
<db:type>Control</db:type>
<db:varname>activeFocusControl</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the control that currently has active focus, or <db:code>null</db:code> if there is no control with active focus.</db:para>
<db:para>The difference between <db:link xlink:href="qml-qtquick-window-window.xml#activeFocusItem-attached-prop">Window::activeFocusItem</db:link> and <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#activeFocusControl-attached-prop">ApplicationWindow::activeFocusControl</db:link> is that the former may point to a building block of a control, whereas the latter points to the enclosing control. For example, when <db:link xlink:href="qml-qtquick-controls2-spinbox.xml">SpinBox</db:link> has focus, activeFocusItem points to the editor and <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#activeFocusControl-attached-prop">activeFocusControl</db:link> to the <db:link xlink:href="qml-qtquick-controls2-spinbox.xml">SpinBox</db:link> itself.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-window-window.xml#activeFocusItem-attached-prop">Window::activeFocusItem</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="background-prop">
<db:title>background : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>background</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the background item.</db:para>
<db:para>The background item is stacked under the <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#contentItem-attached-prop">content item</db:link>, but above the <db:link xlink:href="qml-qtquick-window-window.xml#color-prop">background color</db:link> of the window.</db:para>
<db:para>The background item is useful for images and gradients, for example, but the <db:link xlink:href="qml-qtquick-window-window.xml#color-prop">color</db:link> property is preferable for solid colors, as it doesn't need to create an item.</db:para>
<db:note>
<db:para>If the background item has no explicit size specified, it automatically follows the control's size. In most cases, there is no need to specify width or height for a background item.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-applicationwindow">Customizing ApplicationWindow</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#contentItem-attached-prop">contentItem</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#header-attached-prop">header</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#footer-attached-prop">footer</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contentData-prop">
<db:title>contentData : list&lt;Object&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;Object&gt;</db:type>
<db:varname>contentData</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This default property holds the list of all objects declared as children of the window.</db:para>
<db:para>The data property allows you to freely mix visual children, resources and other windows in an <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link>.</db:para>
<db:para>If you assign an Item to the contentData list, it becomes a child of the window's <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#contentItem-attached-prop">contentItem</db:link>, so that it appears inside the window. The item's parent will be the window's <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#contentItem-attached-prop">contentItem</db:link>.</db:para>
<db:para>It should not generally be necessary to refer to the contentData property, as it is the default property for <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link> and thus all child items are automatically assigned to this property.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#contentItem-attached-prop">contentItem</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contentItem-prop">
<db:title>[read-only] contentItem : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>contentItem</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the window content item.</db:para>
<db:para>The content item is stacked above the <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#background-prop">background</db:link> item, and under the <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#menuBar-attached-prop">menuBar</db:link>, <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#header-attached-prop">header</db:link>, and <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#footer-attached-prop">footer</db:link> items.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#background-prop">background</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#menuBar-attached-prop">menuBar</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#header-attached-prop">header</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#footer-attached-prop">footer</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="font-prop">
<db:title>font : font</db:title>
<db:fieldsynopsis>
<db:type>font</db:type>
<db:varname>font</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the font currently set for the window.</db:para>
<db:para>The default font depends on the system environment. QGuiApplication maintains a system/theme font which serves as a default for all application windows. You can also set the default font for windows by passing a custom font to QGuiApplication::setFont(), before loading any QML. Finally, the font is matched against Qt's font database to find the best match.</db:para>
<db:para><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link> propagates explicit font properties to child controls. If you change a specific property on the window's font, that property propagates to all child controls in the window, overriding any system defaults for that property.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#font-prop">Control::font</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="footer-prop">
<db:title>footer : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>footer</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the window footer item. The footer item is positioned to the bottom, and resized to the width of the window. The default value is <db:code>null</db:code>.</db:para>
<db:programlisting language="cpp">ApplicationWindow {
    footer: ToolBar {
        // ...
    }
}
</db:programlisting>
<db:note>
<db:para>Assigning a <db:link xlink:href="qml-qtquick-controls2-toolbar.xml">ToolBar</db:link>, <db:link xlink:href="qml-qtquick-controls2-tabbar.xml">TabBar</db:link>, or <db:link xlink:href="qml-qtquick-controls2-dialogbuttonbox.xml">DialogButtonBox</db:link> as a window footer automatically sets the respective <db:link xlink:href="qml-qtquick-controls2-toolbar.xml#position-prop">ToolBar::position</db:link>, <db:link xlink:href="qml-qtquick-controls2-tabbar.xml#position-attached-prop">TabBar::position</db:link>, or <db:link xlink:href="qml-qtquick-controls2-dialogbuttonbox.xml#position-prop">DialogButtonBox::position</db:link> property to <db:code>Footer</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#menuBar-attached-prop">menuBar</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#header-attached-prop">header</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-page.xml#footer-prop">Page::footer</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="header-prop">
<db:title>header : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>header</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the window header item. The header item is positioned at the top of the window, below the menu bar, and resized to the width of the window. The default value is <db:code>null</db:code>.</db:para>
<db:programlisting language="cpp">ApplicationWindow {
    header: TabBar {
        // ...
    }
}
</db:programlisting>
<db:note>
<db:para>Assigning a <db:link xlink:href="qml-qtquick-controls2-toolbar.xml">ToolBar</db:link>, <db:link xlink:href="qml-qtquick-controls2-tabbar.xml">TabBar</db:link>, or <db:link xlink:href="qml-qtquick-controls2-dialogbuttonbox.xml">DialogButtonBox</db:link> as a window header automatically sets the respective <db:link xlink:href="qml-qtquick-controls2-toolbar.xml#position-prop">ToolBar::position</db:link>, <db:link xlink:href="qml-qtquick-controls2-tabbar.xml#position-attached-prop">TabBar::position</db:link>, or <db:link xlink:href="qml-qtquick-controls2-dialogbuttonbox.xml#position-prop">DialogButtonBox::position</db:link> property to <db:code>Header</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#menuBar-attached-prop">menuBar</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#footer-attached-prop">footer</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-page.xml#header-prop">Page::header</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="locale-prop">
<db:title>locale : Locale</db:title>
<db:fieldsynopsis>
<db:type>Locale</db:type>
<db:varname>locale</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the locale of the window.</db:para>
<db:para>The default locale depends on the system environment. You can set the default locale by calling QLocale::setDefault(), before loading any QML.</db:para>
<db:para><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link> propagates the locale to child controls. If you change the window's locale, that locale propagates to all child controls in the window, overriding the system default locale.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#locale-prop">Control::locale</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layoutmirroring.xml">LayoutMirroring</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="menuBar-prop">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] menuBar : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>menuBar</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the window menu bar. The menu bar is positioned at the top of the window, above the header, and resized to the width of the window. The default value is <db:code>null</db:code>.</db:para>
<db:programlisting language="cpp">ApplicationWindow {
    menuBar: MenuBar {
        // ...
    }
}
</db:programlisting>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#header-attached-prop">header</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#footer-attached-prop">footer</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-menubar.xml">MenuBar</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="palette-prop">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] palette : palette</db:title>
<db:fieldsynopsis>
<db:type>palette</db:type>
<db:varname>palette</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the palette currently set for the window.</db:para>
<db:para>The default palette depends on the system environment. QGuiApplication maintains a system/theme palette which serves as a default for all application windows. You can also set the default palette for windows by passing a custom palette to QGuiApplication::setPalette(), before loading any QML.</db:para>
<db:para><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link> propagates explicit palette properties to child controls. If you change a specific property on the window's palette, that property propagates to all child controls in the window, overriding any system defaults for that property.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#palette-prop">Control::palette</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#palette-prop">Popup::palette</db:link></db:member>
<db:member><db:link xlink:href="qml-palette.xml#qtquickcontrols2-palette">palette QML Basic Type</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="attached-property-documentation">
<db:title>Attached Property Documentation</db:title>
<db:section xml:id="activeFocusControl-attached-prop">
<db:title>[read-only] ApplicationWindow.activeFocusControl : Control</db:title>
<db:fieldsynopsis>
<db:type>Control</db:type>
<db:varname>ApplicationWindow.activeFocusControl</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property holds the control that currently has active focus, or <db:code>null</db:code> if there is no control with active focus. The property can be attached to any item. The value is <db:code>null</db:code> if the item is not in a window, or the window has no active focus.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-window-window.xml#activeFocusItem-attached-prop">Window::activeFocusItem</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#attached-applicationwindow-properties">Attached ApplicationWindow Properties</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contentItem-attached-prop">
<db:title>[read-only] ApplicationWindow.contentItem : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>ApplicationWindow.contentItem</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property holds the window content item. The property can be attached to any item. The value is <db:code>null</db:code> if the item is not in an <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#attached-applicationwindow-properties">Attached ApplicationWindow Properties</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="footer-attached-prop">
<db:title>[read-only] ApplicationWindow.footer : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>ApplicationWindow.footer</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property holds the window footer item. The property can be attached to any item. The value is <db:code>null</db:code> if the item is not in an <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link>, or the window has no footer item.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#attached-applicationwindow-properties">Attached ApplicationWindow Properties</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="header-attached-prop">
<db:title>[read-only] ApplicationWindow.header : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>ApplicationWindow.header</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property holds the window header item. The property can be attached to any item. The value is <db:code>null</db:code> if the item is not in an <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link>, or the window has no header item.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#attached-applicationwindow-properties">Attached ApplicationWindow Properties</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="menuBar-attached-prop">
<db:title>[read-only, since QtQuick.Controls 2.3 (Qt 5.10)] ApplicationWindow.menuBar : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>ApplicationWindow.menuBar</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property holds the window menu bar. The property can be attached to any item. The value is <db:code>null</db:code> if the item is not in an <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link>, or the window has no menu bar.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#attached-applicationwindow-properties">Attached ApplicationWindow Properties</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="window-attached-prop">
<db:title>[read-only] ApplicationWindow.window : ApplicationWindow</db:title>
<db:fieldsynopsis>
<db:type>ApplicationWindow</db:type>
<db:varname>ApplicationWindow.window</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property holds the application window. The property can be attached to any item. The value is <db:code>null</db:code> if the item is not in an <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#attached-applicationwindow-properties">Attached ApplicationWindow Properties</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for ApplicationWindow</db:title>
<db:para><db:emphasis role="bold">The following members of QML type <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-property-documentation">
<db:title>Obsolete Property Documentation</db:title>
<db:section xml:id="overlay-prop">
<db:title>overlay : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>overlay</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2">overlay.modal : Component</db:bridgehead><db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>overlay.modal</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2">overlay.modeless : Component</db:bridgehead><db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>overlay.modeless</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This QML property is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use the <db:link xlink:href="qml-qtquick-controls2-overlay.xml">Overlay</db:link> attached properties and signals instead.</db:para>
<db:para>This property holds the window overlay item. Popups are automatically reparented to the overlay.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Property</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>overlay.modal</db:para>
</db:td>
<db:td>
<db:para>This property holds a component to use as a visual item that implements background dimming for modal popups. It is created for and stacked below visible modal popups.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>overlay.modeless</db:para>
</db:td>
<db:td>
<db:para>This property holds a component to use as a visual item that implements background dimming for modeless popups. It is created for and stacked below visible dimming popups.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>overlay.pressed()</db:para>
</db:td>
<db:td>
<db:para>This signal is emitted when the overlay is pressed by the user while a popup is visible.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>overlay.released()</db:para>
</db:td>
<db:td>
<db:para>This signal is emitted when the overlay is released by the user while a modal popup is visible.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#modal-prop">Popup::modal</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#dim-prop">Popup::dim</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="obsolete-attached-property-documentation">
<db:title>Obsolete Attached Property Documentation</db:title>
<db:section xml:id="overlay-attached-prop">
<db:title>[read-only] ApplicationWindow.overlay : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>ApplicationWindow.overlay</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use the <db:link xlink:href="qml-qtquick-controls2-overlay.xml#overlay-attached-prop">Overlay::overlay</db:link> attached property instead.</db:para>
<db:para>This attached property holds the window overlay item. The property can be attached to any item. The value is <db:code>null</db:code> if the item is not in an <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#attached-applicationwindow-properties">Attached ApplicationWindow Properties</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:section>
</db:article>
