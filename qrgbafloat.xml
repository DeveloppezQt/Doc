<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QRgbaFloat Class</db:title>
<db:subtitle>template &lt;typename F&gt; class QRgbaFloat</db:subtitle>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qrgbafloat.xml">QRgbaFloat</db:link> struct contains a four part RGBA floating-point color.</db:para>
<db:para>This class was introduced in Qt 6.2.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QRgbaFloat</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QRgbaFloat is part of <db:simplelist><db:member><db:link xlink:href="painting.xml">Painting Classes</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcolor.xml#QRgb-typedef">QRgb</db:link></db:member>
<db:member><db:link xlink:href="qrgba64.xml">QRgba64</db:link></db:member>
<db:member><db:link xlink:href="qcolor.xml">QColor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="FastType-typedef">
<db:title>[alias] QRgbaFloat::FastType</db:title>
<db:typedefsynopsis>
<db:typedefname>FastType</db:typedefname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:typedefsynopsis>
<db:para>Alias for <db:emphasis>float</db:emphasis>.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="alpha8">
<db:title>[constexpr] quint8 QRgbaFloat::alpha8() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint8</db:type>
<db:methodname>alpha8</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint8 alpha8() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the alpha channel as an 8-bit.</db:para>
</db:section>
<db:section xml:id="alpha16">
<db:title>[constexpr] quint16 QRgbaFloat::alpha16() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint16</db:type>
<db:methodname>alpha16</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint16 alpha16() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the alpha channel as a 16-bit integer.</db:para>
</db:section>
<db:section xml:id="alpha">
<db:title>[constexpr] QRgbaFloat::FastType QRgbaFloat::alpha() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgbaFloat::FastType</db:type>
<db:methodname>alpha</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat::FastType alpha() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the alpha channel.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#setAlpha">setAlpha</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="alphaNormalized">
<db:title>[constexpr] QRgbaFloat::FastType QRgbaFloat::alphaNormalized() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgbaFloat::FastType</db:type>
<db:methodname>alphaNormalized</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat::FastType alphaNormalized() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the alpha channel normalized to values between <db:code>0.0f</db:code> and <db:code>1.0f</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#alpha">alpha</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="blue8">
<db:title>[constexpr] quint8 QRgbaFloat::blue8() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint8</db:type>
<db:methodname>blue8</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint8 blue8() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the blue color component as an 8-bit.</db:para>
</db:section>
<db:section xml:id="blue16">
<db:title>[constexpr] quint16 QRgbaFloat::blue16() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint16</db:type>
<db:methodname>blue16</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint16 blue16() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the blue color component as a 16-bit integer.</db:para>
</db:section>
<db:section xml:id="blue">
<db:title>[constexpr] QRgbaFloat::FastType QRgbaFloat::blue() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgbaFloat::FastType</db:type>
<db:methodname>blue</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat::FastType blue() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the blue color component.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#setBlue">setBlue</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="blueNormalized">
<db:title>[constexpr] QRgbaFloat::FastType QRgbaFloat::blueNormalized() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgbaFloat::FastType</db:type>
<db:methodname>blueNormalized</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat::FastType blueNormalized() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the blue color component normalized to values between <db:code>0.0f</db:code> and <db:code>1.0f</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#setBlue">setBlue</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fromArgb32">
<db:title>[static constexpr] QRgbaFloat&lt;T&gt; QRgbaFloat::fromArgb32(uint <db:emphasis>rgb</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QRgbaFloat&lt;T&gt;</db:type>
<db:methodname>fromArgb32</db:methodname>
<db:methodparam>
<db:type>uint</db:type>
<db:parameter>rgb</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat&lt;T&gt; fromArgb32(uint rgb)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Constructs a <db:link xlink:href="qrgbafloat.xml">QRgbaFloat</db:link> value from the 32bit ARGB value <db:code role="parameter">rgb</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#fromRgba">fromRgba</db:link>()</db:member>
<db:member><db:link xlink:href="qrgbafloat.xml#toArgb32">toArgb32</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fromRgba64">
<db:title>[static constexpr] QRgbaFloat&lt;T&gt; QRgbaFloat::fromRgba64(quint16 <db:emphasis>red</db:emphasis>, quint16 <db:emphasis>green</db:emphasis>, quint16 <db:emphasis>blue</db:emphasis>, quint16 <db:emphasis>alpha</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QRgbaFloat&lt;T&gt;</db:type>
<db:methodname>fromRgba64</db:methodname>
<db:methodparam>
<db:type>quint16</db:type>
<db:parameter>red</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>quint16</db:type>
<db:parameter>green</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>quint16</db:type>
<db:parameter>blue</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>quint16</db:type>
<db:parameter>alpha</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat&lt;T&gt; fromRgba64(quint16 red, quint16 green, quint16 blue, quint16 alpha)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Constructs a <db:link xlink:href="qrgbafloat.xml">QRgbaFloat</db:link> value from the four 16-bit integer color channels <db:code role="parameter">red</db:code>, <db:code role="parameter">green</db:code>, <db:code role="parameter">blue</db:code> and <db:code role="parameter">alpha</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#fromRgba">fromRgba</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fromRgba">
<db:title>[static constexpr] QRgbaFloat&lt;T&gt; QRgbaFloat::fromRgba(quint8 <db:emphasis>red</db:emphasis>, quint8 <db:emphasis>green</db:emphasis>, quint8 <db:emphasis>blue</db:emphasis>, quint8 <db:emphasis>alpha</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QRgbaFloat&lt;T&gt;</db:type>
<db:methodname>fromRgba</db:methodname>
<db:methodparam>
<db:type>quint8</db:type>
<db:parameter>red</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>quint8</db:type>
<db:parameter>green</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>quint8</db:type>
<db:parameter>blue</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>quint8</db:type>
<db:parameter>alpha</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat&lt;T&gt; fromRgba(quint8 red, quint8 green, quint8 blue, quint8 alpha)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Constructs a <db:link xlink:href="qrgbafloat.xml">QRgbaFloat</db:link> value from the four 8-bit color channels <db:code role="parameter">red</db:code>, <db:code role="parameter">green</db:code>, <db:code role="parameter">blue</db:code> and <db:code role="parameter">alpha</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#fromArgb32">fromArgb32</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="green8">
<db:title>[constexpr] quint8 QRgbaFloat::green8() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint8</db:type>
<db:methodname>green8</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint8 green8() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the green color component as an 8-bit.</db:para>
</db:section>
<db:section xml:id="green16">
<db:title>[constexpr] quint16 QRgbaFloat::green16() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint16</db:type>
<db:methodname>green16</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint16 green16() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the green color component as a 16-bit integer.</db:para>
</db:section>
<db:section xml:id="green">
<db:title>[constexpr] QRgbaFloat::FastType QRgbaFloat::green() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgbaFloat::FastType</db:type>
<db:methodname>green</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat::FastType green() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the green color component.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#setGreen">setGreen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="greenNormalized">
<db:title>[constexpr] QRgbaFloat::FastType QRgbaFloat::greenNormalized() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgbaFloat::FastType</db:type>
<db:methodname>greenNormalized</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat::FastType greenNormalized() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the green color component normalized to values between <db:code>0.0f</db:code> and <db:code>1.0f</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#setGreen">setGreen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isOpaque">
<db:title>[constexpr] bool QRgbaFloat::isOpaque() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isOpaque</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isOpaque() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns whether the color is fully opaque.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#isTransparent">isTransparent</db:link>()</db:member>
<db:member><db:link xlink:href="qrgbafloat.xml#alpha">alpha</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isTransparent">
<db:title>[constexpr] bool QRgbaFloat::isTransparent() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isTransparent</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isTransparent() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns whether the color is fully transparent.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#isOpaque">isOpaque</db:link>()</db:member>
<db:member><db:link xlink:href="qrgbafloat.xml#alpha">alpha</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="premultiplied">
<db:title>[constexpr] QRgbaFloat&lt;T&gt; QRgbaFloat::premultiplied() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgbaFloat&lt;T&gt;</db:type>
<db:methodname>premultiplied</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat&lt;T&gt; premultiplied() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the color with the alpha premultiplied.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#unpremultiplied">unpremultiplied</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="red8">
<db:title>[constexpr] quint8 QRgbaFloat::red8() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint8</db:type>
<db:methodname>red8</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint8 red8() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the red color component as an 8-bit.</db:para>
</db:section>
<db:section xml:id="red16">
<db:title>[constexpr] quint16 QRgbaFloat::red16() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint16</db:type>
<db:methodname>red16</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint16 red16() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the red color component as a 16-bit integer.</db:para>
</db:section>
<db:section xml:id="red">
<db:title>[constexpr] QRgbaFloat::FastType QRgbaFloat::red() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgbaFloat::FastType</db:type>
<db:methodname>red</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat::FastType red() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the red color component.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#setRed">setRed</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="redNormalized">
<db:title>[constexpr] QRgbaFloat::FastType QRgbaFloat::redNormalized() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgbaFloat::FastType</db:type>
<db:methodname>redNormalized</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat::FastType redNormalized() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the red color component normalized to values between <db:code>0.0f</db:code> and <db:code>1.0f</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#setRed">setRed</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setAlpha">
<db:title>void QRgbaFloat::setAlpha(QRgbaFloat::FastType <db:emphasis>alpha</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setAlpha</db:methodname>
<db:methodparam>
<db:type>QRgbaFloat::FastType</db:type>
<db:parameter>alpha</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setAlpha(QRgbaFloat::FastType alpha)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the alpha of this color to <db:code role="parameter">alpha</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#alpha">alpha</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBlue">
<db:title>void QRgbaFloat::setBlue(QRgbaFloat::FastType <db:emphasis>blue</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setBlue</db:methodname>
<db:methodparam>
<db:type>QRgbaFloat::FastType</db:type>
<db:parameter>blue</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setBlue(QRgbaFloat::FastType blue)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the blue color component of this color to <db:code role="parameter">blue</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#blue">blue</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setGreen">
<db:title>void QRgbaFloat::setGreen(QRgbaFloat::FastType <db:emphasis>green</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setGreen</db:methodname>
<db:methodparam>
<db:type>QRgbaFloat::FastType</db:type>
<db:parameter>green</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setGreen(QRgbaFloat::FastType green)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the green color component of this color to <db:code role="parameter">green</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#green">green</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setRed">
<db:title>void QRgbaFloat::setRed(QRgbaFloat::FastType <db:emphasis>red</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setRed</db:methodname>
<db:methodparam>
<db:type>QRgbaFloat::FastType</db:type>
<db:parameter>red</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setRed(QRgbaFloat::FastType red)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the red color component of this color to <db:code role="parameter">red</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#red">red</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="toArgb32">
<db:title>[constexpr] uint QRgbaFloat::toArgb32() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>uint</db:type>
<db:methodname>toArgb32</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">uint toArgb32() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the color as a 32-bit ARGB value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#fromArgb32">fromArgb32</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="unpremultiplied">
<db:title>[constexpr] QRgbaFloat&lt;T&gt; QRgbaFloat::unpremultiplied() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgbaFloat&lt;T&gt;</db:type>
<db:methodname>unpremultiplied</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat&lt;T&gt; unpremultiplied() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the color with the alpha unpremultiplied.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrgbafloat.xml#premultiplied">premultiplied</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="QRgbaFloat16-typedef">
<db:title>QRgbaFloat16</db:title>
<db:typedefsynopsis>
<db:typedefname>QRgbaFloat16</db:typedefname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:typedefsynopsis>
<db:para>A 64-bit data-structure containing four 16-bit floating point color channels: Red, green, blue and alpha.</db:para>
</db:section>
<db:section xml:id="QRgbaFloat32-typedef">
<db:title>QRgbaFloat32</db:title>
<db:typedefsynopsis>
<db:typedefname>QRgbaFloat32</db:typedefname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:typedefsynopsis>
<db:para>A 128-bit data-structure containing four 32-bit floating point color channels: Red, green, blue and alpha.</db:para>
</db:section>
</db:section>
</db:article>
