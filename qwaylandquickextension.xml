<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>&lt;QWaylandQuickExtension&gt; - Qt Wayland Compositor Qt Quick Extension Macro Declarations</db:title>
<db:productname>QtWaylandCompositor</db:productname>
<db:edition>Qt Wayland Compositor | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Wayland Compositor Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The &lt;QWaylandQuickExtension&gt; header file includes <db:link xlink:href="qtglobal.xml#macros">macros</db:link> for creating Qt Quick types that correspond to subclasses of QWaylandCompositorExtension and QWaylandObject.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QWaylandQuickExtension</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>&lt;QWaylandQuickExtension&gt; is part of <db:simplelist><db:member>funclists</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>If you are creating extensions to Qt Wayland Compositor, the macros in the QWaylandQuickExtension header may be a useful alternative to manually implementing the required parts for each class.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtwaylandcompositor-custom-shell-example.xml">Qt Wayland Compositor Examples - Custom Shell</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="macro-documentation">
<db:title>Macro Documentation</db:title>
<db:section xml:id="Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_CLASS">
<db:title>Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_CLASS(<db:emphasis>className</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:methodname>Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_CLASS</db:methodname>
<db:methodparam>
<db:type></db:type>
<db:parameter>className</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">macrowithparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_CLASS(className)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This macro can be used to define a Qt Quick class based on a Wayland extension. It defines a new class which inherits from <db:code role="parameter">className</db:code> and which suffixes the name with &quot;QuickExtension&quot;.</db:para>
<db:para>The class should be a subclass of QWaylandCompositorExtension, and <db:link xlink:href="">QWaylandCompositorExtension::initialize()</db:link> will be called automatically. The type must be manually registered in Qt Quick using <db:link xlink:href="qqmlengine.xml#qmlRegisterType-1">qmlRegisterType</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwaylandquickextension.xml#Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_NAMED_CLASS">Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_NAMED_CLASS</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_CONTAINER_CLASS">
<db:title>Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_CONTAINER_CLASS(<db:emphasis>className</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:methodname>Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_CONTAINER_CLASS</db:methodname>
<db:methodparam>
<db:type></db:type>
<db:parameter>className</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">macrowithparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_CONTAINER_CLASS(className)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This macro can be used to define a Qt Quick class intended to contain Wayland extensions. It</db:para>
<db:para>It defines a new class which inherits from <db:code role="parameter">className</db:code> and which suffixes the name with &quot;QuickExtensionContainer&quot;. The class given by <db:code role="parameter">className</db:code> should inherit from QWaylandObject, and the new class will have an <db:code>extensions</db:code> property which manages the extensions by calling <db:link xlink:href="">addExtension()</db:link> and <db:link xlink:href="">removeExtension()</db:link> in the base class.</db:para>
<db:para>The type must be manually registered in Qt Quick using <db:link xlink:href="qqmlengine.xml#qmlRegisterType-1">qmlRegisterType</db:link>().</db:para>
</db:section>
<db:section xml:id="Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_NAMED_CLASS">
<db:title>Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_NAMED_CLASS(<db:emphasis>className</db:emphasis>, <db:emphasis>QmlType</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:methodname>Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_NAMED_CLASS</db:methodname>
<db:methodparam>
<db:type></db:type>
<db:parameter>className</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type></db:type>
<db:parameter>QmlType</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">macrowithparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_NAMED_CLASS(className, QmlType)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This macro can be used to define a Qt Quick class based on a Wayland extension. It defines a new class which inherits from <db:code role="parameter">className</db:code> and which suffixes the name with &quot;QuickExtension&quot;.</db:para>
<db:para>The macro works the same as <db:link xlink:href="qwaylandquickextension.xml#Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_CLASS">Q_COMPOSITOR_DECLARE_QUICK_EXTENSION_CLASS</db:link>, but will also automatically register the new type as <db:code role="parameter">QmlType</db:code> in Qt Quick.</db:para>
</db:section>
</db:section>
</db:article>
