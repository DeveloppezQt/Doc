<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Using Qt D-Bus Adaptors</db:title>
<db:productname>QtDBus</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt D-Bus Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>How to create and use DBus adaptors in Qt.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Adaptors are special classes that are attached to any <db:link xlink:href="qobject.xml">QObject</db:link>-derived class and provide the interface to the external world using D-Bus. Adaptors are intended to be lightweight classes whose main purpose is to relay calls to and from the real object, possibly validating or converting the input from the external world and, thus, protecting the real object.</db:para>
<db:para>Unlike multiple inheritance, adaptors can be added at any time to any object (but not removed), which allows for greater flexibility when exporting existing classes. Another advantage of adaptors is to provide similar but not identical functionality in methods of the same name in different interfaces, a case which can be quite common when adding a new version of a standard interface to an object.</db:para>
<db:para>In order to use an adaptor, one must create a class which inherits <db:link xlink:href="qdbusabstractadaptor.xml">QDBusAbstractAdaptor</db:link>. Since that is a standard <db:link xlink:href="qobject.xml">QObject</db:link>-derived class, the <db:link xlink:href="qobject.xml#Q_OBJECT">Q_OBJECT</db:link> macro must appear in the declaration and the source file must be processed with the <db:link xlink:href="moc.xml">moc</db:link> tool. The class must also contain one <db:link xlink:href="qobject.xml#Q_CLASSINFO">Q_CLASSINFO</db:link> entry with the &quot;D-Bus Interface&quot; name, declaring which interface it is exporting. Only one entry per class is supported.</db:para>
<db:para>Any public slot in the class will be accessible through the bus over messages of the MethodCall type. (See <db:link xlink:href="qdbusdeclaringslots.xml">Declaring Slots in D-Bus Adaptors</db:link> for more information). Signals in the class will be automatically relayed over D-Bus. However, not all types are allowed signals or slots' parameter lists: see <db:link xlink:href="qdbustypesystem.xml">The Qt D-Bus Type System</db:link> for more information.</db:para>
<db:para>Also, any property declared with <db:link xlink:href="qobject.xml#Q_PROPERTY">Q_PROPERTY</db:link> will be automatically exposed over the Properties interface on D-Bus. Since the <db:link xlink:href="qobject.xml">QObject</db:link> property system does not allow for non-readable properties, it is not possible to declare write-only properties using adaptors.</db:para>
<db:para>More information:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qdbusdeclaringslots.xml">Declaring Slots in D-Bus Adaptors</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qdbusdeclaringsignals.xml">Declaring Signals in D-Bus Adaptors</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qdbustypesystem.xml">The Qt D-Bus Type System</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para>In the <db:link xlink:href="qtdbus-complexpingpong-example.xml">D-Bus Complex Ping Pong Example</db:link>, complexpong.h and complexpong.cpp show an implementation of <db:link xlink:href="qdbusabstractadaptor.xml">QDBusAbstractAdaptor</db:link>.</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdbusabstractadaptor.xml">QDBusAbstractAdaptor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
