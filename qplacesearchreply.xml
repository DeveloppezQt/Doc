<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QPlaceSearchReply Class</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qplacesearchreply.xml">QPlaceSearchReply</db:link> class manages a place search operation started by an instance of <db:link xlink:href="qplacemanager.xml">QPlaceManager</db:link>.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPlaceSearchReply</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += location</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qplacereply.xml" xlink:role="class">QPlaceReply</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QPlaceSearchReply is part of <db:simplelist><db:member>QtLocation-places</db:member><db:member>QtLocation-places-replies</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>See <db:link xlink:href="location-places-cpp.xml#discovery-search">Discovery/Search</db:link> for an example on how to use a search reply.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacesearchrequest.xml">QPlaceSearchRequest</db:link></db:member>
<db:member><db:link xlink:href="qplacemanager.xml">QPlaceManager</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QPlaceSearchReply">
<db:title>[explicit] QPlaceSearchReply::QPlaceSearchReply(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QPlaceSearchReply</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QPlaceSearchReply(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a search reply with a given <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QPlaceSearchReply">
<db:title>[virtual] QPlaceSearchReply::~QPlaceSearchReply()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QPlaceSearchReply</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QPlaceSearchReply()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the search reply.</db:para>
</db:section>
<db:section xml:id="nextPageRequest">
<db:title>QPlaceSearchRequest QPlaceSearchReply::nextPageRequest() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPlaceSearchRequest</db:type>
<db:methodname>nextPageRequest</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPlaceSearchRequest nextPageRequest() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a place search request which can be used to request the next page of search results. An empty place search request is returned if there is no next page of results.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacesearchreply.xml#previousPageRequest">previousPageRequest</db:link>()</db:member>
<db:member><db:link xlink:href="qplacesearchreply.xml#setNextPageRequest">setNextPageRequest</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="previousPageRequest">
<db:title>QPlaceSearchRequest QPlaceSearchReply::previousPageRequest() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPlaceSearchRequest</db:type>
<db:methodname>previousPageRequest</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPlaceSearchRequest previousPageRequest() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a place search request which can be used to request the previous page of search results. An empty place search request is returned if there is no previous page of results.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacesearchreply.xml#nextPageRequest">nextPageRequest</db:link>()</db:member>
<db:member><db:link xlink:href="qplacesearchreply.xml#setPreviousPageRequest">setPreviousPageRequest</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="request">
<db:title>QPlaceSearchRequest QPlaceSearchReply::request() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPlaceSearchRequest</db:type>
<db:methodname>request</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPlaceSearchRequest request() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the search request that was used to generate this reply.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacesearchreply.xml#setRequest">setRequest</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="results">
<db:title>QList&lt;QPlaceSearchResult&gt; QPlaceSearchReply::results() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;QPlaceSearchResult&gt;</db:type>
<db:methodname>results</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QPlaceSearchResult&gt; results() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of search results;</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacesearchreply.xml#setResults">setResults</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setNextPageRequest">
<db:title>[protected] void QPlaceSearchReply::setNextPageRequest(const QPlaceSearchRequest &amp;<db:emphasis>next</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setNextPageRequest</db:methodname>
<db:methodparam>
<db:type>const QPlaceSearchRequest &amp;</db:type>
<db:parameter>next</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setNextPageRequest(const QPlaceSearchRequest &amp;next)</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the next page of search results request to <db:code role="parameter">next</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacesearchreply.xml#nextPageRequest">nextPageRequest</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPreviousPageRequest">
<db:title>[protected] void QPlaceSearchReply::setPreviousPageRequest(const QPlaceSearchRequest &amp;<db:emphasis>previous</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setPreviousPageRequest</db:methodname>
<db:methodparam>
<db:type>const QPlaceSearchRequest &amp;</db:type>
<db:parameter>previous</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setPreviousPageRequest(const QPlaceSearchRequest &amp;previous)</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the previous page of search results request to <db:code role="parameter">previous</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacesearchreply.xml#previousPageRequest">previousPageRequest</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setRequest">
<db:title>[protected] void QPlaceSearchReply::setRequest(const QPlaceSearchRequest &amp;<db:emphasis>request</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setRequest</db:methodname>
<db:methodparam>
<db:type>const QPlaceSearchRequest &amp;</db:type>
<db:parameter>request</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setRequest(const QPlaceSearchRequest &amp;request)</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the search <db:code role="parameter">request</db:code> used to generate this reply.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacesearchreply.xml#request">request</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setResults">
<db:title>[protected] void QPlaceSearchReply::setResults(const QList&lt;QPlaceSearchResult&gt; &amp;<db:emphasis>results</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setResults</db:methodname>
<db:methodparam>
<db:type>const QList&lt;QPlaceSearchResult&gt; &amp;</db:type>
<db:parameter>results</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setResults(const QList&lt;QPlaceSearchResult&gt; &amp;results)</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the list of search <db:code role="parameter">results</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacesearchreply.xml#results">results</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="type">
<db:title>[override virtual] QPlaceReply::Type QPlaceSearchReply::type() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QPlaceReply::Type</db:type>
<db:methodname>type</db:methodname>
<db:void/>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPlaceReply::Type type() const override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qplacereply.xml#type" role="function">QPlaceReply::type() const</db:link>.</db:para>
<db:para>Returns the type of reply.</db:para>
</db:section>
</db:section>
</db:article>
