<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QBlitFramebuffer Class</db:title>
<db:subtitle>Qt3DRender::QBlitFramebuffer</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>FrameGraph node to transfer a rectangle of pixel values from one region of a render target to another.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QBlitFramebuffer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-blitframebuffer.xml" xlink:role="">BlitFramebuffer</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qframegraphnode.xml" xlink:role="class">Qt3DRender::QFrameGraphNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QBlitFramebuffer is part of <db:simplelist><db:member>framegraph</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This node inserts a <db:code>glBlitFrameBuffer</db:code> or an equivalent into the command stream. This provides a more efficient method for copying rectangles between textures or surface backbuffers wrapped by <db:link xlink:href="qt3drender-qrendertarget.xml">QRenderTarget</db:link> than drawing textured quads. It also supports scaling with the specified interpolation method.</db:para>
<db:note>
<db:para>In practice the <db:link xlink:href="qt3drender-qblitframebuffer.xml">QBlitFramebuffer</db:link> node will often be used in combination with <db:link xlink:href="qt3drender-qnodraw.xml">QNoDraw</db:link> since a blit should not involve issuing draw calls for any entities.</db:para>
</db:note>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="InterpolationMethod-enum">
<db:title>enum QBlitFramebuffer::InterpolationMethod</db:title>
<db:para>Specifies the interpolation applied if the image is stretched.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml">QBlitFramebuffer</db:link></db:emphasis>::Nearest</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Nearest-neighbor interpolation.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml">QBlitFramebuffer</db:link></db:emphasis>::Linear</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Linear interpolation.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="destination-prop">
<db:title>destination : Qt3DRender::QRenderTarget*</db:title>
<db:para>Specifies the destination render target. When not set, the destination is assumed to be the default framebuffer (i.e. the backbuffer of the current surface), if there is one.</db:para>
<db:note>
<db:para>the source and destination must not refer to the same render target.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qrendertarget.xml">Qt3DRender::QRenderTarget</db:link></db:type> *<db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml#destination">destination</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml#setDestination">setDestination</db:link></db:emphasis>(<db:type><db:link xlink:href="qt3drender-qrendertarget.xml">Qt3DRender::QRenderTarget</db:link></db:type> *<db:emphasis>destination</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">destinationChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="destinationAttachmentPoint-prop">
<db:title>destinationAttachmentPoint : Qt3DRender::QRenderTargetOutput::AttachmentPoint</db:title>
<db:para>Specifies the target attachment point.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qrendertargetoutput.xml#AttachmentPoint-enum">Qt3DRender::QRenderTargetOutput::AttachmentPoint</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml#destinationAttachmentPoint">destinationAttachmentPoint</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml#setDestinationAttachmentPoint">setDestinationAttachmentPoint</db:link></db:emphasis>(<db:type><db:link xlink:href="qt3drender-qrendertargetoutput.xml#AttachmentPoint-enum">Qt3DRender::QRenderTargetOutput::AttachmentPoint</db:link></db:type> <db:emphasis>destinationAttachmentPoint</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">destinationAttachmentPointChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="destinationRect-prop">
<db:title>destinationRect : QRectF</db:title>
<db:para>Specifies the destination rectangle. The coordinates are assumed to follow the normal Qt coordinate system, meaning Y runs from top to bottom.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QRectF</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml#destinationRect">destinationRect</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml#setDestinationRect">setDestinationRect</db:link></db:emphasis>(const <db:type>QRectF</db:type> &amp;<db:emphasis>outputRect</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">destinationRectChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="source-prop">
<db:title>source : Qt3DRender::QRenderTarget*</db:title>
<db:para>Specifies the source render target. When not set, the source is assumed to be the default framebuffer (i.e. the backbuffer of the current surface), if there is one.</db:para>
<db:note>
<db:para>the source and destination must not refer to the same render target.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qrendertarget.xml">Qt3DRender::QRenderTarget</db:link></db:type> *<db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml#source">source</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml#setSource">setSource</db:link></db:emphasis>(<db:type><db:link xlink:href="qt3drender-qrendertarget.xml">Qt3DRender::QRenderTarget</db:link></db:type> *<db:emphasis>source</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">sourceChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="sourceAttachmentPoint-prop">
<db:title>sourceAttachmentPoint : Qt3DRender::QRenderTargetOutput::AttachmentPoint</db:title>
<db:para>Specifies the source attachment point.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qrendertargetoutput.xml#AttachmentPoint-enum">Qt3DRender::QRenderTargetOutput::AttachmentPoint</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml#sourceAttachmentPoint">sourceAttachmentPoint</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml#setSourceAttachmentPoint">setSourceAttachmentPoint</db:link></db:emphasis>(<db:type><db:link xlink:href="qt3drender-qrendertargetoutput.xml#AttachmentPoint-enum">Qt3DRender::QRenderTargetOutput::AttachmentPoint</db:link></db:type> <db:emphasis>sourceAttachmentPoint</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">sourceAttachmentPointChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="sourceRect-prop">
<db:title>sourceRect : QRectF</db:title>
<db:para>Specifies the source rectangle. The coordinates are assumed to follow the normal Qt coordinate system, meaning Y runs from top to bottom.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QRectF</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml#sourceRect">sourceRect</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qblitframebuffer.xml#setSourceRect">setSourceRect</db:link></db:emphasis>(const <db:type>QRectF</db:type> &amp;<db:emphasis>inputRect</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">sourceRectChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QBlitFramebuffer">
<db:title>[explicit] QBlitFramebuffer::QBlitFramebuffer(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a new <db:link xlink:href="qt3drender-qblitframebuffer.xml">QBlitFramebuffer</db:link> with the given <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QBlitFramebuffer">
<db:title>[virtual noexcept] QBlitFramebuffer::~QBlitFramebuffer()</db:title>
<db:para>Destructor.</db:para>
</db:section>
<db:section xml:id="destination">
<db:title>Qt3DRender::QRenderTarget *QBlitFramebuffer::destination() const</db:title>
<db:para>Returns the destination render target.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qblitframebuffer.xml#destination-prop">destination</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#setDestination">setDestination</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="destinationAttachmentPoint">
<db:title>Qt3DRender::QRenderTargetOutput::AttachmentPoint QBlitFramebuffer::destinationAttachmentPoint() const</db:title>
<db:para>Returns the destination attachment point.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qblitframebuffer.xml#destinationAttachmentPoint-prop">destinationAttachmentPoint</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#setDestinationAttachmentPoint">setDestinationAttachmentPoint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="destinationRect">
<db:title>QRectF QBlitFramebuffer::destinationRect() const</db:title>
<db:para>Returns the destination rectangle.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qblitframebuffer.xml#destinationRect-prop">destinationRect</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#setDestinationRect">setDestinationRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="interpolationMethod">
<db:title>Qt3DRender::QBlitFramebuffer::InterpolationMethod QBlitFramebuffer::interpolationMethod() const</db:title>
<db:para>Returns the interpolation method.</db:para>
<db:note>
<db:para>Getter function for property interpolationMethod. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#setInterpolationMethod">setInterpolationMethod</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDestination">
<db:title>void QBlitFramebuffer::setDestination(Qt3DRender::QRenderTarget *<db:emphasis>destination</db:emphasis>)</db:title>
<db:para>Sets the destination render target. The default value is nullptr, in which case the destination is assumed to be be the default framebuffer (i.e. the backbuffer of the current surface), if there is one.</db:para>
<db:note>
<db:para>the source and destination must not refer to the same render target.</db:para>
</db:note>
<db:note>
<db:para>As with other nodes, <db:code role="parameter">destination</db:code> gets automatically parented to the <db:link xlink:href="qt3drender-qblitframebuffer.xml">QBlitFramebuffer</db:link> instance when no parent has been set. The lifetime is also tracked, meaning the destination reverts to nullptr in case the currently set <db:code role="parameter">destination</db:code> is destroyed.</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qblitframebuffer.xml#destination-prop">destination</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#destination">destination</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDestinationAttachmentPoint">
<db:title>void QBlitFramebuffer::setDestinationAttachmentPoint(Qt3DRender::QRenderTargetOutput::AttachmentPoint <db:emphasis>destinationAttachmentPoint</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">destinationAttachmentPoint</db:code>. Defaults to Qt3DRender::QRenderTargetOutput::AttachmentPoint::Color0.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qblitframebuffer.xml#destinationAttachmentPoint-prop">destinationAttachmentPoint</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#destinationAttachmentPoint">destinationAttachmentPoint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDestinationRect">
<db:title>void QBlitFramebuffer::setDestinationRect(const QRectF &amp;<db:emphasis>outputRect</db:emphasis>)</db:title>
<db:para>Sets the destination rectangle to <db:code role="parameter">outputRect</db:code>. The coordinates are assumed to follow the normal Qt coordinate system, meaning Y runs from top to bottom.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qblitframebuffer.xml#destinationRect-prop">destinationRect</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#destinationRect">destinationRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setInterpolationMethod">
<db:title>void QBlitFramebuffer::setInterpolationMethod(Qt3DRender::QBlitFramebuffer::InterpolationMethod <db:emphasis>interpolationMethod</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">interpolationMethod</db:code> that is applied if the image is stretched. Defaults to Linear.</db:para>
<db:note>
<db:para>Setter function for property interpolationMethod. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#interpolationMethod">interpolationMethod</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSource">
<db:title>void QBlitFramebuffer::setSource(Qt3DRender::QRenderTarget *<db:emphasis>source</db:emphasis>)</db:title>
<db:para>Sets the source render target. The default value is nullptr, in which case the source is assumed to be be the default framebuffer (i.e. the backbuffer of the current surface), if there is one.</db:para>
<db:note>
<db:para>the source and destination must not refer to the same render target.</db:para>
</db:note>
<db:note>
<db:para>As with other nodes, <db:code role="parameter">source</db:code> gets automatically parented to the <db:link xlink:href="qt3drender-qblitframebuffer.xml">QBlitFramebuffer</db:link> instance when no parent has been set. The lifetime is also tracked, meaning the source reverts to nullptr in case the currently set <db:code role="parameter">source</db:code> is destroyed.</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qblitframebuffer.xml#source-prop">source</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#source">source</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSourceAttachmentPoint">
<db:title>void QBlitFramebuffer::setSourceAttachmentPoint(Qt3DRender::QRenderTargetOutput::AttachmentPoint <db:emphasis>sourceAttachmentPoint</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">sourceAttachmentPoint</db:code>. Defaults to Qt3DRender::QRenderTargetOutput::AttachmentPoint::Color0.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qblitframebuffer.xml#sourceAttachmentPoint-prop">sourceAttachmentPoint</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#sourceAttachmentPoint">sourceAttachmentPoint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSourceRect">
<db:title>void QBlitFramebuffer::setSourceRect(const QRectF &amp;<db:emphasis>inputRect</db:emphasis>)</db:title>
<db:para>Sets the source rectangle to <db:code role="parameter">inputRect</db:code>. The coordinates are assumed to follow the normal Qt coordinate system, meaning Y runs from top to bottom.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qblitframebuffer.xml#sourceRect-prop">sourceRect</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#sourceRect">sourceRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="source">
<db:title>Qt3DRender::QRenderTarget *QBlitFramebuffer::source() const</db:title>
<db:para>Returns the source render target.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qblitframebuffer.xml#source-prop">source</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#setSource">setSource</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sourceAttachmentPoint">
<db:title>Qt3DRender::QRenderTargetOutput::AttachmentPoint QBlitFramebuffer::sourceAttachmentPoint() const</db:title>
<db:para>Returns the source attachment point.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qblitframebuffer.xml#sourceAttachmentPoint-prop">sourceAttachmentPoint</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#setSourceAttachmentPoint">setSourceAttachmentPoint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sourceRect">
<db:title>QRectF QBlitFramebuffer::sourceRect() const</db:title>
<db:para>Returns the source rectangle.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qblitframebuffer.xml#sourceRect-prop">sourceRect</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qblitframebuffer.xml#setSourceRect">setSourceRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
