<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>&lt;QtCborCommon&gt;</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.15.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The &lt;QtCborCommon&gt; header contains definitions common to both the streaming classes (<db:link xlink:href="qcborstreamreader.xml">QCborStreamReader</db:link> and <db:link xlink:href="qcborstreamwriter.xml">QCborStreamWriter</db:link>) and to <db:link xlink:href="qcborvalue.xml">QCborValue</db:link>.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QtCborCommon</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="type-documentation">
<db:title>Type Documentation</db:title>
<db:section xml:id="QCborKnownTags-enum">
<db:title>enum QCborKnownTags</db:title>
<db:enumsynopsis>
<db:enumname>QCborKnownTags</db:enumname>
<db:enumitem>
<db:enumidentifier>DateTimeString</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>UnixTime_t</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PositiveBignum</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NegativeBignum</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Decimal</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Bigfloat</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>COSE_Encrypt0</db:enumidentifier>
<db:enumvalue>16</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>COSE_Mac0</db:enumidentifier>
<db:enumvalue>17</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>COSE_Sign1</db:enumidentifier>
<db:enumvalue>18</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ExpectedBase64url</db:enumidentifier>
<db:enumvalue>21</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ExpectedBase64</db:enumidentifier>
<db:enumvalue>22</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ExpectedBase16</db:enumidentifier>
<db:enumvalue>23</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>EncodedCbor</db:enumidentifier>
<db:enumvalue>24</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Url</db:enumidentifier>
<db:enumvalue>32</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Base64url</db:enumidentifier>
<db:enumvalue>33</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Base64</db:enumidentifier>
<db:enumvalue>34</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>RegularExpression</db:enumidentifier>
<db:enumvalue>35</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MimeMessage</db:enumidentifier>
<db:enumvalue>36</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Uuid</db:enumidentifier>
<db:enumvalue>37</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>COSE_Encrypt</db:enumidentifier>
<db:enumvalue>96</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>COSE_Mac</db:enumidentifier>
<db:enumvalue>97</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>COSE_Sign</db:enumidentifier>
<db:enumvalue>98</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Signature</db:enumidentifier>
<db:enumvalue>55799</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum contains a list of CBOR tags, known at the time of the Qt implementation. This list is not meant to be complete and contains only tags that are either backed by an RFC or specifically used by the Qt implementation.</db:para>
<db:para>The authoritative list is maintained by IANA in the <db:link xlink:href="https://www.iana.org/assignments/cbor-tags/cbor-tags.xhtml">CBOR tag registry</db:link>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::DateTimeString</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>A date and time string, formatted according to RFC 3339, as refined by RFC 4287. It is the same format as <db:link xlink:href="qt.xml#DateFormat-enum">Qt::ISODate</db:link> and <db:link xlink:href="qt.xml#DateFormat-enum">Qt::ISODateWithMs</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::UnixTime_t</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>A numerical representation of seconds elapsed since 1970-01-01T00:00Z.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::PositiveBignum</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>A positive number of arbitrary length, encoded as a byte array in network byte order. For example, the number 2<db:superscript>64</db:superscript> is represented by a byte array containing the byte value 0x01 followed by 8 zero bytes.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::NegativeBignum</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>A negative number of arbirary length, encoded as the absolute value of that number, minus one. For example, a byte array containing byte value 0x02 followed by 8 zero bytes represents the number -2<db:superscript>65</db:superscript> - 1.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::Decimal</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>A decimal fraction, encoded as an array of two integers: the first is the exponent of the power of 10, the second the integral mantissa. The value 273.15 would be encoded as array [-2, 27315].</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::Bigfloat</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>Similar to Decimal, but the exponent is a power of 2 instead.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::COSE_Encrypt0</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>An Encrypt0 map as specified by <db:link xlink:href="https://tools.ietf.org/html/rfc8152">RFC 8152</db:link> (CBOR Object Signing and Encryption).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::COSE_Mac0</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>A Mac0 map as specified by <db:link xlink:href="https://tools.ietf.org/html/rfc8152">RFC 8152</db:link> (CBOR Object Signing and Encryption).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::COSE_Sign1</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td>
<db:para>A Sign1 map as specified by <db:link xlink:href="https://tools.ietf.org/html/rfc8152">RFC 8152</db:link> (CBOR Object Signing and Encryption).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::ExpectedBase64url</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>Indicates that the byte array should be encoded using Base64url if the stream is converted to JSON.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::ExpectedBase64</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>Indicates that the byte array should be encoded using Base64 if the stream is converted to JSON.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::ExpectedBase16</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>Indicates that the byte array should be encoded using Base16 (hex) if the stream is converted to JSON.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::EncodedCbor</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td>
<db:para>Indicates that the byte array contains a CBOR stream.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::Url</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
<db:td>
<db:para>Indicates that the string contains a URL.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::Base64url</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td>
<db:para>Indicates that the string contains data encoded using Base64url.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::Base64</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
<db:td>
<db:para>Indicates that the string contains data encoded using Base64.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::RegularExpression</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
<db:td>
<db:para>Indicates that the string contains a Perl-Compatible Regular Expression pattern.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::MimeMessage</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
<db:td>
<db:para>Indicates that the string contains a MIME message (according to <db:link xlink:href="https://tools.ietf.org/html/rfc2045">https://tools.ietf.org/html/rfc2045</db:link>){RFC 2045}.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::Uuid</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td>
<db:para>Indicates that the byte array contains a UUID.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::COSE_Encrypt</db:code></db:para>
</db:td>
<db:td><db:code>96</db:code></db:td>
<db:td>
<db:para>An Encrypt map as specified by <db:link xlink:href="https://tools.ietf.org/html/rfc8152">RFC 8152</db:link> (CBOR Object Signing and Encryption).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::COSE_Mac</db:code></db:para>
</db:td>
<db:td><db:code>97</db:code></db:td>
<db:td>
<db:para>A Mac map as specified by <db:link xlink:href="https://tools.ietf.org/html/rfc8152">RFC 8152</db:link> (CBOR Object Signing and Encryption).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::COSE_Sign</db:code></db:para>
</db:td>
<db:td><db:code>98</db:code></db:td>
<db:td>
<db:para>A Sign map as specified by <db:link xlink:href="https://tools.ietf.org/html/rfc8152">RFC 8152</db:link> (CBOR Object Signing and Encryption).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::Signature</db:code></db:para>
</db:td>
<db:td><db:code>55799</db:code></db:td>
<db:td>
<db:para>No change in interpretation; this tag can be used as the outermost tag in a CBOR stream as the file header.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The following tags are interpreted by <db:link xlink:href="qcborvalue.xml">QCborValue</db:link> during decoding and will produce objects with extended Qt types, and it will use those tags when encoding the same extended types.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::DateTimeString</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qdatetime.xml">QDateTime</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::UnixTime_t</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qdatetime.xml">QDateTime</db:link> (only in decoding)</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::Url</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qurl.xml">QUrl</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborKnownTags</db:emphasis>::Uuid</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="quuid.xml">QUuid</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Additionally, if a <db:link xlink:href="qcborvalue.xml">QCborValue</db:link> containing a <db:link xlink:href="qbytearray.xml">QByteArray</db:link> is tagged using one of ExpectedBase64url, ExpectedBase64 or ExpectedBase16, <db:link xlink:href="qcborvalue.xml">QCborValue</db:link> will use the expected encoding when converting to JSON (see <db:link xlink:href="qcborvalue.xml#toJsonValue">QCborValue::toJsonValue</db:link>).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtcborcommon.xml#QCborTag-enum">QCborTag</db:link></db:member>
<db:member><db:link xlink:href="qcborstreamwriter.xml#append-6">QCborStreamWriter::append</db:link>(QCborTag)</db:member>
<db:member><db:link xlink:href="qcborstreamreader.xml#isTag">QCborStreamReader::isTag</db:link>()</db:member>
<db:member><db:link xlink:href="qcborstreamreader.xml#toTag">QCborStreamReader::toTag</db:link>()</db:member>
<db:member><db:link xlink:href="qcborvalue.xml#isTag">QCborValue::isTag</db:link>()</db:member>
<db:member><db:link xlink:href="qcborvalue.xml#tag">QCborValue::tag</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QCborSimpleType-enum">
<db:title>enum QCborSimpleType</db:title>
<db:enumsynopsis>
<db:enumname>QCborSimpleType</db:enumname>
<db:enumitem>
<db:enumidentifier>False</db:enumidentifier>
<db:enumvalue>20</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>True</db:enumidentifier>
<db:enumvalue>21</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Null</db:enumidentifier>
<db:enumvalue>22</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Undefined</db:enumidentifier>
<db:enumvalue>23</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum contains the possible &quot;Simple Types&quot; for CBOR. Simple Types range from 0 to 255 and are types that carry no further value.</db:para>
<db:para>The following values are currently known:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborSimpleType</db:emphasis>::False</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>A &quot;false&quot; boolean.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborSimpleType</db:emphasis>::True</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>A &quot;true&quot; boolean.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborSimpleType</db:emphasis>::Null</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>Absence of value (null).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold">QCborSimpleType</db:emphasis>::Undefined</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>Missing or deleted value, usually an error.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Qt CBOR API supports encoding and decoding any Simple Type, whether one of those above or any other value.</db:para>
<db:para>Applications should only use further values if a corresponding specification has been published, otherwise interpretation and validation by the remote may fail. Values 24 to 31 are reserved and must not be used.</db:para>
<db:para>The current authoritative list is maintained by IANA in the <db:link xlink:href="https://www.iana.org/assignments/cbor-simple-values/cbor-simple-values.xml">Simple Values registry</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcborstreamwriter.xml#append-8">QCborStreamWriter::append</db:link>(QCborSimpleType)</db:member>
<db:member><db:link xlink:href="qcborstreamreader.xml#isSimpleType">QCborStreamReader::isSimpleType</db:link>()</db:member>
<db:member><db:link xlink:href="qcborstreamreader.xml#toSimpleType">QCborStreamReader::toSimpleType</db:link>()</db:member>
<db:member><db:link xlink:href="qcborvalue.xml#isSimpleType">QCborValue::isSimpleType</db:link>()</db:member>
<db:member><db:link xlink:href="qcborvalue.xml#toSimpleType">QCborValue::toSimpleType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QCborTag-enum">
<db:title>enum QCborTag</db:title>
<db:enumsynopsis>
<db:enumname>QCborTag</db:enumname>
<db:enumitem>
<db:enumidentifier/>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum contains no enumeration and is used only to provide type-safe access to a CBOR tag.</db:para>
<db:para>CBOR tags are 64-bit numbers that are attached to generic CBOR types to provide further semantic meaning. QCborTag may be constructed from an enumeration found in <db:link xlink:href="qtcborcommon.xml#QCborKnownTags-enum">QCborKnownTags</db:link> or directly by providing the numeric representation.</db:para>
<db:para>For example, the following creates a <db:link xlink:href="qcborvalue.xml">QCborValue</db:link> containing a byte array tagged with a tag 2.</db:para>
<db:programlisting language="cpp">   QCborValue(QCborTag(2), QByteArray(&quot;\x01\0\0\0\0\0\0\0\0&quot;, 9));
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtcborcommon.xml#QCborKnownTags-enum">QCborKnownTags</db:link></db:member>
<db:member><db:link xlink:href="qcborstreamwriter.xml#append-6">QCborStreamWriter::append</db:link>(QCborTag)</db:member>
<db:member><db:link xlink:href="qcborstreamreader.xml#isTag">QCborStreamReader::isTag</db:link>()</db:member>
<db:member><db:link xlink:href="qcborstreamreader.xml#toTag">QCborStreamReader::toTag</db:link>()</db:member>
<db:member><db:link xlink:href="qcborvalue.xml#isTag">QCborValue::isTag</db:link>()</db:member>
<db:member><db:link xlink:href="qcborvalue.xml#tag">QCborValue::tag</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
