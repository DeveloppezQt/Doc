<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSensorGestureManager Class</db:title>
<db:productname>QtSensors</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Sensors Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qsensorgesturemanager.xml">QSensorGestureManager</db:link> class manages sensor gestures, registers and creates sensor gesture plugins.</db:para>
<db:para>This class was introduced in Qt 5.1.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSensorGestureManager</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += sensors</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSensorGestureManager is part of <db:simplelist><db:member>sensorgestures_main</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Sensor Gesture plugins register their recognizers using the <db:link xlink:href="qsensorgesturemanager.xml#registerSensorGestureRecognizer">registerSensorGestureRecognizer</db:link>() function.</db:para>
<db:programlisting language="cpp">// Create a QSensorGestureManager
    QSensorGestureManager gestureManager;

// Get a list of known recognizers
    QStringList recognizersList = gestureManager.gestureIds();

// Create a QSensorGeture object for each of those gesture recognizers
        QSensorGesture *gesture = new QSensorGesture( gestureManager.gestureIds(), this);
// Connect the known signals up.
        connect(gesture, SIGNAL(detected(QString)), this, SLOT(gestureDetected(QString)));
</db:programlisting>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSensorGestureManager">
<db:title>[explicit] QSensorGestureManager::QSensorGestureManager(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs the <db:link xlink:href="qsensorgesturemanager.xml">QSensorGestureManager</db:link> as a child of <db:code role="parameter">parent</db:code></db:para>
</db:section>
<db:section xml:id="dtor.QSensorGestureManager">
<db:title>[virtual noexcept] QSensorGestureManager::~QSensorGestureManager()</db:title>
<db:para>Destroy the <db:link xlink:href="qsensorgesturemanager.xml">QSensorGestureManager</db:link></db:para>
</db:section>
<db:section xml:id="gestureIds">
<db:title>QStringList QSensorGestureManager::gestureIds() const</db:title>
<db:para>Returns the list of the currently registered gestures. Includes all the standard built-ins as well as available plugins.</db:para>
</db:section>
<db:section xml:id="newSensorGestureAvailable">
<db:title>void QSensorGestureManager::newSensorGestureAvailable()</db:title>
<db:para>Signals when a new sensor gesture becomes available for use.</db:para>
</db:section>
<db:section xml:id="recognizerSignals">
<db:title>QStringList QSensorGestureManager::recognizerSignals(const QString &amp;<db:emphasis>gestureId</db:emphasis>) const</db:title>
<db:para>Returns the list of all the gesture signals for the registered <db:code role="parameter">gestureId</db:code> gesture recognizer id.</db:para>
</db:section>
<db:section xml:id="registerSensorGestureRecognizer">
<db:title>bool QSensorGestureManager::registerSensorGestureRecognizer(QSensorGestureRecognizer *<db:emphasis>recognizer</db:emphasis>)</db:title>
<db:para>Registers the sensor recognizer <db:code role="parameter">recognizer</db:code> for use. <db:link xlink:href="qsensorgesturemanager.xml">QSensorGestureManager</db:link> retains ownership of the recognizer object. Returns true unless the gesture has already been registered, in which case the object is deleted.</db:para>
</db:section>
<db:section xml:id="sensorGestureRecognizer">
<db:title>[static] QSensorGestureRecognizer *QSensorGestureManager::sensorGestureRecognizer(const QString &amp;<db:emphasis>id</db:emphasis>)</db:title>
<db:para>Returns the sensor gesture object for the recognizer <db:code role="parameter">id</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
