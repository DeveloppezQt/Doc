<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ObjectModel QML Type</db:title>
<db:productname>QtQmlModels</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Qml Models Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Defines a set of items to be used as a model.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQml.Models</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>ObjectModel is part of <db:simplelist><db:member>qtquick-models</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>An <db:link xlink:href="qml-qtqml-models-objectmodel.xml">ObjectModel</db:link> contains the visual items to be used in a view. When an <db:link xlink:href="qml-qtqml-models-objectmodel.xml">ObjectModel</db:link> is used in a view, the view does not require a delegate since the <db:link xlink:href="qml-qtqml-models-objectmodel.xml">ObjectModel</db:link> already contains the visual delegate (items).</db:para>
<db:para>An item can determine its index within the model via the <db:link xlink:href="qml-qtqml-models-objectmodel.xml#index-attached-prop">index</db:link> attached property.</db:para>
<db:para>The example below places three colored rectangles in a <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>.</db:para>
<db:programlisting language="cpp">import QtQuick 2.0
import QtQml.Models 2.1

Rectangle {
    ObjectModel {
        id: itemModel
        Rectangle { height: 30; width: 80; color: &quot;red&quot; }
        Rectangle { height: 30; width: 80; color: &quot;green&quot; }
        Rectangle { height: 30; width: 80; color: &quot;blue&quot; }
    }

    ListView {
        anchors.fill: parent
        model: itemModel
    }
}
</db:programlisting>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/objectmodel.png"/>
</db:imageobject>
</db:mediaobject>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-views-example.xml">Qt Quick Examples - Views</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="count-prop">
<db:title>count : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>count</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The number of items in the model. This property is readonly.</db:para>
</db:section>
</db:section>
<db:section xml:id="attached-property-documentation">
<db:title>Attached Property Documentation</db:title>
<db:section xml:id="index-attached-prop">
<db:title>ObjectModel.index : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>ObjectModel.index</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property holds the index of this delegate's item within the model.</db:para>
<db:para>It is attached to each instance of the delegate.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="append-method">
<db:title>append(object <db:emphasis>item</db:emphasis>)</db:title>
<db:para>Appends a new <db:code role="parameter">item</db:code> to the end of the model.</db:para>
<db:programlisting language="cpp">objectModel.append(objectComponent.createObject())
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtqml-models-objectmodel.xml#insert-method">insert</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtqml-models-objectmodel.xml#remove-method">remove</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clear-method">
<db:title>clear()</db:title>
<db:para>Clears all items from the model.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtqml-models-objectmodel.xml#append-method">append</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtqml-models-objectmodel.xml#remove-method">remove</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="get-method">
<db:title>object get(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Returns the item at <db:code role="parameter">index</db:code> in the model. This allows the item to be accessed or modified from JavaScript:</db:para>
<db:programlisting language="cpp">Component.onCompleted: {
    objectModel.append(objectComponent.createObject())
    console.log(objectModel.get(0).objectName);
    objectModel.get(0).objectName = &quot;first&quot;;
}
</db:programlisting>
<db:para>The <db:code role="parameter">index</db:code> must be an element in the list.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtqml-models-objectmodel.xml#append-method">append</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="insert-method">
<db:title>insert(int <db:emphasis>index</db:emphasis>, object <db:emphasis>item</db:emphasis>)</db:title>
<db:para>Inserts a new <db:code role="parameter">item</db:code> to the model at position <db:code role="parameter">index</db:code>.</db:para>
<db:programlisting language="cpp">objectModel.insert(2, objectComponent.createObject())
</db:programlisting>
<db:para>The <db:code role="parameter">index</db:code> must be to an existing item in the list, or one past the end of the list (equivalent to append).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtqml-models-objectmodel.xml#append-method">append</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtqml-models-objectmodel.xml#remove-method">remove</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="move-method">
<db:title>move(int <db:emphasis>from</db:emphasis>, int <db:emphasis>to</db:emphasis>, int <db:emphasis>n</db:emphasis> = 1)</db:title>
<db:para>Moves <db:code role="parameter">n</db:code> items <db:code role="parameter">from</db:code> one position <db:code role="parameter">to</db:code> another.</db:para>
<db:para>The from and to ranges must exist; for example, to move the first 3 items to the end of the model:</db:para>
<db:programlisting language="cpp">objectModel.move(0, objectModel.count - 3, 3)
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtqml-models-objectmodel.xml#append-method">append</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="remove-method">
<db:title>remove(int <db:emphasis>index</db:emphasis>, int <db:emphasis>n</db:emphasis> = 1)</db:title>
<db:para>Removes <db:code role="parameter">n</db:code> items at <db:code role="parameter">index</db:code> from the model.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtqml-models-objectmodel.xml#clear-method">clear</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
