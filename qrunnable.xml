<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QRunnable Class</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qrunnable.xml">QRunnable</db:link> class is the base class for all runnable objects.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QRunnable</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Core)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Core)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QRunnable is part of <db:simplelist><db:member>thread</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qrunnable.xml">QRunnable</db:link> class is an interface for representing a task or piece of code that needs to be executed, represented by your reimplementation of the <db:link xlink:href="qrunnable.xml#run">run</db:link>() function.</db:para>
<db:para>You can use <db:link xlink:href="qthreadpool.xml">QThreadPool</db:link> to execute your code in a separate thread. <db:link xlink:href="qthreadpool.xml">QThreadPool</db:link> deletes the <db:link xlink:href="qrunnable.xml">QRunnable</db:link> automatically if <db:link xlink:href="qrunnable.xml#autoDelete">autoDelete</db:link>() returns true (the default). Use <db:link xlink:href="qrunnable.xml#setAutoDelete">setAutoDelete</db:link>() to change the auto-deletion flag.</db:para>
<db:para><db:link xlink:href="qthreadpool.xml">QThreadPool</db:link> supports executing the same <db:link xlink:href="qrunnable.xml">QRunnable</db:link> more than once by calling <db:link xlink:href="qthreadpool.xml#tryStart">QThreadPool::tryStart</db:link>(this) from within the <db:link xlink:href="qrunnable.xml#run">run</db:link>() function. If <db:link xlink:href="qrunnable.xml#autoDelete">autoDelete</db:link> is enabled the <db:link xlink:href="qrunnable.xml">QRunnable</db:link> will be deleted when the last thread exits the run function. Calling <db:link xlink:href="qthreadpool.xml#start">QThreadPool::start</db:link>() multiple times with the same <db:link xlink:href="qrunnable.xml">QRunnable</db:link> when <db:link xlink:href="qrunnable.xml#autoDelete">autoDelete</db:link> is enabled creates a race condition and is not recommended.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qthreadpool.xml">QThreadPool</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QRunnable-1">
<db:title>[constexpr] QRunnable::QRunnable()</db:title>
<db:constructorsynopsis>
<db:methodname>QRunnable</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QRunnable()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qrunnable.xml">QRunnable</db:link>. Auto-deletion is enabled by default.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrunnable.xml#autoDelete">autoDelete</db:link>()</db:member>
<db:member><db:link xlink:href="qrunnable.xml#setAutoDelete">setAutoDelete</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dtor.QRunnable">
<db:title>[virtual] QRunnable::~QRunnable()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QRunnable</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QRunnable()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para><db:link xlink:href="qrunnable.xml">QRunnable</db:link> virtual destructor.</db:para>
</db:section>
<db:section xml:id="autoDelete">
<db:title>bool QRunnable::autoDelete() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>autoDelete</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool autoDelete() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true is auto-deletion is enabled; false otherwise.</db:para>
<db:para>If auto-deletion is enabled, <db:link xlink:href="qthreadpool.xml">QThreadPool</db:link> will automatically delete this runnable after calling <db:link xlink:href="qrunnable.xml#run">run</db:link>(); otherwise, ownership remains with the application programmer.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrunnable.xml#setAutoDelete">setAutoDelete</db:link>()</db:member>
<db:member><db:link xlink:href="qthreadpool.xml">QThreadPool</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="create">
<db:title>[static, since 5.15] QRunnable *QRunnable::create(std::function&lt;void ()&gt; <db:emphasis>functionToRun</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QRunnable *</db:type>
<db:methodname>create</db:methodname>
<db:methodparam>
<db:type>std::function&lt;void ()&gt;</db:type>
<db:parameter>functionToRun</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRunnable * create(std::function&lt;void ()&gt; functionToRun)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Creates a <db:link xlink:href="qrunnable.xml">QRunnable</db:link> that calls <db:code role="parameter">functionToRun</db:code> in <db:link xlink:href="qrunnable.xml#run">run</db:link>().</db:para>
<db:para>Auto-deletion is enabled by default.</db:para>
<db:para>This function was introduced in Qt 5.15.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrunnable.xml#run">run</db:link>()</db:member>
<db:member><db:link xlink:href="qrunnable.xml#autoDelete">autoDelete</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="run">
<db:title>[pure virtual] void QRunnable::run()</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>run</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void run() = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Implement this pure virtual function in your subclass.</db:para>
</db:section>
<db:section xml:id="setAutoDelete">
<db:title>void QRunnable::setAutoDelete(bool <db:emphasis>autoDelete</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setAutoDelete</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>autoDelete</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setAutoDelete(bool autoDelete)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Enables auto-deletion if <db:code role="parameter">autoDelete</db:code> is true; otherwise auto-deletion is disabled.</db:para>
<db:para>If auto-deletion is enabled, <db:link xlink:href="qthreadpool.xml">QThreadPool</db:link> will automatically delete this runnable after calling <db:link xlink:href="qrunnable.xml#run">run</db:link>(); otherwise, ownership remains with the application programmer.</db:para>
<db:para>Note that this flag must be set before calling <db:link xlink:href="qthreadpool.xml#start">QThreadPool::start</db:link>(). Calling this function after <db:link xlink:href="qthreadpool.xml#start">QThreadPool::start</db:link>() results in undefined behavior.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrunnable.xml#autoDelete">autoDelete</db:link>()</db:member>
<db:member><db:link xlink:href="qthreadpool.xml">QThreadPool</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
