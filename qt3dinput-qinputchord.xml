<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QInputChord Class</db:title>
<db:subtitle>Qt3DInput::QInputChord</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qt3dinput-qinputchord.xml">QInputChord</db:link> represents a set of <db:link xlink:href="qt3dinput-qabstractactioninput.xml">QAbstractActionInput</db:link>'s that must be triggerd at once.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QInputChord</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3dinput)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3dinput)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dinput</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-input-inputchord.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dinput-qabstractactioninput.xml" xlink:role="class">Qt3DInput::QAbstractActionInput</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="timeout-prop">
<db:title>timeout : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>timeout</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">timeout</db:synopsisinfo>
<db:synopsisinfo role="setter">setTimeout</db:synopsisinfo>
<db:synopsisinfo role="notifier">timeoutChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The time in which all <db:link xlink:href="qt3dinput-qabstractactioninput.xml">QAbstractActionInput</db:link>'s in the input chord must triggered within. The time is in milliseconds.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">timeout</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3dinput-qinputchord.xml#setTimeout">setTimeout</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>timeout</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">timeoutChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>timeout</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QInputChord">
<db:title>[explicit] QInputChord::QInputChord(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QInputChord</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QNode *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QInputChord(Qt3DCore::QNode *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qt3dinput-qinputchord.xml">QInputChord</db:link> with parent <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="addChord">
<db:title>void QInputChord::addChord(Qt3DInput::QAbstractActionInput *<db:emphasis>input</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addChord</db:methodname>
<db:methodparam>
<db:type>Qt3DInput::QAbstractActionInput *</db:type>
<db:parameter>input</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addChord(Qt3DInput::QAbstractActionInput *input)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Append the <db:link xlink:href="qt3dinput-qabstractactioninput.xml">QAbstractActionInput</db:link> <db:code role="parameter">input</db:code> to the end of this <db:link xlink:href="qt3dinput-qinputchord.xml">QInputChord</db:link>'s chord vector.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3dinput-qinputchord.xml#removeChord">removeChord</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="chords">
<db:title>QList&lt;Qt3DInput::QAbstractActionInput *&gt; QInputChord::chords() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;Qt3DInput::QAbstractActionInput *&gt;</db:type>
<db:methodname>chords</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;Qt3DInput::QAbstractActionInput *&gt; chords() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the <db:link xlink:href="qt3dinput-qinputchord.xml">QInputChord</db:link>'s chord vector.</db:para>
</db:section>
<db:section xml:id="removeChord">
<db:title>void QInputChord::removeChord(Qt3DInput::QAbstractActionInput *<db:emphasis>input</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>removeChord</db:methodname>
<db:methodparam>
<db:type>Qt3DInput::QAbstractActionInput *</db:type>
<db:parameter>input</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void removeChord(Qt3DInput::QAbstractActionInput *input)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Remove the <db:link xlink:href="qt3dinput-qabstractactioninput.xml">QAbstractActionInput</db:link> <db:code role="parameter">input</db:code> from this <db:link xlink:href="qt3dinput-qinputchord.xml">QInputChord</db:link>'s chord vector.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3dinput-qinputchord.xml#addChord">addChord</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTimeout">
<db:title>void QInputChord::setTimeout(int <db:emphasis>timeout</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setTimeout</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>timeout</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">timeout</db:synopsisinfo>
<db:synopsisinfo role="signature">void setTimeout(int timeout)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the time in which all <db:link xlink:href="qt3dinput-qabstractactioninput.xml">QAbstractActionInput</db:link>'s in the input chord must triggered within to <db:code role="parameter">timeout</db:code>. The time is in milliseconds</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3dinput-qinputchord.xml#timeout-prop">timeout</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3dinput-qinputchord.xml#timeout-prop">timeout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
