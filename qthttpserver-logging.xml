<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt HTTP Server Logging</db:title>
<db:productname>QtHttpServer</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Lightweight HTTP Server Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Shows how the <db:link xlink:href="qthttpserver-module.xml">QtHttpServer</db:link> module logging can be configured.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt HTTP Server logs using the <db:link xlink:href="qloggingcategory.xml">QLoggingCategory</db:link> class. The logging categories starting with &quot;qt.httpserver&quot; are used by the different parts of the Qt Http Server. These can be enabled and disabled as described in <db:link xlink:href="qloggingcategory.xml">QLoggingCategory</db:link>.</db:para>
<db:para>To dynamically enable or disable what is being logged call <db:link xlink:href="qloggingcategory.xml#setFilterRules">QLoggingCategory::setFilterRules</db:link>(). A server can add a URL to change the filter rules, by using the <db:link xlink:href="qhttpserver.xml#route">QHttpServer::route</db:link>() function as shown below.</db:para>
<db:programlisting language="cpp">#include &amp;lt;QCoreApplication&amp;gt;
#include &amp;lt;QHttpServer&amp;gt;
#include &amp;lt;QLoggingCategory&amp;gt;

int main(int argc, char** argv)
{
    QCoreApplication app(argc, argv);
    QHttpServer server;
    server.listen(QHostAddress::LocalHost, 8000);

    server.route(&quot;/loggingFilter&quot;, [] (const QHttpServerRequest &amp;amp;request) {
        QString filter;
        QTextStream result(&amp;amp;filter);
        for (auto pair : request.query().queryItems()) {
            if (!filter.isEmpty())
                result &amp;lt;&amp;lt; &quot;\n&quot;;
            result &amp;lt;&amp;lt; pair.first &amp;lt;&amp;lt; &quot;=&quot; &amp;lt;&amp;lt; pair.second;
        }
        QLoggingCategory::setFilterRules(filter);
        return filter;
    });

    return app.exec();
}
</db:programlisting>
<db:para>The filter rules can now be set using: &quot;http://127.0.0.1:8000/loggingFilter?qt.httpserver=true&amp;appname.access=true&quot;. In this case all Qt HTTP Server logging will be enabled, and in addition the hypothetical logging category &quot;appname.access&quot; is enabled.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml">QLoggingCategory</db:link></db:member>
<db:member><db:link xlink:href="qhttpserver.xml">QHttpServer</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
