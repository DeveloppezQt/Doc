<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAbstractAnimationClip Class</db:title>
<db:subtitle>Qt3DAnimation::QAbstractAnimationClip</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qt3danimation-qabstractanimationclip.xml">QAbstractAnimationClip</db:link> is the base class for types providing key frame animation data.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAbstractAnimationClip</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3danimation)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3danimation)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3danimation</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qnode.xml" xlink:role="class">Qt3DCore::QNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3danimation-qanimationclip.xml" xlink:role="class">Qt3DAnimation::QAnimationClip</db:link> and <db:link xlink:href="qt3danimation-qanimationcliploader.xml" xlink:role="class">Qt3DAnimation::QAnimationClipLoader</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>To utilise the key frame animation framework in the Qt 3D Animation module the animator component in use needs to be provided with the key frame animation data. The animation data is provided by one of the concrete subclasses of <db:link xlink:href="qt3danimation-qabstractanimationclip.xml">QAbstractAnimationClip</db:link>:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qt3danimation-qanimationclip.xml">Qt3DAnimation::QAnimationClip</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt3danimation-qanimationcliploader.xml">Qt3DAnimation::QAnimationClipLoader</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para><db:link xlink:href="qt3danimation-qanimationclip.xml">QAnimationClip</db:link> should be used when you want to create the animation data programmatically within your application. The actual data is set with a <db:link xlink:href="qt3danimation-qanimationclipdata.xml">QAnimationClipData</db:link> value type.</db:para>
<db:para>If you are loading baked animation data from a file, e.g. as created by an artist, then use the <db:link xlink:href="qt3danimation-qanimationcliploader.xml">QAnimationClipLoader</db:link> class and set its <db:code>source</db:code> property.</db:para>
<db:para>Once the animation clip has been populated with data using the above methods, the read-only duration property will be updated by the Qt 3D Animation backend.</db:para>
<db:para>The typical usage of animation clips is:</db:para>
<db:programlisting language="cpp">auto animator = new QClipAnimator();
auto clip = new QAnimationClipLoader();
clip-&amp;gt;setSource(QUrl::fromLocalFile(&quot;bounce.json&quot;));
animator-&amp;gt;setClip(clip);
animator-&amp;gt;setChannelMapper(...);
animator-&amp;gt;setRunning(true);
</db:programlisting>
<db:para>Animation clips are also used as the leaf node values in animation blend trees:</db:para>
<db:programlisting language="cpp">// Create leaf nodes of blend tree
auto slideClipValue = new QClipBlendValue(
    new QAnimationClipLoader(QUrl::fromLocalFile(&quot;slide.json&quot;)));
auto bounceClipValue = new QClipBlendValue(
    new QAnimationClipLoader(QUrl::fromLocalFile(&quot;bounce.json&quot;)));

// Create blend tree inner node
auto additiveNode = new QAdditiveClipBlend();
additiveNode-&amp;gt;setBaseClip(slideClipValue);
additiveNode-&amp;gt;setAdditiveClip(bounceClipValue);
additiveNode-&amp;gt;setAdditiveFactor(0.5f);

// Run the animator
auto animator = new QBlendedClipAnimator();
animator-&amp;gt;setBlendTree(additiveNode);
animator-&amp;gt;setChannelMapper(...);
animator-&amp;gt;setRunning(true);
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3danimation-qanimationclip.xml">Qt3DAnimation::QAnimationClip</db:link></db:member>
<db:member><db:link xlink:href="qt3danimation-qanimationcliploader.xml">Qt3DAnimation::QAnimationClipLoader</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="duration-prop">
<db:title>[read-only] duration : const float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>duration</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">duration</db:synopsisinfo>
<db:synopsisinfo role="notifier">durationChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the duration of the animation clip in seconds. Gets updated once the animation data is provided to Qt 3D using one of the concrete subclasses.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">duration</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">durationChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>duration</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="dtor.QAbstractAnimationClip">
<db:title>[virtual] QAbstractAnimationClip::~QAbstractAnimationClip()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QAbstractAnimationClip</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QAbstractAnimationClip()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys this animation clip.</db:para>
</db:section>
</db:section>
</db:article>
