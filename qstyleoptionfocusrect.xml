<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QStyleOptionFocusRect Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qstyleoptionfocusrect.xml">QStyleOptionFocusRect</db:link> class is used to describe the parameters for drawing a focus rectangle with <db:link xlink:href="qstyle.xml">QStyle</db:link>.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QStyleOptionFocusRect</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qstyleoption.xml" xlink:role="class">QStyleOption</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>For performance reasons, there are few member functions and the access to the member variables is direct (i.e., using the <db:code>.</db:code> or <db:code>-&gt;</db:code> operator). This makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</db:para>
<db:para>For an example demonstrating how style options can be used, see the <db:link xlink:href="qtwidgets-widgets-styles-example.xml">Styles</db:link> example.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="StyleOptionType-enum">
<db:title>enum QStyleOptionFocusRect::StyleOptionType</db:title>
<db:enumsynopsis>
<db:enumname>StyleOptionType</db:enumname>
<db:enumitem>
<db:enumidentifier>Type</db:enumidentifier>
<db:enumvalue>SO_FocusRect</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum is used to hold information about the type of the style option, and is defined for each <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionfocusrect.xml">QStyleOptionFocusRect</db:link></db:emphasis>::Type</db:code></db:para>
</db:td>
<db:td><db:code>SO_FocusRect</db:code></db:td>
<db:td>
<db:para>The type of style option provided (<db:link xlink:href="qstyleoption.xml#OptionType-enum">SO_FocusRect</db:link> for this class).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The type is used internally by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link>, its subclasses, and <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>() to determine the type of style option. In general you do not need to worry about this unless you want to create your own <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass and your own styles.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionfocusrect.xml#StyleOptionVersion-enum">StyleOptionVersion</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="StyleOptionVersion-enum">
<db:title>enum QStyleOptionFocusRect::StyleOptionVersion</db:title>
<db:enumsynopsis>
<db:enumname>StyleOptionVersion</db:enumname>
<db:enumitem>
<db:enumidentifier>Version</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum is used to hold information about the version of the style option, and is defined for each <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionfocusrect.xml">QStyleOptionFocusRect</db:link></db:emphasis>::Version</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>1</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The version is used by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclasses to implement extensions without breaking compatibility. If you use <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>(), you normally do not need to check it.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionfocusrect.xml#StyleOptionType-enum">StyleOptionType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QStyleOptionFocusRect">
<db:title>QStyleOptionFocusRect::QStyleOptionFocusRect()</db:title>
<db:constructorsynopsis>
<db:methodname>QStyleOptionFocusRect</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QStyleOptionFocusRect()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qstyleoptionfocusrect.xml">QStyleOptionFocusRect</db:link>, initializing the members variables to their default values.</db:para>
</db:section>
<db:section xml:id="QStyleOptionFocusRect-1">
<db:title>QStyleOptionFocusRect::QStyleOptionFocusRect(const QStyleOptionFocusRect &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QStyleOptionFocusRect</db:methodname>
<db:methodparam>
<db:type>const QStyleOptionFocusRect &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QStyleOptionFocusRect(const QStyleOptionFocusRect &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a copy of the <db:code role="parameter">other</db:code> style option.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-variable-documentation">
<db:title>Member Variable Documentation</db:title>
<db:section xml:id="backgroundColor-var">
<db:title>QColor QStyleOptionFocusRect::backgroundColor</db:title>
<db:fieldsynopsis>
<db:type>QColor</db:type>
<db:varname>backgroundColor</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the background color on which the focus rectangle is being drawn</db:para>
<db:para>The default value is an invalid color with the RGB value (0, 0, 0). An invalid color is a color that is not properly set up for the underlying window system.</db:para>
</db:section>
</db:section>
</db:article>
