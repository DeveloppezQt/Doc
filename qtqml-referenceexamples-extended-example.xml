<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Extending QML - Extension Objects Example</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Extension Objects.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>This example builds on:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtqml-referenceexamples-adding-example.xml">Extending QML - Adding Types Example</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Shows how to use <db:link xlink:href="qqmlengine.xml#QML_EXTENDED">QML_EXTENDED</db:link> to provide an <db:link xlink:href="qtqml-cppintegration-definetypes.xml#registering-extension-objects">extension object</db:link> to a <db:link xlink:href="qlineedit.xml">QLineEdit</db:link> without modifying or subclassing it.</db:para>
<db:para>Firstly, the LineEditExtension class is registered with the QML system as an extension of <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>. We declare a foreign type to do this as we cannot modify Qt's internal <db:link xlink:href="qlineedit.xml">QLineEdit</db:link> class.</db:para>
<db:programlisting language="cpp">struct QLineEditForeign
{
    Q_GADGET
    QML_FOREIGN(QLineEdit)
    QML_NAMED_ELEMENT(QLineEdit)
    QML_EXTENDED(LineEditExtension)
};
</db:programlisting>
<db:para>Note the usage of <db:link xlink:href="qqmlengine.xml#QML_NAMED_ELEMENT">QML_NAMED_ELEMENT</db:link>() instead of <db:link xlink:href="qqmlengine.xml#QML_ELEMENT">QML_ELEMENT</db:link>. <db:link xlink:href="qqmlengine.xml#QML_ELEMENT">QML_ELEMENT</db:link> uses the name of the containing type by default, &quot;LineEditExtension&quot; in this case. As the class being an extension class is an implementation detail, we choose the more natural name &quot;LineEdit&quot; instead</db:para>
<db:para>The QML engine then instantiates a <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>:</db:para>
<db:programlisting language="cpp">    QQmlEngine engine;
    QQmlComponent component(&amp;amp;engine, QUrl(&quot;qrc:example.qml&quot;));
    auto *edit = qobject_cast&amp;lt;QLineEdit *&amp;gt;(component.create());
</db:programlisting>
<db:para>In QML, a property is set on the line edit that only exists in the LineEditExtension class:</db:para>
<db:programlisting language="qml">QLineEdit {
    leftMargin: 20
}
</db:programlisting>
<db:para>The extension type performs calls on the <db:link xlink:href="qlineedit.xml">QLineEdit</db:link> that otherwise will not be accessible to the QML engine.</db:para>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtdeclarative.git/tree/examples/qml/referenceexamples/extended?h=6.0">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
