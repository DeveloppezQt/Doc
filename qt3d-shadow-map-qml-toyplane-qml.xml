<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt 3D: Shadow Map QML Example</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A Qt 3D QML application that illustrates how to render a scene in Qt 3D with shadows.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2014 Klaralvdalens Datakonsult AB (KDAB).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the Qt3D module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL3$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 3 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPLv3 included in the
** packaging of this file. Please review the following information to
** ensure the GNU Lesser General Public License version 3 requirements
** will be met: https://www.gnu.org/licenses/lgpl.html.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 2.0 or later as published by the Free
** Software Foundation and appearing in the file LICENSE.GPL included in
** the packaging of this file. Please review the following information to
** ensure the GNU General Public License version 2.0 requirements will be
** met: http://www.gnu.org/licenses/gpl-2.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.1 as QQ2
import Qt3D.Core 2.0
import Qt3D.Render 2.0

Entity {
    id: root
    property Material material

    Mesh {
        id: toyplaneMesh
        source: &quot;assets/obj/toyplane.obj&quot;
    }

    Transform {
        id: toyplaneTransform

        property real rollAngle: 0
        property real pitchAngle: 15
        property real altitude: 5
        property real angle: 0
        property real scaleFactor: 10

        QQ2.Behavior on rollAngle { QQ2.SpringAnimation { spring: 2; damping: 0.2} }

        matrix: {
            var m = Qt.matrix4x4();
            m.translate(Qt.vector3d(Math.sin(angle * Math.PI / 180) * scaleFactor,
                                    altitude,
                                    Math.cos(angle * Math.PI / 180) * scaleFactor));
            m.rotate(angle, Qt.vector3d(0, 1, 0));
            m.rotate(pitchAngle, Qt.vector3d(0, 0, 1));
            m.rotate(rollAngle, Qt.vector3d(1, 0, 0));
            m.scale(1.0 / toyplaneTransform.scaleFactor);
            return m;
        }
    }

    QQ2.NumberAnimation {
        target: toyplaneTransform

        running: true
        loops: QQ2.Animation.Infinite

        property: &quot;angle&quot;
        duration: 10000
        from: 0
        to: 360
    }

    // Altitude / Pitch animation
    QQ2.SequentialAnimation {
        running: true
        loops: QQ2.Animation.Infinite
        QQ2.ParallelAnimation {
            QQ2.SequentialAnimation {
                QQ2.NumberAnimation { target: toyplaneTransform; property: &quot;pitchAngle&quot;; from: 0; to: 30; duration: 2000; easing.type: QQ2.Easing.OutQuad }
                QQ2.NumberAnimation { target: toyplaneTransform; property: &quot;pitchAngle&quot;; from: 30; to: 0; duration: 2000; easing.type: QQ2.Easing.OutSine }
            }
            QQ2.NumberAnimation { target: toyplaneTransform; property: &quot;altitude&quot;; to: 5; duration: 4000; easing.type: QQ2.Easing.InOutCubic }
        }
        QQ2.PauseAnimation { duration: 1500 }
        QQ2.ParallelAnimation {
            QQ2.SequentialAnimation {
                QQ2.NumberAnimation { target: toyplaneTransform; property: &quot;pitchAngle&quot;; from: 0; to: -30; duration: 1000; easing.type: QQ2.Easing.OutQuad }
                QQ2.NumberAnimation { target: toyplaneTransform; property: &quot;pitchAngle&quot;; from: -30; to: 0; duration: 5000; easing.type: QQ2.Easing.OutSine }
            }
            QQ2.NumberAnimation { target: toyplaneTransform; property: &quot;altitude&quot;; to: 0; duration: 6000; easing.type: QQ2.Easing.InOutCubic}
        }
        QQ2.PauseAnimation { duration: 1500 }
    }

    // Roll Animation
    QQ2.SequentialAnimation {
        running: true
        loops: QQ2.Animation.Infinite
        QQ2.NumberAnimation { target: toyplaneTransform; property: &quot;rollAngle&quot;; to: 360; duration: 1500; easing.type: QQ2.Easing.InOutQuad }
        QQ2.PauseAnimation { duration: 1000 }
        QQ2.NumberAnimation { target: toyplaneTransform; property: &quot;rollAngle&quot;; from: 0; to: 30; duration: 1000; easing.type: QQ2.Easing.OutQuart }
        QQ2.PauseAnimation { duration: 1500 }
        QQ2.NumberAnimation { target: toyplaneTransform; property: &quot;rollAngle&quot;; from: 30; to: -30; duration: 1000; easing.type: QQ2.Easing.OutQuart }
        QQ2.PauseAnimation { duration: 1500 }
        QQ2.NumberAnimation { target: toyplaneTransform; property: &quot;rollAngle&quot;; from: -30; to: 0; duration: 750; easing.type: QQ2.Easing.OutQuart }
        QQ2.PauseAnimation { duration: 2000 }
    }

    components: [
        toyplaneMesh,
        toyplaneTransform,
        material
    ]
}

</db:programlisting>
</db:article>
