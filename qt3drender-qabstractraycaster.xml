<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAbstractRayCaster Class</db:title>
<db:subtitle>Qt3DRender::QAbstractRayCaster</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>An abstract base class for ray casting in 3d scenes.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAbstractRayCaster</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qraycaster.xml" xlink:role="class">Qt3DRender::QRayCaster</db:link> and <db:link xlink:href="qt3drender-qscreenraycaster.xml" xlink:role="class">Qt3DRender::QScreenRayCaster</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-abstractraycaster.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qcomponent.xml" xlink:role="class">Qt3DCore::QComponent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qraycaster.xml" xlink:role="class">Qt3DRender::QRayCaster</db:link> and <db:link xlink:href="qt3drender-qscreenraycaster.xml" xlink:role="class">Qt3DRender::QScreenRayCaster</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qt3drender-qabstractraycaster.xml">Qt3DRender::QAbstractRayCaster</db:link> is an abstract base class for casting rays into a 3d scene. <db:link xlink:href="qt3drender-qabstractraycaster.xml">Qt3DRender::QAbstractRayCaster</db:link> can not be directly instantiated, but rather through its subclasses. <db:link xlink:href="qt3drender-qabstractraycaster.xml">QAbstractRayCaster</db:link> specifies common properties for all ray casters, such as run mode and layer handling, while leaving the actual ray casting details to the subclasses.</db:para>
<db:para>Ray castings differs from picking (using <db:link xlink:href="qt3drender-qobjectpicker.xml">Qt3DRender::QObjectPicker</db:link>) in that it does not require mouse events to trigger.</db:para>
<db:para>By default, the instances of <db:link xlink:href="qt3drender-qabstractraycaster.xml">Qt3DRender::QAbstractRayCaster</db:link> are disabled. When enabled, the specified ray will be tested for intersecting objects at every frame. The <db:link xlink:href="qt3drender-qabstractraycaster.xml#hits-prop">QAbstractRayCaster::hits</db:link> property will be updated with the results of the ray casting, even if no objects are found.</db:para>
<db:para>The <db:link xlink:href="qt3drender-qpickingsettings.xml">Qt3DRender::QPickingSettings</db:link> can be used to control the ray casting, such as which primitives are tested and how the results are returned.</db:para>
<db:para>Furthermore, <db:link xlink:href="qt3drender-qlayer.xml">Qt3DRender::QLayer</db:link> components can be used to control how entities, or entity sub-graphs, react to ray casting.</db:para>
<db:note>
<db:para>Components derived from <db:link xlink:href="qt3drender-qabstractraycaster.xml">QAbstractRayCaster</db:link> should not be shared amount multiple entities.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qraycaster.xml">Qt3DRender::QRayCaster</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qscreenraycaster.xml">Qt3DRender::QScreenRayCaster</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qobjectpicker.xml">Qt3DRender::QObjectPicker</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qpickingsettings.xml">Qt3DRender::QPickingSettings</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qnopicking.xml">Qt3DRender::QNoPicking</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="FilterMode-enum">
<db:title>enum QAbstractRayCaster::FilterMode</db:title>
<db:enumsynopsis>
<db:enumname>FilterMode</db:enumname>
<db:enumitem>
<db:enumidentifier>AcceptAnyMatchingLayers</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AcceptAllMatchingLayers</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DiscardAnyMatchingLayers</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DiscardAllMatchingLayers</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>Specifies the rules for selecting entities to test for raycasting.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qabstractraycaster.xml">QAbstractRayCaster</db:link></db:emphasis>::AcceptAnyMatchingLayers</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Accept entities that reference one or more <db:link xlink:href="qt3drender-qlayer.xml">QLayer</db:link> objects added to this <db:link xlink:href="qt3drender-qabstractraycaster.xml">QAbstractRayCaster</db:link>. This is the default</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qabstractraycaster.xml">QAbstractRayCaster</db:link></db:emphasis>::AcceptAllMatchingLayers</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Accept entities that reference all the <db:link xlink:href="qt3drender-qlayer.xml">QLayer</db:link> objects added to this <db:link xlink:href="qt3drender-qabstractraycaster.xml">QAbstractRayCaster</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qabstractraycaster.xml">QAbstractRayCaster</db:link></db:emphasis>::DiscardAnyMatchingLayers</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Discard entities that reference one or more <db:link xlink:href="qt3drender-qlayer.xml">QLayer</db:link> objects added to this <db:link xlink:href="qt3drender-qabstractraycaster.xml">QAbstractRayCaster</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qabstractraycaster.xml">QAbstractRayCaster</db:link></db:emphasis>::DiscardAllMatchingLayers</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Discard entities that reference all <db:link xlink:href="qt3drender-qlayer.xml">QLayer</db:link> objects added to this <db:link xlink:href="qt3drender-qabstractraycaster.xml">QAbstractRayCaster</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="RunMode-enum">
<db:title>enum QAbstractRayCaster::RunMode</db:title>
<db:enumsynopsis>
<db:enumname>RunMode</db:enumname>
<db:enumitem>
<db:enumidentifier>Continuous</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SingleShot</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enumeration specifies how often ray casting is performed</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qabstractraycaster.xml">QAbstractRayCaster</db:link></db:emphasis>::Continuous</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Ray casting is performed at every frame as long as the component is enabled.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qabstractraycaster.xml">QAbstractRayCaster</db:link></db:emphasis>::SingleShot</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Ray casting is done once then the component disables itself. This is the default</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="filterMode-prop">
<db:title>filterMode : FilterMode</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>FilterMode</db:type>
<db:varname>filterMode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">filterMode</db:synopsisinfo>
<db:synopsisinfo role="setter">setFilterMode</db:synopsisinfo>
<db:synopsisinfo role="notifier">filterModeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the filter mode specifying the entities to select for ray casting tests.</db:para>
<db:para>The default value is AcceptMatchingLayers.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qabstractraycaster.xml#FilterMode-enum">Qt3DRender::QAbstractRayCaster::FilterMode</db:link></db:type> <db:emphasis role="bold">filterMode</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setFilterMode</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstractraycaster.xml#FilterMode-enum">Qt3DRender::QAbstractRayCaster::FilterMode</db:link></db:type> <db:emphasis>filterMode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">filterModeChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstractraycaster.xml#FilterMode-enum">Qt3DRender::QAbstractRayCaster::FilterMode</db:link></db:type> <db:emphasis>filterMode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="hits-prop">
<db:title>[read-only] hits : const Hits</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Hits</db:type>
<db:varname>hits</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">hits</db:synopsisinfo>
<db:synopsisinfo role="notifier">hitsChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the results of last ray casting test as a vector of <db:link xlink:href="qt3drender-qraycasterhit.xml">Qt3DRender::QRayCasterHit</db:link> instances.</db:para>
<db:para>Note that even if successive tests return the exact same results (or empty results), a change notification will be emitted at every test.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>Qt3DRender::QAbstractRayCaster::Hits</db:type> <db:emphasis role="bold">hits</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">hitsChanged</db:emphasis>(const <db:type>Qt3DRender::QAbstractRayCaster::Hits</db:type> &amp;<db:emphasis>hits</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="runMode-prop">
<db:title>runMode : RunMode</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>RunMode</db:type>
<db:varname>runMode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">runMode</db:synopsisinfo>
<db:synopsisinfo role="setter">setRunMode</db:synopsisinfo>
<db:synopsisinfo role="notifier">runModeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the run mode controlling how often ray casting tests are performed.</db:para>
<db:para>If set to <db:link xlink:href="qt3drender-qabstractraycaster.xml#RunMode-enum">SingleShot</db:link> (the default), when the component is enabled, a single ray casting test will be performed and the component will automatically disable itself.</db:para>
<db:para>If set to Continuous, ray casting tests will be performed at every frame as long as the component is enabled.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qabstractraycaster.xml#RunMode-enum">Qt3DRender::QAbstractRayCaster::RunMode</db:link></db:type> <db:emphasis role="bold">runMode</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setRunMode</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstractraycaster.xml#RunMode-enum">Qt3DRender::QAbstractRayCaster::RunMode</db:link></db:type> <db:emphasis>runMode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">runModeChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstractraycaster.xml#RunMode-enum">Qt3DRender::QAbstractRayCaster::RunMode</db:link></db:type> <db:emphasis>runMode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="addLayer">
<db:title>void QAbstractRayCaster::addLayer(Qt3DRender::QLayer *<db:emphasis>layer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addLayer</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QLayer *</db:type>
<db:parameter>layer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addLayer(Qt3DRender::QLayer *layer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Add <db:code role="parameter">layer</db:code> to the current list of layers</db:para>
</db:section>
<db:section xml:id="layers">
<db:title>QList&lt;Qt3DRender::QLayer *&gt; QAbstractRayCaster::layers() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;Qt3DRender::QLayer *&gt;</db:type>
<db:methodname>layers</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;Qt3DRender::QLayer *&gt; layers() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the current list of layers</db:para>
</db:section>
<db:section xml:id="removeLayer">
<db:title>void QAbstractRayCaster::removeLayer(Qt3DRender::QLayer *<db:emphasis>layer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>removeLayer</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QLayer *</db:type>
<db:parameter>layer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void removeLayer(Qt3DRender::QLayer *layer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Remove <db:code role="parameter">layer</db:code> from the current list of layers</db:para>
</db:section>
</db:section>
</db:article>
