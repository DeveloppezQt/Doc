<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Graphical Effects</db:title>
<db:productname>QtGraphicalEffects</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Graphical Effects Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Graphical Effects module is a Qt Quick Add-On module.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt Graphical Effects module provides a set of QML types for adding visually impressive and configurable effects to user interfaces. Effects are visual items that can be added to Qt Quick user interface as UI components.</db:para>
<db:para>The API consists of over 20 effects provided as separate QML types. The effects cover functional areas such as blending, masking, blurring, coloring, and many more.</db:para>
<db:section xml:id="getting-started">
<db:title>Getting Started</db:title>
<db:para>To load Qt Graphical Effects, add the following import statement to your .qml file:</db:para>
<db:programlisting language="qml">import QtGraphicalEffects 1.0
</db:programlisting>
<db:para>To use the effects, simply add a specific effect declaration to the QML scene and configure the effects properties. Effects have one or more source properties for specifying the visual input for which the effect is applied to. The altered visual output is then presented in the effect item itself. The source can be another, often hidden, item in the QML scene. More complex effects can have multiple sources. The source item type can be any QML type, even video or another effect. Pipelining multiple effects together is a simple way to create even more impressive output.</db:para>
<db:para>Each effect has a set of properties that can be used to configure the effect output. Properties can be animated just like any other QML properties. The QML type documentation contains property descriptions and basic usage examples.</db:para>
<db:para>Currently there is no C++ API.</db:para>
</db:section>
<db:section xml:id="reference">
<db:title>Reference</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="graphicaleffects.xml">QML Types</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
