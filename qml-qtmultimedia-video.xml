<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Video QML Type</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>A convenience type for showing a specified video.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtMultimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Item</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Video is part of <db:simplelist><db:member>multimedia_qml</db:member><db:member>multimedia_video_qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:code>Video</db:code> is a convenience type combining the functionality of a <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link> and a <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link> into one. It provides simple video playback functionality without having to declare multiple types.</db:para>
<db:para>The following is sample code to implement video playback in a scene.</db:para>
<db:programlisting language="qml">Video {
    id: video
    width : 800
    height : 600
    source: &quot;video.avi&quot;

    MouseArea {
        anchors.fill: parent
        onClicked: {
            video.play()
        }
    }

    focus: true
    Keys.onSpacePressed: video.playbackState == MediaPlayer.PlayingState ? video.pause() : video.play()
    Keys.onLeftPressed: video.position = video.position - 5000
    Keys.onRightPressed: video.position = video.position + 5000
}
</db:programlisting>
<db:para>The source file, <db:code>video.avi</db:code>, plays when you click the parent of <db:link xlink:href="qml-qtquick-mousearea.xml">MouseArea</db:link>. The video plays in an area of 800 by 600 pixels, and its <db:code>id</db:code> property has the value <db:emphasis role="bold">video</db:emphasis>.</db:para>
<db:para>Notice that because signals for the <db:link xlink:href="qml-qtquick-keys.xml">Keys</db:link> have been defined pressing the:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:guilabel>Spacebar</db:guilabel> toggles the pause button.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:guilabel>Left Arrow</db:guilabel> moves the current position in the video to 5 seconds previously.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:guilabel>Right Arrow</db:guilabel> advances the current position in the video by 5 seconds.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Video supports un-transformed, stretched, and uniformly scaled video presentation. For a description of stretched uniformly scaled presentation, see the <db:link xlink:href="qml-qtmultimedia-video.xml#fillMode-prop">fillMode</db:link> property description.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="bufferProgress-prop">
<db:title>bufferProgress : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>bufferProgress</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds how much of the data buffer is currently filled, from 0.0 (empty) to 1.0 (full).</db:para>
</db:section>
<db:section xml:id="duration-prop">
<db:title>duration : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>duration</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the duration of the media in milliseconds.</db:para>
<db:para>If the media doesn't have a fixed duration (a live stream for example) this will be 0.</db:para>
</db:section>
<db:section xml:id="error-prop">
<db:title>error : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>error</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the error state of the video. It can be one of:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.<db:link xlink:href="qdtls.xml#QDtlsError-enum">NoError</db:link> - there is no current error.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.ResourceError - the video cannot be played due to a problem allocating resources.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.FormatError - the video format is not supported.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.NetworkError - the video cannot be played due to network issues.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.AccessDenied - the video cannot be played due to insufficient permissions.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.ServiceMissing - the video cannot be played because the media service could not be instantiated.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="errorString-prop">
<db:title>errorString : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>errorString</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a string describing the current error condition in more detail.</db:para>
</db:section>
<db:section xml:id="fillMode-prop">
<db:title>fillMode : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>fillMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Set this property to define how the video is scaled to fit the target area.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link>.Stretch - the video is scaled to fit</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link>.PreserveAspectFit - the video is scaled uniformly to fit without cropping</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link>.PreserveAspectCrop - the video is scaled uniformly to fill, cropping if necessary</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Because this type is for convenience in QML, it does not support enumerations directly, so enumerations from <db:code>VideoOutput</db:code> are used to access the available fill modes.</db:para>
<db:para>The default fill mode is preserveAspectFit.</db:para>
</db:section>
<db:section xml:id="hasAudio-prop">
<db:title>hasAudio : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>hasAudio</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the current media has audio content.</db:para>
</db:section>
<db:section xml:id="hasVideo-prop">
<db:title>hasVideo : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>hasVideo</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the current media has video content.</db:para>
</db:section>
<db:section xml:id="loops-prop">
<db:title>loops : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>loops</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Determines how often the media is played before stopping. Set to <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.Infinite to loop the current media file forever.</db:para>
<db:para>The default value is <db:code>1</db:code>. Setting this property to <db:code>0</db:code> has no effect.</db:para>
</db:section>
<db:section xml:id="metaData-prop">
<db:title>metaData : mediaMetaData</db:title>
<db:fieldsynopsis>
<db:type>mediaMetaData</db:type>
<db:varname>metaData</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the meta data for the current media.</db:para>
<db:para>See <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#metaData-prop">MediaPlayer.metaData</db:link> for details about each meta data key.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-mediametadata.xml">mediaMetaData</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="muted-prop">
<db:title>muted : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>muted</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the audio output is muted.</db:para>
</db:section>
<db:section xml:id="orientation-prop">
<db:title>orientation : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>orientation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The orientation of the <db:code>Video</db:code> in degrees. Only multiples of 90 degrees is supported, that is 0, 90, 180, 270, 360, etc.</db:para>
</db:section>
<db:section xml:id="playbackRate-prop">
<db:title>playbackRate : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>playbackRate</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the rate at which video is played at as a multiple of the normal rate.</db:para>
</db:section>
<db:section xml:id="playbackState-prop">
<db:title>playbackState : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>playbackState</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This read only property indicates the playback state of the media.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.PlayingState - the media is playing</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.PausedState - the media is paused</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.StoppedState - the media is stopped</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The default state is <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.StoppedState.</db:para>
</db:section>
<db:section xml:id="position-prop">
<db:title>position : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>position</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the current playback position in milliseconds.</db:para>
</db:section>
<db:section xml:id="seekable-prop">
<db:title>seekable : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>seekable</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the playback position of the video can be changed.</db:para>
<db:para>If true, calling the <db:link xlink:href="qml-qtmultimedia-video.xml#seek-method">seek</db:link>() method or changing the <db:link xlink:href="qml-qtmultimedia-video.xml#position-prop">position</db:link> property will cause playback to seek to the new position.</db:para>
</db:section>
<db:section xml:id="source-prop">
<db:title>source : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>source</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the source URL of the media.</db:para>
</db:section>
<db:section xml:id="volume-prop">
<db:title>volume : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>volume</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the audio volume.</db:para>
<db:para>The volume is scaled linearly from <db:code>0.0</db:code> (silence) to <db:code>1.0</db:code> (full volume). Values outside this range will be clamped.</db:para>
<db:para>The default volume is <db:code>1.0</db:code>.</db:para>
<db:para>UI volume controls should usually be scaled nonlinearly. For example, using a logarithmic scale will produce linear changes in perceived loudness, which is what a user would normally expect from a volume control. See <db:link xlink:href="qaudio.xml#convertVolume">QAudio::convertVolume</db:link>() for more details.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="errorOccurred-signal">
<db:title>errorOccurred(<db:emphasis>error</db:emphasis>, <db:emphasis>errorString</db:emphasis>)</db:title>
<db:para>This signal is emitted when an <db:code role="parameter">error</db:code> has occurred. The <db:code role="parameter">errorString</db:code> parameter may contain more detailed information about the error.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onErrorOccurred</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="paused-signal">
<db:title>paused()</db:title>
<db:para>This signal is emitted when playback is paused.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPaused</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="playing-signal">
<db:title>playing()</db:title>
<db:para>This signal is emitted when playback is started or continued.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPlaying</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="stopped-signal">
<db:title>stopped()</db:title>
<db:para>This signal is emitted when playback is stopped.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onStopped</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="pause-method">
<db:title>pause()</db:title>
<db:para>Pauses playback of the media.</db:para>
</db:section>
<db:section xml:id="play-method">
<db:title>play()</db:title>
<db:para>Starts playback of the media.</db:para>
</db:section>
<db:section xml:id="seek-method">
<db:title>seek(<db:emphasis>offset</db:emphasis>)</db:title>
<db:para>If the <db:link xlink:href="qml-qtmultimedia-video.xml#seekable-prop">seekable</db:link> property is true, seeks the current playback position to <db:code role="parameter">offset</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-video.xml#seekable-prop">seekable</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-video.xml#position-prop">position</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="stop-method">
<db:title>stop()</db:title>
<db:para>Stops playback of the media.</db:para>
</db:section>
</db:section>
</db:article>
