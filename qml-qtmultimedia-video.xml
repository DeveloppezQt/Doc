<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Video QML Type</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>A convenience type for showing a specified video.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtMultimedia 5.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-item.xml">Item</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Video is part of <db:simplelist><db:member>multimedia_qml</db:member><db:member>multimedia_video_qml</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:code>Video</db:code> is a convenience type combining the functionality of a <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link> and a <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link> into one. It provides simple video playback functionality without having to declare multiple types.</db:para>
<db:programlisting language="qml">Video {
    id: video
    width : 800
    height : 600
    source: &quot;video.avi&quot;

    MouseArea {
        anchors.fill: parent
        onClicked: {
            video.play()
        }
    }

    focus: true
    Keys.onSpacePressed: video.playbackState == MediaPlayer.PlayingState ? video.pause() : video.play()
    Keys.onLeftPressed: video.seek(video.position - 5000)
    Keys.onRightPressed: video.seek(video.position + 5000)
}
</db:programlisting>
<db:para><db:code>Video</db:code> supports untransformed, stretched, and uniformly scaled video presentation. For a description of stretched uniformly scaled presentation, see the <db:link xlink:href="qml-qtmultimedia-video.xml#fillMode-prop">fillMode</db:link> property description.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="audioRole-prop">
<db:title>[since 5.6] audioRole : enumeration</db:title>
<db:para>This property holds the role of the audio stream. It can be set to specify the type of audio being played, allowing the system to make appropriate decisions when it comes to volume, routing or post-processing.</db:para>
<db:para>The audio role must be set before setting the source property.</db:para>
<db:para>Supported values can be retrieved with <db:link xlink:href="qml-qtmultimedia-video.xml#supportedAudioRoles-method">supportedAudioRoles</db:link>().</db:para>
<db:para>The value can be one of:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.UnknownRole - the role is unknown or undefined.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.MusicRole - music.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.VideoRole - soundtrack from a movie or a video.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.VoiceCommunicationRole - voice communications, such as telephony.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.AlarmRole - alarm.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.NotificationRole - notification, such as an incoming e-mail or a chat request.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.RingtoneRole - ringtone.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.AccessibilityRole - for accessibility, such as with a screen reader.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.SonificationRole - sonification, such as with user interface sounds.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.GameRole - game audio.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>This property was introduced in Qt 5.6.</db:para>
</db:section>
<db:section xml:id="autoLoad-prop">
<db:title>autoLoad : bool</db:title>
<db:para>This property indicates if loading of media should begin immediately.</db:para>
<db:para>Defaults to true, if false media will not be loaded until playback is started.</db:para>
</db:section>
<db:section xml:id="autoPlay-prop">
<db:title>autoPlay : bool</db:title>
<db:para>This property determines whether the media should begin playback automatically.</db:para>
<db:para>Setting to <db:code>true</db:code> also sets <db:link xlink:href="qml-qtmultimedia-video.xml#autoLoad-prop">autoLoad</db:link> to <db:code>true</db:code>. The default is <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="availability-prop">
<db:title>availability : enumeration</db:title>
<db:para>Returns the availability state of the video instance.</db:para>
<db:para>This is one of:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Value</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.Available</db:para>
</db:td>
<db:td>
<db:para>The video player is available to use.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.Busy</db:para>
</db:td>
<db:td>
<db:para>The video player is usually available, but some other process is utilizing the hardware necessary to play media.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.Unavailable</db:para>
</db:td>
<db:td>
<db:para>There are no supported video playback facilities.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.ResourceMissing</db:para>
</db:td>
<db:td>
<db:para>There is one or more resources missing, so the video player cannot be used. It may be possible to try again at a later time.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="bufferProgress-prop">
<db:title>bufferProgress : real</db:title>
<db:para>This property holds how much of the data buffer is currently filled, from 0.0 (empty) to 1.0 (full).</db:para>
</db:section>
<db:section xml:id="duration-prop">
<db:title>duration : int</db:title>
<db:para>This property holds the duration of the media in milliseconds.</db:para>
<db:para>If the media doesn't have a fixed duration (a live stream for example) this will be 0.</db:para>
</db:section>
<db:section xml:id="error-prop">
<db:title>error : enumeration</db:title>
<db:para>This property holds the error state of the video. It can be one of:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.NoError - there is no current error.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.ResourceError - the video cannot be played due to a problem allocating resources.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.FormatError - the video format is not supported.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.NetworkError - the video cannot be played due to network issues.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.AccessDenied - the video cannot be played due to insufficient permissions.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.ServiceMissing - the video cannot be played because the media service could not be instantiated.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="errorString-prop">
<db:title>errorString : string</db:title>
<db:para>This property holds a string describing the current error condition in more detail.</db:para>
</db:section>
<db:section xml:id="fillMode-prop">
<db:title>fillMode : enumeration</db:title>
<db:para>Set this property to define how the video is scaled to fit the target area.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link>.Stretch - the video is scaled to fit</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link>.PreserveAspectFit - the video is scaled uniformly to fit without cropping</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link>.PreserveAspectCrop - the video is scaled uniformly to fill, cropping if necessary</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Because this type is for convenience in QML, it does not support enumerations directly, so enumerations from <db:code>VideoOutput</db:code> are used to access the available fill modes.</db:para>
<db:para>The default fill mode is preserveAspectFit.</db:para>
</db:section>
<db:section xml:id="hasAudio-prop">
<db:title>hasAudio : bool</db:title>
<db:para>This property holds whether the current media has audio content.</db:para>
</db:section>
<db:section xml:id="hasVideo-prop">
<db:title>hasVideo : bool</db:title>
<db:para>This property holds whether the current media has video content.</db:para>
</db:section>
<db:section xml:id="metaData-prop">
<db:title>metaData : object</db:title>
<db:para>This property holds the meta data for the current media.</db:para>
<db:para>See <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#metaData-prop">MediaPlayer.metaData</db:link> for details about each meta data key.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediametadata.xml">QMediaMetaData</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="muted-prop">
<db:title>muted : bool</db:title>
<db:para>This property holds whether the audio output is muted.</db:para>
</db:section>
<db:section xml:id="orientation-prop">
<db:title>orientation : int</db:title>
<db:para>The orientation of the <db:code>Video</db:code> in degrees. Only multiples of 90 degrees is supported, that is 0, 90, 180, 270, 360, etc.</db:para>
</db:section>
<db:section xml:id="playbackRate-prop">
<db:title>playbackRate : real</db:title>
<db:para>This property holds the rate at which video is played at as a multiple of the normal rate.</db:para>
</db:section>
<db:section xml:id="playbackState-prop">
<db:title>playbackState : enumeration</db:title>
<db:para>This read only property indicates the playback state of the media.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.PlayingState - the media is playing</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.PausedState - the media is paused</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.StoppedState - the media is stopped</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The default state is <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.StoppedState.</db:para>
</db:section>
<db:section xml:id="playlist-prop">
<db:title>[since 5.6] playlist : Playlist</db:title>
<db:para>This property holds the playlist used by the media player.</db:para>
<db:para>Setting the playlist property resets the <db:link xlink:href="qml-qtmultimedia-video.xml#source-prop">source</db:link> to an empty string.</db:para>
<db:para>This property was introduced in Qt 5.6.</db:para>
</db:section>
<db:section xml:id="position-prop">
<db:title>position : int</db:title>
<db:para>This property holds the current playback position in milliseconds.</db:para>
<db:para>To change this position, use the <db:link xlink:href="qml-qtmultimedia-video.xml#seek-method">seek</db:link>() method.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-video.xml#seek-method">seek</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="seekable-prop">
<db:title>seekable : bool</db:title>
<db:para>This property holds whether the playback position of the video can be changed.</db:para>
<db:para>If true, calling the <db:link xlink:href="qml-qtmultimedia-video.xml#seek-method">seek</db:link>() method will cause playback to seek to the new position.</db:para>
</db:section>
<db:section xml:id="source-prop">
<db:title>source : url</db:title>
<db:para>This property holds the source URL of the media.</db:para>
<db:para>Setting the source property clears the current <db:link xlink:href="qml-qtmultimedia-video.xml#playlist-prop">playlist</db:link>, if any.</db:para>
</db:section>
<db:section xml:id="status-prop">
<db:title>status : enumeration</db:title>
<db:para>This property holds the status of media loading. It can be one of:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.NoMedia - no media has been set.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.Loading - the media is currently being loaded.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.Loaded - the media has been loaded.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.Buffering - the media is buffering data.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.Stalled - playback has been interrupted while the media is buffering data.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.Buffered - the media has buffered data.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.EndOfMedia - the media has played to the end.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.InvalidMedia - the media cannot be played.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>.UnknownStatus - the status of the media cannot be determined.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="volume-prop">
<db:title>volume : real</db:title>
<db:para>This property holds the volume of the audio output, from 0.0 (silent) to 1.0 (maximum volume).</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="paused-signal">
<db:title>paused()</db:title>
<db:para>This signal is emitted when playback is paused.</db:para>
<db:para>The corresponding handler is <db:code>onPaused</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPaused</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="playing-signal">
<db:title>playing()</db:title>
<db:para>This signal is emitted when playback is started or continued.</db:para>
<db:para>The corresponding handler is <db:code>onPlaying</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPlaying</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="stopped-signal">
<db:title>stopped()</db:title>
<db:para>This signal is emitted when playback is stopped.</db:para>
<db:para>The corresponding handler is <db:code>onStopped</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onStopped</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="pause-method">
<db:title>pause()</db:title>
<db:para>Pauses playback of the media.</db:para>
</db:section>
<db:section xml:id="play-method">
<db:title>play()</db:title>
<db:para>Starts playback of the media.</db:para>
</db:section>
<db:section xml:id="seek-method">
<db:title>seek(<db:emphasis>offset</db:emphasis>)</db:title>
<db:para>If the <db:link xlink:href="qml-qtmultimedia-video.xml#seekable-prop">seekable</db:link> property is true, seeks the current playback position to <db:code role="parameter">offset</db:code>.</db:para>
<db:para>Seeking may be asynchronous, so the <db:link xlink:href="qml-qtmultimedia-video.xml#position-prop">position</db:link> property may not be updated immediately.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-video.xml#seekable-prop">seekable</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-video.xml#position-prop">position</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="stop-method">
<db:title>stop()</db:title>
<db:para>Stops playback of the media.</db:para>
</db:section>
<db:section xml:id="supportedAudioRoles-method">
<db:title>[since 5.6] supportedAudioRoles()</db:title>
<db:para>Returns a list of supported audio roles.</db:para>
<db:para>If setting the audio role is not supported, an empty list is returned.</db:para>
<db:para>This method was introduced in Qt 5.6.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-video.xml#audioRole-prop">audioRole</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
