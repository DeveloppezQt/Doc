<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>WebEngineSettings QML Type</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Allows configuration of browser properties and attributes.</db:para>
<db:para>This type was introduced in QtWebEngine 1.1.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtWebEngine</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtWebEngine 1.1</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtwebengine-webenginesettings.xml">WebEngineSettings</db:link> type can be used to configure browser properties and generic attributes, such as JavaScript support, focus behavior, and access to remote content. This type is uncreatable, but the default settings for all web engine views can be accessed by using the <db:link xlink:href="qml-qtwebengine-webengine.xml#settings-prop">WebEngine.settings</db:link> property.</db:para>
<db:para>Each web engine view can have individual settings that can be accessed by using the <db:link xlink:href="qml-qtwebengine-webengineview.xml#settings-prop">WebEngineView.settings</db:link> property.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="accelerated2dCanvasEnabled-prop">
<db:title>[since QtWebEngine 1.3] accelerated2dCanvasEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>accelerated2dCanvasEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies whether the HTML 5 2D canvas should be an OpenGL framebuffer. This makes many painting operations faster, but slows down pixel access.</db:para>
<db:para>Enabled by default if available.</db:para>
<db:para>This property was introduced in QtWebEngine 1.3.</db:para>
</db:section>
<db:section xml:id="allowGeolocationOnInsecureOrigins-prop">
<db:title>[since QtWebEngine 1.5] allowGeolocationOnInsecureOrigins : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>allowGeolocationOnInsecureOrigins</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Since Qt 5.7, only secure origins such as HTTPS have been able to request Geolocation features. This provides an override to allow non secure origins to access Geolocation again.</db:para>
<db:para>Disabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.5.</db:para>
</db:section>
<db:section xml:id="allowRunningInsecureContent-prop">
<db:title>[since QtWebEngine 1.4] allowRunningInsecureContent : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>allowRunningInsecureContent</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>By default, HTTPS pages cannot run JavaScript, CSS, plugins or web-sockets from HTTP URLs. This used to be possible and this provides an override to get the old behavior.</db:para>
<db:para>Disabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.4.</db:para>
</db:section>
<db:section xml:id="allowWindowActivationFromJavaScript-prop">
<db:title>[since QtWebEngine 1.6] allowWindowActivationFromJavaScript : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>allowWindowActivationFromJavaScript</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Allows the window.focus() method in JavaScript. Disallowed by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.6.</db:para>
</db:section>
<db:section xml:id="autoLoadIconsForPage-prop">
<db:title>[since QtWebEngine 1.3] autoLoadIconsForPage : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>autoLoadIconsForPage</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Automatically downloads icons for web pages.</db:para>
<db:para>Enabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.3.</db:para>
</db:section>
<db:section xml:id="autoLoadImages-prop">
<db:title>autoLoadImages : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>autoLoadImages</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Automatically loads images on web pages.</db:para>
<db:para>Enabled by default.</db:para>
</db:section>
<db:section xml:id="defaultTextEncoding-prop">
<db:title>[since QtWebEngine 1.2] defaultTextEncoding : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>defaultTextEncoding</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the default encoding. The value must be a string describing an encoding such as &quot;utf-8&quot; or &quot;iso-8859-1&quot;.</db:para>
<db:para>If left empty, a default value will be used.</db:para>
<db:para>This property was introduced in QtWebEngine 1.2.</db:para>
</db:section>
<db:section xml:id="dnsPrefetchEnabled-prop">
<db:title>[since QtWebEngine 1.8] dnsPrefetchEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>dnsPrefetchEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Enables speculative prefetching of DNS records for HTML links before they are activated.</db:para>
<db:para>Disabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.8.</db:para>
</db:section>
<db:section xml:id="errorPageEnabled-prop">
<db:title>errorPageEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>errorPageEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Enables displaying the built-in error pages of Chromium.</db:para>
<db:para>Enabled by default.</db:para>
</db:section>
<db:section xml:id="focusOnNavigationEnabled-prop">
<db:title>[since QtWebEngine 1.4] focusOnNavigationEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>focusOnNavigationEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Focus is given to the view whenever a navigation operation occurs (load, stop, reload, reload and bypass cache, forward, backward, set content, and so on).</db:para>
<db:para>Disabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.4.</db:para>
</db:section>
<db:section xml:id="forceDarkMode-prop">
<db:title>[since QtWebEngine 6.7] forceDarkMode : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>forceDarkMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Automatically render all web contents using a dark theme.</db:para>
<db:para>Disabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 6.7.</db:para>
</db:section>
<db:section xml:id="fullscreenSupportEnabled-prop">
<db:title>[since QtWebEngine 1.2] fullscreenSupportEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>fullscreenSupportEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Tells the web engine whether fullscreen is supported in this application or not.</db:para>
<db:para>Disabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.2.</db:para>
</db:section>
<db:section xml:id="hyperlinkAuditingEnabled-prop">
<db:title>hyperlinkAuditingEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>hyperlinkAuditingEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Enables support for the <db:code>ping</db:code> attribute for hyperlinks.</db:para>
<db:para>Disabled by default.</db:para>
</db:section>
<db:section xml:id="javascriptCanAccessClipboard-prop">
<db:title>javascriptCanAccessClipboard : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>javascriptCanAccessClipboard</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Allows JavaScript programs to read from or write to the clipboard. Writing to the clipboard is always allowed if it is specifically requested by the user.</db:para>
<db:para>To enable also the pasting of clipboard content from JavaScript, use <db:link xlink:href="qml-qtwebengine-webenginesettings.xml#javascriptCanPaste-prop">javascriptCanPaste</db:link>.</db:para>
<db:para>Disabled by default.</db:para>
</db:section>
<db:section xml:id="javascriptCanOpenWindows-prop">
<db:title>javascriptCanOpenWindows : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>javascriptCanOpenWindows</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Allows JavaScript programs to open popup windows without user interaction.</db:para>
<db:para>Enabled by default.</db:para>
</db:section>
<db:section xml:id="javascriptCanPaste-prop">
<db:title>[since QtWebEngine 1.7] javascriptCanPaste : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>javascriptCanPaste</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Enables JavaScript <db:code>execCommand(&quot;paste&quot;)</db:code>. This also requires enabling <db:link xlink:href="qml-qtwebengine-webenginesettings.xml#javascriptCanAccessClipboard-prop">javascriptCanAccessClipboard</db:link>.</db:para>
<db:para>Disabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.7.</db:para>
</db:section>
<db:section xml:id="javascriptEnabled-prop">
<db:title>javascriptEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>javascriptEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Enables the running of JavaScript programs.</db:para>
<db:para>Enabled by default.</db:para>
</db:section>
<db:section xml:id="linksIncludedInFocusChain-prop">
<db:title>linksIncludedInFocusChain : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>linksIncludedInFocusChain</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Includes hyperlinks in the keyboard focus chain.</db:para>
<db:para>Enabled by default.</db:para>
</db:section>
<db:section xml:id="localContentCanAccessFileUrls-prop">
<db:title>localContentCanAccessFileUrls : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>localContentCanAccessFileUrls</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Allows locally loaded documents to access other local URLs.</db:para>
<db:para>Enabled by default.</db:para>
</db:section>
<db:section xml:id="localContentCanAccessRemoteUrls-prop">
<db:title>localContentCanAccessRemoteUrls : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>localContentCanAccessRemoteUrls</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Allows locally loaded documents to access remote URLs.</db:para>
<db:para>Disabled by default.</db:para>
</db:section>
<db:section xml:id="localStorageEnabled-prop">
<db:title>localStorageEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>localStorageEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Enables support for the HTML 5 local storage feature.</db:para>
<db:para>Enabled by default.</db:para>
</db:section>
<db:section xml:id="navigateOnDropEnabled-prop">
<db:title>[since QtWebEngine 6.4] navigateOnDropEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>navigateOnDropEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies that navigations can be triggered by dropping URLs on the view.</db:para>
<db:para>Enabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 6.4.</db:para>
</db:section>
<db:section xml:id="pdfViewerEnabled-prop">
<db:title>[since QtWebEngine 1.9] pdfViewerEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>pdfViewerEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies that PDF documents will be opened in the internal PDF viewer instead of being downloaded.</db:para>
<db:para>Enabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.9.</db:para>
</db:section>
<db:section xml:id="playbackRequiresUserGesture-prop">
<db:title>[since QtWebEngine 1.7] playbackRequiresUserGesture : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>playbackRequiresUserGesture</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Inhibits playback of media content until the user interacts with the page.</db:para>
<db:para>By default, Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link> uses Chromium settings, as described in <db:link xlink:href="https://developers.google.com/web/updates/2017/09/autoplay-policy-changes">Autoplay Policy Changes</db:link>. To overwrite the default behavior, this property must be set to <db:code>false</db:code>.</db:para>
<db:note>
<db:para>The behavior is similar to Chrome on Android when enabled, and similar to Chrome on desktops when disabled.</db:para>
</db:note>
<db:para>This property was introduced in QtWebEngine 1.7.</db:para>
</db:section>
<db:section xml:id="pluginsEnabled-prop">
<db:title>pluginsEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>pluginsEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Enables support for Pepper plugins, such as the Flash player.</db:para>
<db:para>Disabled by default.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtwebengine-features.xml#pepper-plugin-api">Pepper Plugin API</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="printElementBackgrounds-prop">
<db:title>[since QtWebEngine 1.4] printElementBackgrounds : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>printElementBackgrounds</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Turns on printing of CSS backgrounds when printing a web page.</db:para>
<db:para>Enabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.4.</db:para>
</db:section>
<db:section xml:id="readingFromCanvasEnabled-prop">
<db:title>[since QtWebEngine 6.6] readingFromCanvasEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>readingFromCanvasEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies that reading from all canvas elements is enabled.</db:para>
<db:para>This setting will have impact on all HTML5 canvas elements irrespective of origin, and can be disabled to prevent canvas fingerprinting.</db:para>
<db:para>Enabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 6.6.</db:para>
</db:section>
<db:section xml:id="screenCaptureEnabled-prop">
<db:title>[since QtWebEngine 1.3] screenCaptureEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>screenCaptureEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Tells the web engine whether screen capture is supported in this application or not.</db:para>
<db:para>Disabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.3.</db:para>
</db:section>
<db:section xml:id="showScrollBars-prop">
<db:title>[since QtWebEngine 1.6] showScrollBars : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>showScrollBars</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Shows scroll bars. Enabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.6.</db:para>
</db:section>
<db:section xml:id="spatialNavigationEnabled-prop">
<db:title>spatialNavigationEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>spatialNavigationEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Enables the Spatial Navigation feature, which means the ability to navigate between focusable elements, such as hyperlinks and form controls, on a web page by using the Left, Right, Up and Down arrow keys.</db:para>
<db:para>For example, if a user presses the Right key, heuristics determine whether there is an element they might be trying to reach towards the right and which element they probably want.</db:para>
<db:para>Disabled by default.</db:para>
</db:section>
<db:section xml:id="touchIconsEnabled-prop">
<db:title>[since QtWebEngine 1.3] touchIconsEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>touchIconsEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Enables support for touch icons and precomposed touch icons.</db:para>
<db:para>Disabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.3.</db:para>
</db:section>
<db:section xml:id="unknownUrlSchemePolicy-prop">
<db:title>[since QtWebEngine 1.7] unknownUrlSchemePolicy : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>unknownUrlSchemePolicy</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies how navigation requests to URLs with unknown schemes are handled.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>WebEngineSettings.DisallowUnknownUrlSchemes</db:para>
</db:td>
<db:td>
<db:para>Disallows all navigation requests to URLs with unknown schemes.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineSettings.AllowUnknownUrlSchemesFromUserInteraction</db:para>
</db:td>
<db:td>
<db:para>Allows navigation requests to URLs with unknown schemes that are issued from user-interaction (like a mouse-click), whereas other navigation requests (for example from JavaScript) are suppressed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineSettings.AllowAllUnknownUrlSchemes</db:para>
</db:td>
<db:td>
<db:para>Allows all navigation requests to URLs with unknown schemes.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Default value is <db:code>WebEngineSettings.AllowUnknownUrlSchemesFromUserInteraction</db:code>.</db:para>
<db:para>This property was introduced in QtWebEngine 1.7.</db:para>
</db:section>
<db:section xml:id="webGLEnabled-prop">
<db:title>[since QtWebEngine 1.3] webGLEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>webGLEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Enables support for HTML 5 WebGL.</db:para>
<db:para>Enabled by default if available.</db:para>
<db:para>This property was introduced in QtWebEngine 1.3.</db:para>
</db:section>
<db:section xml:id="webRTCPublicInterfacesOnly-prop">
<db:title>[since QtWebEngine 1.7] webRTCPublicInterfacesOnly : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>webRTCPublicInterfacesOnly</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Limits WebRTC to public IP addresses only. When disabled WebRTC may also use local network IP addresses, but remote hosts can also see your local network IP address.</db:para>
<db:para>Disabled by default.</db:para>
<db:para>This property was introduced in QtWebEngine 1.7.</db:para>
</db:section>
</db:section>
</db:article>
