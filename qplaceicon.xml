<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QPlaceIcon Class</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qplaceicon.xml">QPlaceIcon</db:link> class represents an icon.</db:para>
<db:para>This class was introduced in Qt 5.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPlaceIcon</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += location</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QPlaceIcon is part of <db:simplelist><db:member>QtLocation-places</db:member><db:member>QtLocation-places-data</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The typical usage of an icon is to use the <db:link xlink:href="qplaceicon.xml#url">url</db:link>() function to specify a preferred icon size.</db:para>
<db:programlisting language="cpp">QUrl iconSourceUrl = place.icon().url(QSize(32,32));

//A default icon may also be requested like so
iconSourceUrl = place.icon().url();
</db:programlisting>
<db:para>The icons are typically backend dependent, if a manager backend does not support a given size, the URL of the icon that most closely matches those parameters is returned.</db:para>
<db:para>The icon class also has a key-value set of parameters. The precise key one needs to use depends on the <db:link xlink:href="qtlocation-index.xml#plugin-references-and-parameters">plugin</db:link> being used. These parameters influence which icon URL is returned by the manager and may also be used to specify icon URL locations when saving icons.</db:para>
<db:para>If there is only ever one image for an icon, then <db:link xlink:href="qplaceicon.xml#SingleUrl-var">QPlaceIcon::SingleUrl</db:link> can be used as a parameter key with a <db:link xlink:href="qurl.xml">QUrl</db:link> as the associated value. If this key is set, then the <db:link xlink:href="qplaceicon.xml#url">url</db:link>() function will always return the specified URL and not defer to any manager.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QPlaceIcon">
<db:title>QPlaceIcon::QPlaceIcon()</db:title>
<db:para>Constructs an icon.</db:para>
</db:section>
<db:section xml:id="QPlaceIcon-1">
<db:title>QPlaceIcon::QPlaceIcon(const QPlaceIcon &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QPlaceIcon">
<db:title>[noexcept] QPlaceIcon::~QPlaceIcon()</db:title>
<db:para>Destroys the icon.</db:para>
</db:section>
<db:section xml:id="isEmpty">
<db:title>bool QPlaceIcon::isEmpty() const</db:title>
<db:para>Returns a boolean indicating whether the all the fields of the icon are empty or not.</db:para>
</db:section>
<db:section xml:id="manager">
<db:title>QPlaceManager *QPlaceIcon::manager() const</db:title>
<db:para>Returns the manager that this icon is associated with.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceicon.xml#setManager">setManager</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="parameters">
<db:title>QVariantMap QPlaceIcon::parameters() const</db:title>
<db:para>Returns a set of parameters for the icon that are manager/plugin specific. These parameters are used by the manager to return the appropriate URL when <db:link xlink:href="qplaceicon.xml#url">url</db:link>() is called and to specify locations to save to when saving icons.</db:para>
<db:para>Consult the <db:link xlink:href="qtlocation-index.xml#plugin-references-and-parameters">plugin documentation</db:link> for what parameters are supported and how they should be used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceicon.xml#setParameters">setParameters</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setManager">
<db:title>void QPlaceIcon::setManager(QPlaceManager *<db:emphasis>manager</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">manager</db:code> that this icon is associated with. The icon does not take ownership of the pointer.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceicon.xml#manager">manager</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setParameters">
<db:title>void QPlaceIcon::setParameters(const QVariantMap &amp;<db:emphasis>parameters</db:emphasis>)</db:title>
<db:para>Sets the parameters of the icon to <db:code role="parameter">parameters</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceicon.xml#parameters">parameters</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="url">
<db:title>QUrl QPlaceIcon::url(const QSize &amp;<db:emphasis>size</db:emphasis> = QSize()) const</db:title>
<db:para>Returns an icon URL according to the given <db:code role="parameter">size</db:code>.</db:para>
<db:para>If no manager has been assigned to the icon, and the parameters do not contain the <db:link xlink:href="qplaceicon.xml#SingleUrl-var">QPlaceIcon::SingleUrl</db:link> key, a default constructed <db:link xlink:href="qurl.xml">QUrl</db:link> is returned.</db:para>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QPlaceIcon::operator!=(const QPlaceIcon &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if <db:code role="parameter">other</db:code> is not equal to this icon, otherwise returns false.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QPlaceIcon &amp;QPlaceIcon::operator=(const QPlaceIcon &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns <db:code role="parameter">other</db:code> to this icon and returns a reference to this icon.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QPlaceIcon::operator==(const QPlaceIcon &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if this icon is equal to <db:code role="parameter">other</db:code>, otherwise returns false.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-variable-documentation">
<db:title>Member Variable Documentation</db:title>
<db:section xml:id="SingleUrl-var">
<db:title>const QString QPlaceIcon::SingleUrl</db:title>
<db:para>Parameter key for an icon that only has a single image URL.</db:para>
<db:para>The parameter value to be used with this key is a <db:link xlink:href="qurl.xml">QUrl</db:link>. An icon with this parameter set will always return the specified URL regardless of the requested size when <db:link xlink:href="qplaceicon.xml#url">url</db:link>() is called.</db:para>
</db:section>
</db:section>
</db:article>
