<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt 3D C++ Classes</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Qt 3D module contains functionality to support near-realtime simulation systems.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt 3D module provides the foundations and core types used for near-realtime simulations built on the Qt 3D framework.</db:para>
<db:section xml:id="namespaces">
<db:title>Namespaces</db:title>
<db:variablelist role="qt3d-namespaces">
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore.xml" xlink:role="namespace">Qt3DCore</db:link></db:term>
<db:listitem>
<db:para>Contains classes that are the foundation for Qt 3D simulation framework, as well as classes that provide the ability to render using the Qt 3D framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput.xml" xlink:role="namespace">Qt3DInput</db:link></db:term>
<db:listitem>
<db:para>Contains classes that enable user input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dlogic.xml" xlink:role="namespace">Qt3DLogic</db:link></db:term>
<db:listitem>
<db:para>Contains classes that enable frame synchronization.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender.xml" xlink:role="namespace">Qt3DRender</db:link></db:term>
<db:listitem>
<db:para>Contains classes that enable 2D and 3D rendering.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:section xml:id="qt-3d-core-module">
<db:title>Qt 3D Core Module</db:title>
<db:variablelist role="classesbymodule Qt3DCore">
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qabstractaspect.xml" xlink:role="class">Qt3DCore::QAbstractAspect</db:link></db:term>
<db:listitem>
<db:para>QAbstractAspect is the base class for aspects that provide a vertical slice of behavior.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qbackendscenepropertychange.xml" xlink:role="class">Qt3DCore::QBackendScenePropertyChange</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qcameralens.xml" xlink:role="class">Qt3DCore::QCameraLens</db:link></db:term>
<db:listitem>
<db:para>Qt3DCore::QCameraLens specifies the projection matrix that will be used to define a Camera for a 3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qcomponent.xml" xlink:role="class">Qt3DCore::QComponent</db:link></db:term>
<db:listitem>
<db:para>The base class of scene nodes that can be aggregated by Qt3DCore::QEntity instances as a component.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qentity.xml" xlink:role="class">Qt3DCore::QEntity</db:link></db:term>
<db:listitem>
<db:para>Qt3DCore::QEntity is a Qt3DCore::QNode subclass that can aggregate several Qt3DCore::QComponent instances that will specify its behavior.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qnode.xml" xlink:role="class">Qt3DCore::QNode</db:link></db:term>
<db:listitem>
<db:para>QNode is the base class of all Qt3D node classes used to build a Qt3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qray3d.xml" xlink:role="class">Qt3DCore::QRay3D</db:link></db:term>
<db:listitem>
<db:para>The QRay3D class defines a directional line in 3D space extending through an origin point.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qscenepropertychange.xml" xlink:role="class">Qt3DCore::QScenePropertyChange</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-quick-qqmlaspectengine.xml" xlink:role="class">Qt3DCore::Quick::QQmlAspectEngine</db:link></db:term>
<db:listitem>
<db:para>The QQmlAspectEngine provides an environment for the QAspectEngine and a method for instantiating QML components.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-3d-input-module">
<db:title>Qt 3D Input Module</db:title>
<db:variablelist role="classesbymodule Qt3DInput">
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qabstractphysicaldevice.xml" xlink:role="class">Qt3DInput::QAbstractPhysicalDevice</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qaction.xml" xlink:role="class">Qt3DInput::QAction</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qactioninput.xml" xlink:role="class">Qt3DInput::QActionInput</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qaxis.xml" xlink:role="class">Qt3DInput::QAxis</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qaxisactionhandler.xml" xlink:role="class">Qt3DInput::QAxisActionHandler</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qaxisinput.xml" xlink:role="class">Qt3DInput::QAxisInput</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qaxissetting.xml" xlink:role="class">Qt3DInput::QAxisSetting</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qinputaspect.xml" xlink:role="class">Qt3DInput::QInputAspect</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qkeyevent.xml" xlink:role="class">Qt3DInput::QKeyEvent</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qkeyboardcontroller.xml" xlink:role="class">Qt3DInput::QKeyboardController</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qkeyboardinput.xml" xlink:role="class">Qt3DInput::QKeyboardInput</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qlogicaldevice.xml" xlink:role="class">Qt3DInput::QLogicalDevice</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qmousecontroller.xml" xlink:role="class">Qt3DInput::QMouseController</db:link></db:term>
<db:listitem>
<db:para>QMouseController is in charge of dispatching mouse events to attached QMouseInput objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qmouseevent.xml" xlink:role="class">Qt3DInput::QMouseEvent</db:link></db:term>
<db:listitem>
<db:para>The Qt3DCore::QMouseEvent contains parameters that describe a mouse event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qmouseinput.xml" xlink:role="class">Qt3DInput::QMouseInput</db:link></db:term>
<db:listitem>
<db:para>Provides a means of being notified about mouse events when attached to a QMouseController instance.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qwheelevent.xml" xlink:role="class">Qt3DInput::QWheelEvent</db:link></db:term>
<db:listitem>
<db:para>The QWheelEvent class contains parameters that describe a mouse wheel event.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-3d-logic-module">
<db:title>Qt 3D Logic Module</db:title>
<db:variablelist role="classesbymodule Qt3DLogic">
<db:varlistentry>
<db:term><db:link xlink:href="qt3dlogic-qlogiccomponent.xml" xlink:role="class">Qt3DLogic::QLogicComponent</db:link></db:term>
<db:listitem>
<db:para>Provides a way to have a synchronous function executed each frame.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-3d-render-module">
<db:title>Qt 3D Render Module</db:title>
<db:variablelist role="classesbymodule Qt3DRender">
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-assimpparser.xml" xlink:role="class">Qt3DRender::AssimpParser</db:link></db:term>
<db:listitem>
<db:para>Provides a generic way of loading various 3D assets format into a Qt3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qabstractattribute.xml" xlink:role="class">Qt3DRender::QAbstractAttribute</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qabstractbuffer.xml" xlink:role="class">Qt3DRender::QAbstractBuffer</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qabstracttextureimage.xml" xlink:role="class">Qt3DRender::QAbstractTextureImage</db:link></db:term>
<db:listitem>
<db:para>Encapsulates the necessary information to create an OpenGL texture image.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qabstracttextureprovider.xml" xlink:role="class">Qt3DRender::QAbstractTextureProvider</db:link></db:term>
<db:listitem>
<db:para>A base class to be used to provide textures.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qannotation.xml" xlink:role="class">Qt3DRender::QAnnotation</db:link></db:term>
<db:listitem>
<db:para>The QAnnotation class provides ...</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qblendstate.xml" xlink:role="class">Qt3DRender::QBlendState</db:link></db:term>
<db:listitem>
<db:para>Encapsulates blending information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qblendstateseparate.xml" xlink:role="class">Qt3DRender::QBlendStateSeparate</db:link></db:term>
<db:listitem>
<db:para>Encapsulates blending information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qboundingvolumespecifier.xml" xlink:role="class">Qt3DRender::QBoundingVolumeSpecifier</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qbuffer.xml" xlink:role="class">Qt3DRender::QBuffer</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qcameraselector.xml" xlink:role="class">Qt3DRender::QCameraSelector</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qclipplane.xml" xlink:role="class">Qt3DRender::QClipPlane</db:link></db:term>
<db:listitem>
<db:para>Enables an additional OpenGL clipping plane that can be in shaders using gl_ClipDistance</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qcolormask.xml" xlink:role="class">Qt3DRender::QColorMask</db:link></db:term>
<db:listitem>
<db:para>Allows specifying which color components should be written to the currently bound frame buffer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qcuboidgeometry.xml" xlink:role="class">Qt3DRender::QCuboidGeometry</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qcuboidmesh.xml" xlink:role="class">Qt3DRender::QCuboidMesh</db:link></db:term>
<db:listitem>
<db:para>A cube mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qcylindergeometry.xml" xlink:role="class">Qt3DRender::QCylinderGeometry</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qcylindermesh.xml" xlink:role="class">Qt3DRender::QCylinderMesh</db:link></db:term>
<db:listitem>
<db:para>A cylindrical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qdiffusemapmaterial.xml" xlink:role="class">Qt3DRender::QDiffuseMapMaterial</db:link></db:term>
<db:listitem>
<db:para>The QDiffuseMapMaterial provides a default implementation of the phong lighting effect where the diffuse light component is read from a texture map.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qdiffusespecularmapmaterial.xml" xlink:role="class">Qt3DRender::QDiffuseSpecularMapMaterial</db:link></db:term>
<db:listitem>
<db:para>The QDiffuseSpecularMapMaterial provides a default implementation of the phong lighting and bump effect where the diffuse and specular light components are read from texture maps.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qforwardrenderer.xml" xlink:role="class">Qt3DRender::QForwardRenderer</db:link></db:term>
<db:listitem>
<db:para>The Qt3DRender::QForwardRenderer provides a default FrameGraph implementation of a forward renderer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qframegraph.xml" xlink:role="class">Qt3DRender::QFrameGraph</db:link></db:term>
<db:listitem>
<db:para>Defines the rendering method to be used by the renderer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qframegraphnode.xml" xlink:role="class">Qt3DRender::QFrameGraphNode</db:link></db:term>
<db:listitem>
<db:para>Base class of all FrameGraph configuration nodes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qframegraphselector.xml" xlink:role="class">Qt3DRender::QFrameGraphSelector</db:link></db:term>
<db:listitem>
<db:para>Qt3DRender::QFrameGraphSelector provide a way to select a one or more subtree of the FrameGraph at runtime</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qgeometry.xml" xlink:role="class">Qt3DRender::QGeometry</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qgeometryrenderer.xml" xlink:role="class">Qt3DRender::QGeometryRenderer</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qgoochmaterial.xml" xlink:role="class">Qt3DRender::QGoochMaterial</db:link></db:term>
<db:listitem>
<db:para>The QGoochMaterial provides a material that implements the Gooch shading model, popular in CAD and CAM applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qgraphicsapifilter.xml" xlink:role="class">Qt3DRender::QGraphicsApiFilter</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsApiFilter class provides ...</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qlayer.xml" xlink:role="class">Qt3DRender::QLayer</db:link></db:term>
<db:listitem>
<db:para>The QLayer class provides ...</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qlayerfilter.xml" xlink:role="class">Qt3DRender::QLayerFilter</db:link></db:term>
<db:listitem>
<db:para>The QLayerFilter class provides ...</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qlight.xml" xlink:role="class">Qt3DRender::QLight</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qmaterial.xml" xlink:role="class">Qt3DRender::QMaterial</db:link></db:term>
<db:listitem>
<db:para>Provides an abstract class that should be the base of all Material component classes in a scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qmesh.xml" xlink:role="class">Qt3DRender::QMesh</db:link></db:term>
<db:listitem>
<db:para>A custom mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qnodraw.xml" xlink:role="class">Qt3DRender::QNoDraw</db:link></db:term>
<db:listitem>
<db:para>When a QNoDraw node is present in a FrameGraph branch, this prevents the renderer from rendering any primitive.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qnormaldiffusemapalphamaterial.xml" xlink:role="class">Qt3DRender::QNormalDiffuseMapAlphaMaterial</db:link></db:term>
<db:listitem>
<db:para>The QNormalDiffuseMapAlphaMaterial provides a default implementation of the phong lighting and bump effect where the diffuse light component is read from a texture map and the normals of the mesh being rendered from a normal texture map. In addition, it defines an alpha to coverage and a depth test to be performed in the rendering pass.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qnormaldiffusemapmaterial.xml" xlink:role="class">Qt3DRender::QNormalDiffuseMapMaterial</db:link></db:term>
<db:listitem>
<db:para>The QNormalDiffuseMapMaterial provides a default implementation of the phong lighting and bump effect where the diffuse light component is read from a texture map and the normals of the mesh being rendered from a normal texture map.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qnormaldiffusespecularmapmaterial.xml" xlink:role="class">Qt3DRender::QNormalDiffuseSpecularMapMaterial</db:link></db:term>
<db:listitem>
<db:para>The QNormalDiffuseSpecularMapMaterial provides a default implementation of the phong lighting and bump effect where the diffuse and specular light components are read from texture maps and the normals of the mesh being rendered from a normal texture map.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qobjectpicker.xml" xlink:role="class">Qt3DRender::QObjectPicker</db:link></db:term>
<db:listitem>
<db:para>The QObjectPicker class instantiates a component that can be used to interact with a QEntity by a process known as picking.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qparametermapping.xml" xlink:role="class">Qt3DRender::QParameterMapping</db:link></db:term>
<db:listitem>
<db:para>The QParameterMapping class provides ...</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qpervertexcolormaterial.xml" xlink:role="class">Qt3DRender::QPerVertexColorMaterial</db:link></db:term>
<db:listitem>
<db:para>The QPerVertexColorMaterial class provides a default implementation for rendering the color properties set for each vertex.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qphongmaterial.xml" xlink:role="class">Qt3DRender::QPhongMaterial</db:link></db:term>
<db:listitem>
<db:para>The QPhongMaterial class provides a default implementation of the phong lighting effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qplanegeometry.xml" xlink:role="class">Qt3DRender::QPlaneGeometry</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qplanemesh.xml" xlink:role="class">Qt3DRender::QPlaneMesh</db:link></db:term>
<db:listitem>
<db:para>A square planar mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qpointlight.xml" xlink:role="class">Qt3DRender::QPointLight</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qpointsize.xml" xlink:role="class">Qt3DRender::QPointSize</db:link></db:term>
<db:listitem>
<db:para>Specifies the size of rasterized points. May either be set statically or by shader programs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qshaderdata.xml" xlink:role="class">Qt3DRender::QShaderData</db:link></db:term>
<db:listitem>
<db:para>Provides a way of specifying values of a Uniform Block or a shader structure.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qskyboxentity.xml" xlink:role="class">Qt3DRender::QSkyboxEntity</db:link></db:term>
<db:listitem>
<db:para>Qt3DRender::QSkyboxEntity is a convenience Qt3DCore::QEntity subclass that can be used to insert a skybox in a 3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qspheregeometry.xml" xlink:role="class">Qt3DRender::QSphereGeometry</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qspheremesh.xml" xlink:role="class">Qt3DRender::QSphereMesh</db:link></db:term>
<db:listitem>
<db:para>A spherical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qspotlight.xml" xlink:role="class">Qt3DRender::QSpotLight</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qstateset.xml" xlink:role="class">Qt3DRender::QStateSet</db:link></db:term>
<db:listitem>
<db:para>The QStateSet FrameGraph node offers a way of specifying a set of QRenderState objects to be applied during the execution of a framegraph branch.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture1d.xml" xlink:role="class">Qt3DRender::QTexture1D</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target1D target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture1darray.xml" xlink:role="class">Qt3DRender::QTexture1DArray</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target1DArray target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture2d.xml" xlink:role="class">Qt3DRender::QTexture2D</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target2D target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture2darray.xml" xlink:role="class">Qt3DRender::QTexture2DArray</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target2DArray target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture2dmultisample.xml" xlink:role="class">Qt3DRender::QTexture2DMultisample</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target2DMultisample target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture2dmultisamplearray.xml" xlink:role="class">Qt3DRender::QTexture2DMultisampleArray</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target2DMultisampleArray target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture3d.xml" xlink:role="class">Qt3DRender::QTexture3D</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target3D target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexturebuffer.xml" xlink:role="class">Qt3DRender::QTextureBuffer</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a TargetBuffer target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexturecubemap.xml" xlink:role="class">Qt3DRender::QTextureCubeMap</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a TargetCubeMap target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexturecubemaparray.xml" xlink:role="class">Qt3DRender::QTextureCubeMapArray</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a TargetCubeMapArray target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtextureimage.xml" xlink:role="class">Qt3DRender::QTextureImage</db:link></db:term>
<db:listitem>
<db:para>Encapsulates the necessary information to create an OpenGL texture image from an image source.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexturerectangle.xml" xlink:role="class">Qt3DRender::QTextureRectangle</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a TargetRectangle target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexturewrapmode.xml" xlink:role="class">Qt3DRender::QTextureWrapMode</db:link></db:term>
<db:listitem>
<db:para>Defines the wrap mode a Qt3DRender::QAbstractTextureProvider should apply to a texture.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtorusgeometry.xml" xlink:role="class">Qt3DRender::QTorusGeometry</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtorusmesh.xml" xlink:role="class">Qt3DRender::QTorusMesh</db:link></db:term>
<db:listitem>
<db:para>A custom mesh.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
</db:section>
</db:article>
