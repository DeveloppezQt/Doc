<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAbstractPlanarVideoBuffer Class</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qabstractplanarvideobuffer.xml">QAbstractPlanarVideoBuffer</db:link> class is an abstraction for planar video data.</db:para>
<db:para>This class was introduced in Qt 5.4.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAbstractPlanarVideoBuffer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += multimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstractvideobuffer.xml" xlink:role="class">QAbstractVideoBuffer</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QAbstractPlanarVideoBuffer is part of <db:simplelist><db:member>QtMultimedia</db:member><db:member>multimedia</db:member><db:member>multimedia_video</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qabstractplanarvideobuffer.xml">QAbstractPlanarVideoBuffer</db:link> extends <db:link xlink:href="qabstractvideobuffer.xml">QAbstractVideoBuffer</db:link> to support mapping non-continuous planar video data. Implement this instead of <db:link xlink:href="qabstractvideobuffer.xml">QAbstractVideoBuffer</db:link> when the abstracted video data stores planes in separate buffers or includes padding between planes which would interfere with calculating offsets from the bytes per line and frame height.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractvideobuffer.xml#mapPlanes">QAbstractVideoBuffer::mapPlanes</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QAbstractPlanarVideoBuffer">
<db:title>QAbstractPlanarVideoBuffer::QAbstractPlanarVideoBuffer(QAbstractVideoBuffer::HandleType <db:emphasis>type</db:emphasis>)</db:title>
<db:para>Constructs an abstract planar video buffer of the given <db:code role="parameter">type</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QAbstractPlanarVideoBuffer">
<db:title>[virtual noexcept] QAbstractPlanarVideoBuffer::~QAbstractPlanarVideoBuffer()</db:title>
<db:para>Destroys an abstract planar video buffer.</db:para>
</db:section>
<db:section xml:id="map">
<db:title>[pure virtual] int QAbstractPlanarVideoBuffer::map(QAbstractVideoBuffer::MapMode <db:emphasis>mode</db:emphasis>, int *<db:emphasis>numBytes</db:emphasis>, int[4] <db:emphasis>bytesPerLine</db:emphasis>, uchar *[4] <db:emphasis>data</db:emphasis>)</db:title>
<db:para>Maps the contents of a video buffer to memory.</db:para>
<db:para>The map <db:code role="parameter">mode</db:code> indicates whether the contents of the mapped memory should be read from and/or written to the buffer. If the map mode includes the <db:code>QAbstractVideoBuffer::ReadOnly</db:code> flag the mapped memory will be populated with the content of the buffer when initially mapped. If the map mode includes the <db:code>QAbstractVideoBuffer::WriteOnly</db:code> flag the content of the possibly modified mapped memory will be written back to the buffer when unmapped.</db:para>
<db:para>When access to the data is no longer needed be sure to call the <db:link xlink:href="qabstractvideobuffer.xml#unmap">unmap</db:link>() function to release the mapped memory and possibly update the buffer contents.</db:para>
<db:para>Returns the number of planes in the mapped video data. For each plane the line stride of that plane will be returned in <db:code role="parameter">bytesPerLine</db:code>, and a pointer to the plane data will be returned in <db:code role="parameter">data</db:code>. The accumulative size of the mapped data is returned in <db:code role="parameter">numBytes</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractvideobuffer.xml#map">QAbstractVideoBuffer::map</db:link>()</db:member>
<db:member><db:link xlink:href="qabstractvideobuffer.xml#unmap">QAbstractVideoBuffer::unmap</db:link>()</db:member>
<db:member><db:link xlink:href="qabstractvideobuffer.xml#mapMode">QAbstractVideoBuffer::mapMode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
