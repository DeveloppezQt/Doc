<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Using Logarithmic Value Axes</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Shows how to use <db:link xlink:href="qlogvalueaxis.xml">QLogValueAxis</db:link>.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:note>
<db:para>This is part of the <db:link xlink:href="qtcharts-chartsgallery-example.xml">Charts with Widgets Gallery</db:link> example.</db:para>
</db:note>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_logvalueaxis.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Create a <db:link xlink:href="qlineseries.xml">QLineSeries</db:link> instance and add some data to it.</db:para>
<db:programlisting language="cpp">auto series = new QLineSeries;
*series &amp;lt;&amp;lt; QPointF(1.0, 1.0) &amp;lt;&amp;lt; QPointF(2.0, 73.0) &amp;lt;&amp;lt; QPointF(3.0, 268.0) &amp;lt;&amp;lt; QPointF(4.0, 17.0)
        &amp;lt;&amp;lt; QPointF(5.0, 4325.0) &amp;lt;&amp;lt; QPointF(6.0, 723.0);
</db:programlisting>
<db:para>To present the data on the chart we need a <db:link xlink:href="qchart.xml">QChart</db:link> instance. Add the series to it, hide the legend and set the title of the chart.</db:para>
<db:programlisting language="cpp">auto chart = new QChart;
chart-&amp;gt;addSeries(series);
chart-&amp;gt;legend()-&amp;gt;hide();
chart-&amp;gt;setTitle(&quot;Logarithmic Axis&quot;);
</db:programlisting>
<db:para>Create the axes. Add them to the chart and attach to the series.</db:para>
<db:programlisting language="cpp">auto axisX = new QValueAxis;
axisX-&amp;gt;setTitleText(&quot;Data point&quot;);
axisX-&amp;gt;setLabelFormat(&quot;%i&quot;);
axisX-&amp;gt;setTickCount(series-&amp;gt;count());
chart-&amp;gt;addAxis(axisX, Qt::AlignBottom);
series-&amp;gt;attachAxis(axisX);

auto axisY = new QLogValueAxis;
axisY-&amp;gt;setTitleText(&quot;Values&quot;);
axisY-&amp;gt;setLabelFormat(&quot;%g&quot;);
axisY-&amp;gt;setBase(8.0);
axisY-&amp;gt;setMinorTickCount(-1);
chart-&amp;gt;addAxis(axisY, Qt::AlignLeft);
series-&amp;gt;attachAxis(axisY);
</db:programlisting>
<db:para>Then create a <db:link xlink:href="qchartview.xml">QChartView</db:link> object with <db:link xlink:href="qchart.xml">QChart</db:link> as a parameter.</db:para>
<db:programlisting language="cpp">createDefaultChartView(chart);
</db:programlisting>
<db:para>The chart is ready to be shown.</db:para>
</db:article>
