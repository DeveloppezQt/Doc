<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QRenderTarget Class</db:title>
<db:subtitle>Qt3DRender::QRenderTarget</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qt3drender-qrendertarget.xml">QRenderTarget</db:link> class encapsulates a target (usually a frame buffer object) which the renderer can render into.</db:para>
<db:para>This class was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QRenderTarget</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-rendertarget.xml" xlink:role="">RenderTarget</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qcomponent.xml" xlink:role="class">Qt3DCore::QComponent</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qt3drender-qrendertarget.xml">Qt3DRender::QRenderTarget</db:link> comprises of <db:link xlink:href="qt3drender-qrendertargetoutput.xml">Qt3DRender::QRenderTargetOutput</db:link> objects, which specify the the buffers the render target is rendering to. The user can specify MRT(Multiple Render Targets) by attaching multiple textures to different attachment points. The results are undefined if the user tries to attach multiple textures to the same attachment point. At render time, only the draw buffers specified in the <db:link xlink:href="qt3drender-qrendertargetselector.xml">Qt3DRender::QRenderTargetSelector</db:link> are used.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QRenderTarget">
<db:title>[explicit] QRenderTarget::QRenderTarget(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>The constructor creates a new <db:link xlink:href="qt3drender-qrendertarget.xml">QRenderTarget::QRenderTarget</db:link> instance with the specified <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="addOutput">
<db:title>void QRenderTarget::addOutput(Qt3DRender::QRenderTargetOutput *<db:emphasis>output</db:emphasis>)</db:title>
<db:para>Adds a chosen output via <db:code role="parameter">output</db:code>.</db:para>
</db:section>
<db:section xml:id="outputs">
<db:title>QVector&lt;Qt3DRender::QRenderTargetOutput *&gt; QRenderTarget::outputs() const</db:title>
<db:para>Returns the chosen outputs.</db:para>
</db:section>
<db:section xml:id="removeOutput">
<db:title>void QRenderTarget::removeOutput(Qt3DRender::QRenderTargetOutput *<db:emphasis>output</db:emphasis>)</db:title>
<db:para>Removes a chosen output via <db:code role="parameter">output</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
