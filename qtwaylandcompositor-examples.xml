<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Wayland Compositor Examples</db:title>
<db:productname>QtWaylandCompositor</db:productname>
<db:edition>Qt 5.14.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Wayland Compositor Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Examples for the Qt Wayland Compositor module.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="details"/>
<db:para>These are the Qt Wayland Compositor examples.</db:para>
<db:variablelist role="members">
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-ivi-compositor-example.xml" xlink:role="page">Qt Wayland Compositor Examples - IVI Compositor</db:link></db:term>
<db:listitem>
<db:para>IVI Compositor is an example that demonstrates how to use the IviApplication extension.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-minimal-qml-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Minimal QML</db:link></db:term>
<db:listitem>
<db:para>Minimal QML is a simple example that demonstrates how to write a Wayland compositor in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-multi-output-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Multi Output</db:link></db:term>
<db:listitem>
<db:para>Multi Output is an example that demonstrates a compositor with multiple outputs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-multi-screen-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Multi Screen</db:link></db:term>
<db:listitem>
<db:para>Multi Screen is a desktop-style Wayland compositor for multiple screens.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-overview-compositor-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Overview Compositor</db:link></db:term>
<db:listitem>
<db:para>Overview Compositor shows how to switch between clients in a grid.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-pure-qml-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Pure QML</db:link></db:term>
<db:listitem>
<db:para>Pure QML is an example that demonstrates how to write a Wayland compositor in pure QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-qwindow-compositor-example.xml" xlink:role="page">Qt Wayland Compositor Examples - QWindow Compositor</db:link></db:term>
<db:listitem>
<db:para>QWindow Compositor is an example that demonstrates how to write a Wayland compositor in C++.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-server-side-decoration-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Sever Side Decoration Compositor</db:link></db:term>
<db:listitem>
<db:para>Server Side Decoration Compositor is a simple example that demonstrates server side window decorations on xdg-shell.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-spanning-screens-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Spanning Screens</db:link></db:term>
<db:listitem>
<db:para>Spanning Screens is an example that demonstrates how to let Wayland clients span multiple screens.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:article>
