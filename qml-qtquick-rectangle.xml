<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Rectangle QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.15.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Paints a filled rectangle with an optional border.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick 2.15</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Item</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Rectangle is part of <db:simplelist><db:member>qtquick-visual</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Rectangle items are used to fill areas with solid color or gradients, and/or to provide a rectangular border.</db:para>
<db:section xml:id="appearance">
<db:title>Appearance</db:title>
<db:para>Each Rectangle item is painted using either a solid fill color, specified using the <db:link xlink:href="qml-qtquick-rectangle.xml#color-prop">color</db:link> property, or a gradient, defined using a Gradient type and set using the <db:link xlink:href="qml-qtquick-rectangle.xml#gradient-prop">gradient</db:link> property. If both a color and a gradient are specified, the gradient is used.</db:para>
<db:para>You can add an optional border to a rectangle with its own color and thickness by setting the <db:link xlink:href="qml-qtquick-rectangle.xml#border.color-prop">border.color</db:link> and <db:link xlink:href="qml-qtquick-rectangle.xml#border.width-prop">border.width</db:link> properties. Set the color to &quot;transparent&quot; to paint a border without a fill color.</db:para>
<db:para>You can also create rounded rectangles using the <db:link xlink:href="qml-qtquick-rectangle.xml#radius-prop">radius</db:link> property. Since this introduces curved edges to the corners of a rectangle, it may be appropriate to set the <db:link xlink:href="qml-qtquick-item.xml#antialiasing-prop">Item::antialiasing</db:link> property to improve its appearance.</db:para>
</db:section>
<db:section xml:id="example-usage">
<db:title>Example Usage</db:title>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/declarative-rect.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
<db:para>The following example shows the effects of some of the common properties on a Rectangle item, which in this case is used to create a square:</db:para>
<db:programlisting language="qml">import QtQuick 2.0

Rectangle {
    width: 100
    height: 100
    color: &quot;red&quot;
    border.color: &quot;black&quot;
    border.width: 5
    radius: 10
}
</db:programlisting>
</db:section>
<db:section xml:id="performance">
<db:title>Performance</db:title>
<db:para>Using the <db:link xlink:href="qml-qtquick-item.xml#antialiasing-prop">Item::antialiasing</db:link> property improves the appearance of a rounded rectangle at the cost of rendering performance. You should consider unsetting this property for rectangles in motion, and only set it when they are stationary.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-image.xml">Image</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="antialiasing-prop">
<db:title>antialiasing : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>antialiasing</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Used to decide if the Rectangle should use antialiasing or not. <db:link xlink:href="qtquick-visualcanvas-scenegraph-renderer.xml#antialiasing">Antialiasing</db:link> provides information on the performance implications of this property.</db:para>
<db:para>The default is true for Rectangles with a radius, and false otherwise.</db:para>
</db:section>
<db:section xml:id="border-prop">
<db:title>border group</db:title>
<db:bridgehead renderas="sect2" xml:id="border.color-prop">border.color : color</db:bridgehead>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>border.color</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="border.width-prop">border.width : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>border.width</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The width and color used to draw the border of the rectangle.</db:para>
<db:para>A width of 1 creates a thin line. For no line, use a width of 0 or a transparent color.</db:para>
<db:note>
<db:para>The width of the rectangle's border does not affect the geometry of the rectangle itself or its position relative to other items if anchors are used.</db:para>
</db:note>
<db:para>The border is rendered within the rectangle's boundaries.</db:para>
</db:section>
<db:section xml:id="color-prop">
<db:title>color : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>color</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the color used to fill the rectangle.</db:para>
<db:para>The default color is white.</db:para>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/rect-color.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
<db:para>The following example shows rectangles with colors specified using hexadecimal and named color notation:</db:para>
<db:programlisting language="qml">Rectangle {
    color: &quot;#00B000&quot;
    width: 80; height: 80
}

Rectangle {
    color: &quot;steelblue&quot;
    y: 100; width: 80; height: 80
}
</db:programlisting>
<db:para>If both a gradient and a color are specified, the gradient will be used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-rectangle.xml#gradient-prop">gradient</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="gradient-prop">
<db:title>gradient : any</db:title>
<db:fieldsynopsis>
<db:type>any</db:type>
<db:varname>gradient</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The gradient to use to fill the rectangle.</db:para>
<db:para>This property allows for the construction of simple vertical or horizontal gradients. Other gradients may be formed by adding rotation to the rectangle.</db:para>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/declarative-rect_gradient.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
<db:programlisting language="qml">Rectangle {
    y: 0; width: 80; height: 80
    color: &quot;lightsteelblue&quot;
}

Rectangle {
    y: 100; width: 80; height: 80
    gradient: Gradient {
        GradientStop { position: 0.0; color: &quot;lightsteelblue&quot; }
        GradientStop { position: 1.0; color: &quot;blue&quot; }
    }
}

Rectangle {
    y: 200; width: 80; height: 80
    rotation: 90
    gradient: Gradient {
        GradientStop { position: 0.0; color: &quot;lightsteelblue&quot; }
        GradientStop { position: 1.0; color: &quot;blue&quot; }
    }
}
</db:programlisting>
<db:para>The property also accepts gradient presets from <db:link xlink:href="qgradient.xml#Preset-enum">QGradient::Preset</db:link>. Note however that due to Rectangle only supporting simple vertical or horizontal gradients, any preset with an unsupported angle will revert to the closest representation.</db:para>
<db:programlisting language="qml">Rectangle {
    y: 0; width: 80; height: 80
    gradient: Gradient.NightFade
}

Rectangle {
    y: 0; width: 80; height: 80
    gradient: &quot;NightFade&quot;
}
</db:programlisting>
<db:para>If both a gradient and a color are specified, the gradient will be used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-gradient.xml">Gradient</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-rectangle.xml#color-prop">color</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="radius-prop">
<db:title>radius : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>radius</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the corner radius used to draw a rounded rectangle.</db:para>
<db:para>If radius is non-zero, the rectangle will be painted as a rounded rectangle, otherwise it will be painted as a normal rectangle. The same radius is used by all 4 corners; there is currently no way to specify different radii for different corners.</db:para>
</db:section>
</db:section>
</db:article>
