<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick 3D - Robot Arm Example</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates how to add a C++ backend to a 3D project from Qt Design Studio.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">import QmlProject

Project {
    mainFile: &quot;content/App.qml&quot;

    /* Include .qml, .js, and image files from current directory and subdirectories */
    QmlFiles {
        directory: &quot;content&quot;
    }

    QmlFiles {
        directory: &quot;imports&quot;
    }

    QmlFiles {
        directory: &quot;backend_mock&quot;
    }

    JavaScriptFiles {
        directory: &quot;content&quot;
    }

    JavaScriptFiles {
        directory: &quot;imports&quot;
    }

    ImageFiles {
        directory: &quot;content&quot;
    }

    Files {
        filter: &quot;*.conf&quot;
        files: [&quot;qtquickcontrols2.conf&quot;]
    }

    Files {
        filter: &quot;qmldir&quot;
        directory: &quot;.&quot;
    }

    Files {
        filter: &quot;*.ttf;*.otf&quot;
    }

    Files {
        filter: &quot;*.wav;*.mp3&quot;
    }

    Files {
        filter: &quot;*.mp4&quot;
    }

    Files {
        filter: &quot;*.glsl;*.glslv;*.glslf;*.vsh;*.fsh;*.vert;*.frag&quot;
    }

    Files {
        filter: &quot;*.mesh&quot;
        directory: &quot;asset_imports&quot;
    }

    Environment {
        QT_QUICK_CONTROLS_CONF: &quot;qtquickcontrols2.conf&quot;
        QT_AUTO_SCREEN_SCALE_FACTOR: &quot;1&quot;
        QT_LOGGING_RULES: &quot;qt.qml.connections=false&quot;
        QT_ENABLE_HIGHDPI_SCALING: &quot;0&quot;
        /* Useful for debugging
       QSG_VISUALIZE=batches
       QSG_VISUALIZE=clip
       QSG_VISUALIZE=changes
       QSG_VISUALIZE=overdraw
       */
    }

    qt6Project: true

    /* List of plugin directories passed to QML runtime */
    importPaths: [ &quot;imports&quot;, &quot;asset_imports&quot;, &quot;backend_mock&quot; ]

    /* Required for deployment */
    targetDirectory: &quot;/opt/RobotArm&quot;

    qdsVersion: &quot;3.0&quot;

    /* If any modules the project imports require widgets (e.g. QtCharts), widgetApp must be true */
    widgetApp: true

    multilanguageSupport: true
    supportedLanguages: [&quot;en&quot;]
    primaryLanguage: &quot;en&quot;

}

</db:programlisting>
</db:article>
