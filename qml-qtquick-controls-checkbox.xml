<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>CheckBox QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A checkbox with a text label.</db:para>
<db:para>This type was introduced in Qt 5.1.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 1.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-focusscope.xml">FocusScope</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>CheckBox is part of <db:simplelist><db:member><db:link xlink:href="controls.xml">Buttons and Controls</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/checkbox.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>A <db:link xlink:href="qml-qtquick-controls-checkbox.xml">CheckBox</db:link> is an option button that can be toggled on (checked) or off (unchecked). Checkboxes are typically used to represent features in an application that can be enabled or disabled without affecting others.</db:para>
<db:para>The state of the checkbox can be set with the <db:link xlink:href="qml-qtquick-controls-checkbox.xml#checked-prop">checked</db:link> property.</db:para>
<db:para>In addition to the checked and unchecked states, there is a third state: partially checked. This state indicates that the regular checked/unchecked state can not be determined; generally because of other states that affect the checkbox. This state is useful when several child nodes are selected in a treeview, for example.</db:para>
<db:para>The partially checked state can be made available to the user by setting <db:link xlink:href="qml-qtquick-controls-checkbox.xml#partiallyCheckedEnabled-prop">partiallyCheckedEnabled</db:link> to <db:code>true</db:code>, or set directly by setting <db:link xlink:href="qml-qtquick-controls-checkbox.xml#checkedState-prop">checkedState</db:link> to <db:code>Qt.PartiallyChecked</db:code>. <db:link xlink:href="qml-qtquick-controls-checkbox.xml#checkedState-prop">checkedState</db:link> behaves identically to <db:link xlink:href="qml-qtquick-controls-checkbox.xml#checked-prop">checked</db:link> when <db:link xlink:href="qml-qtquick-controls-checkbox.xml#partiallyCheckedEnabled-prop">partiallyCheckedEnabled</db:link> is <db:code>false</db:code>; setting one will appropriately set the other.</db:para>
<db:para>The label is shown next to the checkbox, and you can set the label text using its <db:link xlink:href="qml-qtquick-controls-checkbox.xml#text-prop">text</db:link> property.</db:para>
<db:programlisting language="qml">Column {
    CheckBox {
        text: qsTr(&quot;Breakfast&quot;)
        checked: true
    }
    CheckBox {
        text: qsTr(&quot;Lunch&quot;)
    }
    CheckBox {
        text: qsTr(&quot;Dinner&quot;)
        checked: true
    }
}
</db:programlisting>
<db:para>Whenever a <db:link xlink:href="qml-qtquick-controls-checkbox.xml">CheckBox</db:link> is clicked, it emits the <db:link xlink:href="qml-qtquick-controls-checkbox.xml#clicked-signal">clicked</db:link>() signal.</db:para>
<db:para>You can create a custom appearance for a <db:link xlink:href="qml-qtquick-controls-checkbox.xml">CheckBox</db:link> by assigning a <db:link xlink:href="qml-qtquick-controls-styles-checkboxstyle.xml">CheckBoxStyle</db:link>.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="activeFocusOnPress-prop">
<db:title>activeFocusOnPress : bool</db:title>
<db:para>This property is <db:code>true</db:code> if the control takes the focus when it is pressed; <db:link xlink:href="qquickitem.xml#forceActiveFocus">forceActiveFocus</db:link>() will be called on the control.</db:para>
</db:section>
<db:section xml:id="checked-prop">
<db:title>checked : bool</db:title>
<db:para>This property is <db:code>true</db:code> if the control is checked.</db:para>
</db:section>
<db:section xml:id="checkedState-prop">
<db:title>checkedState : enumeration</db:title>
<db:para>This property indicates the current checked state of the checkbox.</db:para>
<db:para>Possible values: <db:code>Qt.UnChecked</db:code> - The checkbox is not checked (default). <db:code>Qt.Checked</db:code> - The checkbox is checked. <db:code>Qt.PartiallyChecked</db:code> - The checkbox is in a partially checked (or &quot;mixed&quot;) state.</db:para>
<db:para>The <db:link xlink:href="qml-qtquick-controls-checkbox.xml#checked-prop">checked</db:link> property also determines whether this property is <db:code>Qt.Checked</db:code> or <db:code>Qt.UnChecked</db:code>, and vice versa.</db:para>
</db:section>
<db:section xml:id="exclusiveGroup-prop">
<db:title>exclusiveGroup : ExclusiveGroup</db:title>
<db:para>This property stores the <db:link xlink:href="qml-qtquick-controls-exclusivegroup.xml">ExclusiveGroup</db:link> that the control belongs to.</db:para>
</db:section>
<db:section xml:id="hovered-prop">
<db:title>[read-only] hovered : bool</db:title>
<db:para>This property indicates whether the control is being hovered.</db:para>
</db:section>
<db:section xml:id="partiallyCheckedEnabled-prop">
<db:title>partiallyCheckedEnabled : bool</db:title>
<db:para>This property determines whether the <db:code>Qt.PartiallyChecked</db:code> state is available.</db:para>
<db:para>A checkbox may be in a partially checked state when the regular checked state can not be determined.</db:para>
<db:para>Setting <db:link xlink:href="qml-qtquick-controls-checkbox.xml#checkedState-prop">checkedState</db:link> to <db:code>Qt.PartiallyChecked</db:code> will implicitly set this property to <db:code>true</db:code>.</db:para>
<db:para>If this property is <db:code>true</db:code>, <db:link xlink:href="qml-qtquick-controls-checkbox.xml#checked-prop">checked</db:link> will be <db:code>false</db:code>.</db:para>
<db:para>By default, this property is <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="pressed-prop">
<db:title>pressed : bool</db:title>
<db:para>This property is <db:code>true</db:code> if the control is being pressed. Set this property to manually invoke a mouse click.</db:para>
</db:section>
<db:section xml:id="style-prop">
<db:title>style : Component</db:title>
<db:para>The style Component for this control.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-controls-styles-qmlmodule.xml">Qt Quick Controls Styles QML Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="text-prop">
<db:title>text : string</db:title>
<db:para>This property holds the text that the label should display.</db:para>
</db:section>
<db:section xml:id="tooltip-prop">
<db:title>[since QtQuick.Controls 1.7] tooltip : string</db:title>
<db:para>This property holds the button tooltip.</db:para>
<db:para>This property was introduced in QtQuick.Controls 1.7.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="clicked-signal">
<db:title>clicked()</db:title>
<db:para>Emitted whenever the control is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onClicked</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
