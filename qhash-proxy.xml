<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QHash</db:title>
<db:productname>QtXmlPatterns</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt XML Patterns Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt XML Patterns Reference Documentation.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="function-documentation">
<db:title>Function Documentation</db:title>
<db:section xml:id="qHash">
<db:title>[since 4.4] uint qHash(const QXmlNodeModelIndex &amp;<db:emphasis>index</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>uint</db:type>
<db:methodname>qHash</db:methodname>
<db:methodparam>
<db:type>const QXmlNodeModelIndex &amp;</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">uint qHash(const QXmlNodeModelIndex &amp;index)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Computes a hash key from the <db:link xlink:href="qxmlnodemodelindex.xml">QXmlNodeModelIndex</db:link> <db:code role="parameter">index</db:code>, and returns it. This function would be used by <db:link xlink:href="qhash.xml#qhash">QHash</db:link> if you wanted to build a hash table for instances of <db:link xlink:href="qxmlnodemodelindex.xml">QXmlNodeModelIndex</db:link>.</db:para>
<db:para>The hash is computed on <db:link xlink:href="qxmlnodemodelindex.xml#data">QXmlNodeModelIndex::data</db:link>(), <db:link xlink:href="qxmlnodemodelindex.xml#additionalData">QXmlNodeModelIndex::additionalData</db:link>(), and <db:link xlink:href="qxmlnodemodelindex.xml#model">QXmlNodeModelIndex::model</db:link>(). This means the hash key can be used for node indexes from different node models.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
</db:section>
</db:section>
</db:article>
