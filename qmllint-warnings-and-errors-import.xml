<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Warnings occurred while importing</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Qml Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>[import] The imported module was not found.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>This warning category is spelled [import] by qmllint.</db:para>
<db:section xml:id="failed-to-import-module">
<db:title>Failed to import module</db:title>
<db:section xml:id="what-happened">
<db:title>What happened?</db:title>
<db:para>The module imported via <db:link xlink:href="qtqml-syntax-imports.xml">import statement</db:link> was not found.</db:para>
<db:para>This can be caused, for example, by</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>a typo in the import statement, or</db:para>
</db:listitem>
<db:listitem>
<db:para>a user-defined module that was not built, or</db:para>
</db:listitem>
<db:listitem>
<db:para>a wrong <db:link xlink:href="qtqml-syntax-imports.xml#qml-import-path">import path</db:link>, or</db:para>
</db:listitem>
<db:listitem>
<db:para>(qmlls only) <db:link xlink:href="cmake-variable-qt-qml-generate-qmlls-ini.xml">QT_QML_GENERATE_QMLLS_INI</db:link> not being set, or</db:para>
</db:listitem>
<db:listitem>
<db:para>a missing module</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="why-is-this-bad">
<db:title>Why is this bad?</db:title>
<db:para>The application can't run because it can't find a module it relies on.</db:para>
</db:section>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:section xml:id="typo-in-the-import-statement">
<db:title>Typo In The Import Statement</db:title>
<db:programlisting language="qml">import QtQuicky // not ok: typo in module name

Item {
}
</db:programlisting>
<db:para>To fix this warning, correct the typo:</db:para>
<db:programlisting language="qml">import QtQuick // ok: no typo in module name

Item {
}
</db:programlisting>
</db:section>
<db:section xml:id="user-defined-module-that-was-not-built">
<db:title>User-defined module that was not built</db:title>
<db:para>Some tooling like <db:link xlink:href="qtqml-tooling-qmlls.xml">QML Language Server</db:link> or <db:link xlink:href="qtqml-tooling-qmllint.xml">qmllint</db:link> can't find user-defined modules when they are not built. If your project defines the QML Module you are trying to import, then the QML tooling will not find it until you build it.</db:para>
<db:note>
<db:para>If building the module does not help when using <db:link xlink:href="qtqml-tooling-qmlls.xml">QML Language Server</db:link>, follow the instructions in <db:link xlink:href="qtqml-tooling-qmlls.xml#setting-up-the-qml-language-server-in-your-editor">QML Language Server setup instructions</db:link> and make sure that you communicate the correct build folder to QML Language Server.</db:para>
</db:note>
</db:section>
<db:section xml:id="wrong-import-path">
<db:title>Wrong import path</db:title>
<db:para>Please refer to <db:link xlink:href="qtqml-syntax-imports.xml#qml-import-path">the QML import path documentation</db:link> and to <db:link xlink:href="">the debugging module import documentation</db:link> for more information about import paths.</db:para>
</db:section>
<db:section xml:id="qt-qml-generate-qmlls-ini-not-being-sert">
<db:title>QT_QML_GENERATE_QMLLS_INI not being sert</db:title>
<db:para>Please refer to <db:link xlink:href="cmake-variable-qt-qml-generate-qmlls-ini.xml">the QT_QML_GENERATE_QMLLS_INI documentation</db:link> for more information on how to set that CMake variable.</db:para>
</db:section>
<db:section xml:id="missing-module">
<db:title>Missing module</db:title>
<db:para>If the previous sections did not help to find the imported module, it might be missing. This might be caused by a missing dependency. When using external libraries, verify that they are actually installed, and that their modules end up in an <db:link xlink:href="qtqml-syntax-imports.xml#qml-import-path">import path</db:link>.</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="component-was-not-found">
<db:title>Component was not found</db:title>
<db:section xml:id="component-was-not-found-what-happened-10">
<db:title>What happened?</db:title>
<db:para>Some component was not found.</db:para>
</db:section>
<db:section xml:id="component-was-not-found-why-is-this-bad-11">
<db:title>Why is this bad?</db:title>
<db:para>The application can't run because it can't instantiate the non-found component.</db:para>
</db:section>
<db:section xml:id="component-was-not-found-examples-12">
<db:title>Examples</db:title>
<db:section xml:id="typo-in-the-component-name">
<db:title>Typo in the component name</db:title>
<db:programlisting language="qml">import QtQuick

Item {
    Itemy {} // not ok: typo in name
}
</db:programlisting>
<db:para>To fix this warning, correct the typo:</db:para>
<db:programlisting language="qml">import QtQuick

Item {
    Item {} // ok: no typo in name
}
</db:programlisting>
</db:section>
<db:section xml:id="missing-import-statement">
<db:title>Missing import statement</db:title>
<db:programlisting language="qml">Item { // not ok: must be imported from QtQuick first
}
</db:programlisting>
<db:para>To fix this warning, add the missing module import:</db:para>
<db:programlisting language="qml">import QtQuick

Item { // ok: was imported from QtQuick
}
</db:programlisting>
</db:section>
</db:section>
</db:section>
<db:section xml:id="import-qualifier-must-start-with-a-capital-letter">
<db:title>Import qualifier must start with a capital letter</db:title>
<db:section xml:id="import-qualifier-must-start-with-a-capital-letter-what-happened-16">
<db:title>What happened?</db:title>
<db:para>Some imported module has an invalid qualifier.</db:para>
</db:section>
<db:section xml:id="import-qualifier-must-start-with-a-capital-letter-why-is-this-bad-17">
<db:title>Why is this bad?</db:title>
<db:para>The module imported with this invalid qualifier can't be used.</db:para>
</db:section>
<db:section xml:id="import-qualifier-must-start-with-a-capital-letter-examples-18">
<db:title>Examples</db:title>
<db:programlisting language="qml">import QtQuick as qq

qq.Item {
}
</db:programlisting>
<db:para>To fix this warning, make the import qualifier start with an upper case letter:</db:para>
<db:programlisting language="qml">import QtQuick as Qq

Qq.Item {
}
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="unknown-import-syntax">
<db:title>Unknown import syntax</db:title>
<db:section xml:id="unknown-import-syntax-what-happened-20">
<db:title>What happened?</db:title>
<db:para>An import statement is using an invalid <db:link xlink:href="qtqml-syntax-imports.xml">import syntax</db:link>.</db:para>
</db:section>
<db:section xml:id="unknown-import-syntax-why-is-this-bad-21">
<db:title>Why is this bad?</db:title>
<db:para>The application can't run because it can't import a module it relies on.</db:para>
</db:section>
<db:section xml:id="unknown-import-syntax-examples-22">
<db:title>Examples</db:title>
<db:programlisting language="qml">import &quot;¯\(ツ)/¯:/path/to/Module&quot;
import QtQuick

Item {
}
</db:programlisting>
<db:para>To fix this warning, use URLs that have an allowed scheme:</db:para>
<db:programlisting language="qml">import &quot;qrc:/path/to/Module&quot;
import QtQuick

Item {
}
</db:programlisting>
<db:note>
<db:para>This example assumes that you are not using <db:link xlink:href="qqmlabstracturlinterceptor.xml">URL handlers</db:link>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtqml-syntax-imports.xml">Import Statements</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
