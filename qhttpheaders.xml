<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QHttpHeaders Class</db:title>
<db:productname>QtNetwork</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Network Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link> is a class for holding HTTP headers.</db:para>
<db:para>This class was introduced in Qt 6.7.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QHttpHeaders</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Network)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Network)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += network</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QHttpHeaders is part of <db:simplelist><db:member></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The class is an interface type for Qt networking APIs that use or consume such headers.</db:para>
<db:section xml:id="allowed-field-name-and-value-characters">
<db:title>Allowed field name and value characters</db:title>
<db:para>An HTTP header consists of <db:emphasis>name</db:emphasis> and <db:emphasis>value</db:emphasis>. When setting these, <db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link> validates <db:emphasis>name</db:emphasis> and <db:emphasis>value</db:emphasis> to only contain characters allowed by the HTTP RFCs. For detailed information see <db:link xlink:href="https://datatracker.ietf.org/doc/html/rfc9110#name-field-values">RFC 9110 Chapters 5.1 and 5.5</db:link>.</db:para>
<db:para>In all, this means:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:code>name</db:code> must consist of visible ASCII characters, and must not be empty</db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>value</db:code> may consist of arbitrary bytes, as long as header and use case specific encoding rules are adhered to. <db:code>value</db:code> may be empty</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The setters of this class automatically remove any leading or trailing whitespaces from <db:emphasis>value</db:emphasis>, as they must be ignored during the <db:emphasis>value</db:emphasis> processing.</db:para>
</db:section>
<db:section xml:id="combining-values">
<db:title>Combining values</db:title>
<db:para>Most HTTP header values can be combined with a single comma <db:code>','</db:code> plus an optional whitespace, and the semantic meaning is preserved. As an example, these two should be semantically similar:</db:para>
<db:programlisting language="cpp" role="bad">// Values as separate header entries
myheadername: myheadervalue1
myheadername: myheadervalue2
// Combined value
myheadername: myheadervalue1, myheadervalue2
</db:programlisting>
<db:para>However, there is a notable exception to this rule: <db:link xlink:href="https://datatracker.ietf.org/doc/html/rfc9110#name-field-order">Set-Cookie</db:link>. Due to this and the possibility of custom use cases, <db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link> does not automatically combine the values.</db:para>
</db:section>
<db:section xml:id="performance">
<db:title>Performance</db:title>
<db:para>Most <db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link> functions provide both <db:link xlink:href="qhttpheaders.xml#WellKnownHeader-enum">QHttpHeaders::WellKnownHeader</db:link> and <db:link xlink:href="qanystringview.xml">QAnyStringView</db:link> overloads. From a memory-usage and computation point of view it is recommended to use the <db:link xlink:href="qhttpheaders.xml#WellKnownHeader-enum">QHttpHeaders::WellKnownHeader</db:link> overloads.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="WellKnownHeader-enum">
<db:title>enum QHttpHeaders::WellKnownHeader</db:title>
<db:para>List of well known headers as per <db:link xlink:href="https://www.iana.org/assignments/http-fields">IANA registry</db:link>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AIM</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Accept</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AcceptAdditions</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AcceptCH</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AcceptDatetime</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AcceptEncoding</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AcceptFeatures</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AcceptLanguage</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AcceptPatch</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AcceptPost</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AcceptRanges</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AcceptSignature</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AccessControlAllowCredentials</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AccessControlAllowHeaders</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AccessControlAllowMethods</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AccessControlAllowOrigin</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AccessControlExposeHeaders</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AccessControlMaxAge</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AccessControlRequestHeaders</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AccessControlRequestMethod</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Age</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Allow</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ALPN</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AltSvc</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AltUsed</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Alternates</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ApplyToRedirectRef</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AuthenticationControl</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AuthenticationInfo</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Authorization</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CacheControl</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CacheStatus</db:code></db:para>
</db:td>
<db:td><db:code>31</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CalManagedID</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CalDAVTimezones</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CapsuleProtocol</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CDNCacheControl</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CDNLoop</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CertNotAfter</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CertNotBefore</db:code></db:para>
</db:td>
<db:td><db:code>38</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ClearSiteData</db:code></db:para>
</db:td>
<db:td><db:code>39</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ClientCert</db:code></db:para>
</db:td>
<db:td><db:code>40</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ClientCertChain</db:code></db:para>
</db:td>
<db:td><db:code>41</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Close</db:code></db:para>
</db:td>
<db:td><db:code>42</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Connection</db:code></db:para>
</db:td>
<db:td><db:code>43</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ContentDigest</db:code></db:para>
</db:td>
<db:td><db:code>44</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ContentDisposition</db:code></db:para>
</db:td>
<db:td><db:code>45</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ContentEncoding</db:code></db:para>
</db:td>
<db:td><db:code>46</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ContentID</db:code></db:para>
</db:td>
<db:td><db:code>47</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ContentLanguage</db:code></db:para>
</db:td>
<db:td><db:code>48</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ContentLength</db:code></db:para>
</db:td>
<db:td><db:code>49</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ContentLocation</db:code></db:para>
</db:td>
<db:td><db:code>50</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ContentRange</db:code></db:para>
</db:td>
<db:td><db:code>51</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ContentSecurityPolicy</db:code></db:para>
</db:td>
<db:td><db:code>52</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ContentSecurityPolicyReportOnly</db:code></db:para>
</db:td>
<db:td><db:code>53</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ContentType</db:code></db:para>
</db:td>
<db:td><db:code>54</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Cookie</db:code></db:para>
</db:td>
<db:td><db:code>55</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CrossOriginEmbedderPolicy</db:code></db:para>
</db:td>
<db:td><db:code>56</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CrossOriginEmbedderPolicyReportOnly</db:code></db:para>
</db:td>
<db:td><db:code>57</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CrossOriginOpenerPolicy</db:code></db:para>
</db:td>
<db:td><db:code>58</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CrossOriginOpenerPolicyReportOnly</db:code></db:para>
</db:td>
<db:td><db:code>59</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CrossOriginResourcePolicy</db:code></db:para>
</db:td>
<db:td><db:code>60</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::DASL</db:code></db:para>
</db:td>
<db:td><db:code>61</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Date</db:code></db:para>
</db:td>
<db:td><db:code>62</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::DAV</db:code></db:para>
</db:td>
<db:td><db:code>63</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::DeltaBase</db:code></db:para>
</db:td>
<db:td><db:code>64</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Depth</db:code></db:para>
</db:td>
<db:td><db:code>65</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Destination</db:code></db:para>
</db:td>
<db:td><db:code>66</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::DifferentialID</db:code></db:para>
</db:td>
<db:td><db:code>67</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::DPoP</db:code></db:para>
</db:td>
<db:td><db:code>68</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::DPoPNonce</db:code></db:para>
</db:td>
<db:td><db:code>69</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::EarlyData</db:code></db:para>
</db:td>
<db:td><db:code>70</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ETag</db:code></db:para>
</db:td>
<db:td><db:code>71</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Expect</db:code></db:para>
</db:td>
<db:td><db:code>72</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ExpectCT</db:code></db:para>
</db:td>
<db:td><db:code>73</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Expires</db:code></db:para>
</db:td>
<db:td><db:code>74</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Forwarded</db:code></db:para>
</db:td>
<db:td><db:code>75</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::From</db:code></db:para>
</db:td>
<db:td><db:code>76</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Hobareg</db:code></db:para>
</db:td>
<db:td><db:code>77</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Host</db:code></db:para>
</db:td>
<db:td><db:code>78</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::If</db:code></db:para>
</db:td>
<db:td><db:code>79</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::IfMatch</db:code></db:para>
</db:td>
<db:td><db:code>80</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::IfModifiedSince</db:code></db:para>
</db:td>
<db:td><db:code>81</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::IfNoneMatch</db:code></db:para>
</db:td>
<db:td><db:code>82</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::IfRange</db:code></db:para>
</db:td>
<db:td><db:code>83</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::IfScheduleTagMatch</db:code></db:para>
</db:td>
<db:td><db:code>84</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::IfUnmodifiedSince</db:code></db:para>
</db:td>
<db:td><db:code>85</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::IM</db:code></db:para>
</db:td>
<db:td><db:code>86</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::IncludeReferredTokenBindingID</db:code></db:para>
</db:td>
<db:td><db:code>87</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::KeepAlive</db:code></db:para>
</db:td>
<db:td><db:code>88</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Label</db:code></db:para>
</db:td>
<db:td><db:code>89</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::LastEventID</db:code></db:para>
</db:td>
<db:td><db:code>90</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::LastModified</db:code></db:para>
</db:td>
<db:td><db:code>91</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Link</db:code></db:para>
</db:td>
<db:td><db:code>92</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Location</db:code></db:para>
</db:td>
<db:td><db:code>93</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::LockToken</db:code></db:para>
</db:td>
<db:td><db:code>94</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::MaxForwards</db:code></db:para>
</db:td>
<db:td><db:code>95</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::MementoDatetime</db:code></db:para>
</db:td>
<db:td><db:code>96</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Meter</db:code></db:para>
</db:td>
<db:td><db:code>97</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::MIMEVersion</db:code></db:para>
</db:td>
<db:td><db:code>98</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Negotiate</db:code></db:para>
</db:td>
<db:td><db:code>99</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::NEL</db:code></db:para>
</db:td>
<db:td><db:code>100</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ODataEntityId</db:code></db:para>
</db:td>
<db:td><db:code>101</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ODataIsolation</db:code></db:para>
</db:td>
<db:td><db:code>102</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ODataMaxVersion</db:code></db:para>
</db:td>
<db:td><db:code>103</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ODataVersion</db:code></db:para>
</db:td>
<db:td><db:code>104</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::OptionalWWWAuthenticate</db:code></db:para>
</db:td>
<db:td><db:code>105</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::OrderingType</db:code></db:para>
</db:td>
<db:td><db:code>106</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Origin</db:code></db:para>
</db:td>
<db:td><db:code>107</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::OriginAgentCluster</db:code></db:para>
</db:td>
<db:td><db:code>108</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::OSCORE</db:code></db:para>
</db:td>
<db:td><db:code>109</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::OSLCCoreVersion</db:code></db:para>
</db:td>
<db:td><db:code>110</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Overwrite</db:code></db:para>
</db:td>
<db:td><db:code>111</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::PingFrom</db:code></db:para>
</db:td>
<db:td><db:code>112</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::PingTo</db:code></db:para>
</db:td>
<db:td><db:code>113</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Position</db:code></db:para>
</db:td>
<db:td><db:code>114</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Prefer</db:code></db:para>
</db:td>
<db:td><db:code>115</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::PreferenceApplied</db:code></db:para>
</db:td>
<db:td><db:code>116</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Priority</db:code></db:para>
</db:td>
<db:td><db:code>117</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ProxyAuthenticate</db:code></db:para>
</db:td>
<db:td><db:code>118</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ProxyAuthenticationInfo</db:code></db:para>
</db:td>
<db:td><db:code>119</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ProxyAuthorization</db:code></db:para>
</db:td>
<db:td><db:code>120</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ProxyStatus</db:code></db:para>
</db:td>
<db:td><db:code>121</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::PublicKeyPins</db:code></db:para>
</db:td>
<db:td><db:code>122</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::PublicKeyPinsReportOnly</db:code></db:para>
</db:td>
<db:td><db:code>123</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Range</db:code></db:para>
</db:td>
<db:td><db:code>124</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::RedirectRef</db:code></db:para>
</db:td>
<db:td><db:code>125</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Referer</db:code></db:para>
</db:td>
<db:td><db:code>126</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Refresh</db:code></db:para>
</db:td>
<db:td><db:code>127</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ReplayNonce</db:code></db:para>
</db:td>
<db:td><db:code>128</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ReprDigest</db:code></db:para>
</db:td>
<db:td><db:code>129</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::RetryAfter</db:code></db:para>
</db:td>
<db:td><db:code>130</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ScheduleReply</db:code></db:para>
</db:td>
<db:td><db:code>131</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ScheduleTag</db:code></db:para>
</db:td>
<db:td><db:code>132</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::SecPurpose</db:code></db:para>
</db:td>
<db:td><db:code>133</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::SecTokenBinding</db:code></db:para>
</db:td>
<db:td><db:code>134</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::SecWebSocketAccept</db:code></db:para>
</db:td>
<db:td><db:code>135</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::SecWebSocketExtensions</db:code></db:para>
</db:td>
<db:td><db:code>136</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::SecWebSocketKey</db:code></db:para>
</db:td>
<db:td><db:code>137</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::SecWebSocketProtocol</db:code></db:para>
</db:td>
<db:td><db:code>138</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::SecWebSocketVersion</db:code></db:para>
</db:td>
<db:td><db:code>139</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Server</db:code></db:para>
</db:td>
<db:td><db:code>140</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ServerTiming</db:code></db:para>
</db:td>
<db:td><db:code>141</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::SetCookie</db:code></db:para>
</db:td>
<db:td><db:code>142</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Signature</db:code></db:para>
</db:td>
<db:td><db:code>143</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::SignatureInput</db:code></db:para>
</db:td>
<db:td><db:code>144</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::SLUG</db:code></db:para>
</db:td>
<db:td><db:code>145</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::SoapAction</db:code></db:para>
</db:td>
<db:td><db:code>146</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::StatusURI</db:code></db:para>
</db:td>
<db:td><db:code>147</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::StrictTransportSecurity</db:code></db:para>
</db:td>
<db:td><db:code>148</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Sunset</db:code></db:para>
</db:td>
<db:td><db:code>149</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::SurrogateCapability</db:code></db:para>
</db:td>
<db:td><db:code>150</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::SurrogateControl</db:code></db:para>
</db:td>
<db:td><db:code>151</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::TCN</db:code></db:para>
</db:td>
<db:td><db:code>152</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::TE</db:code></db:para>
</db:td>
<db:td><db:code>153</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Timeout</db:code></db:para>
</db:td>
<db:td><db:code>154</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Topic</db:code></db:para>
</db:td>
<db:td><db:code>155</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Traceparent</db:code></db:para>
</db:td>
<db:td><db:code>156</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Tracestate</db:code></db:para>
</db:td>
<db:td><db:code>157</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Trailer</db:code></db:para>
</db:td>
<db:td><db:code>158</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::TransferEncoding</db:code></db:para>
</db:td>
<db:td><db:code>159</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::TTL</db:code></db:para>
</db:td>
<db:td><db:code>160</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Upgrade</db:code></db:para>
</db:td>
<db:td><db:code>161</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Urgency</db:code></db:para>
</db:td>
<db:td><db:code>162</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::UserAgent</db:code></db:para>
</db:td>
<db:td><db:code>163</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::VariantVary</db:code></db:para>
</db:td>
<db:td><db:code>164</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Vary</db:code></db:para>
</db:td>
<db:td><db:code>165</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Via</db:code></db:para>
</db:td>
<db:td><db:code>166</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::WantContentDigest</db:code></db:para>
</db:td>
<db:td><db:code>167</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::WantReprDigest</db:code></db:para>
</db:td>
<db:td><db:code>168</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::WWWAuthenticate</db:code></db:para>
</db:td>
<db:td><db:code>169</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::XContentTypeOptions</db:code></db:para>
</db:td>
<db:td><db:code>170</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::XFrameOptions</db:code></db:para>
</db:td>
<db:td><db:code>171</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::AcceptCharset</db:code></db:para>
</db:td>
<db:td><db:code>172</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::CPEPInfo</db:code></db:para>
</db:td>
<db:td><db:code>173</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::Pragma</db:code></db:para>
</db:td>
<db:td><db:code>174</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ProtocolInfo</db:code></db:para>
</db:td>
<db:td><db:code>175</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link></db:emphasis>::<db:emphasis role="bold">WellKnownHeader</db:emphasis>::ProtocolQuery</db:code></db:para>
</db:td>
<db:td><db:code>176</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QHttpHeaders">
<db:title>[noexcept] QHttpHeaders::QHttpHeaders()</db:title>
<db:para>Creates a new <db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link> object.</db:para>
</db:section>
<db:section xml:id="QHttpHeaders-2">
<db:title>QHttpHeaders::QHttpHeaders(const QHttpHeaders &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Creates a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="QHttpHeaders-1">
<db:title>[noexcept] QHttpHeaders::QHttpHeaders(QHttpHeaders &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Move-constructs the object from <db:code role="parameter">other</db:code>, which will be left <db:link xlink:href="qhttpheaders.xml#isEmpty">empty</db:link>.</db:para>
</db:section>
<db:section xml:id="dtor.QHttpHeaders">
<db:title>[noexcept] QHttpHeaders::~QHttpHeaders()</db:title>
<db:para>Disposes of the headers object.</db:para>
</db:section>
<db:section xml:id="append">
<db:title>bool QHttpHeaders::append(QAnyStringView <db:emphasis>name</db:emphasis>, QAnyStringView <db:emphasis>value</db:emphasis>)</db:title>
<db:para>Appends a header entry with <db:code role="parameter">name</db:code> and <db:code role="parameter">value</db:code> and returns <db:code>true</db:code> if successful.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#append-1">append</db:link>(QHttpHeaders::WellKnownHeader, QAnyStringView)</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#allowed-field-name-and-value-characters">Allowed field name and value characters</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="append-1">
<db:title>bool QHttpHeaders::append(QHttpHeaders::WellKnownHeader <db:emphasis>name</db:emphasis>, QAnyStringView <db:emphasis>value</db:emphasis>)</db:title>
<db:para>This function overloads <db:link xlink:href="qhttpheaders.xml#append">append</db:link>(QAnyStringView, QAnyStringView).</db:para>
</db:section>
<db:section xml:id="clear">
<db:title>void QHttpHeaders::clear()</db:title>
<db:para>Clears all header entries.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#size">size</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="combinedValue">
<db:title>QByteArray QHttpHeaders::combinedValue(QAnyStringView <db:emphasis>name</db:emphasis>) const</db:title>
<db:para>Returns the values of header <db:code role="parameter">name</db:code> in a comma-combined string. Returns a <db:code>null</db:code> <db:link xlink:href="qbytearray.xml">QByteArray</db:link> if the header with <db:code role="parameter">name</db:code> doesn't exist.</db:para>
<db:note>
<db:para>Accessing the value(s) of 'Set-Cookie' header this way may not work as intended. It is a notable exception in the <db:link xlink:href="https://datatracker.ietf.org/doc/html/rfc9110#name-field-order">HTTP RFC</db:link> in that its values cannot be combined this way. Prefer <db:link xlink:href="qhttpheaders.xml#values">values</db:link>() instead.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#values">values</db:link>(QAnyStringView)</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="combinedValue-1">
<db:title>QByteArray QHttpHeaders::combinedValue(QHttpHeaders::WellKnownHeader <db:emphasis>name</db:emphasis>) const</db:title>
<db:para>This function overloads <db:link xlink:href="qhttpheaders.xml#combinedValue">combinedValue</db:link>(QAnyStringView).</db:para>
</db:section>
<db:section xml:id="contains">
<db:title>bool QHttpHeaders::contains(QAnyStringView <db:emphasis>name</db:emphasis>) const</db:title>
<db:para>Returns whether the headers contain header with <db:code role="parameter">name</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#contains-1">contains</db:link>(QHttpHeaders::WellKnownHeader)</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contains-1">
<db:title>bool QHttpHeaders::contains(QHttpHeaders::WellKnownHeader <db:emphasis>name</db:emphasis>) const</db:title>
<db:para>This function overloads has(QAnyStringView).</db:para>
</db:section>
<db:section xml:id="fromListOfPairs">
<db:title>[static] QHttpHeaders QHttpHeaders::fromListOfPairs(const QList&lt;std::pair&lt;QByteArray, QByteArray&gt;&gt; &amp;<db:emphasis>headers</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link> object that is populated with <db:code role="parameter">headers</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#allowed-field-name-and-value-characters">Allowed field name and value characters</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fromMultiHash">
<db:title>[static] QHttpHeaders QHttpHeaders::fromMultiHash(const QMultiHash&lt;QByteArray, QByteArray&gt; &amp;<db:emphasis>headers</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link> object that is populated with <db:code role="parameter">headers</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#allowed-field-name-and-value-characters">Allowed field name and value characters</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fromMultiMap">
<db:title>[static] QHttpHeaders QHttpHeaders::fromMultiMap(const QMultiMap&lt;QByteArray, QByteArray&gt; &amp;<db:emphasis>headers</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link> object that is populated with <db:code role="parameter">headers</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#allowed-field-name-and-value-characters">Allowed field name and value characters</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="insert">
<db:title>bool QHttpHeaders::insert(qsizetype <db:emphasis>i</db:emphasis>, QAnyStringView <db:emphasis>name</db:emphasis>, QAnyStringView <db:emphasis>value</db:emphasis>)</db:title>
<db:para>Inserts a header entry at index <db:code role="parameter">i</db:code>, with <db:code role="parameter">name</db:code> and <db:code role="parameter">value</db:code>. The index must be valid (see <db:link xlink:href="qhttpheaders.xml#size">size</db:link>()). Returns whether the insert succeeded.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#append">append</db:link>()</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#insert-1">insert</db:link>(qsizetype, QHttpHeaders::WellKnownHeader, QAnyStringView)</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#size">size</db:link>()</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#allowed-field-name-and-value-characters">Allowed field name and value characters</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="insert-1">
<db:title>bool QHttpHeaders::insert(qsizetype <db:emphasis>i</db:emphasis>, QHttpHeaders::WellKnownHeader <db:emphasis>name</db:emphasis>, QAnyStringView <db:emphasis>value</db:emphasis>)</db:title>
<db:para>This function overloads <db:link xlink:href="qhttpheaders.xml#insert">insert</db:link>(qsizetype, QAnyStringView, QAnyStringView).</db:para>
</db:section>
<db:section xml:id="isEmpty">
<db:title>[noexcept] bool QHttpHeaders::isEmpty() const</db:title>
<db:para>Returns <db:code>true</db:code> if the headers have size 0; otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#size">size</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="nameAt">
<db:title>[noexcept] QLatin1StringView QHttpHeaders::nameAt(qsizetype <db:emphasis>i</db:emphasis>) const</db:title>
<db:para>Returns the header name at index <db:code role="parameter">i</db:code>. The index <db:code role="parameter">i</db:code> must be valid (see <db:link xlink:href="qhttpheaders.xml#size">size</db:link>()).</db:para>
<db:para>Header names are case-insensitive, and the returned names are lower-cased.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#size">size</db:link>()</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#valueAt">valueAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="removeAll">
<db:title>void QHttpHeaders::removeAll(QAnyStringView <db:emphasis>name</db:emphasis>)</db:title>
<db:para>Removes the header <db:code role="parameter">name</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#removeAt">removeAt</db:link>()</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#removeAll-1">removeAll</db:link>(QHttpHeaders::WellKnownHeader)</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="removeAll-1">
<db:title>void QHttpHeaders::removeAll(QHttpHeaders::WellKnownHeader <db:emphasis>name</db:emphasis>)</db:title>
<db:para>This function overloads <db:link xlink:href="qhttpheaders.xml#removeAll">removeAll</db:link>(QAnyStringView).</db:para>
</db:section>
<db:section xml:id="removeAt">
<db:title>void QHttpHeaders::removeAt(qsizetype <db:emphasis>i</db:emphasis>)</db:title>
<db:para>Removes the header at index <db:code role="parameter">i</db:code>. The index <db:code role="parameter">i</db:code> must be valid (see <db:link xlink:href="qhttpheaders.xml#size">size</db:link>()).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#removeAll-1">removeAll</db:link>(QHttpHeaders::WellKnownHeader)</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#removeAll">removeAll</db:link>(QAnyStringView)</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#size">size</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="replace">
<db:title>bool QHttpHeaders::replace(qsizetype <db:emphasis>i</db:emphasis>, QAnyStringView <db:emphasis>name</db:emphasis>, QAnyStringView <db:emphasis>newValue</db:emphasis>)</db:title>
<db:para>Replaces the header entry at index <db:code role="parameter">i</db:code>, with <db:code role="parameter">name</db:code> and <db:code role="parameter">newValue</db:code>. The index must be valid (see <db:link xlink:href="qhttpheaders.xml#size">size</db:link>()). Returns whether the replace succeeded.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#append">append</db:link>()</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#replace-1">replace</db:link>(qsizetype, QHttpHeaders::WellKnownHeader, QAnyStringView)</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#size">size</db:link>()</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#allowed-field-name-and-value-characters">Allowed field name and value characters</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="replace-1">
<db:title>bool QHttpHeaders::replace(qsizetype <db:emphasis>i</db:emphasis>, QHttpHeaders::WellKnownHeader <db:emphasis>name</db:emphasis>, QAnyStringView <db:emphasis>newValue</db:emphasis>)</db:title>
<db:para>This function overloads <db:link xlink:href="qhttpheaders.xml#replace">replace</db:link>(qsizetype, QAnyStringView, QAnyStringView).</db:para>
</db:section>
<db:section xml:id="replaceOrAppend">
<db:title>[since 6.8] bool QHttpHeaders::replaceOrAppend(QHttpHeaders::WellKnownHeader <db:emphasis>name</db:emphasis>, QAnyStringView <db:emphasis>newValue</db:emphasis>)</db:title>
<db:para>If <db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link> already contains <db:code role="parameter">name</db:code>, replaces its value with <db:code role="parameter">newValue</db:code> and removes possible additional <db:code role="parameter">name</db:code> entries. If <db:code role="parameter">name</db:code> didn't exist, appends a new entry. Returns <db:code>true</db:code> if successful.</db:para>
<db:para>This function is a convenience method for setting a unique <db:code role="parameter">name</db:code> : <db:code role="parameter">newValue</db:code> header. For most headers the relative order does not matter, which allows reusing an existing entry if one exists.</db:para>
<db:para>This function was introduced in Qt 6.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#replaceOrAppend-1">replaceOrAppend</db:link>(QAnyStringView, QAnyStringView)</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="replaceOrAppend-1">
<db:title>bool QHttpHeaders::replaceOrAppend(QAnyStringView <db:emphasis>name</db:emphasis>, QAnyStringView <db:emphasis>newValue</db:emphasis>)</db:title>
<db:para>This function overloads replaceOrAppend(WellKnownHeader, QAnyStringView).</db:para>
</db:section>
<db:section xml:id="reserve">
<db:title>void QHttpHeaders::reserve(qsizetype <db:emphasis>size</db:emphasis>)</db:title>
<db:para>Attempts to allocate memory for at least <db:code role="parameter">size</db:code> header entries.</db:para>
<db:para>If you know in advance how how many header entries there will be, you may call this function to prevent reallocations and memory fragmentation.</db:para>
</db:section>
<db:section xml:id="size">
<db:title>[noexcept] qsizetype QHttpHeaders::size() const</db:title>
<db:para>Returns the number of header entries.</db:para>
</db:section>
<db:section xml:id="swap">
<db:title>[noexcept] void QHttpHeaders::swap(QHttpHeaders &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps this <db:link xlink:href="qhttpheaders.xml">QHttpHeaders</db:link> with <db:code role="parameter">other</db:code>. This operation is very fast and never fails.</db:para>
</db:section>
<db:section xml:id="toListOfPairs">
<db:title>QList&lt;std::pair&lt;QByteArray, QByteArray&gt;&gt; QHttpHeaders::toListOfPairs() const</db:title>
<db:para>Returns the header entries as a list of (name, value) pairs. Header names are case-insensitive, and the returned names are lower-cased.</db:para>
</db:section>
<db:section xml:id="toMultiHash">
<db:title>QMultiHash&lt;QByteArray, QByteArray&gt; QHttpHeaders::toMultiHash() const</db:title>
<db:para>Returns the header entries as a hash from name to value(s). Header names are case-insensitive, and the returned names are lower-cased.</db:para>
</db:section>
<db:section xml:id="toMultiMap">
<db:title>QMultiMap&lt;QByteArray, QByteArray&gt; QHttpHeaders::toMultiMap() const</db:title>
<db:para>Returns the header entries as a map from name to value(s). Header names are case-insensitive, and the returned names are lower-cased.</db:para>
</db:section>
<db:section xml:id="value">
<db:title>[noexcept] QByteArrayView QHttpHeaders::value(QAnyStringView <db:emphasis>name</db:emphasis>, QByteArrayView <db:emphasis>defaultValue</db:emphasis> = {}) const</db:title>
<db:para>Returns the value of the (first) header <db:code role="parameter">name</db:code>, or <db:code role="parameter">defaultValue</db:code> if it doesn't exist.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#value-1">value</db:link>(QHttpHeaders::WellKnownHeader, QByteArrayView)</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="value-1">
<db:title>[noexcept] QByteArrayView QHttpHeaders::value(QHttpHeaders::WellKnownHeader <db:emphasis>name</db:emphasis>, QByteArrayView <db:emphasis>defaultValue</db:emphasis> = {}) const</db:title>
<db:para>This function overloads <db:link xlink:href="qhttpheaders.xml#value">value</db:link>(QAnyStringView, QByteArrayView).</db:para>
</db:section>
<db:section xml:id="valueAt">
<db:title>[noexcept] QByteArrayView QHttpHeaders::valueAt(qsizetype <db:emphasis>i</db:emphasis>) const</db:title>
<db:para>Returns the header value at index <db:code role="parameter">i</db:code>. The index <db:code role="parameter">i</db:code> must be valid (see <db:link xlink:href="qhttpheaders.xml#size">size</db:link>()).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#size">size</db:link>()</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#value">value</db:link>()</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#values">values</db:link>()</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#combinedValue">combinedValue</db:link>()</db:member>
<db:member><db:link xlink:href="qhttpheaders.xml#nameAt">nameAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="values">
<db:title>QList&lt;QByteArray&gt; QHttpHeaders::values(QAnyStringView <db:emphasis>name</db:emphasis>) const</db:title>
<db:para>Returns the values of header <db:code role="parameter">name</db:code> in a list. Returns an empty list if header with <db:code role="parameter">name</db:code> doesn't exist.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpheaders.xml#values-1">values</db:link>(QHttpHeaders::WellKnownHeader)</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="values-1">
<db:title>QList&lt;QByteArray&gt; QHttpHeaders::values(QHttpHeaders::WellKnownHeader <db:emphasis>name</db:emphasis>) const</db:title>
<db:para>This function overloads <db:link xlink:href="qhttpheaders.xml#values">values</db:link>(QAnyStringView).</db:para>
</db:section>
<db:section xml:id="wellKnownHeaderName">
<db:title>[static noexcept] QByteArrayView QHttpHeaders::wellKnownHeaderName(QHttpHeaders::WellKnownHeader <db:emphasis>name</db:emphasis>)</db:title>
<db:para>Returns a header name corresponding to the provided <db:code role="parameter">name</db:code> as a view.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>[noexcept] QHttpHeaders &amp;QHttpHeaders::operator=(QHttpHeaders &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Move-assigns <db:code role="parameter">other</db:code> and returns a reference to this object.</db:para>
<db:para><db:code role="parameter">other</db:code> will be left <db:link xlink:href="qhttpheaders.xml#isEmpty">empty</db:link>.</db:para>
</db:section>
<db:section xml:id="operator-eq-1">
<db:title>QHttpHeaders &amp;QHttpHeaders::operator=(const QHttpHeaders &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns the contents of <db:code role="parameter">other</db:code> and returns a reference to this object.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-lt-lt">
<db:title>QDebug operator&lt;&lt;(QDebug <db:emphasis>debug</db:emphasis>, const QHttpHeaders &amp;<db:emphasis>headers</db:emphasis>)</db:title>
<db:para>Writes <db:code role="parameter">headers</db:code> into <db:code role="parameter">debug</db:code> stream.</db:para>
</db:section>
</db:section>
</db:article>
