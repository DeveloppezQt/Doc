<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title></db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This union was introduced in Qt 6.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Id128Bytes</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Core)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Core)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This trivial structure is 128 bits (16 bytes) in size and holds the binary representation of a UUID. Applications can memcpy() its contents to and from many other libraries' UUID or GUID structures that take 128-bit values.</db:para>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="qFromBigEndian-5">
<db:title>[since 6.6] QUuid::Id128Bytes qFromBigEndian(QUuid::Id128Bytes <db:emphasis>src</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Converts <db:code role="parameter">src</db:code> from big-endian byte order and returns the struct holding the binary representation of UUID in host byte order.</db:para>
<db:para>This function was introduced in Qt 6.6.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtendian.xml">&lt;QtEndian&gt;</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qFromLittleEndian-5">
<db:title>[since 6.6] QUuid::Id128Bytes qFromLittleEndian(QUuid::Id128Bytes <db:emphasis>src</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Converts <db:code role="parameter">src</db:code> from little-endian byte order and returns the struct holding the binary representation of UUID in host byte order.</db:para>
<db:para>This function was introduced in Qt 6.6.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtendian.xml">&lt;QtEndian&gt;</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qToBigEndian-4">
<db:title>[since 6.6] QUuid::Id128Bytes qToBigEndian(QUuid::Id128Bytes <db:emphasis>src</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Converts <db:code role="parameter">src</db:code> from host byte order and returns the struct holding the binary representation of UUID in big-endian byte order.</db:para>
<db:para>This function was introduced in Qt 6.6.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtendian.xml">&lt;QtEndian&gt;</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qToLittleEndian-4">
<db:title>[since 6.6] QUuid::Id128Bytes qToLittleEndian(QUuid::Id128Bytes <db:emphasis>src</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Converts <db:code role="parameter">src</db:code> from host byte order and returns the struct holding the binary representation of UUID in little-endian byte order.</db:para>
<db:para>This function was introduced in Qt 6.6.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtendian.xml">&lt;QtEndian&gt;</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
