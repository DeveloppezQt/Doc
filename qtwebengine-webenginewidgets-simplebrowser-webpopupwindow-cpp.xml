<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>WebEngine Widgets Simple Browser Example</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A simple browser based on Qt WebEngine Widgets.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;webpage.h&quot;
#include &quot;webpopupwindow.h&quot;
#include &quot;webview.h&quot;
#include &amp;lt;QAction&amp;gt;
#include &amp;lt;QIcon&amp;gt;
#include &amp;lt;QLineEdit&amp;gt;
#include &amp;lt;QVBoxLayout&amp;gt;
#include &amp;lt;QWindow&amp;gt;

WebPopupWindow::WebPopupWindow(QWebEngineProfile *profile)
    : m_urlLineEdit(new QLineEdit(this))
    , m_favAction(new QAction(this))
    , m_view(new WebView(this))
{
    setAttribute(Qt::WA_DeleteOnClose);
    setSizePolicy(QSizePolicy::Minimum, QSizePolicy::Minimum);

    QVBoxLayout *layout = new QVBoxLayout;
    layout-&amp;gt;setMargin(0);
    setLayout(layout);
    layout-&amp;gt;addWidget(m_urlLineEdit);
    layout-&amp;gt;addWidget(m_view);

    m_view-&amp;gt;setPage(new WebPage(profile, m_view));
    m_view-&amp;gt;setFocus();

    m_urlLineEdit-&amp;gt;setReadOnly(true);
    m_urlLineEdit-&amp;gt;addAction(m_favAction, QLineEdit::LeadingPosition);

    connect(m_view, &amp;amp;WebView::titleChanged, this, &amp;amp;QWidget::setWindowTitle);
    connect(m_view, &amp;amp;WebView::urlChanged, [this](const QUrl &amp;amp;url) {
        m_urlLineEdit-&amp;gt;setText(url.toDisplayString());
    });
    connect(m_view, &amp;amp;WebView::favIconChanged, m_favAction, &amp;amp;QAction::setIcon);
    connect(m_view-&amp;gt;page(), &amp;amp;WebPage::geometryChangeRequested, this, &amp;amp;WebPopupWindow::handleGeometryChangeRequested);
    connect(m_view-&amp;gt;page(), &amp;amp;WebPage::windowCloseRequested, this, &amp;amp;QWidget::close);
}

WebView *WebPopupWindow::view() const
{
    return m_view;
}

void WebPopupWindow::handleGeometryChangeRequested(const QRect &amp;amp;newGeometry)
{
    if (QWindow *window = windowHandle())
        setGeometry(newGeometry.marginsRemoved(window-&amp;gt;frameMargins()));
    show();
    m_view-&amp;gt;setFocus();
}

</db:programlisting>
</db:article>
