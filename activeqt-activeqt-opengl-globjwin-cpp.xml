<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>OpenGL Example (ActiveQt)</db:title>
<db:productname>ActiveQt</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>ActiveQt</db:titleabbrev>
<db:abstract>
<db:para>The OpenGL example demonstrates the use of the default factory and <db:link xlink:href="qaxfactory.xml#isServer">QAxFactory::isServer</db:link>(), and the implementation of an additional COM interface using <db:link xlink:href="qaxbindable.xml">QAxBindable</db:link> and <db:link xlink:href="qaxaggregated.xml">QAxAggregated</db:link>. The server executable can run both as an ActiveX server and as a stand-alone application.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;globjwin.h&quot;
#include &quot;glbox.h&quot;
#include &amp;lt;QPushButton&amp;gt;
#include &amp;lt;QSlider&amp;gt;
#include &amp;lt;QLayout&amp;gt;
#include &amp;lt;QFrame&amp;gt;
#include &amp;lt;QMenuBar&amp;gt;
#include &amp;lt;QMenu&amp;gt;
#include &amp;lt;QApplication&amp;gt;

GLObjectWindow::GLObjectWindow(QWidget *parent)
    : QWidget(parent)
{
    // Create a menu
    QMenu *file = new QMenu(this);
    file-&amp;gt;addAction(tr(&quot;Exit&quot;), qApp, &amp;amp;QApplication::quit);

    // Create a menu bar
    QMenuBar *m = new QMenuBar(this);
    m-&amp;gt;addMenu(file)-&amp;gt;setText(tr(&quot;&amp;amp;File&quot;));

    // Create a nice frame to put around the OpenGL widget
    QFrame *f = new QFrame(this);
    f-&amp;gt;setFrameStyle(QFrame::Sunken | QFrame::Panel);
    f-&amp;gt;setLineWidth(2);

    // Create our OpenGL widget
    GLBox *c = new GLBox(f, &quot;glbox&quot;);

    // Create the three sliders; one for each rotation axis
    QSlider *x = new QSlider(Qt::Vertical, this);
    x-&amp;gt;setMaximum(360);
    x-&amp;gt;setPageStep(60);
    x-&amp;gt;setTickPosition(QSlider::TicksLeft);
    connect(x, &amp;amp;QSlider::valueChanged, c, &amp;amp;GLBox::setXRotation);

    QSlider *y = new QSlider(Qt::Vertical, this);
    y-&amp;gt;setMaximum(360);
    y-&amp;gt;setPageStep(60);
    y-&amp;gt;setTickPosition(QSlider::TicksLeft);
    connect(y, &amp;amp;QSlider::valueChanged, c, &amp;amp;GLBox::setYRotation);

    QSlider *z = new QSlider(Qt::Vertical, this);
    z-&amp;gt;setMaximum(360);
    z-&amp;gt;setPageStep(60);
    z-&amp;gt;setTickPosition(QSlider::TicksLeft);
    connect(z, &amp;amp;QSlider::valueChanged, c, &amp;amp;GLBox::setZRotation);

    // Now that we have all the widgets, put them into a nice layout

    // Top level layout, puts the sliders to the left of the frame/GL widget
    QHBoxLayout *hlayout = new QHBoxLayout(this);

    // Put the sliders on top of each other
    QVBoxLayout *vlayout = new QVBoxLayout();
    vlayout-&amp;gt;addWidget(x);
    vlayout-&amp;gt;addWidget(y);
    vlayout-&amp;gt;addWidget(z);

    // Put the GL widget inside the frame
    QHBoxLayout *flayout = new QHBoxLayout(f);
    flayout-&amp;gt;setMargin(0);
    flayout-&amp;gt;addWidget(c, 1);

    hlayout-&amp;gt;setMenuBar(m);
    hlayout-&amp;gt;addLayout(vlayout);
    hlayout-&amp;gt;addWidget(f, 1);
}

</db:programlisting>
</db:article>
