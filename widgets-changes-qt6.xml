<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Changes to Qt Widgets</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Migrate Qt Widgets to Qt 6.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt 6 is a result of the conscious effort to make the framework more efficient and easy to use.</db:para>
<db:para>We try to maintain binary and source compatibility for all the public APIs in each release. But some changes were inevitable in an effort to make Qt a better framework.</db:para>
<db:para>In this topic we summarize those changes in Qt Widgets, and provide guidance to handle them.</db:para>
<db:section xml:id="kernel-classes">
<db:title>Kernel classes</db:title>
<db:section xml:id="the-qwidget-class">
<db:title>The QWidget class</db:title>
<db:para>The virtual <db:link xlink:href="qwidget.xml#enterEvent">QWidget::enterEvent</db:link>() handler now receives a <db:link xlink:href="qenterevent.xml">QEnterEvent</db:link>* parameter which has information about the pointer position, rather than a plain <db:link xlink:href="qevent.xml">QEvent</db:link>*.</db:para>
</db:section>
<db:section xml:id="qdesktopwidget-and-qapplication-desktop">
<db:title>QDesktopWidget and QApplication::desktop()</db:title>
<db:para>QDesktopWidget was already deprecated in Qt 5, and has been removed in Qt 6, together with QApplication::desktop().</db:para>
<db:para><db:link xlink:href="qscreen.xml">QScreen</db:link> provides equivalent functionality to query for information about available screens, screen that form a virtual desktop, and screen geometries.</db:para>
<db:para>Use <db:link xlink:href="qwidget.xml#setScreen">QWidget::setScreen</db:link>() to create a <db:link xlink:href="qwidget.xml">QWidget</db:link> on a specific display; note that this does not move a widget to a screen in a virtual desktop setup.</db:para>
</db:section>
<db:section xml:id="qaction-qactiongroup">
<db:title>QAction, QActionGroup</db:title>
<db:para>These classes have been moved into the <db:link xlink:href="qtgui-module.xml">QtGui</db:link> module. Member functions that depend on types defined in <db:link xlink:href="qtwidgets-module.xml">QtWidgets</db:link> (such as QAction::menu() and QAction::setMenu()) are implemented as templates that will be instantiated only when called.</db:para>
</db:section>
</db:section>
<db:section xml:id="widgets">
<db:title>Widgets</db:title>
<db:section xml:id="the-qabstractbutton-class">
<db:title>The QAbstractButton class</db:title>
<db:para>The default timeout parameter for <db:link xlink:href="qabstractbutton.xml#animateClick">QAbstractButton::animateClick</db:link>() is removed to allow modern connection syntax without the need for <db:link xlink:href="qtglobal.xml#qOverload">qOverload</db:link>.</db:para>
</db:section>
<db:section xml:id="the-qcombobox-class">
<db:title>The QComboBox class</db:title>
<db:para>The <db:link xlink:href="qcombobox.xml#setModel">QComboBox::setModel</db:link>() function is now virtual.</db:para>
</db:section>
</db:section>
<db:section xml:id="itemviews">
<db:title>ItemViews</db:title>
<db:section xml:id="the-qabstractitemview-class">
<db:title>The QAbstractItemView class</db:title>
<db:para>The virtual viewOptions() method that previously returned a <db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link> object has been renamed to initViewItemOption, and initializes a <db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link> object that's passed in through a pointer.</db:para>
</db:section>
</db:section>
<db:section xml:id="styling-classes-and-related-apis">
<db:title>Styling Classes and related APIs</db:title>
<db:para>All versioned <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclasses are consolidated, and the version numbers are reset to 1.</db:para>
<db:para>The various initStyleOption() methods in widget classes are now virtual.</db:para>
</db:section>
<db:section xml:id="utility-classes">
<db:title>Utility Classes</db:title>
<db:section xml:id="qundocommand-qundostack-and-qundogroup">
<db:title>QUndoCommand, QUndoStack, and QUndoGroup</db:title>
<db:para>The widget independent classes of the Undo/Redo framework have been moved into the <db:link xlink:href="qtgui-module.xml">QtGui</db:link> module.</db:para>
</db:section>
</db:section>
</db:article>
