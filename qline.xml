<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QLine Class</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qline.xml">QLine</db:link> class provides a two-dimensional vector using integer precision.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QLine</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QLine is part of <db:simplelist><db:member>painting</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qline.xml">QLine</db:link> describes a finite length line (or a line segment) on a two-dimensional surface. The start and end points of the line are specified using integer point accuracy for coordinates. Use the <db:link xlink:href="qlinef.xml">QLineF</db:link> constructor to retrieve a floating point copy.</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qline-point.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qline-coordinates.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The positions of the line's start and end points can be retrieved using the <db:link xlink:href="qline.xml#p1">p1</db:link>(), <db:link xlink:href="qline.xml#x1">x1</db:link>(), <db:link xlink:href="qline.xml#y1">y1</db:link>(), <db:link xlink:href="qline.xml#p2">p2</db:link>(), <db:link xlink:href="qline.xml#x2">x2</db:link>(), and <db:link xlink:href="qline.xml#y2">y2</db:link>() functions. The <db:link xlink:href="qline.xml#dx">dx</db:link>() and <db:link xlink:href="qline.xml#dy">dy</db:link>() functions return the horizontal and vertical components of the line. Use <db:link xlink:href="qline.xml#isNull">isNull</db:link>() to determine whether the <db:link xlink:href="qline.xml">QLine</db:link> represents a valid line or a null line.</db:para>
<db:para>Finally, the line can be translated a given offset using the <db:link xlink:href="qline.xml#translate">translate</db:link>() function.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlinef.xml">QLineF</db:link></db:member>
<db:member><db:link xlink:href="qpolygon.xml">QPolygon</db:link></db:member>
<db:member><db:link xlink:href="qrect.xml">QRect</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QLine">
<db:title>QLine::QLine()</db:title>
<db:para>Constructs a null line.</db:para>
</db:section>
<db:section xml:id="QLine-1">
<db:title>QLine::QLine(const QPoint &amp;<db:emphasis>p1</db:emphasis>, const QPoint &amp;<db:emphasis>p2</db:emphasis>)</db:title>
<db:para>Constructs a line object that represents the line between <db:code role="parameter">p1</db:code> and <db:code role="parameter">p2</db:code>.</db:para>
</db:section>
<db:section xml:id="QLine-2">
<db:title>QLine::QLine(int <db:emphasis>x1</db:emphasis>, int <db:emphasis>y1</db:emphasis>, int <db:emphasis>x2</db:emphasis>, int <db:emphasis>y2</db:emphasis>)</db:title>
<db:para>Constructs a line object that represents the line between (<db:code role="parameter">x1</db:code>, <db:code role="parameter">y1</db:code>) and (<db:code role="parameter">x2</db:code>, <db:code role="parameter">y2</db:code>).</db:para>
</db:section>
<db:section xml:id="p1">
<db:title>QPoint QLine::p1() const</db:title>
<db:para>Returns the line's start point.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qline.xml#setP1">setP1</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#x1">x1</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#y1">y1</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#p2">p2</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="p2">
<db:title>QPoint QLine::p2() const</db:title>
<db:para>Returns the line's end point.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qline.xml#setP2">setP2</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#x2">x2</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#y2">y2</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#p1">p1</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="x1">
<db:title>int QLine::x1() const</db:title>
<db:para>Returns the x-coordinate of the line's start point.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qline.xml#p1">p1</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="x2">
<db:title>int QLine::x2() const</db:title>
<db:para>Returns the x-coordinate of the line's end point.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qline.xml#p2">p2</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="y1">
<db:title>int QLine::y1() const</db:title>
<db:para>Returns the y-coordinate of the line's start point.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qline.xml#p1">p1</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="y2">
<db:title>int QLine::y2() const</db:title>
<db:para>Returns the y-coordinate of the line's end point.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qline.xml#p2">p2</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dx">
<db:title>int QLine::dx() const</db:title>
<db:para>Returns the horizontal component of the line's vector.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qline.xml#dy">dy</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dy">
<db:title>int QLine::dy() const</db:title>
<db:para>Returns the vertical component of the line's vector.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qline.xml#dx">dx</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isNull">
<db:title>bool QLine::isNull() const</db:title>
<db:para>Returns true if the line is not set up with valid start and end point; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="setP1">
<db:title>[since 4.4] void QLine::setP1(const QPoint &amp;<db:emphasis>p1</db:emphasis>)</db:title>
<db:para>Sets the starting point of this line to <db:code role="parameter">p1</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qline.xml#setP2">setP2</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#p1">p1</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setP2">
<db:title>[since 4.4] void QLine::setP2(const QPoint &amp;<db:emphasis>p2</db:emphasis>)</db:title>
<db:para>Sets the end point of this line to <db:code role="parameter">p2</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qline.xml#setP1">setP1</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#p2">p2</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLine">
<db:title>[since 4.4] void QLine::setLine(int <db:emphasis>x1</db:emphasis>, int <db:emphasis>y1</db:emphasis>, int <db:emphasis>x2</db:emphasis>, int <db:emphasis>y2</db:emphasis>)</db:title>
<db:para>Sets this line to the start in <db:code role="parameter">x1</db:code>, <db:code role="parameter">y1</db:code> and end in <db:code role="parameter">x2</db:code>, <db:code role="parameter">y2</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qline.xml#setP1">setP1</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#setP2">setP2</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#p1">p1</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#p2">p2</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPoints">
<db:title>[since 4.4] void QLine::setPoints(const QPoint &amp;<db:emphasis>p1</db:emphasis>, const QPoint &amp;<db:emphasis>p2</db:emphasis>)</db:title>
<db:para>Sets the start point of this line to <db:code role="parameter">p1</db:code> and the end point of this line to <db:code role="parameter">p2</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qline.xml#setP1">setP1</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#setP2">setP2</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#p1">p1</db:link>()</db:member>
<db:member><db:link xlink:href="qline.xml#p2">p2</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="translate">
<db:title>void QLine::translate(const QPoint &amp;<db:emphasis>offset</db:emphasis>)</db:title>
<db:para>Translates this line by the given <db:code role="parameter">offset</db:code>.</db:para>
</db:section>
<db:section xml:id="translate-1">
<db:title>void QLine::translate(int <db:emphasis>dx</db:emphasis>, int <db:emphasis>dy</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Translates this line the distance specified by <db:code role="parameter">dx</db:code> and <db:code role="parameter">dy</db:code>.</db:para>
</db:section>
<db:section xml:id="translated">
<db:title>[since 4.4] QLine QLine::translated(const QPoint &amp;<db:emphasis>offset</db:emphasis>) const</db:title>
<db:para>Returns this line translated by the given <db:code role="parameter">offset</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
</db:section>
<db:section xml:id="translated-1">
<db:title>[since 4.4] QLine QLine::translated(int <db:emphasis>dx</db:emphasis>, int <db:emphasis>dy</db:emphasis>) const</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns this line translated the distance specified by <db:code role="parameter">dx</db:code> and <db:code role="parameter">dy</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QLine::operator!=(const QLine &amp;<db:emphasis>line</db:emphasis>) const</db:title>
<db:para>Returns true if the given <db:code role="parameter">line</db:code> is not the same as <db:emphasis>this</db:emphasis> line.</db:para>
<db:para>A line is different from another line if any of their start or end points differ, or the internal order of the points is different.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QLine::operator==(const QLine &amp;<db:emphasis>line</db:emphasis>) const</db:title>
<db:para>Returns true if the given <db:code role="parameter">line</db:code> is the same as <db:emphasis>this</db:emphasis> line.</db:para>
<db:para>A line is identical to another line if the start and end points are identical, and the internal order of the points is the same.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-lt-lt-6">
<db:title>QDataStream &amp;operator&lt;&lt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, const QLine &amp;<db:emphasis>line</db:emphasis>)</db:title>
<db:para>Writes the given <db:code role="parameter">line</db:code> to the given <db:code role="parameter">stream</db:code> and returns a reference to the stream.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="datastreamformat.xml">Serializing Qt Data Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-gt-gt-6">
<db:title>QDataStream &amp;operator&gt;&gt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, QLine &amp;<db:emphasis>line</db:emphasis>)</db:title>
<db:para>Reads a line from the given <db:code role="parameter">stream</db:code> into the given <db:code role="parameter">line</db:code> and returns a reference to the stream.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="datastreamformat.xml">Serializing Qt Data Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
