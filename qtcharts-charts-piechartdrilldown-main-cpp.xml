<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Piechart Drilldown Example</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The example shows how to implement a piechart with drilldown effect.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Qt Charts module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:GPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3 or (at your option) any later version
** approved by the KDE Free Qt Foundation. The licenses are as published by
** the Free Software Foundation and appearing in the file LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;drilldownchart.h&quot;
#include &quot;drilldownslice.h&quot;
#include &amp;lt;QtWidgets/QApplication&amp;gt;
#include &amp;lt;QtWidgets/QMainWindow&amp;gt;
#include &amp;lt;QtCore/QRandomGenerator&amp;gt;
#include &amp;lt;QtCharts/QChartView&amp;gt;
#include &amp;lt;QtCharts/QLegend&amp;gt;
#include &amp;lt;QtCharts/QPieSeries&amp;gt;

QT_CHARTS_USE_NAMESPACE

int main(int argc, char *argv[])
{
    QApplication a(argc, argv);

    QMainWindow window;

    DrilldownChart *chart = new DrilldownChart();
    chart-&amp;gt;setTheme(QChart::ChartThemeLight);
    chart-&amp;gt;setAnimationOptions(QChart::AllAnimations);
    chart-&amp;gt;legend()-&amp;gt;setVisible(true);
    chart-&amp;gt;legend()-&amp;gt;setAlignment(Qt::AlignRight);

    QPieSeries *yearSeries = new QPieSeries(&amp;amp;window);
    yearSeries-&amp;gt;setName(&quot;Sales by year - All&quot;);

    const QStringList months = {
        &quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;
    };
    const QStringList names = {
        &quot;Jane&quot;, &quot;John&quot;, &quot;Axel&quot;, &quot;Mary&quot;, &quot;Susan&quot;, &quot;Bob&quot;
    };

    for (const QString &amp;amp;name : names) {
        QPieSeries *series = new QPieSeries(&amp;amp;window);
        series-&amp;gt;setName(&quot;Sales by month - &quot; + name);

        for (const QString &amp;amp;month : months)
            *series &amp;lt;&amp;lt; new DrilldownSlice(QRandomGenerator::global()-&amp;gt;bounded(1000), month, yearSeries);

        QObject::connect(series, &amp;amp;QPieSeries::clicked, chart, &amp;amp;DrilldownChart::handleSliceClicked);

        *yearSeries &amp;lt;&amp;lt; new DrilldownSlice(series-&amp;gt;sum(), name, series);
    }

    QObject::connect(yearSeries, &amp;amp;QPieSeries::clicked, chart, &amp;amp;DrilldownChart::handleSliceClicked);

    chart-&amp;gt;changeSeries(yearSeries);

    QChartView *chartView = new QChartView(chart);
    chartView-&amp;gt;setRenderHint(QPainter::Antialiasing);
    window.setCentralWidget(chartView);
    window.resize(800, 500);
    window.show();

    return a.exec();
}

</db:programlisting>
</db:article>
