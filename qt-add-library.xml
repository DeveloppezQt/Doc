<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>qt_add_library</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Creates and finalizes a library.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="qt6-add-library"/>
<db:para>Creates and finalizes a library.</db:para>
<db:para>The command is defined in the Core component of the Qt6 package, which can be loaded like so:</db:para>
<db:programlisting language="cpp" role="bad">find_package(Qt6 REQUIRED COMPONENTS Core)
</db:programlisting>
<db:para>This command was introduced in Qt 6.2.</db:para>
<db:section xml:id="synopsis">
<db:title>Synopsis</db:title>
<db:programlisting language="cpp" role="bad">qt_add_library(target
    [STATIC | SHARED | MODULE | INTERFACE | OBJECT]
    [MANUAL_FINALIZATION]
    sources...
)
</db:programlisting>
<db:para>If <db:link xlink:href="cmake-qt5-and-qt6-compatibility.xml#versionless-commands">versionless commands</db:link> are disabled, use qt6_add_library() instead. It supports the same set of arguments as this command.</db:para>
</db:section>
<db:section xml:id="description">
<db:title>Description</db:title>
<db:para>qt_add_library() is a wrapper around CMake's built-in add_library() command. It performs the following tasks:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Create a CMake target of an appropriate library type.</db:para>
</db:listitem>
<db:listitem>
<db:para>Handle finalization of the CMake target.</db:para>
</db:listitem>
</db:itemizedlist>
<db:section xml:id="target-creation">
<db:title>Target Creation</db:title>
<db:para>The type of library created can be specified explicitly with one of the STATIC, SHARED, MODULE, INTERFACE or OBJECT keywords, just as one might for add_library(). If none of these keywords are given, the library type created depends on how Qt was built. If Qt was built statically, a static library will be created. Otherwise, a shared library will be created. Note that this is different to how CMake's add_library() command works, where the BUILD_SHARED_LIBS variable controls the type of library created. The qt_add_library() command does not consider BUILD_SHARED_LIBS when deciding the library type.</db:para>
<db:para>Any sources provided will be passed through to the internal call to add_library().</db:para>
</db:section>
<db:section xml:id="finalization">
<db:title>Finalization</db:title>
<db:para>After a target is created, further processing or <db:emphasis>finalization</db:emphasis> steps may be needed. The finalization processing is implemented by the <db:link xlink:href="qt-finalize-target.xml#qt6-finalize-target">qt_finalize_target()</db:link> command.</db:para>
<db:para>Finalization can occur either as part of this call or be deferred to sometime after this command returns (but it should still be in the same directory scope). When using CMake 3.19 or later, finalization is automatically deferred to the end of the current directory scope. This gives the caller an opportunity to modify properties of the created target before it is finalized. When using CMake versions earlier than 3.19, automatic deferral isn't supported. In that case, finalization is performed immediately before this command returns.</db:para>
<db:para>Regardless of the CMake version, the MANUAL_FINALIZATION keyword can be given to indicate that you will explicitly call <db:link xlink:href="qt-finalize-target.xml#qt6-finalize-target">qt_finalize_target()</db:link> yourself instead at some later time. In general, MANUAL_FINALIZATION should not be needed unless the project has to support CMake 3.18 or earlier.</db:para>
</db:section>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt-finalize-target.xml#qt6-finalize-target">qt_finalize_target()</db:link></db:member>
<db:member><db:link xlink:href="qt-add-executable.xml#qt6-add-executable">qt_add_executable()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
