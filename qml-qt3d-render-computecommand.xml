<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ComputeCommand QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Component to issue work for the compute shader on GPU.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Render 2.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Component3D</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qcomputecommand.xml">QComputeCommand</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qml-qt3d-render-computecommand.xml">ComputeCommand</db:link> is used to issue work for the compute shader. The compute shader is specified in the Material component of the same entity the <db:link xlink:href="qml-qt3d-render-computecommand.xml">ComputeCommand</db:link> is added to. The <db:link xlink:href="qml-qt3d-render-computecommand.xml#workGroupX-prop">workGroupX</db:link>, <db:link xlink:href="qml-qt3d-render-computecommand.xml#workGroupY-prop">workGroupY</db:link> and <db:link xlink:href="qml-qt3d-render-computecommand.xml#workGroupZ-prop">workGroupZ</db:link> properties specify the work group sizes for the compute shader invocation. <db:link xlink:href="qml-qt3d-render-dispatchcompute.xml">DispatchCompute</db:link> node needs to be present in the FrameGraph to actually issue the commands. The execution behavior of the compute command can be controlled with the run type property.</db:para>
<db:note>
<db:para>If the rendering policy is set to <db:link xlink:href="qml-qt3d-render-rendersettings.xml">RenderSettings</db:link>.OnDemand, the run type is set to Continuous and there are no changes to the scene, the <db:link xlink:href="qml-qt3d-render-computecommand.xml">ComputeCommand</db:link> will not be invoked repeatedly. The <db:link xlink:href="qml-qt3d-render-rendersettings.xml">RenderSettings</db:link>.Always render policy must be set for the <db:link xlink:href="qml-qt3d-render-computecommand.xml">ComputeCommand</db:link> to be repeatedly invoked if there are no other changes to the scene that triggers rendering a new frame.</db:para>
</db:note>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="runType-prop">
<db:title>runType : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>runType</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies whether the compute command should be performed every frame or manually triggered.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>ComputeCommand.Continuous</db:para>
</db:td>
<db:td>
<db:para>Compute command is executed everyframe. This is the default.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ComputeCommand.Manual</db:para>
</db:td>
<db:td>
<db:para>CompouteCommand is executed for a given number of frames and then the component disables itself.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="workGroupX-prop">
<db:title>workGroupX : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>workGroupX</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies X workgroup size.</db:para>
</db:section>
<db:section xml:id="workGroupY-prop">
<db:title>workGroupY : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>workGroupY</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies Y workgroup size.</db:para>
</db:section>
<db:section xml:id="workGroupZ-prop">
<db:title>workGroupZ : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>workGroupZ</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies Z workgroup size.</db:para>
</db:section>
</db:section>
</db:article>
