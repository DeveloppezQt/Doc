<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QFileIconProvider Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.15.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qfileiconprovider.xml">QFileIconProvider</db:link> class provides file icons for the QDirModel and the <db:link xlink:href="qfilesystemmodel.xml">QFileSystemModel</db:link> classes.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QFileIconProvider</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="IconType-enum">
<db:title>enum QFileIconProvider::IconType</db:title>
<db:enumsynopsis>
<db:enumname>IconType</db:enumname>
<db:enumitem>
<db:enumidentifier>Computer</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Desktop</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Trashcan</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Network</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Drive</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Folder</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>File</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qfileiconprovider.xml">QFileIconProvider</db:link></db:emphasis>::Computer</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qfileiconprovider.xml">QFileIconProvider</db:link></db:emphasis>::Desktop</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qfileiconprovider.xml">QFileIconProvider</db:link></db:emphasis>::Trashcan</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qfileiconprovider.xml">QFileIconProvider</db:link></db:emphasis>::Network</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qfileiconprovider.xml">QFileIconProvider</db:link></db:emphasis>::Drive</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qfileiconprovider.xml">QFileIconProvider</db:link></db:emphasis>::Folder</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qfileiconprovider.xml">QFileIconProvider</db:link></db:emphasis>::File</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="Option-enum">
<db:title>[since 5.2] enum QFileIconProvider::Option</db:title>
<db:bridgehead renderas="sect2">flags QFileIconProvider::Options</db:bridgehead>
<db:enumsynopsis>
<db:enumname>Option</db:enumname>
<db:enumitem>
<db:enumidentifier>DontUseCustomDirectoryIcons</db:enumidentifier>
<db:enumvalue>0x00000001</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:typedefsynopsis>
<db:typedefname>QFileIconProvider::Options</db:typedefname>
</db:typedefsynopsis>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qfileiconprovider.xml">QFileIconProvider</db:link></db:emphasis>::DontUseCustomDirectoryIcons</db:code></db:para>
</db:td>
<db:td><db:code>0x00000001</db:code></db:td>
<db:td>
<db:para>Always use the default directory icon. Some platforms allow the user to set a different icon. Custom icon lookup cause a big performance impact over network or removable drives.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This enum was introduced or modified in Qt 5.2.</db:para>
<db:para>The <db:code>Options</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;Option&gt;. </db:code>It stores an OR combination of <db:code>Option</db:code> values.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QFileIconProvider">
<db:title>QFileIconProvider::QFileIconProvider()</db:title>
<db:constructorsynopsis>
<db:methodname>QFileIconProvider</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QFileIconProvider()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a file icon provider.</db:para>
</db:section>
<db:section xml:id="dtor.QFileIconProvider">
<db:title>[virtual] QFileIconProvider::~QFileIconProvider()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QFileIconProvider</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QFileIconProvider()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the file icon provider.</db:para>
</db:section>
<db:section xml:id="icon">
<db:title>[virtual] QIcon QFileIconProvider::icon(QFileIconProvider::IconType <db:emphasis>type</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QIcon</db:type>
<db:methodname>icon</db:methodname>
<db:methodparam>
<db:type>QFileIconProvider::IconType</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QIcon icon(QFileIconProvider::IconType type) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns an icon set for the given <db:code role="parameter">type</db:code>.</db:para>
</db:section>
<db:section xml:id="icon-1">
<db:title>[virtual] QIcon QFileIconProvider::icon(const QFileInfo &amp;<db:emphasis>info</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QIcon</db:type>
<db:methodname>icon</db:methodname>
<db:methodparam>
<db:type>const QFileInfo &amp;</db:type>
<db:parameter>info</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QIcon icon(const QFileInfo &amp;info) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns an icon for the file described by <db:code role="parameter">info</db:code>.</db:para>
</db:section>
<db:section xml:id="options">
<db:title>[since 5.2] QFileIconProvider::Options QFileIconProvider::options() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QFileIconProvider::Options</db:type>
<db:methodname>options</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QFileIconProvider::Options options() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns all the options that affect the icon provider. By default, all options are disabled.</db:para>
<db:para>This function was introduced in Qt 5.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfileiconprovider.xml#setOptions">setOptions</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setOptions">
<db:title>[since 5.2] void QFileIconProvider::setOptions(QFileIconProvider::Options <db:emphasis>options</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setOptions</db:methodname>
<db:methodparam>
<db:type>QFileIconProvider::Options</db:type>
<db:parameter>options</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setOptions(QFileIconProvider::Options options)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets <db:code role="parameter">options</db:code> that affect the icon provider.</db:para>
<db:para>This function was introduced in Qt 5.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfileiconprovider.xml#options">options</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="type">
<db:title>[virtual] QString QFileIconProvider::type(const QFileInfo &amp;<db:emphasis>info</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>type</db:methodname>
<db:methodparam>
<db:type>const QFileInfo &amp;</db:type>
<db:parameter>info</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString type(const QFileInfo &amp;info) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the type of the file described by <db:code role="parameter">info</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
