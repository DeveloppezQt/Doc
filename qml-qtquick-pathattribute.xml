<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>PathAttribute QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Specifies how to set an attribute at a given position in a Path.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick 2.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>PathAttribute is part of <db:simplelist><db:member>qtquick-animation-paths</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtquick-pathattribute.xml">PathAttribute</db:link> object allows attributes consisting of a name and a value to be specified for various points along a path. The attributes are exposed to the delegate as <db:link xlink:href="qtqml-syntax-objectattributes.xml#attached-properties-and-attached-signal-handlers">Attached Properties</db:link>. The value of an attribute at any particular point along the path is interpolated from the PathAttributes bounding that point.</db:para>
<db:para>The example below shows a path with the items scaled to 30% with opacity 50% at the top of the path and scaled 100% with opacity 100% at the bottom. Note the use of the <db:link xlink:href="qml-qtquick-pathview.xml">PathView</db:link>.iconScale and <db:link xlink:href="qml-qtquick-pathview.xml">PathView</db:link>.iconOpacity attached properties to set the scale and opacity of the delegate.</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/declarative-pathattribute.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:programlisting language="qml">import QtQuick 2.0

Rectangle {
    width: 240; height: 200

    Component {
        id: delegate
        Item {
            width: 80; height: 80
            scale: PathView.iconScale
            opacity: PathView.iconOpacity
            Column {
                Image { anchors.horizontalCenter: nameText.horizontalCenter; width: 64; height: 64; source: icon }
                Text { id: nameText; text: name; font.pointSize: 16 }
            }
        }
    }

    PathView {
        anchors.fill: parent
        model: ContactModel {}
        delegate: delegate
        path: Path {
            startX: 120; startY: 100
            PathAttribute { name: &quot;iconScale&quot;; value: 1.0 }
            PathAttribute { name: &quot;iconOpacity&quot;; value: 1.0 }
            PathQuad { x: 120; y: 25; controlX: 260; controlY: 75 }
            PathAttribute { name: &quot;iconScale&quot;; value: 0.3 }
            PathAttribute { name: &quot;iconOpacity&quot;; value: 0.5 }
            PathQuad { x: 120; y: 100; controlX: -20; controlY: 75 }
        }
    }
}
</db:programlisting>
<db:para>(see the <db:link xlink:href="qml-qtquick-pathview.xml">PathView</db:link> documentation for the specification of ContactModel.qml used for ContactModel above.)</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-path.xml">Path</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="name-prop">
<db:title>name : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>name</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the name of the attribute to change.</db:para>
<db:para>This attribute will be available to the delegate as <db:link xlink:href="qml-qtquick-pathview.xml">PathView</db:link>.&lt;name&gt;</db:para>
<db:para>Note that using an existing Item property name such as &quot;opacity&quot; as an attribute is allowed. This is because path attributes add a new <db:link xlink:href="qtqml-syntax-objectattributes.xml#attached-properties-and-attached-signal-handlers">Attached Property</db:link> which in no way clashes with existing properties.</db:para>
</db:section>
<db:section xml:id="value-prop">
<db:title>value : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>value</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the value for the attribute.</db:para>
<db:para>The value specified can be used to influence the visual appearance of an item along the path. For example, the following Path specifies an attribute named <db:emphasis>itemRotation</db:emphasis>, which has the value <db:emphasis>0</db:emphasis> at the beginning of the path, and the value 90 at the end of the path.</db:para>
<db:programlisting language="qml">Path {
    startX: 0
    startY: 0
    PathAttribute { name: &quot;itemRotation&quot;; value: 0 }
    PathLine { x: 100; y: 100 }
    PathAttribute { name: &quot;itemRotation&quot;; value: 90 }
}
</db:programlisting>
<db:para>In our delegate, we can then bind the <db:emphasis>rotation</db:emphasis> property to the <db:link xlink:href="qtqml-syntax-objectattributes.xml#attached-properties-and-attached-signal-handlers">Attached Property</db:link> <db:emphasis>PathView.itemRotation</db:emphasis> created for this attribute.</db:para>
<db:programlisting language="qml">Rectangle {
    width: 10; height: 10
    rotation: PathView.itemRotation
}
</db:programlisting>
<db:para>As each item is positioned along the path, it will be rotated accordingly: an item at the beginning of the path with be not be rotated, an item at the end of the path will be rotated 90 degrees, and an item mid-way along the path will be rotated 45 degrees.</db:para>
</db:section>
</db:section>
</db:article>
