<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt for iOS - Building from Source</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides instructions to build Qt from source for iOS platform.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Building <db:link xlink:href="ios.xml">Qt for iOS</db:link> from sources requires <db:link xlink:href="http://itunes.apple.com/us/app/xcode/id497799835?ls=1&amp;mt=12">Xcode</db:link> with Command Line Tools installed. You can install Xcode Command Line Tools directly using xcode-select â€“install from you terminal or as a package using <db:link xlink:href="https://docs.brew.sh/Installation">Homebrew</db:link>. Qt sources can be obtained either by cloning the repositories or downloading the source package(s).</db:para>
<db:para>You can then configure and build Qt. This is done from the Qt top directory:</db:para>
<db:programlisting language="cpp" role="bad">&amp;gt; ./configure -platform macx-ios-clang -release -qt-host-path &amp;lt;path_to_host_qt_installation&amp;gt;
</db:programlisting>
<db:note>
<db:para>configure always uses the <db:emphasis role="bold">Ninja</db:emphasis> generator and build tool if a ninja executable is available. Ninja is cross-platform, feature-rich, performant, and recommended on all platforms. The use of other generators might work but is not officially supported.</db:para>
</db:note>
<db:para>For other configure options, see <db:link xlink:href="configure-options.xml">Qt Configure Options</db:link>.</db:para>
<db:para>Then, simply run cmake --build . --parallel.</db:para>
<db:note>
<db:para>A default build will include both simulator and device libraries. If you want to build for a single target, use the -sdk argument with either iphoneos or iphonesimulator.</db:para>
</db:note>
</db:article>
