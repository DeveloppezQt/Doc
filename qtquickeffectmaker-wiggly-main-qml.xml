<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Wiggly</db:title>
<db:productname>QtQuickEffectMaker</db:productname>
<db:edition>Qt Quick Effect Maker 6.5.3</db:edition>
<db:titleabbrev>Qt Quick Effect Maker Documentation</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="qqem-porting-shadertoy.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Porting Shadertoy effects to Qt Quick Effect Maker"/></db:extendedlink>
<db:abstract>
<db:para>Demonstrates how to use an effect created with the Qt Quick Effect Maker (QQEM).</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">// Copyright (C) 2023 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR BSD-3-Clause

import QtQuick
import QtQuick.Controls.Material
import &quot;WigglyEffect&quot;

Window {
    id: mainWindow

    // Helper for UI scalability.
    // Pixel multiplier which depends on the window size.
    readonly property real px: width / defaultWindowWidth
    readonly property real defaultWindowWidth: 1280
    readonly property real defaultWindowHeight: 720

    Material.theme: Material.Dark
    Material.accent: Material.Pink

    width: defaultWindowWidth
    height: defaultWindowHeight
    visible: true
    title: qsTr(&quot;Wiggly&quot;)
    color: &quot;#2e2f30&quot;

    // Custom font
    FontLoader {
        id: font1
        // &quot;Injekuta Bl&quot; font from: https://typodermicfonts.com
        // Creative Commons Zero license https://creativecommons.org/publicdomain/zero/1.0/
        source: &quot;injekuta_bl.otf&quot;
    }

    Rectangle {
        id: sourceItem
        anchors.centerIn: parent
        width: textItem.width + 60 * mainWindow.px
        height: textItem.height + 30 * mainWindow.px
        color: &quot;#d0d0d0d0&quot;
        border.color: &quot;#d0ffffff&quot;
        border.width: 4 * mainWindow.px
        radius: 20 * mainWindow.px
        layer.enabled: true
        layer.smooth: true
        visible: false
        Text {
            id: textItem
            anchors.centerIn: parent
            text: wigglyTextField.text
            font.family: font1.font.family
            font.pixelSize: Math.min(200 * mainWindow.px, 0.8 * mainWindow.width / text.length)
        }
    }

    WigglyEffect {
        id: wigglyEffect
        source: sourceItem
        anchors.fill: sourceItem
        timeRunning: true
        wigglyAmountX: wigglyAmountXSlider.value
        wigglyAmountY: wigglyAmountYSlider.value
        electricCloudColor.a: electricSwitch.checked ? 1.0 : 0.0
        wigglyShadows: 0.5
    }

    // Toolbar background
    Rectangle {
        anchors.fill: toolbar
        anchors.leftMargin: -40 * mainWindow.px
        anchors.rightMargin: -20 * mainWindow.px
        color: &quot;#40000000&quot;
        border.width: 2
        border.color: &quot;#20ffffff&quot;
        radius: height * 0.5
     }

    // Toolbar with settings
    Row {
        id: toolbar
        height: wigglyTextField.height + 40 * mainWindow.px
        anchors.horizontalCenter: parent.horizontalCenter
        anchors.bottom: parent.bottom
        anchors.bottomMargin: 20 * mainWindow.px
        spacing: 20 * mainWindow.px
        TextField {
            id: wigglyTextField
            anchors.verticalCenter: parent.verticalCenter
            width: mainWindow.width * 0.3
            text: &quot;Wiggly&quot;
        }
        Slider {
            id: wigglyAmountYSlider
            anchors.verticalCenter: parent.verticalCenter
            width: mainWindow.width * 0.15
            from: 0
            to: 100
            value: 40
        }
        Slider {
            id: wigglyAmountXSlider
            anchors.verticalCenter: parent.verticalCenter
            width: mainWindow.width * 0.15
            from: 0
            to: 100
            value: 20
        }
        Switch {
            id: electricSwitch
            anchors.verticalCenter: parent.verticalCenter
        }
    }
}

</db:programlisting>
</db:article>
