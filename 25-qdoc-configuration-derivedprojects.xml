<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Supporting Derived Projects</db:title>
<db:productname>QDoc</db:productname>
<db:edition>Qt 5.13.2 Reference Documentation</db:edition>
<db:titleabbrev>QDoc Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="24-qdoc-configuration-htmlvariables.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Format-specific Configuration Variables"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="26-qdoc-configuration-example-manifest-files.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="Example Manifest Files"/></db:extendedlink>
<db:abstract>
<db:para>QDoc Manual.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>QDoc Manual</db:para>
<db:para>Some configuration variables allow you to use QDoc to support Qt-based projects. They allow your project to contain links to the online Qt documentation, which means that QDoc will be able to create links to the class reference documentation, without any explicit linking command.</db:para>
<db:anchor xml:id="description-variable"/>
<db:section xml:id="description">
<db:title>description</db:title>
<db:para>The description variable holds a short description of the associated project.</db:para>
<db:para>See also <db:link xlink:href="25-qdoc-configuration-derivedprojects.xml#project">project</db:link>.</db:para>
<db:anchor xml:id="indexes-variable"/>
</db:section>
<db:section xml:id="indexes">
<db:title>indexes</db:title>
<db:para>The indexes variable lists the index files that will be used to generate references.</db:para>
<db:para>For example. to make a derived Qt project contain links to the Qt Reference documentation, you need to specify the associated index file:</db:para>
<db:programlisting language="cpp" role="bad">indexes = $QTDIR/doc/html/qt.index
</db:programlisting>
<db:para>See also <db:link xlink:href="25-qdoc-configuration-derivedprojects.xml#project">project</db:link> and <db:link xlink:href="stylesheet-reference.xml#url">url</db:link>.</db:para>
<db:anchor xml:id="project-variable"/>
</db:section>
<db:section xml:id="project">
<db:title>project</db:title>
<db:para>The project variable provides a name for the project associated with the .qdocconf file.</db:para>
<db:para>The project's name is used to form a file name for the associated project's <db:emphasis>index</db:emphasis> file.</db:para>
<db:programlisting language="cpp" role="bad">project = QtCreator
</db:programlisting>
<db:para>This will cause an index file called qtcreator.index to be created.</db:para>
<db:para>See also <db:link xlink:href="25-qdoc-configuration-derivedprojects.xml#description">description</db:link> and <db:link xlink:href="25-qdoc-configuration-derivedprojects.xml#indexes">indexes</db:link>.</db:para>
<db:anchor xml:id="url-variable"/>
</db:section>
<db:section xml:id="url">
<db:title>url</db:title>
<db:para>The url variable holds the base URL for the reference documentation associated with the current project.</db:para>
<db:para>The URL is stored in the generated index file for the project. When we use the index on its own, QDoc will use this as the base URL when constructing links to classes, functions, and other things listed in the index.</db:para>
<db:programlisting language="cpp" role="bad">project     = Qt
description = Qt Reference Documentation
url         = http://doc.qt.io/qt-4.8/

     ...
</db:programlisting>
<db:para>This makes sure that whenever qt.index is used to generate references to for example Qt classes, the base URL is http://doc.qt.io/qt-4.8/.</db:para>
<db:para>See also <db:link xlink:href="25-qdoc-configuration-derivedprojects.xml#indexes">indexes</db:link> and <db:link xlink:href="25-qdoc-configuration-derivedprojects.xml#url-examples">url.examples</db:link>.</db:para>
<db:anchor xml:id="url-examples-variable"/>
</db:section>
<db:section xml:id="url-examples">
<db:title>url.examples</db:title>
<db:para>The url.examples variable holds the base URL for the examples associated with the current project.</db:para>
<db:para>If defined, a link to the example project directory is generated at the end of each example documentation page. The url.examples variable refers to the root directory of the examples related to this project; it can be a link to an online repository (starting with <db:emphasis>http://</db:emphasis> or <db:emphasis>https://</db:emphasis>), or to the local file system (file://).</db:para>
<db:para>If url.examples is not defined, QDoc will output a list of example's files and images instead.</db:para>
<db:para>For example, given these definitions:</db:para>
<db:programlisting language="cpp" role="bad">url.examples = &quot;https://code.qt.io/cgit/qt/qtbase.git/tree/examples/&quot;
examplesinstallpath = corelib
</db:programlisting>
<db:para>Then, for the following <db:link xlink:href="13-qdoc-commands-topics.xml#example-command">\example</db:link> command:</db:para>
<db:programlisting language="cpp" role="bad">/*!
    \example threads/semaphores
    ...
*/
</db:programlisting>
<db:para>QDoc generates a link to https://code.qt.io/cgit/qt/qtbase.git/tree/examples/corelib/threads/semaphores.</db:para>
<db:para>If the URL contains more components (for example, a query string) after the example path, \1 can be used as a placeholder for the path:</db:para>
<db:programlisting language="cpp" role="bad">url.examples = &quot;https://code.qt.io/cgit/qt/qtbase.git/tree/examples/\1?h=$QT_VER&quot;
examplesinstallpath = corelib
</db:programlisting>
<db:para>Given the same \example command as above and assuming that $QT_VER expands to 5.13, the generated URL is https://code.qt.io/cgit/qt/qtbase.git/tree/examples/corelib/threads/semaphores?h=5.13.</db:para>
<db:para>url.examples variable was introduced in QDoc version 5.13.</db:para>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#url">url</db:link>, <db:link xlink:href="qtgui-qdocconf.xml">examplesinstallpath</db:link>, and <db:link xlink:href="13-qdoc-commands-topics.xml#example-command">\example</db:link>.</db:para>
<db:anchor xml:id="howto"/>
</db:section>
<db:section xml:id="how-to-support-derived-projects">
<db:title>How to Support Derived Projects</db:title>
<db:para>This feature makes use of the comprehensive indexes generated by QDoc when it creates the Qt reference documentation.</db:para>
<db:para>For example, <db:link xlink:href="21-2-qtgui-qdocconf.xml">qtgui.qdocconf</db:link> (the configuration file for Qt) contains the following variable definitions:</db:para>
<db:programlisting language="cpp" role="bad">project     = Qt
description = Qt Reference Documentation
url         = http://doc.qt.io/qt-4.8/

...
</db:programlisting>
<db:para>The <db:link xlink:href="25-qdoc-configuration-derivedprojects.xml#project">project</db:link> variable name is used to form a file name for the index file; in this case the qt.index file is created. The <db:link xlink:href="stylesheet-reference.xml#url">url</db:link> is stored in the index file. Afterwards, QDoc will use this as the base URL when constructing links to classes, functions, and other things listed in the index.</db:para>
</db:section>
</db:article>
