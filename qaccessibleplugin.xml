<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAccessiblePlugin Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qaccessibleplugin.xml">QAccessiblePlugin</db:link> class provides an abstract base class for plugins provinding accessibility information for user interface elements.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAccessiblePlugin</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QAccessiblePlugin is part of <db:simplelist><db:member>plugins</db:member><db:member>accessibility</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Writing an accessibility plugin is achieved by subclassing this base class, reimplementing the pure virtual function <db:link xlink:href="qaccessibleplugin.xml#create">create</db:link>(), and exporting the class with the <db:link xlink:href="qtplugin.xml#Q_PLUGIN_METADATA">Q_PLUGIN_METADATA</db:link>() macro.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">How to Create Qt Plugins</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QAccessiblePlugin">
<db:title>[explicit] QAccessiblePlugin::QAccessiblePlugin(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs an accessibility plugin with the given <db:code role="parameter">parent</db:code>. This is invoked automatically by the plugin loader.</db:para>
</db:section>
<db:section xml:id="dtor.QAccessiblePlugin">
<db:title>[virtual noexcept] QAccessiblePlugin::~QAccessiblePlugin()</db:title>
<db:para>Destroys the accessibility plugin.</db:para>
<db:para>You never have to call this explicitly. Qt destroys a plugin automatically when it is no longer used.</db:para>
</db:section>
<db:section xml:id="create">
<db:title>[pure virtual] QAccessibleInterface *QAccessiblePlugin::create(const QString &amp;<db:emphasis>key</db:emphasis>, QObject *<db:emphasis>object</db:emphasis>)</db:title>
<db:para>Creates and returns a <db:link xlink:href="qaccessibleinterface.xml">QAccessibleInterface</db:link> implementation for the class <db:code role="parameter">key</db:code> and the object <db:code role="parameter">object</db:code>. Keys are case sensitive.</db:para>
</db:section>
</db:section>
</db:article>
