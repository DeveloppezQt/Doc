<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAndroidServiceConnection Class</db:title>
<db:productname>QtAndroidExtras</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Android Extras Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This class was introduced in Qt 5.10.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAndroidServiceConnection</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.10</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += androidextras</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qandroidserviceconnection.xml">QAndroidServiceConnection</db:link> is a convenience abstract class which wraps the <db:link xlink:href="https://developer.android.com/reference/android/content/ServiceConnection.html">Android ServiceConnection</db:link> interface.</db:para>
<db:para>It is useful when you perform a <db:link xlink:href="qtandroid.xml#bindService">QtAndroid::bindService</db:link> operation.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QAndroidServiceConnection">
<db:title>QAndroidServiceConnection::QAndroidServiceConnection()</db:title>
<db:constructorsynopsis>
<db:methodname>QAndroidServiceConnection</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QAndroidServiceConnection()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a new object</db:para>
</db:section>
<db:section xml:id="QAndroidServiceConnection-1">
<db:title>[explicit] QAndroidServiceConnection::QAndroidServiceConnection(const QAndroidJniObject &amp;<db:emphasis>serviceConnection</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QAndroidServiceConnection</db:methodname>
<db:methodparam>
<db:type>const QAndroidJniObject &amp;</db:type>
<db:parameter>serviceConnection</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QAndroidServiceConnection(const QAndroidJniObject &amp;serviceConnection)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a new object from an existing <db:code role="parameter">serviceConnection</db:code>.</db:para>
<db:para>It's useful when you have your own Java implementation. Of course <db:link xlink:href="qandroidserviceconnection.xml#onServiceConnected">onServiceConnected</db:link>()/<db:link xlink:href="qandroidserviceconnection.xml#onServiceDisconnected">onServiceDisconnected</db:link>() will not be called anymore.</db:para>
</db:section>
<db:section xml:id="handle">
<db:title>QAndroidJniObject QAndroidServiceConnection::handle() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QAndroidJniObject</db:type>
<db:methodname>handle</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QAndroidJniObject handle() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>returns the underline <db:link xlink:href="qandroidjniobject.xml">QAndroidJniObject</db:link></db:para>
</db:section>
<db:section xml:id="onServiceConnected">
<db:title>[pure virtual] void QAndroidServiceConnection::onServiceConnected(const QString &amp;<db:emphasis>name</db:emphasis>, const QAndroidBinder &amp;<db:emphasis>serviceBinder</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>onServiceConnected</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QAndroidBinder &amp;</db:type>
<db:parameter>serviceBinder</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void onServiceConnected(const QString &amp;name, const QAndroidBinder &amp;serviceBinder) = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This notification is called when the client managed to connect to the service. The <db:code role="parameter">name</db:code> contains the server name, the <db:code role="parameter">serviceBinder</db:code> is the binder that the client uses to perform IPC operations.</db:para>
<db:warning>
<db:para>This method is called from Binder's thread which is different from the thread that this object was created.</db:para>
</db:warning>
<db:para>returns the underline <db:link xlink:href="qandroidjniobject.xml">QAndroidJniObject</db:link></db:para>
</db:section>
<db:section xml:id="onServiceDisconnected">
<db:title>[pure virtual] void QAndroidServiceConnection::onServiceDisconnected(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>onServiceDisconnected</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void onServiceDisconnected(const QString &amp;name) = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Called when a connection to the Service has been lost. The <db:code role="parameter">name</db:code> parameter specifies which connectioen was lost.</db:para>
<db:warning>
<db:para>This method is called from Binder's thread which is different from the thread that this object was created.</db:para>
</db:warning>
<db:para>returns the underline <db:link xlink:href="qandroidjniobject.xml">QAndroidJniObject</db:link></db:para>
</db:section>
</db:section>
</db:article>
