<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>BarSet QML Type</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Building block for different bar charts.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtCharts 2.1</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtcharts-barset.xml">BarSet</db:link> represents one set of bars. Set of bars contains one data value for each category. First value of set is assumed to belong to first category, second to second category and so on. If set has fewer values than there are categories, then the missing values are assumed to be at the end of set. For missing values in middle of a set, numerical value of zero is used. Labels for zero value sets are not shown.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-abstractbarseries.xml">AbstractBarSeries</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-barseries.xml">BarSeries</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-stackedbarseries.xml">StackedBarSeries</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-percentbarseries.xml">PercentBarSeries</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="borderColor-prop">
<db:title>borderColor : color</db:title>
<db:para>The line (pen) color of the bar set.</db:para>
</db:section>
<db:section xml:id="borderWidth-prop">
<db:title>borderWidth : real</db:title>
<db:para>The width of the border line. By default the width is 2.0.</db:para>
</db:section>
<db:section xml:id="brushFilename-prop">
<db:title>brushFilename : QString</db:title>
<db:para>The name of the file used as a brush for the set.</db:para>
</db:section>
<db:section xml:id="color-prop">
<db:title>color : color</db:title>
<db:para>The fill (brush) color of the bar set.</db:para>
</db:section>
<db:section xml:id="count-prop">
<db:title>count : int</db:title>
<db:para>The count of values on the bar set</db:para>
</db:section>
<db:section xml:id="label-prop">
<db:title>label : string</db:title>
<db:para>Defines the label of the bar set.</db:para>
</db:section>
<db:section xml:id="labelColor-prop">
<db:title>labelColor : color</db:title>
<db:para>The text (label) color of the bar set.</db:para>
</db:section>
<db:section xml:id="labelFont-prop">
<db:title>labelFont : Font</db:title>
<db:para>Defines the font used by the bar set's label.</db:para>
<db:para>See the Qt documentation for more details of Font.</db:para>
</db:section>
<db:section xml:id="values-prop">
<db:title>values : QVariantList</db:title>
<db:para>The values of the bar set. You can set either a list of reals or a list of points as values.</db:para>
<db:para>If you set a list of reals as values, the values directly define the bar set values.</db:para>
<db:para>If you set a list of points as values, the x-coordinate of the point specifies its zero-based index in the bar set. The size of the bar set is the highest x-coordinate value + 1. If a point is missing for any x-coordinate between zero and the highest value, it gets value zero.</db:para>
<db:para>For example the following sets have equal values:</db:para>
<db:programlisting language="cpp">myBarSet1.values = [5, 0, 1, 5];
myBarSet2.values = [Qt.point(0, 5), Qt.point(2, 1), Qt.point(3, 5)];
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="onBorderColorChanged-signal">
<db:title>onBorderColorChanged(color <db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the line (pen) color of the set has changed to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnBorderColorChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onColorChanged-signal">
<db:title>onColorChanged(color <db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the fill (brush) color of the set has changed to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnColorChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onLabelChanged-signal">
<db:title>onLabelChanged()</db:title>
<db:para>This signal is emitted when the label of the bar set has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnLabelChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onLabelColorChanged-signal">
<db:title>onLabelColorChanged(color <db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the text (label) color of the set has changed to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnLabelColorChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onValueChanged-signal">
<db:title>onValueChanged(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted values the value in the set has been modified. Parameter <db:code role="parameter">index</db:code> indicates the position of the modified value.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnValueChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onValuesAdded-signal">
<db:title>onValuesAdded(int <db:emphasis>index</db:emphasis>, int <db:emphasis>count</db:emphasis>)</db:title>
<db:para>This signal is emitted when new values have been added to the set. Parameter <db:code role="parameter">index</db:code> indicates the position of the first inserted value. Parameter <db:code role="parameter">count</db:code> is the number of inserted values.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnValuesAdded</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onValuesRemoved-signal">
<db:title>onValuesRemoved(int <db:emphasis>index</db:emphasis>, int <db:emphasis>count</db:emphasis>)</db:title>
<db:para>This signal is emitted values have been removed from the set. Parameter <db:code role="parameter">index</db:code> indicates the position of the first removed value. Parameter <db:code role="parameter">count</db:code> is the number of removed values.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnValuesRemoved</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
