<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QMediaStreamsControl Class</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qmediastreamscontrol.xml">QMediaStreamsControl</db:link> class provides a media stream selection control.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QMediaStreamsControl</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += multimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qmediacontrol.xml" xlink:role="class">QMediaControl</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QMediaStreamsControl is part of <db:simplelist><db:member>multimedia_control</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qmediastreamscontrol.xml">QMediaStreamsControl</db:link> class provides descriptions of the available media streams and allows individual streams to be activated and deactivated.</db:para>
<db:para>The interface name of <db:link xlink:href="qmediastreamscontrol.xml">QMediaStreamsControl</db:link> is <db:code>org.qt-project.qt.mediastreamscontrol/5.0</db:code> as defined in <db:link xlink:href="qmediastreamscontrol.xml#QMediaStreamsControl_iid">QMediaStreamsControl_iid</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediaservice.xml#requestControl">QMediaService::requestControl</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="StreamType-enum">
<db:title>enum QMediaStreamsControl::StreamType</db:title>
<db:para>Media stream type.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmediastreamscontrol.xml">QMediaStreamsControl</db:link></db:emphasis>::AudioStream</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Audio stream.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmediastreamscontrol.xml">QMediaStreamsControl</db:link></db:emphasis>::VideoStream</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Video stream.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmediastreamscontrol.xml">QMediaStreamsControl</db:link></db:emphasis>::SubPictureStream</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Subpicture or teletext stream.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmediastreamscontrol.xml">QMediaStreamsControl</db:link></db:emphasis>::UnknownStream</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The stream type is unknown.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmediastreamscontrol.xml">QMediaStreamsControl</db:link></db:emphasis>::DataStream</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td/>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QMediaStreamsControl">
<db:title>[explicit protected] QMediaStreamsControl::QMediaStreamsControl(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a new media streams control with the given <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QMediaStreamsControl">
<db:title>[virtual noexcept] QMediaStreamsControl::~QMediaStreamsControl()</db:title>
<db:para>Destroys a media streams control.</db:para>
</db:section>
<db:section xml:id="activeStreamsChanged">
<db:title>void QMediaStreamsControl::activeStreamsChanged()</db:title>
<db:para>The signal is emitted when the active streams list is changed.</db:para>
</db:section>
<db:section xml:id="isActive">
<db:title>[pure virtual] bool QMediaStreamsControl::isActive(int <db:emphasis>stream</db:emphasis>)</db:title>
<db:para>Returns true if the media <db:code role="parameter">stream</db:code> is active.</db:para>
</db:section>
<db:section xml:id="metaData">
<db:title>[pure virtual] QVariant QMediaStreamsControl::metaData(int <db:emphasis>stream</db:emphasis>, const QString &amp;<db:emphasis>key</db:emphasis>)</db:title>
<db:para>Returns the meta-data value of <db:code role="parameter">key</db:code> for a given <db:code role="parameter">stream</db:code>.</db:para>
<db:para>Useful metadata keys are QMediaMetaData::Title, QMediaMetaData::Description and QMediaMetaData::Language.</db:para>
</db:section>
<db:section xml:id="setActive">
<db:title>[pure virtual] void QMediaStreamsControl::setActive(int <db:emphasis>stream</db:emphasis>, bool <db:emphasis>state</db:emphasis>)</db:title>
<db:para>Sets the active <db:code role="parameter">state</db:code> of a media <db:code role="parameter">stream</db:code>.</db:para>
<db:para>Setting the active state of a media stream to true will activate it. If any other stream of the same type was previously active it will be deactivated. Setting the active state fo a media stream to false will deactivate it.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediastreamscontrol.xml#isActive">isActive</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="streamCount">
<db:title>[pure virtual] int QMediaStreamsControl::streamCount()</db:title>
<db:para>Returns the number of media streams.</db:para>
</db:section>
<db:section xml:id="streamType">
<db:title>[pure virtual] QMediaStreamsControl::StreamType QMediaStreamsControl::streamType(int <db:emphasis>stream</db:emphasis>)</db:title>
<db:para>Return the type of a media <db:code role="parameter">stream</db:code>.</db:para>
</db:section>
<db:section xml:id="streamsChanged">
<db:title>void QMediaStreamsControl::streamsChanged()</db:title>
<db:para>The signal is emitted when the available streams list is changed.</db:para>
</db:section>
</db:section>
<db:section xml:id="macro-documentation">
<db:title>Macro Documentation</db:title>
<db:section xml:id="QMediaStreamsControl_iid">
<db:title>QMediaStreamsControl_iid</db:title>
<db:para><db:code>org.qt-project.qt.mediastreamscontrol/5.0</db:code></db:para>
<db:para>Defines the interface name of the <db:link xlink:href="qmediastreamscontrol.xml">QMediaStreamsControl</db:link> class.</db:para>
</db:section>
</db:section>
</db:article>
