<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>What's New in Qt 6.2</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Lists the new features in Qt 6.2.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="new-and-restored-modules-in-qt-6-2">
<db:title>New and Restored Modules in Qt 6.2</db:title>
<db:para>Qt 6.2 adds the following module:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquick-dialogs-qmlmodule.xml">QtQuick.Dialogs</db:link> - A QML module that provides native dialogs with a Qt Quick fallback on platforms where Qt does not provide a native one. <db:link xlink:href="qml-qtquick-dialogs-filedialog.xml">FileDialog</db:link> and <db:link xlink:href="qml-qtquick-dialogs-fontdialog.xml">FontDialog</db:link> are available in this release.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Qt 6.2 reintroduces the following modules that were not present in Qt 6.1. All listed modules were ported to Qt 6 and the CMake build system.</db:para>
<db:para>A more detailed list of changes to each module can be found in <db:link xlink:href="modulechanges.xml">Changes to Qt Modules in Qt 6</db:link>.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-index.xml">Qt Bluetooth</db:link></db:para>
<db:itemizedlist>
<db:listitem>
<db:para>BlueZ 4 support was removed.</db:para>
</db:listitem>
<db:listitem>
<db:para>Win32 backend was removed. As a consequence, there is no longer support for Qt Bluetooth using MinGW.</db:para>
</db:listitem>
<db:listitem>
<db:para>The QML API was removed.</db:para>
</db:listitem>
<db:listitem>
<db:para>QBluetoothTransferManager and related classes were removed.</db:para>
</db:listitem>
<db:listitem>
<db:para>Functionality related to pairing agents was removed from <db:link xlink:href="qbluetoothlocaldevice.xml">QBluetoothLocalDevice</db:link>.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtmultimedia-index.xml">Qt Multimedia</db:link></db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Qt Multimedia public API consists of five large functional blocks. Each API has undergone significant changes compared to Qt 5:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Device discovery</db:para>
</db:listitem>
<db:listitem>
<db:para>Low level audio</db:para>
</db:listitem>
<db:listitem>
<db:para>Playback and decoding</db:para>
</db:listitem>
<db:listitem>
<db:para>Capture and recording</db:para>
</db:listitem>
<db:listitem>
<db:para>Video output pipeline</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para>Currently supported backends:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Linux: GStreamer</db:para>
</db:listitem>
<db:listitem>
<db:para>Windows: WMF</db:para>
</db:listitem>
<db:listitem>
<db:para>macOS/iOS: AVFoundation</db:para>
</db:listitem>
<db:listitem>
<db:para>Android: <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link> and Camera APIs</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtnfc-index.xml">Qt NFC</db:link></db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Removed support for Linux/NearD.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added support for iOS.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtpositioning-index.xml">Qt Positioning</db:link></db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Many of the properties were made bindable.</db:para>
</db:listitem>
<db:listitem>
<db:para>Renamed QGeoPolygon::path() to <db:link xlink:href="qgeopolygon.xml#perimeter">QGeoPolygon::perimeter</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qgeolocation.xml">QGeoLocation</db:link> now uses <db:link xlink:href="qgeoshape.xml">QGeoShape</db:link> instead of <db:link xlink:href="qgeorectangle.xml">QGeoRectangle</db:link> as a bounding area.</db:para>
</db:listitem>
<db:listitem>
<db:para>The error() signal in multiple positioning classes was renamed to errorOccurred().</db:para>
</db:listitem>
<db:listitem>
<db:para>QGeoPositionInfoSourceFactoryV2 was removed, and <db:link xlink:href="qgeopositioninfosourcefactory.xml">QGeoPositionInfoSourceFactory</db:link> now supports custom parameters for the created objects.</db:para>
</db:listitem>
<db:listitem>
<db:para>NMEA support was redesigned. The <db:emphasis>serialnmea</db:emphasis> plugin was renamed to <db:emphasis>nmea</db:emphasis> and now supports reading the input stream from a TCP socket or a raw file. The nmeaSource property was removed.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtremoteobjects-index.xml">Qt Remote Objects</db:link></db:para>
<db:itemizedlist>
<db:listitem>
<db:para>The local connection backend now supports abstract namespaces (this is a Linux-specific extension), achieved by using the new localabstract schema in the URL.</db:para>
</db:listitem>
<db:listitem>
<db:para>.rep-files now support:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Class enums.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qflags.xml">QFlags</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Multiline comments (C-style).</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para>Enums and <db:link xlink:href="qflags.xml">flags</db:link> are now supported in POD-types and as keys for <db:link xlink:href="qmap.xml">QMap</db:link> and <db:link xlink:href="qhash.xml#qhash">QHash</db:link> properties in .rep files.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtsensors-index.xml">Qt Sensors</db:link></db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Most QML facing properties are now bindable.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtsensors-sensor.xml#type-prop">Sensor::type</db:link> and <db:link xlink:href="qsensor.xml#type-prop">QSensor::type</db:link> properties are now marked as constant.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added parameter to <db:link xlink:href="qsensorbackend.xml#sensorBusy">QSensorBackend::sensorBusy</db:link>() to be able to also clear the busy state.</db:para>
</db:listitem>
<db:listitem>
<db:para>Deleted typedef for qtimestamp.</db:para>
</db:listitem>
<db:listitem>
<db:para>Renamed sensor type string to sensorType.</db:para>
</db:listitem>
<db:listitem>
<db:para>Windows: We can now require Windows 10 API, thereby extending the number of sensors supported.</db:para>
</db:listitem>
<db:listitem>
<db:para>TI Sensor Tag as supported platform has been removed.</db:para>
</db:listitem>
<db:listitem>
<db:para>The Linux sysfs backend has been removed.</db:para>
</db:listitem>
<db:listitem>
<db:para>The sensor gesture support has been removed (input welcomed here: <db:link xlink:href="https://bugreports.qt.io/projects/QTBUG/issues/QTBUG-97066">QTBUG-97066</db:link>).</db:para>
</db:listitem>
<db:listitem>
<db:para>Sensorfw as a platform was removed due to Sensorfw itself not yet ported to Qt 6.</db:para>
</db:listitem>
<db:listitem>
<db:para>Sensor types that had only Sensorfw backend (IRProximity, Lid, and Tap) are not listed as supported anymore.</db:para>
</db:listitem>
<db:listitem>
<db:para>Sensor types without any backend have been removed (Altimeter, Distance, and Holster).</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtserialbus-index.xml">Qt Serial Bus</db:link></db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qcanbusfactory.xml">QCanBusFactory</db:link> was removed and QCanBusFactoryV2 was renamed to <db:link xlink:href="qcanbusfactory.xml">QCanBusFactory</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>QModbusRtuSerialSlave and QModbusRtuSerialMaster were renamed to <db:link xlink:href="qmodbusrtuserialserver.xml">QModbusRtuSerialServer</db:link> and <db:link xlink:href="qmodbusrtuserialclient.xml">QModbusRtuSerialClient</db:link>.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtserialport-index.xml">Qt Serial Port</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtwebchannel-index.xml">Qt WebChannel</db:link></db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qwebchannel.xml">QWebChannel</db:link> properties were made bindable.</db:para>
</db:listitem>
<db:listitem>
<db:para>The property update interval of <db:link xlink:href="qwebchannel.xml">QWebChannel</db:link> can now be configured. 50ms update interval remains the default.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qwebchannel.xml">QWebChannel</db:link> now supports property updates for BINDABLE properties. However, the client side does not provide a generic callback mechanism if the host property does not have a NOTIFY signal.</db:para>
</db:listitem>
<db:listitem>
<db:para>Signals from objects living in a different thread are now handled correctly (<db:link xlink:href="https://bugreports.qt.io/browse/QTBUG-51366">QTBUG-51366</db:link>).</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtwebengine-index.xml">Qt WebEngine</db:link></db:para>
<db:itemizedlist>
<db:listitem>
<db:para>The submodule for Qt Quick has been renamed from QtWebEngine to <db:link xlink:href="qtwebenginequick-module.xml">QtWebEngineQuick</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Several classes were moved from <db:link xlink:href="qtwebenginewidgets-module.xml">QtWebEngineWidgets</db:link> to <db:link xlink:href="qtwebenginecore-module.xml">QtWebEngineCore</db:link>, including <db:link xlink:href="qwebenginepage.xml">QWebEnginePage</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Some functionality previously only accessible by deriving from <db:link xlink:href="qwebenginepage.xml">QWebEnginePage</db:link> are now accessible using synchronous signals.</db:para>
</db:listitem>
<db:listitem>
<db:para>Favicon API added to <db:link xlink:href="qwebengineprofile.xml">QWebEngineProfile</db:link> to look up icons for specific URLs.</db:para>
</db:listitem>
<db:listitem>
<db:para>The new <db:link xlink:href="qwebengineloadinginfo.xml">QWebEngineLoadingInfo</db:link> class provides more detail about loading success or failure.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtwebsockets-index.xml">Qt WebSockets</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtwebview-index.xml">Qt WebView</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="new-features-in-qt-6-2">
<db:title>New Features in Qt 6.2</db:title>
<db:section xml:id="qt-core-module">
<db:title>Qt Core Module</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Added functionality:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Added <db:link xlink:href="qbytearrayview.xml#compare">QByteArrayView::compare</db:link>().</db:para>
</db:listitem>
<db:listitem>
<db:para>Added methods QFlags::test(Any)Flag(s).</db:para>
</db:listitem>
<db:listitem>
<db:para>Added <db:link xlink:href="qhashseed.xml">QHashSeed</db:link> to control hashing (seeds are now size_t); this shall replace qGlobalQHashSeed and qSetGlobalQHashSeed.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added PRIxQTDATATYPE macros to facilitate printf()-style formatting without casts or warnings.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para>Made many properties bindable.</db:para>
</db:listitem>
<db:listitem>
<db:para>Grapheme clusters can now handle emojis.</db:para>
</db:listitem>
<db:listitem>
<db:para>UNC paths and network shares on Windows are now handled consistently.</db:para>
</db:listitem>
<db:listitem>
<db:para>The handling of the start-offset parameter, called from, in various indexOf() and lastIndexOf() methods of containers (principally <db:link xlink:href="qstring.xml">QString</db:link>, <db:link xlink:href="qbytearray.xml">QByteArray</db:link> and their views) is now more coherent.</db:para>
</db:listitem>
<db:listitem>
<db:para>Like <db:link xlink:href="qstring.xml#number">QString::number</db:link>() has since the release of Qt 6.0, <db:link xlink:href="qbytearray.xml#number">QByteArray::number</db:link>()'s overloads for signed integral types now return a text with a minus sign followed by the number's absolute value instead of coercing to an unsigned type for all bases except ten, when passed a negative integer and any supported base.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qcalendar.xml">QCalendar</db:link> now supports construction from the ID of a custom backend.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qchar.xml">QChar</db:link>, <db:link xlink:href="qpoint.xml">QPoint</db:link>, and <db:link xlink:href="qpointf.xml">QPointF</db:link> are now primitive rather than merely relocatable.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qcoreapplication.xml#exit">QCoreApplication::exit</db:link>() is now, like quit(), a slot (as the documentation long claimed); same for <db:link xlink:href="qeventloop.xml">QEventLoop</db:link> and <db:link xlink:href="qthread.xml">QThread</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qdatetime.xml">QDateTime</db:link> now takes account of time-zones throughout time_t's range (in so far as the platform supplies such information), rather than artificially limiting the range to 1970 - 2037.</db:para>
</db:listitem>
<db:listitem>
<db:para>Fleshed out the value-type behavior of <db:link xlink:href="qflags.xml">QFlags</db:link>, and it is now used more systematically.</db:para>
</db:listitem>
<db:listitem>
<db:para>When building for C++20, <db:link xlink:href="qlist.xml">QList</db:link> (hence also <db:link xlink:href="qvector.xml">QVector</db:link>) is now a contiguous_iterator, satisfying contiguous_range.</db:para>
</db:listitem>
<db:listitem>
<db:para>QLocalSocket::waitFor*() methods were made to support duplex operations on Windows (as they already did on Unix).</db:para>
</db:listitem>
<db:listitem>
<db:para>Added std::chrono overloads to <db:link xlink:href="qlockfile.xml">QLockFile</db:link> methods, avoiding needless conversions between UTC and local time.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qstring.xml">QString</db:link> can now be built from char8_t (when available).</db:para>
</db:listitem>
<db:listitem>
<db:para>Made <db:link xlink:href="qthreadpool.xml">QThreadPool</db:link>'s thread priority configurable; the threads share the pool's name if it has one.</db:para>
</db:listitem>
<db:listitem>
<db:para>Lots of Bug-fixing, clean up, and documentation improvements.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qt-gui-module">
<db:title>Qt GUI Module</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Added floating point image formats to <db:link xlink:href="qimage.xml">QImage</db:link> for both 16-bit and 32-bit floats.</db:para>
</db:listitem>
<db:listitem>
<db:para>Converting RGB images to, or painting RGB colors onto, gray-scale images is now gamma corrected and produces the luminance values of the input color space.</db:para>
</db:listitem>
<db:listitem>
<db:para>The CSS <db:emphasis>text-decoration-color</db:emphasis> attribute is now supported in rich text spans with underlines, overlines, and strikethrough.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qt-quick-module">
<db:title>Qt Quick Module</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Added support for selecting cells in a <db:link xlink:href="qml-qtquick-tableview.xml">TableView</db:link> by assigning it a <db:link xlink:href="qml-qtqml-models-itemselectionmodel.xml">ItemSelectionModel</db:link>.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qt-quick-controls-module">
<db:title>Qt Quick Controls Module</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Added a new control; <db:link xlink:href="qml-qtquick-controls-selectionrectangle.xml">SelectionRectangle</db:link>. This control can be used to select cells in a <db:link xlink:href="qml-qtquick-tableview.xml">TableView</db:link> by using a styled selection rectangle.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qt-widgets-module">
<db:title>Qt Widgets Module</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Added PM_LineEditIconSize, a new <db:link xlink:href="qstyle.xml#PixelMetric-enum">QStyle::PixelMetric</db:link> enum value that allows styles to define a default size for icons in a <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>The new <db:link xlink:href="qgraphicssceneevent.xml#timestamp">QGraphicsSceneEvent::timestamp</db:link> method returns the timestamp of the original event, if applicable.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qgraphicsscenewheelevent.xml#phase">QGraphicsSceneWheelEvent::phase</db:link>, <db:link xlink:href="qgraphicsscenewheelevent.xml#pixelDelta">QGraphicsSceneWheelEvent::pixelDelta</db:link>, and <db:link xlink:href="qgraphicsscenewheelevent.xml#isInverted">QGraphicsSceneWheelEvent::isInverted</db:link> return the respective attributes of the original <db:link xlink:href="qwheelevent.xml">QWheelEvent</db:link>.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qt-network-module">
<db:title>Qt Network Module</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qsslsocket.xml">QSslSocket</db:link></db:para>
<db:itemizedlist>
<db:listitem>
<db:para>TLS backends that were previously (in Qt 6.1) converted into plugin-like classes, were moved out of QtNetwork and implemented as real plugins.</db:para>
</db:listitem>
<db:listitem>
<db:para>Several TLS backends may now co-exist at runtime, for example, OpenSSL and Schannel, or OpenSSL and SecureTransport.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qnetworkinformation.xml">QNetworkInformation</db:link></db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Introduced <db:link xlink:href="qnetworkinformation.xml#isBehindCaptivePortal-prop">isBehindCaptivePortal</db:link>, a new property that can be used to determine whether the user is connected to a network with a captive portal.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qt-qml-module">
<db:title>Qt QML Module</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Core language</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Added support for optional chaining.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added <db:emphasis>as</db:emphasis> casts: these mostly help tooling but can also be used to replace code such as return (obj instanceof Item) ? obj.width : 42 with (obj as Item)?.width ?? 42.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para>Added a public CMake API for QML modules: qt_add_qml_module().</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Takes care of generating qmldir and qmltypes.</db:para>
</db:listitem>
<db:listitem>
<db:para>Can automatically create a plugin if a plugin only registers types.</db:para>
</db:listitem>
<db:listitem>
<db:para>Has built-in support for a linting target.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para>QML tooling</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>qmllint</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Added a granular setting for the warning severity; warnings can be disabled entirely, make them informational only, or make them lead to a non-zero exit code.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added a settings file (<db:emphasis>.qmllint.ini</db:emphasis>) for configuring warning levels on a directory-by-directory basis. A default settings file can be generated using qmllint --write-defaults.</db:para>
</db:listitem>
<db:listitem>
<db:para>Warnings can now be disabled in blocks via comments; //qmllint enable/disable &lt;warning-type1&gt; &lt;warning-type2...&gt;</db:para>
</db:listitem>
<db:listitem>
<db:para>Greatly improved performance when linting files, especially when linting multiple files with lots of imports.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added support for JSON output for use in tooling.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para>qmlformat</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>qmlformat now utilizes our new <db:emphasis>qmldom</db:emphasis> library and should generally produce better output.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
</db:itemizedlist>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qt-quick-3d-module">
<db:title>Qt Quick 3D Module</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Added support for <db:emphasis>instanced rendering</db:emphasis>, an optimized way of drawing multiple instances of the same objects with different transformations.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added 3D Particles, an API for adding particle effects to 3D scenes. This includes a technology preview of model blend particles.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added Qt Quick Input events for 2D items in 3D, both in scene and in textures.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added an API for ray-based picking from arbitrary points in the scene.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added <db:link xlink:href="qml-qtquick3d-assetutils-runtimeloader.xml">RuntimeLoader</db:link>, making it possible to load glTF2 files at runtime.</db:para>
</db:listitem>
<db:listitem>
<db:para>Implemented <db:emphasis>parallax occlusion mapping</db:emphasis>: Enables the use of height maps without the cost of adding geometry.</db:para>
</db:listitem>
<db:listitem>
<db:para>Implemented <db:emphasis>depth draw mode</db:emphasis> on materials: Enables fine control over depth rendering for a material.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qt-data-visualization-module">
<db:title>Qt Data Visualization Module</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Fixed background rendering mode.</db:para>
</db:listitem>
<db:listitem>
<db:para>RenderDirectToBackground_NoClear was deprecated as opting to not clear the window is no longer an option in Qt 6.</db:para>
</db:listitem>
<db:listitem>
<db:para>Lots of minor bug fixes.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qt-charts-module">
<db:title>Qt Charts Module</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Added more marker shapes to pick from in <db:link xlink:href="qscatterseries.xml">QScatterSeries</db:link> and <db:link xlink:href="qlegend.xml">QLegend</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added a <db:emphasis>light marker</db:emphasis> feature to <db:link xlink:href="qxyseries.xml">QXYSeries</db:link> and <db:link xlink:href="qlegend.xml">QLegend</db:link>. This is a lighter weight rendering of points.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added an ability to select points in a series via method calls to <db:link xlink:href="qxyseries.xml">QXYSeries</db:link> and <db:link xlink:href="qbarset.xml">QBarSet</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added an ability to set a color or use a custom light marker to be used for selected points in <db:link xlink:href="qxyseries.xml">QXYSeries</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added an ability to set a color to be used for selected bars in <db:link xlink:href="qbarset.xml">QBarSet</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added a feature to display a <db:emphasis>best fit line</db:emphasis> in a <db:link xlink:href="qxyseries.xml">QXYSeries</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added an ability to customize the look of individual points in a <db:link xlink:href="qxyseries.xml">QXYSeries</db:link>. This feature allows setting the visibility, label visibility, and the size of each point.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added a method <db:link xlink:href="qxyseries.xml#sizeBy">sizeBy</db:link>() to <db:link xlink:href="qxyseries.xml">QXYSeries</db:link> that adjusts the size of the points in a series according to passed values.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added a method <db:link xlink:href="qxyseries.xml#colorBy">colorBy</db:link>() to <db:link xlink:href="qxyseries.xml">QXYSeries</db:link> that adjusts color of the points in a series according to passed values and a gradient.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added a new axis class <db:link xlink:href="qcoloraxis.xml">QColorAxis</db:link> to support the colorBy() feature, displaying a color scale.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added an ability to disable label truncation in axes.</db:para>
</db:listitem>
<db:listitem>
<db:para>Improved performance by caching recently used text bounds.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added interactive support to <db:link xlink:href="qlegend.xml">QLegend</db:link> via a <db:link xlink:href="qlegend.xml#setInteractive">setInteractive</db:link>() method. Once enabled, allows the legend to be detached with a double-click. Once detached, the legend can be dragged and resized, and reattached to a side of the chart by dragging it off the edge.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added <db:link xlink:href="qlegend.xml#attachedToChartChanged">attachedToChartChanged</db:link>() signal to <db:link xlink:href="qlegend.xml">QLegend</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Updated the legend example.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qt-for-python">
<db:title>Qt for Python</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>New examples, tutorials, and videos added to the <db:link xlink:href="https://doc.qt.io/qtforpython-6/">Qt for Python documentation</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Compatible with Python 3.10rc2.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added the <db:link xlink:href="qtdbus-module.xml">QtDBus</db:link>, <db:link xlink:href="qtnetworkauth-module.xml">QtNetworkAuth</db:link>, and <db:link xlink:href="qtbluetooth-module.xml">QtBluetooth</db:link> modules.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added a new Shiboken feature, Opaque Containers, to avoid copying C++ containers into Python to use them.</db:para>
</db:listitem>
<db:listitem>
<db:para>You can now use qtpaths instead of qmake when building PySide from source.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added support for std::function for some of <db:link xlink:href="qthreadpool.xml">QThreadPool</db:link>'s methods.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added new QML functions as well as support for <db:link xlink:href="qqmlengine.xml#qmlRegisterSingletonInstance">qmlRegisterSingletonInstance</db:link>.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="platform-changes">
<db:title>Platform Changes</db:title>
<db:section xml:id="technology-preview-platforms">
<db:title>Technology Preview Platforms</db:title>
<db:section xml:id="windows-on-arm">
<db:title>Windows on ARM</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Added Windows on ARM64 as a technology preview platform.</db:para>
</db:listitem>
<db:listitem>
<db:para>Supported as a build target; no host support yet.</db:para>
</db:listitem>
<db:listitem>
<db:para>Known limitations:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>No support for Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link> yet; missing official support for Chromium.</db:para>
</db:listitem>
<db:listitem>
<db:para>No support for SSL yet; missing official OpenSSL support.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="desktop-platforms">
<db:title>Desktop Platforms</db:title>
<db:section xml:id="macos-on-apple-silicon">
<db:title>macOS on Apple Silicon</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Added official support as both a target and a host platform.</db:para>
</db:listitem>
<db:listitem>
<db:para>Libraries in the Qt SDK are built as universal binaries.</db:para>
</db:listitem>
<db:listitem>
<db:para>Known limitations:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>SSL support is missing.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis>postgresql</db:emphasis> and <db:emphasis>odbc</db:emphasis> database plugins are missing (<db:link xlink:href="https://bugreports.qt.io/browse/QTBUG-93204">QTBUG-93204</db:link>).</db:para>
</db:listitem>
<db:listitem>
<db:para>JIT support is missing (<db:link xlink:href="https://bugreports.qt.io/browse/QTBUG-93206">QTBUG-93206</db:link>).</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="wayland-client-on-linux">
<db:title>Wayland Client on Linux</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>A touchpad pinch gesture now generates Zoom and Rotate <db:link xlink:href="qnativegestureevent.xml">QNativeGestureEvent</db:link>s if the compositor sends them via the <db:emphasis>pointer-gestures-unstable-v1</db:emphasis> protocol. This allows a Qt Quick <db:link xlink:href="qml-qtquick-pinchhandler.xml">PinchHandler</db:link> to operate via touchpad pinch gestures. Two, three, or four-finger gestures are recognized. A gesture of type <db:link xlink:href="qt.xml#NativeGestureType-enum">Qt::PanNativeGesture</db:link> can be generated by swiping with three or four fingers. Two-finger flicking still generates <db:link xlink:href="qwheelevent.xml">QWheelEvent</db:link>s as before.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="mobile-platforms">
<db:title>Mobile Platforms</db:title>
<db:section xml:id="android">
<db:title>Android</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Some of the methods previously under the QtAndroid namespace in QtAndroidExtras (for example, sdkVersion() and context()), were moved to <db:link xlink:href="qnativeinterface-qandroidapplication.xml">QNativeInterface::QAndroidApplication</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Implemented a new permissions API in <db:link xlink:href="qcoreapplication.xml">QCoreApplication</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>The remaining QtAndroidExtras APIs were left as private APIs in qtbase until cross-platform alternatives (for Intents, Services, etc.) are in place.</db:para>
</db:listitem>
<db:listitem>
<db:para>Removed obsolete Ministro code as it's now unsupported by Android.</db:para>
</db:listitem>
<db:listitem>
<db:para>Simplified <db:emphasis>AndroidManifest.xml</db:emphasis> to only contain tags relevant to the user, helping maintainability and reducing clutter.</db:para>
</db:listitem>
<db:listitem>
<db:para>QCDebug() and friends now use the category as a tag in Android <db:emphasis>logcat</db:emphasis>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Updated Android Gradle plugin to 4.1.3.</db:para>
</db:listitem>
<db:listitem>
<db:para>Fixed a non-SDK API bug with style (<db:link xlink:href="https://bugreports.qt.io/browse/QTBUG-71590">QTBUG-71590</db:link>), though Android Style for widgets on Android 9+ is still affected (<db:link xlink:href="https://bugreports.qt.io/browse/QTBUG-96149">QTBUG-96149</db:link>).</db:para>
</db:listitem>
<db:listitem>
<db:para>The default targetSdkVersion is set to 30 in accordance with Google Play Store requirements.</db:para>
</db:listitem>
<db:listitem>
<db:para>The build-tools version and platform version used is bumped to 30.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qdesktopservices.xml">QDesktopServices</db:link> custom handlers are now enabled, and allow you to work with Android App Links, for example.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added information that allow applications to determine the source of an intent without creating an own extension of QtActivity.</db:para>
</db:listitem>
<db:listitem>
<db:para>Fixed imports for QML modules and added the possibility of multiple QML root paths.</db:para>
</db:listitem>
<db:listitem>
<db:para>Fixed Vulkan builds on Android.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="ios">
<db:title>iOS</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Improved CMake support.</db:para>
</db:listitem>
<db:listitem>
<db:para>Known issues:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Missing default launch screen storyboard.</db:para>
</db:listitem>
<db:listitem>
<db:para>Custom libraries fail to install (<db:link xlink:href="https://bugreports.qt.io/browse/QTBUG-95381">QTBUG-95381</db:link>).</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="embedded-platforms">
<db:title>Embedded Platforms</db:title>
<db:para>Available under the <db:link xlink:href="https://doc.qt.io/Boot2Qt/">Qt for Device Creation</db:link> license.</db:para>
<db:section xml:id="boot-to-qt">
<db:title>Boot to Qt</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>The Boot to Qt stack was updated to use Yocto 3.3 (Hardknott).</db:para>
</db:listitem>
<db:listitem>
<db:para>Added Intel NUC10 (64bit i5 x86) as a reference target.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added NVidia Jetson Tegra X2 as a target.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qnx">
<db:title>QNX</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Added QNX version 7.1 and Ubuntu 20.04 as a host.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added NXP iMX8QM as a reference target.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="integrity">
<db:title>INTEGRITY</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Added INTEGRITY version 19.0.13 and Ubuntu 20.04 as a host.</db:para>
</db:listitem>
<db:listitem>
<db:para>Added Qualcomm Snapdragon 8155P as a reference target.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="webos">
<db:title>WebOS</db:title>
<db:para>Qt 6.2 has been verified to work with LG webOS OSE 2.13.1 using Ubuntu 20.04 as development host and Raspberry Pi4 hardware.</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="list-of-api-changes">
<db:title>List of API Changes</db:title>
<db:para>These pages contain an overview of API changes in Qt 6.2:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="newclasses62.xml">New Classes and Functions in Qt 6.2</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="obsoleteclasses.xml">Obsolete Classes</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
