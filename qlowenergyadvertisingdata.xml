<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QLowEnergyAdvertisingData Class</db:title>
<db:productname>QtBluetooth</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Bluetooth Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qlowenergyadvertisingdata.xml">QLowEnergyAdvertisingData</db:link> class represents the data to be broadcast during Bluetooth Low Energy advertising.</db:para>
<db:para>This class was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QLowEnergyAdvertisingData</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += bluetooth</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QLowEnergyAdvertisingData is part of <db:simplelist><db:member>shared</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This data can include the device name, GATT services offered by the device, and so on. The data set via this class will be used when advertising is started by calling <db:link xlink:href="qlowenergycontroller.xml#startAdvertising">QLowEnergyController::startAdvertising</db:link>(). Objects of this class can represent an Advertising Data packet or a Scan Response packet.</db:para>
<db:note>
<db:para>The actual data packets sent over the advertising channel cannot contain more than 31 bytes. If the variable-length data set via this class exceeds that limit, it will be left out of the packet or truncated, depending on the type.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyadvertisingparameters.xml">QLowEnergyAdvertisingParameters</db:link></db:member>
<db:member><db:link xlink:href="qlowenergycontroller.xml#startAdvertising">QLowEnergyController::startAdvertising</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Discoverability-enum">
<db:title>enum QLowEnergyAdvertisingData::Discoverability</db:title>
<db:para>The discoverability of the advertising device as defined by the Generic Access Profile.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlowenergyadvertisingdata.xml">QLowEnergyAdvertisingData</db:link></db:emphasis>::DiscoverabilityNone</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The advertising device does not wish to be discoverable by scanning devices.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlowenergyadvertisingdata.xml">QLowEnergyAdvertisingData</db:link></db:emphasis>::DiscoverabilityLimited</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The advertising device wishes to be discoverable with a high priority. Note that this mode is not compatible with using a white list. The value of <db:link xlink:href="qlowenergyadvertisingparameters.xml#filterPolicy">QLowEnergyAdvertisingParameters::filterPolicy</db:link>() is always assumed to be <db:link xlink:href="qlowenergyadvertisingparameters.xml#FilterPolicy-enum">QLowEnergyAdvertisingParameters::IgnoreWhiteList</db:link> when limited discoverability is used.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlowenergyadvertisingdata.xml">QLowEnergyAdvertisingData</db:link></db:emphasis>::DiscoverabilityGeneral</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The advertising device wishes to be discoverable by scanning devices.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QLowEnergyAdvertisingData">
<db:title>QLowEnergyAdvertisingData::QLowEnergyAdvertisingData()</db:title>
<db:para>Creates a new object of this class. All values are initialized to their defaults according to the Bluetooth Low Energy specification.</db:para>
</db:section>
<db:section xml:id="QLowEnergyAdvertisingData-1">
<db:title>QLowEnergyAdvertisingData::QLowEnergyAdvertisingData(const QLowEnergyAdvertisingData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a new object of this class that is a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QLowEnergyAdvertisingData">
<db:title>[noexcept] QLowEnergyAdvertisingData::~QLowEnergyAdvertisingData()</db:title>
<db:para>Destroys this object.</db:para>
</db:section>
<db:section xml:id="discoverability">
<db:title>QLowEnergyAdvertisingData::Discoverability QLowEnergyAdvertisingData::discoverability() const</db:title>
<db:para>Returns the discoverability mode of the advertising device. The default is <db:link xlink:href="qlowenergyadvertisingdata.xml#Discoverability-enum">DiscoverabilityNone</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyadvertisingdata.xml#setDiscoverability">setDiscoverability</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="includePowerLevel">
<db:title>bool QLowEnergyAdvertisingData::includePowerLevel() const</db:title>
<db:para>Returns whether to include the device's transmit power level in the advertising data. The default is <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyadvertisingdata.xml#setIncludePowerLevel">setIncludePowerLevel</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="invalidManufacturerId">
<db:title>[static] quint16 QLowEnergyAdvertisingData::invalidManufacturerId()</db:title>
<db:para>Returns an invalid manufacturer id. If this value is set as the manufacturer id (which it is by default), no manufacturer data will be present in the advertising data.</db:para>
</db:section>
<db:section xml:id="localName">
<db:title>QString QLowEnergyAdvertisingData::localName() const</db:title>
<db:para>Returns the name of the local device that is to be advertised.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyadvertisingdata.xml#setLocalName">setLocalName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="manufacturerData">
<db:title>QByteArray QLowEnergyAdvertisingData::manufacturerData() const</db:title>
<db:para>Returns the manufacturer data. The default is an empty byte array.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyadvertisingdata.xml#setManufacturerData">setManufacturerData</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="manufacturerId">
<db:title>quint16 QLowEnergyAdvertisingData::manufacturerId() const</db:title>
<db:para>Returns the manufacturer id. The default is <db:link xlink:href="qlowenergyadvertisingdata.xml#invalidManufacturerId">QLowEnergyAdvertisingData::invalidManufacturerId</db:link>(), which means the data will not be advertised.</db:para>
</db:section>
<db:section xml:id="rawData">
<db:title>QByteArray QLowEnergyAdvertisingData::rawData() const</db:title>
<db:para>Returns the user-supplied raw data to be advertised. The default is an empty byte array.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyadvertisingdata.xml#setRawData">setRawData</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="services">
<db:title>QList&lt;QBluetoothUuid&gt; QLowEnergyAdvertisingData::services() const</db:title>
<db:para>Returns the list of service UUIDs to be advertised. By default, this list is empty.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyadvertisingdata.xml#setServices">setServices</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDiscoverability">
<db:title>void QLowEnergyAdvertisingData::setDiscoverability(QLowEnergyAdvertisingData::Discoverability <db:emphasis>mode</db:emphasis>)</db:title>
<db:para>Sets the discoverability type of the advertising device to <db:code role="parameter">mode</db:code>.</db:para>
<db:note>
<db:para>Discoverability information can only appear in an actual advertising data packet. If this object acts as scan response data, a call to this function will have no effect on the scan response sent.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyadvertisingdata.xml#discoverability">discoverability</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setIncludePowerLevel">
<db:title>void QLowEnergyAdvertisingData::setIncludePowerLevel(bool <db:emphasis>doInclude</db:emphasis>)</db:title>
<db:para>Specifies whether to include the device's transmit power level in the advertising data. If <db:code role="parameter">doInclude</db:code> is <db:code>true</db:code>, the data will be included, otherwise it will not.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyadvertisingdata.xml#includePowerLevel">includePowerLevel</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLocalName">
<db:title>void QLowEnergyAdvertisingData::setLocalName(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Specifies that <db:code role="parameter">name</db:code> should be broadcast as the name of the device. If the full name does not fit into the advertising data packet, an abbreviated name is sent, as described by the Bluetooth Low Energy specification.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyadvertisingdata.xml#localName">localName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setManufacturerData">
<db:title>void QLowEnergyAdvertisingData::setManufacturerData(quint16 <db:emphasis>id</db:emphasis>, const QByteArray &amp;<db:emphasis>data</db:emphasis>)</db:title>
<db:para>Sets the manufacturer id and data. The <db:code role="parameter">id</db:code> parameter is a company identifier as assigned by the Bluetooth SIG. The <db:code role="parameter">data</db:code> parameter is an arbitrary value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyadvertisingdata.xml#manufacturerData">manufacturerData</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setRawData">
<db:title>void QLowEnergyAdvertisingData::setRawData(const QByteArray &amp;<db:emphasis>data</db:emphasis>)</db:title>
<db:para>Sets the data to be advertised to <db:code role="parameter">data</db:code>. If the value is not an empty byte array, it will be sent as-is as the advertising data and all other data in this object will be ignored. This can be used to send non-standard data.</db:para>
<db:note>
<db:para>If <db:code role="parameter">data</db:code> is longer than 31 bytes, it will be truncated. It is the caller's responsibility to ensure that <db:code role="parameter">data</db:code> is well-formed.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyadvertisingdata.xml#rawData">rawData</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setServices">
<db:title>void QLowEnergyAdvertisingData::setServices(const QList&lt;QBluetoothUuid&gt; &amp;<db:emphasis>services</db:emphasis>)</db:title>
<db:para>Specifies that the service UUIDs in <db:code role="parameter">services</db:code> should be advertised. If the entire list does not fit into the packet, an incomplete list is sent as specified by the Bluetooth Low Energy specification.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyadvertisingdata.xml#services">services</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="swap">
<db:title>[noexcept] void QLowEnergyAdvertisingData::swap(QLowEnergyAdvertisingData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps this object with <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QLowEnergyAdvertisingData &amp;QLowEnergyAdvertisingData::operator=(const QLowEnergyAdvertisingData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Makes this object a copy of <db:code role="parameter">other</db:code> and returns the new value of this object.</db:para>
</db:section>
</db:section>
</db:article>
