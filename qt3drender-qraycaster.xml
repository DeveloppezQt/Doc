<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QRayCaster Class</db:title>
<db:subtitle>Qt3DRender::QRayCaster</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qt3drender-qraycaster.xml">Qt3DRender::QRayCaster</db:link> is used to perform ray casting tests in 3d world coordinates.</db:para>
<db:para>This class was introduced in Qt 5.11.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QRayCaster</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.11</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-raycaster.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qabstractraycaster.xml" xlink:role="class">Qt3DRender::QAbstractRayCaster</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The 3d ray is defined by its origin, direction and length. It will be affected by the transformations applied to the entity it belongs to.</db:para>
<db:para>Ray casting tests will be performed every frame as long as the component is enabled. The hits property will be updated with the list of intersections.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qabstractraycaster.xml">QAbstractRayCaster</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qscreenraycaster.xml">QScreenRayCaster</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qnopicking.xml">QNoPicking</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="direction-prop">
<db:title>direction : QVector3D</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVector3D</db:type>
<db:varname>direction</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">direction</db:synopsisinfo>
<db:synopsisinfo role="setter">setDirection</db:synopsisinfo>
<db:synopsisinfo role="notifier">directionChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the direction of the 3D ray. This should be a unit vector.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> <db:emphasis role="bold">direction</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setDirection</db:emphasis>(const <db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> &amp;<db:emphasis>direction</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">directionChanged</db:emphasis>(const <db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> &amp;<db:emphasis>direction</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="length-prop">
<db:title>length : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>length</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">length</db:synopsisinfo>
<db:synopsisinfo role="setter">setLength</db:synopsisinfo>
<db:synopsisinfo role="notifier">lengthChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the length of the 3D ray.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">length</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qraycaster.xml#setLength">setLength</db:link></db:emphasis>(<db:type>float</db:type> <db:emphasis>length</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">lengthChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>length</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="origin-prop">
<db:title>origin : QVector3D</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVector3D</db:type>
<db:varname>origin</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">origin</db:synopsisinfo>
<db:synopsisinfo role="setter">setOrigin</db:synopsisinfo>
<db:synopsisinfo role="notifier">originChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the origin of the 3D ray in local coordinates.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> <db:emphasis role="bold">origin</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setOrigin</db:emphasis>(const <db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> &amp;<db:emphasis>origin</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">originChanged</db:emphasis>(const <db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> &amp;<db:emphasis>origin</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="setLength">
<db:title>void QRayCaster::setLength(float <db:emphasis>length</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setLength</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">length</db:synopsisinfo>
<db:synopsisinfo role="signature">void setLength(float length)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the length of the ray to <db:code role="parameter">length</db:code>.</db:para>
<db:para>If the value is less than or equal to zero, the ray is concidered to be infinite.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qraycaster.xml#length-prop">length</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qraycaster.xml#length-prop">length</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="trigger">
<db:title>void QRayCaster::trigger()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>trigger</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void trigger()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience method to enable the component and trigger tests using the current ray.</db:para>
</db:section>
<db:section xml:id="trigger-1">
<db:title>void QRayCaster::trigger(const QVector3D &amp;<db:emphasis>origin</db:emphasis>, const QVector3D &amp;<db:emphasis>direction</db:emphasis>, float <db:emphasis>length</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>trigger</db:methodname>
<db:methodparam>
<db:type>const QVector3D &amp;</db:type>
<db:parameter>origin</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QVector3D &amp;</db:type>
<db:parameter>direction</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">void trigger(const QVector3D &amp;origin, const QVector3D &amp;direction, float length)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience method to set the ray details <db:code role="parameter">origin</db:code>, <db:code role="parameter">direction</db:code>, and <db:code role="parameter">length</db:code>, and enable the component to trigger tests.</db:para>
</db:section>
</db:section>
</db:article>
