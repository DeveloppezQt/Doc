<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Quick Secure CoAP Client</db:title>
<db:productname>QtCoap</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt CoAP Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Securing the CoAP client and using it with a Qt Quick user interface.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">// Copyright (C) 2019 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR BSD-3-Clause

#ifndef QMLCOAPSECURECLIENT_H
#define QMLCOAPSECURECLIENT_H

#include &lt;QtCoap/qcoapnamespace.h&gt;
#include &lt;QCoapSecurityConfiguration&gt;

#include &lt;QtQml/qqmlregistration.h&gt;

class QCoapClient;

class QmlCoapSecureClient : public QObject
{
    Q_OBJECT
    QML_NAMED_ELEMENT(CoapSecureClient)

public:
    QmlCoapSecureClient(QObject *parent = nullptr);
    ~QmlCoapSecureClient() override;

    Q_INVOKABLE void setSecurityMode(QtCoap::SecurityMode mode);
    Q_INVOKABLE void sendGetRequest(const QString &amp;host, const QString &amp;path, int port);
    Q_INVOKABLE void setSecurityConfiguration(const QString &amp;preSharedKey, const QString &amp;identity);
    Q_INVOKABLE void setSecurityConfiguration(const QString &amp;localCertificatePath,
                                              const QString &amp;caCertificatePath,
                                              const QString &amp;privateKeyPath);
    Q_INVOKABLE void disconnect();

Q_SIGNALS:
    void finished(const QString &amp;result);

private:
    QCoapClient *m_coapClient;
    QCoapSecurityConfiguration m_configuration;
    QtCoap::SecurityMode m_securityMode;
};

namespace QCoapForeignNamespace
{
    Q_NAMESPACE
    QML_FOREIGN_NAMESPACE(QtCoap)
    QML_NAMED_ELEMENT(QtCoap)
}

#endif // QMLCOAPSECURECLIENT_H

</db:programlisting>
</db:article>
