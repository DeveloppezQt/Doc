<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGraphicsApiFilter Class</db:title>
<db:subtitle>Qt3DRender::QGraphicsApiFilter</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qt3drender-qgraphicsapifilter.xml">QGraphicsApiFilter</db:link> class identifies the API required for the attached <db:link xlink:href="qt3drender-qtechnique.xml">QTechnique</db:link>.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGraphicsApiFilter</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-graphicsapifilter.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Api-enum">
<db:title>enum QGraphicsApiFilter::Api</db:title>
<db:enumsynopsis>
<db:enumname>Api</db:enumname>
<db:enumitem>
<db:enumidentifier>OpenGLES</db:enumidentifier>
<db:enumvalue>QSurfaceFormat::OpenGLES</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>OpenGL</db:enumidentifier>
<db:enumvalue>QSurfaceFormat::OpenGL</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Vulkan</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DirectX</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>RHI</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgraphicsapifilter.xml">QGraphicsApiFilter</db:link></db:emphasis>::OpenGLES</db:code></db:para>
</db:td>
<db:td><db:code>QSurfaceFormat::OpenGLES</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qsurfaceformat.xml#RenderableType-enum">QSurfaceFormat::OpenGLES</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgraphicsapifilter.xml">QGraphicsApiFilter</db:link></db:emphasis>::OpenGL</db:code></db:para>
</db:td>
<db:td><db:code>QSurfaceFormat::OpenGL</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qsurfaceformat.xml#RenderableType-enum">QSurfaceFormat::OpenGL</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgraphicsapifilter.xml">QGraphicsApiFilter</db:link></db:emphasis>::Vulkan</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Vulkan</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgraphicsapifilter.xml">QGraphicsApiFilter</db:link></db:emphasis>::DirectX</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>DirectX</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgraphicsapifilter.xml">QGraphicsApiFilter</db:link></db:emphasis>::RHI</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>RHI</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="OpenGLProfile-enum">
<db:title>enum QGraphicsApiFilter::OpenGLProfile</db:title>
<db:enumsynopsis>
<db:enumname>OpenGLProfile</db:enumname>
<db:enumitem>
<db:enumidentifier>NoProfile</db:enumidentifier>
<db:enumvalue>QSurfaceFormat::NoProfile</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CoreProfile</db:enumidentifier>
<db:enumvalue>QSurfaceFormat::CoreProfile</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CompatibilityProfile</db:enumidentifier>
<db:enumvalue>QSurfaceFormat::CompatibilityProfile</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum identifies the type of profile required.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgraphicsapifilter.xml">QGraphicsApiFilter</db:link></db:emphasis>::NoProfile</db:code></db:para>
</db:td>
<db:td><db:code>QSurfaceFormat::NoProfile</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qsurfaceformat.xml#OpenGLContextProfile-enum">QSurfaceFormat::NoProfile</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgraphicsapifilter.xml">QGraphicsApiFilter</db:link></db:emphasis>::CoreProfile</db:code></db:para>
</db:td>
<db:td><db:code>QSurfaceFormat::CoreProfile</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qsurfaceformat.xml#OpenGLContextProfile-enum">QSurfaceFormat::CoreProfile</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qgraphicsapifilter.xml">QGraphicsApiFilter</db:link></db:emphasis>::CompatibilityProfile</db:code></db:para>
</db:td>
<db:td><db:code>QSurfaceFormat::CompatibilityProfile</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qsurfaceformat.xml#OpenGLContextProfile-enum">QSurfaceFormat::CompatibilityProfile</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="api-prop">
<db:title>api : Qt3DRender::QGraphicsApiFilter::Api</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DRender::QGraphicsApiFilter::Api</db:type>
<db:varname>api</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">api</db:synopsisinfo>
<db:synopsisinfo role="setter">setApi</db:synopsisinfo>
<db:synopsisinfo role="notifier">apiChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qgraphicsapifilter.xml#Api-enum">Qt3DRender::QGraphicsApiFilter::Api</db:link></db:type> <db:emphasis role="bold">api</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setApi</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qgraphicsapifilter.xml#Api-enum">Qt3DRender::QGraphicsApiFilter::Api</db:link></db:type> <db:emphasis>api</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">apiChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qgraphicsapifilter.xml#Api-enum">Qt3DRender::QGraphicsApiFilter::Api</db:link></db:type> <db:emphasis>api</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="extensions-prop">
<db:title>extensions : QStringList</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QStringList</db:type>
<db:varname>extensions</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">extensions</db:synopsisinfo>
<db:synopsisinfo role="setter">setExtensions</db:synopsisinfo>
<db:synopsisinfo role="notifier">extensionsChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstringlist.xml">QStringList</db:link></db:type> <db:emphasis role="bold">extensions</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setExtensions</db:emphasis>(const <db:type><db:link xlink:href="qstringlist.xml">QStringList</db:link></db:type> &amp;<db:emphasis>extensions</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">extensionsChanged</db:emphasis>(const <db:type><db:link xlink:href="qstringlist.xml">QStringList</db:link></db:type> &amp;<db:emphasis>extensions</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="majorVersion-prop">
<db:title>majorVersion : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>majorVersion</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">majorVersion</db:synopsisinfo>
<db:synopsisinfo role="setter">setMajorVersion</db:synopsisinfo>
<db:synopsisinfo role="notifier">majorVersionChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">majorVersion</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMajorVersion</db:emphasis>(<db:type>int</db:type> <db:emphasis>majorVersion</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">majorVersionChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>majorVersion</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="minorVersion-prop">
<db:title>minorVersion : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>minorVersion</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">minorVersion</db:synopsisinfo>
<db:synopsisinfo role="setter">setMinorVersion</db:synopsisinfo>
<db:synopsisinfo role="notifier">minorVersionChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">minorVersion</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinorVersion</db:emphasis>(<db:type>int</db:type> <db:emphasis>minorVersion</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">minorVersionChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>minorVersion</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="profile-prop">
<db:title>profile : Qt3DRender::QGraphicsApiFilter::OpenGLProfile</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DRender::QGraphicsApiFilter::OpenGLProfile</db:type>
<db:varname>profile</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">profile</db:synopsisinfo>
<db:synopsisinfo role="setter">setProfile</db:synopsisinfo>
<db:synopsisinfo role="notifier">profileChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qgraphicsapifilter.xml#OpenGLProfile-enum">Qt3DRender::QGraphicsApiFilter::OpenGLProfile</db:link></db:type> <db:emphasis role="bold">profile</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setProfile</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qgraphicsapifilter.xml#OpenGLProfile-enum">Qt3DRender::QGraphicsApiFilter::OpenGLProfile</db:link></db:type> <db:emphasis>profile</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">profileChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qgraphicsapifilter.xml#OpenGLProfile-enum">Qt3DRender::QGraphicsApiFilter::OpenGLProfile</db:link></db:type> <db:emphasis>profile</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="vendor-prop">
<db:title>vendor : QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>vendor</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">vendor</db:synopsisinfo>
<db:synopsisinfo role="setter">setVendor</db:synopsisinfo>
<db:synopsisinfo role="notifier">vendorChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">vendor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setVendor</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>vendor</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">vendorChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>vendor</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGraphicsApiFilter">
<db:title>[explicit] QGraphicsApiFilter::QGraphicsApiFilter(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QGraphicsApiFilter</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QGraphicsApiFilter(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qt3drender-qgraphicsapifilter.xml">QGraphicsApiFilter</db:link> with the specified <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="graphicsApiFilterChanged">
<db:title>void QGraphicsApiFilter::graphicsApiFilterChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>graphicsApiFilterChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void graphicsApiFilterChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the value of any property is changed.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-not-eq">
<db:title>bool operator!=(const Qt3DRender::QGraphicsApiFilter &amp;<db:emphasis>reference</db:emphasis>, const Qt3DRender::QGraphicsApiFilter &amp;<db:emphasis>sample</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>operator!=</db:methodname>
<db:methodparam>
<db:type>const Qt3DRender::QGraphicsApiFilter &amp;</db:type>
<db:parameter>reference</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const Qt3DRender::QGraphicsApiFilter &amp;</db:type>
<db:parameter>sample</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator!=(const Qt3DRender::QGraphicsApiFilter &amp;reference, const Qt3DRender::QGraphicsApiFilter &amp;sample)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if <db:code role="parameter">reference</db:code> and <db:code role="parameter">sample</db:code> are different.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool operator==(const Qt3DRender::QGraphicsApiFilter &amp;<db:emphasis>reference</db:emphasis>, const Qt3DRender::QGraphicsApiFilter &amp;<db:emphasis>sample</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>const Qt3DRender::QGraphicsApiFilter &amp;</db:type>
<db:parameter>reference</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const Qt3DRender::QGraphicsApiFilter &amp;</db:type>
<db:parameter>sample</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(const Qt3DRender::QGraphicsApiFilter &amp;reference, const Qt3DRender::QGraphicsApiFilter &amp;sample)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if <db:code role="parameter">reference</db:code> and <db:code role="parameter">sample</db:code> are equivalent.</db:para>
</db:section>
</db:section>
</db:article>
