<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QMqttLastWillProperties Class</db:title>
<db:productname>QtMqtt</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt MQTT Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qmqttlastwillproperties.xml">QMqttLastWillProperties</db:link> class represents configuration options a <db:link xlink:href="qmqttclient.xml">QMqttClient</db:link> can pass to the server when specifying the last will during connecting to a server.</db:para>
<db:para>This class was introduced in Qt 5.12.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QMqttLastWillProperties</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.12</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += mqtt</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:note>
<db:para>Last Will properties are part of the MQTT 5.0 specification and cannot be used when connecting with a lower protocol level. See <db:link xlink:href="qmqttclient.xml#ProtocolVersion-enum">QMqttClient::ProtocolVersion</db:link> for more information.</db:para>
</db:note>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="contentType">
<db:title>QString QMqttLastWillProperties::contentType() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>contentType</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString contentType() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the content type of the last will message.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#setContentType">setContentType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="correlationData">
<db:title>QByteArray QMqttLastWillProperties::correlationData() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QByteArray</db:type>
<db:methodname>correlationData</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QByteArray correlationData() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the correlation data to identify the request.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#setCorrelationData">setCorrelationData</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="messageExpiryInterval">
<db:title>quint32 QMqttLastWillProperties::messageExpiryInterval() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint32</db:type>
<db:methodname>messageExpiryInterval</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint32 messageExpiryInterval() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the lifetime of the last will message in seconds, starting from the will delay interval.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#setMessageExpiryInterval">setMessageExpiryInterval</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="payloadFormatIndicator">
<db:title>QMqtt::PayloadFormatIndicator QMqttLastWillProperties::payloadFormatIndicator() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QMqtt::PayloadFormatIndicator</db:type>
<db:methodname>payloadFormatIndicator</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QMqtt::PayloadFormatIndicator payloadFormatIndicator() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the payload format indicator.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#setPayloadFormatIndicator">setPayloadFormatIndicator</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="responseTopic">
<db:title>QString QMqttLastWillProperties::responseTopic() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>responseTopic</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString responseTopic() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the topic that subscribers to the last will message should respond to.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#setResponseTopic">setResponseTopic</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setContentType">
<db:title>void QMqttLastWillProperties::setContentType(const QString &amp;<db:emphasis>content</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setContentType</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>content</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setContentType(const QString &amp;content)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the content type to <db:code role="parameter">content</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#contentType">contentType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCorrelationData">
<db:title>void QMqttLastWillProperties::setCorrelationData(const QByteArray &amp;<db:emphasis>correlation</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setCorrelationData</db:methodname>
<db:methodparam>
<db:type>const QByteArray &amp;</db:type>
<db:parameter>correlation</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setCorrelationData(const QByteArray &amp;correlation)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the correlation data to <db:code role="parameter">correlation</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#correlationData">correlationData</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setMessageExpiryInterval">
<db:title>void QMqttLastWillProperties::setMessageExpiryInterval(quint32 <db:emphasis>expiry</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setMessageExpiryInterval</db:methodname>
<db:methodparam>
<db:type>quint32</db:type>
<db:parameter>expiry</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setMessageExpiryInterval(quint32 expiry)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the message expiry interval to <db:code role="parameter">expiry</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#messageExpiryInterval">messageExpiryInterval</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPayloadFormatIndicator">
<db:title>void QMqttLastWillProperties::setPayloadFormatIndicator(QMqtt::PayloadFormatIndicator <db:emphasis>p</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setPayloadFormatIndicator</db:methodname>
<db:methodparam>
<db:type>QMqtt::PayloadFormatIndicator</db:type>
<db:parameter>p</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setPayloadFormatIndicator(QMqtt::PayloadFormatIndicator p)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the payload format indicator to <db:code role="parameter">p</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#payloadFormatIndicator">payloadFormatIndicator</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setResponseTopic">
<db:title>void QMqttLastWillProperties::setResponseTopic(const QString &amp;<db:emphasis>response</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setResponseTopic</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>response</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setResponseTopic(const QString &amp;response)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the response topic to <db:code role="parameter">response</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#responseTopic">responseTopic</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setUserProperties">
<db:title>void QMqttLastWillProperties::setUserProperties(const QMqttUserProperties &amp;<db:emphasis>properties</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setUserProperties</db:methodname>
<db:methodparam>
<db:type>const QMqttUserProperties &amp;</db:type>
<db:parameter>properties</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setUserProperties(const QMqttUserProperties &amp;properties)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the user properties to <db:code role="parameter">properties</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#userProperties">userProperties</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setWillDelayInterval">
<db:title>void QMqttLastWillProperties::setWillDelayInterval(quint32 <db:emphasis>delay</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setWillDelayInterval</db:methodname>
<db:methodparam>
<db:type>quint32</db:type>
<db:parameter>delay</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setWillDelayInterval(quint32 delay)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the will delay interval to <db:code role="parameter">delay</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#willDelayInterval">willDelayInterval</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="userProperties">
<db:title>QMqttUserProperties QMqttLastWillProperties::userProperties() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QMqttUserProperties</db:type>
<db:methodname>userProperties</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QMqttUserProperties userProperties() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the user properties.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#setUserProperties">setUserProperties</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="willDelayInterval">
<db:title>quint32 QMqttLastWillProperties::willDelayInterval() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint32</db:type>
<db:methodname>willDelayInterval</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint32 willDelayInterval() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the delay in seconds a last will message will be sent after disconnecting from the server.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmqttlastwillproperties.xml#setWillDelayInterval">setWillDelayInterval</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
