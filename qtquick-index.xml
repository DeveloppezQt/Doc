<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.11.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Qt Quick module implements the &quot;standard library&quot; for QML.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt Quick module is the standard library for writing QML applications. While the <db:link xlink:href="qtqml-index.xml">Qt QML</db:link> module provides the QML engine and language infrastructure, the Qt Quick module provides all the basic types necessary for creating user interfaces with QML. It provides a visual canvas and includes types for creating and animating visual components, receiving user input, creating data models and views and delayed object instantiation.</db:para>
<db:para>The Qt Quick module provides both a <db:link xlink:href="qtquick-qmlmodule.xml">QML API</db:link> which supplies QML types for creating user interfaces with the QML language, and a <db:link xlink:href="qtquick-module.xml">C++ API</db:link> for extending QML applications with C++ code.</db:para>
<db:note>
<db:para>A set of Qt Quick-based UI controls is also available to create user interfaces. See <db:link xlink:href="qtquickcontrols2-index.xml">Qt Quick Controls 2</db:link> for more information.</db:para>
</db:note>
<db:para>For those new to QML and Qt Quick, please see <db:link xlink:href="qmlapplications.xml">QML Applications</db:link> for an introduction to writing QML applications.</db:para>
<db:section xml:id="important-concepts-in-qt-quick">
<db:title>Important Concepts in Qt Quick</db:title>
<db:para>Qt Quick provides everything needed to create a rich application with a fluid and dynamic user interface. It enables user interfaces to be built around the behavior of user interface components and how they connect with one another, and it provides a visual canvas with its own coordinate system and rendering engine. Animation and transition effects are a first class concept in Qt Quick, and visual effects can be supplemented through specialized components for particle and shader effects.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquick-visualcanvas-topic.xml">The Visual Canvas</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-input-topic.xml">User Input</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-positioning-topic.xml">Positioning</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-statesanimations-topic.xml">States, Transitions And Animations</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-modelviewsdata-topic.xml">Data - Models, Views and Data Storage</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-effects-topic.xml">Particles And Graphical Effects</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-convenience-topic.xml">Convenience Types</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>When using the <db:code>QtQuick</db:code> module, you will need to know how to write QML applications using the QML language. In particular, QML Basics and QML Essentials from the <db:link xlink:href="qmlapplications.xml">QML Applications</db:link> page.</db:para>
<db:para>To find out more about using the QML language, see the <db:link xlink:href="qtqml-index.xml">Qt QML</db:link> module documentation.</db:para>
</db:section>
<db:section xml:id="c-extension-points">
<db:title>C++ Extension Points</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquick-cppextensionpoints.xml">C++ Extension Points</db:link></db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquick-cppextensionpoints.xml#user-defined-qquickitem-derived-types">Creating User-Defined QQuickItem-Derived Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-cppextensionpoints.xml#scene-graph-related-classes">Scene Graph-Related Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-cppextensionpoints.xml#pixmap-and-threaded-image-support">Pixmap and Threaded Image Support</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="licenses-and-attributions">
<db:title>Licenses and Attributions</db:title>
<db:para>Qt Quick is available under commercial licenses from <db:link xlink:href="http://www.qt.io/about-us/">The Qt Company</db:link>. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are <db:link xlink:href="http://www.gnu.org/licenses/lgpl-3.0.html">GNU Lesser General Public License, version 3</db:link>, or the <db:link xlink:href="http://www.gnu.org/licenses/gpl-2.0.html">GNU General Public License, version 2</db:link>. See <db:link xlink:href="licensing.xml">Qt Licensing</db:link> for further details.</db:para>
</db:section>
<db:section xml:id="reference-documentation">
<db:title>Reference Documentation</db:title>
<db:para>Additional Qt Quick information:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquick-module.xml">Qt Quick C++ Classes</db:link> - the C++ API provided by the Qt Quick module</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-qmlmodule.xml">Qt Quick QML Types</db:link> - a list of QML types provided by the <db:code>QtQuick</db:code> import</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquick-xmllistmodel-qmlmodule.xml">XML List Model</db:link> - contains types for creating models from XML data</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-localstorage-qmlmodule.xml">Local Storage</db:link> - a submodule containing a JavaScript interface for an SQLite database</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-particles-qmlmodule.xml">Particles</db:link> - provides a particle system for Qt Quick</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquicklayouts-index.xml">Layouts</db:link> - provides layouts for arranging Qt Quick items</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-window-qmlmodule.xml">Window</db:link> - contains types for creating top-level windows and accessing screen information</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickdialogs-index.xml">Dialogs</db:link> - contains types for creating and interacting with system dialogs</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qttest-qmlmodule.xml">Tests</db:link> - contains types for writing unit test for a QML application</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-codesamples.xml">Qt Quick Examples and Tutorials</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-bestpractices.xml">Qt Quick Guidelines</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Further information for writing QML applications:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qmlapplications.xml">QML Applications</db:link> - essential information for application development with QML and Qt Quick</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-index.xml">Qt QML</db:link> - documentation for the Qt QML module, which provides the QML engine and language infrastructure</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
