<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QDesignerObjectInspectorInterface Class</db:title>
<db:productname>QtDesigner</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Designer Manual</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdesignerobjectinspectorinterface.xml">QDesignerObjectInspectorInterface</db:link> class allows you to change the focus of Qt Designer's object inspector.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDesignerObjectInspectorInterface</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += designer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qwidget.xml" xlink:role="class">QWidget</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>You can use the <db:link xlink:href="qdesignerobjectinspectorinterface.xml">QDesignerObjectInspectorInterface</db:link> to change the current form window selection. For example, when implementing a custom widget plugin:</db:para>
<db:programlisting language="cpp">        QDesignerObjectInspectorInterface *objectInspector = 0;
        objectInspector = formEditor-&gt;objectInspector();

        QDesignerFormWindowManagerInterface *manager = 0;
        manager = formEditor-&gt;formWindowManager();

        objectInspector-&gt;setFormWindow(manager-&gt;formWindow(0));
</db:programlisting>
<db:para>The <db:link xlink:href="qdesignerobjectinspectorinterface.xml">QDesignerObjectInspectorInterface</db:link> class is not intended to be instantiated directly. You can retrieve an interface to <db:emphasis>Qt Designer</db:emphasis>'s object inspector using the <db:link xlink:href="qdesignerformeditorinterface.xml#objectInspector">QDesignerFormEditorInterface::objectInspector</db:link>() function. A pointer to <db:emphasis>Qt Designer</db:emphasis>'s current <db:link xlink:href="qdesignerformeditorinterface.xml">QDesignerFormEditorInterface</db:link> object (<db:code>formEditor</db:code> in the example above) is provided by the <db:link xlink:href="qdesignercustomwidgetinterface.xml#initialize">QDesignerCustomWidgetInterface::initialize</db:link>() function's parameter. When implementing a custom widget plugin, you must subclass the <db:link xlink:href="qdesignercustomwidgetinterface.xml">QDesignerCustomWidgetInterface</db:link> to expose your plugin to <db:emphasis>Qt Designer</db:emphasis>.</db:para>
<db:para>The interface provides the <db:link xlink:href="qdesignerobjectinspectorinterface.xml#core">core</db:link>() function that you can use to retrieve a pointer to <db:emphasis>Qt Designer</db:emphasis>'s current <db:link xlink:href="qdesignerformeditorinterface.xml">QDesignerFormEditorInterface</db:link> object, and the <db:link xlink:href="qdesignerobjectinspectorinterface.xml#setFormWindow">setFormWindow</db:link>() function that enables you to change the current form window selection.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformeditorinterface.xml">QDesignerFormEditorInterface</db:link></db:member>
<db:member><db:link xlink:href="qdesignerformwindowinterface.xml">QDesignerFormWindowInterface</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QDesignerObjectInspectorInterface">
<db:title>[explicit] QDesignerObjectInspectorInterface::QDesignerObjectInspectorInterface(QWidget *<db:emphasis>parent</db:emphasis>, Qt::WindowFlags <db:emphasis>flags</db:emphasis> = Qt::WindowFlags())</db:title>
<db:para>Constructs an object inspector interface with the given <db:code role="parameter">parent</db:code> and the specified window <db:code role="parameter">flags</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QDesignerObjectInspectorInterface">
<db:title>[virtual noexcept] QDesignerObjectInspectorInterface::~QDesignerObjectInspectorInterface()</db:title>
<db:para>Destroys the object inspector interface.</db:para>
</db:section>
<db:section xml:id="core">
<db:title>[virtual] QDesignerFormEditorInterface *QDesignerObjectInspectorInterface::core() const</db:title>
<db:para>Returns a pointer to <db:emphasis>Qt Designer</db:emphasis>'s current <db:link xlink:href="qdesignerformeditorinterface.xml">QDesignerFormEditorInterface</db:link> object.</db:para>
</db:section>
<db:section xml:id="setFormWindow">
<db:title>[pure virtual] void QDesignerObjectInspectorInterface::setFormWindow(QDesignerFormWindowInterface *<db:emphasis>formWindow</db:emphasis>)</db:title>
<db:para>Sets the currently selected form window to <db:code role="parameter">formWindow</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
