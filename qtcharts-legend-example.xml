<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Legend Example</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This example shows how to detach the legend from the chart and how to attach it back.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>By default the chart draws the legend inside the same view with the chart. In some cases the user may want to draw the legend to somewhere else. To make this possible the legend can be detached from the chart. Detaching means that the chart doesn't draw the legend or try to change its layout. Detached legend can then be drawn wherever the user wishes, for example, in a different graphics scene. The behavior of the legend can be inspected by running the legend example. In the example we use the bar series where we add or remove the bar sets. The legend reflects the changes in series. The legend can be detached or attached back to the chart and its alignment can be modified. When the legend is detached, it can be resized and positioned freely.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_legend_detach.png"/>
</db:imageobject>
</db:mediaobject>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_legend_detach2.png"/>
</db:imageobject>
</db:mediaobject>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="http://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section xml:id="detaching-and-attaching-legends">
<db:title>Detaching and Attaching Legends</db:title>
<db:para>Here we turn the legend visible and set its alignment to the bottom of the chart.</db:para>
<db:programlisting language="cpp">    m_chart-&gt;legend()-&gt;setVisible(true);
    m_chart-&gt;legend()-&gt;setAlignment(Qt::AlignBottom);
</db:programlisting>
<db:para>This snippet shows how to detach the legend from the chart. After detaching, we turn its background to visible and set a different color to it. This makes it easier to see how the items inside the legend are arranged in detached mode.</db:para>
<db:programlisting language="cpp">legend-&gt;detachFromChart();
m_chart-&gt;legend()-&gt;setBackgroundVisible(true);
m_chart-&gt;legend()-&gt;setBrush(QBrush(QColor(128, 128, 128, 128)));
m_chart-&gt;legend()-&gt;setPen(QPen(QColor(192, 192, 192, 192)));
</db:programlisting>
<db:para>Here we attach the legend back to the chart. The background is turned invisible.</db:para>
<db:programlisting language="cpp">legend-&gt;attachToChart();
legend-&gt;setBackgroundVisible(false);
</db:programlisting>
<db:para>This shows how we set the detached legend dimensions. After setting the new values, we call update to show changes on screen.</db:para>
<db:programlisting language="cpp">    m_chart-&gt;legend()-&gt;setGeometry(QRectF(m_legendPosX-&gt;value(),
                                          m_legendPosY-&gt;value(),
                                          m_legendWidth-&gt;value(),
                                          m_legendHeight-&gt;value()));
    m_chart-&gt;legend()-&gt;update();
</db:programlisting>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="legend/legend.pro">legend/legend.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="legend/main.cpp">legend/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="legend/mainwidget.cpp">legend/mainwidget.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="legend/mainwidget.h">legend/mainwidget.h</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
