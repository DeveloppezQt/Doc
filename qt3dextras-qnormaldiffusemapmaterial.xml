<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QNormalDiffuseMapMaterial Class</db:title>
<db:subtitle>Qt3DExtras::QNormalDiffuseMapMaterial</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qt3dextras-qnormaldiffusemapmaterial.xml">QNormalDiffuseMapMaterial</db:link> provides a default implementation of the phong lighting and bump effect where the diffuse light component is read from a texture map and the normals of the mesh being rendered from a normal texture map.</db:para>
<db:para><db:emphasis role="bold">This class is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QNormalDiffuseMapMaterial</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3dextras)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3dextras)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dextras</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qmaterial.xml" xlink:role="class">Qt3DRender::QMaterial</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dextras-qnormaldiffusemapalphamaterial.xml" xlink:role="class">Qt3DExtras::QNormalDiffuseMapAlphaMaterial</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para><db:emphasis role="bold">This class is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This class is deprecated; use <db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml">QDiffuseSpecularMaterial</db:link> instead.</db:para>
<db:para>The specular lighting effect is based on the combination of 3 lighting components ambient, diffuse and specular. The relative strengths of these components are controlled by means of their reflectivity coefficients which are modelled as RGB triplets:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Ambient is the color that is emitted by an object without any other light source.</db:para>
</db:listitem>
<db:listitem>
<db:para>Diffuse is the color that is emitted for rought surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>Specular is the color emitted for shiny surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>The shininess of a surface is controlled by a float property.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>This material uses an effect with a single render pass approach and performs per fragment lighting. Techniques are provided for OpenGL 2, OpenGL 3 or above as well as OpenGL ES 2.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="ambient-prop">
<db:title>ambient : QColor</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QColor</db:type>
<db:varname>ambient</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">ambient</db:synopsisinfo>
<db:synopsisinfo role="setter">setAmbient</db:synopsisinfo>
<db:synopsisinfo role="notifier">ambientChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current ambient color.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">ambient</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setAmbient</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>ambient</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">ambientChanged</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>ambient</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="diffuse-prop">
<db:title>diffuse : Qt3DRender::QAbstractTexture*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DRender::QAbstractTexture*</db:type>
<db:varname>diffuse</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">diffuse</db:synopsisinfo>
<db:synopsisinfo role="setter">setDiffuse</db:synopsisinfo>
<db:synopsisinfo role="notifier">diffuseChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current diffuse map texture.</db:para>
<db:para>By default, the diffuse texture has these properties:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Linear minification and magnification filters</db:para>
</db:listitem>
<db:listitem>
<db:para>Linear mipmap with mipmapping enabled</db:para>
</db:listitem>
<db:listitem>
<db:para>Repeat wrap modeM</db:para>
</db:listitem>
<db:listitem>
<db:para>Maximum anisotropy of 16.0</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis role="bold">diffuse</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setDiffuse</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis>diffuse</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">diffuseChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis>diffuse</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="normal-prop">
<db:title>normal : Qt3DRender::QAbstractTexture*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DRender::QAbstractTexture*</db:type>
<db:varname>normal</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">normal</db:synopsisinfo>
<db:synopsisinfo role="setter">setNormal</db:synopsisinfo>
<db:synopsisinfo role="notifier">normalChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current normal map texture.</db:para>
<db:para>By default, the normal texture has the following properties:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Linear minification and magnification filters</db:para>
</db:listitem>
<db:listitem>
<db:para>Repeat wrap mode</db:para>
</db:listitem>
<db:listitem>
<db:para>Maximum anisotropy of 16.0</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis role="bold">normal</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setNormal</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis>normal</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">normalChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis>normal</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="shininess-prop">
<db:title>shininess : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>shininess</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">shininess</db:synopsisinfo>
<db:synopsisinfo role="setter">setShininess</db:synopsisinfo>
<db:synopsisinfo role="notifier">shininessChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current shininess as a float value.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">shininess</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setShininess</db:emphasis>(<db:type>float</db:type> <db:emphasis>shininess</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">shininessChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>shininess</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="specular-prop">
<db:title>specular : QColor</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QColor</db:type>
<db:varname>specular</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">specular</db:synopsisinfo>
<db:synopsisinfo role="setter">setSpecular</db:synopsisinfo>
<db:synopsisinfo role="notifier">specularChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current specular color.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">specular</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSpecular</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>specular</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">specularChanged</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>specular</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="textureScale-prop">
<db:title>textureScale : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>textureScale</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">textureScale</db:synopsisinfo>
<db:synopsisinfo role="setter">setTextureScale</db:synopsisinfo>
<db:synopsisinfo role="notifier">textureScaleChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current texture scale. It is applied as a multiplier to texture coordinates at render time. Defaults to 1.0.</db:para>
<db:para>When used in conjunction with QTextureWrapMode::Repeat, textureScale provides a simple way to tile a texture across a surface. For example, a texture scale of <db:code>4.0</db:code> would result in 16 (4x4) tiles.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">textureScale</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTextureScale</db:emphasis>(<db:type>float</db:type> <db:emphasis>textureScale</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">textureScaleChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>textureScale</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QNormalDiffuseMapMaterial">
<db:title>[explicit] QNormalDiffuseMapMaterial::QNormalDiffuseMapMaterial(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QNormalDiffuseMapMaterial</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QNode *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QNormalDiffuseMapMaterial(Qt3DCore::QNode *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qt3dextras-qnormaldiffusemapmaterial.xml" role="deprecated">QNormalDiffuseMapMaterial</db:link> instance with parent object <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QNormalDiffuseMapMaterial">
<db:title>[virtual] QNormalDiffuseMapMaterial::~QNormalDiffuseMapMaterial()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QNormalDiffuseMapMaterial</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QNormalDiffuseMapMaterial()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the <db:link xlink:href="qt3dextras-qnormaldiffusemapmaterial.xml" role="deprecated">QNormalDiffuseMapMaterial</db:link> instance.</db:para>
</db:section>
</db:section>
</db:article>
