<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QStyleOptionMenuItem Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link> class is used to describe the parameter necessary for drawing a menu item.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QStyleOptionMenuItem</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qstyleoption.xml" xlink:role="class">QStyleOption</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link> contains all the information that <db:link xlink:href="qstyle.xml">QStyle</db:link> functions need to draw the menu items from <db:link xlink:href="qmenu.xml">QMenu</db:link>. It is also used for drawing other menu-related widgets.</db:para>
<db:para>For performance reasons, there are few member functions and the access to the member variables is direct (i.e., using the <db:code>.</db:code> or <db:code>-&gt;</db:code> operator). This makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="CheckType-enum">
<db:title>enum QStyleOptionMenuItem::CheckType</db:title>
<db:para>This enum is used to indicate whether or not a check mark should be drawn for the item, or even if it should be drawn at all.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:emphasis>::NotCheckable</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The item is not checkable.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:emphasis>::Exclusive</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The item is an exclusive check item (like a radio button).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:emphasis>::NonExclusive</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The item is a non-exclusive check item (like a check box).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionmenuitem.xml#checkType-var">checkType</db:link></db:member>
<db:member><db:link xlink:href="qaction.xml#checkable-prop">QAction::checkable</db:link></db:member>
<db:member><db:link xlink:href="qaction.xml#checked-prop">QAction::checked</db:link></db:member>
<db:member><db:link xlink:href="qactiongroup.xml#exclusionPolicy-prop">QActionGroup::exclusionPolicy</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="MenuItemType-enum">
<db:title>enum QStyleOptionMenuItem::MenuItemType</db:title>
<db:para>This enum indicates the type of menu item that the structure describes.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:emphasis>::Normal</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>A normal menu item.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:emphasis>::DefaultItem</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>A menu item that is the default action as specified with <db:link xlink:href="qmenu.xml#defaultAction">QMenu::defaultAction</db:link>().</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:emphasis>::Separator</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>A menu separator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:emphasis>::SubMenu</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Indicates the menu item points to a sub-menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:emphasis>::Scroller</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>A popup menu scroller (currently only used on macOS).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:emphasis>::TearOff</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>A tear-off handle for the menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:emphasis>::Margin</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>The margin of the menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:emphasis>::EmptyArea</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>The empty area of the menu.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionmenuitem.xml#menuItemType-var">menuItemType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="StyleOptionType-enum">
<db:title>enum QStyleOptionMenuItem::StyleOptionType</db:title>
<db:para>This enum is used to hold information about the type of the style option, and is defined for each <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:emphasis>::Type</db:code></db:para>
</db:td>
<db:td><db:code>SO_MenuItem</db:code></db:td>
<db:td>
<db:para>The type of style option provided (<db:link xlink:href="qstyleoption.xml#OptionType-enum">SO_MenuItem</db:link> for this class).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The type is used internally by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link>, its subclasses, and <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>() to determine the type of style option. In general you do not need to worry about this unless you want to create your own <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass and your own styles.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionmenuitem.xml#StyleOptionVersion-enum">StyleOptionVersion</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="StyleOptionVersion-enum">
<db:title>enum QStyleOptionMenuItem::StyleOptionVersion</db:title>
<db:para>This enum is used to hold information about the version of the style option, and is defined for each <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:emphasis>::Version</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>1</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The version is used by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclasses to implement extensions without breaking compatibility. If you use <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>(), you normally do not need to check it.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionmenuitem.xml#StyleOptionType-enum">StyleOptionType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QStyleOptionMenuItem">
<db:title>QStyleOptionMenuItem::QStyleOptionMenuItem()</db:title>
<db:para>Constructs a <db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link>, initializing the members variables to their default values.</db:para>
</db:section>
<db:section xml:id="QStyleOptionMenuItem-1">
<db:title>QStyleOptionMenuItem::QStyleOptionMenuItem(const QStyleOptionMenuItem &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a copy of the <db:code role="parameter">other</db:code> style option.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-variable-documentation">
<db:title>Member Variable Documentation</db:title>
<db:section xml:id="checkType-var">
<db:title>QStyleOptionMenuItem::CheckType QStyleOptionMenuItem::checkType</db:title>
<db:para>This variable holds the type of checkmark of the menu item</db:para>
<db:para>The default value is <db:link xlink:href="qstyleoptionmenuitem.xml#CheckType-enum">NotCheckable</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionmenuitem.xml#CheckType-enum">CheckType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="checked-var">
<db:title>bool QStyleOptionMenuItem::checked</db:title>
<db:para>This variable holds whether the menu item is checked or not</db:para>
<db:para>The default value is false.</db:para>
</db:section>
<db:section xml:id="font-var">
<db:title>QFont QStyleOptionMenuItem::font</db:title>
<db:para>This variable holds the font used for the menu item text</db:para>
<db:para>This is the font that should be used for drawing the menu text minus the shortcut. The shortcut is usually drawn using the painter's font. By default, the application's default font is used.</db:para>
</db:section>
<db:section xml:id="icon-var">
<db:title>QIcon QStyleOptionMenuItem::icon</db:title>
<db:para>This variable holds the icon for the menu item</db:para>
<db:para>The default value is an empty icon, i.e. an icon with neither a pixmap nor a filename.</db:para>
</db:section>
<db:section xml:id="maxIconWidth-var">
<db:title>int QStyleOptionMenuItem::maxIconWidth</db:title>
<db:para>This variable holds the maximum icon width for the icon in the menu item</db:para>
<db:para>This can be used for drawing the icon into the correct place or properly aligning items. The variable must be set regardless of whether or not the menu item has an icon. The default value is 0.</db:para>
</db:section>
<db:section xml:id="menuHasCheckableItems-var">
<db:title>bool QStyleOptionMenuItem::menuHasCheckableItems</db:title>
<db:para>This variable holds whether the menu as a whole has checkable items or not</db:para>
<db:para>The default value is true.</db:para>
<db:para>If this option is set to false, then the menu has no checkable items. This makes it possible for GUI styles to save some horizontal space that would normally be used for the check column.</db:para>
</db:section>
<db:section xml:id="menuItemType-var">
<db:title>QStyleOptionMenuItem::MenuItemType QStyleOptionMenuItem::menuItemType</db:title>
<db:para>This variable holds the type of menu item</db:para>
<db:para>The default value is <db:link xlink:href="qstyleoptionmenuitem.xml#MenuItemType-enum">Normal</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionmenuitem.xml#MenuItemType-enum">MenuItemType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="menuRect-var">
<db:title>QRect QStyleOptionMenuItem::menuRect</db:title>
<db:para>This variable holds the rectangle for the entire menu</db:para>
<db:para>The default value is a null rectangle, i.e. a rectangle with both the width and the height set to 0.</db:para>
</db:section>
<db:section xml:id="reservedShortcutWidth-var">
<db:title>int QStyleOptionMenuItem::reservedShortcutWidth</db:title>
<db:para>This variable holds the reserved width for the menu item's shortcut</db:para>
<db:para><db:link xlink:href="qmenu.xml">QMenu</db:link> sets it to the width occupied by the widest shortcut among all visible items within the menu.</db:para>
<db:para>The default value is 0.</db:para>
</db:section>
<db:section xml:id="text-var">
<db:title>QString QStyleOptionMenuItem::text</db:title>
<db:para>This variable holds the text for the menu item</db:para>
<db:para>Note that the text format is something like this &quot;Menu text<db:emphasis role="bold">\t</db:emphasis>Shortcut&quot;.</db:para>
<db:para>If the menu item doesn't have a shortcut, it will just contain the menu item's text. The default value is an empty string.</db:para>
</db:section>
</db:section>
</db:article>
