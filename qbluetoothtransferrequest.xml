<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QBluetoothTransferRequest Class</db:title>
<db:productname>QtBluetooth</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Bluetooth Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qbluetoothtransferrequest.xml">QBluetoothTransferRequest</db:link> class stores information about a data transfer request.</db:para>
<db:para>This class was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QBluetoothTransferRequest</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += bluetooth</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qbluetoothtransferrequest.xml">QBluetoothTransferRequest</db:link> is part of the Bluetooth Transfer API and is the class holding the information necessary to initiate a transfer over Bluetooth.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbluetoothtransferreply.xml">QBluetoothTransferReply</db:link></db:member>
<db:member><db:link xlink:href="qbluetoothtransfermanager.xml">QBluetoothTransferManager</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Attribute-enum">
<db:title>enum QBluetoothTransferRequest::Attribute</db:title>
<db:enumsynopsis>
<db:enumname>Attribute</db:enumname>
<db:enumitem>
<db:enumidentifier>DescriptionAttribute</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>TimeAttribute</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>TypeAttribute</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>LengthAttribute</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NameAttribute</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>Attribute codes for <db:link xlink:href="qbluetoothtransferrequest.xml">QBluetoothTransferRequest</db:link> and <db:link xlink:href="qbluetoothtransferreply.xml">QBluetoothTransferReply</db:link>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qbluetoothtransferrequest.xml">QBluetoothTransferRequest</db:link></db:emphasis>::DescriptionAttribute</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>A textual description of the object being transferred. May be displayed in the UI of the remote device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qbluetoothtransferrequest.xml">QBluetoothTransferRequest</db:link></db:emphasis>::TimeAttribute</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Time attribute of the object being transferred.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qbluetoothtransferrequest.xml">QBluetoothTransferRequest</db:link></db:emphasis>::TypeAttribute</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>MIME type of the object being transferred.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qbluetoothtransferrequest.xml">QBluetoothTransferRequest</db:link></db:emphasis>::LengthAttribute</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Length in bytes of the object being transferred.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qbluetoothtransferrequest.xml">QBluetoothTransferRequest</db:link></db:emphasis>::NameAttribute</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>Name of the object being transferred. May be displayed in the UI of the remote device.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QBluetoothTransferRequest">
<db:title>[explicit] QBluetoothTransferRequest::QBluetoothTransferRequest(const QBluetoothAddress &amp;<db:emphasis>address</db:emphasis> = QBluetoothAddress())</db:title>
<db:constructorsynopsis>
<db:methodname>QBluetoothTransferRequest</db:methodname>
<db:methodparam>
<db:type>const QBluetoothAddress &amp;</db:type>
<db:parameter>address</db:parameter>
<db:initializer>QBluetoothAddress()</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QBluetoothTransferRequest(const QBluetoothAddress &amp;address)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new Bluetooth transfer request to the device with <db:code role="parameter">address</db:code>.</db:para>
</db:section>
<db:section xml:id="QBluetoothTransferRequest-1">
<db:title>QBluetoothTransferRequest::QBluetoothTransferRequest(const QBluetoothTransferRequest &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QBluetoothTransferRequest</db:methodname>
<db:methodparam>
<db:type>const QBluetoothTransferRequest &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QBluetoothTransferRequest(const QBluetoothTransferRequest &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new Bluetooth transfer request that is a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QBluetoothTransferRequest">
<db:title>QBluetoothTransferRequest::~QBluetoothTransferRequest()</db:title>
<db:destructorsynopsis>
<db:methodname>~QBluetoothTransferRequest</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QBluetoothTransferRequest()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destorys the Bluetooth transfer request.</db:para>
</db:section>
<db:section xml:id="address">
<db:title>QBluetoothAddress QBluetoothTransferRequest::address() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QBluetoothAddress</db:type>
<db:methodname>address</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBluetoothAddress address() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the address associated with the Bluetooth transfer request.</db:para>
</db:section>
<db:section xml:id="attribute">
<db:title>QVariant QBluetoothTransferRequest::attribute(QBluetoothTransferRequest::Attribute <db:emphasis>code</db:emphasis>, const QVariant &amp;<db:emphasis>defaultValue</db:emphasis> = QVariant()) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QVariant</db:type>
<db:methodname>attribute</db:methodname>
<db:methodparam>
<db:type>QBluetoothTransferRequest::Attribute</db:type>
<db:parameter>code</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QVariant &amp;</db:type>
<db:parameter>defaultValue</db:parameter>
<db:initializer>QVariant()</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QVariant attribute(QBluetoothTransferRequest::Attribute code, const QVariant &amp;defaultValue) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the attribute associated with <db:code role="parameter">code</db:code>. If the attribute has not been set, it returns <db:code role="parameter">defaultValue</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbluetoothtransferrequest.xml#setAttribute">setAttribute</db:link>()</db:member>
<db:member><db:link xlink:href="qbluetoothtransferrequest.xml#Attribute-enum">QBluetoothTransferRequest::Attribute</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setAttribute">
<db:title>void QBluetoothTransferRequest::setAttribute(QBluetoothTransferRequest::Attribute <db:emphasis>code</db:emphasis>, const QVariant &amp;<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setAttribute</db:methodname>
<db:methodparam>
<db:type>QBluetoothTransferRequest::Attribute</db:type>
<db:parameter>code</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QVariant &amp;</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setAttribute(QBluetoothTransferRequest::Attribute code, const QVariant &amp;value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the attribute associated with <db:code role="parameter">code</db:code> to <db:code role="parameter">value</db:code>. If the attribute is already set, the previous value is discarded. If <db:code role="parameter">value</db:code> is an invalid <db:link xlink:href="qvariant.xml">QVariant</db:link>, the attribute is unset.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbluetoothtransferrequest.xml#attribute">attribute</db:link>()</db:member>
<db:member><db:link xlink:href="qbluetoothtransferrequest.xml#Attribute-enum">QBluetoothTransferRequest::Attribute</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QBluetoothTransferRequest::operator!=(const QBluetoothTransferRequest &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator!=</db:methodname>
<db:methodparam>
<db:type>const QBluetoothTransferRequest &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator!=(const QBluetoothTransferRequest &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if this object is not the same as <db:code role="parameter">other</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbluetoothtransferrequest.xml#operator-eq-eq">operator==</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QBluetoothTransferRequest &amp;QBluetoothTransferRequest::operator=(const QBluetoothTransferRequest &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBluetoothTransferRequest &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QBluetoothTransferRequest &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QBluetoothTransferRequest &amp; operator=(const QBluetoothTransferRequest &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Creates a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QBluetoothTransferRequest::operator==(const QBluetoothTransferRequest &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>const QBluetoothTransferRequest &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(const QBluetoothTransferRequest &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if this object is the same as <db:code role="parameter">other</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
