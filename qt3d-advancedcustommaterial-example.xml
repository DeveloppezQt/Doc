<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt 3D: Advanced Custom Material QML Example</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates creating advanced materials in Qt3D.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/advanced-custom-material.jpg"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:emphasis>This</db:emphasis> example demonstrates creating advanced custom materials.</db:para>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="https://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:guilabel>Welcome</db:guilabel> mode and select the example from <db:guilabel>Examples</db:guilabel>. For more information, visit <db:link xlink:href="https://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section xml:id="description">
<db:title>Description</db:title>
<db:para>Advanced custom material example shows more complex shaders, and demonstrates controlling your shader properties with <db:link xlink:href="qtquick-module.xml">QtQuick</db:link> user interface and Animation. Water is a 3D mesh, that is modeled and uv mapped inside Blender, and then brought into Scene 3D as an <db:code>.obj</db:code> file. Shader properties that user can control, are defined in <db:code>advancedcustommaterial/WaterMaterial.qml</db:code>.</db:para>
</db:section>
<db:section xml:id="controls">
<db:title>Controls</db:title>
<db:section xml:id="texture-scale-slider">
<db:title>Texture scale slider</db:title>
<db:para>Multiplies texture coordinates inside the vertex shader. Controls the size of the textures on water surface.</db:para>
</db:section>
<db:section xml:id="texture-speed-slider">
<db:title>Texture speed slider</db:title>
<db:para>Offsets values for texture coordinates which are animated in <db:code>advancedcustommaterial/Water.qml</db:code> and then passed to vertex shader. Creates the effect of textures scrolling over the surface.</db:para>
</db:section>
<db:section xml:id="specularity">
<db:title>Specularity</db:title>
<db:para>Multiplies specular texture values inside fragment shader. Makes the water reflective.</db:para>
</db:section>
<db:section xml:id="distortion">
<db:title>Distortion</db:title>
<db:para>Multiplies the offset in red and blue channels of wave texture in fragment shader. Makes the surface textures animate more randomly.</db:para>
</db:section>
<db:section xml:id="normal-amount">
<db:title>Normal amount</db:title>
<db:para>Multiplies the normal map values inside fragment shader. Controls the visibility of smaller waves on the water surface.</db:para>
</db:section>
<db:section xml:id="wave-speed">
<db:title>Wave speed</db:title>
<db:para>Modifies the frequency of the sine wave inside vertex shader. Controls the speed of the waves.</db:para>
</db:section>
<db:section xml:id="wave-height">
<db:title>Wave height</db:title>
<db:para>Multiplies the vertex <db:code>Y</db:code> position inside vertex shader. Controls the height of the waves.</db:para>
</db:section>
<db:section xml:id="mesh-rotation">
<db:title>Mesh rotation</db:title>
<db:para>Rotates the water mesh in <db:code>advancedcustommaterial/Water.qml</db:code>.</db:para>
</db:section>
</db:section>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qt3d.git/tree/examples/qt3d/advancedcustommaterial?h=6.4">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
