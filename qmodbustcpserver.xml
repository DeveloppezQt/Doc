<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QModbusTcpServer Class</db:title>
<db:productname>QtSerialBus</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Serial Bus Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qmodbustcpserver.xml">QModbusTcpServer</db:link> class represents a Modbus server that uses a TCP server for its communication with the Modbus client.</db:para>
<db:para>This class was introduced in Qt 5.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QModbusTcpServer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += serialbus</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qmodbusserver.xml" xlink:role="class">QModbusServer</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Communication via Modbus requires the interaction between a single Modbus client instance and single Modbus server. This class provides the Modbus server implementation via a TCP server.</db:para>
<db:para>Modbus TCP networks can have multiple servers. Servers are read/written by a client device represented by <db:link xlink:href="qmodbustcpclient.xml">QModbusTcpClient</db:link>.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QModbusTcpServer">
<db:title>[explicit] QModbusTcpServer::QModbusTcpServer(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a <db:link xlink:href="qmodbustcpserver.xml">QModbusTcpServer</db:link> with the specified <db:code role="parameter">parent</db:code>. The <db:link xlink:href="qmodbusserver.xml#serverAddress">serverAddress</db:link> preset is <db:code>255</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QModbusTcpServer">
<db:title>[virtual noexcept] QModbusTcpServer::~QModbusTcpServer()</db:title>
<db:para>Destroys the <db:link xlink:href="qmodbustcpserver.xml">QModbusTcpServer</db:link> instance.</db:para>
</db:section>
<db:section xml:id="close">
<db:title>[override virtual protected] void QModbusTcpServer::close()</db:title>
<db:para>Reimplements: <db:link xlink:href="qmodbusdevice.xml#close" role="function">QModbusDevice::close()</db:link>.</db:para>
</db:section>
<db:section xml:id="open">
<db:title>[override virtual protected] bool QModbusTcpServer::open()</db:title>
<db:para>Reimplements: <db:link xlink:href="qmodbusdevice.xml#open" role="function">QModbusDevice::open()</db:link>.</db:para>
</db:section>
<db:section xml:id="processRequest">
<db:title>[override virtual protected] QModbusResponse QModbusTcpServer::processRequest(const QModbusPdu &amp;<db:emphasis>request</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qmodbusserver.xml#processRequest" role="function">QModbusServer::processRequest(const QModbusPdu &amp;request)</db:link>.</db:para>
<db:para>Processes the Modbus client request specified by <db:code role="parameter">request</db:code> and returns a Modbus response.</db:para>
<db:para>The following Modbus function codes are filtered out as they are serial line only according to the Modbus Application Protocol Specification 1.1b:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qmodbuspdu.xml#FunctionCode-enum">QModbusRequest::ReadExceptionStatus</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmodbuspdu.xml#FunctionCode-enum">QModbusRequest::Diagnostics</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmodbuspdu.xml#FunctionCode-enum">QModbusRequest::GetCommEventCounter</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmodbuspdu.xml#FunctionCode-enum">QModbusRequest::GetCommEventLog</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmodbuspdu.xml#FunctionCode-enum">QModbusRequest::ReportServerId</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>A request to the TCP server will be answered with a Modbus exception response with the exception code QModbusExceptionResponse::IllegalFunction.</db:para>
</db:section>
</db:section>
</db:article>
