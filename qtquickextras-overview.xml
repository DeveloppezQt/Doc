<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Extras Overview</db:title>
<db:productname>QtQuickExtras</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Extras Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A set of UI controls to create user interfaces in Qt Quick.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt Quick Extras provide a set of UI controls to create user interfaces in Qt Quick.</db:para>
<db:section xml:id="getting-started">
<db:title>Getting Started</db:title>
<db:section xml:id="building">
<db:title>Building</db:title>
<db:para>If you are building Qt Quick Extras from source, you can follow the steps used for most Qt modules:</db:para>
<db:programlisting language="cpp">qmake
make
make install
</db:programlisting>
</db:section>
<db:section xml:id="using-the-controls">
<db:title>Using the Controls</db:title>
<db:para>The QML types can be imported into your application using the following import statement in your <db:code>.qml</db:code> file.</db:para>
<db:programlisting language="cpp">import QtQuick.Extras 1.4
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="interactive-controls">
<db:title>Interactive controls</db:title>
<db:variablelist role="extras-interactive">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-extras-delaybutton.xml" xlink:role="">DelayButton</db:link></db:term>
<db:listitem>
<db:para>A checkable button that triggers an action when held in long enough.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-extras-dial.xml" xlink:role="">Dial</db:link></db:term>
<db:listitem>
<db:para>A circular dial that is rotated to set a value.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-extras-piemenu.xml" xlink:role="">PieMenu</db:link></db:term>
<db:listitem>
<db:para>A popup menu that displays several menu items along an arc.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-extras-togglebutton.xml" xlink:role="">ToggleButton</db:link></db:term>
<db:listitem>
<db:para>A push button that toggles between two states.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-extras-tumbler.xml" xlink:role="">Tumbler</db:link></db:term>
<db:listitem>
<db:para>A control that can have several spinnable wheels, each with items that can be selected.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="non-interactive-controls">
<db:title>Non-interactive controls</db:title>
<db:variablelist role="extras-non-interactive">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-extras-circulargauge.xml" xlink:role="">CircularGauge</db:link></db:term>
<db:listitem>
<db:para>A gauge that displays a value within a range along an arc.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-extras-gauge.xml" xlink:role="">Gauge</db:link></db:term>
<db:listitem>
<db:para>A straight gauge that displays a value within a range.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-extras-picture.xml" xlink:role="">Picture</db:link></db:term>
<db:listitem>
<db:para>An indicator that displays a colorized QPicture icon</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-extras-statusindicator.xml" xlink:role="">StatusIndicator</db:link></db:term>
<db:listitem>
<db:para>An indicator that displays active or inactive states.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="creating-a-basic-example">
<db:title>Creating a basic example</db:title>
<db:para>A basic example of a QML file that makes use of controls is shown here:</db:para>
<db:programlisting language="cpp">import QtQuick 2.2
import QtQuick.Extras 1.4

Rectangle {
    DelayButton {
        anchors.centerIn: parent
    }
}
</db:programlisting>
<db:para>For an interactive showcase of the controls provided by <db:link xlink:href="qtquickextras-index.xml">Qt Quick Extras</db:link>, you can look at the <db:link xlink:href="qtquickextras-gallery-example.xml">Gallery</db:link> example.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickextras-example-gallery.png"/>
</db:imageobject>
</db:mediaobject>
</db:section>
<db:section xml:id="related-information">
<db:title>Related information</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquick-index.xml">Qt Quick</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickextras-index.xml">Qt Quick Extras</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickextras-examples.xml">Qt Quick Extras Examples</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
