<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QMaterial Class</db:title>
<db:subtitle>Qt3DRender::QMaterial</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides an abstract class that should be the base of all material component classes in a scene.</db:para>
<db:para>This class was introduced in Qt 5.5.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QMaterial</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dextras-qdiffusemapmaterial.xml" xlink:role="class">Qt3DExtras::QDiffuseMapMaterial</db:link>, <db:link xlink:href="qt3dextras-qdiffusespecularmapmaterial.xml" xlink:role="class">Qt3DExtras::QDiffuseSpecularMapMaterial</db:link>, <db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml" xlink:role="class">Qt3DExtras::QDiffuseSpecularMaterial</db:link>, <db:link xlink:href="qt3dextras-qgoochmaterial.xml" xlink:role="class">Qt3DExtras::QGoochMaterial</db:link>, <db:link xlink:href="qt3dextras-qmetalroughmaterial.xml" xlink:role="class">Qt3DExtras::QMetalRoughMaterial</db:link>, <db:link xlink:href="qt3dextras-qmorphphongmaterial.xml" xlink:role="class">Qt3DExtras::QMorphPhongMaterial</db:link>, <db:link xlink:href="qt3dextras-qnormaldiffusemapmaterial.xml" xlink:role="class">Qt3DExtras::QNormalDiffuseMapMaterial</db:link>, <db:link xlink:href="qt3dextras-qnormaldiffusespecularmapmaterial.xml" xlink:role="class">Qt3DExtras::QNormalDiffuseSpecularMapMaterial</db:link>, <db:link xlink:href="qt3dextras-qpervertexcolormaterial.xml" xlink:role="class">Qt3DExtras::QPerVertexColorMaterial</db:link>, <db:link xlink:href="qt3dextras-qphongalphamaterial.xml" xlink:role="class">Qt3DExtras::QPhongAlphaMaterial</db:link>, <db:link xlink:href="qt3dextras-qphongmaterial.xml" xlink:role="class">Qt3DExtras::QPhongMaterial</db:link>, and <db:link xlink:href="qt3dextras-qtexturematerial.xml" xlink:role="class">Qt3DExtras::QTextureMaterial</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-material.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qcomponent.xml" xlink:role="class">Qt3DCore::QComponent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dextras-qdiffusemapmaterial.xml" xlink:role="class">Qt3DExtras::QDiffuseMapMaterial</db:link>, <db:link xlink:href="qt3dextras-qdiffusespecularmapmaterial.xml" xlink:role="class">Qt3DExtras::QDiffuseSpecularMapMaterial</db:link>, <db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml" xlink:role="class">Qt3DExtras::QDiffuseSpecularMaterial</db:link>, <db:link xlink:href="qt3dextras-qgoochmaterial.xml" xlink:role="class">Qt3DExtras::QGoochMaterial</db:link>, <db:link xlink:href="qt3dextras-qmetalroughmaterial.xml" xlink:role="class">Qt3DExtras::QMetalRoughMaterial</db:link>, <db:link xlink:href="qt3dextras-qmorphphongmaterial.xml" xlink:role="class">Qt3DExtras::QMorphPhongMaterial</db:link>, <db:link xlink:href="qt3dextras-qnormaldiffusemapmaterial.xml" xlink:role="class">Qt3DExtras::QNormalDiffuseMapMaterial</db:link>, <db:link xlink:href="qt3dextras-qnormaldiffusespecularmapmaterial.xml" xlink:role="class">Qt3DExtras::QNormalDiffuseSpecularMapMaterial</db:link>, <db:link xlink:href="qt3dextras-qpervertexcolormaterial.xml" xlink:role="class">Qt3DExtras::QPerVertexColorMaterial</db:link>, <db:link xlink:href="qt3dextras-qphongalphamaterial.xml" xlink:role="class">Qt3DExtras::QPhongAlphaMaterial</db:link>, <db:link xlink:href="qt3dextras-qphongmaterial.xml" xlink:role="class">Qt3DExtras::QPhongMaterial</db:link>, and <db:link xlink:href="qt3dextras-qtexturematerial.xml" xlink:role="class">Qt3DExtras::QTextureMaterial</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qt3drender-qmaterial.xml">QMaterial</db:link> provides a way to specify the rendering of an <db:link xlink:href="qt3dcore-qentity.xml">entity</db:link>. Any aspect can define its own subclass of <db:link xlink:href="qt3drender-qmaterial.xml">QMaterial</db:link> so that a Material can be used to describe a visual element; for example, the way sound should reflect off an element, the temperature of a surface, and so on.</db:para>
<db:para>In itself, a <db:link xlink:href="qt3drender-qmaterial.xml">QMaterial</db:link> doesn't do anything. It's only when it references a <db:link xlink:href="qt3drender-qeffect.xml">QEffect</db:link> node that a <db:link xlink:href="qt3drender-qmaterial.xml">QMaterial</db:link> becomes useful.</db:para>
<db:para>In practice, it often happens that a single <db:link xlink:href="qt3drender-qeffect.xml">QEffect</db:link> is being referenced by several <db:link xlink:href="qt3drender-qmaterial.xml">QMaterial</db:link> components. This allows to only create the effect, techniques, passes and shaders once while allowing to specify the material by adding <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> instances.</db:para>
<db:para>A <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> defined on a <db:link xlink:href="qt3drender-qmaterial.xml">QMaterial</db:link> overrides parameter (of the same name) defined in a <db:link xlink:href="qt3drender-qeffect.xml">QEffect</db:link>, <db:link xlink:href="qt3drender-qtechnique.xml">QTechnique</db:link> and <db:link xlink:href="qt3drender-qrenderpass.xml">QRenderPass</db:link>, but are overridden by parameter in <db:link xlink:href="qt3drender-qrenderpassfilter.xml">QRenderPassFilter</db:link> and <db:link xlink:href="qt3drender-qtechniquefilter.xml">QTechniqueFilter</db:link>.</db:para>
<db:programlisting language="cpp">QMaterial *material1 = new QMaterial();
QMaterial *material2 = new QMaterial();

// Create effect, technique, render pass and shader
QEffect *effect = new QEffect();
QTechnique *gl3Technique = new QTechnique();
QRenderPass *gl3Pass = new QRenderPass();
QShaderProgram *glShader = new QShaderProgram();

// Set the shader on the render pass
gl3Pass-&amp;gt;setShaderProgram(glShader);

// Add the pass to the technique
gl3Technique-&amp;gt;addRenderPass(gl3Pass);

// Set the targeted GL version for the technique
gl3Technique-&amp;gt;graphicsApiFilter()-&amp;gt;setApi(QGraphicsApiFilter::OpenGL);
gl3Technique-&amp;gt;graphicsApiFilter()-&amp;gt;setMajorVersion(3);
gl3Technique-&amp;gt;graphicsApiFilter()-&amp;gt;setMinorVersion(1);
gl3Technique-&amp;gt;graphicsApiFilter()-&amp;gt;setProfile(QGraphicsApiFilter::CoreProfile);

// Add the technique to the effect
effect-&amp;gt;addTechnique(gl3Technique);

// Set the effect on the materials
material1-&amp;gt;setEffect(effect);
material2-&amp;gt;setEffect(effect);

// Set different parameters on the materials
const QString parameterName = QStringLiteral(&quot;color&quot;);
material1-&amp;gt;addParameter(new QParameter(parameterName, QColor::fromRgbF(0.0f, 1.0f, 0.0f, 1.0f);
material2-&amp;gt;addParameter(new QParameter(parameterName, QColor::fromRgbF(1.0f, 1.0f, 1.0f, 1.0f);

</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qeffect.xml">QEffect</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qtechnique.xml">QTechnique</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="effect-prop">
<db:title>effect : Qt3DRender::QEffect*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DRender::QEffect*</db:type>
<db:varname>effect</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">effect</db:synopsisinfo>
<db:synopsisinfo role="setter">setEffect</db:synopsisinfo>
<db:synopsisinfo role="notifier">effectChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the effect to be used with the material.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qeffect.xml">Qt3DRender::QEffect</db:link></db:type> *<db:emphasis role="bold">effect</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setEffect</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qeffect.xml">Qt3DRender::QEffect</db:link></db:type> *<db:emphasis>effect</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">effectChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qeffect.xml">Qt3DRender::QEffect</db:link></db:type> *<db:emphasis>effect</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="addParameter">
<db:title>void QMaterial::addParameter(Qt3DRender::QParameter *<db:emphasis>parameter</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addParameter</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QParameter *</db:type>
<db:parameter>parameter</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addParameter(Qt3DRender::QParameter *parameter)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Add a <db:code role="parameter">parameter</db:code> to the material's parameters.</db:para>
</db:section>
<db:section xml:id="parameters">
<db:title>QList&lt;Qt3DRender::QParameter *&gt; QMaterial::parameters() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;Qt3DRender::QParameter *&gt;</db:type>
<db:methodname>parameters</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;Qt3DRender::QParameter *&gt; parameters() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a vector of the material's current parameters</db:para>
</db:section>
<db:section xml:id="removeParameter">
<db:title>void QMaterial::removeParameter(Qt3DRender::QParameter *<db:emphasis>parameter</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>removeParameter</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QParameter *</db:type>
<db:parameter>parameter</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void removeParameter(Qt3DRender::QParameter *parameter)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Remove a <db:code role="parameter">parameter</db:code> from the material's parameters.</db:para>
</db:section>
</db:section>
</db:article>
