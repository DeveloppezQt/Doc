<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>PieSlice QML Type</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Defines a slice in pie series.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtCharts 2.1</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtcharts-pieslice.xml">PieSlice</db:link> defines the properties of a single slice in a <db:link xlink:href="qml-qtcharts-pieseries.xml">PieSeries</db:link>. The element should be used as a child for a <db:link xlink:href="qml-qtcharts-pieseries.xml">PieSeries</db:link>. For example:</db:para>
<db:programlisting language="qml">    PieSeries {
        id: pieSeries
        PieSlice { label: &quot;eaten&quot;; value: 94.9 }
        PieSlice { label: &quot;not yet eaten&quot;; value: 5.1 }
    }
</db:programlisting>
<db:para>An alternative (dynamic) method for adding slices to a <db:link xlink:href="qml-qtcharts-pieseries.xml">PieSeries</db:link> is using <db:link xlink:href="qml-qtcharts-pieseries.xml">PieSeries</db:link>.append method.</db:para>
<db:programlisting language="qml">pieSeries.append(&quot;don't care&quot;, 1.1);
</db:programlisting>
<db:para>In that case you may want to use <db:link xlink:href="qml-qtcharts-pieseries.xml">PieSeries</db:link>.at or <db:link xlink:href="qml-qtcharts-pieseries.xml">PieSeries</db:link>.find to access the properties of an individual <db:link xlink:href="qml-qtcharts-pieslice.xml">PieSlice</db:link> instance.</db:para>
<db:programlisting language="qml">pieSeries.at(0).exploded = true;
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieseries.xml">PieSeries</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="angleSpan-prop">
<db:title>angleSpan : real</db:title>
<db:para>Span of the slice in degrees. Full pie is 360 degrees where 0 degrees is at 12 a'clock. Updated automatically once the slice is added to the series.</db:para>
</db:section>
<db:section xml:id="borderColor-prop">
<db:title>borderColor : color</db:title>
<db:para>Color used to draw the slice border (pen color).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#borderWidth-prop">borderWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="borderWidth-prop">
<db:title>borderWidth : int</db:title>
<db:para>Width of the slice border. This is a convenience property for modifying the slice pen.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#borderColor-prop">borderColor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="brushFilename-prop">
<db:title>brushFilename : QString</db:title>
<db:para>The name of the file used as a brush for the slice.</db:para>
</db:section>
<db:section xml:id="color-prop">
<db:title>color : color</db:title>
<db:para>Fill (brush) color of the slice.</db:para>
</db:section>
<db:section xml:id="explodeDistanceFactor-prop">
<db:title>explodeDistanceFactor : real</db:title>
<db:para>When the slice is exploded this factor defines how far the slice is exploded away from the pie. The factor is relative to pie radius. For example: 1.0 means the distance is the same as the radius. 0.5 means the distance is half of the radius. By default the distance is is 0.15</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#exploded-prop">exploded</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="exploded-prop">
<db:title>exploded : bool</db:title>
<db:para>If set to true the slice is &quot;exploded&quot; away from the pie.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#explodeDistanceFactor-prop">explodeDistanceFactor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="label-prop">
<db:title>label : string</db:title>
<db:para>Label (text) of the slice.</db:para>
</db:section>
<db:section xml:id="labelArmLengthFactor-prop">
<db:title>labelArmLengthFactor : real</db:title>
<db:para>Defines the length of the label arm. The factor is relative to pie radius. For example: 1.0 means the length is the same as the radius. 0.5 means the length is half of the radius. By default the arm length is 0.15</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#labelVisible-prop">labelVisible</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelColor-prop">
<db:title>labelColor : color</db:title>
<db:para>Color used to draw the slice label.</db:para>
</db:section>
<db:section xml:id="labelFont-prop">
<db:title>labelFont : Font</db:title>
<db:para>Defines the font used for slice label.</db:para>
<db:para>See the Qt documentation for more details of Font.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#labelVisible-prop">labelVisible</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#labelPosition-prop">labelPosition</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelPosition-prop">
<db:title>labelPosition : LabelPosition</db:title>
<db:para>Position of the slice label. One of <db:link xlink:href="qml-qtcharts-pieslice.xml">PieSlice</db:link>.LabelOutside, <db:link xlink:href="qml-qtcharts-pieslice.xml">PieSlice</db:link>.LabelInsideHorizontal, <db:link xlink:href="qml-qtcharts-pieslice.xml">PieSlice</db:link>.LabelInsideTangential or <db:link xlink:href="qml-qtcharts-pieslice.xml">PieSlice</db:link>.LabelInsideNormal. By default the position is <db:link xlink:href="qml-qtcharts-pieslice.xml">PieSlice</db:link>.LabelOutside.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#labelVisible-prop">labelVisible</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelVisible-prop">
<db:title>labelVisible : bool</db:title>
<db:para>Defines the visibility of slice label. By default the label is not visible.</db:para>
</db:section>
<db:section xml:id="percentage-prop">
<db:title>percentage : real</db:title>
<db:para>Percentage of the slice compared to the sum of all slices in the series. The actual value ranges from 0.0 to 1.0. Updated automatically once the slice is added to the series.</db:para>
</db:section>
<db:section xml:id="startAngle-prop">
<db:title>startAngle : real</db:title>
<db:para>Defines the starting angle of this slice in the series it belongs to. Full pie is 360 degrees where 0 degrees is at 12 a'clock. Updated automatically once the slice is added to the series.</db:para>
</db:section>
<db:section xml:id="value-prop">
<db:title>value : real</db:title>
<db:para>Value of the slice. Note that if users sets a negative value it is converted to a positive value.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="onAngleSpanChanged-signal">
<db:title>onAngleSpanChanged()</db:title>
<db:para>This signal is emitted when the angle span of the slice has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnAngleSpanChanged</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#angleSpan-prop">angleSpan</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="onBorderColorChanged-signal">
<db:title>onBorderColorChanged()</db:title>
<db:para>This signal is emitted when slice border color changes.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnBorderColorChanged</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#borderColor-prop">borderColor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="onBorderWidthChanged-signal">
<db:title>onBorderWidthChanged()</db:title>
<db:para>This signal is emitted when slice border width changes.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnBorderWidthChanged</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#borderWidth-prop">borderWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="onClicked-signal">
<db:title>onClicked()</db:title>
<db:para>This signal is emitted when user has clicked the slice.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onColorChanged-signal">
<db:title>onColorChanged()</db:title>
<db:para>This signal is emitted when slice color changes.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnColorChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onDoubleClicked-signal">
<db:title>onDoubleClicked()</db:title>
<db:para>This signal is emitted when user has doubleclicked the slice.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnDoubleClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onHovered-signal">
<db:title>onHovered(bool <db:emphasis>state</db:emphasis>)</db:title>
<db:para>This signal is emitted when user has hovered over or away from the slice. <db:code role="parameter">state</db:code> is true when user has hovered over the slice and false when hover has moved away from the slice.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnHovered</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onLabelChanged-signal">
<db:title>onLabelChanged()</db:title>
<db:para>This signal emitted when the slice label has been changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnLabelChanged</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#label-prop">label</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="onLabelColorChanged-signal">
<db:title>onLabelColorChanged()</db:title>
<db:para>This signal is emitted when slice label color changes.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnLabelColorChanged</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#labelColor-prop">labelColor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="onLabelVisibleChanged-signal">
<db:title>onLabelVisibleChanged()</db:title>
<db:para>This signal emitted when visibility of the slice label has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnLabelVisibleChanged</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#labelVisible-prop">labelVisible</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="onPercentageChanged-signal">
<db:title>void onPercentageChanged()</db:title>
<db:para>This signal is emitted when the percentage of the slice has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPercentageChanged</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#percentage-prop">percentage</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="onPressed-signal">
<db:title>onPressed()</db:title>
<db:para>This signal is emitted when user has pressed the slice.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPressed</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onReleased-signal">
<db:title>onReleased()</db:title>
<db:para>This signal is emitted when user has released the slice.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnReleased</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onStartAngleChanged-signal">
<db:title>onStartAngleChanged()</db:title>
<db:para>This signal is emitted when the starting angle f the slice has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnStartAngleChanged</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#startAngle-prop">startAngle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="onValueChanged-signal">
<db:title>onValueChanged()</db:title>
<db:para>This signal is emitted when the slice value changes.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnValueChanged</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-pieslice.xml#value-prop">value</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
