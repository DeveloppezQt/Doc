<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Changes in Qt Multimedia</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>A description of changes in this version of Qt Multimedia.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt Multimedia module in Qt 5 combines (and replaces) two older modules, namely the Qt Multimedia module from Qt 4.x, and Qt Multimedia Kit module from Qt Mobility. Existing code that uses Qt Multimedia from Qt 4 can be ported with minimal effort, but porting code that uses Qt Multimedia Kit may be a more involved process. The <db:link xlink:href="changes.xml#changed-features">changed features</db:link> section highlights changes relevant to porting.</db:para>
<db:para>Also, note that widget-based classes, such as <db:link xlink:href="qvideowidget.xml">QVideoWidget</db:link>, are now in a separate module called Qt Multimedia Widgets.</db:para>
<db:section xml:id="new-features-in-qt-5-0">
<db:title>New features in Qt 5.0</db:title>
<db:para>There are a number of new features in Qt Multimedia:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Expanded QML API</db:para>
</db:listitem>
<db:listitem>
<db:para>In addition to the <db:link xlink:href="qml-qtmultimedia-video.xml">Video</db:link> QML type, there is now the option of using <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link> and <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link> together</db:para>
</db:listitem>
<db:listitem>
<db:para>QML <db:link xlink:href="qml-qtmultimedia-torch.xml">Torch</db:link> class</db:para>
</db:listitem>
<db:listitem>
<db:para>New <db:link xlink:href="qaudiorecorder.xml">QAudioRecorder</db:link> class</db:para>
</db:listitem>
<db:listitem>
<db:para>Volume support for <db:link xlink:href="qaudiooutput.xml">QAudioOutput</db:link> and <db:link xlink:href="qaudioinput.xml">QAudioInput</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para>More examples and documentation</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qsound.xml">QSound</db:link> moved from Qt GUI to Qt Multimedia</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qsoundeffect.xml">QSoundEffect</db:link> available to C++ now, as well as QML</db:para>
</db:listitem>
<db:listitem>
<db:para>FM Radio Data System classes and types now available (<db:link xlink:href="qradiodata.xml">QRadioData</db:link>, <db:link xlink:href="qml-qtmultimedia-radiodata.xml">RadioData</db:link>)</db:para>
</db:listitem>
<db:listitem>
<db:para>Various other API improvements and bugfixes</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="removed-features">
<db:title>Removed features</db:title>
<db:para>A number of classes or features previously offered in Qt Multimedia or Qt Multimedia Kit have been removed.</db:para>
<db:informaltable style="generic" width="70%">
<db:thead>
<db:tr>
<db:th>
<db:para>Removed feature</db:para>
</db:th>
<db:th>
<db:para>Notes</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>QMediaImageViewer</db:para>
</db:td>
<db:td>
<db:para>This class (and related controls and services) were removed since their functionality was not suitable for many applications</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="changed-features">
<db:title>Changed features</db:title>
<db:para>A number of classes previously offered in Qt Multimedia or Qt Multimedia Kit have changed in ways that may affect previously written code. This table highlights such changes.</db:para>
<db:informaltable style="generic" width="70%">
<db:thead>
<db:tr>
<db:th>
<db:para>Changed feature</db:para>
</db:th>
<db:th>
<db:para>Notes</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>qmake</db:code> project file changes</db:para>
</db:td>
<db:td>
<db:para>Previously, to use Qt Multimedia Kit, the <db:code>qmake</db:code> project file must contain</db:para>
<db:programlisting language="cpp">CONFIG += mobility
MOBILITY += multimedia
</db:programlisting>
<db:para>Now, you only need to write</db:para>
<db:programlisting language="cpp">QT += multimedia
</db:programlisting>
<db:para>Or, if you want to use the widget classes,</db:para>
<db:programlisting language="cpp">QT += multimedia multimediawidgets
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Namespaces</db:para>
</db:td>
<db:td>
<db:para>The <db:code>QtMultimediaKit</db:code> namespace has been renamed to <db:link xlink:href="qmultimedia.xml">QMultimedia</db:link>. This affects a few enumerations, namely <db:code>SupportEstimate</db:code>, <db:code>EncodingQuality</db:code>, <db:code>EncodingMode</db:code> and <db:code>AvailabilityStatus</db:code>. Searching and replacing <db:code>QtMultimediaKit</db:code> with <db:code>QMultimedia</db:code> will greatly aid porting efforts. Metadata have been split off into their own namespace, <db:link xlink:href="qmediametadata.xml">QMediaMetaData</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Metadata types</db:para>
</db:td>
<db:td>
<db:para>In Qt Multimedia Kit, pre-defined metadata keys were enumerations in the <db:code>QtMultimediaKit</db:code> namespace. These pre-defined keys have been changed to string literals in the <db:code>QMediaMetaData</db:code> namespace, for consistency with extended keys.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Metadata accessor methods</db:para>
</db:td>
<db:td>
<db:para>In Qt Multimedia Kit, there were two different families of methods to access metadata. Functions such as <db:code>QMediaObject::metaData()</db:code> operated on pre-defined metadata using enumerated keys, while functions such as <db:code>QMediaObject::extendedMetaData()</db:code> operated on extended metadata using string keys. Qt 5 combines both families into one (e.g. <db:link xlink:href="qmediaobject.xml#metaData">QMediaObject::metaData</db:link>()), which can operate on both pre-defined and extended metadata, using string keys.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Qt Metatype registration</db:para>
</db:td>
<db:td>
<db:para>Qt 5 registers many more classes and types with the meta-object system than before. If you have previously applied <db:link xlink:href="qmetatype.xml#Q_DECLARE_METATYPE">Q_DECLARE_METATYPE</db:link> macros to any Qt Multimedia class, you will probably need to remove them.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qsoundeffect.xml">QSoundEffect</db:link> availability</db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link> QML type was publicly accessible in Qt Multimeda Kit, and now the C++ version is officially public too. If your code contains the previously undocumented <db:link xlink:href="qsoundeffect.xml">QSoundEffect</db:link>, you may need to update it.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Camera controls</db:para>
</db:td>
<db:td>
<db:para>A large number of the camera controls (<db:link xlink:href="qcameraimageprocessingcontrol.xml">QCameraImageProcessingControl</db:link>, <db:link xlink:href="qcamerafocuscontrol.xml">QCameraFocusControl</db:link>, etc.) have been updated to address a number of design flaws. In particular, a number of discrete accessor methods have been collapsed into parametrized methods, and the ranges or data types of some parameters have been adjusted.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:article>
