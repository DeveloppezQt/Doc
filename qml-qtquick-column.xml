<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Column QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.11.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Positions its children in a column.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick 2.11</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Item</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Column is part of <db:simplelist><db:member>qtquick-positioners</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Column is a type that positions its child items along a single column. It can be used as a convenient way to vertically position a series of items without using <db:link xlink:href="qtquick-positioning-anchors.xml">anchors</db:link>.</db:para>
<db:para>Below is a Column that contains three rectangles of various sizes:</db:para>
<db:programlisting language="qml">Column {
    spacing: 2

    Rectangle { color: &quot;red&quot;; width: 50; height: 50 }
    Rectangle { color: &quot;green&quot;; width: 20; height: 50 }
    Rectangle { color: &quot;blue&quot;; width: 50; height: 20 }
}
</db:programlisting>
<db:para>The Column automatically positions these items in a vertical formation, like this:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/verticalpositioner_example.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>If an item within a Column is not <db:link xlink:href="qml-qtquick-item.xml#visible-prop">visible</db:link>, or if it has a width or height of 0, the item will not be laid out and it will not be visible within the column. Also, since a Column automatically positions its children vertically, a child item within a Column should not set its <db:link xlink:href="qml-qtquick-item.xml#y-prop">y</db:link> position or vertically anchor itself using the <db:link xlink:href="qml-qtquick-item.xml#anchors.top-prop">top</db:link>, <db:link xlink:href="qml-qtquick-item.xml#anchors.bottom-prop">bottom</db:link>, <db:link xlink:href="qml-qtquick-item.xml#anchors.verticalCenter-prop">anchors.verticalCenter</db:link>, <db:link xlink:href="qml-qtquick-item.xml#anchors.fill-prop">fill</db:link> or <db:link xlink:href="qml-qtquick-item.xml#anchors.centerIn-prop">centerIn</db:link> anchors. If you need to perform these actions, consider positioning the items without the use of a Column.</db:para>
<db:para>Note that items in a Column can use the <db:link xlink:href="qml-qtquick-positioner.xml">Positioner</db:link> attached property to access more information about its position within the Column.</db:para>
<db:para>For more information on using Column and other related positioner-types, see <db:link xlink:href="qtquick-positioning-layouts.xml">Item Positioners</db:link>.</db:para>
<db:section xml:id="using-transitions">
<db:title>Using Transitions</db:title>
<db:para>A Column animate items using specific transitions when items are added to or moved within a Column.</db:para>
<db:para>For example, the Column below sets the <db:link xlink:href="qml-qtquick-column.xml#move-prop">move</db:link> property to a specific <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link>:</db:para>
<db:programlisting language="qml">Column {
    spacing: 2

    Rectangle { color: &quot;red&quot;; width: 50; height: 50 }
    Rectangle { id: greenRect; color: &quot;green&quot;; width: 20; height: 50 }
    Rectangle { color: &quot;blue&quot;; width: 50; height: 20 }

    move: Transition {
        NumberAnimation { properties: &quot;x,y&quot;; duration: 1000 }
    }

    focus: true
    Keys.onSpacePressed: greenRect.visible = !greenRect.visible
}
</db:programlisting>
<db:para>When the Space key is pressed, the <db:link xlink:href="qml-qtquick-item.xml#visible-prop">visible</db:link> value of the green <db:link xlink:href="qml-qtquick-rectangle.xml">Rectangle</db:link> is toggled. As it appears and disappears, the blue <db:link xlink:href="qml-qtquick-rectangle.xml">Rectangle</db:link> moves within the Column, and the <db:link xlink:href="qml-qtquick-column.xml#move-prop">move</db:link> transition is automatically applied to the blue <db:link xlink:href="qml-qtquick-rectangle.xml">Rectangle</db:link>:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/verticalpositioner_transition.gif"/>
</db:imageobject>
</db:mediaobject>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-row.xml">Row</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-grid.xml">Grid</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-flow.xml">Flow</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-positioner.xml">Positioner</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-columnlayout.xml">ColumnLayout</db:link></db:member>
<db:member><db:link xlink:href="qtquick-positioners-example.xml">Qt Quick Examples - Positioners</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="bottomPadding-prop">
<db:title>[since 5.6] bottomPadding : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>bottomPadding</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2">[since 5.6] leftPadding : real</db:bridgehead><db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>leftPadding</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2">[since 5.6] padding : real</db:bridgehead><db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>padding</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2">[since 5.6] rightPadding : real</db:bridgehead><db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>rightPadding</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2">[since 5.6] topPadding : real</db:bridgehead><db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>topPadding</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>These properties hold the padding around the content.</db:para>
<db:para>This QML property was introduced in Qt 5.6.</db:para>
</db:section>
<db:section xml:id="add-prop">
<db:title>add : Transition</db:title>
<db:fieldsynopsis>
<db:type>Transition</db:type>
<db:varname>add</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the transition to be run for items that are added to this positioner. For a positioner, this applies to:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Items that are created or reparented as a child of the positioner after the positioner has been created</db:para>
</db:listitem>
<db:listitem>
<db:para>Child items that change their <db:link xlink:href="qml-qtquick-item.xml#visible-prop">Item::visible</db:link> property from false to true, and thus are now visible</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The transition can use the <db:link xlink:href="qml-qtquick-viewtransition.xml">ViewTransition</db:link> property to access more details about the item that is being added. See the <db:link xlink:href="qml-qtquick-viewtransition.xml">ViewTransition</db:link> documentation for more details and examples on using these transitions.</db:para>
<db:note>
<db:para>This transition is not applied to the items that are already part of the positioner at the time of its creation. In this case, the <db:link xlink:href="qml-qtquick-column.xml#populate-prop">populate</db:link> transition is applied instead.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-column.xml#populate-prop">populate</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-viewtransition.xml">ViewTransition</db:link></db:member>
<db:member><db:link xlink:href="qtquick-positioners-example.xml">Qt Quick Examples - Positioners</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="move-prop">
<db:title>move : Transition</db:title>
<db:fieldsynopsis>
<db:type>Transition</db:type>
<db:varname>move</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the transition to run for items that have moved within the positioner. For a positioner, this applies to:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Child items that move when they are displaced due to the addition, removal or rearrangement of other items in the positioner</db:para>
</db:listitem>
<db:listitem>
<db:para>Child items that are repositioned due to the resizing of other items in the positioner</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The transition can use the <db:link xlink:href="qml-qtquick-viewtransition.xml">ViewTransition</db:link> property to access more details about the item that is being moved. Note, however, that for this move transition, the <db:link xlink:href="qml-qtquick-viewtransition.xml">ViewTransition</db:link>.targetIndexes and <db:link xlink:href="qml-qtquick-viewtransition.xml">ViewTransition</db:link>.targetItems lists are only set when this transition is triggered by the addition of other items in the positioner; in other cases, these lists will be empty. See the <db:link xlink:href="qml-qtquick-viewtransition.xml">ViewTransition</db:link> documentation for more details and examples on using these transitions.</db:para>
<db:note>
<db:para>In <db:link xlink:href="qtquick-porting-qt5.xml">Qt Quick 1</db:link>, this transition was applied to all items that were part of the positioner at the time of its creation. From <db:link xlink:href="qtquick-index.xml">Qt Quick 2</db:link> onwards, positioners apply the <db:link xlink:href="qml-qtquick-column.xml#populate-prop">populate</db:link> transition to these items instead.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-column.xml#add-prop">add</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-viewtransition.xml">ViewTransition</db:link></db:member>
<db:member><db:link xlink:href="qtquick-positioners-example.xml">Qt Quick Examples - Positioners</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="populate-prop">
<db:title>populate : Transition</db:title>
<db:fieldsynopsis>
<db:type>Transition</db:type>
<db:varname>populate</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the transition to be run for items that are part of this positioner at the time of its creation. The transition is run when the positioner is first created.</db:para>
<db:para>The transition can use the <db:link xlink:href="qml-qtquick-viewtransition.xml">ViewTransition</db:link> property to access more details about the item that is being added. See the <db:link xlink:href="qml-qtquick-viewtransition.xml">ViewTransition</db:link> documentation for more details and examples on using these transitions.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-column.xml#add-prop">add</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-viewtransition.xml">ViewTransition</db:link></db:member>
<db:member><db:link xlink:href="qtquick-positioners-example.xml">Qt Quick Examples - Positioners</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="spacing-prop">
<db:title>spacing : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>spacing</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The spacing is the amount in pixels left empty between adjacent items. The default spacing is 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-grid.xml#spacing-prop">Grid::spacing</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="positioningComplete-signal">
<db:title>[since 5.9] positioningComplete()</db:title>
<db:para>This signal is emitted when positioning has been completed.</db:para>
<db:para>The corresponding handler is <db:code>onPositioningComplete</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPositioningComplete</db:code>.</db:para>
</db:note>
<db:para>This signal was introduced in Qt 5.9.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="forceLayout-method">
<db:title>[since 5.9] forceLayout()</db:title>
<db:para>Column typically positions its children once per frame. This means that inside script blocks it is possible for the underlying children to have changed, but the Column to have not yet been updated accordingly.</db:para>
<db:para>This method forces the Column to immediately respond to any outstanding changes in its children.</db:para>
<db:para><db:emphasis role="bold">Note</db:emphasis>: methods in general should only be called after the Component has completed.</db:para>
<db:para>This method was introduced in Qt 5.9.</db:para>
</db:section>
</db:section>
</db:article>
