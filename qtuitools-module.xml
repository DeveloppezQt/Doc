<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt UI Tools C++ Classes</db:title>
<db:productname>QtUiTools</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt UI Tools Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides classes to handle forms created with Qt Designer.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Provides classes to handle forms created with Qt Designer.</db:para>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="quiloader.xml" xlink:role="class">QUiLoader</db:link></db:term>
<db:listitem>
<db:para>The QUiLoader class enables standalone applications to dynamically create user interfaces at run-time using the information stored in UI files or specified in plugin paths.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>These forms are processed at run-time to produce dynamically-generated user interfaces. In order to generate a form at run-time, a resource file containing a UI file is needed. Applications that use the form handling classes need to be configured to be built against the <db:link xlink:href="qtuitools-module.xml">QtUiTools</db:link> module. This is done by including the following declaration in a <db:code>qmake</db:code> project file to ensure that the application is compiled and linked appropriately.</db:para>
<db:programlisting language="cpp">QT += uitools
</db:programlisting>
<db:para>A form loader object, provided by the <db:link xlink:href="quiloader.xml">QUiLoader</db:link> class, is used to construct the user interface. This user interface can be retrieved from any <db:link xlink:href="qiodevice.xml">QIODevice</db:link>; for example, a <db:link xlink:href="qfile.xml">QFile</db:link> object can be used to obtain a form stored in a project's resources. The <db:link xlink:href="quiloader.xml#load">QUiLoader::load</db:link>() function takes the user interface description contained in the file and constructs the form widget.</db:para>
</db:section>
</db:article>
