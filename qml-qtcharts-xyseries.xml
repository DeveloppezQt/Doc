<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>XYSeries QML Type</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qml-qtcharts-xyseries.xml">XYSeries</db:link> type is a base type for line, spline and scatter series.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtCharts 2.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtcharts-lineseries.xml" xlink:role="">LineSeries</db:link>, <db:link xlink:href="qml-qtcharts-scatterseries.xml" xlink:role="">ScatterSeries</db:link>, and <db:link xlink:href="qml-qtcharts-splineseries.xml" xlink:role="">SplineSeries</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtcharts-abstractseries.xml">AbstractSeries</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtcharts-xyseries.xml">XYSeries</db:link> class is a base class for line, spline and scatter series. The class cannot be instantiated directly.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="axisAngular-prop">
<db:title>axisAngular : AbstractAxis</db:title>
<db:para>The angular axis used for the series, drawn around the polar chart view.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#axisX-prop">axisX</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisRadial-prop">
<db:title>axisRadial : AbstractAxis</db:title>
<db:para>The radial axis used for the series, drawn inside the polar chart view.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#axisY-prop">axisY</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisX-prop">
<db:title>axisX : AbstractAxis</db:title>
<db:para>The x axis used for the series. If you leave both axisX and <db:link xlink:href="qml-qtcharts-xyseries.xml#axisXTop-prop">axisXTop</db:link> undefined, a <db:link xlink:href="qml-qtcharts-valueaxis.xml">ValueAxis</db:link> is created for the series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#axisXTop-prop">axisXTop</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisXTop-prop">
<db:title>axisXTop : AbstractAxis</db:title>
<db:para>The x axis used for the series, drawn on top of the chart view. Note that you can only provide either <db:link xlink:href="qml-qtcharts-xyseries.xml#axisX-prop">axisX</db:link> or axisXTop, but not both.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#axisX-prop">axisX</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisY-prop">
<db:title>axisY : AbstractAxis</db:title>
<db:para>The y axis used for the series. If you leave both axisY and <db:link xlink:href="qml-qtcharts-xyseries.xml#axisYRight-prop">axisYRight</db:link> undefined, a <db:link xlink:href="qml-qtcharts-valueaxis.xml">ValueAxis</db:link> is created for the series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#axisYRight-prop">axisYRight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisYRight-prop">
<db:title>axisYRight : AbstractAxis</db:title>
<db:para>The y axis used for the series, drawn to the right on the chart view. Note that you can only provide either <db:link xlink:href="qml-qtcharts-xyseries.xml#axisY-prop">axisY</db:link> or axisYRight, but not both.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#axisY-prop">axisY</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="color-prop">
<db:title>color : color</db:title>
<db:para>The color of the series. This is line (pen) color in case of <db:link xlink:href="qml-qtcharts-lineseries.xml">LineSeries</db:link> or <db:link xlink:href="qml-qtcharts-splineseries.xml">SplineSeries</db:link> and fill (brush) color in case of <db:link xlink:href="qml-qtcharts-scatterseries.xml">ScatterSeries</db:link> or <db:link xlink:href="qml-qtcharts-areaseries.xml">AreaSeries</db:link>.</db:para>
</db:section>
<db:section xml:id="pointLabelsClipping-prop">
<db:title>pointLabelsClipping : bool</db:title>
<db:para>Defines the clipping for data point labels. True by default. The labels on the edge of the plot area are cut when clipping is enabled.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsVisible-prop">pointLabelsVisible</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointLabelsColor-prop">
<db:title>pointLabelsColor : font</db:title>
<db:para>Defines the color used for data point labels. By default, the color is the color of the brush defined in theme for labels.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsFormat-prop">pointLabelsFormat</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointLabelsFont-prop">
<db:title>pointLabelsFont : font</db:title>
<db:para>Defines the font used for data point labels.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsFormat-prop">pointLabelsFormat</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointLabelsFormat-prop">
<db:title>pointLabelsFormat : string</db:title>
<db:para>The <db:code role="parameter">format</db:code> used for showing labels with series points.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member>pointLabelsFormat</db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsVisible-prop">pointLabelsVisible</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsFont-prop">pointLabelsFont</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsColor-prop">pointLabelsColor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointLabelsVisible-prop">
<db:title>pointLabelsVisible : bool</db:title>
<db:para>Defines the visibility for data point labels.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsFormat-prop">pointLabelsFormat</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsClipping-prop">pointLabelsClipping</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointsVisible-prop">
<db:title>pointsVisible : bool</db:title>
<db:para>Controls if the data points are visible and should be drawn.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="onClicked-signal">
<db:title>onClicked(QPointF <db:emphasis>point</db:emphasis>)</db:title>
<db:para>Signal is emitted when user clicks the <db:code role="parameter">point</db:code> on chart. The <db:code role="parameter">point</db:code> is the point where the press was triggered. For example:</db:para>
<db:programlisting language="cpp">LineSeries {
    XYPoint { x: 0; y: 0 }
    XYPoint { x: 1.1; y: 2.1 }
    onClicked: console.log(&quot;onClicked: &quot; + point.x + &quot;, &quot; + point.y);
}
</db:programlisting>
<db:note>
<db:para>The corresponding handler is <db:code>onOnClicked</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#onPressed-signal">onPressed</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#onReleased-signal">onReleased</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#onDoubleClicked-signal">onDoubleClicked</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="onColorChanged-signal">
<db:title>onColorChanged(color <db:emphasis>color</db:emphasis>)</db:title>
<db:para>Signal is emitted when the line (pen) color has changed to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnColorChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onDoubleClicked-signal">
<db:title>onDoubleClicked(QPointF <db:emphasis>point</db:emphasis>)</db:title>
<db:para>Signal is emitted when user doubleclicks the <db:code role="parameter">point</db:code> on chart. The <db:code role="parameter">point</db:code> is the point where the first press was triggered. For example:</db:para>
<db:programlisting language="cpp">LineSeries {
    XYPoint { x: 0; y: 0 }
    XYPoint { x: 1.1; y: 2.1 }
    onDoubleClicked: console.log(&quot;onDoubleClicked: &quot; + point.x + &quot;, &quot; + point.y);
}
</db:programlisting>
<db:note>
<db:para>The corresponding handler is <db:code>onOnDoubleClicked</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#onPressed-signal">onPressed</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#onReleased-signal">onReleased</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#onClicked-signal">onClicked</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="onHovered-signal">
<db:title>onHovered(point <db:emphasis>point</db:emphasis>, bool <db:emphasis>state</db:emphasis>)</db:title>
<db:para>This signal is emitted when user has hovered over or away from the series. <db:code role="parameter">point</db:code> shows the origin (coordinate) of the hover event. <db:code role="parameter">state</db:code> is true when user has hovered over the series and false when hover has moved away from the series.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnHovered</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onLabelsFormatChanged-signal">
<db:title>onLabelsFormatChanged(string <db:emphasis>format</db:emphasis>)</db:title>
<db:para>Signal is emitted when the <db:code role="parameter">format</db:code> of data value labels is changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnLabelsFormatChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onPointAdded-signal">
<db:title>onPointAdded(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Signal is emitted when a point has been added at <db:code role="parameter">index</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPointAdded</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onPointLabelsClippingChanged-signal">
<db:title>onPointLabelsClippingChanged(bool <db:emphasis>clipping</db:emphasis>)</db:title>
<db:para>The clipping of the data point labels is changed to <db:code role="parameter">clipping</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPointLabelsClippingChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onPointLabelsColorChanged-signal">
<db:title>onPointLabelsColorChanged(Color <db:emphasis>color</db:emphasis>)</db:title>
<db:para>The color used for data point labels is changed to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPointLabelsColorChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onPointLabelsFontChanged-signal">
<db:title>onPointLabelsFontChanged(Font <db:emphasis>font</db:emphasis>)</db:title>
<db:para>The font used for data point labels is changed to <db:code role="parameter">font</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPointLabelsFontChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onPointLabelsFormatChanged-signal">
<db:title>onPointLabelsFormatChanged(string <db:emphasis>format</db:emphasis>)</db:title>
<db:para>Signal is emitted when the <db:code role="parameter">format</db:code> of data point labels is changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPointLabelsFormatChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onPointLabelsVisibilityChanged-signal">
<db:title>onPointLabelsVisibilityChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:para>The visibility of the data point labels is changed to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPointLabelsVisibilityChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onPointRemoved-signal">
<db:title>onPointRemoved(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Signal is emitted when a point has been removed from <db:code role="parameter">index</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPointRemoved</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onPointReplaced-signal">
<db:title>onPointReplaced(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Signal is emitted when a point has been replaced at <db:code role="parameter">index</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPointReplaced</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onPointsRemoved-signal">
<db:title>onPointsRemoved(int <db:emphasis>index</db:emphasis>, int <db:emphasis>count</db:emphasis>)</db:title>
<db:para>Signal is emitted when a <db:code role="parameter">count</db:code> of points has been removed starting at <db:code role="parameter">index</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPointsRemoved</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onPointsReplaced-signal">
<db:title>onPointsReplaced()</db:title>
<db:para>Signal is emitted when all points have been replaced with other points.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPointsReplaced</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="onPressed-signal">
<db:title>onPressed(QPointF <db:emphasis>point</db:emphasis>)</db:title>
<db:para>Signal is emitted when user presses the <db:code role="parameter">point</db:code> on chart. For example:</db:para>
<db:programlisting language="cpp">LineSeries {
    XYPoint { x: 0; y: 0 }
    XYPoint { x: 1.1; y: 2.1 }
    onPressed: console.log(&quot;onPressed: &quot; + point.x + &quot;, &quot; + point.y);
}
</db:programlisting>
<db:note>
<db:para>The corresponding handler is <db:code>onOnPressed</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#onClicked-signal">onClicked</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#onReleased-signal">onReleased</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#onDoubleClicked-signal">onDoubleClicked</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="onReleased-signal">
<db:title>onReleased(QPointF <db:emphasis>point</db:emphasis>)</db:title>
<db:para>Signal is emitted when user releases a press that was triggered on a <db:code role="parameter">point</db:code> on chart. For example:</db:para>
<db:programlisting language="cpp">LineSeries {
    XYPoint { x: 0; y: 0 }
    XYPoint { x: 1.1; y: 2.1 }
    onReleased: console.log(&quot;onReleased: &quot; + point.x + &quot;, &quot; + point.y);
}
</db:programlisting>
<db:note>
<db:para>The corresponding handler is <db:code>onOnReleased</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#onPressed-signal">onPressed</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#onClicked-signal">onClicked</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#onDoubleClicked-signal">onDoubleClicked</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="append-method">
<db:title>append(real <db:emphasis>x</db:emphasis>, real <db:emphasis>y</db:emphasis>)</db:title>
<db:para>Append point (<db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>) to the series</db:para>
</db:section>
<db:section xml:id="at-method">
<db:title>QPointF at(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Returns point at <db:code role="parameter">index</db:code>. Returns (0, 0) if the index is not valid.</db:para>
</db:section>
<db:section xml:id="insert-method">
<db:title>insert(int <db:emphasis>index</db:emphasis>, real <db:emphasis>x</db:emphasis>, real <db:emphasis>y</db:emphasis>)</db:title>
<db:para>Inserts point (<db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>) to the <db:code role="parameter">index</db:code>. If index is 0 or smaller than 0 the point is prepended to the list of points. If index is the same as or bigger than count, the point is appended to the list of points.</db:para>
</db:section>
<db:section xml:id="remove-method">
<db:title>remove(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Removes a point from the series at <db:code role="parameter">index</db:code>.</db:para>
</db:section>
<db:section xml:id="remove-method-1">
<db:title>remove(real <db:emphasis>x</db:emphasis>, real <db:emphasis>y</db:emphasis>)</db:title>
<db:para>Removes point (<db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>) from the series. Does nothing, if point (x, y) does not exist.</db:para>
</db:section>
<db:section xml:id="removePoints-method">
<db:title>removePoints(int <db:emphasis>index</db:emphasis>, int <db:emphasis>count</db:emphasis>)</db:title>
<db:para>Removes <db:code role="parameter">count</db:code> points from the series starting at <db:code role="parameter">index</db:code>.</db:para>
</db:section>
<db:section xml:id="replace-method">
<db:title>replace(real <db:emphasis>oldX</db:emphasis>, real <db:emphasis>oldY</db:emphasis>, real <db:emphasis>newX</db:emphasis>, real <db:emphasis>newY</db:emphasis>)</db:title>
<db:para>Replaces point (<db:code role="parameter">oldX</db:code>, <db:code role="parameter">oldY</db:code>) with point (<db:code role="parameter">newX</db:code>, <db:code role="parameter">newY</db:code>). Does nothing, if point (oldX, oldY) does not exist.</db:para>
</db:section>
</db:section>
</db:article>
