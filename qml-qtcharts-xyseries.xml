<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>XYSeries QML Type</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A base type for line, spline, and scatter series.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtCharts 2.9</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtcharts-lineseries.xml" xlink:role="">LineSeries</db:link>, <db:link xlink:href="qml-qtcharts-scatterseries.xml" xlink:role="">ScatterSeries</db:link>, and <db:link xlink:href="qml-qtcharts-splineseries.xml" xlink:role="">SplineSeries</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtcharts-abstractseries.xml">AbstractSeries</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In C++:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qxyseries-qtcharts.xml">QXYSeries</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtcharts-xyseries.xml">XYSeries</db:link> supports displaying best fit line on a chart. Best fit line is a line through a chart that expresses the relationship between points.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="axisAngular-prop">
<db:title>axisAngular : AbstractAxis</db:title>
<db:para>The angular axis used for the series, drawn around the polar chart view.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#axisX-prop">axisX</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisRadial-prop">
<db:title>axisRadial : AbstractAxis</db:title>
<db:para>The radial axis used for the series, drawn inside the polar chart view.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#axisY-prop">axisY</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisX-prop">
<db:title>axisX : AbstractAxis</db:title>
<db:para>The x-axis used for the series. If you leave both axisX and <db:link xlink:href="qml-qtcharts-xyseries.xml#axisXTop-prop">axisXTop</db:link> undefined, a value axis is created for the series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#axisXTop-prop">axisXTop</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-valueaxis.xml">ValueAxis</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisXTop-prop">
<db:title>axisXTop : AbstractAxis</db:title>
<db:para>The x-axis used for the series, drawn on top of the chart view.</db:para>
<db:note>
<db:para>You can only provide either <db:link xlink:href="qml-qtcharts-xyseries.xml#axisX-prop">axisX</db:link> or axisXTop, not both.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#axisX-prop">axisX</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisY-prop">
<db:title>axisY : AbstractAxis</db:title>
<db:para>The y-axis used for the series. If you leave both axisY and <db:link xlink:href="qml-qtcharts-xyseries.xml#axisYRight-prop">axisYRight</db:link> undefined, a value axis is created for the series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#axisYRight-prop">axisYRight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-valueaxis.xml">ValueAxis</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisYRight-prop">
<db:title>axisYRight : AbstractAxis</db:title>
<db:para>The y-axis used for the series, drawn to the right on the chart view.</db:para>
<db:note>
<db:para>You can only provide either <db:link xlink:href="qml-qtcharts-xyseries.xml#axisY-prop">axisY</db:link> or axisYRight, not both.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#axisY-prop">axisY</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="bestFitLineColor-prop">
<db:title>bestFitLineColor : color</db:title>
<db:para>The color of best fit line.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#bestFitLineVisible-prop">bestFitLineVisible</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="bestFitLineVisible-prop">
<db:title>bestFitLineVisible : bool</db:title>
<db:para>The visibility of the best fit line. This property is <db:code>false</db:code> by default.</db:para>
</db:section>
<db:section xml:id="color-prop">
<db:title>color : color</db:title>
<db:para>The color of the series. This is the line (pen) color in case of <db:link xlink:href="qml-qtcharts-lineseries.xml">LineSeries</db:link> or <db:link xlink:href="qml-qtcharts-splineseries.xml">SplineSeries</db:link> and the fill (brush) color in case of <db:link xlink:href="qml-qtcharts-scatterseries.xml">ScatterSeries</db:link> or <db:link xlink:href="qml-qtcharts-areaseries.xml">AreaSeries</db:link>.</db:para>
</db:section>
<db:section xml:id="pointLabelsClipping-prop">
<db:title>pointLabelsClipping : bool</db:title>
<db:para>The clipping for data point labels. This property is <db:code>true</db:code> by default. The labels on the edge of the plot area are cut when clipping is enabled.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsVisible-prop">pointLabelsVisible</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointLabelsColor-prop">
<db:title>pointLabelsColor : font</db:title>
<db:para>The color used for data point labels. By default, the color is the color of the brush defined in theme for labels.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsFormat-prop">pointLabelsFormat</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointLabelsFont-prop">
<db:title>pointLabelsFont : font</db:title>
<db:para>The font used for data point labels.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsFormat-prop">pointLabelsFormat</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointLabelsFormat-prop">
<db:title>pointLabelsFormat : string</db:title>
<db:para>The format used for showing labels with data points.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsVisible-prop">pointLabelsVisible</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsFont-prop">pointLabelsFont</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsColor-prop">pointLabelsColor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointLabelsVisible-prop">
<db:title>pointLabelsVisible : bool</db:title>
<db:para>The visibility of data point labels. This property is <db:code>false</db:code> by default.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsFormat-prop">pointLabelsFormat</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pointLabelsClipping-prop">pointLabelsClipping</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointsVisible-prop">
<db:title>pointsVisible : bool</db:title>
<db:para>Whether the data points are visible and should be drawn.</db:para>
</db:section>
<db:section xml:id="selectedColor-prop">
<db:title>selectedColor : color</db:title>
<db:para>The color of the selected points. This is the fill (brush) color of points marked as selected. If not specified, value of <db:link xlink:href="qxyseries-qtcharts.xml#color-prop">QXYSeries::color</db:link> is used as default.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#color-prop">color</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="clicked-signal">
<db:title>clicked(point <db:emphasis>point</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user triggers a mouse event by clicking the point <db:code role="parameter">point</db:code> in the chart. For example:</db:para>
<db:programlisting language="cpp">LineSeries {
    XYPoint { x: 0; y: 0 }
    XYPoint { x: 1.1; y: 2.1 }
    onClicked: console.log(&quot;onClicked: &quot; + point.x + &quot;, &quot; + point.y);
}
</db:programlisting>
<db:para>The corresponding signal handler is <db:code>onClicked()</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onClicked</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pressed-signal">pressed</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#released-signal">released</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#doubleClicked-signal">doubleClicked</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="doubleClicked-signal">
<db:title>doubleClicked(point <db:emphasis>point</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user double-clicks the data point <db:code role="parameter">point</db:code> in the chart. The <db:code role="parameter">point</db:code> is the point where the first press was triggered. For example:</db:para>
<db:programlisting language="cpp">LineSeries {
    XYPoint { x: 0; y: 0 }
    XYPoint { x: 1.1; y: 2.1 }
    onDoubleClicked: console.log(&quot;onDoubleClicked: &quot; + point.x + &quot;, &quot; + point.y);
}
</db:programlisting>
<db:para>The corresponding signal handler is <db:code>onDoubleClicked()</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onDoubleClicked</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pressed-signal">pressed</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#released-signal">released</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#clicked-signal">clicked</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hovered-signal">
<db:title>hovered(point <db:emphasis>point</db:emphasis>, bool <db:emphasis>state</db:emphasis>)</db:title>
<db:para>This signal is emitted when a mouse is hovered over the point <db:code role="parameter">point</db:code> in the chart. When the mouse moves over the point, <db:code role="parameter">state</db:code> turns <db:code>true</db:code>, and when the mouse moves away again, it turns <db:code>false</db:code>.</db:para>
<db:para>The corresponding signal handler is <db:code>onHovered()</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onHovered</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="pointAdded-signal">
<db:title>pointAdded(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted when a point is added at the position specified by <db:code role="parameter">index</db:code>.</db:para>
<db:para>The corresponding signal handler is <db:code>onPointAdded()</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPointAdded</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="pointRemoved-signal">
<db:title>pointRemoved(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted when a point is removed from the position specified by <db:code role="parameter">index</db:code>.</db:para>
<db:para>The corresponding signal handler is <db:code>onPointRemoved()</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPointRemoved</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="pointReplaced-signal">
<db:title>pointReplaced(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted when a point is replaced at the position specified by <db:code role="parameter">index</db:code>.</db:para>
<db:para>The corresponding signal handler is <db:code>onPointReplaced()</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPointReplaced</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="pointsRemoved-signal">
<db:title>pointsRemoved(int <db:emphasis>index</db:emphasis>, int <db:emphasis>count</db:emphasis>)</db:title>
<db:para>This signal is emitted when the number of points specified by <db:code role="parameter">count</db:code> is removed starting at the position specified by <db:code role="parameter">index</db:code>.</db:para>
<db:para>The corresponding signal handler is <db:code>onPointRemoved()</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPointsRemoved</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="pointsReplaced-signal">
<db:title>pointsReplaced()</db:title>
<db:para>This signal is emitted when all points are replaced with other points.</db:para>
<db:para>The corresponding signal handler is <db:code>onPointsReplaced()</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPointsReplaced</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="pressed-signal">
<db:title>pressed(point <db:emphasis>point</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user presses the data point <db:code role="parameter">point</db:code> in the chart and holds down the mouse button. For example:</db:para>
<db:programlisting language="cpp">LineSeries {
    XYPoint { x: 0; y: 0 }
    XYPoint { x: 1.1; y: 2.1 }
    onPressed: console.log(&quot;onPressed: &quot; + point.x + &quot;, &quot; + point.y);
}
</db:programlisting>
<db:para>The corresponding signal handler is <db:code>onPressed()</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPressed</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#clicked-signal">clicked</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#released-signal">released</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#doubleClicked-signal">doubleClicked</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="released-signal">
<db:title>released(point <db:emphasis>point</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user releases the mouse press on the data point specified by <db:code role="parameter">point</db:code>. For example:</db:para>
<db:programlisting language="cpp">LineSeries {
    XYPoint { x: 0; y: 0 }
    XYPoint { x: 1.1; y: 2.1 }
    onReleased: console.log(&quot;onReleased: &quot; + point.x + &quot;, &quot; + point.y);
}
</db:programlisting>
<db:para>The corresponding signal handler is <db:code>onReleased()</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onReleased</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#pressed-signal">pressed</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#clicked-signal">clicked</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtcharts-xyseries.xml#doubleClicked-signal">doubleClicked</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="append-method">
<db:title>append(real <db:emphasis>x</db:emphasis>, real <db:emphasis>y</db:emphasis>)</db:title>
<db:para>Appends a point with the coordinates <db:code role="parameter">x</db:code> and <db:code role="parameter">y</db:code> to the series.</db:para>
</db:section>
<db:section xml:id="at-method">
<db:title>QPointF at(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Returns the point at the position specified by <db:code role="parameter">index</db:code>. Returns (0, 0) if the index is not valid.</db:para>
</db:section>
<db:section xml:id="insert-method">
<db:title>insert(int <db:emphasis>index</db:emphasis>, real <db:emphasis>x</db:emphasis>, real <db:emphasis>y</db:emphasis>)</db:title>
<db:para>Inserts a point with the coordinates <db:code role="parameter">x</db:code> and <db:code role="parameter">y</db:code> to the position specified by <db:code role="parameter">index</db:code> in the series. If the index is 0 or less than 0, the point is prepended to the list of points. If the index is equal to or greater than than the number of points in the series, the point is appended to the list of points.</db:para>
</db:section>
<db:section xml:id="remove-method">
<db:title>remove(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Removes the point at the position specified by <db:code role="parameter">index</db:code> from the series.</db:para>
</db:section>
<db:section xml:id="remove-method-1">
<db:title>remove(real <db:emphasis>x</db:emphasis>, real <db:emphasis>y</db:emphasis>)</db:title>
<db:para>Removes the point with the coordinates <db:code role="parameter">x</db:code> and <db:code role="parameter">y</db:code> from the series. Does nothing if the point does not exist.</db:para>
</db:section>
<db:section xml:id="removePoints-method">
<db:title>removePoints(int <db:emphasis>index</db:emphasis>, int <db:emphasis>count</db:emphasis>)</db:title>
<db:para>Removes the number of points specified by <db:code role="parameter">count</db:code> from the series starting at the position specified by <db:code role="parameter">index</db:code>.</db:para>
</db:section>
<db:section xml:id="replace-method">
<db:title>replace(real <db:emphasis>oldX</db:emphasis>, real <db:emphasis>oldY</db:emphasis>, real <db:emphasis>newX</db:emphasis>, real <db:emphasis>newY</db:emphasis>)</db:title>
<db:para>Replaces the point with the coordinates <db:code role="parameter">oldX</db:code> and <db:code role="parameter">oldY</db:code> with the point with the coordinates <db:code role="parameter">newX</db:code> and <db:code role="parameter">newY</db:code>. Does nothing if the old point does not exist.</db:para>
</db:section>
</db:section>
</db:article>
