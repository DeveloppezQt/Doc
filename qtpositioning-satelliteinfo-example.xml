<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>SatelliteInfo (QML)</db:title>
<db:productname>QtPositioning</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Positioning Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The SatelliteInfo example shows the available satellites using Sky View or RSSI View and the user's current position. The satellites currently contributing to the GPS fix are marked as pink.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>This example demonstrates the usage of <db:link xlink:href="qtpositioning-qmlmodule.xml">Qt Positioning QML API</db:link>:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtpositioning-positionsource.xml">PositionSource</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtpositioning-satellitesource.xml">SatelliteSource</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The example shows satellite information in two different tabs. The data is taken from the <db:link xlink:href="qml-qtpositioning-satellitesource.xml#satellitesInView-prop">SatelliteSource::satellitesInView</db:link> and <db:link xlink:href="qml-qtpositioning-satellitesource.xml#satellitesInUse-prop">SatelliteSource::satellitesInUse</db:link> properties.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/example-skyview.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The <db:emphasis>Sky View</db:emphasis> tab shows the relative satellite positions using the <db:code>Azimuth</db:code> and <db:code>Elevation</db:code> <db:link xlink:href="qml-geosatelliteinfo.xml#attribute-method">attributes</db:link>.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/example-rssiview.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The RSSI View tab shows the signal strength of satellites in view using the <db:link xlink:href="qml-geosatelliteinfo.xml#signalStrength-prop">signalStrength</db:link> property.</db:para>
<db:para>In both cases, the displayed numbers are the individual <db:link xlink:href="qml-geosatelliteinfo.xml#satelliteIdentifier-prop">satellite identifiers</db:link>. The satellites that are currently used to calculate the GPS fix are marked pink.</db:para>
<db:para>The <db:emphasis>Current Position</db:emphasis> block below the satellite information uses <db:link xlink:href="qml-qtpositioning-positionsource.xml#position-prop">PositionSource::position</db:link> property to show the current latitude and longitude.</db:para>
<db:para>The <db:emphasis>Status</db:emphasis> block shows the current mode or the last error.</db:para>
<db:para>The application operates in three different modes:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Application mode</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>Running</db:para>
</db:td>
<db:td>
<db:para>The application continuously queries the system for satellite and position updates. When new data is available it will be displayed.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Stopped</db:para>
</db:td>
<db:td>
<db:para>The application stops updating the satellite and position information.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Single</db:para>
</db:td>
<db:td>
<db:para>The application makes a single satellite and position update request.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The application automatically switches into a simulation mode if the platform does not provide satellite or position information. The simulation mode uses an <db:link xlink:href="position-plugin-nmea.xml">NMEA plugin</db:link> with pre-recorded NMEA data.</db:para>
<db:note>
<db:para>Apple does not provide any APIs to retrieve satellite information, so on <db:code>macOS</db:code> and <db:code>iOS</db:code> the satellite information will always be taken from pre-recorded data. These API limitations do not affect positioning information, so current position can be displayed correctly.</db:para>
</db:note>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="https://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:guilabel>Welcome</db:guilabel> mode and select the example from <db:guilabel>Examples</db:guilabel>. For more information, visit <db:link xlink:href="https://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section xml:id="retrieving-current-position">
<db:title>Retrieving Current Position</db:title>
<db:para>The current position is retrieved from the <db:link xlink:href="qml-qtpositioning-positionsource.xml">PositionSource</db:link> QML object. The <db:code>onPositionChanged</db:code> handler is used to receive position updates. The string representations of latitude and longitude are extracted from the <db:link xlink:href="qml-qtpositioning-position.xml#coordinate-prop">coordinate</db:link> property.</db:para>
<db:programlisting language="qml">PositionSource {
    id: positionSource
    name: root.simulation ? &quot;nmea&quot; : &quot;&quot;
    onPositionChanged: {
        let posData = position.coordinate.toString().split(&quot;, &quot;)
        positionAndStatus.latitudeString = posData[0]
        positionAndStatus.longitudeString = posData[1]
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="retrieving-satellite-information">
<db:title>Retrieving Satellite Information</db:title>
<db:para>Similarly to the position, the current satellite information is retrieved from the <db:link xlink:href="qml-qtpositioning-satellitesource.xml">SatelliteSource</db:link> QML object. The <db:code>onSatellitesInViewChanged</db:code> and <db:code>onSatellitesInUseChanged</db:code> handlers are used to get the updated satellites in view and satellites in use respectively. The data is then combined into a single model, which is passed to both <db:emphasis>Sky View</db:emphasis> and <db:emphasis>RSSI View</db:emphasis> tabs.</db:para>
<db:programlisting language="qml">SatelliteSource {
    id: satelliteSource
    name: root.simulation ? &quot;nmea&quot; : &quot;&quot;
    onSatellitesInViewChanged: root.updateModel()
    onSatellitesInUseChanged: {
        root.inUseIds.clear()
        for (var i = 0; i &amp;lt; satellitesInUse.length; ++i)
            root.inUseIds.add(satellitesInUse[i].satelliteIdentifier)

        root.updateModel()
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="qml-module-registration">
<db:title>QML Module Registration</db:title>
<db:section xml:id="cmake-build">
<db:title>CMake Build</db:title>
<db:para>For a CMake-based build, we need to add the following to the <db:code>CMakeLists.txt</db:code>:</db:para>
<db:programlisting language="cpp">qt_add_qml_module(satelliteinfo
    URI SatelliteInformation
    VERSION 1.0
    QML_FILES
        Button.qml
        Main.qml
        RssiView.qml
        PositionAndStatus.qml
        SkyView.qml
        ViewSwitch.qml
)
</db:programlisting>
</db:section>
<db:section xml:id="qmake-build">
<db:title>qmake Build</db:title>
<db:para>For a qmake build, we need to modify the <db:code>satelliteinfo.pro</db:code> file in the following way:</db:para>
<db:programlisting language="cpp">qml_resources.files = \
    qmldir \
    Button.qml \
    Main.qml \
    RssiView.qml \
    PositionAndStatus.qml \
    SkyView.qml \
    ViewSwitch.qml

qml_resources.prefix = /qt/qml/SatelliteInformation

RESOURCES += qml_resources
</db:programlisting>
</db:section>
</db:section>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtpositioning.git/tree/examples/positioning/satelliteinfo?h=6.5">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
