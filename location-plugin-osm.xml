<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Location Open Street Map Plugin</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Uses Open Street Map and related services.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="overview">
<db:title>Overview</db:title>
<db:para>This geo services plugin allows applications to access <db:link xlink:href="http://openstreetmap.org">Open Street Map</db:link> location based services using the Qt Location API.</db:para>
<db:para>Data, imagery and map information provided by <db:link xlink:href="http://korona.geog.uni-heidelberg.de/">OpenMapSurfer</db:link>, <db:link xlink:href="http://www.thunderforest.com/">ThunderForest</db:link>, OpenStreetMap and contributors. The data is available under the <db:link xlink:href="http://www.opendatacommons.org/licenses/odbl">Open Database License</db:link>.</db:para>
<db:para>The Open Street Map geo services plugin can be loaded by using the plugin key &quot;osm&quot;.</db:para>
<db:note>
<db:para>Since Qt 5.6.2, the available map types offered by this plugin may change without notice depending on the actual availability of each provider. To prevent these changes, either a different geo service plugin should be used, or the plugin parameter <db:emphasis>osm.mapping.providersrepository.address</db:emphasis> should be set to a user-specified repository, in order to take full control over (and accept <db:emphasis role="bold">responsibility</db:emphasis> for) selecting the provider that is used for each map type.</db:para>
</db:note>
</db:section>
<db:section xml:id="parameters">
<db:title>Parameters</db:title>
<db:section xml:id="optional-parameters">
<db:title>Optional parameters</db:title>
<db:para>The following table lists optional parameters that can be passed to the Open Street Map plugin.</db:para>
<db:note>
<db:para>Since Qt 5.5 all parameters below must be prefixed with <db:code>osm</db:code>. Previous versions did not require a prefix.</db:para>
</db:note>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Parameter</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>osm.useragent</db:para>
</db:td>
<db:td>
<db:para>User agent string set when making network requests. This parameter should be set to a value that uniquely identifies the application. Note that providers might block applications not setting this parameter, leaving it to the stock plugin user agent (e.g., <db:link xlink:href="http://wiki.openstreetmap.org/wiki/Nominatim_usage_policy">Nominatim</db:link> for geocoding)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>osm.mapping.custom.host</db:para>
</db:td>
<db:td>
<db:para>Url string set when making network requests to the tile server. This parameter should be set to a valid server url with the correct osm api and the <db:link xlink:href="qml-qtlocation-map.xml#activeMapType-prop">Map::activeMapType</db:link> to the corresponding <db:link xlink:href="qml-qtlocation-maptype.xml">MapType</db:link>.CustomMap. The CustomMap will only be available if this parameter is set.</db:para>
<db:note>
<db:para>Setting the mapping.custom.host parameter to a new server renders the map tile cache useless for the old custommap style.</db:para>
</db:note>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>osm.mapping.custom.mapcopyright</db:para>
</db:td>
<db:td>
<db:para>Custom map copryright string is used when setting the <db:link xlink:href="qml-qtlocation-map.xml#activeMapType-prop">Map::activeMapType</db:link> to <db:link xlink:href="qml-qtlocation-maptype.xml">MapType</db:link>.CustomMap via urlprefix parameter. This copyright will only be used when using the CustomMap from above. If empty no map copyright will be displayed for the custom map.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>osm.mapping.custom.datacopyright</db:para>
</db:td>
<db:td>
<db:para>Custom data copryright string is used when setting the <db:link xlink:href="qml-qtlocation-map.xml#activeMapType-prop">Map::activeMapType</db:link> to <db:link xlink:href="qml-qtlocation-maptype.xml">MapType</db:link>.CustomMap via urlprefix parameter. This copyright will only be used when using the CustomMap from above. If empty no data copyright will be displayed for the custom map.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>osm.mapping.providersrepository.address</db:para>
</db:td>
<db:td>
<db:para>The OpenStreetMap plugin retrieves the provider's information from a remote repository. This is done to prevent using hardcoded servers by default, which may become unavailable. By default this information is fetched from <db:link xlink:href="http://maps-redirect.qt.io">maps-redirect.qt.io</db:link>. Setting this parameter changes the provider repository address to a user-specified one, which must contain the files <db:code>street</db:code>, <db:code>satellite</db:code>, <db:code>cycle</db:code>, <db:code>transit</db:code>, <db:code>night-transit</db:code>, <db:code>terrain</db:code> and <db:code>hiking</db:code>, each of which must contain valid provider information.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>osm.mapping.providersrepository.disabled</db:para>
</db:td>
<db:td>
<db:para>By default, the OpenStreetMap plugin retrieves the provider's information from a remote repository to avoid a loss of service due to unavailability of hardcoded services. The plugin, however, still contains fallback hardcoded provider data, in case the provider repository becomes unreachable. Setting this parameter to <db:emphasis role="bold">true</db:emphasis> makes the plugin use the hardcoded urls only and therefore prevents the plugin from fetching provider data from the remote repository.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>osm.routing.host</db:para>
</db:td>
<db:td>
<db:para>Url string set when making network requests to the routing server. This parameter should be set to a valid server url with the correct osrm API. If not specified the default <db:link xlink:href="http://router.project-osrm.org/route/v1/driving/">url</db:link> will be used.</db:para>
<db:note>
<db:para>The API documentation and sources are available at <db:link xlink:href="http://project-osrm.org/">Project OSRM</db:link>.</db:para>
</db:note>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>osm.routing.apiversion</db:para>
</db:td>
<db:td>
<db:para>String defining the api version of the (custom) OSRM server. Valid values are <db:emphasis role="bold">v4</db:emphasis> and <db:emphasis role="bold">v5</db:emphasis>. The default is <db:emphasis role="bold">v5</db:emphasis>. This parameter should be set only if <db:code>osm.routing.host</db:code> is set, and is an OSRM v4 server.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>osm.geocoding.host</db:para>
</db:td>
<db:td>
<db:para>Url string set when making network requests to the geocoding server. This parameter should be set to a valid server url with the correct osm API. If not specified the default <db:link xlink:href="http://nominatim.openstreetmap.org/">url</db:link> will be used.</db:para>
<db:note>
<db:para>The API documentation is available at <db:link xlink:href="https://wiki.openstreetmap.org/wiki/Nominatim">Project OSM Nominatim</db:link>.</db:para>
</db:note>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>osm.places.host</db:para>
</db:td>
<db:td>
<db:para>Url string set when making network requests to the places server. This parameter should be set to a valid server url with the correct osm API. If not specified the default <db:link xlink:href="http://nominatim.openstreetmap.org/search">url</db:link> will be used.</db:para>
<db:note>
<db:para>The API documentation is available at <db:link xlink:href="https://wiki.openstreetmap.org/wiki/Nominatim">Project OSM Nominatim</db:link>.</db:para>
</db:note>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="parameter-usage-example">
<db:title>Parameter Usage Example</db:title>
<db:para>The following example shows how to create an OSM plugin instance with parameters supplied for an useragent, and if necessary, a custom server url plus the corresponding copyright information for the tile provider. Additionally, it is possible to choose another routing server than the public osrm one.</db:para>
<db:section xml:id="qml">
<db:title>QML</db:title>
<db:programlisting language="cpp">Plugin {
    name: &quot;osm&quot;
    PluginParameter { name: &quot;osm.useragent&quot;; value: &quot;My great Qt OSM application&quot; }
    PluginParameter { name: &quot;osm.mapping.host&quot;; value: &quot;http://osm.tile.server.address/&quot; }
    PluginParameter { name: &quot;osm.mapping.copyright&quot;; value: &quot;All mine&quot; }
    PluginParameter { name: &quot;osm.routing.host&quot;; value: &quot;http://osrm.server.address/viaroute&quot; }
    PluginParameter { name: &quot;osm.geocoding.host&quot;; value: &quot;http://geocoding.server.address&quot; }
}
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="other-plugin-specific-information">
<db:title>Other Plugin-specific Information</db:title>
<db:section xml:id="tile-cache">
<db:title>Tile cache</db:title>
<db:para>The tiles are cached in a QtLocation/osm directory in <db:link xlink:href="qstandardpaths.xml#writableLocation">QStandardPaths::writableLocation</db:link> (<db:link xlink:href="qstandardpaths.xml#StandardLocation-enum">QStandardPaths::GenericCacheLocation</db:link>). On systems that have no concept of a shared cache, the application-specific <db:link xlink:href="qstandardpaths.xml#StandardLocation-enum">QStandardPaths::CacheLocation</db:link> is used instead.</db:para>
</db:section>
</db:section>
</db:article>
