<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>WebEngineScript QML Type</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Enables the programmatic injection of scripts in the JavaScript engine.</db:para>
<db:para>This type was introduced in QtWebEngine 1.1.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtWebEngine</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtWebEngine 1.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qwebenginescript.xml">QWebEngineScript</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>WebEngineScript is part of <db:simplelist><db:member>qmlvaluetypes</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtwebengine-webenginescript.xml">WebEngineScript</db:link> type enables the programmatic injection of so called <db:emphasis>user scripts</db:emphasis> in the JavaScript engine at different points, determined by <db:link xlink:href="qml-qtwebengine-webenginescript.xml#injectionPoint-prop">injectionPoint</db:link>, during the loading of web content.</db:para>
<db:para>Scripts can be executed either in the main JavaScript <db:emphasis>world</db:emphasis>, along with the rest of the JavaScript coming from the web contents, or in their own isolated world. While the DOM of the page can be accessed from any world, JavaScript variables of a function defined in one world are not accessible from a different one. The <db:link xlink:href="qml-qtwebengine-webenginescript.xml#worldId-prop">worldId</db:link> property provides some predefined IDs for this purpose.</db:para>
<db:para>The following <db:link xlink:href="https://wiki.greasespot.net/Metadata_Block">Greasemonkey</db:link> attributes are supported: <db:code>@exclude</db:code>, <db:code>@include</db:code>, <db:code>@name</db:code>, <db:code>@match</db:code>, and <db:code>@run-at</db:code>.</db:para>
<db:para>Use <db:link xlink:href="qml-qtwebengine-webenginescriptcollection.xml">WebEngineScriptCollection</db:link> to access a list of scripts attached to the web view.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="injectionPoint-prop">
<db:title>injectionPoint : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>injectionPoint</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The point in the loading process at which the script will be executed. The default value is <db:code>Deferred</db:code>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>WebEngineScript.DocumentCreation</db:para>
</db:td>
<db:td>
<db:para>The script will be executed as soon as the document is created. This is not suitable for any DOM operation.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineScript.DocumentReady</db:para>
</db:td>
<db:td>
<db:para>The script will run as soon as the DOM is ready. This is equivalent to the <db:code>DOMContentLoaded</db:code> event firing in JavaScript.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineScript.Deferred</db:para>
</db:td>
<db:td>
<db:para>The script will run when the page load finishes, or 500 ms after the document is ready, whichever comes first.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="name-prop">
<db:title>name : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>name</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The name of the script. Can be useful to retrieve a particular script from <db:link xlink:href="qml-qtwebengine-webenginescriptcollection.xml#find-method">WebEngineScriptCollection.find</db:link> method.</db:para>
</db:section>
<db:section xml:id="runOnSubframes-prop">
<db:title>runOnSubframes : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>runOnSubframes</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Set this property to <db:code>true</db:code> if the script is executed on every frame in the page, or <db:code>false</db:code> if it is only ran for the main frame. The default value is <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="sourceCode-prop">
<db:title>sourceCode : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>sourceCode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the JavaScript source code of the user script.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webenginescript.xml#sourceUrl-prop">sourceUrl</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sourceUrl-prop">
<db:title>sourceUrl : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>sourceUrl</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the remote source location of the user script (if any).</db:para>
<db:para>Unlike <db:link xlink:href="qml-qtwebengine-webenginescript.xml#sourceCode-prop">sourceCode</db:link>, this property allows referring to user scripts that are not already loaded in memory, for instance, when stored on disk.</db:para>
<db:para>Setting this property will change the <db:link xlink:href="qml-qtwebengine-webenginescript.xml#sourceCode-prop">sourceCode</db:link> of the script.</db:para>
<db:note>
<db:para>At present, only file-based sources are supported.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webenginescript.xml#sourceCode-prop">sourceCode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="worldId-prop">
<db:title>worldId : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>worldId</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The world ID defining which isolated world the script is executed in.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>WebEngineScript.MainWorld</db:para>
</db:td>
<db:td>
<db:para>The world used by the page's web contents. It can be useful in order to expose custom functionality to web contents in certain scenarios.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineScript.ApplicationWorld</db:para>
</db:td>
<db:td>
<db:para>The default isolated world used for application level functionality implemented in JavaScript.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineScript.UserWorld</db:para>
</db:td>
<db:td>
<db:para>The first isolated world to be used by scripts set by users if the application is not making use of more worlds. As a rule of thumb, if that functionality is exposed to the application users, each individual script should probably get its own isolated world.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
</db:article>
