<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ImageModel QML Type</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qml-qtlocation-imagemodel.xml">ImageModel</db:link> type provides a model of place images.</db:para>
<db:para>This type was introduced in Qt Location 5.5.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtLocation 5.3</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt Location 5.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>ImageModel is part of <db:simplelist><db:member>qml-QtLocation5-places</db:member><db:member>qml-QtLocation5-places-models</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtlocation-imagemodel.xml">ImageModel</db:link> is a read-only model used to fetch images related to a <db:link xlink:href="qml-qtlocation-place.xml">Place</db:link>. Binding a <db:link xlink:href="qml-qtlocation-place.xml">Place</db:link> via <db:link xlink:href="qml-qtlocation-imagemodel.xml#place-prop">ImageModel::place</db:link> initiates an initial fetch of images. The model performs fetches incrementally and is intended to be used in conjunction with a View such as a <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>. When the View reaches the last of the images currently in the model, a fetch is performed to retrieve more if they are available. The View is automatically updated as the images are received. The number of images which are fetched at a time is specified by the <db:link xlink:href="qml-qtlocation-imagemodel.xml#batchSize-prop">batchSize</db:link> property. The total number of images available can be accessed via the <db:link xlink:href="qml-qtlocation-imagemodel.xml#totalCount-prop">totalCount</db:link> property.</db:para>
<db:para>The model returns data for the following roles:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Role</db:para>
</db:th>
<db:th>
<db:para>Type</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>url</db:para>
</db:td>
<db:td>
<db:para>url</db:para>
</db:td>
<db:td>
<db:para>The URL of the image.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>imageId</db:para>
</db:td>
<db:td>
<db:para>string</db:para>
</db:td>
<db:td>
<db:para>The identifier of the image.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>mimeType</db:para>
</db:td>
<db:td>
<db:para>string</db:para>
</db:td>
<db:td>
<db:para>The MIME type of the image.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>supplier</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtlocation-supplier.xml">Supplier</db:link></db:para>
</db:td>
<db:td>
<db:para>The supplier of the image.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>user</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtlocation-user.xml">User</db:link></db:para>
</db:td>
<db:td>
<db:para>The user who contributed the image.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>attribution</db:para>
</db:td>
<db:td>
<db:para>string</db:para>
</db:td>
<db:td>
<db:para>Attribution text which must be displayed when displaying the image.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section xml:id="example">
<db:title>Example</db:title>
<db:para>The following example shows how to display images for a place:</db:para>
<db:programlisting language="qml">import QtQuick 2.0
import QtPositioning 5.5
import QtLocation 5.6

ImageModel {
    id: imageModel
    batchSize: 3
    place: place
}

ListView {
    anchors.top: parent.top
    width: parent.width
    spacing: 10

    model: imageModel
    orientation: ListView.Horizontal
    snapMode: ListView.SnapOneItem

    delegate: Item {
        width: listView.width
        height: listView.height

        Image {
            anchors.fill: parent
            source: url
            fillMode: Image.PreserveAspectFit
        }

        Text {
            text: supplier.name + &quot;\n&quot; + supplier.url
            width: parent.width
            anchors.bottom: parent.bottom
        }
    }
}
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="batchSize-prop">
<db:title>batchSize : int</db:title>
<db:para>This property holds the batch size to use when fetching more image items.</db:para>
</db:section>
<db:section xml:id="place-prop">
<db:title>place : Place</db:title>
<db:para>This property holds the Place that the images are for.</db:para>
</db:section>
<db:section xml:id="totalCount-prop">
<db:title>[read-only] totalCount : int</db:title>
<db:para>This property holds the total number of image items for the place.</db:para>
</db:section>
</db:section>
</db:article>
