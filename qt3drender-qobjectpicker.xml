<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QObjectPicker Class</db:title>
<db:subtitle>Qt3DRender::QObjectPicker</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qt3drender-qobjectpicker.xml">QObjectPicker</db:link> class instantiates a component that can be used to interact with a QEntity by a process known as picking.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QObjectPicker</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-objectpicker.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qcomponent.xml" xlink:role="class">Qt3DCore::QComponent</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>For every combination of viewport and camera, picking casts a ray through the scene to find entities who's bounding volume intersects the ray. The bounding volume is computed using the values in the attribute buffer specified by the boundingVolumePositionAttribute of the geometry.</db:para>
<db:para>The signals <db:link xlink:href="qt3drender-qobjectpicker.xml#pressed">pressed</db:link>(), <db:link xlink:href="qt3drender-qobjectpicker.xml#released">released</db:link>(), <db:link xlink:href="qt3drender-qobjectpicker.xml#clicked">clicked</db:link>(), <db:link xlink:href="qt3drender-qobjectpicker.xml#moved">moved</db:link>(), <db:link xlink:href="qt3drender-qobjectpicker.xml#entered">entered</db:link>(), and <db:link xlink:href="qt3drender-qobjectpicker.xml#exited">exited</db:link>() are emitted when the bounding volume defined by the pickAttribute property intersects with a ray.</db:para>
<db:para>Most signals carry a <db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link> instance. If QPickingSettings::pickMode() is set to <db:link xlink:href="qt3drender-qpickingsettings.xml#PickMethod-enum">QPickingSettings::TrianglePicking</db:link>, the actual type of the pick parameter will be <db:link xlink:href="qt3drender-qpicktriangleevent.xml">QPickTriangleEvent</db:link>.</db:para>
<db:para>Pick queries are performed on mouse press and mouse release. If drag is enabled, queries also happen on each mouse move while any button is pressed. If hover is enabled, queries happen on every mouse move even if no button is pressed.</db:para>
<db:para>For generalised ray casting queries, see <db:link xlink:href="qt3drender-qraycaster.xml">Qt3DRender::QRayCaster</db:link> and <db:link xlink:href="qt3drender-qscreenraycaster.xml">Qt3DRender::QScreenRayCaster</db:link>.</db:para>
<db:note>
<db:para>Instances of this component shouldn't be shared, not respecting that condition will most likely result in undefined behavior.</db:para>
</db:note>
<db:note>
<db:para>The camera far plane value affects picking and produces incorrect results due to floating-point precision if it is greater than ~100 000.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qpickingsettings.xml">Qt3DRender::QPickingSettings</db:link></db:member>
<db:member><db:link xlink:href="qt3dcore-qgeometry.xml">Qt3DCore::QGeometry</db:link></db:member>
<db:member><db:link xlink:href="qt3dcore-qattribute.xml">Qt3DCore::QAttribute</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qpickevent.xml">Qt3DRender::QPickEvent</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qpicktriangleevent.xml">Qt3DRender::QPickTriangleEvent</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qnopicking.xml">Qt3DRender::QNoPicking</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="containsMouse-prop">
<db:title>[read-only] containsMouse : const bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>containsMouse</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">containsMouse</db:synopsisinfo>
<db:synopsisinfo role="notifier">containsMouseChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies if the object picker currently contains the mouse</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qobjectpicker.xml#containsMouse">containsMouse</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">containsMouseChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>containsMouse</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="dragEnabled-prop">
<db:title>dragEnabled : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>dragEnabled</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isDragEnabled</db:synopsisinfo>
<db:synopsisinfo role="setter">setDragEnabled</db:synopsisinfo>
<db:synopsisinfo role="notifier">dragEnabledChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies if drag is enabled</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qobjectpicker.xml#isDragEnabled">isDragEnabled</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qobjectpicker.xml#setDragEnabled">setDragEnabled</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>dragEnabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">dragEnabledChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>dragEnabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="hoverEnabled-prop">
<db:title>hoverEnabled : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>hoverEnabled</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isHoverEnabled</db:synopsisinfo>
<db:synopsisinfo role="setter">setHoverEnabled</db:synopsisinfo>
<db:synopsisinfo role="notifier">hoverEnabledChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies if hover is enabled</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qobjectpicker.xml#isHoverEnabled">isHoverEnabled</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qobjectpicker.xml#setHoverEnabled">setHoverEnabled</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>hoverEnabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">hoverEnabledChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>hoverEnabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="pressed-prop">
<db:title>[read-only] pressed : const bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>pressed</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isPressed</db:synopsisinfo>
<db:synopsisinfo role="notifier">pressedChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies if the object picker is currently pressed</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isPressed</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">pressedChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>pressed</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="priority-prop">
<db:title>priority : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>priority</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">priority</db:synopsisinfo>
<db:synopsisinfo role="setter">setPriority</db:synopsisinfo>
<db:synopsisinfo role="notifier">priorityChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The priority to be used when filtering pick results by priority when <db:link xlink:href="qt3drender-qpickingsettings.xml#pickResultMode-prop">QPickingSettings::pickResultMode</db:link> is set to <db:link xlink:href="qt3drender-qpickingsettings.xml#PickResultMode-enum">QPickingSettings::NearestPriorityPick</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">priority</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qobjectpicker.xml#setPriority">setPriority</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>priority</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">priorityChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>priority</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="clicked">
<db:title>void QObjectPicker::clicked(Qt3DRender::QPickEvent *<db:emphasis>pick</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>clicked</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QPickEvent *</db:type>
<db:parameter>pick</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void clicked(Qt3DRender::QPickEvent *pick)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the bounding volume defined by the pickAttribute property intersects with a ray on a mouse click the <db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link> <db:code role="parameter">pick</db:code> contains details of the event.</db:para>
</db:section>
<db:section xml:id="containsMouse">
<db:title>bool QObjectPicker::containsMouse() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>containsMouse</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">containsMouse</db:synopsisinfo>
<db:synopsisinfo role="signature">bool containsMouse() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if the object picker currently contains the mouse</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qobjectpicker.xml#containsMouse-prop">containsMouse</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="entered">
<db:title>void QObjectPicker::entered()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>entered</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void entered()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the bounding volume defined by the pickAttribute property intersects with a ray on the mouse entering the volume.</db:para>
</db:section>
<db:section xml:id="exited">
<db:title>void QObjectPicker::exited()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>exited</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void exited()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the bounding volume defined by the pickAttribute property intersects with a ray on the ray exiting the volume.</db:para>
</db:section>
<db:section xml:id="isDragEnabled">
<db:title>bool QObjectPicker::isDragEnabled() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isDragEnabled</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">dragEnabled</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isDragEnabled() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if dragging is enabled</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qobjectpicker.xml#dragEnabled-prop">dragEnabled</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="isHoverEnabled">
<db:title>bool QObjectPicker::isHoverEnabled() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isHoverEnabled</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">hoverEnabled</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isHoverEnabled() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if hover enabled</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qobjectpicker.xml#hoverEnabled-prop">hoverEnabled</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="moved">
<db:title>void QObjectPicker::moved(Qt3DRender::QPickEvent *<db:emphasis>pick</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>moved</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QPickEvent *</db:type>
<db:parameter>pick</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void moved(Qt3DRender::QPickEvent *pick)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the bounding volume defined by the pickAttribute property intersects with a ray on a mouse move with a button pressed the <db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link> <db:code role="parameter">pick</db:code> contains details of the event.</db:para>
</db:section>
<db:section xml:id="pressed">
<db:title>void QObjectPicker::pressed(Qt3DRender::QPickEvent *<db:emphasis>pick</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>pressed</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QPickEvent *</db:type>
<db:parameter>pick</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void pressed(Qt3DRender::QPickEvent *pick)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the bounding volume defined by the pickAttribute property intersects with a ray on a mouse press the <db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link> <db:code role="parameter">pick</db:code> contains details of the event.</db:para>
</db:section>
<db:section xml:id="released">
<db:title>void QObjectPicker::released(Qt3DRender::QPickEvent *<db:emphasis>pick</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>released</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QPickEvent *</db:type>
<db:parameter>pick</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void released(Qt3DRender::QPickEvent *pick)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the bounding volume defined by the pickAttribute property intersects with a ray on a mouse release the <db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link> <db:code role="parameter">pick</db:code> contains details of the event.</db:para>
</db:section>
<db:section xml:id="setDragEnabled">
<db:title>void QObjectPicker::setDragEnabled(bool <db:emphasis>dragEnabled</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setDragEnabled</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>dragEnabled</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">dragEnabled</db:synopsisinfo>
<db:synopsisinfo role="signature">void setDragEnabled(bool dragEnabled)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the <db:link xlink:href="qt3drender-qobjectpicker.xml#dragEnabled-prop">dragEnabled</db:link> Property to <db:code role="parameter">dragEnabled</db:code></db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qobjectpicker.xml#dragEnabled-prop">dragEnabled</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qobjectpicker.xml#isDragEnabled">isDragEnabled</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setHoverEnabled">
<db:title>void QObjectPicker::setHoverEnabled(bool <db:emphasis>hoverEnabled</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setHoverEnabled</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>hoverEnabled</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">hoverEnabled</db:synopsisinfo>
<db:synopsisinfo role="signature">void setHoverEnabled(bool hoverEnabled)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the <db:link xlink:href="qt3drender-qobjectpicker.xml#hoverEnabled-prop">hoverEnabled</db:link> Property to <db:code role="parameter">hoverEnabled</db:code></db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qobjectpicker.xml#hoverEnabled-prop">hoverEnabled</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qobjectpicker.xml#isHoverEnabled">isHoverEnabled</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPriority">
<db:title>void QObjectPicker::setPriority(int <db:emphasis>priority</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setPriority</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>priority</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">priority</db:synopsisinfo>
<db:synopsisinfo role="signature">void setPriority(int priority)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the picker's priority to <db:code role="parameter">priority</db:code>. This is used when the pick result mode on <db:link xlink:href="qt3drender-qpickingsettings.xml">QPickingSettings</db:link> is set to <db:link xlink:href="qt3drender-qpickingsettings.xml#PickResultMode-enum">QPickingSettings::NearestPriorityPick</db:link>. Picking results are sorted by highest priority and shortest picking distance.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qobjectpicker.xml#priority-prop">priority</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qobjectpicker.xml#priority-prop">priority</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
