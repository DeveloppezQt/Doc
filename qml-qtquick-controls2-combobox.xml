<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ComboBox QML Type</db:title>
<db:productname>QtQuickControls2</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 2 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A combined button and popup list taking minimal space.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-control.xml">Control</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>ComboBox is part of <db:simplelist><db:member>qtquickcontrols2-input</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-combobox.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:link xlink:href="qml-qtquick-controls2-combobox.xml">ComboBox</db:link> is a combined button and popup list. It provides a means of presenting a list of options to the user in a way that takes up the minimum amount of screen space.</db:para>
<db:para><db:link xlink:href="qml-qtquick-controls2-combobox.xml">ComboBox</db:link> is populated with a data model. The data model is commonly a JavaScript array, a <db:link xlink:href="qml-qtqml-models-listmodel.xml">ListModel</db:link> or an integer, but also other types of <db:link xlink:href="qtquick-modelviewsdata-modelview.xml#models">data models</db:link> are supported.</db:para>
<db:programlisting language="cpp">ComboBox {
    model: [&quot;First&quot;, &quot;Second&quot;, &quot;Third&quot;]
}
</db:programlisting>
<db:para><db:link xlink:href="qml-qtquick-controls2-combobox.xml">ComboBox</db:link> is able to visualize standard <db:link xlink:href="qtquick-modelviewsdata-modelview.xml#models">data models</db:link> that provide the <db:code>modelData</db:code> role:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>models that have only one role</db:para>
</db:listitem>
<db:listitem>
<db:para>models that do not have named roles (JavaScript array, integer)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>When using models that have multiple named roles, <db:link xlink:href="qml-qtquick-controls2-combobox.xml">ComboBox</db:link> must be configured to use a specific <db:link xlink:href="qml-qtquick-controls2-combobox.xml#textRole-prop">text role</db:link> for its <db:link xlink:href="qml-qtquick-controls2-combobox.xml#displayText-prop">display text</db:link> and <db:link xlink:href="qml-qtquick-controls2-combobox.xml#delegate-prop">delegate</db:link> instances.</db:para>
<db:programlisting language="cpp">ComboBox {
    textRole: &quot;key&quot;
    model: ListModel {
        ListElement { key: &quot;First&quot;; value: 123 }
        ListElement { key: &quot;Second&quot;; value: 456 }
        ListElement { key: &quot;Third&quot;; value: 789 }
    }
}
</db:programlisting>
<db:note>
<db:para>If <db:link xlink:href="qml-qtquick-controls2-combobox.xml">ComboBox</db:link> is assigned a data model that has multiple named roles, but <db:link xlink:href="qml-qtquick-controls2-combobox.xml#textRole-prop">textRole</db:link> is not defined, <db:link xlink:href="qml-qtquick-controls2-combobox.xml">ComboBox</db:link> is unable to visualize it and throws a <db:code>ReferenceError: modelData is not defined</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-combobox">Customizing ComboBox</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-input.xml">Input Controls</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="count-prop">
<db:title>[read-only] count : int</db:title>
<db:para>This property holds the number of items in the combo box.</db:para>
</db:section>
<db:section xml:id="currentIndex-prop">
<db:title>currentIndex : int</db:title>
<db:para>This property holds the index of the current item in the combo box.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#activated-signal">activated</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#currentText-prop">currentText</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="currentText-prop">
<db:title>[read-only] currentText : string</db:title>
<db:para>This property holds the text of the current item in the combo box.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#currentIndex-prop">currentIndex</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#displayText-prop">displayText</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#textRole-prop">textRole</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="delegate-prop">
<db:title>delegate : Component</db:title>
<db:para>This property holds a delegate that presents an item in the combo box popup.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-itemdelegate.xml">ItemDelegate</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-combobox">Customizing ComboBox</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="displayText-prop">
<db:title>displayText : string</db:title>
<db:para>This property holds the text that is displayed on the combo box button.</db:para>
<db:para>By default, the display text presents the current selection. That is, it follows the text of the current item. However, the default display text can be overridden with a custom value.</db:para>
<db:programlisting language="cpp">ComboBox {
    currentIndex: 1
    displayText: &quot;Size: &quot; + currentText
    model: [&quot;S&quot;, &quot;M&quot;, &quot;L&quot;]
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#currentText-prop">currentText</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#textRole-prop">textRole</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="highlightedIndex-prop">
<db:title>[read-only] highlightedIndex : int</db:title>
<db:para>This property holds the index of the highlighted item in the combo box popup list.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#highlighted-signal">highlighted</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#currentIndex-prop">currentIndex</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="indicator-prop">
<db:title>indicator : Item</db:title>
<db:para>This property holds the drop indicator item.</db:para>
</db:section>
<db:section xml:id="model-prop">
<db:title>model : model</db:title>
<db:para>This property holds the model providing data for the combo box.</db:para>
<db:programlisting language="cpp">ComboBox {
    textRole: &quot;key&quot;
    model: ListModel {
        ListElement { key: &quot;First&quot;; value: 123 }
        ListElement { key: &quot;Second&quot;; value: 456 }
        ListElement { key: &quot;Third&quot;; value: 789 }
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#textRole-prop">textRole</db:link></db:member>
<db:member><db:link xlink:href="qtquick-modelviewsdata-modelview.xml#models">Data Models</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="popup-prop">
<db:title>popup : Popup</db:title>
<db:para>This property holds the popup.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-combobox">Customizing ComboBox</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pressed-prop">
<db:title>pressed : bool</db:title>
<db:para>This property holds whether the combo box button is pressed.</db:para>
</db:section>
<db:section xml:id="textRole-prop">
<db:title>textRole : string</db:title>
<db:para>This property holds the model role used for populating the combo box.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#model-prop">model</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#currentText-prop">currentText</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#displayText-prop">displayText</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="activated-signal">
<db:title>void activated(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted when the item at <db:code role="parameter">index</db:code> is activated by the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onActivated</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#currentIndex-prop">currentIndex</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="highlighted-signal">
<db:title>void highlighted(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted when the item at <db:code role="parameter">index</db:code> in the popup list is highlighted by the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onHighlighted</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#highlightedIndex-prop">highlightedIndex</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="decrementCurrentIndex-method">
<db:title>void decrementCurrentIndex()</db:title>
<db:para>Decrements the current index of the combo box, or the highlighted index if the popup list when it is visible.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#currentIndex-prop">currentIndex</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#highlightedIndex-prop">highlightedIndex</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="find-method">
<db:title>int find(string <db:emphasis>text</db:emphasis>, <db:emphasis>flags</db:emphasis> = Qt.MatchExactly)</db:title>
<db:para>Returns the index of the specified <db:code role="parameter">text</db:code>, or <db:code>-1</db:code> if no match is found.</db:para>
<db:para>The way the search is performed is defined by the specified match <db:code role="parameter">flags</db:code>. By default, combo box performs case sensitive exact matching (<db:code>Qt.MatchExactly</db:code>). All other match types are case-insensitive unless the <db:code>Qt.MatchCaseSensitive</db:code> flag is also specified.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Qt.MatchExactly</db:para>
</db:td>
<db:td>
<db:para>The search term matches exactly (default).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.MatchRegExp</db:para>
</db:td>
<db:td>
<db:para>The search term matches as a regular expression.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.MatchWildcard</db:para>
</db:td>
<db:td>
<db:para>The search term matches using wildcards.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.MatchFixedString</db:para>
</db:td>
<db:td>
<db:para>The search term matches as a fixed string.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.MatchStartsWith</db:para>
</db:td>
<db:td>
<db:para>The search term matches the start of the item.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.MatchEndsWidth</db:para>
</db:td>
<db:td>
<db:para>The search term matches the end of the item.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.MatchContains</db:para>
</db:td>
<db:td>
<db:para>The search term is contained in the item.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.MatchCaseSensitive</db:para>
</db:td>
<db:td>
<db:para>The search is case sensitive.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#textRole-prop">textRole</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="incrementCurrentIndex-method">
<db:title>void incrementCurrentIndex()</db:title>
<db:para>Increments the current index of the combo box, or the highlighted index if the popup list when it is visible.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#currentIndex-prop">currentIndex</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#highlightedIndex-prop">highlightedIndex</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="textAt-method">
<db:title>string textAt(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Returns the text for the specified <db:code role="parameter">index</db:code>, or an empty string if the index is out of bounds.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-combobox.xml#textRole-prop">textRole</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
