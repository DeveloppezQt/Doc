<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>CategoryAxis QML Type</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qml-qtcharts-categoryaxis.xml">CategoryAxis</db:link> allows putting a named ranges on the axis.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtCharts 2.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtcharts-abstractaxis.xml">AbstractAxis</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>For example:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_qmlaxes3.png"/>
</db:imageobject>
</db:mediaobject>
<db:programlisting language="qml">ChartView {
    title: &quot;Numerical Data for Dummies&quot;
    anchors.fill: parent
    legend.visible: false
    antialiasing: true

    LineSeries {
        axisY: CategoryAxis {
            min: 0
            max: 30
            CategoryRange {
                label: &quot;critical&quot;
                endValue: 2
            }
            CategoryRange {
                label: &quot;low&quot;
                endValue: 4
            }
            CategoryRange {
                label: &quot;normal&quot;
                endValue: 7
            }
            CategoryRange {
                label: &quot;high&quot;
                endValue: 15
            }
            CategoryRange {
                label: &quot;extremely high&quot;
                endValue: 30
            }
        }

        XYPoint { x: 0; y: 4.3 }
        XYPoint { x: 1; y: 4.1 }
        XYPoint { x: 2; y: 4.7 }
        XYPoint { x: 3; y: 3.9 }
        XYPoint { x: 4; y: 5.2 }
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="categoriesLabels-prop">
<db:title>categoriesLabels : StringList</db:title>
<db:para>The category labels as a list of strings.</db:para>
</db:section>
<db:section xml:id="count-prop">
<db:title>count : int</db:title>
<db:para>The count of categories.</db:para>
</db:section>
<db:section xml:id="labelsPosition-prop">
<db:title>labelsPosition : AxisLabelsPosition</db:title>
<db:para>Defines the position of the category labels. The labels in the beginning and in the end of the axes may overlap other axes labels when positioned on value.</db:para>
</db:section>
<db:section xml:id="startValue-prop">
<db:title>startValue : int</db:title>
<db:para>Defines the low end of the first category on the axis.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="append-method">
<db:title>append(string <db:emphasis>label</db:emphasis>, real <db:emphasis>endValue</db:emphasis>)</db:title>
<db:para>Appends new category to the axis with an <db:code role="parameter">label</db:code>. Category label has to be unique. Parameter <db:code role="parameter">endValue</db:code> specifies the high end limit of the category. It has to be greater than the high end limit of the previous category. Otherwise the method returns without adding a new category.</db:para>
</db:section>
<db:section xml:id="remove-method">
<db:title>remove(string <db:emphasis>label</db:emphasis>)</db:title>
<db:para>Removes a category specified by the <db:code role="parameter">label</db:code> from the axis</db:para>
</db:section>
<db:section xml:id="replace-method">
<db:title>replace(string <db:emphasis>oldLabel</db:emphasis>, string <db:emphasis>newLabel</db:emphasis>)</db:title>
<db:para>Replaces <db:code role="parameter">oldLabel</db:code> of an existing category with a <db:code role="parameter">newLabel</db:code>. If the old label does not exist the method returns without making any changes.</db:para>
</db:section>
</db:section>
</db:article>
