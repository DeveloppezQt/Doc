<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QPinchGesture Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qpinchgesture.xml">QPinchGesture</db:link> class describes a pinch gesture made by the user.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPinchGesture</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qgesture.xml" xlink:role="class">QGesture</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QPinchGesture is part of <db:simplelist><db:member>touch</db:member><db:member>gestures</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A pinch gesture is a form of touch user input in which the user typically touches two points on the input device with a thumb and finger, before moving them closer together or further apart to change the scale factor, zoom, or level of detail of the user interface.</db:para>
<db:para>For an overview of gesture handling in Qt and information on using gestures in your applications, see the <db:link xlink:href="gestures-overview.xml">Gestures in Widgets and Graphics View</db:link> document.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/pinchgesture.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Instead of repeatedly applying the same pinching gesture, the user may continue to touch the input device in one place, and apply a second touch to a new point, continuing the gesture. When this occurs, gesture events will continue to be delivered to the target object, containing an instance of <db:link xlink:href="qpinchgesture.xml">QPinchGesture</db:link> in the <db:link xlink:href="qt.xml#GestureState-enum">Qt::GestureUpdated</db:link> state.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpangesture.xml">QPanGesture</db:link></db:member>
<db:member><db:link xlink:href="qswipegesture.xml">QSwipeGesture</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="ChangeFlag-enum">
<db:title>enum QPinchGesture::ChangeFlag</db:title>
<db:bridgehead renderas="sect2">flags QPinchGesture::ChangeFlags</db:bridgehead>
<db:para>This enum describes the changes that can occur to the properties of the gesture object.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpinchgesture.xml">QPinchGesture</db:link></db:emphasis>::ScaleFactorChanged</db:code></db:para>
</db:td>
<db:td><db:code>0x1</db:code></db:td>
<db:td>
<db:para>The scale factor held by <db:link xlink:href="qpinchgesture.xml#scaleFactor-prop">scaleFactor</db:link> changed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpinchgesture.xml">QPinchGesture</db:link></db:emphasis>::RotationAngleChanged</db:code></db:para>
</db:td>
<db:td><db:code>0x2</db:code></db:td>
<db:td>
<db:para>The rotation angle held by <db:link xlink:href="qpinchgesture.xml#rotationAngle-prop">rotationAngle</db:link> changed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpinchgesture.xml">QPinchGesture</db:link></db:emphasis>::CenterPointChanged</db:code></db:para>
</db:td>
<db:td><db:code>0x4</db:code></db:td>
<db:td>
<db:para>The center point held by <db:link xlink:href="qpinchgesture.xml#centerPoint-prop">centerPoint</db:link> changed.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>ChangeFlags</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;ChangeFlag&gt;. </db:code>It stores an OR combination of <db:code>ChangeFlag</db:code> values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpinchgesture.xml#changeFlags-prop">changeFlags</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#totalChangeFlags-prop">totalChangeFlags</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="centerPoint-prop">
<db:title>centerPoint : QPointF</db:title>
<db:para>This property holds the current center point</db:para>
<db:para>The center point is the midpoint between the two input points in the gesture.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpointf.xml">QPointF</db:link></db:type> <db:emphasis role="bold">centerPoint</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setCenterPoint</db:emphasis>(const <db:type><db:link xlink:href="qpointf.xml">QPointF</db:link></db:type> &amp;<db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpinchgesture.xml#startCenterPoint-prop">startCenterPoint</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#lastCenterPoint-prop">lastCenterPoint</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="changeFlags-prop">
<db:title>changeFlags : ChangeFlags</db:title>
<db:para>This property holds the property of the gesture that has changed in the current step</db:para>
<db:para>This property indicates which of the other properties has changed since the previous gesture event included information about this gesture. You can use this information to determine which aspect of your user interface needs to be updated.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpinchgesture.xml#ChangeFlag-enum">QPinchGesture::ChangeFlags</db:link></db:type> <db:emphasis role="bold">changeFlags</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setChangeFlags</db:emphasis>(<db:type><db:link xlink:href="qpinchgesture.xml#ChangeFlag-enum">QPinchGesture::ChangeFlags</db:link></db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpinchgesture.xml#totalChangeFlags-prop">totalChangeFlags</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#scaleFactor-prop">scaleFactor</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#rotationAngle-prop">rotationAngle</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#centerPoint-prop">centerPoint</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="lastCenterPoint-prop">
<db:title>lastCenterPoint : QPointF</db:title>
<db:para>This property holds the last position of the center point recorded for this gesture</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpointf.xml">QPointF</db:link></db:type> <db:emphasis role="bold">lastCenterPoint</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLastCenterPoint</db:emphasis>(const <db:type><db:link xlink:href="qpointf.xml">QPointF</db:link></db:type> &amp;<db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpinchgesture.xml#centerPoint-prop">centerPoint</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#startCenterPoint-prop">startCenterPoint</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="lastRotationAngle-prop">
<db:title>lastRotationAngle : qreal</db:title>
<db:para>This property holds the last reported angle covered by the gesture motion</db:para>
<db:para>The last rotation angle is the angle as reported in the <db:link xlink:href="qpinchgesture.xml#rotationAngle-prop">rotationAngle</db:link> property when a previous gesture event was delivered for this gesture.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">lastRotationAngle</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLastRotationAngle</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpinchgesture.xml#rotationAngle-prop">rotationAngle</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#totalRotationAngle-prop">totalRotationAngle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="lastScaleFactor-prop">
<db:title>lastScaleFactor : qreal</db:title>
<db:para>This property holds the last scale factor recorded for this gesture</db:para>
<db:para>The last scale factor contains the scale factor reported in the <db:link xlink:href="qpinchgesture.xml#scaleFactor-prop">scaleFactor</db:link> property when a previous gesture event included information about this gesture.</db:para>
<db:para>If no previous event was delivered with information about this gesture (i.e., this gesture object contains information about the first movement in the gesture) then this property contains zero.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">lastScaleFactor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLastScaleFactor</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpinchgesture.xml#scaleFactor-prop">scaleFactor</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#totalScaleFactor-prop">totalScaleFactor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rotationAngle-prop">
<db:title>rotationAngle : qreal</db:title>
<db:para>This property holds the angle covered by the gesture motion</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">rotationAngle</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setRotationAngle</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpinchgesture.xml#totalRotationAngle-prop">totalRotationAngle</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#lastRotationAngle-prop">lastRotationAngle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="scaleFactor-prop">
<db:title>scaleFactor : qreal</db:title>
<db:para>This property holds the current scale factor</db:para>
<db:para>The scale factor measures the scale factor associated with the distance between two of the user's inputs on a touch device.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">scaleFactor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setScaleFactor</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpinchgesture.xml#totalScaleFactor-prop">totalScaleFactor</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#lastScaleFactor-prop">lastScaleFactor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="startCenterPoint-prop">
<db:title>startCenterPoint : QPointF</db:title>
<db:para>This property holds the starting position of the center point</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpointf.xml">QPointF</db:link></db:type> <db:emphasis role="bold">startCenterPoint</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setStartCenterPoint</db:emphasis>(const <db:type><db:link xlink:href="qpointf.xml">QPointF</db:link></db:type> &amp;<db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpinchgesture.xml#centerPoint-prop">centerPoint</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#lastCenterPoint-prop">lastCenterPoint</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="totalChangeFlags-prop">
<db:title>totalChangeFlags : ChangeFlags</db:title>
<db:para>This property holds the property of the gesture that has change</db:para>
<db:para>This property indicates which of the other properties has changed since the gesture has started. You can use this information to determine which aspect of your user interface needs to be updated.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpinchgesture.xml#ChangeFlag-enum">QPinchGesture::ChangeFlags</db:link></db:type> <db:emphasis role="bold">totalChangeFlags</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTotalChangeFlags</db:emphasis>(<db:type><db:link xlink:href="qpinchgesture.xml#ChangeFlag-enum">QPinchGesture::ChangeFlags</db:link></db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpinchgesture.xml#changeFlags-prop">changeFlags</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#scaleFactor-prop">scaleFactor</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#rotationAngle-prop">rotationAngle</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#centerPoint-prop">centerPoint</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="totalRotationAngle-prop">
<db:title>totalRotationAngle : qreal</db:title>
<db:para>This property holds the total angle covered by the gesture</db:para>
<db:para>This total angle measures the complete angle covered by the gesture. Usually, this is equal to the value held by the <db:link xlink:href="qpinchgesture.xml#rotationAngle-prop">rotationAngle</db:link> property, except in the case where the user performs multiple rotations by removing and repositioning one of the touch points, as described above. In this case, the total angle will be the sum of the rotation angles for the multiple stages of the gesture.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">totalRotationAngle</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTotalRotationAngle</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpinchgesture.xml#rotationAngle-prop">rotationAngle</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#lastRotationAngle-prop">lastRotationAngle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="totalScaleFactor-prop">
<db:title>totalScaleFactor : qreal</db:title>
<db:para>This property holds the total scale factor</db:para>
<db:para>The total scale factor measures the total change in scale factor from the original value to the current scale factor.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">totalScaleFactor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTotalScaleFactor</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpinchgesture.xml#scaleFactor-prop">scaleFactor</db:link></db:member>
<db:member><db:link xlink:href="qpinchgesture.xml#lastScaleFactor-prop">lastScaleFactor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="dtor.QPinchGesture">
<db:title>[virtual noexcept] QPinchGesture::~QPinchGesture()</db:title>
<db:para>Destructor.</db:para>
</db:section>
</db:section>
</db:article>
