<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ImageCapture QML Type</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>An interface for capturing camera images.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtMultimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>ImageCapture is part of <db:simplelist><db:member>multimedia_qml</db:member><db:member>camera_qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This type allows you to capture still images and be notified when they are available or saved to disk.</db:para>
<db:programlisting language="qml">Item {
    width: 640
    height: 360

    CaptureSession {
        imageCapture : ImageCapture {
            id: imageCapture
        }
        camera: Camera {
            id: camera
        }

        videoOutput: videoOutput
    }
    VideoOutput {
        id: videoOutput
        anchors.fill: parent

        MouseArea {
            anchors.fill: parent;
            onClicked: imageCapture.capture();
        }
    }

    Image {
        id: photoPreview
        source: imageCapture.preview // always shows the last captured image
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="preview-prop">
<db:title>[read-only] preview : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>preview</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a url to the latest captured image. It can be connected to the source property of an <db:link xlink:href="qml-qtquick-image.xml">Image</db:link> element to show the last captured image.</db:para>
<db:programlisting language="qml">CaptureSession {
    camera: Camera {}
    imageCapture: ImageCapture {
        id: capture
    }
}
Image {
    source: capture.preview
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-imagecapture.xml#saveToFile-method">saveToFile</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="readyForCapture-prop">
<db:title>[read-only] readyForCapture : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>readyForCapture</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a bool value indicating whether the camera is ready to capture photos or not.</db:para>
<db:para>Calling <db:link xlink:href="qml-qtmultimedia-imagecapture.xml#capture-method">capture</db:link>() or <db:link xlink:href="qml-qtmultimedia-imagecapture.xml#captureToFile-method">captureToFile</db:link>() while <db:emphasis>ready</db:emphasis> is <db:code>false</db:code> is not permitted and results in an error.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="errorOccurred-signal">
<db:title>errorOccurred(<db:emphasis>requestId</db:emphasis>, <db:emphasis>error</db:emphasis>, <db:emphasis>message</db:emphasis>)</db:title>
<db:para>This signal is emitted when an error occurs during capture with <db:code role="parameter">requestId</db:code>. <db:code role="parameter">error</db:code> is an enumeration of type ImageCapture::Error. A descriptive message is available in <db:code role="parameter">message</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onErrorOccurred</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="imageCaptured-signal">
<db:title>imageCaptured(<db:emphasis>requestId</db:emphasis>, <db:emphasis>previewImage</db:emphasis>)</db:title>
<db:para>This signal is emitted when an image with <db:code role="parameter">requestId</db:code> has been captured but not yet saved to the filesystem. The <db:code role="parameter">previewImage</db:code> parameter is the captured image.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onImageCaptured</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-imagecapture.xml#imageSaved-signal">imageSaved</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-imagecapture.xml#preview">preview</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="imageMetadataAvailable-signal">
<db:title>imageMetadataAvailable(<db:emphasis>requestId</db:emphasis>, <db:emphasis>key</db:emphasis>, <db:emphasis>value</db:emphasis>)</db:title>
<db:para>This signal is emitted when the image with <db:code role="parameter">requestId</db:code> has new metadata available with the key <db:code role="parameter">key</db:code> and value <db:code role="parameter">value</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onImageMetadataAvailable</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-imagecapture.xml#imageCaptured-signal">imageCaptured</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="imageSaved-signal">
<db:title>imageSaved(<db:emphasis>requestId</db:emphasis>, <db:emphasis>path</db:emphasis>)</db:title>
<db:para>This signal is emitted after the image with <db:code role="parameter">requestId</db:code> has been written to the filesystem. The <db:code role="parameter">path</db:code> is a local file path, not a URL.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onImageSaved</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-imagecapture.xml#imageCaptured-signal">imageCaptured</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="capture-method">
<db:title>capture()</db:title>
<db:para>Start image capture. The <db:link xlink:href="qml-qtmultimedia-imagecapture.xml#imageCaptured-signal">imageCaptured</db:link> and <db:link xlink:href="qml-qtmultimedia-imagecapture.xml#imageSaved-signal">imageSaved</db:link> signals will be emitted when the capture is complete.</db:para>
<db:para>The captured image will be available through the preview property that can be used as the source for a QML Image item. The <db:link xlink:href="qml-qtmultimedia-imagecapture.xml#saveToFile-method">saveToFile</db:link>() method can then be used save the image.</db:para>
<db:para>Camera saves all the capture parameters like exposure settings or image processing parameters, so changes to camera parameters after capture() is called do not affect previous capture requests.</db:para>
<db:para>capture() returns the capture requestId parameter, used with imageExposed(), <db:link xlink:href="qml-qtmultimedia-imagecapture.xml#imageCaptured-signal">imageCaptured</db:link>(), <db:link xlink:href="qml-qtmultimedia-imagecapture.xml#imageMetadataAvailable-signal">imageMetadataAvailable</db:link>() and <db:link xlink:href="qml-qtmultimedia-imagecapture.xml#imageSaved-signal">imageSaved</db:link>() signals.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-imagecapture.xml#readyForCapture-prop">readyForCapture</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-imagecapture.xml#preview">preview</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="captureToFile-method">
<db:title>captureToFile(<db:emphasis>location</db:emphasis>)</db:title>
<db:para>Does the same as <db:link xlink:href="qml-qtmultimedia-imagecapture.xml#capture-method">capture</db:link>() but additionally automatically saves the captured image to the specified <db:code role="parameter">location</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-imagecapture.xml#capture-method">capture</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="saveToFile-method">
<db:title>saveToFile(<db:emphasis>location</db:emphasis>)</db:title>
<db:para>Saves the last captured image to <db:code role="parameter">location</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-imagecapture.xml#capture-method">capture</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-imagecapture.xml#preview">preview</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
