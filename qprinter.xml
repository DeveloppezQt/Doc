<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QPrinter Class</db:title>
<db:productname>QtPrintSupport</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Print Support Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qprinter.xml">QPrinter</db:link> class is a paint device that paints on a printer.</db:para>
<db:note>
<db:para>All functions in this class are reentrant.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPrinter</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += printsupport</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qpagedpaintdevice.xml" xlink:role="class">QPagedPaintDevice</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QPrinter is part of <db:simplelist><db:member><db:link xlink:href="printing.xml">Printer and Printing APIs</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This device represents a series of pages of printed output, and is used in almost exactly the same way as other paint devices such as QWidget and <db:link xlink:href="qpixmap.xml">QPixmap</db:link>. A set of additional functions are provided to manage device-specific features, such as orientation and resolution, and to step through the pages in a document as it is generated.</db:para>
<db:para>When printing directly to a printer on Windows or Mac OS X, <db:link xlink:href="qprinter.xml">QPrinter</db:link> uses the built-in printer drivers. On X11, <db:link xlink:href="qprinter.xml">QPrinter</db:link> uses the <db:link xlink:href="http://www.cups.org/">Common Unix Printing System (CUPS)</db:link> to send PDF output to the printer. As an alternative, the <db:link xlink:href="qprinter.xml#printProgram">printProgram</db:link>() function can be used to specify the command or utility to use instead of the system default.</db:para>
<db:para>Note that setting parameters like paper size and resolution on an invalid printer is undefined. You can use <db:link xlink:href="qprinter.xml#isValid">QPrinter::isValid</db:link>() to verify this before changing any parameters.</db:para>
<db:para><db:link xlink:href="qprinter.xml">QPrinter</db:link> supports a number of parameters, most of which can be changed by the end user through a <db:link xlink:href="qprintdialog.xml">print dialog</db:link>. In general, <db:link xlink:href="qprinter.xml">QPrinter</db:link> passes these functions onto the underlying <db:link xlink:href="qprintengine.xml">QPrintEngine</db:link>.</db:para>
<db:para>The most important parameters are:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>setOrientation() tells <db:link xlink:href="qprinter.xml">QPrinter</db:link> which page orientation to use.</db:para>
</db:listitem>
<db:listitem>
<db:para>setPaperSize() tells <db:link xlink:href="qprinter.xml">QPrinter</db:link> what paper size to expect from the printer.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qprinter.xml#setResolution">setResolution</db:link>() tells <db:link xlink:href="qprinter.xml">QPrinter</db:link> what resolution you wish the printer to provide, in dots per inch (DPI).</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qprinter.xml#setFullPage">setFullPage</db:link>() tells <db:link xlink:href="qprinter.xml">QPrinter</db:link> whether you want to deal with the full page or just with the part the printer can draw on.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qprinter.xml#setCopyCount">setCopyCount</db:link>() tells <db:link xlink:href="qprinter.xml">QPrinter</db:link> how many copies of the document it should print.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Many of these functions can only be called before the actual printing begins (i.e., before <db:link xlink:href="qpainter.xml#begin">QPainter::begin</db:link>() is called). This usually makes sense because, for example, it's not possible to change the number of copies when you are halfway through printing. There are also some settings that the user sets (through the printer dialog) and that applications are expected to obey. See <db:link xlink:href="qabstractprintdialog.xml">QAbstractPrintDialog</db:link>'s documentation for more details.</db:para>
<db:para>When <db:link xlink:href="qpainter.xml#begin">QPainter::begin</db:link>() is called, the <db:link xlink:href="qprinter.xml">QPrinter</db:link> it operates on is prepared for a new page, enabling the <db:link xlink:href="qpainter.xml">QPainter</db:link> to be used immediately to paint the first page in a document. Once the first page has been painted, <db:link xlink:href="qprinter.xml#newPage">newPage</db:link>() can be called to request a new blank page to paint on, or <db:link xlink:href="qpainter.xml#end">QPainter::end</db:link>() can be called to finish printing. The second page and all following pages are prepared using a call to <db:link xlink:href="qprinter.xml#newPage">newPage</db:link>() before they are painted.</db:para>
<db:para>The first page in a document does not need to be preceded by a call to <db:link xlink:href="qprinter.xml#newPage">newPage</db:link>(). You only need to calling <db:link xlink:href="qprinter.xml#newPage">newPage</db:link>() after <db:link xlink:href="qpainter.xml#begin">QPainter::begin</db:link>() if you need to insert a blank page at the beginning of a printed document. Similarly, calling <db:link xlink:href="qprinter.xml#newPage">newPage</db:link>() after the last page in a document is painted will result in a trailing blank page appended to the end of the printed document.</db:para>
<db:para>If you want to abort the print job, <db:link xlink:href="qprinter.xml#abort">abort</db:link>() will try its best to stop printing. It may cancel the entire job or just part of it.</db:para>
<db:para>Since <db:link xlink:href="qprinter.xml">QPrinter</db:link> can print to any <db:link xlink:href="qprintengine.xml">QPrintEngine</db:link> subclass, it is possible to extend printing support to cover new types of printing subsystem by subclassing <db:link xlink:href="qprintengine.xml">QPrintEngine</db:link> and reimplementing its interface.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprintdialog.xml">QPrintDialog</db:link></db:member>
<db:member><db:link xlink:href="qtprintsupport-index.xml">Qt Print Support</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="ColorMode-enum">
<db:title>enum QPrinter::ColorMode</db:title>
<db:para>This enum type is used to indicate whether <db:link xlink:href="qprinter.xml">QPrinter</db:link> should print in color or not.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Color</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>print in color if available, otherwise in grayscale.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::GrayScale</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>print in grayscale, even on color printers.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="DuplexMode-enum">
<db:title>[since 4.4] enum QPrinter::DuplexMode</db:title>
<db:para>This enum is used to indicate whether printing will occur on one or both sides of each sheet of paper (simplex or duplex printing).</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::DuplexNone</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Single sided (simplex) printing only.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::DuplexAuto</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The printer's default setting is used to determine whether duplex printing is used.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::DuplexLongSide</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Both sides of each sheet of paper are used for printing. The paper is turned over its longest edge before the second side is printed</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::DuplexShortSide</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Both sides of each sheet of paper are used for printing. The paper is turned over its shortest edge before the second side is printed</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This enum was introduced in Qt 4.4.</db:para>
</db:section>
<db:section xml:id="Orientation-enum">
<db:title>enum QPrinter::Orientation</db:title>
<db:para>This enum type (not to be confused with <db:code>Orientation</db:code>) is used to specify each page's orientation.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Portrait</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>the page's height is greater than its width.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Landscape</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>the page's width is greater than its height.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This type interacts with <db:link xlink:href="qprinter.xml#PaperSize-enum">QPrinter::PaperSize</db:link> and <db:link xlink:href="qprinter.xml#setFullPage">QPrinter::setFullPage</db:link>() to determine the final size of the page available to the application.</db:para>
</db:section>
<db:section xml:id="OutputFormat-enum">
<db:title>enum QPrinter::OutputFormat</db:title>
<db:para>The OutputFormat enum is used to describe the format <db:link xlink:href="qprinter.xml">QPrinter</db:link> should use for printing.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::NativeFormat</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qprinter.xml">QPrinter</db:link> will print output using a method defined by the platform it is running on. This mode is the default when printing directly to a printer.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::PdfFormat</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qprinter.xml">QPrinter</db:link> will generate its output as a searchable PDF file. This mode is the default when printing to a file.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#outputFormat">outputFormat</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setOutputFormat">setOutputFormat</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setOutputFileName">setOutputFileName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="PageOrder-enum">
<db:title>enum QPrinter::PageOrder</db:title>
<db:para>This enum type is used by <db:link xlink:href="qprinter.xml">QPrinter</db:link> to tell the application program how to print.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::FirstPageFirst</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>the lowest-numbered page should be printed first.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::LastPageFirst</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>the highest-numbered page should be printed first.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="PaperSize-enum">
<db:title>[since 4.4] enum QPrinter::PaperSize</db:title>
<db:para>This enum type specifies what paper size <db:link xlink:href="qprinter.xml">QPrinter</db:link> should use. <db:link xlink:href="qprinter.xml">QPrinter</db:link> does not check that the paper size is available; it just uses this information, together with <db:link xlink:href="qprinter.xml#Orientation-enum">QPrinter::Orientation</db:link> and <db:link xlink:href="qprinter.xml#setFullPage">QPrinter::setFullPage</db:link>(), to determine the printable area.</db:para>
<db:para>The defined sizes (with <db:link xlink:href="qprinter.xml#setFullPage">setFullPage</db:link>(true)) are:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A0</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>841 x 1189 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A1</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>594 x 841 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A2</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>420 x 594 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A3</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>297 x 420 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A4</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>210 x 297 mm, 8.26 x 11.69 inches</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A5</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>148 x 210 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A6</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>105 x 148 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A7</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>74 x 105 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A8</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>52 x 74 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A9</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>37 x 52 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::B0</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>1000 x 1414 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::B1</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>707 x 1000 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::B2</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>500 x 707 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::B3</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td>
<db:para>353 x 500 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::B4</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>250 x 353 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::B5</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>176 x 250 mm, 6.93 x 9.84 inches</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::B6</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>125 x 176 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::B7</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>88 x 125 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::B8</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>62 x 88 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::B9</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>33 x 62 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::B10</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>31 x 44 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::C5E</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td>
<db:para>163 x 229 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Comm10E</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
<db:td>
<db:para>105 x 241 mm, U.S. Common 10 Envelope</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::DLE</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
<db:td>
<db:para>110 x 220 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Executive</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>7.5 x 10 inches, 190.5 x 254 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Folio</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
<db:td>
<db:para>210 x 330 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Ledger</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
<db:td>
<db:para>431.8 x 279.4 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Legal</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>8.5 x 14 inches, 215.9 x 355.6 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Letter</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>8.5 x 11 inches, 215.9 x 279.4 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Tabloid</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
<db:td>
<db:para>279.4 x 431.8 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Custom</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
<db:td>
<db:para>Unknown, or a user defined size.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A10</db:code></db:para>
</db:td>
<db:td><db:code>31</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A3Extra</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A4Extra</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A4Plus</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A4Small</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::A5Extra</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::B5Extra</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::JisB0</db:code></db:para>
</db:td>
<db:td><db:code>38</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::JisB1</db:code></db:para>
</db:td>
<db:td><db:code>39</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::JisB2</db:code></db:para>
</db:td>
<db:td><db:code>40</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::JisB3</db:code></db:para>
</db:td>
<db:td><db:code>41</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::JisB4</db:code></db:para>
</db:td>
<db:td><db:code>42</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::JisB5</db:code></db:para>
</db:td>
<db:td><db:code>43</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::JisB6</db:code></db:para>
</db:td>
<db:td><db:code>44</db:code></db:td>
<db:td>
<db:para>,</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::JisB7</db:code></db:para>
</db:td>
<db:td><db:code>45</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::JisB8</db:code></db:para>
</db:td>
<db:td><db:code>46</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::JisB9</db:code></db:para>
</db:td>
<db:td><db:code>47</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::JisB10</db:code></db:para>
</db:td>
<db:td><db:code>48</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::AnsiA</db:code></db:para>
</db:td>
<db:td><db:code>Letter</db:code></db:td>
<db:td>
<db:para>= Letter</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::AnsiB</db:code></db:para>
</db:td>
<db:td><db:code>Ledger</db:code></db:td>
<db:td>
<db:para>= Ledger</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::AnsiC</db:code></db:para>
</db:td>
<db:td><db:code>49</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::AnsiD</db:code></db:para>
</db:td>
<db:td><db:code>50</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::AnsiE</db:code></db:para>
</db:td>
<db:td><db:code>51</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::LegalExtra</db:code></db:para>
</db:td>
<db:td><db:code>52</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::LetterExtra</db:code></db:para>
</db:td>
<db:td><db:code>53</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::LetterPlus</db:code></db:para>
</db:td>
<db:td><db:code>54</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::LetterSmall</db:code></db:para>
</db:td>
<db:td><db:code>55</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::TabloidExtra</db:code></db:para>
</db:td>
<db:td><db:code>56</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::ArchA</db:code></db:para>
</db:td>
<db:td><db:code>57</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::ArchB</db:code></db:para>
</db:td>
<db:td><db:code>58</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::ArchC</db:code></db:para>
</db:td>
<db:td><db:code>59</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::ArchD</db:code></db:para>
</db:td>
<db:td><db:code>60</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::ArchE</db:code></db:para>
</db:td>
<db:td><db:code>61</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Imperial7x9</db:code></db:para>
</db:td>
<db:td><db:code>62</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Imperial8x10</db:code></db:para>
</db:td>
<db:td><db:code>63</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Imperial9x11</db:code></db:para>
</db:td>
<db:td><db:code>64</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Imperial9x12</db:code></db:para>
</db:td>
<db:td><db:code>65</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Imperial10x11</db:code></db:para>
</db:td>
<db:td><db:code>66</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Imperial10x13</db:code></db:para>
</db:td>
<db:td><db:code>67</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Imperial10x14</db:code></db:para>
</db:td>
<db:td><db:code>68</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Imperial12x11</db:code></db:para>
</db:td>
<db:td><db:code>69</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Imperial15x11</db:code></db:para>
</db:td>
<db:td><db:code>70</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::ExecutiveStandard</db:code></db:para>
</db:td>
<db:td><db:code>71</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Note</db:code></db:para>
</db:td>
<db:td><db:code>72</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Quarto</db:code></db:para>
</db:td>
<db:td><db:code>73</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Statement</db:code></db:para>
</db:td>
<db:td><db:code>74</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::SuperA</db:code></db:para>
</db:td>
<db:td><db:code>75</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::SuperB</db:code></db:para>
</db:td>
<db:td><db:code>76</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Postcard</db:code></db:para>
</db:td>
<db:td><db:code>77</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::DoublePostcard</db:code></db:para>
</db:td>
<db:td><db:code>78</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Prc16K</db:code></db:para>
</db:td>
<db:td><db:code>79</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Prc32K</db:code></db:para>
</db:td>
<db:td><db:code>80</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Prc32KBig</db:code></db:para>
</db:td>
<db:td><db:code>81</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::FanFoldUS</db:code></db:para>
</db:td>
<db:td><db:code>82</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::FanFoldGerman</db:code></db:para>
</db:td>
<db:td><db:code>83</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::FanFoldGermanLegal</db:code></db:para>
</db:td>
<db:td><db:code>84</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeB4</db:code></db:para>
</db:td>
<db:td><db:code>85</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeB5</db:code></db:para>
</db:td>
<db:td><db:code>86</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeB6</db:code></db:para>
</db:td>
<db:td><db:code>87</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeC0</db:code></db:para>
</db:td>
<db:td><db:code>88</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeC1</db:code></db:para>
</db:td>
<db:td><db:code>89</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeC2</db:code></db:para>
</db:td>
<db:td><db:code>90</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeC3</db:code></db:para>
</db:td>
<db:td><db:code>91</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeC4</db:code></db:para>
</db:td>
<db:td><db:code>92</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeC5</db:code></db:para>
</db:td>
<db:td><db:code>C5E</db:code></db:td>
<db:td>
<db:para>= C5E</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeC6</db:code></db:para>
</db:td>
<db:td><db:code>93</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeC65</db:code></db:para>
</db:td>
<db:td><db:code>94</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeC7</db:code></db:para>
</db:td>
<db:td><db:code>95</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeDL</db:code></db:para>
</db:td>
<db:td><db:code>DLE</db:code></db:td>
<db:td>
<db:para>= DLE</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Envelope9</db:code></db:para>
</db:td>
<db:td><db:code>96</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Envelope10</db:code></db:para>
</db:td>
<db:td><db:code>Comm10E</db:code></db:td>
<db:td>
<db:para>= Comm10E</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Envelope11</db:code></db:para>
</db:td>
<db:td><db:code>97</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Envelope12</db:code></db:para>
</db:td>
<db:td><db:code>98</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Envelope14</db:code></db:para>
</db:td>
<db:td><db:code>99</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeMonarch</db:code></db:para>
</db:td>
<db:td><db:code>100</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopePersonal</db:code></db:para>
</db:td>
<db:td><db:code>101</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeChou3</db:code></db:para>
</db:td>
<db:td><db:code>102</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeChou4</db:code></db:para>
</db:td>
<db:td><db:code>103</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeInvite</db:code></db:para>
</db:td>
<db:td><db:code>104</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeItalian</db:code></db:para>
</db:td>
<db:td><db:code>105</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeKaku2</db:code></db:para>
</db:td>
<db:td><db:code>106</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeKaku3</db:code></db:para>
</db:td>
<db:td><db:code>107</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopePrc1</db:code></db:para>
</db:td>
<db:td><db:code>108</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopePrc2</db:code></db:para>
</db:td>
<db:td><db:code>109</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopePrc3</db:code></db:para>
</db:td>
<db:td><db:code>110</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopePrc4</db:code></db:para>
</db:td>
<db:td><db:code>111</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopePrc5</db:code></db:para>
</db:td>
<db:td><db:code>112</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopePrc6</db:code></db:para>
</db:td>
<db:td><db:code>113</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopePrc7</db:code></db:para>
</db:td>
<db:td><db:code>114</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopePrc8</db:code></db:para>
</db:td>
<db:td><db:code>115</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopePrc9</db:code></db:para>
</db:td>
<db:td><db:code>116</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopePrc10</db:code></db:para>
</db:td>
<db:td><db:code>117</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeYou4</db:code></db:para>
</db:td>
<db:td><db:code>118</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::LastPageSize</db:code></db:para>
</db:td>
<db:td><db:code>EnvelopeYou4</db:code></db:td>
<db:td>
<db:para>= EnvelopeYou4</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>With <db:link xlink:href="qprinter.xml#setFullPage">setFullPage</db:link>(false) (the default), the metrics will be a bit smaller; how much depends on the printer in use.</db:para>
<db:para>Due to historic reasons <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::Executive</db:link> is not the same as the standard Postscript and Windows Executive size, use <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::ExecutiveStandard</db:link> instead.</db:para>
<db:para>The Postscript standard size <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::Folio</db:link> is different to the Windows DMPAPER_FOLIO size, use the Postscript standard size <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::FanFoldGermanLegal</db:link> if needed.</db:para>
<db:para>This enum was introduced in Qt 4.4.</db:para>
</db:section>
<db:section xml:id="PaperSource-enum">
<db:title>enum QPrinter::PaperSource</db:title>
<db:para>This enum type specifies what paper source <db:link xlink:href="qprinter.xml">QPrinter</db:link> is to use. <db:link xlink:href="qprinter.xml">QPrinter</db:link> does not check that the paper source is available; it just uses this information to try and set the paper source. Whether it will set the paper source depends on whether the printer has that particular source.</db:para>
<db:warning>
<db:para>This is currently only implemented for Windows.</db:para>
</db:warning>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Auto</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Cassette</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Envelope</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::EnvelopeManual</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::FormSource</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::LargeCapacity</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::LargeFormat</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Lower</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::MaxPageSource</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>Deprecated, use LastPaperSource instead</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Middle</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Manual</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::OnlyOne</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Tractor</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::SmallFormat</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Upper</db:code></db:para>
</db:td>
<db:td><db:code>OnlyOne</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::CustomSource</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>A PaperSource defined by the printer that is unknown to Qt</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::LastPaperSource</db:code></db:para>
</db:td>
<db:td><db:code>CustomSource</db:code></db:td>
<db:td>
<db:para>The highest valid PaperSource value, currently CustomSource</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="PrintRange-enum">
<db:title>enum QPrinter::PrintRange</db:title>
<db:para>Used to specify the print range selection option.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::AllPages</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>All pages should be printed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Selection</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Only the selection should be printed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::PageRange</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The specified page range should be printed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::CurrentPage</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Only the current page should be printed.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPrintRange">setPrintRange</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#printRange">printRange</db:link>()</db:member>
<db:member><db:link xlink:href="qabstractprintdialog.xml#PrintRange-enum">QAbstractPrintDialog::PrintRange</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="PrinterMode-enum">
<db:title>enum QPrinter::PrinterMode</db:title>
<db:para>This enum describes the mode the printer should work in. It basically presets a certain resolution and working mode.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::ScreenResolution</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Sets the resolution of the print device to the screen resolution. This has the big advantage that the results obtained when painting on the printer will match more or less exactly the visible output on the screen. It is the easiest to use, as font metrics on the screen and on the printer are the same. This is the default value. ScreenResolution will produce a lower quality output than HighResolution and should only be used for drafts.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::PrinterResolution</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>This value is deprecated. It is equivalent to ScreenResolution on Unix and HighResolution on Windows and Mac. Due to the difference between ScreenResolution and HighResolution, use of this value may lead to non-portable printer code.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::HighResolution</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>On Windows, sets the printer resolution to that defined for the printer in use. For PDF printing, sets the resolution of the PDF driver to 1200 dpi.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:note>
<db:para>When rendering text on a <db:link xlink:href="qprinter.xml">QPrinter</db:link> device, it is important to realize that the size of text, when specified in points, is independent of the resolution specified for the device itself. Therefore, it may be useful to specify the font size in pixels when combining text with graphics to ensure that their relative sizes are what you expect.</db:para>
</db:note>
</db:section>
<db:section xml:id="PrinterState-enum">
<db:title>enum QPrinter::PrinterState</db:title>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Idle</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Active</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Aborted</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Error</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="Unit-enum">
<db:title>[since 4.4] enum QPrinter::Unit</db:title>
<db:para>This enum type is used to specify the measurement unit for page and paper sizes.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Millimeter</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Point</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Inch</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Pica</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Didot</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::Cicero</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qprinter.xml">QPrinter</db:link></db:emphasis>::DevicePixel</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
</db:tr>
</db:informaltable>
<db:para>Note the difference between Point and DevicePixel. The Point unit is defined to be 1/72th of an inch, while the DevicePixel unit is resolution dependant and is based on the actual pixels, or dots, on the printer.</db:para>
<db:para>This enum was introduced in Qt 4.4.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QPrinter">
<db:title>[explicit] QPrinter::QPrinter(QPrinter::PrinterMode <db:emphasis>mode</db:emphasis> = ScreenResolution)</db:title>
<db:para>Creates a new printer object with the given <db:code role="parameter">mode</db:code>.</db:para>
</db:section>
<db:section xml:id="QPrinter-1">
<db:title>[explicit, since 4.4] QPrinter::QPrinter(const QPrinterInfo &amp;<db:emphasis>printer</db:emphasis>, QPrinter::PrinterMode <db:emphasis>mode</db:emphasis> = ScreenResolution)</db:title>
<db:para>Creates a new printer object with the given <db:code role="parameter">printer</db:code> and <db:code role="parameter">mode</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
</db:section>
<db:section xml:id="dtor.QPrinter">
<db:title>[virtual noexcept] QPrinter::~QPrinter()</db:title>
<db:para>Destroys the printer object and frees any allocated resources. If the printer is destroyed while a print job is in progress this may or may not affect the print job.</db:para>
</db:section>
<db:section xml:id="abort">
<db:title>bool QPrinter::abort()</db:title>
<db:para>Aborts the current print run. Returns <db:code>true</db:code> if the print run was successfully aborted and <db:link xlink:href="qprinter.xml#printerState">printerState</db:link>() will return <db:link xlink:href="qprinter.xml#PrinterState-enum">QPrinter::Aborted</db:link>; otherwise returns <db:code>false</db:code>.</db:para>
<db:para>It is not always possible to abort a print job. For example, all the data has gone to the printer but the printer cannot or will not cancel the job when asked to.</db:para>
</db:section>
<db:section xml:id="collateCopies">
<db:title>[since 4.1] bool QPrinter::collateCopies() const</db:title>
<db:para>Returns <db:code>true</db:code> if collation is turned on when multiple copies is selected. Returns <db:code>false</db:code> if it is turned off when multiple copies is selected. When collating is turned off the printing of each individual page will be repeated the numCopies() amount before the next page is started. With collating turned on all pages are printed before the next copy of those pages is started.</db:para>
<db:para>This function was introduced in Qt 4.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setCollateCopies">setCollateCopies</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="colorMode">
<db:title>QPrinter::ColorMode QPrinter::colorMode() const</db:title>
<db:para>Returns the current color mode.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setColorMode">setColorMode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="copyCount">
<db:title>[since 4.7] int QPrinter::copyCount() const</db:title>
<db:para>Returns the number of copies that will be printed. The default value is 1.</db:para>
<db:para>This function was introduced in Qt 4.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setCopyCount">setCopyCount</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#supportsMultipleCopies">supportsMultipleCopies</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="creator">
<db:title>QString QPrinter::creator() const</db:title>
<db:para>Returns the name of the application that created the document.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setCreator">setCreator</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="docName">
<db:title>QString QPrinter::docName() const</db:title>
<db:para>Returns the document name.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setDocName">setDocName</db:link>()</db:member>
<db:member><db:link xlink:href="qprintengine.xml#PrintEnginePropertyKey-enum">QPrintEngine::PrintEnginePropertyKey</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="doubleSidedPrinting">
<db:title>[since 4.2] bool QPrinter::doubleSidedPrinting() const</db:title>
<db:para>Returns <db:code>true</db:code> if double side printing is enabled.</db:para>
<db:para>Currently this option is only supported on X11.</db:para>
<db:para>This function was introduced in Qt 4.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setDoubleSidedPrinting">setDoubleSidedPrinting</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="duplex">
<db:title>[since 4.4] QPrinter::DuplexMode QPrinter::duplex() const</db:title>
<db:para>Returns the current duplex mode.</db:para>
<db:para>Currently this option is only supported on X11.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setDuplex">setDuplex</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fontEmbeddingEnabled">
<db:title>[since 4.1] bool QPrinter::fontEmbeddingEnabled() const</db:title>
<db:para>Returns <db:code>true</db:code> if font embedding is enabled.</db:para>
<db:para>Currently this option is only supported on X11.</db:para>
<db:para>This function was introduced in Qt 4.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setFontEmbeddingEnabled">setFontEmbeddingEnabled</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fromPage">
<db:title>[since 4.1] int QPrinter::fromPage() const</db:title>
<db:para>Returns the number of the first page in a range of pages to be printed (the &quot;from page&quot; setting). Pages in a document are numbered according to the convention that the first page is page 1.</db:para>
<db:para>By default, this function returns a special value of 0, meaning that the &quot;from page&quot; setting is unset.</db:para>
<db:note>
<db:para>If fromPage() and <db:link xlink:href="qprinter.xml#toPage">toPage</db:link>() both return 0, this indicates that <db:emphasis>the whole document will be printed</db:emphasis>.</db:para>
</db:note>
<db:para>This function was introduced in Qt 4.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setFromTo">setFromTo</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#toPage">toPage</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fullPage">
<db:title>bool QPrinter::fullPage() const</db:title>
<db:para>Returns <db:code>true</db:code> if the origin of the printer's coordinate system is at the corner of the page and false if it is at the edge of the printable area.</db:para>
<db:para>See <db:link xlink:href="qprinter.xml#setFullPage">setFullPage</db:link>() for details and caveats.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setFullPage">setFullPage</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isValid">
<db:title>[since 4.4] bool QPrinter::isValid() const</db:title>
<db:para>Returns <db:code>true</db:code> if the printer currently selected is a valid printer in the system, or a pure PDF printer; otherwise returns <db:code>false</db:code>.</db:para>
<db:para>To detect other failures check the output of <db:link xlink:href="qpainter.xml#begin">QPainter::begin</db:link>() or <db:link xlink:href="qprinter.xml#newPage">QPrinter::newPage</db:link>().</db:para>
<db:programlisting language="cpp">    QPrinter printer;
    printer.setOutputFormat(QPrinter::PdfFormat);
    printer.setOutputFileName(&quot;/foobar/nonwritable.pdf&quot;);
    QPainter painter;
    if (! painter.begin(&amp;printer)) { // failed to open file
        qWarning(&quot;failed to open file, is it writable?&quot;);
        return 1;
    }
    painter.drawText(10, 10, &quot;Test&quot;);
    if (! printer.newPage()) {
        qWarning(&quot;failed in flushing page to disk, disk full?&quot;);
        return 1;
    }
    painter.drawText(10, 10, &quot;Test 2&quot;);
    painter.end();
</db:programlisting>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPrinterName">setPrinterName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="newPage">
<db:title>[override virtual] bool QPrinter::newPage()</db:title>
<db:para>Reimplements: <db:link xlink:href="qpagedpaintdevice.xml#newPage" role="function">QPagedPaintDevice::newPage()</db:link>.</db:para>
<db:para>Tells the printer to eject the current page and to continue printing on a new page. Returns <db:code>true</db:code> if this was successful; otherwise returns <db:code>false</db:code>.</db:para>
<db:para>Calling newPage() on an inactive <db:link xlink:href="qprinter.xml">QPrinter</db:link> object will always fail.</db:para>
</db:section>
<db:section xml:id="outputFileName">
<db:title>QString QPrinter::outputFileName() const</db:title>
<db:para>Returns the name of the output file. By default, this is an empty string (indicating that the printer shouldn't print to file).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setOutputFileName">setOutputFileName</db:link>()</db:member>
<db:member><db:link xlink:href="qprintengine.xml#PrintEnginePropertyKey-enum">QPrintEngine::PrintEnginePropertyKey</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="outputFormat">
<db:title>[since 4.1] QPrinter::OutputFormat QPrinter::outputFormat() const</db:title>
<db:para>Returns the output format for this printer.</db:para>
<db:para>This function was introduced in Qt 4.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setOutputFormat">setOutputFormat</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pageLayout">
<db:title>[since 5.3] QPageLayout QPrinter::pageLayout() const</db:title>
<db:para>Returns the current page layout. Use this method to access the current <db:link xlink:href="qpagesize.xml">QPageSize</db:link>, <db:link xlink:href="qpagelayout.xml#Orientation-enum">QPageLayout::Orientation</db:link>, <db:link xlink:href="qmarginsf.xml">QMarginsF</db:link>, fullPageRect() and paintRect().</db:para>
<db:para>Note that you cannot use the setters on the returned object, you must either call the <db:link xlink:href="qprinter.xml">QPrinter</db:link> methods or <db:link xlink:href="qprinter.xml#setPageLayout">setPageLayout</db:link>().</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPageLayout">setPageLayout</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageSize" role="deprecated">setPageSize</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageOrientation">setPageOrientation</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageMargins">setPageMargins</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pageOrder">
<db:title>QPrinter::PageOrder QPrinter::pageOrder() const</db:title>
<db:para>Returns the current page order.</db:para>
<db:para>The default page order is <db:code>FirstPageFirst</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPageOrder">setPageOrder</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pageRect-1">
<db:title>[since 4.4] QRectF QPrinter::pageRect(QPrinter::Unit <db:emphasis>unit</db:emphasis>) const</db:title>
<db:para>Returns the page's rectangle in <db:code role="parameter">unit</db:code>; this is usually smaller than the paperRect() since the page normally has margins between its borders and the paper.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#paperSize" role="deprecated">paperSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="paintEngine">
<db:title>[override virtual] QPaintEngine *QPrinter::paintEngine() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qpaintdevice.xml#paintEngine" role="function">QPaintDevice::paintEngine() const</db:link>.</db:para>
<db:para>Returns the paint engine used by the printer.</db:para>
</db:section>
<db:section xml:id="paperRect-1">
<db:title>[since 4.4] QRectF QPrinter::paperRect(QPrinter::Unit <db:emphasis>unit</db:emphasis>) const</db:title>
<db:para>Returns the paper's rectangle in <db:code role="parameter">unit</db:code>; this is usually larger than the pageRect().</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#pageRect" role="deprecated">pageRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="paperSource">
<db:title>QPrinter::PaperSource QPrinter::paperSource() const</db:title>
<db:para>Returns the printer's paper source. This is <db:code>Manual</db:code> or a printer tray or paper cassette.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPaperSource">setPaperSource</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="printEngine">
<db:title>[since 4.1] QPrintEngine *QPrinter::printEngine() const</db:title>
<db:para>Returns the print engine used by the printer.</db:para>
<db:para>This function was introduced in Qt 4.1.</db:para>
</db:section>
<db:section xml:id="printProgram">
<db:title>QString QPrinter::printProgram() const</db:title>
<db:para>Returns the name of the program that sends the print output to the printer.</db:para>
<db:para>The default is to return an empty string; meaning that <db:link xlink:href="qprinter.xml">QPrinter</db:link> will try to be smart in a system-dependent way. On X11 only, you can set it to something different to use a specific print program. On the other platforms, this returns an empty string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPrintProgram">setPrintProgram</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPrinterSelectionOption">setPrinterSelectionOption</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="printRange">
<db:title>[since 4.1] QPrinter::PrintRange QPrinter::printRange() const</db:title>
<db:para>Returns the page range of the <db:link xlink:href="qprinter.xml">QPrinter</db:link>. After the print setup dialog has been opened, this function returns the value selected by the user.</db:para>
<db:para>This function was introduced in Qt 4.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPrintRange">setPrintRange</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="printerName">
<db:title>QString QPrinter::printerName() const</db:title>
<db:para>Returns the printer name. This value is initially set to the name of the default printer.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPrinterName">setPrinterName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="printerSelectionOption">
<db:title>QString QPrinter::printerSelectionOption() const</db:title>
<db:para>Returns the printer options selection string. This is useful only if the print command has been explicitly set.</db:para>
<db:para>The default value (an empty string) implies that the printer should be selected in a system-dependent manner.</db:para>
<db:para>Any other value implies that the given value should be used.</db:para>
<db:para>This function always returns an empty string on Windows and Mac.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPrinterSelectionOption">setPrinterSelectionOption</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPrintProgram">setPrintProgram</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="printerState">
<db:title>QPrinter::PrinterState QPrinter::printerState() const</db:title>
<db:para>Returns the current state of the printer. This may not always be accurate (for example if the printer doesn't have the capability of reporting its state to the operating system).</db:para>
</db:section>
<db:section xml:id="resolution">
<db:title>int QPrinter::resolution() const</db:title>
<db:para>Returns the current assumed resolution of the printer, as set by <db:link xlink:href="qprinter.xml#setResolution">setResolution</db:link>() or by the printer driver.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setResolution">setResolution</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCollateCopies">
<db:title>[since 4.1] void QPrinter::setCollateCopies(bool <db:emphasis>collate</db:emphasis>)</db:title>
<db:para>Sets the default value for collation checkbox when the print dialog appears. If <db:code role="parameter">collate</db:code> is true, it will enable setCollateCopiesEnabled(). The default value is false. This value will be changed by what the user presses in the print dialog.</db:para>
<db:para>This function was introduced in Qt 4.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#collateCopies">collateCopies</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setColorMode">
<db:title>void QPrinter::setColorMode(QPrinter::ColorMode <db:emphasis>newColorMode</db:emphasis>)</db:title>
<db:para>Sets the printer's color mode to <db:code role="parameter">newColorMode</db:code>, which can be either <db:code>Color</db:code> or <db:code>GrayScale</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#colorMode">colorMode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCopyCount">
<db:title>[since 4.7] void QPrinter::setCopyCount(int <db:emphasis>count</db:emphasis>)</db:title>
<db:para>Sets the number of copies to be printed to <db:code role="parameter">count</db:code>.</db:para>
<db:para>The printer driver reads this setting and prints the specified number of copies.</db:para>
<db:para>This function was introduced in Qt 4.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#copyCount">copyCount</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#supportsMultipleCopies">supportsMultipleCopies</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCreator">
<db:title>void QPrinter::setCreator(const QString &amp;<db:emphasis>creator</db:emphasis>)</db:title>
<db:para>Sets the name of the application that created the document to <db:code role="parameter">creator</db:code>.</db:para>
<db:para>This function is only applicable to the X11 version of Qt. If no creator name is specified, the creator will be set to &quot;Qt&quot; followed by some version number.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#creator">creator</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDocName">
<db:title>void QPrinter::setDocName(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Sets the document name to <db:code role="parameter">name</db:code>.</db:para>
<db:para>On X11, the document name is for example used as the default output filename in <db:link xlink:href="qprintdialog.xml">QPrintDialog</db:link>. Note that the document name does not affect the file name if the printer is printing to a file. Use the setOutputFile() function for this.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#docName">docName</db:link>()</db:member>
<db:member><db:link xlink:href="qprintengine.xml#PrintEnginePropertyKey-enum">QPrintEngine::PrintEnginePropertyKey</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDoubleSidedPrinting">
<db:title>[since 4.2] void QPrinter::setDoubleSidedPrinting(bool <db:emphasis>doubleSided</db:emphasis>)</db:title>
<db:para>Enables double sided printing if <db:code role="parameter">doubleSided</db:code> is true; otherwise disables it.</db:para>
<db:para>Currently this option is only supported on X11.</db:para>
<db:para>This function was introduced in Qt 4.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#doubleSidedPrinting">doubleSidedPrinting</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDuplex">
<db:title>[since 4.4] void QPrinter::setDuplex(QPrinter::DuplexMode <db:emphasis>duplex</db:emphasis>)</db:title>
<db:para>Enables double sided printing based on the <db:code role="parameter">duplex</db:code> mode.</db:para>
<db:para>Currently this option is only supported on X11.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#duplex">duplex</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setEngines">
<db:title>[protected, since 4.1] void QPrinter::setEngines(QPrintEngine *<db:emphasis>printEngine</db:emphasis>, QPaintEngine *<db:emphasis>paintEngine</db:emphasis>)</db:title>
<db:para>This function is used by subclasses of <db:link xlink:href="qprinter.xml">QPrinter</db:link> to specify custom print and paint engines (<db:code role="parameter">printEngine</db:code> and <db:code role="parameter">paintEngine</db:code>, respectively).</db:para>
<db:para><db:link xlink:href="qprinter.xml">QPrinter</db:link> does not take ownership of the engines, so you need to manage these engine instances yourself.</db:para>
<db:para>Note that changing the engines will reset the printer state and all its properties.</db:para>
<db:para>This function was introduced in Qt 4.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#printEngine">printEngine</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#paintEngine">paintEngine</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setOutputFormat">setOutputFormat</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFontEmbeddingEnabled">
<db:title>[since 4.1] void QPrinter::setFontEmbeddingEnabled(bool <db:emphasis>enable</db:emphasis>)</db:title>
<db:para>Enabled or disables font embedding depending on <db:code role="parameter">enable</db:code>.</db:para>
<db:para>Currently this option is only supported on X11.</db:para>
<db:para>This function was introduced in Qt 4.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#fontEmbeddingEnabled">fontEmbeddingEnabled</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFromTo">
<db:title>[since 4.1] void QPrinter::setFromTo(int <db:emphasis>from</db:emphasis>, int <db:emphasis>to</db:emphasis>)</db:title>
<db:para>Sets the range of pages to be printed to cover the pages with numbers specified by <db:code role="parameter">from</db:code> and <db:code role="parameter">to</db:code>, where <db:code role="parameter">from</db:code> corresponds to the first page in the range and <db:code role="parameter">to</db:code> corresponds to the last.</db:para>
<db:note>
<db:para>Pages in a document are numbered according to the convention that the first page is page 1. However, if <db:code role="parameter">from</db:code> and <db:code role="parameter">to</db:code> are both set to 0, the <db:emphasis>whole document will be printed</db:emphasis>.</db:para>
</db:note>
<db:para>This function is mostly used to set a default value that the user can override in the print dialog when you call setup().</db:para>
<db:para>This function was introduced in Qt 4.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#fromPage">fromPage</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#toPage">toPage</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFullPage">
<db:title>void QPrinter::setFullPage(bool <db:emphasis>fp</db:emphasis>)</db:title>
<db:para>If <db:code role="parameter">fp</db:code> is true, enables support for painting over the entire page; otherwise restricts painting to the printable area reported by the device.</db:para>
<db:para>By default, full page printing is disabled. In this case, the origin of the <db:link xlink:href="qprinter.xml">QPrinter</db:link>'s coordinate system coincides with the top-left corner of the printable area.</db:para>
<db:para>If full page printing is enabled, the origin of the <db:link xlink:href="qprinter.xml">QPrinter</db:link>'s coordinate system coincides with the top-left corner of the paper itself. In this case, the <db:link xlink:href="qpaintdevice.xml#PaintDeviceMetric-enum">device metrics</db:link> will report the exact same dimensions as indicated by <db:link xlink:href="qprinter.xml#PaperSize-enum">PaperSize</db:link>. It may not be possible to print on the entire physical page because of the printer's margins, so the application must account for the margins itself.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#fullPage">fullPage</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageSize" role="deprecated">setPageSize</db:link>()</db:member>
<db:member><db:link xlink:href="qpaintdevice.xml#width">width</db:link>()</db:member>
<db:member><db:link xlink:href="qpaintdevice.xml#height">height</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setOutputFileName">
<db:title>void QPrinter::setOutputFileName(const QString &amp;<db:emphasis>fileName</db:emphasis>)</db:title>
<db:para>Sets the name of the output file to <db:code role="parameter">fileName</db:code>.</db:para>
<db:para>Setting a null or empty name (0 or &quot;&quot;) disables printing to a file. Setting a non-empty name enables printing to a file.</db:para>
<db:para>This can change the value of <db:link xlink:href="qprinter.xml#outputFormat">outputFormat</db:link>(). If the file name has the &quot;.pdf&quot; suffix PDF is generated. If the file name has a suffix other than &quot;.pdf&quot;, the output format used is the one set with <db:link xlink:href="qprinter.xml#setOutputFormat">setOutputFormat</db:link>().</db:para>
<db:para><db:link xlink:href="qprinter.xml">QPrinter</db:link> uses Qt's cross-platform PDF print engines respectively. If you can produce this format natively, for example Mac OS X can generate PDF's from its print engine, set the output format back to <db:link xlink:href="qprinter.xml#OutputFormat-enum">NativeFormat</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#outputFileName">outputFileName</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setOutputFormat">setOutputFormat</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setOutputFormat">
<db:title>[since 4.1] void QPrinter::setOutputFormat(QPrinter::OutputFormat <db:emphasis>format</db:emphasis>)</db:title>
<db:para>Sets the output format for this printer to <db:code role="parameter">format</db:code>.</db:para>
<db:para>If <db:code role="parameter">format</db:code> is the same value as currently set then no change will be made.</db:para>
<db:para>If <db:code role="parameter">format</db:code> is <db:link xlink:href="qprinter.xml#OutputFormat-enum">NativeFormat</db:link> then the <db:link xlink:href="qprinter.xml#printerName">printerName</db:link> will be set to the default printer. If there are no valid printers configured then no change will be made. If you want to set <db:link xlink:href="qprinter.xml#OutputFormat-enum">NativeFormat</db:link> with a specific <db:link xlink:href="qprinter.xml#printerName">printerName</db:link> then use <db:link xlink:href="qprinter.xml#setPrinterName">setPrinterName</db:link>().</db:para>
<db:para>This function was introduced in Qt 4.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#outputFormat">outputFormat</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPrinterName">setPrinterName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPageLayout">
<db:title>[since 5.3] bool QPrinter::setPageLayout(const QPageLayout &amp;<db:emphasis>newLayout</db:emphasis>)</db:title>
<db:para>Sets the page layout to <db:code role="parameter">newLayout</db:code>.</db:para>
<db:para>If the <db:code role="parameter">newLayout</db:code> is not valid for the current printer then the page layout will not be changed. For example, if the page size is not supported by the printer, or if the margins fall outside the printable area.</db:para>
<db:para>Returns true if the page layout was successfully set to <db:code role="parameter">newLayout</db:code>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageSize" role="deprecated">setPageSize</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageOrientation">setPageOrientation</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageMargins">setPageMargins</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPageMargins">
<db:title>[since 5.3] bool QPrinter::setPageMargins(const QMarginsF &amp;<db:emphasis>margins</db:emphasis>, QPageLayout::Unit <db:emphasis>units</db:emphasis>)</db:title>
<db:para>Set the page margins to <db:code role="parameter">margins</db:code> in the given <db:code role="parameter">units</db:code>. If <db:code role="parameter">units</db:code> are not provided then the current units are used.</db:para>
<db:para>If in Full Page mode then no check is performed on the <db:code role="parameter">margins</db:code> set, otherwise the <db:code role="parameter">margins</db:code> must fall within the printable area for the page size on the current printer.</db:para>
<db:para>To obtain the current page margins use <db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>().pageMargins().</db:para>
<db:para>Returns true if the page margins was successfully set to <db:code role="parameter">margins</db:code>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageLayout">setPageLayout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPageOrder">
<db:title>void QPrinter::setPageOrder(QPrinter::PageOrder <db:emphasis>pageOrder</db:emphasis>)</db:title>
<db:para>Sets the page order to <db:code role="parameter">pageOrder</db:code>.</db:para>
<db:para>The page order can be <db:link xlink:href="qprinter.xml#PageOrder-enum">QPrinter::FirstPageFirst</db:link> or <db:link xlink:href="qprinter.xml#PageOrder-enum">QPrinter::LastPageFirst</db:link>. The application is responsible for reading the page order and printing accordingly.</db:para>
<db:para>This function is mostly useful for setting a default value that the user can override in the print dialog.</db:para>
<db:para>This function is only supported under X11.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#pageOrder">pageOrder</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPageOrientation">
<db:title>[since 5.3] bool QPrinter::setPageOrientation(QPageLayout::Orientation <db:emphasis>orientation</db:emphasis>)</db:title>
<db:para>Sets the page <db:code role="parameter">orientation</db:code> to <db:link xlink:href="qpagelayout.xml#Orientation-enum">QPageLayout::Portrait</db:link> or <db:link xlink:href="qpagelayout.xml#Orientation-enum">QPageLayout::Landscape</db:link>.</db:para>
<db:para>The printer driver reads this setting and prints the page using the specified orientation.</db:para>
<db:para>On Windows and Mac, this option can be changed while printing and will take effect from the next call to <db:link xlink:href="qprinter.xml#newPage">newPage</db:link>().</db:para>
<db:para>To obtain the current <db:link xlink:href="qpagelayout.xml#Orientation-enum">QPageLayout::Orientation</db:link> use <db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>().pageOrientation().</db:para>
<db:para>Returns true if the page orientation was successfully set to <db:code role="parameter">orientation</db:code>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageLayout">setPageLayout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPageSize-1">
<db:title>[since 5.3] bool QPrinter::setPageSize(const QPageSize &amp;<db:emphasis>pageSize</db:emphasis>)</db:title>
<db:para>Sets the page size to <db:code role="parameter">pageSize</db:code>.</db:para>
<db:para>If the <db:code role="parameter">pageSize</db:code> is not valid for the current printer then the page size will not be changed.</db:para>
<db:para>Changing the page size may affect the current page margins if they fall outside the printable margins for the new page size on the current printer.</db:para>
<db:para>To obtain the current <db:link xlink:href="qpagesize.xml">QPageSize</db:link> use <db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>().pageSize().</db:para>
<db:para>Returns true if the page size was successfully set to <db:code role="parameter">pageSize</db:code>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageLayout">setPageLayout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPaperSource">
<db:title>void QPrinter::setPaperSource(QPrinter::PaperSource <db:emphasis>source</db:emphasis>)</db:title>
<db:para>Sets the paper source setting to <db:code role="parameter">source</db:code>.</db:para>
<db:para>Windows only: This option can be changed while printing and will take effect from the next call to <db:link xlink:href="qprinter.xml#newPage">newPage</db:link>()</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#paperSource">paperSource</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPrintProgram">
<db:title>void QPrinter::setPrintProgram(const QString &amp;<db:emphasis>printProg</db:emphasis>)</db:title>
<db:para>Sets the name of the program that should do the print job to <db:code role="parameter">printProg</db:code>.</db:para>
<db:para>On X11, this function sets the program to call with the PDF output. On other platforms, it has no effect.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#printProgram">printProgram</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPrintRange">
<db:title>[since 4.1] void QPrinter::setPrintRange(QPrinter::PrintRange <db:emphasis>range</db:emphasis>)</db:title>
<db:para>Sets the print range option in to be <db:code role="parameter">range</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#printRange">printRange</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPrinterName">
<db:title>void QPrinter::setPrinterName(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Sets the printer name to <db:code role="parameter">name</db:code>.</db:para>
<db:para>If the <db:code role="parameter">name</db:code> is empty then the output format will be set to <db:link xlink:href="qprinter.xml#OutputFormat-enum">PdfFormat</db:link>.</db:para>
<db:para>If the <db:code role="parameter">name</db:code> is not a valid printer then no change will be made.</db:para>
<db:para>If the <db:code role="parameter">name</db:code> is a valid printer then the output format will be set to <db:link xlink:href="qprinter.xml#OutputFormat-enum">NativeFormat</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#printerName">printerName</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#isValid">isValid</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setOutputFormat">setOutputFormat</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPrinterSelectionOption">
<db:title>void QPrinter::setPrinterSelectionOption(const QString &amp;<db:emphasis>option</db:emphasis>)</db:title>
<db:para>Sets the printer to use <db:code role="parameter">option</db:code> to select the printer. <db:code role="parameter">option</db:code> is null by default (which implies that Qt should be smart enough to guess correctly), but it can be set to other values to use a specific printer selection option.</db:para>
<db:para>If the printer selection option is changed while the printer is active, the current print job may or may not be affected.</db:para>
<db:para>This function has no effect on Windows or Mac.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#printerSelectionOption">printerSelectionOption</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPrintProgram">setPrintProgram</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setResolution">
<db:title>void QPrinter::setResolution(int <db:emphasis>dpi</db:emphasis>)</db:title>
<db:para>Requests that the printer prints at <db:code role="parameter">dpi</db:code> or as near to <db:code role="parameter">dpi</db:code> as possible.</db:para>
<db:para>This setting affects the coordinate system as returned by, for example <db:link xlink:href="qpainter.xml#viewport">QPainter::viewport</db:link>().</db:para>
<db:para>This function must be called before <db:link xlink:href="qpainter.xml#begin">QPainter::begin</db:link>() to have an effect on all platforms.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#resolution">resolution</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPaperSize" role="deprecated">setPaperSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="supportedPaperSources">
<db:title>QList&lt;QPrinter::PaperSource&gt; QPrinter::supportedPaperSources() const</db:title>
<db:para>Returns the supported paper sizes for this printer.</db:para>
<db:para>The values will be either a value that matches an entry in the <db:link xlink:href="qprinter.xml#PaperSource-enum">QPrinter::PaperSource</db:link> enum or a driver spesific value. The driver spesific values are greater than the constant DMBIN_USER declared in wingdi.h.</db:para>
<db:warning>
<db:para>This function is only available in windows.</db:para>
</db:warning>
</db:section>
<db:section xml:id="supportedResolutions">
<db:title>QList&lt;int&gt; QPrinter::supportedResolutions() const</db:title>
<db:para>Returns a list of the resolutions (a list of dots-per-inch integers) that the printer says it supports.</db:para>
<db:para>For X11 where all printing is directly to PDF, this function will always return a one item list containing only the PDF resolution, i.e., 72 (72 dpi – but see <db:link xlink:href="qprinter.xml#PrinterMode-enum">PrinterMode</db:link>).</db:para>
</db:section>
<db:section xml:id="supportsMultipleCopies">
<db:title>[since 4.7] bool QPrinter::supportsMultipleCopies() const</db:title>
<db:para>Returns <db:code>true</db:code> if the printer supports printing multiple copies of the same document in one job; otherwise false is returned.</db:para>
<db:para>On most systems this function will return true. However, on X11 systems that do not support CUPS, this function will return false. That means the application has to handle the number of copies by printing the same document the required number of times.</db:para>
<db:para>This function was introduced in Qt 4.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setCopyCount">setCopyCount</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#copyCount">copyCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="toPage">
<db:title>[since 4.1] int QPrinter::toPage() const</db:title>
<db:para>Returns the number of the last page in a range of pages to be printed (the &quot;to page&quot; setting). Pages in a document are numbered according to the convention that the first page is page 1.</db:para>
<db:para>By default, this function returns a special value of 0, meaning that the &quot;to page&quot; setting is unset.</db:para>
<db:note>
<db:para>If <db:link xlink:href="qprinter.xml#fromPage">fromPage</db:link>() and toPage() both return 0, this indicates that <db:emphasis>the whole document will be printed</db:emphasis>.</db:para>
</db:note>
<db:para>The programmer is responsible for reading this setting and printing accordingly.</db:para>
<db:para>This function was introduced in Qt 4.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setFromTo">setFromTo</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#fromPage">fromPage</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for QPrinter</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qprinter.xml">QPrinter</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-member-function-documentation">
<db:title>Obsolete Member Function Documentation</db:title>
<db:section xml:id="actualNumCopies">
<db:title>[since 4.6, deprecated] int QPrinter::actualNumCopies() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Returns the number of copies that will be printed. The default value is 1.</db:para>
<db:para>This function always returns the actual value specified in the print dialog or using <db:link xlink:href="qprinter.xml#setNumCopies">setNumCopies</db:link>().</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#copyCount">copyCount</db:link>() instead.</db:para>
<db:para>This function was introduced in Qt 4.6.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setNumCopies">setNumCopies</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#numCopies">numCopies</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="getPageMargins">
<db:title>[since 4.4, deprecated] void QPrinter::getPageMargins(qreal *<db:emphasis>left</db:emphasis>, qreal *<db:emphasis>top</db:emphasis>, qreal *<db:emphasis>right</db:emphasis>, qreal *<db:emphasis>bottom</db:emphasis>, QPrinter::Unit <db:emphasis>unit</db:emphasis>) const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>().pageMargins() instead.</db:para>
<db:para>Returns the page margins for this printer in <db:code role="parameter">left</db:code>, <db:code role="parameter">top</db:code>, <db:code role="parameter">right</db:code>, <db:code role="parameter">bottom</db:code>. The unit of the returned margins are specified with the <db:code role="parameter">unit</db:code> parameter.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageMargins">setPageMargins</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="numCopies">
<db:title>[deprecated] int QPrinter::numCopies() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Returns the number of copies to be printed. The default value is 1.</db:para>
<db:para>On Windows, Mac OS X and X11 systems that support CUPS, this will always return 1 as these operating systems can internally handle the number of copies.</db:para>
<db:para>On X11, this value will return the number of times the application is required to print in order to match the number specified in the printer setup dialog. This has been done since some printer drivers are not capable of buffering up the copies and in those cases the application must make an explicit call to the print code for each copy.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#copyCount">copyCount</db:link>() in conjunction with <db:link xlink:href="qprinter.xml#supportsMultipleCopies">supportsMultipleCopies</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setNumCopies">setNumCopies</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#actualNumCopies">actualNumCopies</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="orientation">
<db:title>[deprecated] QPrinter::Orientation QPrinter::orientation() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>().pageOrientation() instead.</db:para>
<db:para>Returns the orientation setting. This is driver-dependent, but is usually <db:link xlink:href="qprinter.xml#Orientation-enum">QPrinter::Portrait</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setOrientation">setOrientation</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pageRect">
<db:title>[deprecated] QRect QPrinter::pageRect() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>().paintRect() instead.</db:para>
<db:para>Returns the page's rectangle; this is usually smaller than the <db:link xlink:href="qprinter.xml#paperRect">paperRect</db:link>() since the page normally has margins between its borders and the paper.</db:para>
<db:para>The unit of the returned rectangle is <db:link xlink:href="qprinter.xml#Unit-enum">DevicePixel</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pageSize">
<db:title>[deprecated] QPagedPaintDevice::PageSize QPrinter::pageSize() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>().pageSize().id() instead.</db:para>
<db:para>Returns the printer page size. The default value is driver-dependent.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPageSize">setPageSize</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="paperName">
<db:title>[since 5.1, deprecated] QString QPrinter::paperName() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>().<db:link xlink:href="qprinter.xml#pageSize">pageSize</db:link>().name() instead.</db:para>
<db:para>Returns the paper name of the paper set on the printer.</db:para>
<db:para>The default value for this is driver-dependent.</db:para>
<db:para>This function was introduced in Qt 5.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPaperName">setPaperName</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="paperRect">
<db:title>[deprecated] QRect QPrinter::paperRect() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>().fullPageRect() instead.</db:para>
<db:para>Returns the paper's rectangle; this is usually larger than the <db:link xlink:href="qprinter.xml#pageRect">pageRect</db:link>().</db:para>
<db:para>The unit of the returned rectangle is <db:link xlink:href="qprinter.xml#Unit-enum">DevicePixel</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="paperSize">
<db:title>[since 4.4, deprecated] QPrinter::PaperSize QPrinter::paperSize() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>().<db:link xlink:href="qprinter.xml#pageSize">pageSize</db:link>().id() instead.</db:para>
<db:para>Returns the printer paper size. The default value is driver-dependent.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPaperSize">setPaperSize</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="paperSize-1">
<db:title>[since 4.4, deprecated] QSizeF QPrinter::paperSize(QPrinter::Unit <db:emphasis>unit</db:emphasis>) const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>().<db:link xlink:href="qprinter.xml#pageSize">pageSize</db:link>().size() or <db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>().fullPageSize() instead.</db:para>
<db:para>Returns the paper size in <db:code role="parameter">unit</db:code>.</db:para>
<db:para>Note that the returned size reflects the current paper orientation.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setMargins">
<db:title>[override virtual, deprecated] void QPrinter::setMargins(const QPagedPaintDevice::Margins &amp;<db:emphasis>m</db:emphasis>)</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Reimplements: <db:link xlink:href="qpagedpaintdevice.xml#setMargins" role="function">QPagedPaintDevice::setMargins(const QPagedPaintDevice::Margins &amp;margins)</db:link>.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#setPageMargins">setPageMargins</db:link>(<db:link xlink:href="qmarginsf.xml">QMarginsF</db:link>, <db:link xlink:href="qpagelayout.xml#Unit-enum">QPageLayout::Unit</db:link>) instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPageMargins">setPageMargins</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setNumCopies">
<db:title>[deprecated] void QPrinter::setNumCopies(int <db:emphasis>numCopies</db:emphasis>)</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Sets the number of copies to be printed to <db:code role="parameter">numCopies</db:code>.</db:para>
<db:para>The printer driver reads this setting and prints the specified number of copies.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#setCopyCount">setCopyCount</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#numCopies">numCopies</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setOrientation">
<db:title>[deprecated] void QPrinter::setOrientation(QPrinter::Orientation <db:emphasis>orientation</db:emphasis>)</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#setPageOrientation">setPageOrientation</db:link>() instead.</db:para>
<db:para>Sets the print orientation to <db:code role="parameter">orientation</db:code>.</db:para>
<db:para>The orientation can be either <db:link xlink:href="qprinter.xml#Orientation-enum">QPrinter::Portrait</db:link> or <db:link xlink:href="qprinter.xml#Orientation-enum">QPrinter::Landscape</db:link>.</db:para>
<db:para>The printer driver reads this setting and prints using the specified orientation.</db:para>
<db:para>On Windows and Mac, this option can be changed while printing and will take effect from the next call to <db:link xlink:href="qprinter.xml#newPage">newPage</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#orientation">orientation</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageOrientation">setPageOrientation</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPageMargins-1">
<db:title>[since 4.4, deprecated] void QPrinter::setPageMargins(qreal <db:emphasis>left</db:emphasis>, qreal <db:emphasis>top</db:emphasis>, qreal <db:emphasis>right</db:emphasis>, qreal <db:emphasis>bottom</db:emphasis>, QPrinter::Unit <db:emphasis>unit</db:emphasis>)</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#setPageMargins">setPageMargins</db:link>(<db:link xlink:href="qmarginsf.xml">QMarginsF</db:link>, <db:link xlink:href="qpagelayout.xml#Unit-enum">QPageLayout::Unit</db:link>) instead.</db:para>
<db:para>This function sets the <db:code role="parameter">left</db:code>, <db:code role="parameter">top</db:code>, <db:code role="parameter">right</db:code> and <db:code role="parameter">bottom</db:code> page margins for this printer. The unit of the margins are specified with the <db:code role="parameter">unit</db:code> parameter.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPageMargins">setPageMargins</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPageSize">
<db:title>[override virtual, deprecated] void QPrinter::setPageSize(QPagedPaintDevice::PageSize <db:emphasis>newPageSize</db:emphasis>)</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Reimplements: <db:link xlink:href="qpagedpaintdevice.xml#setPageSize" role="function">QPagedPaintDevice::setPageSize(QPagedPaintDevice::PageSize size)</db:link>.</db:para>
<db:para>Use setPageSize(<db:link xlink:href="qpagesize.xml">QPageSize</db:link>) instead.</db:para>
<db:para>Sets the printer page size based on <db:code role="parameter">newPageSize</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#pageSize">pageSize</db:link>()</db:member>
<db:member>setPageSize()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPageSizeMM">
<db:title>[override virtual, deprecated] void QPrinter::setPageSizeMM(const QSizeF &amp;<db:emphasis>size</db:emphasis>)</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Reimplements: <db:link xlink:href="qpagedpaintdevice.xml#setPageSizeMM" role="function">QPagedPaintDevice::setPageSizeMM(const QSizeF &amp;size)</db:link>.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#setPageSize">setPageSize</db:link>(<db:link xlink:href="qpagesize.xml">QPageSize</db:link>) instead.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#setPageSize">setPageSize</db:link>(<db:link xlink:href="qpagesize.xml">QPageSize</db:link>) instead.</db:para>
<db:para>Note that the page size is defined in a portrait layout, regardless of what the current printer orientation is set to.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPageSize">setPageSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPaperName">
<db:title>[since 5.1, deprecated] void QPrinter::setPaperName(const QString &amp;<db:emphasis>paperName</db:emphasis>)</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#setPageSize">setPageSize</db:link>(<db:link xlink:href="qpagesize.xml">QPageSize</db:link>) instead.</db:para>
<db:para>Sets the paper used by the printer to <db:code role="parameter">paperName</db:code>.</db:para>
<db:para>This function was introduced in Qt 5.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#paperName">paperName</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageSize">setPageSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPaperSize">
<db:title>[since 4.4, deprecated] void QPrinter::setPaperSize(QPrinter::PaperSize <db:emphasis>newPaperSize</db:emphasis>)</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#setPageSize">setPageSize</db:link>(<db:link xlink:href="qpagesize.xml">QPageSize</db:link>) instead.</db:para>
<db:para>Sets the printer paper size to <db:code role="parameter">newPaperSize</db:code> if that size is supported. The result is undefined if <db:code role="parameter">newPaperSize</db:code> is not supported.</db:para>
<db:para>The default paper size is driver-dependent.</db:para>
<db:para>This function is useful mostly for setting a default value that the user can override in the print dialog.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#paperSize">paperSize</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPageSize">setPageSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPaperSize-1">
<db:title>[since 4.4, deprecated] void QPrinter::setPaperSize(const QSizeF &amp;<db:emphasis>paperSize</db:emphasis>, QPrinter::Unit <db:emphasis>unit</db:emphasis>)</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#setPageSize">setPageSize</db:link>(<db:link xlink:href="qpagesize.xml">QPageSize</db:link>) instead.</db:para>
<db:para>Sets the paper size based on <db:code role="parameter">paperSize</db:code> in <db:code role="parameter">unit</db:code>.</db:para>
<db:para>Note that the paper size is defined in a portrait layout, regardless of what the current printer orientation is set to.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setPageSize">setPageSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setWinPageSize">
<db:title>[deprecated] void QPrinter::setWinPageSize(int <db:emphasis>pageSize</db:emphasis>)</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qpagesize.xml#id">QPageSize::id</db:link>(windowsId) and <db:link xlink:href="qprinter.xml#setPageLayout">setPageLayout</db:link>(<db:link xlink:href="qpagesize.xml">QPageSize</db:link>) instead.</db:para>
<db:para>Sets the page size to be used by the printer under Windows to <db:code role="parameter">pageSize</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#winPageSize">winPageSize</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="winPageSize">
<db:title>[deprecated] int QPrinter::winPageSize() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>.<db:link xlink:href="qprinter.xml#pageSize">pageSize</db:link>().windowsId() instead.</db:para>
<db:para>Returns the page size used by the printer under Windows.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinter.xml#setWinPageSize">setWinPageSize</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#pageLayout">pageLayout</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:section>
</db:article>
