<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Scene3D QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qml-qtquick-scene3d-scene3d.xml">Scene3D</db:link> type is used to integrate a Qt3D scene into a <db:link xlink:href="qtquick-module.xml">QtQuick</db:link> 2 scene.</db:para>
<db:para><db:emphasis role="bold">This type is under development and is subject to change.</db:emphasis></db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Scene3D 2.12</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Item</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtquick-scene3d-scene3d.xml">Scene3D</db:link> type renders a Qt3D scene, provided by an <db:link xlink:href="qml-qt3d-core-entity.xml">Entity</db:link>, into a multisampled Framebuffer object. This object is later blitted into a non-multisampled Framebuffer object, which is then rendered with premultiplied alpha. If multisampling is not required, it can be avoided by setting the <db:link xlink:href="qml-qtquick-scene3d-scene3d.xml#multisample-prop">multisample</db:link> property to <db:code>false</db:code>. In this case <db:link xlink:href="qml-qtquick-scene3d-scene3d.xml">Scene3D</db:link> will render directly into the non-multisampled Framebuffer object.</db:para>
<db:para>If the scene to be rendered includes non-opaque materials, you may need to modify those materials with custom blend arguments in order for them to be rendered correctly. For example, if working with a <db:link xlink:href="qml-qt3d-extras-phongalphamaterial.xml" role="deprecated">PhongAlphaMaterial</db:link> and a scene with an opaque clear color, you will likely want to add:</db:para>
<db:programlisting language="qml">sourceAlphaArg: BlendEquationArguments.Zero
destinationAlphaArg: BlendEquationArguments.One
</db:programlisting>
<db:para>to that material.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="aspects-prop">
<db:title>aspects : list&lt;string&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;string&gt;</db:type>
<db:varname>aspects</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The list of aspects that should be registered for the 3D scene.</db:para>
<db:para>For example, if the scene makes use of <db:link xlink:href="qml-qt3d-logic-frameaction.xml">FrameAction</db:link>, the <db:code>&quot;logic&quot;</db:code> aspect should be included in the list.</db:para>
<db:para>The <db:code>&quot;render&quot;</db:code> aspect is hardwired and does not need to be explicitly listed.</db:para>
</db:section>
<db:section xml:id="cameraAspectRatioMode-prop">
<db:title>cameraAspectRatioMode : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>cameraAspectRatioMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Scene3D.AutomaticAspectRatio</db:para>
</db:td>
<db:td>
<db:para>Automatic aspect ratio.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Scene3D.UserAspectRatio</db:para>
</db:td>
<db:td>
<db:para>User defined aspect ratio.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para></db:para>
</db:section>
<db:section xml:id="entity-prop">
<db:title>entity : Entity</db:title>
<db:fieldsynopsis>
<db:type>Entity</db:type>
<db:varname>entity</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The root entity of the 3D scene to be displayed.</db:para>
</db:section>
<db:section xml:id="hoverEnabled-prop">
<db:title>hoverEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>hoverEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para><db:code>true</db:code> if hover events are accepted.</db:para>
</db:section>
<db:section xml:id="multisample-prop">
<db:title>multisample : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>multisample</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para><db:code>true</db:code> if a multisample render buffer is requested.</db:para>
<db:para>By default multisampling is enabled. If the OpenGL implementation has no support for multisample renderbuffers or framebuffer blits, the request to use multisampling is ignored.</db:para>
<db:note>
<db:para>Refrain from changing the value frequently as it involves expensive and potentially slow initialization of framebuffers and other OpenGL resources.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="setItemAreaAndDevicePixelRatio-method">
<db:title>void setItemAreaAndDevicePixelRatio(size <db:emphasis>area</db:emphasis>, real <db:emphasis>devicePixelRatio</db:emphasis>)</db:title>
<db:para></db:para>
</db:section>
</db:section>
</db:article>
