<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ColorDialog QML Type</db:title>
<db:productname>QtQuickDialogs</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Dialogs Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A color dialog.</db:para>
<db:para>This type was introduced in Qt 6.4.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Dialogs</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-dialogs-dialog.xml">Dialog</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtquick-dialogs-colordialog.xml">ColorDialog</db:link> type provides a QML API for color dialogs.</db:para>
<db:mediaobject>
<db:alt>{The color dialog can be customised using the options property}</db:alt>
<db:imageobject>
<db:imagedata fileref="images/qtquickdialogs-colordialog-gtk.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>To show a color dialog, construct an instance of <db:link xlink:href="qml-qtquick-dialogs-colordialog.xml">ColorDialog</db:link>, set the desired properties, and call <db:link xlink:href="qml-qtquick-dialogs-dialog.xml#open-method">open</db:link>(). The <db:link xlink:href="qml-qtquick-dialogs-colordialog.xml#selectedColor-prop">selectedColor</db:link> property can be used to determine the initially selected color in the dialog.</db:para>
<db:programlisting language="cpp">MenuItem {
    text: qsTr(&quot;Color&quot;)
    onTriggered: colorDialog.open()
}

ColorDialog {
    id: colorDialog
    selectedColor: document.color
    onAccepted: document.color = selectedColor
}

MyDocument {
    id: document
}
</db:programlisting>
<db:section xml:id="availability">
<db:title>Availability</db:title>
<db:para>A native platform color dialog is currently available on the following platforms:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>iOS</db:para>
</db:listitem>
<db:listitem>
<db:para>Linux (when running with the GTK+ platform theme)</db:para>
</db:listitem>
<db:listitem>
<db:para>macOS</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Qt Quick Dialogs uses a Qt Quick implementation as a fallback on platforms that do not have a native implementation available.</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="options-prop">
<db:title>options : flags</db:title>
<db:para>This property holds the various options that affect the look and feel of the dialog.</db:para>
<db:para>By default, all options are disabled.</db:para>
<db:para>Options should be set before showing the dialog. Setting them while the dialog is visible is not guaranteed to have an immediate effect on the dialog (depending on the option and on the platform).</db:para>
<db:para>Available options:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>ColorDialog.ShowAlphaChannel</db:para>
</db:td>
<db:td>
<db:para>Show a slider and additional input fields for the alpha value.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ColorDialog.NoButtons</db:para>
</db:td>
<db:td>
<db:para>Don't display <db:guilabel>Open</db:guilabel> and <db:guilabel>Cancel</db:guilabel> buttons (useful for &quot;live dialogs&quot;).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ColorDialog.NoEyeDropperButton</db:para>
</db:td>
<db:td>
<db:para>Don't display <db:guilabel>Eye Dropper</db:guilabel> button. This value was added in Qt 6.6.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ColorDialog.DontUseNativeDialog</db:para>
</db:td>
<db:td>
<db:para>Forces the dialog to use a non-native quick implementation.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="selectedColor-prop">
<db:title>selectedColor : color</db:title>
<db:para>This property holds the currently selected color in the dialog.</db:para>
<db:para>The <db:link xlink:href="qml-qtquick-dialogs-dialog.xml#accepted-signal">accepted</db:link>() signal can be handled to get the final selection. When the user has clicked <db:guilabel>Open</db:guilabel> to accept a color, a signal handler for the <db:link xlink:href="qml-qtquick-dialogs-dialog.xml#accepted-signal">accepted</db:link>() signal can query the selectedColor property to get the final color that was selected by the user.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-dialogs-dialog.xml#accepted-signal">accepted</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
