<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QGraphicsScale Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgraphicsscale.xml">QGraphicsScale</db:link> class provides a scale transformation.</db:para>
<db:para>This class was introduced in Qt 4.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGraphicsScale</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qgraphicstransform.xml" xlink:role="class">QGraphicsTransform</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qgraphicsscene.xml">QGraphicsScene</db:link> provides certain parameters to help control how the scale should be applied.</db:para>
<db:para>The origin is the point that the item is scaled from (i.e., it stays fixed relative to the parent as the rest of the item grows). By default the origin is <db:link xlink:href="qpointf.xml">QPointF</db:link>(0, 0).</db:para>
<db:para>The parameters xScale, yScale, and zScale describe the scale factors to apply in horizontal, vertical, and depth directions. They can take on any value, including 0 (to collapse the item to a point) or negative value. A negative xScale value will mirror the item horizontally. A negative yScale value will flip the item vertically. A negative zScale will flip the item end for end.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicstransform.xml">QGraphicsTransform</db:link></db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#setScale">QGraphicsItem::setScale</db:link>()</db:member>
<db:member><db:link xlink:href="qtransform.xml#scale">QTransform::scale</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGraphicsScale">
<db:title>QGraphicsScale::QGraphicsScale(QObject *<db:emphasis>parent</db:emphasis> = 0)</db:title>
<db:para>Constructs an empty <db:link xlink:href="qgraphicsscale.xml">QGraphicsScale</db:link> object with the given <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QGraphicsScale">
<db:title>[virtual noexcept] QGraphicsScale::~QGraphicsScale()</db:title>
<db:para>Destroys the graphics scale.</db:para>
</db:section>
<db:section xml:id="applyTo">
<db:title>[override virtual] void QGraphicsScale::applyTo(QMatrix4x4 *<db:emphasis>matrix</db:emphasis>) const</db:title>
<db:para>Reimplements: <db:link xlink:href="qgraphicstransform.xml#applyTo" role="function">QGraphicsTransform::applyTo(QMatrix4x4 *matrix) const</db:link>.</db:para>
</db:section>
<db:section xml:id="originChanged">
<db:title>void QGraphicsScale::originChanged()</db:title>
<db:para><db:link xlink:href="qgraphicsscale.xml">QGraphicsScale</db:link> emits this signal when its origin changes.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">QGraphicsScale::origin</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="scaleChanged">
<db:title>void QGraphicsScale::scaleChanged()</db:title>
<db:para>This signal is emitted whenever the xScale, yScale, or zScale of the object changes.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">QGraphicsScale::xScale</db:link></db:member>
<db:member><db:link xlink:href="">QGraphicsScale::yScale</db:link></db:member>
<db:member><db:link xlink:href="">QGraphicsScale::zScale</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="xScaleChanged">
<db:title>[since 4.7] void QGraphicsScale::xScaleChanged()</db:title>
<db:para>This signal is emitted whenever the xScale property changes.</db:para>
<db:para>This function was introduced in Qt 4.7.</db:para>
</db:section>
<db:section xml:id="yScaleChanged">
<db:title>[since 4.7] void QGraphicsScale::yScaleChanged()</db:title>
<db:para>This signal is emitted whenever the yScale property changes.</db:para>
<db:para>This function was introduced in Qt 4.7.</db:para>
</db:section>
<db:section xml:id="zScaleChanged">
<db:title>[since 4.7] void QGraphicsScale::zScaleChanged()</db:title>
<db:para>This signal is emitted whenever the zScale property changes.</db:para>
<db:para>This function was introduced in Qt 4.7.</db:para>
</db:section>
</db:section>
</db:article>
