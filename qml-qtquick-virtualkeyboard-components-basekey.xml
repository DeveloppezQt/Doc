<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>BaseKey QML Type</db:title>
<db:productname>QtVirtualKeyboard</db:productname>
<db:edition>Qt Virtual Keyboard | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Virtual Keyboard</db:titleabbrev>
<db:abstract>
<db:para>Common parent for all key types.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.VirtualKeyboard.Components</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-virtualkeyboard-components-backspacekey.xml" xlink:role="">BackspaceKey</db:link>, <db:link xlink:href="qml-qtquick-virtualkeyboard-components-changelanguagekey.xml" xlink:role="">ChangeLanguageKey</db:link>, <db:link xlink:href="qml-qtquick-virtualkeyboard-components-enterkey.xml" xlink:role="">EnterKey</db:link>, <db:link xlink:href="qml-qtquick-virtualkeyboard-components-fillerkey.xml" xlink:role="">FillerKey</db:link>, <db:link xlink:href="qml-qtquick-virtualkeyboard-components-hidekeyboardkey.xml" xlink:role="">HideKeyboardKey</db:link>, <db:link xlink:href="qml-qtquick-virtualkeyboard-components-key.xml" xlink:role="">Key</db:link>, and <db:link xlink:href="qml-qtquick-virtualkeyboard-components-shiftkey.xml" xlink:role="">ShiftKey</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Item</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>BaseKey is part of <db:simplelist><db:member>qmlclass</db:member><db:member>qtvirtualkeyboard-components-qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-virtualkeyboard-components-basekey.xml">BaseKey</db:link> is a common type for all keys in keyboard layout.</db:para>
<db:para>This type should not be used directly in the layouts. The specialized key types, such as Key or <db:link xlink:href="qml-qtquick-virtualkeyboard-components-enterkey.xml">EnterKey</db:link> should be used instead.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="active-prop">
<db:title>active : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>active</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the active status of the key.</db:para>
<db:para>This property is automatically set to true when the key is pressed.</db:para>
</db:section>
<db:section xml:id="alternativeKeys-prop">
<db:title>alternativeKeys : var</db:title>
<db:fieldsynopsis>
<db:type>var</db:type>
<db:varname>alternativeKeys</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the list of alternative keys.</db:para>
<db:para>This property can be set to a string, or a list of strings. If the value is a string, the alternative keys are presented as individual characters of that string. If the value is a list of strings, the list is used instead.</db:para>
<db:para>The alternative keys are presented to the user by pressing and holding a key with this property set.</db:para>
<db:note>
<db:para>If the alternative keys contains the key <db:code>text</db:code>, it will be filtered from the <db:code>effectiveAlternativeKeys</db:code> and its position will be used as an indicator for the highlighted item instead.</db:para>
</db:note>
<db:para>The default is empty list.</db:para>
</db:section>
<db:section xml:id="displayAlternativeKeys-prop">
<db:title>[since QtQuick.VirtualKeyboard 6.2] displayAlternativeKeys : var</db:title>
<db:fieldsynopsis>
<db:type>var</db:type>
<db:varname>displayAlternativeKeys</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property allows overriding the list of key strings presented to the user in the alternative keys view.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard 6.2.</db:para>
</db:section>
<db:section xml:id="displayText-prop">
<db:title>displayText : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>displayText</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the display text.</db:para>
<db:para>This string is rendered in the keyboard layout.</db:para>
<db:para>The default value is the key text.</db:para>
</db:section>
<db:section xml:id="effectiveAlternativeKeys-prop">
<db:title>[read-only, since QtQuick.VirtualKeyboard 2.0] effectiveAlternativeKeys : var</db:title>
<db:fieldsynopsis>
<db:type>var</db:type>
<db:varname>effectiveAlternativeKeys</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property contains the effective alternative keys presented to user.</db:para>
<db:para>The list is contains the items in the <db:code>alternativeKeys</db:code> excluding the <db:code>text</db:code> item.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard 2.0.</db:para>
</db:section>
<db:section xml:id="effectiveAlternativeKeysHighlightIndex-prop">
<db:title>[read-only, since QtQuick.VirtualKeyboard 2.0] effectiveAlternativeKeysHighlightIndex : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>effectiveAlternativeKeysHighlightIndex</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property contains the index of highlighted item in the <db:code>effectiveAlternativeKeys</db:code>.</db:para>
<db:para>The index is calculated from the index of the key <db:code>text</db:code> in the <db:code>alternativeKeys</db:code>.</db:para>
<db:para>For example, if the alternative keys contains &quot;çcċčć&quot; and the key <db:code>text</db:code> is &quot;c&quot;, this index will become 1 and the effective alternative keys presented to user will be &quot;ç[ċ]čć&quot;.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard 2.0.</db:para>
</db:section>
<db:section xml:id="functionKey-prop">
<db:title>functionKey : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>functionKey</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the function key attribute.</db:para>
<db:para>The default is false.</db:para>
</db:section>
<db:section xml:id="highlighted-prop">
<db:title>highlighted : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>highlighted</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the highlighted status of the key.</db:para>
<db:para>The default is false.</db:para>
</db:section>
<db:section xml:id="key-prop">
<db:title>key : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>key</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the key code for input method processing.</db:para>
<db:para>The default is Qt.Key_unknown.</db:para>
</db:section>
<db:section xml:id="keyPanelDelegate-prop">
<db:title>keyPanelDelegate : alias</db:title>
<db:fieldsynopsis>
<db:type>alias</db:type>
<db:varname>keyPanelDelegate</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the key panel delegate for the key.</db:para>
<db:para>This property is essential for key decoration. Without a key panel delegate, the key is invisible. This property should be assigned in the inherited key type.</db:para>
</db:section>
<db:section xml:id="keyType-prop">
<db:title>[since QtQuick.VirtualKeyboard 6.1] keyType : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>keyType</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para><db:link xlink:href="qml-qtquick-virtualkeyboard-components-key.xml">Key</db:link> type for the specialized key. Possible values are defined by the {QtVirtualKeyboard::KeyType}{key type enumeration}.</db:para>
<db:para>For example, <db:link xlink:href="qml-qtquick-virtualkeyboard-components-spacekey.xml">SpaceKey</db:link> sets this value to <db:emphasis>QtVirtualKeyboard.KeyType.SpaceKey</db:emphasis>.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard 6.1.</db:para>
</db:section>
<db:section xml:id="noKeyEvent-prop">
<db:title>[since QtQuick.VirtualKeyboard 1.3] noKeyEvent : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>noKeyEvent</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property controls whether the key emits key events for input method processing. When true, the key events are disabled.</db:para>
<db:para>By default, the key event is emitted if the <db:emphasis>key</db:emphasis> is not unknown or the <db:emphasis>text</db:emphasis> is not empty.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard 1.3.</db:para>
</db:section>
<db:section xml:id="noModifier-prop">
<db:title>[since QtQuick.VirtualKeyboard 1.3] noModifier : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>noModifier</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Disables key modifiers on the emitted key.</db:para>
<db:para>The default is false.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard 1.3.</db:para>
</db:section>
<db:section xml:id="pressed-prop">
<db:title>pressed : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>pressed</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the pressed status of the key.</db:para>
<db:para>The pressed status can only be true if the key is both enabled and active. When the key state becomes pressed, it triggers a key down event for the input engine. A key up event is triggered when the key is released.</db:para>
</db:section>
<db:section xml:id="repeat-prop">
<db:title>repeat : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>repeat</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the key repeat attribute.</db:para>
<db:para>If the repeat is enabled, the key will repeat the input events while held down. The repeat should not be used if <db:link xlink:href="qml-qtquick-virtualkeyboard-components-basekey.xml#alternativeKeys-prop">alternativeKeys</db:link> is also set.</db:para>
<db:para>The default is false.</db:para>
</db:section>
<db:section xml:id="showPreview-prop">
<db:title>showPreview : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>showPreview</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the show preview attribute.</db:para>
<db:para>By default, the character preview popup is not shown for function keys.</db:para>
</db:section>
<db:section xml:id="smallText-prop">
<db:title>[since QtQuick.VirtualKeyboard 2.0] smallText : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>smallText</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the small text rendered in the corner of the key.</db:para>
<db:para>The default value based on the default item in the effective alternative keys.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard 2.0.</db:para>
</db:section>
<db:section xml:id="smallTextVisible-prop">
<db:title>[since QtQuick.VirtualKeyboard 2.0] smallTextVisible : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>smallTextVisible</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the visibility of small text.</db:para>
<db:para>The default value is inherited from the parent.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard 2.0.</db:para>
</db:section>
<db:section xml:id="soundEffect-prop">
<db:title>[read-only, since QtQuick.VirtualKeyboard 1.1] soundEffect : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>soundEffect</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the sound effect to be played on key press.</db:para>
<db:para>This property is read-only since the sound effects are defined in the keyboard style.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard 1.1.</db:para>
</db:section>
<db:section xml:id="text-prop">
<db:title>text : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>text</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the key text for input method processing.</db:para>
<db:para>In most cases, this is the Unicode representation of the key code.</db:para>
<db:para>The default value is an empty string.</db:para>
</db:section>
<db:section xml:id="uppercased-prop">
<db:title>uppercased : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>uppercased</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the uppercase status of the key.</db:para>
<db:para>By default, this property reflects the uppercase status of the keyboard.</db:para>
</db:section>
<db:section xml:id="weight-prop">
<db:title>weight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>weight</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the key weight value which determines the relative size of the key.</db:para>
<db:para>Use this property to change the key size in the layout.</db:para>
<db:para>The default value is inherited from the parent element of the key in the layout hierarchy.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="clicked-signal">
<db:title>clicked()</db:title>
<db:para>This signal is triggered when the key is pressed, allowing custom processing of key.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onClicked</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
