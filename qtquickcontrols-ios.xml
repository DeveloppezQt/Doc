<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>iOS Style</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Quick Controls Reference Documentation.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The iOS Style is a native-looking style for iOS based on image assets. <db:link xlink:href="qtquickcontrols-ios.xml#detailed-desc-ios">More...</db:link></db:para>
<db:variablelist><db:varlistentry><db:term>Import Statement</db:term><db:listitem><db:para>import QtQuick.Controls.iOS</db:para></db:listitem></db:varlistentry><db:varlistentry><db:term>Since</db:term><db:listitem><db:para>Qt 6.4</db:para></db:listitem></db:varlistentry></db:variablelist><db:section xml:id="detailed-description">
<db:title>Detailed Description</db:title>
<db:anchor xml:id="detailed-desc-ios"/>
<db:para>The iOS style is designed to look and feel as similar as possible to the native controls in UIKit. Most of the controls make use of <db:link xlink:href="https://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch">9-patch images</db:link> to draw their components, in order to accommodate controls of varying sizes. For controls that do not have a native counterpart in UIKit, the iOS style provides a custom look based on colors and styles following <db:link xlink:href="https://developer.apple.com/design/human-interface-guidelines/ios/visual-design/color/">iOS' Human Interface Guidelines </db:link>. The iOS style is not a native iOS style, and as such, can run on platforms other than iOS. However, for the time being, it is made available only for applications running on macOS and iOS and should look the same on both platforms, besides minor differences that may occur due to differences in available system fonts and font rendering engines.</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:figure>
<db:title>The light theme of the iOS style.</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-ios-light.png"/>
</db:imageobject>
</db:mediaobject>
</db:figure>
</db:td>
<db:td>
<db:figure>
<db:title>The dark theme of the iOS style.</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-ios-dark.png"/>
</db:imageobject>
</db:mediaobject>
</db:figure>
</db:td>
</db:tr>
</db:informaltable>
<db:para>To run an application with the iOS style, see <db:link xlink:href="qtquickcontrols-styles.xml#using-styles-in-qt-quick-controls">Using Styles in Qt Quick Controls</db:link>.</db:para>
<db:section xml:id="current-state">
<db:title>Current state</db:title>
<db:para>The <db:link xlink:href="qml-qtquick-controls-tumbler.xml">Tumbler</db:link> control is not yet implemented for the iOS style and will fall back to use the <db:link xlink:href="qtquickcontrols-basic.xml">Basic Style</db:link>.</db:para>
</db:section>
<db:section xml:id="customization">
<db:title>Customization</db:title>
<db:section xml:id="palette">
<db:title>Palette</db:title>
<db:para>The iOS style supports palette customization via the <db:link xlink:href="qml-qtquick-item.xml#palette-prop">palette</db:link> property and the <db:link xlink:href="qtquickcontrols-configuration.xml#palette-configuration">qtquickcontrols2.conf</db:link> file. As with other styles, the exact <db:link xlink:href="qml-qtquick-palette.xml">palette roles</db:link> that the iOS style uses are style-dependent. However, as most of the visual appearance of controls (for example: backgrounds) is managed through image assets, only the roles that are typically used for text will have an effect.</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
