<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Using lrelease</db:title>
<db:productname>QtLinguist</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Linguist Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="linguist-lupdate.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Using lupdate"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="linguist-translators.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="Translators"/></db:extendedlink>
<db:abstract>
<db:para>Qt Linguist Manual.</db:para></db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="lrelease"/>
<db:para>The <db:code>lrelease</db:code> command line tool produces QM files out of TS files. The QM file format is a compact binary format that the localized application uses. It provides extremely fast lookup for translations.</db:para>
<db:para>When building with qmake, specify the files to process at the command line or in a .pro file.</db:para>
<db:para>When building with CMake, use <db:link xlink:href="cmake-commands-qtlinguisttools.xml">CMake commands</db:link> to add targets that create or update TS files and transform them into QM files. The <db:code>lrelease</db:code> tool is run with the <db:link xlink:href="linguist-lrelease.xml#lrelease-options">options</db:link> you pass to the commands when you build the target.</db:para>
<db:para>Run <db:code>lrelease</db:code> whenever you want to release the application, from the initial test version through to the final release version. The application does not need QM files to run, but if they are available, the application detects them and uses them automatically.</db:para>
<db:note>
<db:para>The <db:code>lrelease</db:code> tool only incorporates translations that you mark as <db:emphasis>finished</db:emphasis>. Otherwise, it uses the original text instead.</db:para>
</db:note>
<db:section xml:id="lrelease-syntax">
<db:title>lrelease syntax</db:title>
<db:programlisting language="cpp" role="bad">lrelease [options] -project project-file
lrelease [options] ts-files [-qm qm-file]
</db:programlisting>
<db:para>Where:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:code>options</db:code> means one or several <db:link xlink:href="linguist-lrelease.xml#lrelease-options">lrelease options</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>project-file</db:code> is the project configuration file.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>ts-files</db:code> are the TS files to use as input for the QM files.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>qm-file</db:code> is the name of the QM file to generate.</db:para>
</db:listitem>
</db:itemizedlist>
<db:note>
<db:para>Passing .pro files to <db:code>lrelease</db:code> is deprecated. Use the <db:code>lrelease-pro</db:code> tool or the <db:code>lrelease.prf</db:code> feature when using qmake.</db:para>
</db:note>
<db:para>To view the latest help, enter:</db:para>
<db:programlisting language="cpp" role="bad">lrelease -help
</db:programlisting>
<db:section xml:id="lrelease-options">
<db:title>lrelease options</db:title>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Option</db:para>
</db:th>
<db:th>
<db:para>Action</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>-help</db:code></db:para>
</db:td>
<db:td>
<db:para>Display up-to-date help information and exit.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>-idbased</db:code></db:para>
</db:td>
<db:td>
<db:para>Use IDs instead of source strings for message keying.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>-compress</db:code></db:para>
</db:td>
<db:td>
<db:para>Compress the QM files.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>-nounfinished</db:code></db:para>
</db:td>
<db:td>
<db:para>Do not include unfinished translations.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>-removeidentical</db:code></db:para>
</db:td>
<db:td>
<db:para>If the translated text is the same as the source text, exclude the message.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>-markuntranslated &lt;prefix&gt;</db:code></db:para>
</db:td>
<db:td>
<db:para>If a message has no real translation, use the source text prefixed with the given string instead.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>-project &lt;filename&gt;</db:code></db:para>
</db:td>
<db:td>
<db:para>Name of a file containing the project's description in JSON format. You can use the <db:code>lprodump</db:code> tool to generate the file from a .pro file.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>-silent</db:code></db:para>
</db:td>
<db:td>
<db:para>Do not explain what is being done.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>-version</db:code></db:para>
</db:td>
<db:td>
<db:para>Display the version of <db:code>lrelease</db:code> and exit.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:section xml:id="using-lrelease-with-cmake">
<db:title>Using lrelease with CMake</db:title>
<db:para>When building with CMake, use <db:link xlink:href="cmake-commands-qtlinguisttools.xml">CMake commands</db:link> to add translations on targets to the CMakeLists.txt file, and then build the targets.</db:para>
<db:para>Select one of the following options:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Use <db:link xlink:href="qtlinguist-cmake-qt-add-translations.xml">qt_add_translations</db:link> on a target, such as <db:emphasis>app</db:emphasis>. This calls <db:link xlink:href="qtlinguist-cmake-qt-add-lupdate.xml">qt_add_lupdate</db:link> and <db:link xlink:href="qtlinguist-cmake-qt-add-lrelease.xml">qt_add_lrelease</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Use <db:code>qt_add_lrelease</db:code> on a target.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Build a target (for example, <db:code>app_lrelease</db:code>) to update the .qm files for it. To update the .qm files for all targets, build the target <db:code>release_translations</db:code>.</db:para>
</db:section>
<db:section xml:id="using-lrelease-with-qmake">
<db:title>Using lrelease with qmake</db:title>
<db:para>To run <db:code>lrelease</db:code> without specifying a project file:</db:para>
<db:programlisting language="cpp" role="bad">lrelease.exe main_en.ts languages\main_fr.ts
</db:programlisting>
</db:section>
</db:section>
</db:article>
