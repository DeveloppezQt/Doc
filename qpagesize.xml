<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QPageSize Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qpagesize.xml">QPageSize</db:link> class describes the size and name of a defined page size.</db:para>
<db:para>This class was introduced in Qt 5.3.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPageSize</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.3</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This class implements support for the set of standard page sizes as defined in the Adobe Postscript PPD Standard v4.3. It defines the standard set of page sizes in points, millimeters and inches and ensures these sizes are consistently used. Other size units can be used but will be calculated results and so may not always be consistent. The defined point sizes are always a integer, all other sizes can be fractions of a unit.</db:para>
<db:para>The defined size is always in width x height order with no implied page orientation. Note that it is possible for page sizes to be defined where the width is greater than the height, such as <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::Ledger</db:link>, so you cannot rely on comparing the width and height values to determine page orientation.</db:para>
<db:para>For example, A4 is defined by the standard as 210mm x 297mm, 8.27in x 11.69in, or 595pt x 842pt.</db:para>
<db:para>You can also define custom page sizes with custom names in any units you want and this unit size will be preserved and used as the base for all other unit size calculations.</db:para>
<db:para>When creating a <db:link xlink:href="qpagesize.xml">QPageSize</db:link> using a custom <db:link xlink:href="qsize.xml">QSize</db:link> you can choose if you want <db:link xlink:href="qpagesize.xml">QPageSize</db:link> to try match the size to a standard page size. By default QPaperSize uses a <db:link xlink:href="qpagesize.xml#SizeMatchPolicy-enum">FuzzyMatch</db:link> mode where it will match a given page size to a standard page size if it falls within 3 postscript points of a defined standard size. You can override this to request only an exact match but this is not recommended as conversions between units can easily lose 3 points and result in incorrect page sizes.</db:para>
<db:para>A <db:link xlink:href="qpagesize.xml">QPageSize</db:link> instance may also be obtained by querying the supported page sizes for a print device. In this case the localized name returned is that defined by the printer itself. Note that the print device may not support the current default locale language.</db:para>
<db:para>The class also provides convenience methods for converting page size IDs to and from various unit sizes.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpagedpaintdevice.xml">QPagedPaintDevice</db:link></db:member>
<db:member><db:link xlink:href="qpdfwriter.xml">QPdfWriter</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="PageSizeId-enum">
<db:title>enum QPageSize::PageSizeId</db:title>
<db:para>This enum type lists the available page sizes as defined in the Postscript PPD standard. These values are duplicated in <db:link xlink:href="qpagedpaintdevice.xml">QPagedPaintDevice</db:link> and QPrinter.</db:para>
<db:para>The defined sizes are:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A0</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>841 x 1189 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A1</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>594 x 841 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A2</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>420 x 594 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A3</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>297 x 420 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A4</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>210 x 297 mm, 8.26 x 11.69 inches</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A5</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>148 x 210 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A6</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>105 x 148 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A7</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>74 x 105 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A8</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>52 x 74 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A9</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>37 x 52 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::B0</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>1000 x 1414 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::B1</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>707 x 1000 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::B2</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>500 x 707 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::B3</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td>
<db:para>353 x 500 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::B4</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>250 x 353 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::B5</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>176 x 250 mm, 6.93 x 9.84 inches</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::B6</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>125 x 176 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::B7</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>88 x 125 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::B8</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>62 x 88 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::B9</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>44 x 62 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::B10</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>31 x 44 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::C5E</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td>
<db:para>163 x 229 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Comm10E</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
<db:td>
<db:para>105 x 241 mm, U.S. Common 10 Envelope</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::DLE</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
<db:td>
<db:para>110 x 220 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Executive</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>7.5 x 10 inches, 190.5 x 254 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Folio</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
<db:td>
<db:para>210 x 330 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Ledger</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
<db:td>
<db:para>431.8 x 279.4 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Legal</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>8.5 x 14 inches, 215.9 x 355.6 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Letter</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>8.5 x 11 inches, 215.9 x 279.4 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Tabloid</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
<db:td>
<db:para>279.4 x 431.8 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Custom</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
<db:td>
<db:para>Unknown, or a user defined size.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A10</db:code></db:para>
</db:td>
<db:td><db:code>31</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A3Extra</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A4Extra</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A4Plus</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A4Small</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::A5Extra</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::B5Extra</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::JisB0</db:code></db:para>
</db:td>
<db:td><db:code>38</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::JisB1</db:code></db:para>
</db:td>
<db:td><db:code>39</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::JisB2</db:code></db:para>
</db:td>
<db:td><db:code>40</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::JisB3</db:code></db:para>
</db:td>
<db:td><db:code>41</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::JisB4</db:code></db:para>
</db:td>
<db:td><db:code>42</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::JisB5</db:code></db:para>
</db:td>
<db:td><db:code>43</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::JisB6</db:code></db:para>
</db:td>
<db:td><db:code>44</db:code></db:td>
<db:td>
<db:para>,</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::JisB7</db:code></db:para>
</db:td>
<db:td><db:code>45</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::JisB8</db:code></db:para>
</db:td>
<db:td><db:code>46</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::JisB9</db:code></db:para>
</db:td>
<db:td><db:code>47</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::JisB10</db:code></db:para>
</db:td>
<db:td><db:code>48</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::AnsiA</db:code></db:para>
</db:td>
<db:td><db:code>Letter</db:code></db:td>
<db:td>
<db:para>= Letter</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::AnsiB</db:code></db:para>
</db:td>
<db:td><db:code>Ledger</db:code></db:td>
<db:td>
<db:para>= Ledger</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::AnsiC</db:code></db:para>
</db:td>
<db:td><db:code>49</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::AnsiD</db:code></db:para>
</db:td>
<db:td><db:code>50</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::AnsiE</db:code></db:para>
</db:td>
<db:td><db:code>51</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::LegalExtra</db:code></db:para>
</db:td>
<db:td><db:code>52</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::LetterExtra</db:code></db:para>
</db:td>
<db:td><db:code>53</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::LetterPlus</db:code></db:para>
</db:td>
<db:td><db:code>54</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::LetterSmall</db:code></db:para>
</db:td>
<db:td><db:code>55</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::TabloidExtra</db:code></db:para>
</db:td>
<db:td><db:code>56</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::ArchA</db:code></db:para>
</db:td>
<db:td><db:code>57</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::ArchB</db:code></db:para>
</db:td>
<db:td><db:code>58</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::ArchC</db:code></db:para>
</db:td>
<db:td><db:code>59</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::ArchD</db:code></db:para>
</db:td>
<db:td><db:code>60</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::ArchE</db:code></db:para>
</db:td>
<db:td><db:code>61</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Imperial7x9</db:code></db:para>
</db:td>
<db:td><db:code>62</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Imperial8x10</db:code></db:para>
</db:td>
<db:td><db:code>63</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Imperial9x11</db:code></db:para>
</db:td>
<db:td><db:code>64</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Imperial9x12</db:code></db:para>
</db:td>
<db:td><db:code>65</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Imperial10x11</db:code></db:para>
</db:td>
<db:td><db:code>66</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Imperial10x13</db:code></db:para>
</db:td>
<db:td><db:code>67</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Imperial10x14</db:code></db:para>
</db:td>
<db:td><db:code>68</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Imperial12x11</db:code></db:para>
</db:td>
<db:td><db:code>69</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Imperial15x11</db:code></db:para>
</db:td>
<db:td><db:code>70</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::ExecutiveStandard</db:code></db:para>
</db:td>
<db:td><db:code>71</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Note</db:code></db:para>
</db:td>
<db:td><db:code>72</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Quarto</db:code></db:para>
</db:td>
<db:td><db:code>73</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Statement</db:code></db:para>
</db:td>
<db:td><db:code>74</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::SuperA</db:code></db:para>
</db:td>
<db:td><db:code>75</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::SuperB</db:code></db:para>
</db:td>
<db:td><db:code>76</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Postcard</db:code></db:para>
</db:td>
<db:td><db:code>77</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::DoublePostcard</db:code></db:para>
</db:td>
<db:td><db:code>78</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Prc16K</db:code></db:para>
</db:td>
<db:td><db:code>79</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Prc32K</db:code></db:para>
</db:td>
<db:td><db:code>80</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Prc32KBig</db:code></db:para>
</db:td>
<db:td><db:code>81</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::FanFoldUS</db:code></db:para>
</db:td>
<db:td><db:code>82</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::FanFoldGerman</db:code></db:para>
</db:td>
<db:td><db:code>83</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::FanFoldGermanLegal</db:code></db:para>
</db:td>
<db:td><db:code>84</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeB4</db:code></db:para>
</db:td>
<db:td><db:code>85</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeB5</db:code></db:para>
</db:td>
<db:td><db:code>86</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeB6</db:code></db:para>
</db:td>
<db:td><db:code>87</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeC0</db:code></db:para>
</db:td>
<db:td><db:code>88</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeC1</db:code></db:para>
</db:td>
<db:td><db:code>89</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeC2</db:code></db:para>
</db:td>
<db:td><db:code>90</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeC3</db:code></db:para>
</db:td>
<db:td><db:code>91</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeC4</db:code></db:para>
</db:td>
<db:td><db:code>92</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeC5</db:code></db:para>
</db:td>
<db:td><db:code>C5E</db:code></db:td>
<db:td>
<db:para>= C5E</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeC6</db:code></db:para>
</db:td>
<db:td><db:code>93</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeC65</db:code></db:para>
</db:td>
<db:td><db:code>94</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeC7</db:code></db:para>
</db:td>
<db:td><db:code>95</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeDL</db:code></db:para>
</db:td>
<db:td><db:code>DLE</db:code></db:td>
<db:td>
<db:para>= DLE</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Envelope9</db:code></db:para>
</db:td>
<db:td><db:code>96</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Envelope10</db:code></db:para>
</db:td>
<db:td><db:code>Comm10E</db:code></db:td>
<db:td>
<db:para>= Comm10E</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Envelope11</db:code></db:para>
</db:td>
<db:td><db:code>97</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Envelope12</db:code></db:para>
</db:td>
<db:td><db:code>98</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Envelope14</db:code></db:para>
</db:td>
<db:td><db:code>99</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeMonarch</db:code></db:para>
</db:td>
<db:td><db:code>100</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopePersonal</db:code></db:para>
</db:td>
<db:td><db:code>101</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeChou3</db:code></db:para>
</db:td>
<db:td><db:code>102</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeChou4</db:code></db:para>
</db:td>
<db:td><db:code>103</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeInvite</db:code></db:para>
</db:td>
<db:td><db:code>104</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeItalian</db:code></db:para>
</db:td>
<db:td><db:code>105</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeKaku2</db:code></db:para>
</db:td>
<db:td><db:code>106</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeKaku3</db:code></db:para>
</db:td>
<db:td><db:code>107</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopePrc1</db:code></db:para>
</db:td>
<db:td><db:code>108</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopePrc2</db:code></db:para>
</db:td>
<db:td><db:code>109</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopePrc3</db:code></db:para>
</db:td>
<db:td><db:code>110</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopePrc4</db:code></db:para>
</db:td>
<db:td><db:code>111</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopePrc5</db:code></db:para>
</db:td>
<db:td><db:code>112</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopePrc6</db:code></db:para>
</db:td>
<db:td><db:code>113</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopePrc7</db:code></db:para>
</db:td>
<db:td><db:code>114</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopePrc8</db:code></db:para>
</db:td>
<db:td><db:code>115</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopePrc9</db:code></db:para>
</db:td>
<db:td><db:code>116</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopePrc10</db:code></db:para>
</db:td>
<db:td><db:code>117</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::EnvelopeYou4</db:code></db:para>
</db:td>
<db:td><db:code>118</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::LastPageSize</db:code></db:para>
</db:td>
<db:td><db:code>EnvelopeYou4</db:code></db:td>
<db:td>
<db:para>= EnvelopeYou4</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Due to historic reasons QPageSize::Executive is not the same as the standard Postscript and Windows Executive size, use QPageSize::ExecutiveStandard instead.</db:para>
<db:para>The Postscript standard size QPageSize::Folio is different to the Windows DMPAPER_FOLIO size, use the Postscript standard size QPageSize::FanFoldGermanLegal if needed.</db:para>
</db:section>
<db:section xml:id="SizeMatchPolicy-enum">
<db:title>enum QPageSize::SizeMatchPolicy</db:title>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::FuzzyMatch</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Match to a standard page size if within the margin of tolerance.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::FuzzyOrientationMatch</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Match to a standard page size if within the margin of tolerance regardless of orientation.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::ExactMatch</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Only match to a standard page size if the sizes match exactly.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="Unit-enum">
<db:title>enum QPageSize::Unit</db:title>
<db:para>This enum type is used to specify the measurement unit for page sizes.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Millimeter</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Point</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>1/72th of an inch</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Inch</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Pica</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>1/72th of a foot, 1/6th of an inch, 12 Points</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Didot</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>1/72th of a French inch, 0.375 mm</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpagesize.xml">QPageSize</db:link></db:emphasis>::Cicero</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>1/6th of a French inch, 12 Didot, 4.5mm</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QPageSize">
<db:title>QPageSize::QPageSize()</db:title>
<db:para>Creates a null <db:link xlink:href="qpagesize.xml">QPageSize</db:link>.</db:para>
</db:section>
<db:section xml:id="QPageSize-1">
<db:title>[explicit] QPageSize::QPageSize(QPageSize::PageSizeId <db:emphasis>pageSize</db:emphasis>)</db:title>
<db:para>Creates a <db:link xlink:href="qpagesize.xml">QPageSize</db:link> of the standard <db:code role="parameter">pageSize</db:code>.</db:para>
<db:para>If <db:code role="parameter">pageSize</db:code> is <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::Custom</db:link> then the resulting <db:link xlink:href="qpagesize.xml">QPageSize</db:link> will not be valid. Use the custom size constructor instead.</db:para>
</db:section>
<db:section xml:id="QPageSize-3">
<db:title>[explicit] QPageSize::QPageSize(const QSize &amp;<db:emphasis>pointSize</db:emphasis>, const QString &amp;<db:emphasis>name</db:emphasis> = QString(), QPageSize::SizeMatchPolicy <db:emphasis>matchPolicy</db:emphasis> = FuzzyMatch)</db:title>
<db:para>Creates a <db:link xlink:href="qpagesize.xml">QPageSize</db:link> of the given <db:code role="parameter">pointSize</db:code> in Points using the matching <db:code role="parameter">matchPolicy</db:code>.</db:para>
<db:para>If the given <db:code role="parameter">pointSize</db:code> matches a standard <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::PageSizeId</db:link>, then that page size will be used. Note that if the <db:code role="parameter">matchPolicy</db:code> is <db:link xlink:href="qpagesize.xml#SizeMatchPolicy-enum">FuzzyMatch</db:link> this may result in the <db:code role="parameter">pointSize</db:code> being adjusted to the standard size. To prevent this happening use a <db:code role="parameter">matchPolicy</db:code> of <db:link xlink:href="qpagesize.xml#SizeMatchPolicy-enum">ExactMatch</db:link> instead.</db:para>
<db:para>If the given <db:code role="parameter">pointSize</db:code> is not a standard <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::PageSizeId</db:link> then a <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::Custom</db:link> size will be created.</db:para>
<db:para>If <db:code role="parameter">name</db:code> is null then the standard localized name will be used. If a custom page size then a custom name in the format &quot;Custom (width x height)&quot; will be created.</db:para>
<db:para>The <db:code role="parameter">matchPolicy</db:code> defaults to <db:link xlink:href="qpagesize.xml#SizeMatchPolicy-enum">FuzzyMatch</db:link>.</db:para>
</db:section>
<db:section xml:id="QPageSize-4">
<db:title>[explicit] QPageSize::QPageSize(const QSizeF &amp;<db:emphasis>size</db:emphasis>, QPageSize::Unit <db:emphasis>units</db:emphasis>, const QString &amp;<db:emphasis>name</db:emphasis> = QString(), QPageSize::SizeMatchPolicy <db:emphasis>matchPolicy</db:emphasis> = FuzzyMatch)</db:title>
<db:para>Creates a custom page of the given <db:code role="parameter">size</db:code> in <db:code role="parameter">units</db:code>.</db:para>
<db:para>If the given <db:code role="parameter">size</db:code> matches a standard <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::PageSizeId</db:link>, then that page size will be used. Note that if the <db:code role="parameter">matchPolicy</db:code> is <db:link xlink:href="qpagesize.xml#SizeMatchPolicy-enum">FuzzyMatch</db:link> this may result in the <db:code role="parameter">size</db:code> being adjusted to the standard size. To prevent this happening use a <db:code role="parameter">matchPolicy</db:code> of <db:link xlink:href="qpagesize.xml#SizeMatchPolicy-enum">ExactMatch</db:link> instead.</db:para>
<db:para>If the given <db:code role="parameter">size</db:code> is not a standard <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::PageSizeId</db:link> then a <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::Custom</db:link> size will be created. The original unit size will be preserved and used as the base for all other unit size calculations.</db:para>
<db:para>If <db:code role="parameter">name</db:code> is null then a custom name will be created in the form &quot;Custom (width x height)&quot; where the size is expressed in units provided.</db:para>
</db:section>
<db:section xml:id="QPageSize-2">
<db:title>QPageSize::QPageSize(const QPageSize &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Copy constructor, copies <db:code role="parameter">other</db:code> to this.</db:para>
</db:section>
<db:section xml:id="dtor.QPageSize">
<db:title>[noexcept] QPageSize::~QPageSize()</db:title>
<db:para>Destroys the page.</db:para>
</db:section>
<db:section xml:id="definitionSize">
<db:title>QSizeF QPageSize::definitionSize() const</db:title>
<db:para>Returns the definition size of the page size.</db:para>
<db:para>For a standard page size this will be the size as defined in the relevant standard, i.e. ISO A4 will be defined in millimeters while ANSI Letter will be defined in inches.</db:para>
<db:para>For a custom page size this will be the original size used to create the page size object.</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the <db:link xlink:href="qsizef.xml">QSizeF</db:link> will be invalid.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpagesize.xml#definitionUnits">definitionUnits</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="definitionSize-1">
<db:title>[static] QSizeF QPageSize::definitionSize(QPageSize::PageSizeId <db:emphasis>pageSizeId</db:emphasis>)</db:title>
<db:para>Returns the definition size of the standard <db:code role="parameter">pageSizeId</db:code>.</db:para>
<db:para>To obtain the definition units, call <db:link xlink:href="qpagesize.xml#definitionUnits">QPageSize::definitionUnits</db:link>().</db:para>
</db:section>
<db:section xml:id="definitionUnits">
<db:title>QPageSize::Unit QPageSize::definitionUnits() const</db:title>
<db:para>Returns the definition units of the page size.</db:para>
<db:para>For a standard page size this will be the units as defined in the relevant standard, i.e. ISO A4 will be defined in millimeters while ANSI Letter will be defined in inches.</db:para>
<db:para>For a custom page size this will be the original units used to create the page size object.</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the <db:link xlink:href="qpagesize.xml#Unit-enum">QPageSize::Unit</db:link> will be invalid.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpagesize.xml#definitionSize">definitionSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="definitionUnits-1">
<db:title>[static] QPageSize::Unit QPageSize::definitionUnits(QPageSize::PageSizeId <db:emphasis>pageSizeId</db:emphasis>)</db:title>
<db:para>Returns the definition units of the standard <db:code role="parameter">pageSizeId</db:code>.</db:para>
<db:para>To obtain the definition size, call <db:link xlink:href="qpagesize.xml#definitionSize">QPageSize::definitionSize</db:link>().</db:para>
</db:section>
<db:section xml:id="id">
<db:title>QPageSize::PageSizeId QPageSize::id() const</db:title>
<db:para>Returns the standard <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::PageSizeId</db:link> of the page, or <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::Custom</db:link>.</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the ID will be <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::Custom</db:link>.</db:para>
</db:section>
<db:section xml:id="id-1">
<db:title>[static] QPageSize::PageSizeId QPageSize::id(int <db:emphasis>windowsId</db:emphasis>)</db:title>
<db:para>Returns the <db:link xlink:href="qpagesize.xml#PageSizeId-enum">PageSizeId</db:link> for the given Windows DMPAPER enum value <db:code role="parameter">windowsId</db:code>.</db:para>
<db:para>If there is no matching <db:link xlink:href="qpagesize.xml#PageSizeId-enum">PageSizeId</db:link> then <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::Custom</db:link> is returned.</db:para>
</db:section>
<db:section xml:id="id-2">
<db:title>[static] QPageSize::PageSizeId QPageSize::id(const QSize &amp;<db:emphasis>pointSize</db:emphasis>, QPageSize::SizeMatchPolicy <db:emphasis>matchPolicy</db:emphasis> = FuzzyMatch)</db:title>
<db:para>Returns the standard <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::PageSizeId</db:link> of the given <db:code role="parameter">pointSize</db:code> in points using the given <db:code role="parameter">matchPolicy</db:code>.</db:para>
<db:para>If using <db:link xlink:href="qpagesize.xml#SizeMatchPolicy-enum">FuzzyMatch</db:link> then the point size of the <db:link xlink:href="qpagesize.xml#PageSizeId-enum">PageSizeId</db:link> returned may not exactly match the <db:code role="parameter">pointSize</db:code> you passed in. You should call <db:link xlink:href="qpagesize.xml#sizePoints">QPageSize::sizePoints</db:link>() using the returned <db:link xlink:href="qpagesize.xml#PageSizeId-enum">PageSizeId</db:link> to find out the actual point size of the <db:link xlink:href="qpagesize.xml#PageSizeId-enum">PageSizeId</db:link> before using it in any calculations.</db:para>
</db:section>
<db:section xml:id="id-3">
<db:title>[static] QPageSize::PageSizeId QPageSize::id(const QSizeF &amp;<db:emphasis>size</db:emphasis>, QPageSize::Unit <db:emphasis>units</db:emphasis>, QPageSize::SizeMatchPolicy <db:emphasis>matchPolicy</db:emphasis> = FuzzyMatch)</db:title>
<db:para>Returns the standard <db:link xlink:href="qpagesize.xml#PageSizeId-enum">QPageSize::PageSizeId</db:link> of the given <db:code role="parameter">size</db:code> in <db:code role="parameter">units</db:code> using the given <db:code role="parameter">matchPolicy</db:code>.</db:para>
<db:para>If using <db:link xlink:href="qpagesize.xml#SizeMatchPolicy-enum">FuzzyMatch</db:link> then the unit size of the <db:link xlink:href="qpagesize.xml#PageSizeId-enum">PageSizeId</db:link> returned may not exactly match the <db:code role="parameter">size</db:code> you passed in. You should call <db:link xlink:href="qpagesize.xml#size">QPageSize::size</db:link>() using the returned <db:link xlink:href="qpagesize.xml#PageSizeId-enum">PageSizeId</db:link> to find out the actual unit size of the <db:link xlink:href="qpagesize.xml#PageSizeId-enum">PageSizeId</db:link> before using it in any calculations.</db:para>
</db:section>
<db:section xml:id="isEquivalentTo">
<db:title>bool QPageSize::isEquivalentTo(const QPageSize &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns <db:code>true</db:code> if this page is equivalent to the <db:code role="parameter">other</db:code> page, i.e. if the page has the same size regardless of other attributes like name.</db:para>
</db:section>
<db:section xml:id="isValid">
<db:title>bool QPageSize::isValid() const</db:title>
<db:para>Returns <db:code>true</db:code> if this page size is valid.</db:para>
<db:para>The page size may be invalid if created with an invalid <db:link xlink:href="qpagesize.xml#PageSizeId-enum">PageSizeId</db:link>, or a negative or invalid <db:link xlink:href="qsize.xml">QSize</db:link> or <db:link xlink:href="qsizef.xml">QSizeF</db:link>, or the null constructor.</db:para>
</db:section>
<db:section xml:id="key">
<db:title>QString QPageSize::key() const</db:title>
<db:para>Returns the unique key of the page size.</db:para>
<db:para>By default this is the PPD standard mediaOption keyword for the page size, or the PPD custom format key. If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> instance was obtained from a print device then this will be the key provided by the print device and may differ from the standard key.</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the key will be an empty string.</db:para>
<db:para>This key should never be shown to end users, it is an internal key only. For a human-readable name use <db:link xlink:href="qpagesize.xml#name">name</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpagesize.xml#name">name</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="key-1">
<db:title>[static] QString QPageSize::key(QPageSize::PageSizeId <db:emphasis>pageSizeId</db:emphasis>)</db:title>
<db:para>Returns the PPD mediaOption keyword of the standard <db:code role="parameter">pageSizeId</db:code>.</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the key will be empty.</db:para>
</db:section>
<db:section xml:id="name">
<db:title>QString QPageSize::name() const</db:title>
<db:para>Returns a localized human-readable name for the page size.</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> instance was obtained from a print device then the name used is that provided by the print device. Note that a print device may not support the current default locale language.</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the name will be an empty string.</db:para>
</db:section>
<db:section xml:id="name-1">
<db:title>[static] QString QPageSize::name(QPageSize::PageSizeId <db:emphasis>pageSizeId</db:emphasis>)</db:title>
<db:para>Returns the localized name of the standard <db:code role="parameter">pageSizeId</db:code>.</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the name will be empty.</db:para>
</db:section>
<db:section xml:id="rect">
<db:title>QRectF QPageSize::rect(QPageSize::Unit <db:emphasis>units</db:emphasis>) const</db:title>
<db:para>Returns the page rectangle in the required <db:code role="parameter">units</db:code>.</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the <db:link xlink:href="qrect.xml">QRect</db:link> will be invalid.</db:para>
</db:section>
<db:section xml:id="rectPixels">
<db:title>QRect QPageSize::rectPixels(int <db:emphasis>resolution</db:emphasis>) const</db:title>
<db:para>Returns the page rectangle in Device Pixels at the given <db:code role="parameter">resolution</db:code>.</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the <db:link xlink:href="qrect.xml">QRect</db:link> will be invalid.</db:para>
</db:section>
<db:section xml:id="rectPoints">
<db:title>QRect QPageSize::rectPoints() const</db:title>
<db:para>Returns the page rectangle in Postscript Points (1/72 of an inch).</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the <db:link xlink:href="qrect.xml">QRect</db:link> will be invalid.</db:para>
</db:section>
<db:section xml:id="size">
<db:title>QSizeF QPageSize::size(QPageSize::Unit <db:emphasis>units</db:emphasis>) const</db:title>
<db:para>Returns the size of the page in the required <db:code role="parameter">units</db:code>.</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the <db:link xlink:href="qsizef.xml">QSizeF</db:link> will be invalid.</db:para>
</db:section>
<db:section xml:id="size-1">
<db:title>[static] QSizeF QPageSize::size(QPageSize::PageSizeId <db:emphasis>pageSizeId</db:emphasis>, QPageSize::Unit <db:emphasis>units</db:emphasis>)</db:title>
<db:para>Returns the size of the standard <db:code role="parameter">pageSizeId</db:code> in the requested <db:code role="parameter">units</db:code>.</db:para>
</db:section>
<db:section xml:id="sizePixels">
<db:title>QSize QPageSize::sizePixels(int <db:emphasis>resolution</db:emphasis>) const</db:title>
<db:para>Returns the size of the page in Device Pixels at the given <db:code role="parameter">resolution</db:code>.</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the <db:link xlink:href="qsize.xml">QSize</db:link> will be invalid.</db:para>
</db:section>
<db:section xml:id="sizePixels-1">
<db:title>[static] QSize QPageSize::sizePixels(QPageSize::PageSizeId <db:emphasis>pageSizeId</db:emphasis>, int <db:emphasis>resolution</db:emphasis>)</db:title>
<db:para>Returns the size of the standard <db:code role="parameter">pageSizeId</db:code> in Device Pixels for the given <db:code role="parameter">resolution</db:code>.</db:para>
</db:section>
<db:section xml:id="sizePoints">
<db:title>QSize QPageSize::sizePoints() const</db:title>
<db:para>Returns the size of the page in Postscript Points (1/72 of an inch).</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the <db:link xlink:href="qsize.xml">QSize</db:link> will be invalid.</db:para>
</db:section>
<db:section xml:id="sizePoints-1">
<db:title>[static] QSize QPageSize::sizePoints(QPageSize::PageSizeId <db:emphasis>pageSizeId</db:emphasis>)</db:title>
<db:para>Returns the size of the standard <db:code role="parameter">pageSizeId</db:code> in Points.</db:para>
</db:section>
<db:section xml:id="swap">
<db:title>void QPageSize::swap(QPageSize &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps this <db:link xlink:href="qpagesize.xml">QPageSize</db:link> with <db:code role="parameter">other</db:code>. This function is very fast and never fails.</db:para>
</db:section>
<db:section xml:id="windowsId">
<db:title>int QPageSize::windowsId() const</db:title>
<db:para>Returns the Windows DMPAPER enum value for the page size.</db:para>
<db:para>Not all valid PPD page sizes have a Windows equivalent, in which case 0 will be returned.</db:para>
<db:para>If the <db:link xlink:href="qpagesize.xml">QPageSize</db:link> is invalid then the Windows ID will be 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpagesize.xml#id">id</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="windowsId-1">
<db:title>[static] int QPageSize::windowsId(QPageSize::PageSizeId <db:emphasis>pageSizeId</db:emphasis>)</db:title>
<db:para>Returns the Windows DMPAPER enum value of the standard <db:code role="parameter">pageSizeId</db:code>.</db:para>
<db:para>Not all valid PPD page sizes have a Windows equivalent, in which case 0 will be returned.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QPageSize &amp;QPageSize::operator=(QPageSize &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Move-assigns <db:code role="parameter">other</db:code> to this <db:link xlink:href="qpagesize.xml">QPageSize</db:link> instance, transferring the ownership of the managed pointer to this instance.</db:para>
</db:section>
<db:section xml:id="operator-eq-1">
<db:title>QPageSize &amp;QPageSize::operator=(const QPageSize &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assignment operator, assigns <db:code role="parameter">other</db:code> to this.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-not-eq-1">
<db:title>bool operator!=(const QPageSize &amp;<db:emphasis>lhs</db:emphasis>, const QPageSize &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:para>Returns <db:code>true</db:code> if page size <db:code role="parameter">lhs</db:code> is unequal to page size <db:code role="parameter">rhs</db:code>, i.e. if the page size has different attributes. Current attributes are size and name.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq-1">
<db:title>bool operator==(const QPageSize &amp;<db:emphasis>lhs</db:emphasis>, const QPageSize &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:para>Returns <db:code>true</db:code> if page size <db:code role="parameter">lhs</db:code> is equal to page size <db:code role="parameter">rhs</db:code>, i.e. if the page sizes have the same attributes. Current attributes are size and name.</db:para>
</db:section>
</db:section>
</db:article>
