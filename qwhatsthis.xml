<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QWhatsThis Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qwhatsthis.xml">QWhatsThis</db:link> class provides a simple description of any widget, i.e. answering the question &quot;What's This?&quot;.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QWhatsThis</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QWhatsThis is part of <db:simplelist><db:member>helpsystem</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>&quot;What's This?&quot; help is part of an application's online help system, and provides users with information about the functionality and usage of a particular widget. &quot;What's This?&quot; help texts are typically longer and more detailed than <db:link xlink:href="qtooltip.xml">tooltips</db:link>, but generally provide less information than that supplied by separate help windows.</db:para>
<db:para><db:link xlink:href="qwhatsthis.xml">QWhatsThis</db:link> provides a single window with an explanatory text that pops up when the user asks &quot;What's This?&quot;. The default way for users to ask the question is to move the focus to the relevant widget and press Shift+F1. The help text appears immediately; it goes away as soon as the user does something else. (Note that if there is a shortcut for Shift+F1, this mechanism will not work.) Some dialogs provide a &quot;?&quot; button that users can click to enter &quot;What's This?&quot; mode; they then click the relevant widget to pop up the &quot;What's This?&quot; window. It is also possible to provide a a menu option or toolbar button to switch into &quot;What's This?&quot; mode.</db:para>
<db:para>To add &quot;What's This?&quot; text to a widget or an action, you simply call <db:link xlink:href="qwidget.xml#whatsThis-prop">QWidget::setWhatsThis</db:link>() or <db:link xlink:href="qaction.xml#whatsThis-prop">QAction::setWhatsThis</db:link>().</db:para>
<db:para>The text can be either rich text or plain text. If you specify a rich text formatted string, it will be rendered using the default stylesheet, making it possible to embed images in the displayed text. To be as fast as possible, the default stylesheet uses a simple method to determine whether the text can be rendered as plain text. See <db:link xlink:href="qt-sub-qtgui.xml#mightBeRichText">Qt::mightBeRichText</db:link>() for details.</db:para>
<db:programlisting language="cpp">    newAct = new QAction(tr(&quot;&amp;amp;New&quot;), this);
    newAct-&amp;gt;setShortcut(tr(&quot;Ctrl+N&quot;));
    newAct-&amp;gt;setStatusTip(tr(&quot;Create a new file&quot;));
    newAct-&amp;gt;setWhatsThis(tr(&quot;Click this option to create a new file.&quot;));
</db:programlisting>
<db:para>An alternative way to enter &quot;What's This?&quot; mode is to call <db:link xlink:href="qwhatsthis.xml#createAction">createAction</db:link>(), and add the returned <db:link xlink:href="qaction.xml">QAction</db:link> to either a menu or a tool bar. By invoking this context help action (in the picture below, the button with the arrow and question mark icon) the user switches into &quot;What's This?&quot; mode. If they now click on a widget the appropriate help text is shown. The mode is left when help is given or when the user presses Esc.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/whatsthis.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>You can enter &quot;What's This?&quot; mode programmatically with <db:link xlink:href="qwhatsthis.xml#enterWhatsThisMode">enterWhatsThisMode</db:link>(), check the mode with <db:link xlink:href="qwhatsthis.xml#inWhatsThisMode">inWhatsThisMode</db:link>(), and return to normal mode with <db:link xlink:href="qwhatsthis.xml#leaveWhatsThisMode">leaveWhatsThisMode</db:link>().</db:para>
<db:para>If you want to control the &quot;What's This?&quot; behavior of a widget manually see <db:link xlink:href="qt.xml#WidgetAttribute-enum">Qt::WA_CustomWhatsThis</db:link>.</db:para>
<db:para>It is also possible to show different help texts for different regions of a widget, by using a <db:link xlink:href="qhelpevent.xml">QHelpEvent</db:link> of type <db:link xlink:href="qevent.xml#Type-enum">QEvent::WhatsThis</db:link>. Intercept the help event in your widget's <db:link xlink:href="qwidget.xml#event">QWidget::event</db:link>() function and call <db:link xlink:href="qwhatsthis.xml#showText">QWhatsThis::showText</db:link>() with the text you want to display for the position specified in <db:link xlink:href="qhelpevent.xml#pos">QHelpEvent::pos</db:link>(). If the text is rich text and the user clicks on a link, the widget also receives a <db:link xlink:href="qwhatsthisclickedevent.xml">QWhatsThisClickedEvent</db:link> with the link's reference as <db:link xlink:href="qwhatsthisclickedevent.xml#href">QWhatsThisClickedEvent::href</db:link>(). If a <db:link xlink:href="qwhatsthisclickedevent.xml">QWhatsThisClickedEvent</db:link> is handled (i.e. <db:link xlink:href="qwidget.xml#event">QWidget::event</db:link>() returns true), the help window remains visible. Call <db:link xlink:href="qwhatsthis.xml#hideText">QWhatsThis::hideText</db:link>() to hide it explicitly.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtooltip.xml">QToolTip</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="createAction">
<db:title>[static] QAction *QWhatsThis::createAction(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QAction *</db:type>
<db:methodname>createAction</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QAction * createAction(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a ready-made <db:link xlink:href="qaction.xml">QAction</db:link>, used to invoke &quot;What's This?&quot; context help, with the given <db:code role="parameter">parent</db:code>.</db:para>
<db:para>The returned <db:link xlink:href="qaction.xml">QAction</db:link> provides a convenient way to let users enter &quot;What's This?&quot; mode.</db:para>
</db:section>
<db:section xml:id="enterWhatsThisMode">
<db:title>[static] void QWhatsThis::enterWhatsThisMode()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:void/>
<db:methodname>enterWhatsThisMode</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void enterWhatsThisMode()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function switches the user interface into &quot;What's This?&quot; mode. The user interface can be switched back into normal mode by the user (e.g. by them clicking or pressing Esc), or programmatically by calling <db:link xlink:href="qwhatsthis.xml#leaveWhatsThisMode">leaveWhatsThisMode</db:link>().</db:para>
<db:para>When entering &quot;What's This?&quot; mode, a <db:link xlink:href="qevent.xml">QEvent</db:link> of type Qt::EnterWhatsThisMode is sent to all toplevel widgets.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwhatsthis.xml#inWhatsThisMode">inWhatsThisMode</db:link>()</db:member>
<db:member><db:link xlink:href="qwhatsthis.xml#leaveWhatsThisMode">leaveWhatsThisMode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hideText">
<db:title>[static] void QWhatsThis::hideText()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:void/>
<db:methodname>hideText</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void hideText()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>If a &quot;What's This?&quot; window is showing, this destroys it.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwhatsthis.xml#showText">showText</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="inWhatsThisMode">
<db:title>[static] bool QWhatsThis::inWhatsThisMode()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>bool</db:type>
<db:methodname>inWhatsThisMode</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool inWhatsThisMode()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if the user interface is in &quot;What's This?&quot; mode; otherwise returns false.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwhatsthis.xml#enterWhatsThisMode">enterWhatsThisMode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="leaveWhatsThisMode">
<db:title>[static] void QWhatsThis::leaveWhatsThisMode()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:void/>
<db:methodname>leaveWhatsThisMode</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void leaveWhatsThisMode()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>If the user interface is in &quot;What's This?&quot; mode, this function switches back to normal mode; otherwise it does nothing.</db:para>
<db:para>When leaving &quot;What's This?&quot; mode, a <db:link xlink:href="qevent.xml">QEvent</db:link> of type Qt::LeaveWhatsThisMode is sent to all toplevel widgets.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwhatsthis.xml#enterWhatsThisMode">enterWhatsThisMode</db:link>()</db:member>
<db:member><db:link xlink:href="qwhatsthis.xml#inWhatsThisMode">inWhatsThisMode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="showText">
<db:title>[static] void QWhatsThis::showText(const QPoint &amp;<db:emphasis>pos</db:emphasis>, const QString &amp;<db:emphasis>text</db:emphasis>, QWidget *<db:emphasis>w</db:emphasis> = nullptr)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:void/>
<db:methodname>showText</db:methodname>
<db:methodparam>
<db:type>const QPoint &amp;</db:type>
<db:parameter>pos</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>text</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QWidget *</db:type>
<db:parameter>w</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void showText(const QPoint &amp;pos, const QString &amp;text, QWidget *w)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Shows <db:code role="parameter">text</db:code> as a &quot;What's This?&quot; window, at global position <db:code role="parameter">pos</db:code>. The optional widget argument, <db:code role="parameter">w</db:code>, is used to determine the appropriate screen on multi-head systems.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwhatsthis.xml#hideText">hideText</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
