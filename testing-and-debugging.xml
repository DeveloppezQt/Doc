<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Testing and Debugging</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Writing unit tests and debugging with Qt.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt provides various functionality to help you develop high quality code. There are features that assist in debugging to track down bugs, and testing facilities that help to keep the bugs out.</db:para>
<db:section xml:id="unit-testing">
<db:title>Unit Testing</db:title>
<db:para>Qt facilitates the creation of unit tests to test interfaces such as classes, functions, or whole libraries.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtest-overview.xml">Qt Test</db:link> (also known as <db:emphasis>testlib</db:emphasis>) - a framework for unit tests of C++ code</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-qtquicktest.xml">Qt Quick Test</db:link> - a framework for unit tests of QML code</db:para>
</db:listitem>
</db:itemizedlist>
<db:section xml:id="autotests">
<db:title>Autotests</db:title>
<db:para>Qt itself has a significant number of unit tests written with the Qt Test and Qt Quick Test frameworks (<db:emphasis>autotests</db:emphasis>). These autotests are available for study in the tests/auto directories of the source code of each Qt module. The autotests are an important part of the continuous quality assurance in the development of Qt.</db:para>
</db:section>
</db:section>
<db:section xml:id="testing-with-qt-creator">
<db:title>Testing with Qt Creator</db:title>
<db:para>Qt Creator's full debugging workflow supports debugging both C++ and QML code as well as the ability to profile code.</db:para>
<db:para>For more information, consult the <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator Manual</db:link>:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="http://doc.qt.io/qtcreator/creator-debugging.html">Debugging</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="http://doc.qt.io/qtcreator/creator-analyze-mode.html">Analyzing Code</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="debugging-techniques">
<db:title>Debugging Techniques</db:title>
<db:para>These pages contain suggestions for debugging under various circumstances:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="debug.xml">Debugging Techniques</db:link> - for C++ code</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-debugging.xml">Debugging QML Applications</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="deployment-plugins.xml#debugging-plugins">Debugging Plugins</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
