<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QtQml Namespace</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides functions for producing logging messages for QML types.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QtQml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += qml</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="function-documentation">
<db:title>Function Documentation</db:title>
<db:section xml:id="qmlDebug">
<db:title>[since 5.9] QQmlInfo qmlDebug(const QObject *<db:emphasis>object</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QQmlInfo</db:type>
<db:methodname>qmlDebug</db:methodname>
<db:methodparam>
<db:type>const QObject *</db:type>
<db:parameter>object</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QQmlInfo qmlDebug(const QObject *object)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Prints debug messages that include the file and line number for the specified QML <db:code role="parameter">object</db:code>.</db:para>
<db:para>When QML types produce logging messages, it improves traceability if they include the QML file and line number on which the particular instance was instantiated.</db:para>
<db:para>To include the file and line number, an object must be passed. If the file and line number is not available for that instance (either it was not instantiated by the QML engine or location information is disabled), &quot;unknown location&quot; will be used instead. For example,</db:para>
<db:programlisting language="cpp">qmlDebug(object) &amp;lt;&amp;lt; &quot;Internal state: 42&quot;;
</db:programlisting>
<db:para>prints</db:para>
<db:programlisting language="cpp" role="bad">QML MyCustomType (unknown location): Internal state: 42
</db:programlisting>
<db:para>This function was introduced in Qt 5.9.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">QtQml::qmlInfo</db:link></db:member>
<db:member><db:link xlink:href="">QtQml::qmlWarning</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qmlInfo">
<db:title>QQmlInfo qmlInfo(const QObject *<db:emphasis>object</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QQmlInfo</db:type>
<db:methodname>qmlInfo</db:methodname>
<db:methodparam>
<db:type>const QObject *</db:type>
<db:parameter>object</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QQmlInfo qmlInfo(const QObject *object)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Prints informational messages that include the file and line number for the specified QML <db:code role="parameter">object</db:code>.</db:para>
<db:para>When QML types produce logging messages, it improves traceability if they include the QML file and line number on which the particular instance was instantiated.</db:para>
<db:para>To include the file and line number, an object must be passed. If the file and line number is not available for that instance (either it was not instantiated by the QML engine or location information is disabled), &quot;unknown location&quot; will be used instead.</db:para>
<db:para>For example,</db:para>
<db:programlisting language="cpp">qmlInfo(object) &amp;lt;&amp;lt; tr(&quot;component property is a write-once property&quot;);
</db:programlisting>
<db:para>prints</db:para>
<db:programlisting language="cpp" role="bad">QML MyCustomType (unknown location): component property is a write-once property
</db:programlisting>
<db:note>
<db:para>In versions prior to Qt 5.9, qmlInfo reported messages using a warning <db:link xlink:href="qtglobal.xml#QtMsgType-enum">QtMsgType</db:link>. For Qt 5.9 and above, qmlInfo uses an info <db:link xlink:href="qtglobal.xml#QtMsgType-enum">QtMsgType</db:link>. To send warnings, use <db:link xlink:href="qqmlengine.xml#qmlWarning">qmlWarning</db:link>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">QtQml::qmlDebug</db:link></db:member>
<db:member><db:link xlink:href="">QtQml::qmlWarning</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qmlWarning">
<db:title>[since 5.9] QQmlInfo qmlWarning(const QObject *<db:emphasis>object</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QQmlInfo</db:type>
<db:methodname>qmlWarning</db:methodname>
<db:methodparam>
<db:type>const QObject *</db:type>
<db:parameter>object</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QQmlInfo qmlWarning(const QObject *object)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Prints warning messages that include the file and line number for the specified QML <db:code role="parameter">object</db:code>.</db:para>
<db:para>When QML types produce logging messages, it improves traceability if they include the QML file and line number on which the particular instance was instantiated.</db:para>
<db:para>To include the file and line number, an object must be passed. If the file and line number is not available for that instance (either it was not instantiated by the QML engine or location information is disabled), &quot;unknown location&quot; will be used instead.</db:para>
<db:para>For example,</db:para>
<db:programlisting language="cpp">qmlInfo(object) &amp;lt;&amp;lt; tr(&quot;property cannot be set to 0&quot;);
</db:programlisting>
<db:para>prints</db:para>
<db:programlisting language="cpp" role="bad">QML MyCustomType (unknown location): property cannot be set to 0
</db:programlisting>
<db:para>This function was introduced in Qt 5.9.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">QtQml::qmlDebug</db:link></db:member>
<db:member><db:link xlink:href="">QtQml::qmlInfo</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
