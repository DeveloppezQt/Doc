<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Material Style</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Quick Controls Reference Documentation.</db:para></db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Material Style is based on the Google Material Design Guidelines. <db:link xlink:href="qtquickcontrols-material.xml#detailed-desc-material">More...</db:link></db:para>
<db:variablelist><db:varlistentry><db:term>Import Statement</db:term><db:listitem><db:para>import QtQuick.Controls.Material 2.12</db:para></db:listitem></db:varlistentry><db:varlistentry><db:term>Since</db:term><db:listitem><db:para>Qt 5.7</db:para></db:listitem></db:varlistentry></db:variablelist><db:section xml:id="attached-properties">
<db:title>Attached Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-accent-attached-prop"><db:emphasis role="bold">accent</db:emphasis></db:link> : color</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-background-attached-prop"><db:emphasis role="bold">background</db:emphasis></db:link> : color</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-elevation-attached-prop"><db:emphasis role="bold">elevation</db:emphasis></db:link> : int</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-foreground-attached-prop"><db:emphasis role="bold">foreground</db:emphasis></db:link> : color</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-primary-attached-prop"><db:emphasis role="bold">primary</db:emphasis></db:link> : color</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-theme-attached-prop"><db:emphasis role="bold">theme</db:emphasis></db:link> : enumeration</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-roundedscale-attached-prop"><db:emphasis role="bold">roundedScale</db:emphasis></db:link> : enumeration</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-containerstyle-attached-prop"><db:emphasis role="bold">containerStyle</db:emphasis></db:link> : enumeration</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="attached-methods">
<db:title>Attached Methods</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>color <db:link xlink:href="qtquickcontrols-material.xml#material-color-attached-method"><db:emphasis role="bold">color</db:emphasis></db:link>(enumeration predefined, enumeration shade)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="detailed-description">
<db:title>Detailed Description</db:title>
<db:anchor xml:id="detailed-desc-material"/>
<db:para>The Material style is based on the <db:link xlink:href="https://www.google.com/design/spec/material-design/introduction.html">Google Material Design Guidelines</db:link>. It allows for a unified experience across platforms and device sizes.</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:figure>
<db:title>The light theme of the Material style.</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-material-light.png"/>
</db:imageobject>
</db:mediaobject>
</db:figure>
</db:td>
<db:td>
<db:figure>
<db:title>The dark theme of the Material style.</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-material-dark.png"/>
</db:imageobject>
</db:mediaobject>
</db:figure>
</db:td>
</db:tr>
</db:informaltable>
<db:para>To run an application with the Material style, see <db:link xlink:href="qtquickcontrols-styles.xml#using-styles-in-qt-quick-controls">Using Styles in Qt Quick Controls</db:link>.</db:para>
<db:note>
<db:para>The Material style is not a native Android style. The Material style is a 100% cross-platform Qt Quick Controls style implementation that follows the Google Material Design Guidelines. The style runs on any platform, and looks more or less identical everywhere. Minor differences may occur due to differences in available system fonts and font rendering engines.</db:para>
</db:note>
<db:section xml:id="customization">
<db:title>Customization</db:title>
<db:para>The Material style supports several customizable attributes. Some of these attributes <db:link xlink:href="qquickattachedpropertypropagator.xml">propagate</db:link> to children in the same manner as <db:link xlink:href="qml-qtquick-controls-control.xml#font-prop">fonts</db:link>:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-theme-attached-prop">theme</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-primary-attached-prop">primary</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-accent-attached-prop">accent</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-foreground-attached-prop">foreground</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-background-attached-prop">background</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-material-attributes.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The remaining attributes do not propagate to children:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-elevation-attached-prop">elevation</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-roundedscale-attached-prop">roundedScale</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-material.xml#material-containerstyle-attached-prop">containerStyle</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>In the following example, the window and all three radio buttons appear in the dark theme using a purple accent color:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:programlisting language="qml">import QtQuick
import QtQuick.Controls
import QtQuick.Controls.Material

ApplicationWindow {
    visible: true

    Material.theme: Material.Dark
    Material.accent: Material.Purple

    Column {
        anchors.centerIn: parent

        RadioButton {
            text: qsTr(&quot;Small&quot;)
        }
        RadioButton {
            text: qsTr(&quot;Medium&quot;)
            checked: true
        }
        RadioButton {
            text: qsTr(&quot;Large&quot;)
        }
    }
}
</db:programlisting>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-material-purple.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
<db:para>In addition to specifying the attributes in QML, it is also possible to specify some of them via environment variables or in a configuration file. Attributes specified in QML take precedence over all other methods.</db:para>
<db:section xml:id="configuration-file">
<db:title>Configuration File</db:title>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Variable</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>Theme</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-theme-attached-prop">Material theme</db:link>. The value can be one of the available themes, for example <db:code>&quot;Dark&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Variant</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the Material variant. The Material Design has two variants: a normal variant designed for touch devices, and a dense variant for desktop. The dense variant uses smaller sizes for controls and their fonts.</db:para>
<db:para>The value can be <db:code>&quot;Normal&quot;</db:code> or <db:code>&quot;Dense&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Accent</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-accent-attached-prop">Material accent color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, but it is recommended to use one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;Teal&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Primary</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-primary-attached-prop">Material primary color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, but it is recommended to use one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;BlueGrey&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Foreground</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-foreground-attached-prop">Material foreground color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, or one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;Brown&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Background</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-background-attached-prop">Material background color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, or one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;Grey&quot;</db:code>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>See <db:link xlink:href="qtquickcontrols-configuration.xml">Qt Quick Controls Configuration File</db:link> for more details about the configuration file.</db:para>
</db:section>
<db:section xml:id="environment-variables">
<db:title>Environment Variables</db:title>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Variable</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>QT_QUICK_CONTROLS_MATERIAL_THEME</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-theme-attached-prop">Material theme</db:link>. The value can be one of the available themes, for example <db:code>&quot;Dark&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>QT_QUICK_CONTROLS_MATERIAL_VARIANT</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the Material variant. The Material Design has two variants: a normal variant designed for touch devices, and a dense variant for desktop. The dense variant uses smaller sizes for controls and their fonts.</db:para>
<db:para>The value can be <db:code>&quot;Normal&quot;</db:code> or <db:code>&quot;Dense&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>QT_QUICK_CONTROLS_MATERIAL_ACCENT</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-accent-attached-prop">Material accent color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, but it is recommended to use one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;Teal&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>QT_QUICK_CONTROLS_MATERIAL_PRIMARY</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-primary-attached-prop">Material primary color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, but it is recommended to use one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;BlueGrey&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>QT_QUICK_CONTROLS_MATERIAL_FOREGROUND</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-foreground-attached-prop">Material foreground color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, or one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;Brown&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>QT_QUICK_CONTROLS_MATERIAL_BACKGROUND</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-background-attached-prop">Material background color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, or one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;Grey&quot;</db:code>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>See <db:link xlink:href="qtquickcontrols-environment.xml">Supported Environment Variables in Qt Quick Controls</db:link> for the full list of supported environment variables.</db:para>
</db:section>
</db:section>
<db:section xml:id="dependency">
<db:title>Dependency</db:title>
<db:para>The Material style must be separately imported to gain access to the attributes that are specific to the Material style. It should be noted that regardless of the references to the Material style, the same application code runs with any other style. Material-specific attributes only have an effect when the application is run with the Material style.</db:para>
<db:para>If the Material style is imported in a QML file that is always loaded, the Material style must be deployed with the application in order to be able to run the application regardless of which style the application is run with. By using <db:link xlink:href="qtquickcontrols-fileselectors.xml">file selectors</db:link>, style-specific tweaks can be applied without creating a hard dependency to a style.</db:para>
</db:section>
<db:section xml:id="pre-defined-material-colors">
<db:title>Pre-defined Material Colors</db:title>
<db:para>Even though primary and accent can be any <db:link xlink:href="qml-color.xml">color</db:link>, it is recommended to use one of the pre-defined colors that have been designed to work well with the rest of the Material style palette:</db:para>
<db:para>Available pre-defined colors:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Material.Red</db:para>
</db:td>
<db:td>
<db:phrase role="color:#F44336">#F44336 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Pink</db:para>
</db:td>
<db:td>
<db:phrase role="color:#E91E63">#E91E63 (default accent)</db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Purple</db:para>
</db:td>
<db:td>
<db:phrase role="color:#9C27B0">#9C27B0 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.DeepPurple</db:para>
</db:td>
<db:td>
<db:phrase role="color:#673AB7">#673AB7 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Indigo</db:para>
</db:td>
<db:td>
<db:phrase role="color:#3F51B5">#3F51B5 (default primary)</db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Blue</db:para>
</db:td>
<db:td>
<db:phrase role="color:#2196F3">#2196F3 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.LightBlue</db:para>
</db:td>
<db:td>
<db:phrase role="color:#03A9F4">#03A9F4 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Cyan</db:para>
</db:td>
<db:td>
<db:phrase role="color:#00BCD4">#00BCD4 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Teal</db:para>
</db:td>
<db:td>
<db:phrase role="color:#009688">#009688 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Green</db:para>
</db:td>
<db:td>
<db:phrase role="color:#4CAF50">#4CAF50 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.LightGreen</db:para>
</db:td>
<db:td>
<db:phrase role="color:#8BC34A">#8BC34A </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Lime</db:para>
</db:td>
<db:td>
<db:phrase role="color:#CDDC39">#CDDC39 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Yellow</db:para>
</db:td>
<db:td>
<db:phrase role="color:#FFEB3B">#FFEB3B </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Amber</db:para>
</db:td>
<db:td>
<db:phrase role="color:#FFC107">#FFC107 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Orange</db:para>
</db:td>
<db:td>
<db:phrase role="color:#FF9800">#FF9800 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.DeepOrange</db:para>
</db:td>
<db:td>
<db:phrase role="color:#FF5722">#FF5722 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Brown</db:para>
</db:td>
<db:td>
<db:phrase role="color:#795548">#795548 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Grey</db:para>
</db:td>
<db:td>
<db:phrase role="color:#9E9E9E">#9E9E9E </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.BlueGrey</db:para>
</db:td>
<db:td>
<db:phrase role="color:#607D8B">#607D8B </db:phrase></db:td>
</db:tr>
</db:informaltable>
<db:para>When the dark theme is in use, different <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-shades">shades</db:link> of the pre-defined colors are used by default:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Material.Red</db:para>
</db:td>
<db:td>
<db:phrase role="color:#EF9A9A">#EF9A9A </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Pink</db:para>
</db:td>
<db:td>
<db:phrase role="color:#F48FB1">#F48FB1 (default accent)</db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Purple</db:para>
</db:td>
<db:td>
<db:phrase role="color:#CE93D8">#CE93D8 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.DeepPurple</db:para>
</db:td>
<db:td>
<db:phrase role="color:#B39DDB">#B39DDB </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Indigo</db:para>
</db:td>
<db:td>
<db:phrase role="color:#9FA8DA">#9FA8DA (default primary)</db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Blue</db:para>
</db:td>
<db:td>
<db:phrase role="color:#90CAF9">#90CAF9 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.LightBlue</db:para>
</db:td>
<db:td>
<db:phrase role="color:#81D4FA">#81D4FA </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Cyan</db:para>
</db:td>
<db:td>
<db:phrase role="color:#80DEEA">#80DEEA </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Teal</db:para>
</db:td>
<db:td>
<db:phrase role="color:#80CBC4">#80CBC4 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Green</db:para>
</db:td>
<db:td>
<db:phrase role="color:#A5D6A7">#A5D6A7 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.LightGreen</db:para>
</db:td>
<db:td>
<db:phrase role="color:#C5E1A5">#C5E1A5 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Lime</db:para>
</db:td>
<db:td>
<db:phrase role="color:#E6EE9C">#E6EE9C </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Yellow</db:para>
</db:td>
<db:td>
<db:phrase role="color:#FFF59D">#FFF59D </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Amber</db:para>
</db:td>
<db:td>
<db:phrase role="color:#FFE082">#FFE082 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Orange</db:para>
</db:td>
<db:td>
<db:phrase role="color:#FFCC80">#FFCC80 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.DeepOrange</db:para>
</db:td>
<db:td>
<db:phrase role="color:#FFAB91">#FFAB91 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Brown</db:para>
</db:td>
<db:td>
<db:phrase role="color:#BCAAA4">#BCAAA4 </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Grey</db:para>
</db:td>
<db:td>
<db:phrase role="color:#EEEEEE">#EEEEEE </db:phrase></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.BlueGrey</db:para>
</db:td>
<db:td>
<db:phrase role="color:#B0BEC5">#B0BEC5 </db:phrase></db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="pre-defined-shades">
<db:title>Pre-defined Shades</db:title>
<db:para>There are several different <db:link xlink:href="https://material.google.com/style/color.html#color-color-palette">shades</db:link> of each <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined color</db:link> that can be passed to the <db:link xlink:href="qtquickcontrols-material.xml#material-color-attached-method">Material.color()</db:link> function:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Material.Shade50</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade100</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade200</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade300</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade400</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade500</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade600</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade700</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade800</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade900</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.ShadeA100</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.ShadeA200</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.ShadeA400</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.ShadeA700</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para><db:emphasis role="bold">See also</db:emphasis> <db:link xlink:href="qtquickcontrols-basic.xml">Basic Style</db:link>, <db:link xlink:href="qtquickcontrols-universal.xml">Universal Style</db:link></db:para>
</db:section>
<db:section xml:id="variants">
<db:title>Variants</db:title>
<db:para>The Material style also supports a dense variant, where controls like buttons and delegates are smaller in height and use smaller font sizes. It is recommended to use the dense variant on desktop platforms, where a mouse and keyboard allow more precise and flexible user interaction.</db:para>
<db:para>To use the dense variant, either set the <db:code>QT_QUICK_CONTROLS_MATERIAL_VARIANT</db:code> environment variable to <db:code>Dense</db:code>, or specify <db:code>Variant=Dense</db:code> in the <db:link xlink:href="qtquickcontrols-configuration.xml">qtquickcontrols2.conf</db:link> file. The default value in both cases is <db:code>Normal</db:code>.</db:para>
<db:para>The following images illustrate the differences between some of the controls when using the normal and dense variants:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-material-variant-normal.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-material-variant-dense.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Note that the heights shown above may vary based on differences in fonts across platforms.</db:para>
</db:section>
<db:section xml:id="control-specific-notes">
<db:title>Control-Specific Notes</db:title>
<db:anchor xml:id="material-control-specific-notes-textarea"/>
<db:section xml:id="textarea">
<db:title>TextArea</db:title>
<db:para><db:link xlink:href="qml-qtquick-controls-textarea.xml">TextArea</db:link> supports two <db:link xlink:href="qtquickcontrols-material.xml#material-containerstyle-attached-prop">containerStyles</db:link>: <db:code>Filled</db:code> and <db:code>Outlined</db:code>. Outlined TextAreas have floating placeholder text that sits at the top of the control. This requires the placeholder text to go outside the bounds of the control, which can cause it to be clipped when the <db:link xlink:href="qml-qtquick-controls-textarea.xml">TextArea</db:link> or the Flickable it's a child of sets <db:link xlink:href="qml-qtquick-item.xml#clip-prop">clip</db:link> to <db:code>true</db:code>. To avoid this, <db:link xlink:href="qml-qtquick-controls-control.xml#topInset-prop">topInset</db:link> is set to an appropriate value in these cases.</db:para>
</db:section>
<db:section xml:id="textfield">
<db:title>TextField</db:title>
<db:para>The same <db:link xlink:href="qtquickcontrols-material.xml#material-control-specific-notes-textarea">issue with clipping</db:link> explained above for <db:link xlink:href="qml-qtquick-controls-textarea.xml">TextArea</db:link> can also occur with <db:link xlink:href="qml-qtquick-controls-textfield.xml">TextField</db:link>. To avoid this, <db:link xlink:href="qml-qtquick-controls-control.xml#topInset-prop">topInset</db:link> is set to an appropriate value when the <db:link xlink:href="qml-qtquick-controls-textfield.xml">TextField</db:link> sets clip to <db:code>true</db:code>.</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="attached-property-documentation">
<db:title>Attached Property Documentation</db:title>
<db:section><db:title>Material.accent : color</db:title><db:fieldsynopsis><db:type>color</db:type><db:varname>Material.accent</db:varname></db:fieldsynopsis><db:para>{material-accent-attached-prop} <db:anchor xml:id="material-accent-attached-prop"/>
 This attached property holds the accent color of the theme. The property can be attached to any window or item. The value is propagated to children.</db:para>
<db:para>The default value is <db:code>Material.Pink</db:code>.</db:para>
<db:para>In the following example, the accent color of the highlighted button is changed to <db:code>Material.Orange</db:code>:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:programlisting language="qml">Button {
    text: qsTr(&quot;Button&quot;)
    highlighted: true
    Material.accent: Material.Orange
}
</db:programlisting>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-material-accent.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
<db:note>
<db:para>Even though the accent can be any <db:link xlink:href="qml-color.xml">color</db:link>, it is recommended to use one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link> that have been designed to work well with the rest of the Material style palette.</db:para>
</db:note>
</db:section><db:section><db:title>Material.background : color</db:title><db:fieldsynopsis><db:type>color</db:type><db:varname>Material.background</db:varname></db:fieldsynopsis><db:para>{material-background-attached-prop} <db:anchor xml:id="material-background-attached-prop"/>
 This attached property holds the background color of the theme. The property can be attached to any window or item. The value is propagated to children.</db:para>
<db:para>The default value is theme-specific (light or dark).</db:para>
<db:para>In the following example, the background color of the button is changed to <db:code>Material.Teal</db:code>:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:programlisting language="qml">Button {
    text: qsTr(&quot;Button&quot;)
    highlighted: true
    Material.background: Material.Teal
}
</db:programlisting>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-material-background.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
</db:section><db:section><db:title>Material.elevation : int</db:title><db:fieldsynopsis><db:type>int</db:type><db:varname>Material.elevation</db:varname></db:fieldsynopsis><db:para>{material-elevation-attached-prop} <db:anchor xml:id="material-elevation-attached-prop"/>
 This attached property holds the elevation of the control. The higher the elevation, the deeper the shadow. The property can be attached to any control, but not all controls visualize elevation. The value is not propagated to children.</db:para>
<db:para>The default value is control-specific.</db:para>
<db:para>In the following example, the elevation of the pane is set to <db:code>6</db:code> in order to achieve the look of an <db:link xlink:href="https://material.google.com/components/cards.html">elevated card</db:link>:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:programlisting language="qml">Pane {
    width: 120
    height: 120

    Material.elevation: 6

    Label {
        text: qsTr(&quot;I'm a card!&quot;)
        anchors.centerIn: parent
    }
}
</db:programlisting>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-material-elevation.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
</db:section><db:section><db:title>Material.foreground : color</db:title><db:fieldsynopsis><db:type>color</db:type><db:varname>Material.foreground</db:varname></db:fieldsynopsis><db:para>{material-foreground-attached-prop} <db:anchor xml:id="material-foreground-attached-prop"/>
 This attached property holds the foreground color of the theme. The property can be attached to any window or item. The value is propagated to children.</db:para>
<db:para>The default value is theme-specific (light or dark).</db:para>
<db:para>In the following example, the foreground color of the button is set to <db:code>Material.Pink</db:code>:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:programlisting language="qml">Button {
    text: qsTr(&quot;Button&quot;)
    Material.foreground: Material.Pink
}
</db:programlisting>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-material-foreground.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
</db:section><db:section><db:title>Material.primary : color</db:title><db:fieldsynopsis><db:type>color</db:type><db:varname>Material.primary</db:varname></db:fieldsynopsis><db:para>{material-primary-attached-prop} <db:anchor xml:id="material-primary-attached-prop"/>
 This attached property holds the primary color of the theme. The property can be attached to any window or item. The value is propagated to children.</db:para>
<db:para>The primary color is used as the background color of <db:link xlink:href="qml-qtquick-controls-toolbar.xml">ToolBar</db:link> by default.</db:para>
<db:para>The default value is <db:code>Material.Indigo</db:code>.</db:para>
<db:note>
<db:para>Even though the primary can be any <db:link xlink:href="qml-color.xml">color</db:link>, it is recommended to use one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link> that have been designed to work well with the rest of the Material style palette.</db:para>
</db:note>
</db:section><db:section><db:title>Material.theme : enumeration</db:title><db:fieldsynopsis><db:type>enumeration</db:type><db:varname>Material.theme</db:varname></db:fieldsynopsis><db:para>{material-theme-attached-prop} <db:anchor xml:id="material-theme-attached-prop"/>
 This attached property holds whether the theme is light or dark. The property can be attached to any window or item. The value is propagated to children.</db:para>
<db:para>Available themes:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Material.Light</db:para>
</db:td>
<db:td>
<db:para>Light theme (default)</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Dark</db:para>
</db:td>
<db:td>
<db:para>Dark theme</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.System</db:para>
</db:td>
<db:td>
<db:para>System theme</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Setting the theme to <db:code>System</db:code> chooses either the light or dark theme based on the system theme colors. However, when reading the value of the theme property, the value is never <db:code>System</db:code>, but the actual theme.</db:para>
<db:para>In the following example, the theme for both the pane and the button is set to <db:code>Material.Dark</db:code>:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:programlisting language="qml">Pane {
    Material.theme: Material.Dark

    Button {
        text: qsTr(&quot;Button&quot;)
    }
}
</db:programlisting>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-material-theme.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
</db:section><db:section><db:title>Material.roundedScale : enumeration</db:title><db:fieldsynopsis><db:type>enumeration</db:type><db:varname>Material.roundedScale</db:varname></db:fieldsynopsis><db:para>{material-roundedScale-attached-prop} <db:anchor xml:id="material-roundedscale-attached-prop"/>
 This attached property holds the radius of rounded corners used on the target control. The property can be attached to any window or item, but only some controls support it. The value is not propagated to children.</db:para>
<db:para>The default value is control-specific.</db:para>
<db:para>Available scales:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Material.NotRounded</db:para>
</db:td>
<db:td>
<db:para>Square corners</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.ExtraSmallScale</db:para>
</db:td>
<db:td>
<db:para>Extra small rounded corners</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.SmallScale</db:para>
</db:td>
<db:td>
<db:para>Small rounded corners</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.MediumScale</db:para>
</db:td>
<db:td>
<db:para>Medium rounded corners</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.LargeScale</db:para>
</db:td>
<db:td>
<db:para>Large rounded corners</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.ExtraLargeScale</db:para>
</db:td>
<db:td>
<db:para>Extra large rounded corners</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.FullScale</db:para>
</db:td>
<db:td>
<db:para>Fully rounded corners</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This property was added in Qt 6.5.</db:para>
<db:para>See also: <db:link xlink:href="https://m3.material.io/styles/shape/overview">Material Style: Shape</db:link>.</db:para>
</db:section><db:section><db:title>Material.containerStyle : enumeration</db:title><db:fieldsynopsis><db:type>enumeration</db:type><db:varname>Material.containerStyle</db:varname></db:fieldsynopsis><db:para>{material-containerStyle-attached-prop} <db:anchor xml:id="material-containerstyle-attached-prop"/>
 This attached property holds the style of the container used by the target control. The property can be attached to any window or item, but only <db:link xlink:href="qml-qtquick-controls-textfield.xml">TextField</db:link> and <db:link xlink:href="qml-qtquick-controls-textarea.xml">TextArea</db:link> support it by default. The value is not propagated to children.</db:para>
<db:para>The default value is control-specific.</db:para>
<db:para>Available styles:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Material.Filled</db:para>
</db:td>
<db:td>
<db:para>Use the filled container variant if available</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Outlined</db:para>
</db:td>
<db:td>
<db:para>Use the outlined container variant if available</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This property was added in Qt 6.5.</db:para>
<db:para>See also: <db:link xlink:href="https://m3.material.io/components/text-fields/guidelines#2c4fc9be-b266-4975-bdef-968ead47736e">Material Style: Text Field Containers</db:link>.</db:para>
</db:section></db:section>
<db:section xml:id="attached-method-documentation">
<db:title>Attached Method Documentation</db:title>
<db:section><db:title>color color(enumeration <db:emphasis>predefined</db:emphasis>)</db:title><db:methodsynopsis><db:type>color</db:type><db:methodname>color</db:methodname><db:methodparam><db:type>enumeration</db:type><db:parameter>predefined</db:parameter></db:methodparam><db:methodparam><db:type>enumeration</db:type><db:parameter>shade</db:parameter></db:methodparam></db:methodsynopsis><db:para>{material-color-attached-method} <db:anchor xml:id="material-color-attached-method"/>
 This attached method returns the effective color value of the specified <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material color</db:link> combined with the given <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-shades">shade</db:link>. If omitted, the shade argument defaults to <db:code>Material.Shade500</db:code>.</db:para>
<db:programlisting language="qml">Rectangle {
    color: Material.color(Material.Red)
}
</db:programlisting>
</db:section></db:section>
<db:section xml:id="related-information">
<db:title>Related Information</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-styles.xml">Styling Qt Quick Controls</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
