<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Registering Products in Google Play</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A short guide to registering in-app products in Google Play Store.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Google Play market place allows you to register your application, as well as the in-app products you want to make available to it, without publishing it. The following <db:link xlink:href="https://developer.android.com/studio/publish">this guide</db:link> gives a brief introduction on uploading your application to Google Play and registering products.</db:para>
<db:section xml:id="preparing-your-application-for-submission">
<db:title>Preparing your application for submission</db:title>
<db:para>Before you can upload your application to Google Play, you must prepare it for submission.</db:para>
<db:section xml:id="adding-a-manifest-xml">
<db:title>Adding a Manifest XML</db:title>
<db:para>The default AndroidManifest.xml generated for applications by Qt is suitable for development testing, but cannot be used when submitting the application to Google Play.</db:para>
<db:para>Create your own manifest by clicking the <db:guilabel>Create Templates</db:guilabel> button in Qt Creator. You can find the button under <db:guilabel>Projects</db:guilabel> &gt; <db:guilabel>Build</db:guilabel> tab. Expand <db:guilabel>Build Android APK</db:guilabel> to see it.</db:para>
<db:para>Once the manifest is added to your project, you can modify it. The most important parts are the application name and the package name. The package name must be unique, and it is recommended to follow the <db:emphasis role="bold">com.mycompany.myappname</db:emphasis> naming convention. The &quot;com.mycompany&quot; namespace is based on the internet domain ownership to avoid naming collisions with other applications.</db:para>
<db:para>Other important parts of the manifest include the versionCode, which must be incremented every time you upload a new version of the application. Other properties will decide how your application package is presented in the store listing, such as the application name and the version name.</db:para>
<db:para>For more information on the AndroidManifest.xml, see the <db:link xlink:href="http://developer.android.com/guide/topics/manifest/manifest-element.html">Android documentation</db:link>.</db:para>
<db:para>For more information, refer to the <db:link xlink:href="https://doc.qt.io/qt-5/android-3rdparty-libs.html">Third-party Android Libraries</db:link>.</db:para>
</db:section>
<db:section xml:id="signing-the-application">
<db:title>Signing the application</db:title>
<db:para>Qt uses the default debug key to sign your application to enable running the application on a device. Same key cannot be used to sign the Android Application Bundles that is meant to be published on Google Play.</db:para>
<db:para>See <db:link xlink:href="https://doc.qt.io/qtcreator/creator-deploying-android.html#signing-android-packages">Signing Android Packages</db:link></db:para>
</db:section>
</db:section>
<db:section xml:id="registering-your-application">
<db:title>Registering your application</db:title>
<db:para>Once the application is prepared for publishing, you can create a listing for it in Google Play.</db:para>
<db:para>The first step is to get a publisher account, if you do not already have one. Go to <db:link xlink:href="https://play.google.com/apps/publish/">the Google Play developer console</db:link>, log in with the Google account of your choice, and follow the steps as directed.</db:para>
<db:para>When you have set up your account, click on <db:guilabel>Add new application</db:guilabel> in Google Play's developer console.</db:para>
<db:para>Fill out as much information as you want in the store listing, and also the <db:guilabel>Pricing and distribution</db:guilabel> page.</db:para>
<db:section xml:id="publishing-your-application">
<db:title>Publishing your application</db:title>
<db:para>In order to test in-app purchases in your application, you first have to publish it.</db:para>
<db:para>See <db:link xlink:href="https://developer.android.com/studio/publish">Publish your app</db:link></db:para>
</db:section>
<db:section xml:id="adding-in-app-products">
<db:title>Adding in-app products</db:title>
<db:para>In order to access in-app products from your application, you must register them in Google Play.</db:para>
<db:para>See <db:link xlink:href="https://developer.android.com/google/play/billing/getting-ready#products">Create and configure your products</db:link></db:para>
</db:section>
</db:section>
</db:article>
