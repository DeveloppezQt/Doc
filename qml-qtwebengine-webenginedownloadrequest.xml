<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>WebEngineDownloadRequest QML Type</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides information about a download.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtWebEngine</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qwebenginedownloadrequest.xml">QWebEngineDownloadRequest</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml">WebEngineDownloadRequest</db:link> models a download throughout its life cycle, starting with a pending download request and finishing with a completed download. It can be used, for example, to get information about new downloads, to monitor progress, and to pause, resume, and cancel downloads.</db:para>
<db:para>Downloads are usually triggered by user interaction on a web page. It is the <db:link xlink:href="qml-qtwebengine-webengineprofile.xml">WebEngineProfile</db:link>'s responsibility to notify the application of new download requests, which it does by emitting the <db:link xlink:href="qml-qtwebengine-webengineprofile.xml#downloadRequested-signal">downloadRequested</db:link> signal together with a newly created <db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml">WebEngineDownloadRequest</db:link>. The application can then examine this item and decide whether to accept it or not. A signal handler must explicitly call <db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#accept-method">accept</db:link>() on the item for Qt WebEngine to actually start downloading and writing data to disk. If no signal handler calls <db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#accept-method">accept</db:link>(), then the download request will be automatically rejected and nothing will be written to disk.</db:para>
<db:note>
<db:para>Some properties, like the <db:link xlink:href="qml-geopolygon.xml#path">path</db:link> under which the file will be saved, can only be changed before calling <db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#accept-method">accept</db:link>().</db:para>
</db:note>
<db:section xml:id="object-life-cycle">
<db:title>Object Life Cycle</db:title>
<db:para>All items are guaranteed to be valid during the emission of the <db:link xlink:href="qml-qtwebengine-webengineprofile.xml#downloadRequested-signal">downloadRequested</db:link> signal. If <db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#accept-method">accept</db:link>() is <db:emphasis>not</db:emphasis> called by any signal handler, then the item will be deleted <db:emphasis>immediately</db:emphasis> after signal emission. This means that the application <db:emphasis role="bold">must not</db:emphasis> keep references to rejected download items.</db:para>
</db:section>
<db:section xml:id="web-page-downloads">
<db:title>Web Page Downloads</db:title>
<db:para>In addition to normal file downloads, which consist simply of retrieving some raw bytes from the network and writing them to disk, Qt WebEngine also supports saving complete web pages, which involves parsing the page's HTML, downloading any dependent resources, and potentially packaging everything into a special file format (<db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#savePageFormat-prop">savePageFormat</db:link>). To check if a download is for a file or a web page, use <db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#isSavePageDownload-prop">isSavePageDownload</db:link>.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webengineprofile.xml">WebEngineProfile</db:link></db:member>
<db:member><db:link xlink:href="qml-qtwebengine-webengineprofile.xml#downloadRequested-signal">WebEngineProfile::downloadRequested</db:link></db:member>
<db:member><db:link xlink:href="qml-qtwebengine-webengineprofile.xml#downloadFinished-signal">WebEngineProfile::downloadFinished</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="downloadDirectory-prop">
<db:title>downloadDirectory : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>downloadDirectory</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the full target path without file name where data is being downloaded to.</db:para>
<db:para>The download directory can only be set in the <db:link xlink:href="qml-qtwebengine-webengineprofile.xml#downloadRequested-signal">downloadRequested</db:link> handler before the download is accepted.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webengineprofile.xml#downloadRequested-signal">WebEngineProfile::downloadRequested</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#accept-method">accept</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="downloadFileName-prop">
<db:title>downloadFileName : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>downloadFileName</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the name of the file to which data is being downloaded.</db:para>
<db:para>The download file name can only be set in the <db:link xlink:href="qml-qtwebengine-webengineprofile.xml#downloadRequested-signal">downloadRequested</db:link> handler before the download is accepted.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webengineprofile.xml#downloadRequested-signal">WebEngineProfile::downloadRequested</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#accept-method">accept</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="id-prop">
<db:title>[read-only] id : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>id</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the download item's ID.</db:para>
</db:section>
<db:section xml:id="interruptReason-prop">
<db:title>[read-only] interruptReason : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>interruptReason</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns the reason why the download was interrupted:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.NoReason</db:para>
</db:td>
<db:td>
<db:para>Unknown reason or not interrupted.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.FileFailed</db:para>
</db:td>
<db:td>
<db:para>General file operation failure.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.FileAccessDenied</db:para>
</db:td>
<db:td>
<db:para>The file cannot be written locally, due to access restrictions.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.FileNoSpace</db:para>
</db:td>
<db:td>
<db:para>Insufficient space on the target drive.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.FileNameTooLong</db:para>
</db:td>
<db:td>
<db:para>The directory or file name is too long.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.FileTooLarge</db:para>
</db:td>
<db:td>
<db:para>The file size exceeds the file system limitation.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.FileVirusInfected</db:para>
</db:td>
<db:td>
<db:para>The file is infected with a virus.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.FileTransientError</db:para>
</db:td>
<db:td>
<db:para>Temporary problem (for example the file is in use, out of memory, or too many files are opened at once).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.FileBlocked</db:para>
</db:td>
<db:td>
<db:para>The file was blocked due to local policy.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.FileSecurityCheckFailed</db:para>
</db:td>
<db:td>
<db:para>An attempt to check the safety of the download failed due to unexpected reasons.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.FileTooShort</db:para>
</db:td>
<db:td>
<db:para>An attempt was made to seek past the end of a file when opening a file (as part of resuming a previously interrupted download).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.FileHashMismatch</db:para>
</db:td>
<db:td>
<db:para>The partial file did not match the expected hash.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.NetworkFailed</db:para>
</db:td>
<db:td>
<db:para>General network failure.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.NetworkTimeout</db:para>
</db:td>
<db:td>
<db:para>The network operation has timed out.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.NetworkDisconnected</db:para>
</db:td>
<db:td>
<db:para>The network connection has been terminated.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.NetworkServerDown</db:para>
</db:td>
<db:td>
<db:para>The server has gone down.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.NetworkInvalidRequest</db:para>
</db:td>
<db:td>
<db:para>The network request was invalid (for example, the original or redirected URL is invalid, has an unsupported scheme, or is disallowed by policy).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.ServerFailed</db:para>
</db:td>
<db:td>
<db:para>General server failure.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.ServerBadContent</db:para>
</db:td>
<db:td>
<db:para>The server does not have the requested data.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.ServerUnauthorized</db:para>
</db:td>
<db:td>
<db:para>The server did not authorize access to the resource.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.ServerCertProblem</db:para>
</db:td>
<db:td>
<db:para>A problem with the server certificate occurred.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.ServerForbidden</db:para>
</db:td>
<db:td>
<db:para>Access forbidden by the server.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.ServerUnreachable</db:para>
</db:td>
<db:td>
<db:para>Unexpected server response (might indicate that the responding server may not be the intended server).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.UserCanceled</db:para>
</db:td>
<db:td>
<db:para>The user canceled the download.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#interruptReasonString-prop">interruptReasonString</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="interruptReasonString-prop">
<db:title>[read-only] interruptReasonString : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>interruptReasonString</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns a human-readable description of the reason for interrupting the download.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#interruptReason-prop">interruptReason</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isFinished-prop">
<db:title>[read-only] isFinished : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>isFinished</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Whether this download is finished (completed, cancelled, or non-resumable interrupted state).</db:para>
</db:section>
<db:section xml:id="isPaused-prop">
<db:title>[read-only] isPaused : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>isPaused</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Whether this download is paused.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#pause-method">pause</db:link></db:member>
<db:member><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#resume-method">resume</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isSavePageDownload-prop">
<db:title>[read-only] isSavePageDownload : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>isSavePageDownload</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Whether this is a download request for saving a web page or a file.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#savePageFormat-prop">savePageFormat</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mimeType-prop">
<db:title>[read-only] mimeType : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>mimeType</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the MIME type of the download.</db:para>
</db:section>
<db:section xml:id="receivedBytes-prop">
<db:title>[read-only] receivedBytes : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>receivedBytes</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the amount of data in bytes that has been downloaded so far.</db:para>
</db:section>
<db:section xml:id="savePageFormat-prop">
<db:title>savePageFormat : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>savePageFormat</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Describes the format that is used to save a web page.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.UnknownSaveFormat</db:para>
</db:td>
<db:td>
<db:para>This is not a request for downloading a complete web page.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.SingleHtmlSaveFormat</db:para>
</db:td>
<db:td>
<db:para>The page is saved as a single HTML page. Resources such as images are not saved.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.CompleteHtmlSaveFormat</db:para>
</db:td>
<db:td>
<db:para>The page is saved as a complete HTML page, for example a directory containing the single HTML page and the resources.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.MimeHtmlSaveFormat</db:para>
</db:td>
<db:td>
<db:para>The page is saved as a complete web page in the MIME HTML format.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="state-prop">
<db:title>[read-only] state : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>state</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Describes the state of the download:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.DownloadRequested</db:para>
</db:td>
<db:td>
<db:para>Download has been requested, but it has not been accepted yet.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.DownloadInProgress</db:para>
</db:td>
<db:td>
<db:para>Download is in progress.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.DownloadCompleted</db:para>
</db:td>
<db:td>
<db:para>Download completed successfully.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.DownloadCancelled</db:para>
</db:td>
<db:td>
<db:para>Download was cancelled by the user.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineDownloadRequest.DownloadInterrupted</db:para>
</db:td>
<db:td>
<db:para>Download has been interrupted (by the server or because of lost connectivity).</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="suggestedFileName-prop">
<db:title>[read-only] suggestedFileName : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>suggestedFileName</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns the suggested file name.</db:para>
</db:section>
<db:section xml:id="totalBytes-prop">
<db:title>[read-only] totalBytes : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>totalBytes</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the total amount of data to download in bytes.</db:para>
<db:para><db:code>-1</db:code> means the total size is unknown.</db:para>
</db:section>
<db:section xml:id="url-prop">
<db:title>[read-only] url : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>url</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns the download's origin URL.</db:para>
</db:section>
<db:section xml:id="view-prop">
<db:title>[read-only] view : WebEngineView</db:title>
<db:fieldsynopsis>
<db:type>WebEngineView</db:type>
<db:varname>view</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns the view the download was requested on. If the download was not triggered by content in a view, <db:code>nullptr</db:code> is returned.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webengineview.xml">WebEngineView</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="accept-method">
<db:title>void accept()</db:title>
<db:para>Accepts the download request, which will start the download.</db:para>
<db:para>If the item is in the <db:code>DownloadRequested</db:code> state, then it will transition into the <db:code>DownloadInProgress</db:code> state and the downloading will begin. If the item is in any other state, then nothing will happen.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#state-prop">state</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="cancel-method">
<db:title>void cancel()</db:title>
<db:para>Cancels the download.</db:para>
<db:para>If the item is in the <db:code>DownloadInProgress</db:code> state, then it will transition into the <db:code>DownloadCancelled</db:code> state, the downloading will stop, and partially downloaded files will be deleted from disk.</db:para>
<db:para>If the item is in the <db:code>DownloadCompleted</db:code> state, then nothing will happen. If the item is in any other state, then it will transition into the <db:code>DownloadCancelled</db:code> state without further effect.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#state-prop">state</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pause-method">
<db:title>void pause()</db:title>
<db:para>Pauses the download.</db:para>
<db:para>Has no effect if the state is not <db:code>DownloadInProgress</db:code>. Does not change the state.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#resume-method">resume</db:link></db:member>
<db:member><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#isPaused-prop">isPaused</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="resume-method">
<db:title>void resume()</db:title>
<db:para>Resumes the download if it was paused or interrupted.</db:para>
<db:para>Has no effect if the state is not <db:code>DownloadInProgress</db:code> or <db:code>DownloadInterrupted</db:code>. Does not change the state.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#pause-method">pause</db:link></db:member>
<db:member><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml#isPaused-prop">isPaused</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
