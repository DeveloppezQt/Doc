<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title></db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qcborerror.xml">QCborError</db:link> class holds the error condition found while parsing or validating a CBOR stream.</db:para>
<db:note>
<db:para>All functions in this struct are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QtCborCommon</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Core)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Core)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcborstreamreader.xml">QCborStreamReader</db:link></db:member>
<db:member><db:link xlink:href="qcborvalue.xml">QCborValue</db:link></db:member>
<db:member><db:link xlink:href="qcborparsererror.xml">QCborParserError</db:link></db:member>
<db:member><db:link xlink:href="qtcore-serialization-cbordump-example.xml">Parsing and displaying CBOR data</db:link></db:member>
<db:member><db:link xlink:href="qtcore-serialization-convert-example.xml">Convert Example</db:link></db:member>
<db:member><db:link xlink:href="qtcore-serialization-savegame-example.xml">JSON Save Game Example</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Code-enum">
<db:title>enum QCborError::Code</db:title>
<db:enumsynopsis>
<db:enumname>Code</db:enumname>
<db:enumitem>
<db:enumidentifier>UnknownError</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AdvancePastEnd</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>InputOutputError</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>GarbageAtEnd</db:enumidentifier>
<db:enumvalue>256</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>EndOfFile</db:enumidentifier>
<db:enumvalue>257</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>UnexpectedBreak</db:enumidentifier>
<db:enumvalue>258</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>UnknownType</db:enumidentifier>
<db:enumvalue>259</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>IllegalType</db:enumidentifier>
<db:enumvalue>260</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>IllegalNumber</db:enumidentifier>
<db:enumvalue>261</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>IllegalSimpleType</db:enumidentifier>
<db:enumvalue>262</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>InvalidUtf8String</db:enumidentifier>
<db:enumvalue>516</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DataTooLarge</db:enumidentifier>
<db:enumvalue>1024</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NestingTooDeep</db:enumidentifier>
<db:enumvalue>1025</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>UnsupportedType</db:enumidentifier>
<db:enumvalue>1026</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NoError</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum contains the possible error condition codes.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::NoError</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>No error was detected.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::UnknownError</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>An unknown error occurred and no further details are available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::AdvancePastEnd</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qcborstreamreader.xml#next">QCborStreamReader::next</db:link>() was called but there are no more elements in the current context.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::InputOutputError</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>An I/O error with the <db:link xlink:href="qiodevice.xml">QIODevice</db:link> occurred.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::GarbageAtEnd</db:code></db:para>
</db:td>
<db:td><db:code>256</db:code></db:td>
<db:td>
<db:para>Data was found in the input stream after the last element.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::EndOfFile</db:code></db:para>
</db:td>
<db:td><db:code>257</db:code></db:td>
<db:td>
<db:para>The end of the input stream was unexpectedly reached while processing an element.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::UnexpectedBreak</db:code></db:para>
</db:td>
<db:td><db:code>258</db:code></db:td>
<db:td>
<db:para>The CBOR stream contains a Break where it is not allowed (data is corrupt and the error is not recoverable).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::UnknownType</db:code></db:para>
</db:td>
<db:td><db:code>259</db:code></db:td>
<db:td>
<db:para>The CBOR stream contains an unknown/unparsable Type (data is corrupt and the error is not recoverable).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::IllegalType</db:code></db:para>
</db:td>
<db:td><db:code>260</db:code></db:td>
<db:td>
<db:para>The CBOR stream contains a known type in a position it is not allowed to exist (data is corrupt and the error is not recoverable).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::IllegalNumber</db:code></db:para>
</db:td>
<db:td><db:code>261</db:code></db:td>
<db:td>
<db:para>The CBOR stream appears to be encoding a number larger than 64-bit (data is corrupt and the error is not recoverable).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::IllegalSimpleType</db:code></db:para>
</db:td>
<db:td><db:code>262</db:code></db:td>
<db:td>
<db:para>The CBOR stream contains a Simple Type encoded incorrectly (data is corrupt and the error is not recoverable).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::InvalidUtf8String</db:code></db:para>
</db:td>
<db:td><db:code>516</db:code></db:td>
<db:td>
<db:para>The CBOR stream contains a text string that does not decode properly as UTF-8 (data is corrupt and the error is not recoverable).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::DataTooLarge</db:code></db:para>
</db:td>
<db:td><db:code>1024</db:code></db:td>
<db:td>
<db:para>CBOR string, map or array is too big and cannot be parsed by Qt (internal limitation, but the error is not recoverable).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::NestingTooDeep</db:code></db:para>
</db:td>
<db:td><db:code>1025</db:code></db:td>
<db:td>
<db:para>Too many levels of arrays or maps encountered while processing the input (internal limitation, but the error is not recoverable).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcborerror.xml">QCborError</db:link></db:emphasis>::UnsupportedType</db:code></db:para>
</db:td>
<db:td><db:code>1026</db:code></db:td>
<db:td>
<db:para>The CBOR stream contains a known type that the implementation does not support (internal limitation, but the error is not recoverable).</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="toString">
<db:title>QString QCborError::toString() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>toString</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString toString() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a text string that matches the error code in this <db:link xlink:href="qcborerror.xml">QCborError</db:link> object.</db:para>
<db:para>Note: the string is not translated. Applications whose interface allow users to parse CBOR streams need to provide their own, translated strings.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcborerror.xml#Code-enum">QCborError::Code</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-QCborError-3a-3aCode">
<db:title>QCborError::Code QCborError::operator QCborError::Code() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QCborError::Code</db:type>
<db:methodname>operator QCborError::Code</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QCborError::Code operator QCborError::Code() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the error code that this <db:link xlink:href="qcborerror.xml">QCborError</db:link> object stores.</db:para>
</db:section>
</db:section>
</db:article>
