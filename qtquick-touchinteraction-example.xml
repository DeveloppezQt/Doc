<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>Qt Quick Examples - Touch Interaction</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.2.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This is a collection of QML Touch Interaction examples.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qml-touchinteraction-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>This is a collection of small QML examples relating to touch interaction methods.</db:para>
<db:para>Multipoint Flames demonstrates distinguishing different fingers in a <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link>, by assigning a different colored flame to each touch point. The MultipointTouchArea sets up multiple touch points:</db:para>
<db:programlisting language="qml">    MultiPointTouchArea {
        anchors.fill: parent
        minimumTouchPoints: 1
        maximumTouchPoints: 5
        touchPoints: [
            TouchPoint { id: touch1 },
            TouchPoint { id: touch2 },
            TouchPoint { id: touch11 },
            TouchPoint { id: touch21 },
            TouchPoint { id: touch31 }
        ]
    }
</db:programlisting>
<db:para>The flames are then simply bound to the coordiates of the touch point, and whether it is currently pressed, like so:</db:para>
<db:programlisting language="qml">    ParticleFlame {
        color: &quot;red&quot;
        emitterX: touch1.x
        emitterY: touch1.y
        emitting: touch1.pressed
    }
</db:programlisting>
<db:para>Bear-Whack demonstrates using a <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link> to add multiple finger support to a simple game. The interaction with the game is done through a <db:link xlink:href="qml-qtquick-particles-spritegoal.xml">SpriteGoal</db:link> that follows the <db:link xlink:href="qml-qtquick-touchpoint.xml">TouchPoint</db:link>. The TouchPoints added to the <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link> are a component with all this logic embedded into it:</db:para>
<db:programlisting language="qml">TouchPoint {
    id: container
    property ParticleSystem system
    onPressedChanged: {
        if (pressed) {
            timer.restart();
            child.enabled = true;
            system.explode(x,y);
        }
    }
    property QtObject obj: Timer {
        id: timer
        interval: 100
        running: false
        repeat: false
        onTriggered: child.enabled = false
    }
    property Item child: SpriteGoal {
        enabled: false
        x: container.area.x - 16
        y: container.area.y - 16
        width: container.area.width + 32
        height: container.area.height + 32 //+32 so it doesn't have to hit the exact center
        system: container.system
        parent: container.system
        goalState: &quot;falling&quot;
    }
}
</db:programlisting>
<db:para>Flick Resize uses a <db:link xlink:href="qml-qtquick-pincharea.xml">PinchArea</db:link> to allow Pinch-to-Resize behavior. This is easily achieved just by listening to the <db:link xlink:href="qml-qtquick-pincharea.xml">PinchArea</db:link> signals and responding to user input.</db:para>
<db:programlisting language="qml">onPinchStarted: {
    initialWidth = flick.contentWidth
    initialHeight = flick.contentHeight
}

onPinchUpdated: {
    // adjust content pos due to drag
    flick.contentX += pinch.previousCenter.x - pinch.center.x
    flick.contentY += pinch.previousCenter.y - pinch.center.y

    // resize content
    flick.resizeContent(initialWidth * pinch.scale, initialHeight * pinch.scale, pinch.center)
}

onPinchFinished: {
    // Move its content within bounds.
    flick.returnToBounds()
}
</db:programlisting>
<db:para>Flickable is a simple example demonstrating the Flickable type. The object inside the flickable is very big, but the flickable itself is very small:</db:para>
<db:programlisting language="qml">Rectangle {
width: 320
height: 480
Flickable {
    anchors.fill: parent
    contentWidth: 1200
    contentHeight: 1200
    Rectangle {
        width: 1000
        height: 1000
</db:programlisting>
<db:para>Corkboards shows a more complex Flickable usecase, with types on the flickable that respond to mouse and keyboard interaction. This doesn't require special code, the Qt Quick types automatically cooperate with Flickable for accepting the touch events.</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/flickable/basic-flickable.qml">touchinteraction/flickable/basic-flickable.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/flickable/content/Panel.qml">touchinteraction/flickable/content/Panel.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/flickable/corkboards.qml">touchinteraction/flickable/corkboards.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/main.cpp">touchinteraction/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/bearwhack.qml">touchinteraction/multipointtouch/bearwhack.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/content/AugmentedTouchPoint.qml">touchinteraction/multipointtouch/content/AugmentedTouchPoint.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/content/BearWhackParticleSystem.qml">touchinteraction/multipointtouch/content/BearWhackParticleSystem.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/content/ParticleFlame.qml">touchinteraction/multipointtouch/content/ParticleFlame.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/multiflame.qml">touchinteraction/multipointtouch/multiflame.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/pincharea/flickresize.qml">touchinteraction/pincharea/flickresize.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/touchinteraction.pro">touchinteraction/touchinteraction.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/touchinteraction.qml">touchinteraction/touchinteraction.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/touchinteraction.qmlproject">touchinteraction/touchinteraction.qmlproject</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/touchinteraction.qrc">touchinteraction/touchinteraction.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Images:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/flickable/content/cork.jpg">touchinteraction/flickable/content/cork.jpg</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/flickable/content/note-yellow.png">touchinteraction/flickable/content/note-yellow.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/flickable/content/tack.png">touchinteraction/flickable/content/tack.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/content/Bear0.png">touchinteraction/multipointtouch/content/Bear0.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/content/Bear1.png">touchinteraction/multipointtouch/content/Bear1.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/content/Bear2.png">touchinteraction/multipointtouch/content/Bear2.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/content/Bear3.png">touchinteraction/multipointtouch/content/Bear3.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/content/BearB.png">touchinteraction/multipointtouch/content/BearB.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/content/blur-circle.png">touchinteraction/multipointtouch/content/blur-circle.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/content/blur-circle3.png">touchinteraction/multipointtouch/content/blur-circle3.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/content/heart-blur.png">touchinteraction/multipointtouch/content/heart-blur.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/multipointtouch/content/title.png">touchinteraction/multipointtouch/content/title.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="touchinteraction/pincharea/qt-logo.jpg">touchinteraction/pincharea/qt-logo.jpg</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:section></db:article>
