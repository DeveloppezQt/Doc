<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QChildWindowEvent Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qchildwindowevent.xml">QChildWindowEvent</db:link> class contains event parameters for child window changes.</db:para>
<db:para>This class was introduced in Qt 6.7.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QChildWindowEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qevent.xml" xlink:role="class">QEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QChildWindowEvent is part of <db:simplelist><db:member>events</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Child window events are sent to windows when children are added or removed.</db:para>
<db:para>In both cases you can only rely on the child being a <db:link xlink:href="qwindow.xml">QWindow</db:link> â€” not any subclass thereof. This is because in the <db:link xlink:href="qevent.xml#Type-enum">QEvent::ChildWindowAdded</db:link> case the subclass is not yet fully constructed, and in the <db:link xlink:href="qevent.xml#Type-enum">QEvent::ChildWindowRemoved</db:link> case it might have already been destructed.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QChildWindowEvent">
<db:title>[explicit] QChildWindowEvent::QChildWindowEvent(QEvent::Type <db:emphasis>type</db:emphasis>, QWindow *<db:emphasis>childWindow</db:emphasis>)</db:title>
<db:para>Constructs a child window event object of a particular <db:code role="parameter">type</db:code> for the <db:code role="parameter">childWindow</db:code>.</db:para>
<db:para><db:code role="parameter">type</db:code> can be <db:link xlink:href="qevent.xml#Type-enum">QEvent::ChildWindowAdded</db:link> or <db:link xlink:href="qevent.xml#Type-enum">QEvent::ChildWindowRemoved</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qchildwindowevent.xml#child">child</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="child">
<db:title>QWindow *QChildWindowEvent::child() const</db:title>
<db:para>Returns the child window that was added or removed.</db:para>
</db:section>
</db:section>
</db:article>
