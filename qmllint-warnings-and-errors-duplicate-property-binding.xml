<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Duplicate bindings</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Qml Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>[duplicate-property-binding] A property was bound multiple times.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>This warning category is spelled [duplicate-property-binding] by qmllint.</db:para>
<db:section xml:id="duplicate-interceptor-on-property">
<db:title>Duplicate interceptor on property</db:title>
<db:section xml:id="what-happened">
<db:title>What happened?</db:title>
<db:para>One property has multiple <db:link xlink:href="qtqml-cppintegration-definetypes.xml#property-modifier-types">interceptors</db:link>.</db:para>
</db:section>
<db:section xml:id="why-is-this-bad">
<db:title>Why is this bad?</db:title>
<db:para>Setting multiple interceptors on the same property is unsupported by the QML engine.</db:para>
</db:section>
<db:section xml:id="example">
<db:title>Example</db:title>
<db:para>Lets use Behavior as interceptor twice on the same property:</db:para>
<db:programlisting language="qml">import QtQuick

Rectangle {
    Behavior on width {
        NumberAnimation { duration: 1000 }
    }
    Behavior on width { // not ok: Duplicate interceptor on property &quot;width&quot; [duplicate-property-binding]
        NumberAnimation { duration: 2000 }
    }
}
</db:programlisting>
<db:para>To fix this warning, remove all but one Behavior:</db:para>
<db:programlisting language="qml">import QtQuick

Rectangle {
    Behavior on width {
        NumberAnimation { duration: 2000 }
    }
}
</db:programlisting>
<db:para><db:emphasis role="bold">See also</db:emphasis> <db:link xlink:href="qtqml-cppintegration-definetypes.xml#property-modifier-types">Property Modifier Types</db:link>.</db:para>
</db:section>
</db:section>
<db:section xml:id="duplicate-value-source-on-property">
<db:title>Duplicate value source on property</db:title>
<db:section xml:id="duplicate-value-source-on-property-what-happened-5">
<db:title>What happened?</db:title>
<db:para>One property has multiple <db:link xlink:href="qtqml-cppintegration-definetypes.xml#property-value-sources">value sources</db:link>.</db:para>
</db:section>
<db:section xml:id="duplicate-value-source-on-property-why-is-this-bad-6">
<db:title>Why is this bad?</db:title>
<db:para>The value sources will show unexpected behavior when combined. See <db:link xlink:href="qmllint-warnings-and-errors-with.xml#example">example</db:link> below.</db:para>
</db:section>
<db:section xml:id="duplicate-value-source-on-property-example-7">
<db:title>Example</db:title>
<db:para>Lets use NumberAnimation as value source twice on the same property:</db:para>
<db:programlisting language="qml">import QtQuick

Rectangle {
    NumberAnimation on x { to: 50; duration: 1000 }
    NumberAnimation on x { to: 10; duration: 100 } // not ok: Duplicate value source on property &quot;x&quot; [duplicate-property-binding]

    onXChanged: console.log(x)
}
</db:programlisting>
<db:para>If you check the output of that program, you will see that the two NumberAnimation will interleave each other, which is probably not the effect that was intended. To fix this warning, remove all but one NumberAnimation:</db:para>
<db:programlisting language="qml">import QtQuick

Rectangle {
    NumberAnimation on x { to: 50; duration: 1000 }
}
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="cannot-combine-value-source-and-binding">
<db:title>Cannot combine value source and binding</db:title>
<db:section xml:id="cannot-combine-value-source-and-binding-what-happened-9">
<db:title>What happened?</db:title>
<db:para>One property has a <db:link xlink:href="qtqml-cppintegration-definetypes.xml#property-value-sources">value source</db:link> and a binding on the same property.</db:para>
</db:section>
<db:section xml:id="cannot-combine-value-source-and-binding-why-is-this-bad-10">
<db:title>Why is this bad?</db:title>
<db:para>The binding will updated the property value before the value source starts updating this property. This may lead to unexpected behavior, and is also harder to read.</db:para>
</db:section>
<db:section xml:id="cannot-combine-value-source-and-binding-example-11">
<db:title>Example</db:title>
<db:para>Lets use NumberAnimation as value source on the same property:</db:para>
<db:programlisting language="qml">import QtQuick

Rectangle {
    NumberAnimation on x { to: 50; duration: 1000 } // not ok: Cannot combine value source and binding on property &quot;x&quot; [duplicate-property-binding]
    x: 55

    onXChanged: console.log(x)
}
</db:programlisting>
<db:para>If you check the output of that program, you will see that the NumberAnimation will animate from 55 to 50, which would be easier to read with following code:</db:para>
<db:programlisting language="qml">import QtQuick

Rectangle {
    NumberAnimation on x { from: 55; to: 50; duration: 1000 } // ok: intentions are clearer now!
}
</db:programlisting>
</db:section>
</db:section>
</db:article>
