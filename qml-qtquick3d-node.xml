<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Node QML Type</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The base component for an object that exists in a 3D scene.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick3D</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick3d-particles3d-affector3d.xml" xlink:role="">Affector3D</db:link>, <db:link xlink:href="qml-qtquick3d-helpers-axishelper.xml" xlink:role="">AxisHelper</db:link>, <db:link xlink:href="qml-qtquick3d-camera.xml" xlink:role="">Camera</db:link>, <db:link xlink:href="qml-qtquick3d-physics-collisionshape.xml" xlink:role="">CollisionShape</db:link>, <db:link xlink:href="qml-qtquick3d-joint.xml" xlink:role="">Joint</db:link>, <db:link xlink:href="qml-qtquick3d-light.xml" xlink:role="">Light</db:link>, <db:link xlink:href="qml-qtquick3d-loader3d.xml" xlink:role="">Loader3D</db:link>, <db:link xlink:href="qml-qtquick3d-helpers-lodmanager.xml" xlink:role="">LodManager</db:link>, <db:link xlink:href="qml-qtquick3d-helpers-lookatnode.xml" xlink:role="">LookAtNode</db:link>, <db:link xlink:href="qml-qtquick3d-model.xml" xlink:role="">Model</db:link>, <db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml" xlink:role="">ParticleEmitter3D</db:link>, <db:link xlink:href="qml-qtquick3d-particles3d-particlesystem3d.xml" xlink:role="">ParticleSystem3D</db:link>, <db:link xlink:href="qml-qtquick3d-physics-physicsnode.xml" xlink:role="">PhysicsNode</db:link>, <db:link xlink:href="qml-qtquick3d-reflectionprobe.xml" xlink:role="">ReflectionProbe</db:link>, <db:link xlink:href="qml-qtquick3d-repeater3d.xml" xlink:role="">Repeater3D</db:link>, <db:link xlink:href="qml-qtquick3d-assetutils-runtimeloader.xml" xlink:role="">RuntimeLoader</db:link>, and <db:link xlink:href="qml-qtquick3d-skeleton.xml" xlink:role="">Skeleton</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Object3D</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The Node type serves as the base class for other spatial types, such as, <db:link xlink:href="qml-qtquick3d-model.xml">Model</db:link>, <db:link xlink:href="qml-qtquick3d-camera.xml">Camera</db:link>, <db:link xlink:href="qml-qtquick3d-light.xml">Light</db:link>. These objects represent an entity that exists in the 3D scene, due to having a position and other properties in the 3D world. With the exception of the root node(s), all Node types are transformed relative to their parent Node, that is, in local coordinates. In many ways the Node type serves the same purpose in Qt Quick 3D scenes as <db:link xlink:href="qml-qtquick-item.xml">Item</db:link> does for Qt Quick scenes.</db:para>
<db:para>In addition to types deriving from Node, it is also possible to parent other types to a Node. This includes <db:link xlink:href="qobject.xml">QObject</db:link> instances, where the Node merely serves as the <db:link xlink:href="qobject.xml#parent">QObject parent</db:link>, and <db:link xlink:href="qtquick3d-2d.xml">Qt Quick items</db:link>.</db:para>
<db:para>Wrapping other objects for the purpose of grouping them into components or sub-trees can be a convenient way to, for example, animated a group of nodes as a whole. This snippet shows how to use Node to animate a camera:</db:para>
<db:programlisting language="qml">Node {
    PerspectiveCamera {
        position: Qt.vector3d(0, 0, -600)
    }

    SequentialAnimation on eulerRotation.y {
        loops: Animation.Infinite
        PropertyAnimation {
            duration: 5000
            from: 0
            to: 360
        }
    }
}
</db:programlisting>
<db:para>Node has to be used also if creating a scene outside of <db:link xlink:href="qml-qtquick3d-view3d.xml">View3D</db:link>, for example for the purpose of switching scenes on the fly, or showing the same scene on multiple views.</db:para>
<db:programlisting language="qml">Node {
    id: standAloneScene

    DirectionalLight {}

    Model {
        source: &quot;#Sphere&quot;
        materials: [ DefaultMaterial {} ]
    }

    PerspectiveCamera {
        z: 600
    }
}

View3D {
    importScene: standAloneScene
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="eulerRotation-prop">
<db:title>eulerRotation : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>eulerRotation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property contains the rotation values for the x, y, and z axis. These values are stored as a vector3d. Rotation order is assumed to be ZXY.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qquaternion.xml#fromEulerAngles">QQuaternion::fromEulerAngles</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="forward-prop">
<db:title>[read-only] forward : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>forward</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property returns a normalized vector of the nodes forward direction in scene space.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#up-prop">up</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#right-prop">right</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionToScene-method">mapDirectionToScene</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="opacity-prop">
<db:title>opacity : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>opacity</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property contains the local opacity value of the Node. Since Node objects are not necessarily visible, this value might not have any effect, but this value is inherited by all children of the Node, which might be visible.</db:para>
</db:section>
<db:section xml:id="pivot-prop">
<db:title>pivot : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>pivot</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property contains the pivot values for the x, y, and z axis. These values are used as the pivot points when applying rotations to the node.</db:para>
</db:section>
<db:section xml:id="position-prop">
<db:title>position : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>position</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property contains the position translation in local coordinate space.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#x-prop">x</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#y-prop">y</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#z-prop">z</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="right-prop">
<db:title>[read-only] right : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>right</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property returns a normalized vector of the nodes right direction in scene space.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#forward-prop">forward</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#up-prop">up</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionToScene-method">mapDirectionToScene</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rotation-prop">
<db:title>rotation : quaternion</db:title>
<db:fieldsynopsis>
<db:type>quaternion</db:type>
<db:varname>rotation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property contains the rotation values for the node. These values are stored as a quaternion.</db:para>
</db:section>
<db:section xml:id="scale-prop">
<db:title>scale : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>scale</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property contains the scale values for the x, y, and z axis.</db:para>
</db:section>
<db:section xml:id="scenePosition-prop">
<db:title>[read-only] scenePosition : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>scenePosition</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property returns the position of the node in scene space.</db:para>
<db:note>
<db:para>This is sometimes also referred to as the global position. But then in the meaning &quot;global in the 3D world&quot;, and not &quot;global to the screen or desktop&quot; (which is usually the interpretation in other Qt APIs).</db:para>
</db:note>
<db:note>
<db:para>the position will be reported in the same orientation as the node.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapPositionToScene-method">mapPositionToScene</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sceneRotation-prop">
<db:title>[read-only] sceneRotation : quaternion</db:title>
<db:fieldsynopsis>
<db:type>quaternion</db:type>
<db:varname>sceneRotation</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property returns the rotation of the node in scene space.</db:para>
</db:section>
<db:section xml:id="sceneScale-prop">
<db:title>[read-only] sceneScale : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>sceneScale</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property returns the scale of the node in scene space.</db:para>
</db:section>
<db:section xml:id="sceneTransform-prop">
<db:title>[read-only] sceneTransform : matrix4x4</db:title>
<db:fieldsynopsis>
<db:type>matrix4x4</db:type>
<db:varname>sceneTransform</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property returns the global transform matrix for this node.</db:para>
<db:note>
<db:para>the return value will be in right-handed coordinates.</db:para>
</db:note>
</db:section>
<db:section xml:id="staticFlags-prop">
<db:title>staticFlags : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>staticFlags</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the static flags that are used to evaluate how the node is rendered. Currently doesn't do anything but act as a placeholder for a future implementation.</db:para>
</db:section>
<db:section xml:id="up-prop">
<db:title>[read-only] up : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>up</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property returns a normalized vector of the nodes up direction in scene space.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#forward-prop">forward</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#right-prop">right</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionToScene-method">mapDirectionToScene</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="visible-prop">
<db:title>visible : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>visible</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>When this property is true, the Node (and its children) can be visible.</db:para>
</db:section>
<db:section xml:id="x-prop">
<db:title>x : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>x</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property contains the x value of the position translation in local coordinate space.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#position-prop">position</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="y-prop">
<db:title>y : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>y</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property contains the y value of the position translation in local coordinate space.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#position-prop">position</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="z-prop">
<db:title>z : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>z</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property contains the z value of the position translation in local coordinate space.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#position-prop">position</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="mapDirectionFromNode-method">
<db:title>vector3d mapDirectionFromNode(QtQuick3D::Node <db:emphasis>node</db:emphasis>, vector3d <db:emphasis>localDirection</db:emphasis>)</db:title>
<db:para>Transforms <db:code role="parameter">localDirection</db:code> from the local space of <db:code role="parameter">node</db:code> to the local space of this node. The return value is not affected by the (inherited) scale or position of the node.</db:para>
<db:note>
<db:para>the return value will have the same length as <db:code role="parameter">localDirection</db:code> (i.e. not normalized).</db:para>
</db:note>
<db:note>
<db:para>If <db:code role="parameter">node</db:code> is null, then <db:code role="parameter">localDirection</db:code> is interpreted as it is in scene space coordinates.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionToNode-method">mapDirectionToNode</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionFromScene-method">mapDirectionFromScene</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionToScene-method">mapDirectionToScene</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mapDirectionFromScene-method">
<db:title>vector3d mapDirectionFromScene(vector3d <db:emphasis>sceneDirection</db:emphasis>)</db:title>
<db:para>Transforms <db:code role="parameter">sceneDirection</db:code> from scene space to local space. The return value is not affected by the (inherited) scale or position of the node.</db:para>
<db:note>
<db:para>the return value will have the same length as <db:code role="parameter">sceneDirection</db:code> (i.e not normalized).</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionToScene-method">mapDirectionToScene</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionToNode-method">mapDirectionToNode</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionFromNode-method">mapDirectionFromNode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mapDirectionToNode-method">
<db:title>vector3d mapDirectionToNode(QtQuick3D::Node <db:emphasis>node</db:emphasis>, vector3d <db:emphasis>localDirection</db:emphasis>)</db:title>
<db:para>Transforms <db:code role="parameter">localDirection</db:code> from this nodes local space to the local space of <db:code role="parameter">node</db:code>. The return value is not affected by the (inherited) scale or position of the node.</db:para>
<db:note>
<db:para>the return value will have the same length as <db:code role="parameter">localDirection</db:code> (i.e. not normalized).</db:para>
</db:note>
<db:note>
<db:para>if <db:code role="parameter">node</db:code> is null, then the returned direction will be transformed into scene space coordinates.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionFromNode-method">mapDirectionFromNode</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionFromScene-method">mapDirectionFromScene</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionToScene-method">mapDirectionToScene</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mapDirectionToScene-method">
<db:title>vector3d mapDirectionToScene(vector3d <db:emphasis>localDirection</db:emphasis>)</db:title>
<db:para>Transforms <db:code role="parameter">localDirection</db:code> from local space to scene space. The return value is not affected by the (inherited) scale or position of the node.</db:para>
<db:note>
<db:para>the return value will have the same length as <db:code role="parameter">localDirection</db:code> (i.e. not normalized).</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionFromScene-method">mapDirectionFromScene</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionToNode-method">mapDirectionToNode</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapDirectionFromNode-method">mapDirectionFromNode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mapPositionFromNode-method">
<db:title>vector3d mapPositionFromNode(QtQuick3D::Node <db:emphasis>node</db:emphasis>, vector3d <db:emphasis>localPosition</db:emphasis>)</db:title>
<db:para>Transforms <db:code role="parameter">localPosition</db:code> from the local space of <db:code role="parameter">node</db:code> to the local space of this node.</db:para>
<db:note>
<db:para>If <db:code role="parameter">node</db:code> is null, then <db:code role="parameter">localPosition</db:code> is interpreted as it is in scene space coordinates.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapPositionToScene-method">mapPositionToScene</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapPositionFromScene-method">mapPositionFromScene</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapPositionToNode-method">mapPositionToNode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mapPositionFromScene-method">
<db:title>vector3d mapPositionFromScene(vector3d <db:emphasis>scenePosition</db:emphasis>)</db:title>
<db:para>Transforms <db:code role="parameter">scenePosition</db:code> from scene space to local space.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapPositionToScene-method">mapPositionToScene</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapPositionToNode-method">mapPositionToNode</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapPositionFromNode-method">mapPositionFromNode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mapPositionToNode-method">
<db:title>vector3d mapPositionToNode(QtQuick3D::Node <db:emphasis>node</db:emphasis>, vector3d <db:emphasis>localPosition</db:emphasis>)</db:title>
<db:para>Transforms <db:code role="parameter">localPosition</db:code> from the local space of this node to the local space of <db:code role="parameter">node</db:code>.</db:para>
<db:note>
<db:para>If <db:code role="parameter">node</db:code> is null, then <db:code role="parameter">localPosition</db:code> will be transformed into scene space coordinates.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapPositionToScene-method">mapPositionToScene</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapPositionFromScene-method">mapPositionFromScene</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapPositionFromNode-method">mapPositionFromNode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mapPositionToScene-method">
<db:title>vector3d mapPositionToScene(vector3d <db:emphasis>localPosition</db:emphasis>)</db:title>
<db:para>Transforms <db:code role="parameter">localPosition</db:code> from local space to scene space.</db:para>
<db:note>
<db:para>&quot;Scene space&quot; is sometimes also referred to as the &quot;global space&quot;. But then in the meaning &quot;global in the 3D world&quot;, and not &quot;global to the screen or desktop&quot; (which is usually the interpretation in other Qt APIs).</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapPositionFromScene-method">mapPositionFromScene</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapPositionToNode-method">mapPositionToNode</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-node.xml#mapPositionFromNode-method">mapPositionFromNode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rotate-method">
<db:title>rotate(real <db:emphasis>degrees</db:emphasis>, vector3d <db:emphasis>axis</db:emphasis>, enumeration <db:emphasis>space</db:emphasis>)</db:title>
<db:para>Rotates this node around an <db:code role="parameter">axis</db:code> by the given <db:code role="parameter">degrees</db:code>. The specified rotation will be added to the node's current rotation. The axis can be specified relative to different <db:code role="parameter">space</db:code>s.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Node.LocalSpace</db:para>
</db:td>
<db:td>
<db:para>Axis is relative to the local orientation of this node.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Node.ParentSpace</db:para>
</db:td>
<db:td>
<db:para>Axis is relative to the local orientation of the parent node.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Node.SceneSpace</db:para>
</db:td>
<db:td>
<db:para>Axis is relative to the scene.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
</db:article>
