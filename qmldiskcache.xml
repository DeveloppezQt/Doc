<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>The QML Disk Cache</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>QML caches compiled documents on disk to improve load time.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>When your application loads a QML or JavaScript file for the first time, the QML engine compiles the file into a byte code representation on the fly and runs it. The compiling process can be time consuming, and subsequent loads of the same document yield the same result. To optimize this step, the QML engine can cache the result. It stores the byte code in a cache file and later loads the cache file instead of re-compiling when the same file is requested again. Usually the files are stored in a subdirectory qmlcache of the system's cache directory, as denoted by <db:link xlink:href="qstandardpaths.xml#StandardLocation-enum">QStandardPaths::CacheLocation</db:link>. Checks are in place to make sure that the cache files are only loaded if all of the following conditions are met:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>The Qt version has not changed</db:para>
</db:listitem>
<db:listitem>
<db:para>The source code in the original file has not changed</db:para>
</db:listitem>
<db:listitem>
<db:para>The QML debugger is not running</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The disk caching behavior can be fine tuned using the following environment variables:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Environment Variable</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>QML_DISABLE_DISK_CACHE</db:para>
</db:td>
<db:td>
<db:para>Disables the disk cache and forces re-compilation from source for all QML and JavaScript files.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>QML_FORCE_DISK_CACHE</db:para>
</db:td>
<db:td>
<db:para>Enables the disk cache even when debugging QML. You cannot use the JavaScript debugger this way. It may fail to stop at breakpoints, for example. You can still use the QML inspector to explore the object hierarchy, though. QML_FORCE_DISK_CACHE overrides QML_DISABLE_DISK_CACHE.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>QML_DISK_CACHE_PATH</db:para>
</db:td>
<db:td>
<db:para>Specifies a custom location where the cache files shall be stored instead of using the default location.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>You can also specify CONFIG += qtquickcompiler in your .pro file to perform the compilation ahead of time and integrate the resulting byte code directly into your executable. For more information, see <db:link xlink:href="qtqml-qtquick-compiler-tech.xml">Qt Quick Compiler</db:link>.</db:para>
</db:article>
