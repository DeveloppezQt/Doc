<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Connections QML Type</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Describes generalized connections to signals.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Connections is part of <db:simplelist><db:member>qtquick-interceptors</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A Connections object creates a connection to a QML signal.</db:para>
<db:para>When connecting to signals in QML, the usual way is to create an &quot;on&lt;Signal&gt;&quot; handler that reacts when a signal is received, like this:</db:para>
<db:programlisting language="qml">MouseArea {
    onClicked: (mouse)=&amp;gt; { foo(mouse) }
}
</db:programlisting>
<db:para>However, it is not possible to connect to a signal in this way in some cases, such as when:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Multiple connections to the same signal are required</db:para>
</db:listitem>
<db:listitem>
<db:para>Creating connections outside the scope of the signal sender</db:para>
</db:listitem>
<db:listitem>
<db:para>Connecting to targets not defined in QML</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>When any of these are needed, the Connections type can be used instead.</db:para>
<db:para>For example, the above code can be changed to use a Connections object, like this:</db:para>
<db:programlisting language="qml">MouseArea {
    Connections {
        function onClicked(mouse) { foo(mouse) }
    }
}
</db:programlisting>
<db:para>More generally, the Connections object can be a child of some object other than the sender of the signal:</db:para>
<db:programlisting language="qml">MouseArea {
    id: area
}
// ...
</db:programlisting>
<db:programlisting language="qml">Connections {
    target: area
    function onClicked(mouse) { foo(mouse) }
}
</db:programlisting>
<db:note>
<db:para>For backwards compatibility you can also specify the signal handlers without function, like you would specify them directly in the target object. This is not recommended. If you specify one signal handler this way, then all signal handlers specified as function in the same Connections object are ignored.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtqml-index.xml">Qt QML</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="enabled-prop">
<db:title>enabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>enabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the item accepts change events.</db:para>
<db:para>By default, this property is true.</db:para>
</db:section>
<db:section xml:id="ignoreUnknownSignals-prop">
<db:title>ignoreUnknownSignals : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>ignoreUnknownSignals</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Normally, a connection to a non-existent signal produces runtime errors.</db:para>
<db:para>If this property is set to true, such errors are ignored. This is useful if you intend to connect to different types of objects, handling a different set of signals for each object.</db:para>
</db:section>
<db:section xml:id="target-prop">
<db:title>target : QtObject</db:title>
<db:fieldsynopsis>
<db:type>QtObject</db:type>
<db:varname>target</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the object that sends the signal.</db:para>
<db:para>If this property is not set, the target defaults to the parent of the Connection.</db:para>
<db:para>If set to null, no connection is made and any signal handlers are ignored until the target is not null.</db:para>
</db:section>
</db:section>
</db:article>
