<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>PropertyAnimation QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Animates changes in property values.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick 2.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-coloranimation.xml" xlink:role="">ColorAnimation</db:link>, <db:link xlink:href="qml-qtpositioning-coordinateanimation.xml" xlink:role="">CoordinateAnimation</db:link>, <db:link xlink:href="qml-qtquick-numberanimation.xml" xlink:role="">NumberAnimation</db:link>, <db:link xlink:href="qml-qt3d-core-quaternionanimation.xml" xlink:role="">QuaternionAnimation</db:link>, <db:link xlink:href="qml-qtquick-rotationanimation.xml" xlink:role="">RotationAnimation</db:link>, and <db:link xlink:href="qml-qtquick-vector3danimation.xml" xlink:role="">Vector3dAnimation</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-animation.xml">Animation</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>PropertyAnimation is part of <db:simplelist><db:member>qtquick-animation-properties</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-propertyanimation.xml">PropertyAnimation</db:link> provides a way to animate changes to a property's value.</db:para>
<db:para>It can be used to define animations in a number of ways:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>In a <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link></db:para>
<db:para>For example, to animate any objects that have changed their x or y properties as a result of a state change, using an InOutQuad easing curve:</db:para>
<db:programlisting language="qml">Rectangle {
    id: rect
    width: 100; height: 100
    color: &quot;red&quot;

    states: State {
        name: &quot;moved&quot;
        PropertyChanges { target: rect; x: 50 }
    }

    transitions: Transition {
        PropertyAnimation { properties: &quot;x,y&quot;; easing.type: Easing.InOutQuad }
    }
}
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>In a <db:link xlink:href="qml-qtquick-behavior.xml">Behavior</db:link></db:para>
<db:para>For example, to animate all changes to a rectangle's x property:</db:para>
<db:programlisting language="qml">Rectangle {
    width: 100; height: 100
    color: &quot;red&quot;

    Behavior on x { PropertyAnimation {} }

    MouseArea { anchors.fill: parent; onClicked: parent.x = 50 }
}
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>As a property value source</db:para>
<db:para>For example, to repeatedly animate the rectangle's x property:</db:para>
<db:programlisting language="qml">Rectangle {
    width: 100; height: 100
    color: &quot;red&quot;

    SequentialAnimation on x {
        loops: Animation.Infinite
        PropertyAnimation { to: 50 }
        PropertyAnimation { to: 0 }
    }
}
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>In a signal handler</db:para>
<db:para>For example, to fade out theObject when clicked:</db:para>
<db:programlisting language="qml">MouseArea {
    anchors.fill: theObject
    onClicked: PropertyAnimation { target: theObject; property: &quot;opacity&quot;; to: 0 }
}
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>Standalone</db:para>
<db:para>For example, to animate rect's width property over 500ms, from its current width to 30:</db:para>
<db:programlisting language="qml">Rectangle {
    id: theRect
    width: 100; height: 100
    color: &quot;red&quot;

    // this is a standalone animation, it's not running by default
    PropertyAnimation { id: animation;
                        target: theRect;
                        property: &quot;width&quot;;
                        to: 30;
                        duration: 500 }

    MouseArea { anchors.fill: parent; onClicked: animation.running = true }
}
</db:programlisting>
</db:listitem>
</db:itemizedlist>
<db:para>Depending on how the animation is used, the set of properties normally used will be different. For more information see the individual property documentation, as well as the <db:link xlink:href="qtquick-statesanimations-animations.xml">Animation and Transitions in Qt Quick</db:link> introduction.</db:para>
<db:para>Note that <db:link xlink:href="qml-qtquick-propertyanimation.xml">PropertyAnimation</db:link> inherits the abstract <db:link xlink:href="qml-qtquick-animation.xml">Animation</db:link> type. This includes additional properties and methods for controlling the animation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-statesanimations-animations.xml">Animation and Transitions in Qt Quick</db:link></db:member>
<db:member><db:link xlink:href="qtquick-animation-example.xml">Qt Quick Examples - Animation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="properties-prop">
<db:title>properties : string</db:title>
<db:bridgehead renderas="sect2">property : string</db:bridgehead><db:bridgehead renderas="sect2">target : Object</db:bridgehead><db:bridgehead renderas="sect2">[read-only] targets : list&lt;Object&gt;</db:bridgehead><db:para>These properties are used as a set to determine which properties should be animated. The singular and plural forms are functionally identical, e.g.</db:para>
<db:programlisting language="qml">NumberAnimation { target: theItem; property: &quot;x&quot;; to: 500 }
</db:programlisting>
<db:para>has the same meaning as</db:para>
<db:programlisting language="qml">NumberAnimation { targets: theItem; properties: &quot;x&quot;; to: 500 }
</db:programlisting>
<db:para>The singular forms are slightly optimized, so if you do have only a single target/property to animate you should try to use them.</db:para>
<db:para>The targets property allows multiple targets to be set. For example, this animates the x property of both itemA and itemB:</db:para>
<db:programlisting language="qml">NumberAnimation { targets: [itemA, itemB]; properties: &quot;x&quot;; to: 500 }
</db:programlisting>
<db:para>In many cases these properties do not need to be explicitly specified, as they can be inferred from the animation framework:</db:para>
<db:informaltable style="generic" width="80%">
<db:tr valign="top">
<db:td>
<db:para>Value Source / Behavior</db:para>
</db:td>
<db:td>
<db:para>When an animation is used as a value source or in a Behavior, the default target and property name to be animated can both be inferred.</db:para>
<db:programlisting language="qml">Rectangle {
    id: theRect
    width: 100; height: 100
    color: Qt.rgba(0,0,1)
    NumberAnimation on x { to: 500; loops: Animation.Infinite } //animate theRect's x property
    Behavior on y { NumberAnimation {} } //animate theRect's y property
}
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Transition</db:para>
</db:td>
<db:td>
<db:para>When used in a transition, a property animation is assumed to match <db:emphasis>all</db:emphasis> targets but <db:emphasis>no</db:emphasis> properties. In practice, that means you need to specify at least the properties in order for the animation to do anything.</db:para>
<db:programlisting language="qml">Rectangle {
    id: theRect
    width: 100; height: 100
    color: Qt.rgba(0,0,1)
    Item { id: uselessItem }
    states: State {
        name: &quot;state1&quot;
        PropertyChanges { target: theRect; x: 200; y: 200; z: 4 }
        PropertyChanges { target: uselessItem; x: 10; y: 10; z: 2 }
    }
    transitions: Transition {
        //animate both theRect's and uselessItem's x and y to their final values
        NumberAnimation { properties: &quot;x,y&quot; }

        //animate theRect's z to its final value
        NumberAnimation { target: theRect; property: &quot;z&quot; }
    }
}
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Standalone</db:para>
</db:td>
<db:td>
<db:para>When an animation is used standalone, both the target and property need to be explicitly specified.</db:para>
<db:programlisting language="qml">Rectangle {
    id: theRect
    width: 100; height: 100
    color: Qt.rgba(0,0,1)
    //need to explicitly specify target and property
    NumberAnimation { id: theAnim; target: theRect; property: &quot;x&quot;; to: 500 }
    MouseArea {
        anchors.fill: parent
        onClicked: theAnim.start()
    }
}
</db:programlisting>
</db:td>
</db:tr>
</db:informaltable>
<db:para>As seen in the above example, properties is specified as a comma-separated string of property names to animate.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-propertyanimation.xml#exclude-prop">exclude</db:link></db:member>
<db:member><db:link xlink:href="qtquick-statesanimations-animations.xml">Animation and Transitions in Qt Quick</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="duration-prop">
<db:title>duration : int</db:title>
<db:para>This property holds the duration of the animation, in milliseconds.</db:para>
<db:para>The default value is 250.</db:para>
</db:section>
<db:section xml:id="easing-prop">
<db:title>easing group</db:title>
<db:bridgehead renderas="sect2" xml:id="easing.amplitude-prop">easing.amplitude : real</db:bridgehead>
<db:bridgehead renderas="sect2" xml:id="easing.bezierCurve-prop">easing.bezierCurve : list&lt;real&gt;</db:bridgehead>
<db:bridgehead renderas="sect2" xml:id="easing.overshoot-prop">easing.overshoot : real</db:bridgehead>
<db:bridgehead renderas="sect2" xml:id="easing.period-prop">easing.period : real</db:bridgehead>
<db:bridgehead renderas="sect2" xml:id="easing.type-prop">easing.type : enumeration</db:bridgehead>
<db:para>Specifies the easing curve used for the animation</db:para>
<db:para>To specify an easing curve you need to specify at least the type. For some curves you can also specify amplitude, period and/or overshoot (more details provided after the table). The default easing curve is Easing.Linear.</db:para>
<db:programlisting language="qml">PropertyAnimation { properties: &quot;y&quot;;
                    easing.type: Easing.InOutElastic;
                    easing.amplitude: 2.0;
                    easing.period: 1.5 }
</db:programlisting>
<db:para>Available types are:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para>Easing.Linear</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a linear (t) function: velocity is constant.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-linear.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InQuad</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a quadratic (t^2) function: accelerating from zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inquad.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutQuad</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a quadratic (t^2) function: decelerating to zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outquad.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InOutQuad</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a quadratic (t^2) function: acceleration until halfway, then deceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inoutquad.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutInQuad</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a quadratic (t^2) function: deceleration until halfway, then acceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outinquad.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InCubic</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a cubic (t^3) function: accelerating from zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-incubic.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutCubic</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a cubic (t^3) function: decelerating to zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outcubic.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InOutCubic</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a cubic (t^3) function: acceleration until halfway, then deceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inoutcubic.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutInCubic</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a cubic (t^3) function: deceleration until halfway, then acceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outincubic.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InQuart</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a quartic (t^4) function: accelerating from zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inquart.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutQuart</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a quartic (t^4) function: decelerating to zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outquart.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InOutQuart</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a quartic (t^4) function: acceleration until halfway, then deceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inoutquart.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutInQuart</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a quartic (t^4) function: deceleration until halfway, then acceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outinquart.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InQuint</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a quintic (t^5) function: accelerating from zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inquint.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutQuint</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a quintic (t^5) function: decelerating to zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outquint.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InOutQuint</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a quintic (t^5) function: acceleration until halfway, then deceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inoutquint.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutInQuint</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a quintic (t^5) function: deceleration until halfway, then acceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outinquint.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InSine</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a sinusoidal (sin(t)) function: accelerating from zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-insine.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutSine</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a sinusoidal (sin(t)) function: decelerating to zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outsine.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InOutSine</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a sinusoidal (sin(t)) function: acceleration until halfway, then deceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inoutsine.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutInSine</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a sinusoidal (sin(t)) function: deceleration until halfway, then acceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outinsine.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InExpo</db:para>
</db:td>
<db:td>
<db:para>Easing curve for an exponential (2^t) function: accelerating from zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inexpo.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutExpo</db:para>
</db:td>
<db:td>
<db:para>Easing curve for an exponential (2^t) function: decelerating to zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outexpo.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InOutExpo</db:para>
</db:td>
<db:td>
<db:para>Easing curve for an exponential (2^t) function: acceleration until halfway, then deceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inoutexpo.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutInExpo</db:para>
</db:td>
<db:td>
<db:para>Easing curve for an exponential (2^t) function: deceleration until halfway, then acceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outinexpo.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InCirc</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a circular (sqrt(1-t^2)) function: accelerating from zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-incirc.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutCirc</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a circular (sqrt(1-t^2)) function: decelerating to zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outcirc.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InOutCirc</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a circular (sqrt(1-t^2)) function: acceleration until halfway, then deceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inoutcirc.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutInCirc</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a circular (sqrt(1-t^2)) function: deceleration until halfway, then acceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outincirc.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InElastic</db:para>
</db:td>
<db:td>
<db:para>Easing curve for an elastic (exponentially decaying sine wave) function: accelerating from zero velocity.  The peak amplitude can be set with the <db:emphasis>amplitude</db:emphasis> parameter, and the period of decay by the <db:emphasis>period</db:emphasis> parameter.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inelastic.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutElastic</db:para>
</db:td>
<db:td>
<db:para>Easing curve for an elastic (exponentially decaying sine wave) function: decelerating to zero velocity.  The peak amplitude can be set with the <db:emphasis>amplitude</db:emphasis> parameter, and the period of decay by the <db:emphasis>period</db:emphasis> parameter.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outelastic.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InOutElastic</db:para>
</db:td>
<db:td>
<db:para>Easing curve for an elastic (exponentially decaying sine wave) function: acceleration until halfway, then deceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inoutelastic.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutInElastic</db:para>
</db:td>
<db:td>
<db:para>Easing curve for an elastic (exponentially decaying sine wave) function: deceleration until halfway, then acceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outinelastic.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InBack</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a back (overshooting cubic function: (s+1)*t^3 - s*t^2) easing in: accelerating from zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inback.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutBack</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a back (overshooting cubic function: (s+1)*t^3 - s*t^2) easing out: decelerating to zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outback.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InOutBack</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a back (overshooting cubic function: (s+1)*t^3 - s*t^2) easing in/out: acceleration until halfway, then deceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inoutback.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutInBack</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing out/in: deceleration until halfway, then acceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outinback.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InBounce</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a bounce (exponentially decaying parabolic bounce) function: accelerating from zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inbounce.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutBounce</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a bounce (exponentially decaying parabolic bounce) function: decelerating to zero velocity.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outbounce.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.InOutBounce</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a bounce (exponentially decaying parabolic bounce) function easing in/out: acceleration until halfway, then deceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-inoutbounce.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.OutInBounce</db:para>
</db:td>
<db:td>
<db:para>Easing curve for a bounce (exponentially decaying parabolic bounce) function easing out/in: deceleration until halfway, then acceleration.</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/qeasingcurve-outinbounce.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Easing.Bezier</db:para>
</db:td>
<db:td>
<db:para>Custom easing curve defined by the easing.bezierCurve property.</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
</db:informaltable>
<db:para>easing.amplitude is only applicable for bounce and elastic curves (curves of type Easing.InBounce, Easing.OutBounce, Easing.InOutBounce, Easing.OutInBounce, Easing.InElastic, Easing.OutElastic, Easing.InOutElastic or Easing.OutInElastic).</db:para>
<db:para>easing.overshoot is only applicable if easing.type is: Easing.InBack, Easing.OutBack, Easing.InOutBack or Easing.OutInBack.</db:para>
<db:para>easing.period is only applicable if easing.type is: Easing.InElastic, Easing.OutElastic, Easing.InOutElastic or Easing.OutInElastic.</db:para>
<db:para>easing.bezierCurve is only applicable if easing.type is: Easing.Bezier. This property is a list&lt;real&gt; containing groups of three points defining a curve from 0,0 to 1,1 - control1, control2, end point: [cx1, cy1, cx2, cy2, endx, endy, ...]. The last point must be 1,1.</db:para>
<db:para>See the <db:link xlink:href="qtquick-animation-example.xml#easing-curves">Easing Curves</db:link> for a demonstration of the different easing settings.</db:para>
</db:section>
<db:section xml:id="exclude-prop">
<db:title>[read-only] exclude : list&lt;Object&gt;</db:title>
<db:para>This property holds the items not to be affected by this animation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-propertyanimation.xml#targets-prop">PropertyAnimation::targets</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="from-prop">
<db:title>from : variant</db:title>
<db:para>This property holds the starting value for the animation.</db:para>
<db:para>If the <db:link xlink:href="qml-qtquick-propertyanimation.xml">PropertyAnimation</db:link> is defined within a <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link> or <db:link xlink:href="qml-qtquick-behavior.xml">Behavior</db:link>, this value defaults to the value defined in the starting state of the <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link>, or the current value of the property at the moment the <db:link xlink:href="qml-qtquick-behavior.xml">Behavior</db:link> is triggered.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-statesanimations-animations.xml">Animation and Transitions in Qt Quick</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="to-prop">
<db:title>to : variant</db:title>
<db:para>This property holds the end value for the animation.</db:para>
<db:para>If the <db:link xlink:href="qml-qtquick-propertyanimation.xml">PropertyAnimation</db:link> is defined within a <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link> or <db:link xlink:href="qml-qtquick-behavior.xml">Behavior</db:link>, this value defaults to the value defined in the end state of the <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link>, or the value of the property change that triggered the <db:link xlink:href="qml-qtquick-behavior.xml">Behavior</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-statesanimations-animations.xml">Animation and Transitions in Qt Quick</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
