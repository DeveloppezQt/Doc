<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Button QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Push-button that can be clicked to perform a command or answer a question.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-roundbutton.xml" xlink:role="">RoundButton</db:link> and <db:link xlink:href="qml-qtquick-controls-toolbutton.xml" xlink:role="">ToolButton</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-abstractbutton.xml">AbstractButton</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Button is part of <db:simplelist><db:member>qtquickcontrols-buttons</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-button.gif"/>
</db:imageobject>
</db:mediaobject>
<db:para>Button presents a push-button control that can be pushed or clicked by the user. Buttons are normally used to perform an action, or to answer a question. Typical buttons are <db:emphasis>OK</db:emphasis>, <db:emphasis>Apply</db:emphasis>, <db:emphasis>Cancel</db:emphasis>, <db:emphasis>Close</db:emphasis>, <db:emphasis>Yes</db:emphasis>, <db:emphasis>No</db:emphasis>, and <db:emphasis>Help</db:emphasis>.</db:para>
<db:para>Button inherits its API from <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml">AbstractButton</db:link>. For instance, you can set <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml#text-prop">text</db:link>, display an <db:link xlink:href="qtquickcontrols-icons.xml">icon</db:link>, and react to <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml#clicked-signal">clicks</db:link> using the <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml">AbstractButton</db:link> API.</db:para>
<db:para>A button emits the signal <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml#clicked-signal">clicked</db:link>() when it is activated by the user. Connect to this signal to perform the button's action. Buttons also provide the signals <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml#canceled-signal">canceled</db:link>(), <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml#doubleClicked-signal">doubleClicked</db:link>(), <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml#pressed-signal">pressed</db:link>(), <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml#released-signal">released</db:link>() and <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml#pressAndHold-signal">pressAndHold</db:link>() for long presses.</db:para>
<db:para>See the snippet below on how to connect to the button's signals.</db:para>
<db:programlisting language="cpp">RowLayout {
    Button {
        text: &quot;Ok&quot;
        onClicked: model.submit()
    }
    Button {
        text: &quot;Cancel&quot;
        onClicked: model.revert()
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols-customize.xml#customizing-button">Customizing Button</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols-buttons.xml">Button Controls</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="flat-prop">
<db:title>flat : bool</db:title>
<db:para>This property holds whether the button is flat.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-button-flat.gif"/>
</db:imageobject>
</db:mediaobject>
<db:para>A flat button typically does not draw a background unless it is pressed or checked.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="highlighted-prop">
<db:title>highlighted : bool</db:title>
<db:para>This property holds whether the button is highlighted.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-button-highlighted.gif"/>
</db:imageobject>
</db:mediaobject>
<db:para>A button can be highlighted in order to draw the user's attention towards it. It has no effect on keyboard interaction.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
