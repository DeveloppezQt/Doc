<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Button QML Type</db:title>
<db:productname>QtQuickControls1</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 1 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A push button with a text label.</db:para>
<db:para>This type was introduced in Qt 5.1.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 1.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-extras-delaybutton.xml" xlink:role="">DelayButton</db:link>, <db:link xlink:href="qml-qtquick-extras-togglebutton.xml" xlink:role="">ToggleButton</db:link>, and <db:link xlink:href="qml-qtquick-controls-toolbutton.xml" xlink:role="">ToolButton</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>FocusScope</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Button is part of <db:simplelist><db:member><db:link xlink:href="controls.xml">Buttons and Controls</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/button.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The push button is perhaps the most commonly used widget in any graphical user interface. Pushing (or clicking) a button commands the computer to perform some action or answer a question. Common examples of buttons are OK, Apply, Cancel, Close, Yes, No, and Help buttons.</db:para>
<db:programlisting language="qml">Button {
    text: &quot;Button&quot;
}
</db:programlisting>
<db:para>Button is similar to the <db:link xlink:href="qpushbutton.xml">QPushButton</db:link> widget.</db:para>
<db:para>You can create a custom appearance for a Button by assigning a <db:link xlink:href="qml-qtquick-controls-styles-buttonstyle.xml">ButtonStyle</db:link>.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="action-prop">
<db:title>action : Action</db:title>
<db:fieldsynopsis>
<db:type>Action</db:type>
<db:varname>action</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the associated button action.</db:para>
<db:para>If a button has an action associated, the action defines the button's properties like checked, text, tooltip etc.</db:para>
<db:para>When an action is set, it's still possible to override the <db:link xlink:href="qml-qtquick-controls-button.xml#text-prop">text</db:link>, <db:link xlink:href="qml-qtquick-controls-button.xml#tooltip-prop">tooltip</db:link>, <db:link xlink:href="qml-qtquick-controls-button.xml#iconSource-prop">iconSource</db:link>, and <db:link xlink:href="qml-qtquick-controls-button.xml#iconName-prop">iconName</db:link> properties.</db:para>
<db:para>The default value is <db:code>null</db:code>.</db:para>
</db:section>
<db:section xml:id="activeFocusOnPress-prop">
<db:title>activeFocusOnPress : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>activeFocusOnPress</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property specifies whether the button should gain active focus when pressed.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="checkable-prop">
<db:title>checkable : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>checkable</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the button is checkable.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="checked-prop">
<db:title>checked : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>checked</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the button is checked.</db:para>
<db:para>Only checkable buttons can be checked.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="exclusiveGroup-prop">
<db:title>exclusiveGroup : ExclusiveGroup</db:title>
<db:fieldsynopsis>
<db:type>ExclusiveGroup</db:type>
<db:varname>exclusiveGroup</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the <db:link xlink:href="qml-qtquick-controls-exclusivegroup.xml">ExclusiveGroup</db:link> that the button belongs to.</db:para>
<db:para>The default value is <db:code>null</db:code>.</db:para>
</db:section>
<db:section xml:id="hovered-prop">
<db:title>[read-only] hovered : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>hovered</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property indicates whether the control is being hovered.</db:para>
</db:section>
<db:section xml:id="iconName-prop">
<db:title>iconName : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>iconName</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The image label source as theme name. When an icon from the platform icon theme is found, this takes precedence over <db:link xlink:href="qml-qtquick-controls-button.xml#iconSource-prop">iconSource</db:link>.</db:para>
<db:note>
<db:para>This property requires <db:link xlink:href="qapplication.xml">QApplication</db:link>.</db:para>
</db:note>
</db:section>
<db:section xml:id="iconSource-prop">
<db:title>iconSource : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>iconSource</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the icon shown on the button. If the button has no icon, the <db:link xlink:href="qml-qtquick-controls-button.xml#iconSource-prop">iconSource</db:link> property will be an empty string.</db:para>
<db:para>The default value is the empty string.</db:para>
</db:section>
<db:section xml:id="isDefault-prop">
<db:title>isDefault : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>isDefault</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the push button is the default button. Default buttons decide what happens when the user presses enter in a dialog without giving a button explicit focus.</db:para>
<db:note>
<db:para>This property only changes the appearance of the button. The expected behavior needs to be implemented by the user.</db:para>
</db:note>
<db:para>The default value is <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="menu-prop">
<db:title>menu : Menu</db:title>
<db:fieldsynopsis>
<db:type>Menu</db:type>
<db:varname>menu</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Assign a <db:link xlink:href="qml-qtquick-controls-menu.xml">Menu</db:link> to this property to get a pull-down menu button.</db:para>
<db:para>The default value is <db:code>null</db:code>.</db:para>
</db:section>
<db:section xml:id="pressed-prop">
<db:title>[read-only] pressed : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>pressed</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the button is being pressed.</db:para>
</db:section>
<db:section xml:id="style-prop">
<db:title>style : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>style</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The style Component for this control.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">Qt Quick Controls Styles QML Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="text-prop">
<db:title>text : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>text</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the text shown on the button. If the button has no text, the <db:link xlink:href="qml-qtquick-controls-button.xml#text-prop">text</db:link> property will be an empty string.</db:para>
<db:para>The default value is the empty string.</db:para>
</db:section>
<db:section xml:id="tooltip-prop">
<db:title>tooltip : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>tooltip</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the button tooltip.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="clicked-signal">
<db:title>clicked()</db:title>
<db:para>This signal is emitted when the button is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onClicked</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
