<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick 3D - Particles 3D Testbed Example</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates how to use the Qt Quick 3D Particles3D module.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">// Copyright (C) 2021 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR BSD-3-Clause

import QtQuick
import QtQuick3D
import QtQuick3D.Particles3D
import QtQuick.Controls

Window {
    id: rootWindow

    readonly property url startupView: &quot;StartupView.qml&quot;

    QtObject {
        id: settings
        // Antialiasing mode &amp;amp; quality used in all examples.
        property var antialiasingMode: SceneEnvironment.NoAA
        property var antialiasingQuality: SceneEnvironment.High
        // Toggle default visibility of these views
        property bool showSettingsView: true
        property bool showLoggingView: false
        // Fonts in pointSizes
        // These are used mostly on examples in 3D side
        property real fontSizeLarge: 16
        // These are used mostly on settings
        property real fontSizeSmall: 10
    }

    readonly property real iconSize: 16 + Math.max(width, height) * 0.05

    width: 1280
    height: 720
    visible: true
    title: qsTr(&quot;Qt Quick 3D Particles3D Testbed&quot;)
    color: &quot;#000000&quot;

    Loader {
        id: loader
        anchors.fill: parent
        source: startupView
    }

    Button {
        id: backButton
        anchors.left: parent.left
        anchors.top: parent.top
        width: rootWindow.iconSize
        height: width
        opacity: loader.source !== startupView
        visible: opacity
        icon.source: &quot;qrc:/qml/images/arrow_icon.png&quot;
        icon.width: backButton.width * 0.3
        icon.height: backButton.height * 0.3
        icon.color: &quot;transparent&quot;
        background: Rectangle {
            color: &quot;transparent&quot;
        }
        onClicked: {
            loader.source = startupView;
        }
        Behavior on opacity {
            NumberAnimation {
                duration: 400
                easing.type: Easing.InOutQuad
            }
        }
    }

}

</db:programlisting>
</db:article>
