<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>BoundingVolume QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>can be used to override an entity's bounding volume.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Core 2.3</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-geometryrenderer.xml" xlink:role="">GeometryRenderer</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qboundingvolume.xml">QBoundingVolume</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>An entity's bounding volume is used for many operations such as picking or view frustum culling. It is normally computed by traversing the rendered geometry.</db:para>
<db:para><db:link xlink:href="qml-qt3d-core-boundingvolume.xml">BoundingVolume</db:link> can be used when the extent of the geometry is known to the application so that Qt 3D does not have to compute it.</db:para>
<db:para>A bounding volume can be provided either as minimum and maximum extent coordinates, or a separate, usually simpler, geometry that approximates the rendered mesh.</db:para>
<db:para>When using minimum and maximum extents, these are considered to be the opposite corners of an axis aligned bounding box, in the geometry's local coordinate system.</db:para>
<db:para><db:link xlink:href="qml-qt3d-core-boundingvolume.xml">BoundingVolume</db:link> can also be used to query the computed bounding volume of a <db:link xlink:href="qml-qt3d-core-geometryview.xml">GeometryView</db:link>. The <db:link xlink:href="qml-qt3d-core-boundingvolume.xml#implicitMinPoint-prop">implicitMinPoint</db:link> and <db:link xlink:href="qml-qt3d-core-boundingvolume.xml#implicitMaxPoint-prop">implicitMaxPoint</db:link> properties will be updated if the geometry changes. Note that this is done asynchronously on a background thread so you should check the value of <db:link xlink:href="qml-qt3d-core-boundingvolume.xml#implicitPointsValid-prop">implicitPointsValid</db:link> before reading them.</db:para>
<db:para>You can force the implicit extents to be updated by calling <db:link xlink:href="qml-qt3d-core-boundingvolume.xml#updateImplicitBounds-method">updateImplicitBounds</db:link>. This will block on the calling thread until the results are available.</db:para>
<db:note>
<db:para><db:link xlink:href="qml-qt3d-render-geometryrenderer.xml">GeometryRenderer</db:link> inherits <db:link xlink:href="qml-qt3d-core-boundingvolume.xml">BoundingVolume</db:link> and thus supports reading implicit bounds or setting explicit bounds also.</db:para>
</db:note>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="implicitMaxPoint-prop">
<db:title>[read-only] implicitMaxPoint : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>implicitMaxPoint</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>* * * Holds maximum extent of the bounding volume computed from the specified view.</db:para>
</db:section>
<db:section xml:id="implicitMinPoint-prop">
<db:title>[read-only] implicitMinPoint : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>implicitMinPoint</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>* * * Holds minimum extent of the bounding volume computed from the specified view.</db:para>
</db:section>
<db:section xml:id="implicitPointsValid-prop">
<db:title>[read-only] implicitPointsValid : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>implicitPointsValid</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>* * * True if a view has been assigned and the implicit extent properties are up to date. * *</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt3d-core-boundingvolume.xml#updateImplicitBounds-method">updateImplicitBounds</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="maxPoint-prop">
<db:title>maxPoint : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>maxPoint</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>* * * User specified maximum extent of the bounding volume. When set (along with minimum * extent), this will be used internally to avoid computing the volume from the * geometry.</db:para>
</db:section>
<db:section xml:id="minPoint-prop">
<db:title>minPoint : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>minPoint</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>* * * User specified minimum extent of the bounding volume. When set (along with maximum * extent), this will be used internally to avoid computing the volume from the * geometry.</db:para>
</db:section>
<db:section xml:id="view-prop">
<db:title>view : GeometryView</db:title>
<db:fieldsynopsis>
<db:type>GeometryView</db:type>
<db:varname>view</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>* * * Holds a pointer to the instance of QGeometryView which will be used, if set, * to compute the bounding volume.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="updateImplicitBounds-method">
<db:title>bool updateImplicitBounds()</db:title>
<db:para>* * * Updates the implicit bounds of the specified view. Returns * <db:code>true</db:code> if the computation succeeded and false otherwise. * *</db:para>
<db:note>
<db:para>The calculations are done in the call thread, this * could take significant time for large meshes.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
