<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QOpenGLVersionProfile Class</db:title>
<db:productname>QtOpenGL</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>QtOpenGL Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qopenglversionprofile.xml">QOpenGLVersionProfile</db:link> class represents the version and if applicable the profile of an OpenGL context.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QOpenGLVersionProfile</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS OpenGL)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::OpenGL)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += opengl</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>An object of this class can be passed to QOpenGLContext::versionFunctions() to request a functions object for a specific version and profile of OpenGL.</db:para>
<db:para>It also contains some helper functions to check if a version supports profiles or is a legacy version.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QOpenGLVersionProfile">
<db:title>QOpenGLVersionProfile::QOpenGLVersionProfile()</db:title>
<db:para>Creates a default invalid <db:link xlink:href="qopenglversionprofile.xml">QOpenGLVersionProfile</db:link> object.</db:para>
</db:section>
<db:section xml:id="QOpenGLVersionProfile-2">
<db:title>[explicit] QOpenGLVersionProfile::QOpenGLVersionProfile(const QSurfaceFormat &amp;<db:emphasis>format</db:emphasis>)</db:title>
<db:para>Creates a <db:link xlink:href="qopenglversionprofile.xml">QOpenGLVersionProfile</db:link> object initialised with the version and profile from <db:code role="parameter">format</db:code>.</db:para>
</db:section>
<db:section xml:id="QOpenGLVersionProfile-1">
<db:title>QOpenGLVersionProfile::QOpenGLVersionProfile(const QOpenGLVersionProfile &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QOpenGLVersionProfile">
<db:title>[noexcept] QOpenGLVersionProfile::~QOpenGLVersionProfile()</db:title>
<db:para>Destroys the <db:link xlink:href="qopenglversionprofile.xml">QOpenGLVersionProfile</db:link> object.</db:para>
</db:section>
<db:section xml:id="hasProfiles">
<db:title>bool QOpenGLVersionProfile::hasProfiles() const</db:title>
<db:para>Returns <db:code>true</db:code> if profiles are supported by the OpenGL version returned by <db:link xlink:href="qopenglversionprofile.xml#version">version</db:link>(). Only OpenGL versions &gt;= 3.2 support profiles.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopenglversionprofile.xml#profile">profile</db:link>()</db:member>
<db:member><db:link xlink:href="qopenglversionprofile.xml#version">version</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isLegacyVersion">
<db:title>bool QOpenGLVersionProfile::isLegacyVersion() const</db:title>
<db:para>Returns <db:code>true</db:code> is the OpenGL version returned by <db:link xlink:href="qopenglversionprofile.xml#version">version</db:link>() contains deprecated functions and does not support profiles i.e. if the OpenGL version is &lt;= 3.1.</db:para>
</db:section>
<db:section xml:id="isValid">
<db:title>bool QOpenGLVersionProfile::isValid() const</db:title>
<db:para>Returns <db:code>true</db:code> if the version number is valid. Note that for a default constructed <db:link xlink:href="qopenglversionprofile.xml">QOpenGLVersionProfile</db:link> object this function will return <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopenglversionprofile.xml#setVersion">setVersion</db:link>()</db:member>
<db:member><db:link xlink:href="qopenglversionprofile.xml#version">version</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="profile">
<db:title>QSurfaceFormat::OpenGLContextProfile QOpenGLVersionProfile::profile() const</db:title>
<db:para>Returns the OpenGL profile. Only makes sense if profiles are supported by this version.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopenglversionprofile.xml#setProfile">setProfile</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setProfile">
<db:title>void QOpenGLVersionProfile::setProfile(QSurfaceFormat::OpenGLContextProfile <db:emphasis>profile</db:emphasis>)</db:title>
<db:para>Sets the OpenGL profile <db:code role="parameter">profile</db:code>. Only makes sense if profiles are supported by this version.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopenglversionprofile.xml#profile">profile</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setVersion">
<db:title>void QOpenGLVersionProfile::setVersion(int <db:emphasis>majorVersion</db:emphasis>, int <db:emphasis>minorVersion</db:emphasis>)</db:title>
<db:para>Sets the major and minor version numbers to <db:code role="parameter">majorVersion</db:code> and <db:code role="parameter">minorVersion</db:code> respectively.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopenglversionprofile.xml#version">version</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="version">
<db:title>QPair&lt;int, int&gt; QOpenGLVersionProfile::version() const</db:title>
<db:para>Returns a <db:link xlink:href="qpair-qtcore-proxy.xml#QPair-typedef">QPair</db:link>&lt;int,int&gt; where the components represent the major and minor OpenGL version numbers respectively.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopenglversionprofile.xml#setVersion">setVersion</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QOpenGLVersionProfile &amp;QOpenGLVersionProfile::operator=(const QOpenGLVersionProfile &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:para>Assigns the version and profile of <db:code role="parameter">rhs</db:code> to this <db:link xlink:href="qopenglversionprofile.xml">QOpenGLVersionProfile</db:link> object.</db:para>
</db:section>
</db:section>
</db:article>
