<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Layout QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides attached properties for items pushed onto a <db:link xlink:href="qml-qtquick-layouts-gridlayout.xml">GridLayout</db:link>, <db:link xlink:href="qml-qtquick-layouts-rowlayout.xml">RowLayout</db:link> or <db:link xlink:href="qml-qtquick-layouts-columnlayout.xml">ColumnLayout</db:link>.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Layouts</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Layout is part of <db:simplelist><db:member>layouts</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>An object of type Layout is attached to children of the layout to provide layout specific information about the item. The properties of the attached object influence how the layout will arrange the items.</db:para>
<db:para>For instance, you can specify <db:link xlink:href="qml-qtquick-layouts-layout.xml#minimumWidth-attached-prop">minimumWidth</db:link>, <db:link xlink:href="qml-qtquick-layouts-layout.xml#preferredWidth-attached-prop">preferredWidth</db:link>, and <db:link xlink:href="qml-qtquick-layouts-layout.xml#maximumWidth-attached-prop">maximumWidth</db:link> if the default values are not satisfactory.</db:para>
<db:para>When a layout is resized, items may grow or shrink. Due to this, items have a <db:link xlink:href="qml-qtquick-layouts-layout.xml#minimumWidth-attached-prop">minimum size</db:link>, <db:link xlink:href="qml-qtquick-layouts-layout.xml#preferredWidth-attached-prop">preferred size</db:link> and a <db:link xlink:href="qml-qtquick-layouts-layout.xml#maximumWidth-attached-prop">maximum size</db:link>.</db:para>
<db:para>If minimum size has not been explicitly specified on an item, the size is set to 0. If maximum size has not been explicitly specified on an item, the size is set to Number.POSITIVE_INFINITY.</db:para>
<db:para>For layouts, the implicit minimum and maximum sizes depend on the content of the layouts.</db:para>
<db:para>The <db:link xlink:href="qml-qtquick-layouts-layout.xml#fillWidth-attached-prop">fillWidth</db:link> and <db:link xlink:href="qml-qtquick-layouts-layout.xml#fillHeight-attached-prop">fillHeight</db:link> properties can either be true or false. If they are false, the item's size will be fixed to its preferred size. Otherwise, it will grow or shrink between its minimum and maximum size as the layout is resized. If there are multiple items with <db:link xlink:href="qml-qtquick-layouts-layout.xml#fillWidth-attached-prop">fillWidth</db:link> (or <db:link xlink:href="qml-qtquick-layouts-layout.xml#fillHeight-attached-prop">fillHeight</db:link>) set to true, the layout will grow or shrink the items relative to the ratio of their preferred size.</db:para>
<db:para>For more details on the layout algorithm, see also the <db:link xlink:href="qtquicklayouts-overview.xml">Qt Quick Layouts Overview</db:link>.</db:para>
<db:note>
<db:para>Do not bind to the x, y, width, or height properties of items in a layout, as this would conflict with the goals of Layout, and can also cause binding loops. The width and height properties are used by the layout engine to store the current size of items as calculated from the minimum/preferred/maximum attached properties, and can be ovewritten each time the items are laid out. Use <db:link xlink:href="qml-qtquick-layouts-layout.xml#preferredWidth-attached-prop">Layout.preferredWidth</db:link> and <db:link xlink:href="qml-qtquick-layouts-layout.xml#preferredHeight-attached-prop">Layout.preferredHeight</db:link>, or <db:link xlink:href="qml-qtquick-item.xml#implicitWidth-prop">implicitWidth</db:link> and <db:link xlink:href="qml-qtquick-item.xml#implicitHeight-prop">implicitHeight</db:link> to specify the preferred size of items.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-gridlayout.xml">GridLayout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-rowlayout.xml">RowLayout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-columnlayout.xml">ColumnLayout</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="attached-property-documentation">
<db:title>Attached Property Documentation</db:title>
<db:section xml:id="alignment-attached-prop">
<db:title>Layout.alignment : Qt.Alignment</db:title>
<db:fieldsynopsis>
<db:type>Qt.Alignment</db:type>
<db:varname>Layout.alignment</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property allows you to specify the alignment of an item within the cell(s) it occupies.</db:para>
<db:para>The default value is 0, which means it will be Qt.AlignVCenter | Qt.AlignLeft. These defaults also apply if only a horizontal or vertical flag is specified: if only a horizontal flag is specified, the default vertical flag will be Qt.AlignVCenter, and if only a vertical flag is specified, the default horizontal flag will be Qt.AlignLeft.</db:para>
<db:para>A valid alignment is a combination of the following flags:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignLeft</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignHCenter</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignRight</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignTop</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignVCenter</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignBottom</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignBaseline</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="bottomMargin-attached-prop">
<db:title>[since QtQuick.Layouts 1.2] Layout.bottomMargin : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>Layout.bottomMargin</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the bottom margin outside of an item. If the value is not set, it will use the value from <db:link xlink:href="qml-qtquick-layouts-layout.xml#margins-attached-prop">margins</db:link>.</db:para>
<db:para>This property was introduced in QtQuick.Layouts 1.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#margins-attached-prop">margins</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="column-attached-prop">
<db:title>Layout.column : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>Layout.column</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property allows you to specify the column position of an item in a <db:link xlink:href="qml-qtquick-layouts-gridlayout.xml">GridLayout</db:link>.</db:para>
<db:para>If both <db:link xlink:href="qml-qtquick-layouts-layout.xml#row-attached-prop">row</db:link> and this property are not set, it is up to the layout to assign a cell to the item.</db:para>
<db:para>The default value is 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#row-attached-prop">row</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#columnSpan-attached-prop">columnSpan</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="columnSpan-attached-prop">
<db:title>Layout.columnSpan : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>Layout.columnSpan</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property allows you to specify the column span of an item in a <db:link xlink:href="qml-qtquick-layouts-gridlayout.xml">GridLayout</db:link>.</db:para>
<db:para>The default value is 1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#rowSpan-attached-prop">rowSpan</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#column-attached-prop">column</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fillHeight-attached-prop">
<db:title>Layout.fillHeight : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>Layout.fillHeight</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>If this property is true, the item will be as tall as possible while respecting the given constraints. If the property is false, the item will have a fixed height set to the preferred height. The default is false, except for layouts themselves, which default to true.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#fillWidth-attached-prop">fillWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fillWidth-attached-prop">
<db:title>Layout.fillWidth : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>Layout.fillWidth</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>If this property is true, the item will be as wide as possible while respecting the given constraints. If the property is false, the item will have a fixed width set to the preferred width. The default is false, except for layouts themselves, which default to true.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#fillHeight-attached-prop">fillHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="horizontalStretchFactor-attached-prop">
<db:title>[since Qt 6.5] Layout.horizontalStretchFactor : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>Layout.horizontalStretchFactor</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property allows you to specify the horizontal stretch factor. By default, two identical items arranged in a linear layout will have the same size, but if the first item has a stretch factor of 1 and the second item has a stretch factor of 2, the first item will <db:emphasis>aim</db:emphasis> to get 1/3 of the available space, and the second will <db:emphasis>aim</db:emphasis> to get 2/3 of the available space. Note that, whether they become exactly 1/3 and 2/3 of the available space depends on their size hints. This is because when e.g a horizontal layout is shown in its minimum width all its child items will consequently also have their minimum width.</db:para>
<db:para>Likewise, when a horizontal layout has its preferred width, all child items will have their preferred widths, and when a horizontal layout has its maximum width, all child items will have their maximum widths. This strategy is applied regardless of what the individual stretch factors are. As a consequence of this, stretch factors will only determine the growth rate of child items <db:emphasis>between</db:emphasis> the <db:link xlink:href="qml-qtquick-layouts-layout.xml#preferredWidth-attached-prop">preferredWidth</db:link> and <db:link xlink:href="qml-qtquick-layouts-layout.xml#maximumWidth-attached-prop">maximumWidth</db:link> range.</db:para>
<db:para>The default value is -1, which means that no stretch factor is applied.</db:para>
<db:note>
<db:para>This requires that <db:link xlink:href="qml-qtquick-layouts-layout.xml#fillWidth-attached-prop">Layout::fillWidth</db:link> is set to true</db:para>
</db:note>
<db:para>This property was introduced in Qt 6.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#verticalStretchFactor-attached-prop">verticalStretchFactor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="leftMargin-attached-prop">
<db:title>[since QtQuick.Layouts 1.2] Layout.leftMargin : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>Layout.leftMargin</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the left margin outside of an item. If the value is not set, it will use the value from <db:link xlink:href="qml-qtquick-layouts-layout.xml#margins-attached-prop">margins</db:link>.</db:para>
<db:para>This property was introduced in QtQuick.Layouts 1.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#margins-attached-prop">margins</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="margins-attached-prop">
<db:title>[since QtQuick.Layouts 1.2] Layout.margins : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>Layout.margins</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the margins outside of an item to all have the same value. The item itself does not evaluate its own margins. It is the parent's responsibility to decide if it wants to evaluate the margins.</db:para>
<db:para>Specifically, margins are only evaluated by <db:link xlink:href="qml-qtquick-layouts-columnlayout.xml">ColumnLayout</db:link>, <db:link xlink:href="qml-qtquick-layouts-rowlayout.xml">RowLayout</db:link>, <db:link xlink:href="qml-qtquick-layouts-gridlayout.xml">GridLayout</db:link>, and other layout-like containers, such as <db:link xlink:href="qml-qtquick-controls-splitview.xml">SplitView</db:link>, where the effective cell size of an item will be increased as the margins are increased.</db:para>
<db:para>Therefore, if an item with margins is a child of another Item, its position, size and implicit size will remain unchanged.</db:para>
<db:para>Combining margins with alignment will align the item <db:emphasis>including</db:emphasis> its margins. For instance, a vertically-centered Item with a top margin of 1 and a bottom margin of 9 will cause the Items effective alignment within the cell to be 4 pixels above the center.</db:para>
<db:para>The default value is 0.</db:para>
<db:para>This property was introduced in QtQuick.Layouts 1.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#leftMargin-attached-prop">leftMargin</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#topMargin-attached-prop">topMargin</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#rightMargin-attached-prop">rightMargin</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#bottomMargin-attached-prop">bottomMargin</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="maximumHeight-attached-prop">
<db:title>Layout.maximumHeight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>Layout.maximumHeight</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The default value is the item's implicit maximum height.</db:para>
<db:para>If the item is a layout, the implicit maximum height will be the maximum height the layout can have without any of its items growing beyond their maximum height. The implicit maximum height for any other item is Number.POSITIVE_INFINITY.</db:para>
<db:para>Setting this value to -1 will reset the height back to its implicit maximum height.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#minimumHeight-attached-prop">minimumHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#preferredHeight-attached-prop">preferredHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="maximumWidth-attached-prop">
<db:title>Layout.maximumWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>Layout.maximumWidth</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the maximum width of an item in a layout. The default value is the item's implicit maximum width.</db:para>
<db:para>If the item is a layout, the implicit maximum width will be the maximum width the layout can have without any of its items growing beyond their maximum width. The implicit maximum width for any other item is Number.POSITIVE_INFINITY.</db:para>
<db:para>Setting this value to -1 will reset the width back to its implicit maximum width.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#minimumWidth-attached-prop">minimumWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#preferredWidth-attached-prop">preferredWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="minimumHeight-attached-prop">
<db:title>Layout.minimumHeight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>Layout.minimumHeight</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the minimum height of an item in a layout. The default value is the item's implicit minimum height.</db:para>
<db:para>If the item is a layout, the implicit minimum height will be the minimum height the layout can have without any of its items shrinking below their minimum height. The implicit minimum height for any other item is 0.</db:para>
<db:para>Setting this value to -1 will reset the height back to its implicit minimum height.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#preferredHeight-attached-prop">preferredHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#maximumHeight-attached-prop">maximumHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="minimumWidth-attached-prop">
<db:title>Layout.minimumWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>Layout.minimumWidth</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the minimum width of an item in a layout. The default value is the item's implicit minimum width.</db:para>
<db:para>If the item is a layout, the implicit minimum width will be the minimum width the layout can have without any of its items shrinking below their minimum width. The implicit minimum width for any other item is 0.</db:para>
<db:para>Setting this value to -1 will reset the width back to its implicit minimum width.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#preferredWidth-attached-prop">preferredWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#maximumWidth-attached-prop">maximumWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="preferredHeight-attached-prop">
<db:title>Layout.preferredHeight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>Layout.preferredHeight</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the preferred height of an item in a layout. If the preferred height is -1 it will be ignored, and the layout will use <db:link xlink:href="qml-qtquick-item.xml#implicitHeight-prop">implicitHeight</db:link> instead. The default is -1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#minimumHeight-attached-prop">minimumHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#maximumHeight-attached-prop">maximumHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="preferredWidth-attached-prop">
<db:title>Layout.preferredWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>Layout.preferredWidth</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the preferred width of an item in a layout. If the preferred width is -1 it will be ignored, and the layout will use <db:link xlink:href="qml-qtquick-item.xml#implicitWidth-prop">implicitWidth</db:link> instead. The default is -1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#minimumWidth-attached-prop">minimumWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#maximumWidth-attached-prop">maximumWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rightMargin-attached-prop">
<db:title>[since QtQuick.Layouts 1.2] Layout.rightMargin : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>Layout.rightMargin</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the right margin outside of an item. If the value is not set, it will use the value from <db:link xlink:href="qml-qtquick-layouts-layout.xml#margins-attached-prop">margins</db:link>.</db:para>
<db:para>This property was introduced in QtQuick.Layouts 1.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#margins-attached-prop">margins</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="row-attached-prop">
<db:title>Layout.row : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>Layout.row</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property allows you to specify the row position of an item in a <db:link xlink:href="qml-qtquick-layouts-gridlayout.xml">GridLayout</db:link>.</db:para>
<db:para>If both <db:link xlink:href="qml-qtquick-layouts-layout.xml#column-attached-prop">column</db:link> and this property are not set, it is up to the layout to assign a cell to the item.</db:para>
<db:para>The default value is 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#column-attached-prop">column</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#rowSpan-attached-prop">rowSpan</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rowSpan-attached-prop">
<db:title>Layout.rowSpan : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>Layout.rowSpan</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property allows you to specify the row span of an item in a <db:link xlink:href="qml-qtquick-layouts-gridlayout.xml">GridLayout</db:link>.</db:para>
<db:para>The default value is 1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#columnSpan-attached-prop">columnSpan</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#row-attached-prop">row</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="topMargin-attached-prop">
<db:title>[since QtQuick.Layouts 1.2] Layout.topMargin : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>Layout.topMargin</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the top margin outside of an item. If the value is not set, it will use the value from <db:link xlink:href="qml-qtquick-layouts-layout.xml#margins-attached-prop">margins</db:link>.</db:para>
<db:para>This property was introduced in QtQuick.Layouts 1.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#margins-attached-prop">margins</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="verticalStretchFactor-attached-prop">
<db:title>[since Qt 6.5] Layout.verticalStretchFactor : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>Layout.verticalStretchFactor</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property allows you to specify the vertical stretch factor. By default, two identical items arranged in a linear layout will have the same size, but if the first item has a stretch factor of 1 and the second item has a stretch factor of 2, the first item will <db:emphasis>aim</db:emphasis> to get 1/3 of the available space, and the second will <db:emphasis>aim</db:emphasis> to get 2/3 of the available space. Note that, whether they become exactly 1/3 and 2/3 of the available space depends on their size hints. This is because when e.g a vertical layout is shown in its minimum height all its child items will consequently also have their minimum height.</db:para>
<db:para>Likewise, when a vertical layout has its preferred height, all child items will have their preferred heights, and when a vertical layout has its maximum height, all child items will have their maximum heights. This strategy is applied regardless of what the individual stretch factors are. As a consequence of this, stretch factors will only determine the growth rate of child items <db:emphasis>between</db:emphasis> the <db:link xlink:href="qml-qtquick-layouts-layout.xml#preferredHeight-attached-prop">preferredHeight</db:link> and <db:link xlink:href="qml-qtquick-layouts-layout.xml#maximumHeight-attached-prop">maximumHeight</db:link> range.</db:para>
<db:para>The default value is -1, which means that no stretch factor is applied.</db:para>
<db:note>
<db:para>This requires that <db:link xlink:href="qml-qtquick-layouts-layout.xml#fillHeight-attached-prop">Layout::fillHeight</db:link> is set to true</db:para>
</db:note>
<db:para>This property was introduced in Qt 6.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-layouts-layout.xml#horizontalStretchFactor-attached-prop">horizontalStretchFactor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
