<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QCallbackMapping Class</db:title>
<db:subtitle>Qt3DAnimation::QCallbackMapping</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Allows to map the channels within the clip onto an invocation of a callback object.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QCallbackMapping</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3danimation)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3danimation)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3danimation</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3danimation-qabstractchannelmapping.xml" xlink:role="class">Qt3DAnimation::QAbstractChannelMapping</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="setCallback">
<db:title>void QCallbackMapping::setCallback(int <db:emphasis>type</db:emphasis>, Qt3DAnimation::QAnimationCallback *<db:emphasis>callback</db:emphasis>, QAnimationCallback::Flags <db:emphasis>flags</db:emphasis> = QAnimationCallback::OnOwningThread)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setCallback</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>Qt3DAnimation::QAnimationCallback *</db:type>
<db:parameter>callback</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QAnimationCallback::Flags</db:type>
<db:parameter>flags</db:parameter>
<db:initializer>QAnimationCallback::OnOwningThread</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setCallback(int type, Qt3DAnimation::QAnimationCallback *callback, QAnimationCallback::Flags flags)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Associates a <db:code role="parameter">callback</db:code> object with this channel mapping.</db:para>
<db:para>Such mappings do not have to have a target object and property name. When the <db:code role="parameter">callback</db:code> object is set, every change in the animated value will lead to invoking the callback's <db:link xlink:href="qt3danimation-qanimationcallback.xml#valueChanged">valueChanged</db:link> function either on the gui/main thread, or directly on one of the thread pool's worker thread. This is controlled by <db:code role="parameter">flags</db:code>.</db:para>
<db:para><db:code role="parameter">type</db:code> specifies the type (for example, <db:link xlink:href="qmetatype.xml#Type-enum">QMetaType::QVector3D</db:link>, <db:link xlink:href="qmetatype.xml#Type-enum">QMetaType::QColor</db:link>, or <db:link xlink:href="qmetatype.xml#Type-enum">QMetaType::Float</db:link>) of the animated value. When animating node properties this does not need to be provided separately, however it becomes important to supply this when there is only a callback.</db:para>
<db:note>
<db:para>A mapping can be associated both with a node property and a callback. It is important however that <db:code role="parameter">type</db:code> matches the type of the property in this case. Note also that for properties of type <db:link xlink:href="qvariant.xml">QVariant</db:link> (for example, QParameter::value), the <db:code role="parameter">type</db:code> is the type of the value stored in the <db:link xlink:href="qvariant.xml">QVariant</db:link>.</db:para>
</db:note>
<db:note>
<db:para>The <db:code role="parameter">callback</db:code> pointer is expected to stay valid while any associated animators are running.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
