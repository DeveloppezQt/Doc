<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Location HERE Plugin</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Uses the relevant services provided by HERE.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="overview">
<db:title>Overview</db:title>
<db:para>Included with Qt Location is a geo services plugin which accesses the relevant HERE services provided by HERE/Nokia. The use of these services is governed by the terms and conditions available at <db:link xlink:href="https://developer.here.com/terms-conditions">https://developer.here.com/terms-conditions</db:link>.</db:para>
<db:para>Note that accepting the terms and conditions only applies those terms and conditions to the use of the HERE geo services plugin and does not limit the use of the other geo services plugins that may be included with Qt.</db:para>
<db:para>The HERE geo services plugin can be loaded by using the plugin key &quot;here&quot;.</db:para>
<db:para>The online plugin uses the tiled map classes, which caches tile data in heap memory and texture memory.</db:para>
</db:section>
<db:section xml:id="parameters">
<db:title>Parameters</db:title>
<db:section xml:id="mandatory-parameters">
<db:title>Mandatory parameters</db:title>
<db:para>The following table lists mandatory parameters that <db:emphasis>must</db:emphasis> be passed to the HERE plugin.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Parameter</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>here.app_id</db:para>
</db:td>
<db:td>
<db:para>Client <db:emphasis>app_id</db:emphasis> part of the app_id/token pair used for authentication by all managers.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>here.token</db:para>
</db:td>
<db:td>
<db:para>Client <db:emphasis>token</db:emphasis> part of the app_id/token pair for the service used for authentication by all managers.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The HERE geo services plugin requires an application id and token pair to authenticate the application with the HERE services. To obtain an application id and token pair visit <db:link xlink:href="https://developer.here.com/">https://developer.here.com/</db:link></db:para>
</db:section>
<db:section xml:id="optional-parameters">
<db:title>Optional parameters</db:title>
<db:para>The following table lists optional parameters that can be passed to the HERE plugin.</db:para>
<db:note>
<db:para>Since Qt 5.5 all parameters below must be prefixed with <db:code>here</db:code>. Previous versions did not require a prefix.</db:para>
</db:note>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Parameter</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>here.proxy</db:para>
</db:td>
<db:td>
<db:para>Proxy server URL used by all managers. For usage of the system proxy just pass &quot;system&quot; as value.</db:para>
<db:note>
<db:para>See the notes in <db:link xlink:href="qnetworkproxyfactory.xml#systemProxyForQuery">QNetworkProxyFactory::systemProxyForQuery</db:link>() for further information.</db:para>
</db:note>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>here.mapping.host</db:para>
</db:td>
<db:td>
<db:para>Base map tile service URL used by mapping manager.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>here.mapping.host.aerial</db:para>
</db:td>
<db:td>
<db:para>Aerial map tile service URL used by mapping manager. For all satellite, hybrid and terrain schemes.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>here.mapping.cache.directory</db:para>
</db:td>
<db:td>
<db:para>Absolute path to map tile cache directory used as network disk cache.</db:para>
<db:para>The default place for the cache is <db:code>QtLocation/here</db:code> directory in <db:link xlink:href="qstandardpaths.xml#writableLocation">QStandardPaths::writableLocation</db:link>(<db:link xlink:href="qstandardpaths.xml#StandardLocation-enum">QStandardPaths::GenericCacheLocation</db:link>). On systems that have no concept of a shared cache, the application-specific <db:link xlink:href="qstandardpaths.xml#StandardLocation-enum">QStandardPaths::CacheLocation</db:link> is used instead.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>here.mapping.cache.disk.size</db:para>
</db:td>
<db:td>
<db:para>Map tile disk cache size in bytes. Default size of the cache is 20MB.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>here.mapping.cache.memory.size</db:para>
</db:td>
<db:td>
<db:para>Map tile memory cache size in bytes. Default size of the cache is 3MB.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>here.mapping.cache.texture.size</db:para>
</db:td>
<db:td>
<db:para>Map tile texture cache size in bytes. Default size of the cache is 6MB. Note that the texture cache has a hard minimum size which depends on the size of the map viewport (it must contain enough data to display the tiles currently visible on the display). This value is the amount of cache to be used in addition to the bare minimum.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>here.geocoding.host</db:para>
</db:td>
<db:td>
<db:para>Geocoding service URL used by geocoding manager.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>here.routing.host</db:para>
</db:td>
<db:td>
<db:para>Routing service URL used by routing manager.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>here.places.host</db:para>
</db:td>
<db:td>
<db:para>Search service URL used by search manager.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>here.places.api_version</db:para>
</db:td>
<db:td>
<db:para>Version of the REST API used by the places manager. Currently versions 1 and 2 are supported. The version 1 is deprecated and will not be part of the final Qt release. The default is version 2.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="parameter-usage-example">
<db:title>Parameter Usage Example</db:title>
<db:para>The following two examples show how to create a HERE plugin instance with parameters supplied for an application id and token, which is required for authentication.</db:para>
<db:section xml:id="qml">
<db:title>QML</db:title>
<db:programlisting language="cpp">Plugin {
    name: &quot;here&quot;
    PluginParameter { name: &quot;here.app_id&quot;; value: &quot;myapp&quot; }
    PluginParameter { name: &quot;here.token&quot;; value: &quot;abcdefg12345&quot; }
}
</db:programlisting>
</db:section>
<db:section xml:id="c">
<db:title>C++</db:title>
<db:programlisting language="cpp">QMap&lt;QString,QVariant&gt; params;
params[&quot;here.app_id&quot;] = &quot;myapp&quot;;
params[&quot;here.token&quot;] = &quot;abcdefg12345&quot;;

QGeoServiceProvider *gsp = new QGeoServiceProvider(&quot;here&quot;, params);
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="places">
<db:title>Places</db:title>
<db:para>The HERE provider remotely accesses places (read-only) from a REST based server. The specific capabilities and behaviours are outlined below:</db:para>
<db:section xml:id="capabilities">
<db:title>Capabilities</db:title>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para>Storage</db:para>
</db:td>
<db:td>
<db:para>remote</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Read/Write</db:para>
</db:td>
<db:td>
<db:para>read-only</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Icons</db:para>
</db:td>
<db:td>
<db:para>yes</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Search term suggestions</db:para>
</db:td>
<db:td>
<db:para>yes</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Recommendations</db:para>
</db:td>
<db:td>
<db:para>yes</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Category structure</db:para>
</db:td>
<db:td>
<db:para>Hierarchical</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>(Rich) Content images</db:para>
</db:td>
<db:td>
<db:para>yes</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>(Rich) Content reviews</db:para>
</db:td>
<db:td>
<db:para>yes</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>(Rich) Content editorials</db:para>
</db:td>
<db:td>
<db:para>yes</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>All details fetched during search</db:para>
</db:td>
<db:td>
<db:para>no</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Paging offset index</db:para>
</db:td>
<db:td>
<db:para>no</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Paging limit</db:para>
</db:td>
<db:td>
<db:para>yes</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Distance relevance hint</db:para>
</db:td>
<db:td>
<db:para>no</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Lexical name relevance hint</db:para>
</db:td>
<db:td>
<db:para>no</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Extended Attributes</db:para>
</db:td>
<db:td>
<db:para>yes</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Notifications for added/removed places/categories</db:para>
</db:td>
<db:td>
<db:para>no</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>visibility scopes</db:para>
</db:td>
<db:td>
<db:para>public</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>favorites matching/(usable as favoritesPlugin)</db:para>
</db:td>
<db:td>
<db:para>no</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="plugin-specific-behaviors-and-limitations">
<db:title>Plugin Specific Behaviors and Limitations.</db:title>
<db:section xml:id="search">
<db:title>Search</db:title>
<db:para>The following list shows what core place data is returned during a place search:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>name</db:para>
</db:listitem>
<db:listitem>
<db:para>location</db:para>
</db:listitem>
<db:listitem>
<db:para>contact information</db:para>
</db:listitem>
<db:listitem>
<db:para>attribution</db:para>
</db:listitem>
<db:listitem>
<db:para>categories</db:para>
</db:listitem>
<db:listitem>
<db:para>rating</db:para>
</db:listitem>
<db:listitem>
<db:para>visibility</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The following list shows further details that may be retrieved via QPlaceManager::getDetails()</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>supplier</db:para>
</db:listitem>
<db:listitem>
<db:para>extended attributes</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="searching-for-places">
<db:title>Searching for Places</db:title>
<db:section xml:id="search-term-and-categories">
<db:title>Search Term and Categories</db:title>
<db:para>The HERE plugin supports searching with a <db:emphasis>search term</db:emphasis> and <db:emphasis>category or categories</db:emphasis>, however both are not supported simultaneously.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Valid usage: <db:emphasis>search term</db:emphasis> + <db:emphasis>search center</db:emphasis></db:para>
</db:listitem>
<db:listitem>
<db:para>Valid usage: <db:emphasis>category</db:emphasis> + <db:emphasis>search center</db:emphasis></db:para>
</db:listitem>
<db:listitem>
<db:para>Invalid usage: <db:emphasis>search term</db:emphasis> + <db:emphasis>category</db:emphasis> + <db:emphasis>search center</db:emphasis></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>This limitation applies when using the HERE plugin with <db:link xlink:href="qml-qtlocation-placesearchmodel.xml">PlaceSearchModel</db:link> and <db:link xlink:href="qplacemanager.xml#search">QPlaceManager::search</db:link>().</db:para>
</db:section>
<db:section xml:id="search-area">
<db:title>Search Area</db:title>
<db:para>The HERE plugin only supports provision of a <db:emphasis>search center</db:emphasis> when searching for places via <db:link xlink:href="qml-qtlocation-placesearchmodel.xml">PlaceSearchModel</db:link> and <db:link xlink:href="qplacemanager.xml#search">QPlaceManager::search</db:link>(). A search center can be provided via a bounding circle, however the radius should be kept at the default value of -1. Typically a developer should not have to set the radius at all. If a developer sets a radius, it is ignored by the plugin and the boundaries are not honored.</db:para>
<db:para>In a similar manner only the center of a bounding box is taken into consideration when searching. The boundaries of the box are not honored.</db:para>
<db:para>A search center <db:emphasis>must</db:emphasis> be provided for all searches.</db:para>
</db:section>
<db:section xml:id="relevancy-hints">
<db:title>Relevancy Hints</db:title>
<db:para>The HERE plugin does not support relevancy hints. Any relevancy hints supplied to a search request are consequently ignored.</db:para>
</db:section>
</db:section>
<db:section xml:id="search-term-suggestions">
<db:title>Search Term suggestions</db:title>
<db:para>Only a partial <db:emphasis>search term</db:emphasis> and <db:emphasis>search center</db:emphasis> is supported when retrieving suggestions. This limitation applies when using the HERE plugin with the <db:link xlink:href="qml-qtlocation-placesearchsuggestionmodel.xml">PlaceSearchSuggestionModel</db:link> and <db:link xlink:href="qplacemanager.xml#searchSuggestions">QPlaceManager::searchSuggestions</db:link>().</db:para>
<db:para>Both search term and search center <db:emphasis>must</db:emphasis> be provided when retrieving search term suggestions.</db:para>
</db:section>
<db:section xml:id="recommendations">
<db:title>Recommendations</db:title>
<db:para>Only a given <db:emphasis>place identifier</db:emphasis> is supported as a parameter for a recommendations. No other parameters such as limit, offset, and search area are supported. This limitation applies when using the HERE plugin with <db:link xlink:href="qml-qtlocation-placesearchmodel.xml">PlaceSearchModel</db:link> and <db:link xlink:href="qplacemanager.xml#search">QPlaceManager::search</db:link>().</db:para>
</db:section>
<db:section xml:id="extended-attributes">
<db:title>Extended Attributes</db:title>
<db:para>The supported set of attributes provided by the HERE plugin are not fixed and may grow over time. Also the attributes provided may vary according to a place by place basis, e.g one place may provide opening hours while another does not. At the time of writing, it is known that some places provide <db:code>openingHours</db:code> (<db:link xlink:href="qplaceattribute.xml#OpeningHours-var">QPlaceAttribute::OpeningHours</db:link>) and <db:code>payment</db:code> (<db:link xlink:href="qplaceattribute.xml#Payment-var">QPlaceAttribute::Payment</db:link>) methods but other attributes may be made available by the backend server. All places provided by the plugin will have the <db:code>x_provider</db:code> (<db:link xlink:href="qplaceattribute.xml#Provider-var">QPlaceAttribute::Provider</db:link>) attribute set to <db:code>here</db:code>.</db:para>
</db:section>
<db:section xml:id="restrictions-of-usage-extendedattributes-and-content">
<db:title>Restrictions of Usage - ExtendedAttributes and Content</db:title>
<db:para>The extended attributes and rich content of places are not permitted to be saved. For QML this is related to <db:link xlink:href="qml-qtlocation-place.xml#extendedAttributes-prop">Place::extendedAttributes</db:link>, <db:link xlink:href="qml-qtlocation-imagemodel.xml">ImageModel</db:link>, <db:link xlink:href="qml-qtlocation-reviewmodel.xml">ReviewModel</db:link>, and <db:link xlink:href="qml-qtlocation-editorialmodel.xml">EditorialModel</db:link>. For C++ this relates to <db:link xlink:href="qplace.xml#extendedAttribute">QPlace::extendedAttribute</db:link>(), <db:link xlink:href="qplace.xml#content">QPlace::content</db:link>() and <db:link xlink:href="qplacemanager.xml#getPlaceContent">QPlaceManager::getPlaceContent</db:link>().</db:para>
<db:para>(Note that the HERE plugin is a read-only source of places and does not support saving functionality at all.)</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
