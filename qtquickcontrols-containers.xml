<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Container Controls</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Guidelines for container controls.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt Quick Controls offers a selection of container-like controls.</db:para>
<db:variablelist role="qtquickcontrols-containers">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-applicationwindow.xml" xlink:role="">ApplicationWindow</db:link></db:term>
<db:listitem>
<db:para>Styled top-level window with support for a header and footer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-container.xml" xlink:role="">Container</db:link></db:term>
<db:listitem>
<db:para>Abstract base type providing functionality common to containers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-frame.xml" xlink:role="">Frame</db:link></db:term>
<db:listitem>
<db:para>Visual frame for a logical group of controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-groupbox.xml" xlink:role="">GroupBox</db:link></db:term>
<db:listitem>
<db:para>Visual frame and title for a logical group of controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-horizontalheaderview.xml" xlink:role="">HorizontalHeaderView</db:link></db:term>
<db:listitem>
<db:para>Provides a horizontal header view to accompany a TableView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-page.xml" xlink:role="">Page</db:link></db:term>
<db:listitem>
<db:para>Styled page control with support for a header and footer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-pane.xml" xlink:role="">Pane</db:link></db:term>
<db:listitem>
<db:para>Provides a background matching with the application style and theme.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-scrollview.xml" xlink:role="">ScrollView</db:link></db:term>
<db:listitem>
<db:para>Scrollable view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-splitview.xml" xlink:role="">SplitView</db:link></db:term>
<db:listitem>
<db:para>Lays out items with a draggable splitter between each item.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-stackview.xml" xlink:role="">StackView</db:link></db:term>
<db:listitem>
<db:para>Provides a stack-based navigation model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-swipeview.xml" xlink:role="">SwipeView</db:link></db:term>
<db:listitem>
<db:para>Enables the user to navigate pages by swiping sideways.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-tabbar.xml" xlink:role="">TabBar</db:link></db:term>
<db:listitem>
<db:para>Allows the user to switch between different views or subtasks.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-toolbar.xml" xlink:role="">ToolBar</db:link></db:term>
<db:listitem>
<db:para>Container for context-sensitive controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick-controls-verticalheaderview.xml" xlink:role="">VerticalHeaderView</db:link></db:term>
<db:listitem>
<db:para>Offers a vertical header view to accompany a TableView.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para>Each type of container can be used to group a set of controls together. The following sections offer guidelines for choosing the appropriate type of container, depending on the use case.</db:para>
<db:section xml:id="applicationwindow-control">
<db:title>ApplicationWindow Control</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-applicationwindow-wireframe.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:link xlink:href="qml-qtquick-controls-applicationwindow.xml">ApplicationWindow</db:link> creates the root window of an application, and makes it easy to add an optional header and footer to that window.</db:para>
</db:section>
<db:section xml:id="frame-control">
<db:title>Frame Control</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-frame.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:link xlink:href="qml-qtquick-controls-frame.xml">Frame</db:link> is used to layout a logical group of controls together, within a visual frame.</db:para>
</db:section>
<db:section xml:id="groupbox-control">
<db:title>GroupBox Control</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-groupbox.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:link xlink:href="qml-qtquick-controls-groupbox.xml">GroupBox</db:link> is used to layout a logical group of controls together, within a titled visual frame.</db:para>
</db:section>
<db:section xml:id="page-control">
<db:title>Page Control</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-page-wireframe.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:link xlink:href="qml-qtquick-controls-page.xml">Page</db:link> provides page-specific header and footer items. It is perfectly possible to use <db:link xlink:href="qml-qtquick-controls-applicationwindow.xml">ApplicationWindow</db:link> for setting the header and the footer, but if you have a header and footer which varies per screen, then it is better to use <db:link xlink:href="qml-qtquick-controls-page.xml">Page</db:link>.</db:para>
</db:section>
<db:section xml:id="pane-control">
<db:title>Pane Control</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-pane.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:link xlink:href="qml-qtquick-controls-pane.xml">Pane</db:link> provides a background color that matches with the application style and theme. Pane does not provide a layout of its own, but requires you to position its contents, for instance by using a <db:link xlink:href="qml-qtquick-layouts-rowlayout.xml">RowLayout</db:link> or a <db:link xlink:href="qml-qtquick-layouts-columnlayout.xml">ColumnLayout</db:link>.</db:para>
</db:section>
<db:section xml:id="scrollview-control">
<db:title>ScrollView Control</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-scrollview-wireframe.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:link xlink:href="qml-qtquick-controls-scrollview.xml">ScrollView</db:link> provides scrolling for user-defined content.</db:para>
</db:section>
<db:section xml:id="stackview-control">
<db:title>StackView Control</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-stackview-wireframe.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:link xlink:href="qml-qtquick-controls-stackview.xml">StackView</db:link> organizes content pages into a stack using a last-in-first-out principle: the last item to be &quot;pushed&quot; onto the stack is the first one to be removed, and the top-most item is always the one that is visible.</db:para>
</db:section>
<db:section xml:id="swipeview-control">
<db:title>SwipeView Control</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-swipeview-wireframe.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:link xlink:href="qml-qtquick-controls-swipeview.xml">SwipeView</db:link> organizes content pages into a swipable strip.</db:para>
</db:section>
<db:section xml:id="tabbar-control">
<db:title>TabBar Control</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-tabbar-wireframe.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:link xlink:href="qml-qtquick-controls-tabbar.xml">TabBar</db:link> organizes content pages into tabs.</db:para>
</db:section>
<db:section xml:id="toolbar-control">
<db:title>ToolBar Control</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-toolbar.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:link xlink:href="qml-qtquick-controls-toolbar.xml">ToolBar</db:link> is a container of application-wide and context-sensitive actions and controls.</db:para>
</db:section>
</db:article>
