<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>TabWidget Example</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.14.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The TabWidget example shows how to create a tabwidget using property aliases and QML Object default properties.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>This example shows how to create a tab widget. It also demonstrates how <db:link xlink:href="qtqml-syntax-objectattributes.xml#property-aliases">property aliases</db:link> and <db:link xlink:href="qtqml-syntax-objectattributes.xml#default-properties">default properties</db:link> can be used to collect and assemble the child items declared within an <db:link xlink:href="qml-qtquick-item.xml">Item</db:link>.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qml-tabwidget-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtdeclarative.git/tree/examples/quick/customitems/tabwidget?h=5.14">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
