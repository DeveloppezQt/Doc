<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qml Charts Example</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This basic demonstration shows how to use the different chart types by using qml.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Qt Charts module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:GPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3 or (at your option) any later version
** approved by the KDE Free Qt Foundation. The licenses are as published by
** the Free Software Foundation and appearing in the file LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.0
import QtCharts 2.0

Item {
    anchors.fill: parent

    ChartView {
        id: chart
        title: &quot;Production costs&quot;
        anchors.fill: parent
        legend.visible: false
        antialiasing: true

        PieSeries {
            id: pieOuter
            size: 0.96
            holeSize: 0.7
            PieSlice { id: slice; label: &quot;Alpha&quot;; value: 19511; color: &quot;#99CA53&quot; }
            PieSlice { label: &quot;Epsilon&quot;; value: 11105; color: &quot;#209FDF&quot; }
            PieSlice { label: &quot;Psi&quot;; value: 9352; color: &quot;#F6A625&quot; }
        }

        PieSeries {
            size: 0.7
            id: pieInner
            holeSize: 0.25

            PieSlice { label: &quot;Materials&quot;; value: 10334; color: &quot;#B9DB8A&quot; }
            PieSlice { label: &quot;Employee&quot;; value: 3066; color: &quot;#DCEDC4&quot; }
            PieSlice { label: &quot;Logistics&quot;; value: 6111; color: &quot;#F3F9EB&quot; }

            PieSlice { label: &quot;Materials&quot;; value: 7371; color: &quot;#63BCE9&quot; }
            PieSlice { label: &quot;Employee&quot;; value: 2443; color: &quot;#A6D9F2&quot; }
            PieSlice { label: &quot;Logistics&quot;; value: 1291; color: &quot;#E9F5FC&quot; }

            PieSlice { label: &quot;Materials&quot;; value: 4022; color: &quot;#F9C36C&quot; }
            PieSlice { label: &quot;Employee&quot;; value: 3998; color: &quot;#FCE1B6&quot; }
            PieSlice { label: &quot;Logistics&quot;; value: 1332; color: &quot;#FEF5E7&quot; }
        }
    }

    Component.onCompleted: {
        // Set the common slice properties dynamically for convenience
        for (var i = 0; i &amp;lt; pieOuter.count; i++) {
            pieOuter.at(i).labelPosition = PieSlice.LabelOutside;
            pieOuter.at(i).labelVisible = true;
            pieOuter.at(i).borderWidth = 3;
        }
        for (var i = 0; i &amp;lt; pieInner.count; i++) {
            pieInner.at(i).labelPosition = PieSlice.LabelInsideNormal;
            pieInner.at(i).labelVisible = true;
            pieInner.at(i).borderWidth = 2;
        }
    }
}

</db:programlisting>
</db:article>
