<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Map QML Type</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Map type displays a map.</db:para>
<db:para>This type was introduced in Qt Location 5.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtLocation 5.3</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt Location 5.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Map is part of <db:simplelist><db:member><db:link xlink:href="qml-qtlocation5-maps.xml">QML Maps Plugin</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The Map type is used to display a map or image of the Earth, with the capability to also display interactive objects tied to the map's surface.</db:para>
<db:para>There are a variety of different ways to visualize the Earth's surface in a 2-dimensional manner, but all of them involve some kind of projection: a mathematical relationship between the 3D coordinates (latitude, longitude and altitude) and 2D coordinates (X and Y in pixels) on the screen.</db:para>
<db:para>Different sources of map data can use different projections, and from the point of view of the Map type, we treat these as one replaceable unit: the Map plugin. A Map plugin consists of a data source, as well as all other details needed to display its data on-screen.</db:para>
<db:para>The current Map plugin in use is contained in the <db:link xlink:href="qml-qtlocation-map.xml#plugin-prop">plugin</db:link> property of the Map item. In order to display any image in a Map item, you will need to set this property. See the <db:link xlink:href="qml-qtlocation-plugin.xml">Plugin</db:link> type for a description of how to retrieve an appropriate plugin for use.</db:para>
<db:para>The geographic region displayed in the Map item is referred to as its viewport, and this is defined by the properties <db:link xlink:href="qml-qtlocation-map.xml#center-prop">center</db:link>, and <db:link xlink:href="qml-qtlocation-map.xml#zoomLevel-prop">zoomLevel</db:link>. The <db:link xlink:href="qml-qtlocation-map.xml#center-prop">center</db:link> property contains a <db:link xlink:href="qml-coordinate.xml">coordinate</db:link> specifying the center of the viewport, while <db:link xlink:href="qml-qtlocation-map.xml#zoomLevel-prop">zoomLevel</db:link> controls the scale of the map. See each of these properties for further details about their values.</db:para>
<db:para>When the map is displayed, each possible geographic coordinate that is visible will map to some pixel X and Y coordinate on the screen. To perform conversions between these two, Map provides the <db:link xlink:href="qml-qtlocation-map.xml#toCoordinate-method">toCoordinate</db:link> and <db:link xlink:href="qml-qtlocation-map.xml#fromCoordinate-method">fromCoordinate</db:link> functions, which are of general utility.</db:para>
<db:section xml:id="map-objects">
<db:title>Map Objects</db:title>
<db:para>Map related objects can be declared within the body of a Map object in Qt Quick and will automatically appear on the Map. To add objects programmatically, first be sure they are created with the Map as their parent (for example in an argument to <db:link xlink:href="qml-qtqml-component.xml#createObject-method">Component::createObject</db:link>), and then call the <db:link xlink:href="qml-qtlocation-map.xml#addMapItem-method">addMapItem</db:link> method on the Map. A corresponding <db:link xlink:href="qml-qtlocation-map.xml#removeMapItem-method">removeMapItem</db:link> method also exists to do the opposite and remove an object from the Map.</db:para>
<db:para>Moving Map objects around, resizing them or changing their shape normally does not involve any special interaction with Map itself â€“ changing these details about a map object will automatically update the display.</db:para>
</db:section>
<db:section xml:id="interaction">
<db:title>Interaction</db:title>
<db:para>The Map type includes support for pinch and flick gestures to control zooming and panning. These are enabled by default, and available at any time by using the <db:link xlink:href="qml-qtlocation-map.xml#gesture-prop">gesture</db:link> object. The actual GestureArea is constructed specially at startup and cannot be replaced or destroyed. Its properties can be altered, however, to control its behavior.</db:para>
</db:section>
<db:section xml:id="performance">
<db:title>Performance</db:title>
<db:para>Maps are rendered using OpenGL (ES) and the Qt Scene Graph stack, and as a result perform quite well where GL accelerated hardware is available.</db:para>
<db:para>For &quot;online&quot; Map plugins, network bandwidth and latency can be major contributors to the user's perception of performance. Extensive caching is performed to mitigate this, but such mitigation is not always perfect. For &quot;offline&quot; plugins, the time spent retrieving the stored geographic data and rendering the basic map features can often play a dominant role. Some offline plugins may use hardware acceleration themselves to (partially) avert this.</db:para>
<db:para>In general, large and complex Map items such as polygons and polylines with large numbers of vertices can have an adverse effect on UI performance. Further, more detailed notes on this are in the documentation for each map item type.</db:para>
</db:section>
<db:section xml:id="example-usage">
<db:title>Example Usage</db:title>
<db:para>The following snippet shows a simple Map and the necessary Plugin type to use it. The map is centered over Oslo, Norway, with zoom level 10.</db:para>
<db:programlisting language="cpp">import QtQuick 2.0
import QtQuick.Window 2.0
import QtLocation 5.6
import QtPositioning 5.6

Window {
    width: 512
    height: 512
    visible: true

    Plugin {
        id: osmPlugin
        name: &quot;osm&quot;
        // specify plugin parameters if necessary
        // PluginParameter {
        //     name:
        //     value:
        // }
    }

    Map {
        anchors.fill: parent
        plugin: osmPlugin
        center: QtPositioning.coordinate(59.91, 10.75) // Oslo
        zoomLevel: 10
    }
}

</db:programlisting>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/minimal_map.png"/>
</db:imageobject>
</db:mediaobject>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="activeMapType-prop">
<db:title>activeMapType : MapType</db:title>
<db:para>Access to the currently active <db:link xlink:href="qml-qtlocation-maptype.xml">map type</db:link>.</db:para>
<db:para>This property can be set to change the active <db:link xlink:href="qml-qtlocation-maptype.xml">map type</db:link>. See the <db:link xlink:href="qml-qtlocation-map.xml#supportedMapTypes-prop">supportedMapTypes</db:link> property for possible values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtlocation-maptype.xml">MapType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="center-prop">
<db:title>center : coordinate</db:title>
<db:para>This property holds the coordinate which occupies the center of the mapping viewport. Invalid center coordinates are ignored.</db:para>
<db:para>The default value is an arbitrary valid coordinate.</db:para>
</db:section>
<db:section xml:id="color-prop">
<db:title>[since 5.6] color : color</db:title>
<db:para>This property holds the background color of the map element.</db:para>
<db:para>This property was introduced in Qt 5.6.</db:para>
</db:section>
<db:section xml:id="copyrightsVisible-prop">
<db:title>[since 5.7] copyrightsVisible : bool</db:title>
<db:para>This property holds the visibility of the copyrights notice. The notice is usually displayed in the bottom left corner. By default, this property is set to <db:code>true</db:code>.</db:para>
<db:note>
<db:para>Many map providers require the notice to be visible as part of the terms and conditions. Please consult the relevant provider documentation before turning this notice off.</db:para>
</db:note>
<db:para>This property was introduced in Qt 5.7.</db:para>
</db:section>
<db:section xml:id="error-prop">
<db:title>[read-only] error : enumeration</db:title>
<db:para>This read-only property holds the last occurred mapping service provider error.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Map.NoError - No error has occurred.</db:para>
</db:listitem>
<db:listitem>
<db:para>Map.NotSupportedError -The maps plugin property was not set or there is no mapping manager associated with the plugin.</db:para>
</db:listitem>
<db:listitem>
<db:para>Map.UnknownParameterError -The plugin did not recognize one of the parameters it was given.</db:para>
</db:listitem>
<db:listitem>
<db:para>Map.MissingRequiredParameterError - The plugin did not find one of the parameters it was expecting.</db:para>
</db:listitem>
<db:listitem>
<db:para>Map.ConnectionError - The plugin could not connect to its backend service or database.</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoserviceprovider.xml#Error-enum">QGeoServiceProvider::Error</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="errorString-prop">
<db:title>[read-only] errorString : string</db:title>
<db:para>This read-only property holds the textual presentation of the latest mapping provider error. If no error has occurred, an empty string is returned.</db:para>
<db:para>An empty string may also be returned if an error occurred which has no associated textual representation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoserviceprovider.xml#errorString">QGeoServiceProvider::errorString</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="gesture-prop">
<db:title>[read-only] gesture : MapGestureArea</db:title>
<db:para>Contains the <db:link xlink:href="qml-qtlocation-mapgesturearea.xml">MapGestureArea</db:link> created with the Map. This covers pan, flick and pinch gestures. Use <db:code>gesture.enabled: true</db:code> to enable basic gestures, or see <db:link xlink:href="qml-qtlocation-mapgesturearea.xml">MapGestureArea</db:link> for further details.</db:para>
</db:section>
<db:section xml:id="mapItems-prop">
<db:title>[read-only] mapItems : list&lt;MapItem&gt;</db:title>
<db:para>Returns the list of all map items in no particular order. These items include items that were declared statically as part of the type declaration, as well as dynamical items (<db:link xlink:href="qml-qtlocation-map.xml#addMapItem-method">addMapItem</db:link>, <db:link xlink:href="qml-qtlocation-mapitemview.xml">MapItemView</db:link>).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtlocation-map.xml#addMapItem-method">addMapItem</db:link></db:member>
<db:member><db:link xlink:href="qml-qtlocation-map.xml#removeMapItem-method">removeMapItem</db:link></db:member>
<db:member><db:link xlink:href="qml-qtlocation-map.xml#clearMapItems-method">clearMapItems</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="maximumZoomLevel-prop">
<db:title>maximumZoomLevel : real</db:title>
<db:para>This property holds the maximum valid zoom level for the map.</db:para>
<db:para>The maximum zoom level is defined by the <db:link xlink:href="qml-qtlocation-map.xml#plugin-prop">plugin</db:link> used. If a plugin supporting mapping is not set, -1.0 is returned.</db:para>
</db:section>
<db:section xml:id="minimumZoomLevel-prop">
<db:title>minimumZoomLevel : real</db:title>
<db:para>This property holds the minimum valid zoom level for the map.</db:para>
<db:para>The minimum zoom level defined by the <db:link xlink:href="qml-qtlocation-map.xml#plugin-prop">plugin</db:link> used is a lower bound for this property. However, the returned value is also canvas-size-dependent, and can be higher than the user-specified value, or than the minimum zoom level defined by the plugin used, to prevent the map from being smaller than the viewport in either dimension.</db:para>
<db:para>If a plugin supporting mapping is not set, -1.0 is returned.</db:para>
</db:section>
<db:section xml:id="plugin-prop">
<db:title>plugin : Plugin</db:title>
<db:para>This property holds the plugin which provides the mapping functionality.</db:para>
<db:para>This is a write-once property. Once the map has a plugin associated with it, any attempted modifications of the plugin will be ignored.</db:para>
</db:section>
<db:section xml:id="supportedMapTypes-prop">
<db:title>[read-only] supportedMapTypes : list&lt;MapType&gt;</db:title>
<db:para>This read-only property holds the set of <db:link xlink:href="qml-qtlocation-maptype.xml">map types</db:link> supported by this map.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtlocation-map.xml#activeMapType-prop">activeMapType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="visibleRegion-prop">
<db:title>[since 5.6] visibleRegion : geoshape</db:title>
<db:para>This property holds the region which occupies the viewport of the map. The camera is positioned in the center of the shape, and at the largest integral zoom level possible which allows the whole shape to be visible on the screen. This implies that reading this property back shortly after having been set the returned area is equal or larger than the set area.</db:para>
<db:para>Setting this property implicitly changes the <db:link xlink:href="qml-qtlocation-map.xml#center-prop">center</db:link> and <db:link xlink:href="qml-qtlocation-map.xml#zoomLevel-prop">zoomLevel</db:link> of the map. Any previously set value to those properties will be overridden.</db:para>
<db:para>This property does not provide any change notifications.</db:para>
<db:para>This property was introduced in Qt 5.6.</db:para>
</db:section>
<db:section xml:id="zoomLevel-prop">
<db:title>zoomLevel : real</db:title>
<db:para>This property holds the zoom level for the map.</db:para>
<db:para>Larger values for the zoom level provide more detail. Zoom levels are always non-negative. The default value is 8.0.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="copyrightLinkActivated-signal">
<db:title>copyrightLinkActivated(string <db:emphasis>link</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user clicks on a <db:code role="parameter">link</db:code> in the copyright notice. The application should open the link in a browser or display its contents to the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onCopyrightLinkActivated</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="addMapItem-method">
<db:title>void addMapItem(MapItem <db:emphasis>item</db:emphasis>)</db:title>
<db:para>Adds the given <db:code role="parameter">item</db:code> to the Map (for example <db:link xlink:href="qml-qtlocation-mapquickitem.xml">MapQuickItem</db:link>, <db:link xlink:href="qml-qtlocation-mapcircle.xml">MapCircle</db:link>). If the object already is on the Map, it will not be added again.</db:para>
<db:para>As an example, consider the case where you have a <db:link xlink:href="qml-qtlocation-mapcircle.xml">MapCircle</db:link> representing your current position:</db:para>
<db:programlisting language="qml">import QtQuick 2.0
import QtPositioning 5.5
import QtLocation 5.6

PositionSource {
    id: positionSource
}

Map {
    id: map
    property MapCircle circle

    Component.onCompleted: {
        circle = Qt.createQmlObject('import QtLocation 5.3; MapCircle {}', page)
        circle.center = positionSource.position.coordinate
        circle.radius = 5000.0
        circle.color = 'green'
        circle.border.width = 3
        map.addMapItem(circle)
    }
}
</db:programlisting>
<db:note>
<db:para>MapItemViews cannot be added with this method.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtlocation-map.xml#mapItems-prop">mapItems</db:link></db:member>
<db:member><db:link xlink:href="qml-qtlocation-map.xml#removeMapItem-method">removeMapItem</db:link></db:member>
<db:member><db:link xlink:href="qml-qtlocation-map.xml#clearMapItems-method">clearMapItems</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clearData-method">
<db:title>void clearData()</db:title>
<db:para>Clears map data collected by the currently selected plugin.</db:para>
<db:note>
<db:para>This method will delete cached files.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtlocation-map.xml#plugin-prop">plugin</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clearMapItems-method">
<db:title>void clearMapItems()</db:title>
<db:para>Removes all items from the map.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtlocation-map.xml#mapItems-prop">mapItems</db:link></db:member>
<db:member><db:link xlink:href="qml-qtlocation-map.xml#addMapItem-method">addMapItem</db:link></db:member>
<db:member><db:link xlink:href="qml-qtlocation-map.xml#removeMapItem-method">removeMapItem</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fitViewportToMapItems-method">
<db:title>void fitViewportToMapItems()</db:title>
<db:para>Fits the current viewport to the boundary of all map items. The camera is positioned in the center of the map items, and at the largest integral zoom level possible which allows all map items to be visible on screen</db:para>
</db:section>
<db:section xml:id="fromCoordinate-method">
<db:title>point fromCoordinate(coordinate <db:emphasis>coordinate</db:emphasis>, bool <db:emphasis>clipToViewPort</db:emphasis>)</db:title>
<db:para>Returns the position relative to the map item which corresponds to the <db:code role="parameter">coordinate</db:code>.</db:para>
<db:para>If <db:code role="parameter">cliptoViewPort</db:code> is <db:code>true</db:code>, or not supplied then returns an invalid <db:link xlink:href="qpointf.xml">QPointF</db:link> if <db:code role="parameter">coordinate</db:code> is not within the current viewport.</db:para>
</db:section>
<db:section xml:id="pan-method">
<db:title>void pan(int <db:emphasis>dx</db:emphasis>, int <db:emphasis>dy</db:emphasis>)</db:title>
<db:para>Starts panning the map by <db:code role="parameter">dx</db:code> pixels along the x-axis and by <db:code role="parameter">dy</db:code> pixels along the y-axis.</db:para>
<db:para>Positive values for <db:code role="parameter">dx</db:code> move the map right, negative values left. Positive values for <db:code role="parameter">dy</db:code> move the map down, negative values up.</db:para>
<db:para>During panning the <db:link xlink:href="qml-qtlocation-map.xml#center-prop">center</db:link>, and <db:link xlink:href="qml-qtlocation-map.xml#zoomLevel-prop">zoomLevel</db:link> may change.</db:para>
</db:section>
<db:section xml:id="prefetchData-method">
<db:title>void prefetchData()</db:title>
<db:para>Optional hint that allows the map to prefetch during this idle period</db:para>
</db:section>
<db:section xml:id="removeMapItem-method">
<db:title>void removeMapItem(MapItem <db:emphasis>item</db:emphasis>)</db:title>
<db:para>Removes the given <db:code role="parameter">item</db:code> from the Map (for example <db:link xlink:href="qml-qtlocation-mapquickitem.xml">MapQuickItem</db:link>, <db:link xlink:href="qml-qtlocation-mapcircle.xml">MapCircle</db:link>). If the MapItem does not exist or was not previously added to the map, the method does nothing.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtlocation-map.xml#mapItems-prop">mapItems</db:link></db:member>
<db:member><db:link xlink:href="qml-qtlocation-map.xml#addMapItem-method">addMapItem</db:link></db:member>
<db:member><db:link xlink:href="qml-qtlocation-map.xml#clearMapItems-method">clearMapItems</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="toCoordinate-method">
<db:title>coordinate toCoordinate(QPointF <db:emphasis>position</db:emphasis>, bool <db:emphasis>clipToViewPort</db:emphasis>)</db:title>
<db:para>Returns the coordinate which corresponds to the <db:code role="parameter">position</db:code> relative to the map item.</db:para>
<db:para>If <db:code role="parameter">cliptoViewPort</db:code> is <db:code>true</db:code>, or not supplied then returns an invalid coordinate if <db:code role="parameter">position</db:code> is not within the current viewport.</db:para>
</db:section>
</db:section>
</db:article>
