<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>AbstractTexture QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A base class to be used to provide textures.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Render 2.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qt3d-render-abstracttexture.xml">AbstractTexture</db:link> class shouldn't be used directly but rather through one of its subclasses. Each subclass implements a given texture target (2D, 2DArray, 3D, CubeMap ...) Each subclass provides a set of functors for each layer, cube map face and mipmap level. In turn the backend uses those functor to properly fill a corresponding OpenGL texture with data. It is expected the functor does as minimal processing as possible so as not to slow down textures generation and upload. If the content of a texture is the result of a slow procedural generation process, it is recommended not to implement this directly in a functor.</db:para>
<db:para>All textures are unique. If you instantiate twice the same texture this will create 2 identical textures on the GPU, no sharing will take place.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="ComparisonFunction-prop">
<db:title>ComparisonFunction : ComparisonFunction</db:title>
<db:fieldsynopsis>
<db:type>ComparisonFunction</db:type>
<db:varname>ComparisonFunction</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the comparison function of the texture provider.</db:para>
</db:section>
<db:section xml:id="ComparisonMode-prop">
<db:title>ComparisonMode : ComparisonMode</db:title>
<db:fieldsynopsis>
<db:type>ComparisonMode</db:type>
<db:varname>ComparisonMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the comparison mode of the texture provider.</db:para>
</db:section>
<db:section xml:id="depth-prop">
<db:title>depth : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>depth</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the depth of the texture provider.</db:para>
</db:section>
<db:section xml:id="format-prop">
<db:title>format : TextureFormat</db:title>
<db:fieldsynopsis>
<db:type>TextureFormat</db:type>
<db:varname>format</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the format of the texture provider.</db:para>
</db:section>
<db:section xml:id="generateMipMaps-prop">
<db:title>generateMipMaps : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>generateMipMaps</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds whether the texture provider should auto generate mipmaps.</db:para>
</db:section>
<db:section xml:id="handle-prop">
<db:title>[read-only] handle : var</db:title>
<db:fieldsynopsis>
<db:type>var</db:type>
<db:varname>handle</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current texture handle, if Qt 3D is using the OpenGL renderer, handle is a texture id integer.</db:para>
</db:section>
<db:section xml:id="handleType-prop">
<db:title>[read-only] handleType : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>handleType</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current texture handle type.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>AbstractTexture.NoHandle</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>AbstractTexture.OpenGLTextureId</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="height-prop">
<db:title>height : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>height</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the height of the texture provider.</db:para>
</db:section>
<db:section xml:id="layers-prop">
<db:title>layers : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>layers</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the maximum layer count of the texture provider. By default, the maximum layer count is 1.</db:para>
<db:note>
<db:para>this has a meaning only for texture providers that have 3D or array target formats.</db:para>
</db:note>
</db:section>
<db:section xml:id="magnificationFilter-prop">
<db:title>magnificationFilter : Filter</db:title>
<db:fieldsynopsis>
<db:type>Filter</db:type>
<db:varname>magnificationFilter</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the magnification filter of the texture provider.</db:para>
</db:section>
<db:section xml:id="maximumAnisotropy-prop">
<db:title>maximumAnisotropy : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>maximumAnisotropy</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the maximum anisotropy of the texture provider.</db:para>
</db:section>
<db:section xml:id="minificationFilter-prop">
<db:title>minificationFilter : Filter</db:title>
<db:fieldsynopsis>
<db:type>Filter</db:type>
<db:varname>minificationFilter</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the minification filter of the texture provider.</db:para>
</db:section>
<db:section xml:id="samples-prop">
<db:title>samples : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>samples</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the number of samples per texel for the texture provider. By default, the number of samples is 1.</db:para>
<db:note>
<db:para>this has a meaning only for texture providers that have multisample formats.</db:para>
</db:note>
</db:section>
<db:section xml:id="status-prop">
<db:title>[read-only] status : Status</db:title>
<db:fieldsynopsis>
<db:type>Status</db:type>
<db:varname>status</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current status of the texture provider.</db:para>
</db:section>
<db:section xml:id="target-prop">
<db:title>[read-only] target : Target</db:title>
<db:fieldsynopsis>
<db:type>Target</db:type>
<db:varname>target</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the target format of the texture provider.</db:para>
<db:note>
<db:para>The target format can only be set once.</db:para>
</db:note>
</db:section>
<db:section xml:id="width-prop">
<db:title>width : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>width</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the width of the texture provider.</db:para>
</db:section>
<db:section xml:id="wrapMode-prop">
<db:title>[read-only] wrapMode : QTextureWrapMode</db:title>
<db:fieldsynopsis>
<db:type>QTextureWrapMode</db:type>
<db:varname>wrapMode</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the wrap mode of the texture provider.</db:para>
</db:section>
</db:section>
</db:article>
