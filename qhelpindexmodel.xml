<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QHelpIndexModel Class</db:title>
<db:productname>QtHelp</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Help Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qhelpindexmodel.xml">QHelpIndexModel</db:link> class provides a model that supplies index keywords to views.</db:para>
<db:para>This class was introduced in Qt 4.4.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QHelpIndexModel</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += help</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qstringlistmodel.xml" xlink:role="class">QStringListModel</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="createIndex">
<db:title>void QHelpIndexModel::createIndex(const QString &amp;<db:emphasis>customFilterName</db:emphasis>)</db:title>
<db:para>Creates a new index by querying the help system for keywords for the specified <db:code role="parameter">customFilterName</db:code>.</db:para>
</db:section>
<db:section xml:id="filter">
<db:title>QModelIndex QHelpIndexModel::filter(const QString &amp;<db:emphasis>filter</db:emphasis>, const QString &amp;<db:emphasis>wildcard</db:emphasis> = QString())</db:title>
<db:para>Filters the indices and returns the model index of the best matching keyword. In a first step, only the keywords containing <db:code role="parameter">filter</db:code> are kept in the model's index list. Analogously, if <db:code role="parameter">wildcard</db:code> is not empty, only the keywords matched are left in the index list. In a second step, the best match is determined and its index model returned. When specifying a wildcard expression, the <db:code role="parameter">filter</db:code> string is used to search for the best match.</db:para>
</db:section>
<db:section xml:id="indexCreated">
<db:title>void QHelpIndexModel::indexCreated()</db:title>
<db:para>This signal is emitted when the index has been created.</db:para>
</db:section>
<db:section xml:id="indexCreationStarted">
<db:title>void QHelpIndexModel::indexCreationStarted()</db:title>
<db:para>This signal is emitted when the creation of a new index has started. The current index is invalid from this point on until the signal <db:link xlink:href="qhelpindexmodel.xml#indexCreated">indexCreated</db:link>() is emitted.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhelpindexmodel.xml#isCreatingIndex">isCreatingIndex</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isCreatingIndex">
<db:title>bool QHelpIndexModel::isCreatingIndex() const</db:title>
<db:para>Returns true if the index is currently built up, otherwise false.</db:para>
</db:section>
<db:section xml:id="linksForKeyword">
<db:title>QMap&lt;QString, QUrl&gt; QHelpIndexModel::linksForKeyword(const QString &amp;<db:emphasis>keyword</db:emphasis>) const</db:title>
<db:para>Returns all hits found for the <db:code role="parameter">keyword</db:code>. A hit consists of the URL and the document title.</db:para>
</db:section>
</db:section>
</db:article>
