<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>qt_deploy_qml_imports</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Deploy the runtime components of QML modules needed by an executable.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="qt-deploy-qml-imports"/>
<db:para>Deploy the runtime components of QML modules needed by an executable.</db:para>
<db:para>The command is defined in the <db:code>Qml</db:code> component of the <db:code>Qt6</db:code> package, which can be loaded like so:</db:para>
<db:programlisting language="cpp" role="bad">find_package(Qt6 REQUIRED COMPONENTS Qml)
</db:programlisting>
<db:para>Unlike most other CMake commands provided by Qt, <db:code>qt_deploy_qml_imports()</db:code> can only be called from a deployment script. It cannot be called directly by the project.</db:para>
<db:note>
<db:para>This command is in technology preview and may change in future releases.</db:para>
</db:note>
<db:warning>
<db:para>If you are using a CMake version lower than 3.19, make sure that you pass the <db:code>MANUAL_FINALIZATION</db:code> option to <db:link xlink:href="qt-add-executable.xml">qt6_add_executable()</db:link>, and then call <db:link xlink:href="qt-finalize-target.xml">qt6_finalize_target()</db:link> before calling this function.</db:para>
</db:warning>
<db:section xml:id="synopsis">
<db:title>Synopsis</db:title>
<db:programlisting language="cpp" role="bad">qt_deploy_qml_imports(
    TARGET target
    [QML_DIR qml_dir]
    [PLUGINS_FOUND var_name]
    [NO_QT_IMPORTS]
)
</db:programlisting>
</db:section>
<db:section xml:id="description">
<db:title>Description</db:title>
<db:note>
<db:para>This command does not usually need to be called directly. It is used internally by other higher level commands, but projects wishing to implement more customized deployment logic may find it useful.</db:para>
</db:note>
<db:para>When installing an application that uses QML, it may be non-trivial to work out which QML modules and which parts of those QML modules need to also be installed. Because QML plugins are not linked directly to an application's executable, <db:link xlink:href="qt-deploy-runtime-dependencies.xml#qt-deploy-runtime-dependencies">qt_deploy_runtime_dependencies()</db:link> won't find these QML modules. The <db:code>qt_deploy_qml_imports()</db:code> command provides the necessary logic which complements <db:link xlink:href="qt-deploy-runtime-dependencies.xml#qt-deploy-runtime-dependencies">qt_deploy_runtime_dependencies()</db:link> and deploys the runtime parts of all QML modules imported by the application.</db:para>
<db:para>The <db:code>TARGET</db:code> option is mandatory and should specify a <db:code>target</db:code> that is an executable (on macOS, it should be an app bundle) and also a QML module. All QML sources that were added to the <db:code>target</db:code> via <db:link xlink:href="qt-add-qml-module.xml#qt6-add-qml-module">qt_add_qml_module()</db:link> or <db:link xlink:href="qt-target-qml-sources.xml#qt6-target-qml-sources">qt_target_qml_sources()</db:link> will be recursively scanned for QML imports. The <db:code>NO_IMPORT_SCAN</db:code> option must not have been given to <db:link xlink:href="qt-add-qml-module.xml#qt6-add-qml-module">qt_add_qml_module()</db:link>. The <db:code>qmldir</db:code> files and plugins from the imported QML modules will be deployed. The <db:code>NO_QT_IMPORTS</db:code> option can be given to skip deploying any QML modules provided by Qt.</db:para>
<db:para>By default, the runtime parts of imported QML modules will be deployed to the <db:code>Resources/qml</db:code> directory for a macOS app bundle target, and to the <db:code>qml</db:code> directory under the base installation location for other platforms. For the non-macOS case, the <db:code>QML_DIR</db:code> option can be used to override this default choice.</db:para>
<db:para>The command will store a list of all QML plugins it deploys in the variable named by the <db:code>PLUGINS_FOUND</db:code> option, if given. This is often passed as the <db:code>ADDITIONAL_MODULES</db:code> argument in a subsequent call to <db:link xlink:href="qt-deploy-runtime-dependencies.xml#qt-deploy-runtime-dependencies">qt_deploy_runtime_dependencies()</db:link>.</db:para>
</db:section>
<db:section xml:id="example">
<db:title>Example</db:title>
<db:programlisting language="cpp" role="bad">cmake_minimum_required(VERSION 3.16...3.22)
project(MyThings)

find_package(Qt6 6.3 REQUIRED COMPONENTS Core Qml)
qt_standard_project_setup()

qt_add_executable(MyApp main.cpp)
qt_add_qml_module(MyApp
    URI Application
    VERSION 1.0
    QML_FILES main.qml MyThing.qml
)

# The following script must only be executed at install time
set(deploy_script &quot;${CMAKE_CURRENT_BINARY_DIR}/deploy_MyApp.cmake&quot;)

file(GENERATE OUTPUT ${deploy_script} CONTENTS &quot;
include(\&quot;${QT_DEPLOY_SUPPORT}\&quot;)
qt_deploy_qml_imports(
    # Deploy QML modules used by MyApp
    TARGET MyApp

    # The found QML plugins are stored in the plugins_found variable
    PLUGINS_FOUND plugins_found

    # The QML modules will be deployed into a custom directory
    QML_DIR \&quot;myqmldir\&quot;

    # Qt QML modules will be skipped, only project-created QML modules will be deployed
    NO_QT_IMPORTS
)
# Deploy application runtime dependencies and runtime dependencies
# of the found QML module plugins.
qt_deploy_runtime_dependencies(
    EXECUTABLE \${QT_DEPLOY_BIN_DIR}/$&amp;lt;TARGET_FILE_NAME:MyApp&amp;gt;
    ADDITIONAL_MODULES \${plugins_found}
)
&quot;)

install(TARGETS MyApp)
install(SCRIPT ${deploy_script})
</db:programlisting>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt-generate-deploy-qml-app-script.xml#qt6-generate-deploy-qml-app-script">qt_generate_deploy_qml_app_script()</db:link></db:member>
<db:member><db:link xlink:href="qt-deploy-runtime-dependencies.xml#qt-deploy-runtime-dependencies">qt_deploy_runtime_dependencies()</db:link></db:member>
<db:member><db:link xlink:href="cmake-variable-qt-deploy-qml-dir.xml">QT_DEPLOY_QML_DIR</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
