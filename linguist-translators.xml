<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Linguist Manual: Translators</db:title>
<db:productname>QtLinguist</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Linguist Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="linguist-manager.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Qt Linguist Manual: Release Manager"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="linguist-programmers.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="Qt Linguist Manual: Developers"/></db:extendedlink>
<db:abstract>
<db:para>Qt Linguist Manual.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>{Qt Linguist Manual}{Contents}</db:para>
<db:para><db:emphasis>Qt Linguist</db:emphasis> is a tool for adding translations to Qt applications. Once you have installed Qt, you can start <db:emphasis>Qt Linguist</db:emphasis> in the same way as any other application on the development host.</db:para>
<db:para>The <db:emphasis>Qt Linguist</db:emphasis> main window contains a menu bar and the following views:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:emphasis role="bold">Context</db:emphasis> (<db:emphasis role="bold">F6</db:emphasis>) for selecting from a list of contexts in which strings to be translated appear.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis role="bold">Strings</db:emphasis> (<db:emphasis role="bold">F7</db:emphasis>) for viewing translatable strings found in a context.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis role="bold">Sources and Forms</db:emphasis> (<db:emphasis role="bold">F9</db:emphasis>) for viewing the context where the current string is used if the source code for the context is accessible.</db:para>
</db:listitem>
<db:listitem>
<db:para>Translation area for translating strings.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis role="bold">Phrases and Guesses</db:emphasis> (<db:emphasis role="bold">F10</db:emphasis>) for viewing possible translations for the current string.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis role="bold">Warnings</db:emphasis> (<db:emphasis role="bold">F8</db:emphasis>) for viewing translated strings that fail validation tests.</db:para>
</db:listitem>
</db:itemizedlist>
<db:mediaobject>
<db:alt>&quot;Qt Linguist UI&quot;</db:alt>
<db:imageobject>
<db:imagedata fileref="images/linguist-linguist.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The translation area (1) is always visible. To show or hide the other views, select <db:emphasis role="bold">View</db:emphasis> &gt; <db:emphasis role="bold">Views</db:emphasis>, or use the keyboard shortcuts listed above. You can drag the views by their title bars and arrange them around the translation area or even outside the main window.</db:para>
<db:section xml:id="translating-strings">
<db:title>Translating Strings</db:title>
<db:para>You open translation source (TS) files in <db:emphasis>Qt Linguist</db:emphasis> for translation. TS files are human-readable XML files containing source phrases and their translations. TS files are usually created and updated by lupdate. If you do not have a TS file, see <db:link xlink:href="linguist-manager.xml">Release Manager</db:link> to learn how to generate one.</db:para>
<db:para>You can use <db:emphasis>Qt Linguist</db:emphasis> also to translate files in the international XML Localization Interchange File Format (XLIFF) that are generated by other programs. However, for standard Qt projects, only the TS file format is used. The minimum supported version for XLIFF format files is 1.1.</db:para>
<db:para><db:emphasis>Qt Linguist</db:emphasis> displays the target language in the translation area, and adapts the number of input fields for plural forms accordingly. When you open several TS files to translate simultaneously, the <db:emphasis role="bold">Translator</db:emphasis> and <db:emphasis role="bold">Translator comment</db:emphasis> fields are displayed for each language. For more information about setting the location information, see <db:link xlink:href="linguist-translators.xml#changing-the-target-locale">Changing the Target Locale</db:link>.</db:para>
<db:para>If the developer provides a <db:link xlink:href="qobject.xml#tr">disambiguating comment</db:link>, it is displayed in the <db:emphasis role="bold">Developer comments</db:emphasis> field.</db:para>
<db:para>To translate strings:</db:para>
<db:orderedlist numeration="arabic">
<db:listitem>
<db:para>Select <db:emphasis role="bold">File</db:emphasis> &gt; <db:emphasis role="bold">Open</db:emphasis> to load a TS file.</db:para>
</db:listitem>
<db:listitem>
<db:para>Select a context in the <db:emphasis role="bold">Context</db:emphasis> view to load the translatable strings found in that context into the <db:emphasis role="bold">Strings</db:emphasis> view.</db:para>
</db:listitem>
<db:listitem>
<db:para>Select a string to copy it as the <db:emphasis role="bold">Source text</db:emphasis> in the translation area. The whitespace within the source text is visualized so that you can see the spacing required within the text.</db:para>
</db:listitem>
<db:listitem>
<db:para>Enter the translation of the current string in the <db:emphasis role="bold">Translation</db:emphasis> field.</db:para>
<db:para>You can also select an existing translation from the <db:emphasis role="bold">Phrases and Guesses</db:emphasis> view by double-clicking it. The phrases are read from phrase books and the guesses are existing translations of similar phrases in the TS file.</db:para>
</db:listitem>
<db:listitem>
<db:para>Optionally, enter a comment to be read by other translators in the <db:emphasis role="bold">Translator comment</db:emphasis> field.</db:para>
</db:listitem>
<db:listitem>
<db:para>To accept the translation, press <db:emphasis role="bold">Ctrl+Enter</db:emphasis>, select <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-doneandnext.png"/>
</db:imageobject>
</db:inlinemediaobject> , or click the icon to the left of the selected source string in the string list.</db:para>
</db:listitem>
<db:listitem>
<db:para>Select <db:emphasis role="bold">File</db:emphasis> &gt; <db:emphasis role="bold">Save</db:emphasis> to save your work.</db:para>
</db:listitem>
</db:orderedlist>
<db:para>Repeat this process until all strings in the string list are marked with <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-check-on.png"/>
</db:imageobject>
</db:inlinemediaobject> (<db:emphasis role="bold">Accepted/Correct</db:emphasis>) or <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-check-warning.png"/>
</db:imageobject>
</db:inlinemediaobject> (<db:emphasis role="bold">Accepted/Warnings</db:emphasis>). Then select the next context and continue.</db:para>
<db:para>To view the number of words and characters in the source text and in the translated text, select <db:emphasis role="bold">View</db:emphasis> &gt; <db:emphasis role="bold">Statistics</db:emphasis>.</db:para>
<db:para>Select <db:emphasis role="bold">File</db:emphasis> &gt; <db:emphasis role="bold">Release</db:emphasis> to create a Qt message QM file with the same base name as the current translation source file. The release manager's command line tool lrelease performs the same function on <db:emphasis>all</db:emphasis> of an application's translation source files.</db:para>
<db:para>To print the translation source and the translations, select <db:emphasis role="bold">File</db:emphasis> &gt; <db:emphasis role="bold">Print</db:emphasis>.</db:para>
<db:para>To quit <db:emphasis>Qt Linguist</db:emphasis>, select <db:emphasis role="bold">File</db:emphasis> &gt; <db:emphasis role="bold">Exit</db:emphasis>.</db:para>
<db:section xml:id="leaving-a-translation-for-later">
<db:title>Leaving a Translation for Later</db:title>
<db:para>If you wish to leave a translation, press <db:emphasis role="bold">Ctrl+L</db:emphasis> (Next Unfinished) to move to the next unfinished translation. To move to the next translation (whether finished or unfinished) press <db:emphasis role="bold">Shift+Ctrl+L</db:emphasis>. You can also navigate using the <db:emphasis role="bold">Translation</db:emphasis> menu. If you want to go to a different context entirely, click the context you want to work on in the <db:emphasis role="bold">Context</db:emphasis> list, then click the source text in the <db:emphasis role="bold">Strings</db:emphasis> view.</db:para>
</db:section>
<db:section xml:id="phrases-that-require-multiple-translations-depending-on-context">
<db:title>Phrases That Require Multiple Translations Depending on Context</db:title>
<db:para>The same phrase may occur in two or more contexts without conflict. Once a phrase has been translated in one context, <db:emphasis>Qt Linguist</db:emphasis> notes that the translation has been made and when the translator reaches a later occurrence of the same phrase, <db:emphasis>Qt Linguist</db:emphasis> provides the previous translation as a possible translation candidate in the <db:emphasis role="bold">Phrases and Guesses</db:emphasis> view.</db:para>
<db:para>If a phrase occurs more than once in a particular context it is shown only once in the <db:emphasis role="bold">Context</db:emphasis> view and the translation is applied to every occurrence within the context. If the same phrase needs to be translated differently within the same context, the developer must provide a distinguishing comment for each occurrence of the phrase. If such comments are used, the duplicate phrases appear in the <db:emphasis role="bold">Context</db:emphasis> view. The developer's comments appear in the translation area on a light blue background.</db:para>
</db:section>
<db:section xml:id="changing-keyboard-accelerators">
<db:title>Changing Keyboard Accelerators</db:title>
<db:para>A keyboard accelerator is a key combination that, when pressed, causes an application to perform an action. There are two kinds of keyboard accelerators: Alt key and Ctrl key accelerators.</db:para>
<db:section xml:id="alt-key-accelerators">
<db:title>Alt Key Accelerators</db:title>
<db:para>Alt key accelerators are used in menu selection and on buttons. The underlined character in a menu item or button label signifies that pressing the Alt key with the underlined character will perform the same action as clicking the menu item or pressing the button. For example, most applications have a <db:emphasis>File</db:emphasis> menu with the &quot;F&quot; in the word &quot;File&quot; underlined. In these applications the <db:emphasis>File</db:emphasis> menu can be invoked either by clicking the word &quot;File&quot; on the menu bar or by pressing <db:emphasis>Alt+F</db:emphasis>. To identify an accelerator key in the translation text (&quot;File&quot;) precede it with an ampersand: <db:emphasis>&amp;File</db:emphasis>. If a string to be translated has an ampersand in it, then the translation for that string should also have an ampersand in it, preferably in front of the same character.</db:para>
<db:para>The meaning of an Alt key accelerator can be determined from the phrase in which the ampersand is embedded. The translator can change the character part of the Alt key accelerator, if the translated phrase does not contain the same character or if that character has already been used in the translation of some other Alt key accelerator. Conflicts with other Alt key accelerators must be avoided within a context. Note that some Alt key accelerators, usually those on the menu bar, may apply in other contexts.</db:para>
</db:section>
<db:section xml:id="ctrl-key-accelerators">
<db:title>Ctrl Key Accelerators</db:title>
<db:para>Ctrl key accelerators can exist independently of any visual control. They are often used to invoke actions in menus that would otherwise require multiple keystrokes or mouse clicks. They may also be used to perform actions that do not appear in any menu or on any button. For example, most applications that have a <db:emphasis>File</db:emphasis> menu have a <db:emphasis>New</db:emphasis> submenu item in the <db:emphasis>File</db:emphasis> menu. The <db:emphasis>New</db:emphasis> item might appear as &quot;<db:emphasis role="underline">N</db:emphasis>ew Ctrl+N&quot; in the <db:emphasis>File</db:emphasis> menu, meaning the <db:emphasis>New</db:emphasis> menu can be invoked by simply pressing <db:emphasis role="bold">Ctrl+N</db:emphasis>, instead of either clicking <db:emphasis>File</db:emphasis> with the mouse and then clicking <db:emphasis>New</db:emphasis> with the mouse, or by entering <db:emphasis>Alt+F</db:emphasis> and <db:emphasis>N</db:emphasis>.</db:para>
<db:para>Each Ctrl key accelerator is shown in the <db:emphasis role="bold">Strings</db:emphasis> view as a separate string, for example <db:emphasis role="bold">Ctrl+Enter</db:emphasis>. Since the string does not have a context to give it meaning, such as the context of the phrase in which an Alt key accelerator appears, the translator must rely on the UI developer to include a <db:link xlink:href="qobject.xml#tr">disambiguation comment</db:link> to explain the action the Ctrl key accelerator is meant to perform. This disambiguating comment (if provided by the developer) will appear under <db:emphasis role="bold">Developer comments</db:emphasis> in the translation area below the <db:emphasis role="bold">Source text</db:emphasis> field.</db:para>
<db:para>Ideally, translations for Ctrl key accelerators are simply copied by selecting <db:emphasis role="bold">Translation</db:emphasis> &gt; <db:emphasis role="bold">Copy from source text</db:emphasis>. However, in some cases the character will not make sense in the target language, and it must be changed. Whichever character (alpha or digit) is chosen, the translation must be in the form &quot;Ctrl+&quot; followed by the upper case character. Qt will automatically display the correct name at run-time. As with Alt key accelerators, if the translator changes the character, the new character must not conflict with any other Ctrl key accelerator.</db:para>
<db:warning>
<db:para>Do not translate the &quot;Alt&quot;, &quot;Ctrl&quot; or &quot;Shift&quot; parts of the accelerators. Qt relies on these strings being there. For supported languages, Qt automatically translates these strings.</db:para>
</db:warning>
</db:section>
</db:section>
<db:section xml:id="handling-numbered-arguments-and-plurals">
<db:title>Handling Numbered Arguments and Plurals</db:title>
<db:para>Some phrases contain numbered arguments. A numbered argument is a placeholder that will be replaced with text at run-time. A numbered argument appears in a source string as a percent sign followed by a digit. Consider an example: <db:code>After processing file %1, file %2 is next in line</db:code>. In this string to be translated, <db:code>%1</db:code> and <db:code>%2</db:code> are numbered arguments. At run-time, <db:code>%1</db:code> and <db:code>%2</db:code> will be replaced with the first and second file names respectively. The same numbered arguments must appear in the translation, but not necessarily in the same order. A German translation of the string might reverse the phrases, for example <db:code>Datei %2 wird bearbeitet, wenn Datei %1 fertig ist</db:code>. Both numbered arguments appear in the translation, but in the reverse order. <db:code>%i</db:code> will always be replaced by the same text in the translation strings, regardless of where argument <db:emphasis>i</db:emphasis> appears in the argument sequence in the source string.</db:para>
<db:para>The use of numbered arguments is often accompanied by the use of plurals in the source text. In many languages, the form of the text will depend on the value shown, and more than one translation is required. If the developers have marked up the source text in correct way, fields for each of the possible plural forms will be available in the translation area. For more information, see <db:link xlink:href="i18n-source-translation.xml#handling-plurals">Writing Source Code for Translation</db:link>.</db:para>
</db:section>
<db:section xml:id="changing-the-target-locale">
<db:title>Changing the Target Locale</db:title>
<db:para>If the target language and country are not explicitly set, <db:emphasis>Qt Linguist</db:emphasis> deducts them from the translation source file name. For example, <db:code>app_de.ts</db:code> sets the target language to German, and <db:code>app_de_ch.ts</db:code> sets the target language to German and the target country to Switzerland. This also helps loading translations for the current locale automatically. For more information, see <db:link xlink:href="linguist-programmers.xml">Developers</db:link>.</db:para>
<db:para>If your files do not follow this convention, you can also set the locale information explicitly by selecting <db:emphasis role="bold">Edit</db:emphasis> &gt; <db:emphasis role="bold">Translation File Settings</db:emphasis>.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-translationfilesettings.png"/>
</db:imageobject>
</db:mediaobject>
</db:section>
</db:section>
<db:section xml:id="selecting-context-to-translate">
<db:title>Selecting Context to Translate</db:title>
<db:para>The <db:emphasis role="bold">Context</db:emphasis> view lists the contexts in which strings to be translated appear. The column labeled <db:emphasis role="bold">Context</db:emphasis> lists the context names in alphabetical order. Each context is the name of a subclass of <db:link xlink:href="qobject.xml">QObject</db:link>. There can also be a context for <db:link xlink:href="qobject.xml">QObject</db:link> itself, which contains strings passed to the static function <db:link xlink:href="qobject.xml#tr">QObject::tr</db:link>(). There can also be an <db:emphasis>&lt;unnamed context&gt;</db:emphasis>, which contains strings that are not in a subclass of <db:link xlink:href="qobject.xml">QObject</db:link>.</db:para>
<db:para>The following icons indicate the current translation state for each context:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>State</db:para>
</db:th>
<db:th>
<db:para>Icon</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>Accepted/Correct</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-check-on.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para>All strings in the context have been translated, and all the translations passed the <db:link xlink:href="linguist-translators.xml#validating-translations">validation tests</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Accepted/Warnings</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-check-warning.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para>All strings in the context have been translated or marked as translated, but at least one translation failed the validation tests. In the <db:emphasis role="bold">Strings</db:emphasis> view, you can see which string failed the test.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Not Accepted</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-check-off.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para>At least one string in the context has not been translated or is not marked as translated.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Obsolete</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-check-obsolete.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para>None of the translated strings appears in the context any more. This usually means the context itself no longer exists in the application.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:emphasis role="bold">Items</db:emphasis> column displays the total number of translatable strings in the context and the number of translated strings, separated by a slash (/). If the numbers are equal, all the translatable strings in the context have translations.</db:para>
</db:section>
<db:section xml:id="selecting-string-to-translate">
<db:title>Selecting String to Translate</db:title>
<db:para>The <db:emphasis role="bold">Strings</db:emphasis> view lists all the translatable strings found in the current context and their translation acceptance state. Selecting a string makes that string the current string in the translation area.</db:para>
<db:para>Click the icon in front of a string to change its translation acceptance state. A tick mark, green or yellow, means the string has been translated and the translation has been accepted. A question mark means either that the translation has not been accepted or that the string does not have a translation.</db:para>
<db:para>The following icons indicate the current translation state for each string:</db:para>
<db:anchor xml:id="string-translation-states"/>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>State</db:para>
</db:th>
<db:th>
<db:para>Icon</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>Accepted/Correct</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-check-on.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para>The source string has a translation (possibly empty). The user has accepted the translation, and the translation passes all the <db:link xlink:href="linguist-translators.xml#validating-translations">validation tests</db:link>. If the translation is empty, the user has chosen to leave it empty. Click the icon to revoke acceptance of the translation and decrement the number of accepted translations in the <db:emphasis role="bold">Items</db:emphasis> column of the gui Context view by 1. The state is reset to <db:emphasis role="bold">Not Accepted</db:emphasis> if the string has a translation, or to <db:emphasis role="bold">No Translation</db:emphasis> if the string's translation is empty. If <db:code>lupdate</db:code> changes the contents of a string, its acceptance state is automatically reset to <db:emphasis role="bold">Not Accepted</db:emphasis>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Accepted/Warnings</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-check-warning.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para>The user has accepted the translation, but the translation does not pass all the validation tests. The validation test failures are shown in the <db:emphasis role="bold">Warnings</db:emphasis> view. Click the icon to revoke acceptance of the translation. The state is reset to <db:emphasis role="bold">Validation Failures</db:emphasis>, and the number of accepted translations in the <db:emphasis role="bold">Items</db:emphasis> column of the <db:emphasis role="bold">Context</db:emphasis> view is decremented by 1.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Not Accepted</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-check-off.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para>The string has a translation that passes all the validation tests, but the user has not yet accepted the translation. Click the icon or press <db:emphasis role="bold">Ctrl+Enter</db:emphasis> to accept the translation. The state is reset to <db:emphasis role="bold">Accepted/Correct</db:emphasis>, and the number of accepted translations in the <db:emphasis role="bold">Items</db:emphasis> column of the <db:emphasis role="bold">Context</db:emphasis> view is incremented by 1.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>No Translation</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-check-empty.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para>The string does not have a translation. Click the icon to accept the empty translation anyway. The state is reset to <db:emphasis role="bold">Accepted/Correct</db:emphasis>, and the number of accepted translations in the <db:emphasis role="bold">Items</db:emphasis> column of the <db:emphasis role="bold">Context</db:emphasis> view is incremented by 1.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Validation Failures</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-danger.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para>The string has a translation, but the translation does not pass all the validation tests. Validation test failures are shown in the <db:emphasis role="bold">Warnings</db:emphasis> view. Click on the icon or press <db:emphasis role="bold">Ctrl+Return</db:emphasis> to accept the translation even with validation failures. The state is reset to <db:emphasis role="bold">Accepted/Warnings</db:emphasis>. We recommended editing the translation to fix the causes of the validation failures. The state will reset automatically to <db:emphasis role="bold">Not Accepted</db:emphasis>, when all the failures have been fixed.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Obsolete</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-check-obsolete.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para>The string is obsolete. It is no longer used in the context. See the <db:link xlink:href="linguist-manager.xml">Release Manager</db:link> for instructions on how to remove obsolete messages from the file.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="viewing-strings-in-context">
<db:title>Viewing Strings in Context</db:title>
<db:para>If the source files containing the translatable strings are available to <db:emphasis>Qt Linguist</db:emphasis>, the <db:emphasis role="bold">Sources and Forms</db:emphasis> view shows the source context of the current string in the <db:emphasis role="bold">Strings</db:emphasis> view. The source code line containing the current string should be shown and highlighted. If the file containing the source string is not found, the expected absolute file path is shown.</db:para>
<db:para>If the source context shows the wrong source line, it probably means the translation file is out of sync with the source files. For more information about how to re-sync the translation file with the source files, see <db:link xlink:href="linguist-manager.xml#using-lupdate">Using lupdate</db:link>.</db:para>
<db:para>Forms created by <db:emphasis>Qt Designer</db:emphasis> are stored in special UI files. <db:emphasis>Qt Linguist</db:emphasis> can make use of these UI files to show the translations done so far on the form itself if the UI files are available to it during the translation process.</db:para>
</db:section>
<db:section xml:id="reusing-translations">
<db:title>Reusing Translations</db:title>
<db:para>If the translated text is similar to the source text, select <db:emphasis role="bold">Translation</db:emphasis> &gt; <db:emphasis role="bold">Copy from source text</db:emphasis> (or press <db:emphasis role="bold">Ctrl+B</db:emphasis>) to copy the source text into the translation area.</db:para>
<db:para>In <db:emphasis>Qt Linguist</db:emphasis>, <db:emphasis>phrase books</db:emphasis> are used to provide a common set of translations to help ensure consistency. A phrase book is a set of source phrases, target (translated) phrases, and optional definitions. Typically, one phrase book is created per language and family of applications. Phrase books can also be used to avoid duplication of effort since the translations for a family of applications can be produced once in the phrase book.</db:para>
<db:para>If the current string in the <db:emphasis role="bold">Strings</db:emphasis> view appears in one or more of the phrase books that have been loaded, the current string and its phrase book translations are listed in the <db:emphasis role="bold">Phrases and Guesses</db:emphasis> view. If the current string is the same as, or similar to, another string that has already been translated, that other string and its translation are also listed in this view.</db:para>
<db:para>To copy a translation from the <db:emphasis role="bold">Phrases and Guesses</db:emphasis> view to the translation area, double-click it or select it and press <db:emphasis role="bold">Enter</db:emphasis>.</db:para>
<db:section xml:id="batch-translation">
<db:title>Batch Translation</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-batchtranslation.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Use the batch translation feature of <db:emphasis>Qt Linguist</db:emphasis> to automatically translate source texts that are also in a phrase book. To configure which phrase books to use in what order during the batch translation process, select <db:emphasis role="bold">Edit</db:emphasis> &gt; <db:emphasis role="bold">Batch Translation</db:emphasis>. You can specify whether only entries with no current translation should be considered, and whether batch translated entries should be marked as <db:emphasis role="bold">Accepted</db:emphasis>.</db:para>
</db:section>
<db:section xml:id="creating-and-editing-phrase-books">
<db:title>Creating and Editing Phrase Books</db:title>
<db:para>Phrase book files are human-readable XML files containing standard phrases and their translations. These files are created and updated by <db:emphasis>Qt Linguist</db:emphasis> and may be used by any number of projects and applications.</db:para>
<db:para>To create a new phrase book, select <db:emphasis role="bold">Phrases</db:emphasis> &gt; <db:emphasis role="bold">New Phrase Book</db:emphasis>.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-phrasebookdialog.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>To open a phrase book, select <db:emphasis role="bold">Phrases</db:emphasis> &gt; <db:emphasis role="bold">Open Phrase Book</db:emphasis>, and then select the Qt phrase book file (.qph) to open.</db:para>
<db:para>To view and change open phrase books, select <db:emphasis role="bold">Phrases</db:emphasis> &gt; <db:emphasis role="bold">Edit Phrase Book</db:emphasis>.</db:para>
<db:para>To add a new phrase, select <db:emphasis role="bold">New Entry</db:emphasis> (or press <db:emphasis role="bold">Alt+N</db:emphasis>) and type in a new source phrase, the translation, and an optinal definition. This is useful to distinguish different translations of the same source phrase.</db:para>
<db:para>To add the translation you are working on to the current phrase book, select <db:emphasis role="bold">Phrases</db:emphasis> &gt; <db:emphasis role="bold">Add to Phrase Book</db:emphasis> or press <db:emphasis role="bold">Ctrl+T</db:emphasis>. If multiple phrase books are loaded, you have to select one.</db:para>
<db:para>If you detect an error in a phrase book entry that is shown in the <db:emphasis role="bold">Phrases and Guesses</db:emphasis> view, you can also edit it in place by right clicking on the entry, and selecting <db:emphasis role="bold">Edit</db:emphasis>. After fixing the error press <db:emphasis role="bold">Return</db:emphasis> to leave the editing mode.</db:para>
<db:para>To delete a phrase, select it in the <db:emphasis role="bold">Source phrase</db:emphasis> list, and then select <db:emphasis role="bold">Remove Entry</db:emphasis>.</db:para>
<db:para>To print an open phrase book, select <db:emphasis role="bold">Phrases</db:emphasis> &gt; <db:emphasis role="bold">Print Phrase Book</db:emphasis>.</db:para>
</db:section>
</db:section>
<db:section xml:id="validating-translations">
<db:title>Validating Translations</db:title>
<db:para><db:emphasis>Qt Linguist</db:emphasis> provides the following validation tests for translations:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:emphasis>Accelerator validation</db:emphasis> detects translated phrases that do not have an ampersand when the source phrase does and vice versa.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis>Punctuation validation</db:emphasis> detects differences in the terminating punctuation between source and translated phrases when this may be significant. For example, warns if the source phrase ends with an ellipsis, exclamation mark or question mark, and the translated phrase does not, and vice versa.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis>Phrases validation</db:emphasis> detects source phrases that are also in the phrase book but whose translation differs from that given in the phrase book.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis>Place marker validation</db:emphasis> detects whether the same variables (like <db:code>%1</db:code>, <db:code>%2</db:code>) are used both in the source text and in the translation.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>To switch validation tests on or off, select <db:emphasis role="bold">Validation</db:emphasis> or use the toolbar buttons.</db:para>
<db:para>Not accepted strings that fail validation tests are marked with the <db:emphasis role="bold">Validation Failures</db:emphasis> icon in the <db:emphasis role="bold">Strings</db:emphasis> view. Accepted strings are marked with <db:emphasis role="bold">Accepted/Warnings</db:emphasis>.</db:para>
<db:para>If you switch validation off and then switch it on later, <db:emphasis>Qt Linguist</db:emphasis> rechecks all phrases and marks any that fail validation.</db:para>
<db:para>If the translation you enter for the current string fails any of the active validation tests, the failures are listed in the <db:emphasis role="bold">Warnings</db:emphasis> view. The first of these failure messages is also shown in the status bar at the bottom of the main window.</db:para>
<db:note>
<db:para>Only results of <db:emphasis>active</db:emphasis> validation tests are reported.</db:para>
</db:note>
<db:anchor xml:id="multiple-languages"/>
</db:section>
<db:section xml:id="translating-multiple-languages-simultaneously">
<db:title>Translating Multiple Languages Simultaneously</db:title>
<db:para>You can load and edit multiple translation files simultaneously. The following screen shot displays <db:emphasis>Polish</db:emphasis> and <db:emphasis>Japanese</db:emphasis> translation files loaded.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/linguist-linguist_2.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The translation area has text editing areas for both Polish and Japanese, and these are color-coded for easier separation. The <db:emphasis role="bold">Context</db:emphasis> view and the <db:emphasis role="bold">Strings</db:emphasis> view both have two status columns instead of one, color-coded with the same colors. The left-most column is related to the top-most language area (Polish above) in the translation area, and the right-most column is related to the bottom language area.</db:para>
<db:para>The <db:emphasis role="bold">Items</db:emphasis> column in the <db:emphasis role="bold">Context</db:emphasis> view combines the values for both languages. If the number of translatable strings does not match the number of accepted strings, either or both languages have strings that need to be translated or accepted. The <db:emphasis role="bold">Strings</db:emphasis> view shows the translation acceptance state of each string for each language.</db:para>
</db:section>
</db:article>
