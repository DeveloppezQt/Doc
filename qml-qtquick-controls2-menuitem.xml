<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>MenuItem QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 5.14.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Presents an item within a Menu.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 2.14</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>AbstractButton</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>MenuItem is part of <db:simplelist><db:member>qtquickcontrols2-menus</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-controls2-menuitem.xml">MenuItem</db:link> is a convenience type that implements the <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml">AbstractButton</db:link> API, providing a familiar way to respond to menu items being <db:link xlink:href="qml-qtquick-controls2-menuitem.xml#triggered-signal">triggered</db:link>, for example.</db:para>
<db:para><db:link xlink:href="qml-qtquick-controls2-menuitem.xml">MenuItem</db:link> inherits its API from <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml">AbstractButton</db:link>. For instance, you can set <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#text-prop">text</db:link> and <db:link xlink:href="qtquickcontrols2-icons.xml">icon</db:link> using the <db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml">AbstractButton</db:link> API.</db:para>
<db:programlisting language="cpp">Button {
    id: fileButton
    text: &quot;File&quot;
    onClicked: menu.open()

    Menu {
        id: menu

        MenuItem {
            text: &quot;New...&quot;
            onTriggered: document.reset()
        }
        MenuItem {
            text: &quot;Open...&quot;
            onTriggered: openDialog.open()
        }
        MenuItem {
            text: &quot;Save&quot;
            onTriggered: saveDialog.open()
        }
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-menu">Customizing Menu</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-menu.xml">Menu</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-menus.xml">Menu Controls</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="arrow-prop">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] arrow : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>arrow</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the sub-menu arrow item.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-menu">Customizing Menu</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="highlighted-prop">
<db:title>highlighted : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>highlighted</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the menu item is highlighted by the user.</db:para>
<db:para>A menu item can be highlighted by mouse hover or keyboard navigation.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-menu.xml#currentIndex-prop">Menu::currentIndex</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="icon-prop">
<db:title>icon group</db:title>
<db:bridgehead renderas="sect2" xml:id="icon.mask-prop">[since Qt.labs.platform 1.1 (Qt 5.12)] icon.mask : bool</db:bridgehead>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>icon.mask</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="icon.name-prop">[since Qt.labs.platform 1.1 (Qt 5.12)] icon.name : string</db:bridgehead>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>icon.name</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="icon.source-prop">[since Qt.labs.platform 1.1 (Qt 5.12)] icon.source : url</db:bridgehead>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>icon.source</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the menu item's icon.</db:para>
<db:para>This QML property was introduced in Qt.labs.platform 1.1 (Qt 5.12).</db:para>
</db:section>
<db:section xml:id="menu-prop">
<db:title>[read-only, since QtQuick.Controls 2.3 (Qt 5.10)] menu : Menu</db:title>
<db:fieldsynopsis>
<db:type>Menu</db:type>
<db:varname>menu</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the menu that contains this menu item, or <db:code>null</db:code> if the item is not in a menu.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
</db:section>
<db:section xml:id="subMenu-prop">
<db:title>[read-only, since QtQuick.Controls 2.3 (Qt 5.10)] subMenu : Menu</db:title>
<db:fieldsynopsis>
<db:type>Menu</db:type>
<db:varname>subMenu</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the sub-menu that this item presents in the parent menu, or <db:code>null</db:code> if this item is not a sub-menu item.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="triggered-signal">
<db:title>void triggered()</db:title>
<db:para>This signal is emitted when the menu item is triggered by the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onTriggered</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
