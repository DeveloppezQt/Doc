<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>HBarModelMapper QML Type</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Horizontal model mapper for bar series.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtCharts 2.1</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtcharts-hbarmodelmapper.xml">HBarModelMapper</db:link> allows you to use your own <db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link> derived model with data in rows as a data source for any bar series. It is possible to use both <db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link> and bar series data API to manipulate data. <db:link xlink:href="qml-qtcharts-hbarmodelmapper.xml">HBarModelMapper</db:link> keeps the series and the model in sync.</db:para>
<db:para>The following QML example would create a bar series with three bar sets (assuming the model has at least four rows). Each bar set would contain data starting from column 1. The name of a set would be defined by the vertical header (of the row).</db:para>
<db:programlisting language="cpp">BarSeries {
    HBarModelMapper {
        model: myCustomModel // QAbstractItemModel derived implementation
        firstBarSetRow: 1
        lastBarSetRow: 3
        firstColumn: 1
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="columnCount-prop">
<db:title>columnCount : int</db:title>
<db:para>Defines the number of columns of the model that are mapped as the data for QAbstractBarSeries. The default value is -1 (count limited by the number of columns in the model)</db:para>
</db:section>
<db:section xml:id="firstBarSetRow-prop">
<db:title>firstBarSetRow : int</db:title>
<db:para>Defines which column of the model is used as the data source for the first bar set. The default value is -1 (invalid mapping).</db:para>
</db:section>
<db:section xml:id="firstColumn-prop">
<db:title>firstColumn : int</db:title>
<db:para>Defines which column of the model contains the first values of the QBarSets in the series. The default value is 0.</db:para>
</db:section>
<db:section xml:id="lastBarSetRow-prop">
<db:title>lastBarSetRow : int</db:title>
<db:para>Defines which column of the model is used as the data source for the last bar set. The default value is -1 (invalid mapping).</db:para>
</db:section>
<db:section xml:id="model-prop">
<db:title>model : SomeModel</db:title>
<db:para>The <db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link> based model that is used by the mapper. You need to implement the model and expose it to QML. Note: the model has to support adding/removing rows/columns and modifying the data of the cells.</db:para>
</db:section>
<db:section xml:id="series-prop">
<db:title>series : AbstractBarSeries</db:title>
<db:para>Defines the <db:link xlink:href="qml-qtcharts-abstractbarseries.xml">AbstractBarSeries</db:link> based object that is used by the mapper. All the data in the series is discarded when it is set to the mapper. When new series is specified the old series is disconnected (it preserves its data).</db:para>
</db:section>
</db:section>
</db:article>
