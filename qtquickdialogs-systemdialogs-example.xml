<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick System Dialog Examples</db:title>
<db:productname>QtQuickDialogs</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Dialogs Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This example demonstrates the system dialog types in QML.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/systemdialogs-example.jpg"/>
</db:imageobject>
</db:mediaobject>
<db:para>This example demonstrates the system dialogs in the <db:link xlink:href="qtquickdialogs-index.xml">Qt Quick Dialogs</db:link> module. The appearance and behavior is platform-dependent.</db:para>
<db:para>A <db:link xlink:href="qml-qtquick-dialogs-filedialog.xml">FileDialog</db:link> is used to choose a single file, multiple files or a single directory, depending on how it is configured.</db:para>
<db:programlisting language="qml">FileDialog {
    id: fileDialog
    visible: fileDialogVisible.checked
    modality: fileDialogModal.checked ? Qt.WindowModal : Qt.NonModal
    title: fileDialogSelectFolder.checked ? &quot;Choose a folder&quot; :
        (fileDialogSelectMultiple.checked ? &quot;Choose some files&quot; : &quot;Choose a file&quot;)
    selectExisting: fileDialogSelectExisting.checked
    selectMultiple: fileDialogSelectMultiple.checked
    selectFolder: fileDialogSelectFolder.checked
    nameFilters: [ &quot;Image files (*.png *.jpg)&quot;, &quot;All files (*)&quot; ]
    selectedNameFilter: &quot;All files (*)&quot;
    sidebarVisible: fileDialogSidebarVisible.checked
    onAccepted: {
        console.log(&quot;Accepted: &quot; + fileUrls)
        if (fileDialogOpenFiles.checked)
            for (var i = 0; i &amp;lt; fileUrls.length; ++i)
                Qt.openUrlExternally(fileUrls[i])
    }
    onRejected: { console.log(&quot;Rejected&quot;) }
}
</db:programlisting>
<db:para>A <db:link xlink:href="qml-qtquick-dialogs-colordialog.xml">ColorDialog</db:link> is used to choose a color, with or without alpha (transparency) depending on how it is configured.</db:para>
<db:programlisting language="qml">ColorDialog {
    id: colorDialog
    visible: colorDialogVisible.checked
    modality: colorDialogModal.checked ? Qt.WindowModal : Qt.NonModal
    title: &quot;Choose a color&quot;
    color: &quot;green&quot;
    showAlphaChannel: colorDialogAlpha.checked
    onAccepted: { console.log(&quot;Accepted: &quot; + color) }
    onRejected: { console.log(&quot;Rejected&quot;) }
}
</db:programlisting>
<db:para>The example can be built as a standalone executable, but each type of dialog is demonstrated in a separate QML file which can also be run separately with qmlscene.</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="systemdialogs/ColorDialogs.qml">systemdialogs/ColorDialogs.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="systemdialogs/CustomDialogs.qml">systemdialogs/CustomDialogs.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="systemdialogs/FileDialogs.qml">systemdialogs/FileDialogs.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="systemdialogs/FontDialogs.qml">systemdialogs/FontDialogs.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="systemdialogs/MessageDialogs.qml">systemdialogs/MessageDialogs.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="systemdialogs/main.cpp">systemdialogs/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="systemdialogs/systemdialogs.pro">systemdialogs/systemdialogs.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="systemdialogs/systemdialogs.qml">systemdialogs/systemdialogs.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="systemdialogs/systemdialogs.qrc">systemdialogs/systemdialogs.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
