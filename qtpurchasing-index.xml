<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Purchasing</db:title>
<db:productname>QtPurchasing</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Purchasing Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A cross-platform library to facilitate in-app purchases in Qt and Qt Quick application.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt Purchasing is an add-on library that enables Qt applications to support in-app purchases. It is a cross-platform library that currently supports purchases made to the Mac App Store on OS X, App Store on iOS, and Google Play on Android.</db:para>
<db:section xml:id="in-app-purchases">
<db:title>In-App Purchases</db:title>
<db:para>In-app purchases are a way to monetize an application. These purchases are made from inside the application and can include anything from unlocking content to virtual items. The Qt Purchasing API is built on the system APIs for in-app purchases, which means the purchase process is more familiar to the user, and the information already stored by the platform (such as credit card information) can be used to simplify the purchase process.</db:para>
</db:section>
<db:section xml:id="getting-started">
<db:title>Getting Started</db:title>
<db:para>Qt Purchasing provides C++ classes and QML types to access information about in-app products registered in the external store on the current platform, as well as to request purchases for those products.</db:para>
<db:section xml:id="the-store">
<db:title>The Store</db:title>
<db:para>The in-app products must be registered in the target stores, before they can be queried or purchased in an application. We recommend using the same identifiers for the products in each store, as it simplifies the code to query and purchase the products.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtpurchasing-googleplay.xml">Registering Products in Google Play</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtpurchasing-appstore.xml">Registering Products in App Store</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtpurchasing-windowsstore.xml">Registering Products in Windows Store</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="writing-the-code">
<db:title>Writing the Code</db:title>
<db:para>Depending on what fits best with the application, you can choose to use either C++ or QML to support in-app purchasing. If most of the user interface is written in QML, we recommend that you use the QML types, which provide a simple and declarative point of access for the products in the store.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtpurchasing-gettingstarted-qml.xml">Getting Started with Qt Purchasing in QML</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtpurchasing-gettingstarted-cpp.xml">Getting started with Qt Purchasing in C++</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:para>Take a look at the <db:link xlink:href="qtpurchasing-examples.xml">Qt Purchasing Examples</db:link> for a demonstration on how the APIs can be used in applications.</db:para>
</db:section>
<db:section xml:id="licenses-and-attributions">
<db:title>Licenses and Attributions</db:title>
<db:para>Qt Purchasing is available under commercial licenses from <db:link xlink:href="http://www.qt.io/about-us/">The Qt Company</db:link>. In addition, it is available under the <db:link xlink:href="http://www.gnu.org/licenses/lgpl-3.0.html">GNU Lesser General Public License, version 3</db:link>. See <db:link xlink:href="licensing.xml">Qt Licensing</db:link> for further details.</db:para>
<db:para>Furthermore Qt Purchasing on Android contains third party modules under the following permissive licenses:</db:para>
<db:variablelist role="groupsbymodule attributions-qtpurchasing">
<db:varlistentry>
<db:term><db:link xlink:href="qtpurchasing-attribution-base64decoder.xml" xlink:role="page">Base64 Decoder</db:link></db:term>
<db:listitem>
<db:para>Apache License 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtpurchasing-attribution-inappservice.xml" xlink:role="page">In-app billing service</db:link></db:term>
<db:listitem>
<db:para>Apache License 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtpurchasing-attribution-pkeyverify.xml" xlink:role="page">Public Key Verification</db:link></db:term>
<db:listitem>
<db:para>Apache License 2.0</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="api-reference">
<db:title>API Reference</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtpurchasing-qmlmodule.xml">Qt Purchasing QML Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtpurchasing-module.xml">Qt Purchasing C++ Classes</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
