<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QPdfOutputIntent Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This class was introduced in Qt 6.8.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPdfOutputIntent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QPdfOutputIntent is part of <db:simplelist><db:member><db:link xlink:href="painting.xml">Painting Classes</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qpdfoutputintent.xml">QPdfOutputIntent</db:link> class contains metadata that characterize the printing condition for which painting data has been prepared when generating a PDF file.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfwriter.xml">QPdfWriter</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QPdfOutputIntent">
<db:title>QPdfOutputIntent::QPdfOutputIntent()</db:title>
<db:para>Constructs a new PDF output intent.</db:para>
</db:section>
<db:section xml:id="QPdfOutputIntent-2">
<db:title>QPdfOutputIntent::QPdfOutputIntent(const QPdfOutputIntent &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a copy of the output intent <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="QPdfOutputIntent-1">
<db:title>[noexcept] QPdfOutputIntent::QPdfOutputIntent(QPdfOutputIntent &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a <db:link xlink:href="qpdfoutputintent.xml">QPdfOutputIntent</db:link> object by moving from <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QPdfOutputIntent">
<db:title>[noexcept] QPdfOutputIntent::~QPdfOutputIntent()</db:title>
<db:para>Destroys this output intent.</db:para>
</db:section>
<db:section xml:id="outputCondition">
<db:title>QString QPdfOutputIntent::outputCondition() const</db:title>
<db:para>Returns the human-readable output condition.</db:para>
<db:para>This is a string that concisely identifies the characterized printing condition in a form that will be meaningful to a human operator.</db:para>
<db:para>The default output condition is <db:code>sRGB IEC61966 v2.1 with black scaling</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfoutputintent.xml#setOutputCondition">setOutputCondition</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="outputConditionIdentifier">
<db:title>QString QPdfOutputIntent::outputConditionIdentifier() const</db:title>
<db:para>Returns the identifier of the output condition.</db:para>
<db:para>If a registry name is provided, then this identifier should should match the reference name of an entry in that registry.</db:para>
<db:para>The default identifier is <db:code>sRGB_IEC61966-2-1_black_scaled</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfoutputintent.xml#setOutputConditionIdentifier">setOutputConditionIdentifier</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="outputProfile">
<db:title>QColorSpace QPdfOutputIntent::outputProfile() const</db:title>
<db:para>Returns the output device profile.</db:para>
<db:para>The default profile is the sRGB v2 profile available from the <db:link xlink:href="https://www.color.org/srgbprofiles.xalter#v2">International Color Consortium</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfoutputintent.xml#setOutputProfile">setOutputProfile</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="registryName">
<db:title>QUrl QPdfOutputIntent::registryName() const</db:title>
<db:para>Returns the URL of a characterization registry for the intended printing condition.</db:para>
<db:para>The default registry is <db:code>http://www.color.org</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfoutputintent.xml#setRegistryName">setRegistryName</db:link>()</db:member>
<db:member><db:link xlink:href="qpdfoutputintent.xml#setOutputConditionIdentifier">setOutputConditionIdentifier</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setOutputCondition">
<db:title>void QPdfOutputIntent::setOutputCondition(const QString &amp;<db:emphasis>condition</db:emphasis>)</db:title>
<db:para>Sets the human-readable output condition to <db:code role="parameter">condition</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfoutputintent.xml#outputCondition">outputCondition</db:link>()</db:member>
<db:member><db:link xlink:href="qpdfoutputintent.xml#setOutputConditionIdentifier">setOutputConditionIdentifier</db:link>()</db:member>
<db:member><db:link xlink:href="qpdfoutputintent.xml#setRegistryName">setRegistryName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setOutputConditionIdentifier">
<db:title>void QPdfOutputIntent::setOutputConditionIdentifier(const QString &amp;<db:emphasis>identifier</db:emphasis>)</db:title>
<db:para>Sets the identifier of the output condition to <db:code role="parameter">identifier</db:code>.</db:para>
<db:para>If a registry name is provided, then this identifier should should match the reference name of an entry in that registry.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfoutputintent.xml#outputConditionIdentifier">outputConditionIdentifier</db:link>()</db:member>
<db:member><db:link xlink:href="qpdfoutputintent.xml#setOutputCondition">setOutputCondition</db:link>()</db:member>
<db:member><db:link xlink:href="qpdfoutputintent.xml#setRegistryName">setRegistryName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setOutputProfile">
<db:title>void QPdfOutputIntent::setOutputProfile(const QColorSpace &amp;<db:emphasis>profile</db:emphasis>)</db:title>
<db:para>Sets the output device profile to <db:code role="parameter">profile</db:code>.</db:para>
<db:note>
<db:para>PDF/X-4 requires all the color specifications in the document to match the same colorspace of <db:code role="parameter">profile</db:code>. It is the application's responsibility to ensure this is the case.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfoutputintent.xml#outputProfile">outputProfile</db:link>()</db:member>
<db:member><db:link xlink:href="qcolorspace.xml#fromIccProfile">QColorSpace::fromIccProfile</db:link></db:member>
<db:member><db:link xlink:href="qpdfwriter.xml#setColorModel">QPdfWriter::setColorModel</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setRegistryName">
<db:title>void QPdfOutputIntent::setRegistryName(const QUrl &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Sets the URL of the characterization registry to <db:code role="parameter">name</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfoutputintent.xml#registryName">registryName</db:link>()</db:member>
<db:member><db:link xlink:href="qpdfoutputintent.xml#setOutputConditionIdentifier">setOutputConditionIdentifier</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="swap">
<db:title>[noexcept] void QPdfOutputIntent::swap(QPdfOutputIntent &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps this output intent with <db:code role="parameter">other</db:code>. This operation is very fast and never fails.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>[noexcept] QPdfOutputIntent &amp;QPdfOutputIntent::operator=(QPdfOutputIntent &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Move-assigns the output intent <db:code role="parameter">other</db:code> over this intent.</db:para>
</db:section>
<db:section xml:id="operator-eq-1">
<db:title>QPdfOutputIntent &amp;QPdfOutputIntent::operator=(const QPdfOutputIntent &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns the output intent <db:code role="parameter">other</db:code> over this intent.</db:para>
</db:section>
</db:section>
</db:article>
