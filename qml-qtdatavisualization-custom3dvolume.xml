<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Custom3DVolume QML Type</db:title>
<db:productname>QtDataVis3D</db:productname>
<db:edition>Qt Data Visualization | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Data Visualization Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Adds a volume rendered object to a graph.</db:para>
<db:para>This type was introduced in QtDataVisualization 1.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtDataVisualization 1.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtDataVisualization 1.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtdatavisualization-custom3ditem.xml">Custom3DItem</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In C++:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qcustom3dvolume-qtdatavis.xml">QCustom3DVolume</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Custom3DVolume is part of <db:simplelist><db:member>datavisualization_qml</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A volume rendered object is a box with a 3D texture. Three slice planes are supported for the volume, one along each main axis of the volume.</db:para>
<db:para>Rendering volume objects is very performance intensive, especially when the volume is largely transparent, as the contents of the volume are ray-traced. The performance scales nearly linearly with the amount of pixels that the volume occupies on the screen, so showing the volume in a smaller view or limiting the zoom level of the graph are easy ways to improve performance. Similarly, the volume texture dimensions have a large impact on performance. If the frame rate is more important than pixel-perfect rendering of the volume contents, consider turning the high definition shader off by setting the <db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#useHighDefShader-prop">useHighDefShader</db:link> property to <db:code>false</db:code>.</db:para>
<db:note>
<db:para>Filling in the volume data would not typically be efficient or practical from pure QML, so properties directly related to that are not fully supported from QML. Create a hybrid QML/C++ application if you want to use volume objects with a Qt Quick UI.</db:para>
</db:note>
<db:note>
<db:para>Volumetric objects are only supported with orthographic projection.</db:para>
</db:note>
<db:note>
<db:para>Volumetric objects utilize 3D textures, which are not supported in OpenGL ES2 environments.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#orthoProjection-prop">AbstractGraph3D::orthoProjection</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#useHighDefShader-prop">useHighDefShader</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="alphaMultiplier-prop">
<db:title>alphaMultiplier : real</db:title>
<db:para>The alpha value of every texel of the volume texture is multiplied with this value at the render time. This can be used to introduce uniform transparency to the volume. If <db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#preserveOpacity-prop">preserveOpacity</db:link> is <db:code>true</db:code>, only texels with at least some transparency to begin with are affected, and fully opaque texels are not affected. The value must not be negative. Defaults to <db:code>1.0</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#preserveOpacity-prop">preserveOpacity</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="drawSliceFrames-prop">
<db:title>drawSliceFrames : bool</db:title>
<db:para>If this property value is <db:code>true</db:code>, the frames of slices indicated by slice index properties will be drawn around the volume. If it is <db:code>false</db:code>, no slice frames will be drawn. Drawing slice frames is independent of drawing slices, so you can show the full volume and still draw the slice frames around it. Defaults to <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#sliceIndexX-prop">sliceIndexX</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#sliceIndexY-prop">sliceIndexY</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#sliceIndexZ-prop">sliceIndexZ</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#drawSlices-prop">drawSlices</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="drawSlices-prop">
<db:title>drawSlices : bool</db:title>
<db:para>If this property value is <db:code>true</db:code>, the slices indicated by slice index properties will be drawn instead of the full volume. If it is <db:code>false</db:code>, the full volume will always be drawn. Defaults to <db:code>false</db:code>.</db:para>
<db:note>
<db:para>The slices are always drawn along the item axes, so if the item is rotated, the slices are rotated as well.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#sliceIndexX-prop">sliceIndexX</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#sliceIndexY-prop">sliceIndexY</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#sliceIndexZ-prop">sliceIndexZ</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="preserveOpacity-prop">
<db:title>preserveOpacity : bool</db:title>
<db:para>If this property value is <db:code>true</db:code>, <db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#alphaMultiplier-prop">alphaMultiplier</db:link> is only applied to texels that already have some transparency. If it is <db:code>false</db:code>, the multiplier is applied to the alpha value of all texels. Defaults to <db:code>true</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#alphaMultiplier-prop">alphaMultiplier</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sliceFrameColor-prop">
<db:title>sliceFrameColor : color</db:title>
<db:para>The color of the slice frame. Transparent slice frame color is not supported.</db:para>
<db:para>Defaults to black.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#drawSliceFrames-prop">drawSliceFrames</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sliceFrameGaps-prop">
<db:title>sliceFrameGaps : vector3d</db:title>
<db:para>The size of the air gap left between the volume itself and the frame in each dimension. The gap can be different on different dimensions. The values are fractions of the volume thickness in the same dimension. The values cannot be negative.</db:para>
<db:para>Defaults to <db:code>vector3d(0.01, 0.01, 0.01)</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#drawSliceFrames-prop">drawSliceFrames</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sliceFrameThicknesses-prop">
<db:title>sliceFrameThicknesses : vector3d</db:title>
<db:para>The thickness of the slice frames for each dimension. The values are fractions of the volume thickness in the same dimension. The values cannot be negative.</db:para>
<db:para>Defaults to <db:code>vector3d(0.01, 0.01, 0.01)</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#drawSliceFrames-prop">drawSliceFrames</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sliceFrameWidths-prop">
<db:title>sliceFrameWidths : vector3d</db:title>
<db:para>The widths of the slice frame. The width can be different on different dimensions, so you can for example omit drawing the frames on certain sides of the volume by setting the value for that dimension to zero. The values are fractions of the volume thickness in the same dimension. The values cannot be negative.</db:para>
<db:para>Defaults to <db:code>vector3d(0.01, 0.01, 0.01)</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#drawSliceFrames-prop">drawSliceFrames</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sliceIndexX-prop">
<db:title>sliceIndexX : int</db:title>
<db:para>The x-dimension index into the texture data indicating which vertical slice to show. Setting any dimension to negative indicates no slice or slice frame for that dimension is drawn. If all dimensions are negative, no slices or slice frames are drawn and the volume is drawn normally. Defaults to <db:code>-1</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcustom3dvolume-qtdatavis.xml#textureData-prop">QCustom3DVolume::textureData</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#drawSlices-prop">drawSlices</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#drawSliceFrames-prop">drawSliceFrames</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sliceIndexY-prop">
<db:title>sliceIndexY : int</db:title>
<db:para>The y-dimension index into the texture data indicating which horizontal slice to show. Setting any dimension to negative indicates no slice or slice frame for that dimension is drawn. If all dimensions are negative, no slices or slice frames are drawn and the volume is drawn normally. Defaults to <db:code>-1</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcustom3dvolume-qtdatavis.xml#textureData-prop">QCustom3DVolume::textureData</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#drawSlices-prop">drawSlices</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#drawSliceFrames-prop">drawSliceFrames</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sliceIndexZ-prop">
<db:title>sliceIndexZ : int</db:title>
<db:para>The z-dimension index into the texture data indicating which vertical slice to show. Setting any dimension to negative indicates no slice or slice frame for that dimension is drawn. If all dimensions are negative, no slices or slice frames are drawn and the volume is drawn normally. Defaults to <db:code>-1</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcustom3dvolume-qtdatavis.xml#textureData-prop">QCustom3DVolume::textureData</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#drawSlices-prop">drawSlices</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3dvolume.xml#drawSliceFrames-prop">drawSliceFrames</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="textureDepth-prop">
<db:title>textureDepth : int</db:title>
<db:para>The depth of the 3D texture defining the volume content in pixels. Defaults to <db:code>0</db:code>.</db:para>
<db:note>
<db:para>Changing this property from QML is not supported, as the texture data cannot be resized accordingly.</db:para>
</db:note>
</db:section>
<db:section xml:id="textureHeight-prop">
<db:title>textureHeight : int</db:title>
<db:para>The height of the 3D texture defining the volume content in pixels. Defaults to <db:code>0</db:code>.</db:para>
<db:note>
<db:para>Changing this property from QML is not supported, as the texture data cannot be resized accordingly.</db:para>
</db:note>
</db:section>
<db:section xml:id="textureWidth-prop">
<db:title>textureWidth : int</db:title>
<db:para>The width of the 3D texture defining the volume content in pixels. Defaults to <db:code>0</db:code>.</db:para>
<db:note>
<db:para>Changing this property from QML is not supported, as the texture data cannot be resized accordingly.</db:para>
</db:note>
</db:section>
<db:section xml:id="useHighDefShader-prop">
<db:title>useHighDefShader : bool</db:title>
<db:para>If this property value is <db:code>true</db:code>, a high definition shader is used to render the volume. If it is <db:code>false</db:code>, a low definition shader is used.</db:para>
<db:para>The high definition shader guarantees that every visible texel of the volume texture is sampled when the volume is rendered. The low definition shader renders only a rough approximation of the volume contents, but at a much higher frame rate. The low definition shader does not guarantee every texel of the volume texture is sampled, so there may be flickering if the volume contains distinct thin features.</db:para>
<db:note>
<db:para>This value does not affect the level of detail when rendering the slices of the volume.</db:para>
</db:note>
<db:para>Defaults to <db:code>true</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
