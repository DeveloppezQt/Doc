<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Examples - Animation</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.4.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This is a collection of QML Animation examples.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names
**     of its contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.0

Rectangle {
    id: window
    width: 320; height: 480; color: &quot;#232323&quot;

    property var easingCurve: [ 0.2, 0.2, 0.13, 0.65, 0.2, 0.8,
                                0.624, 0.98, 0.93, 0.95, 1, 1 ]

    ListModel {
        id: easingTypes
        ListElement { name: &quot;Easing.Linear&quot;; type: Easing.Linear; ballColor: &quot;DarkRed&quot; }
        ListElement { name: &quot;Easing.InQuad&quot;; type: Easing.InQuad; ballColor: &quot;IndianRed&quot; }
        ListElement { name: &quot;Easing.OutQuad&quot;; type: Easing.OutQuad; ballColor: &quot;Salmon&quot; }
        ListElement { name: &quot;Easing.InOutQuad&quot;; type: Easing.InOutQuad; ballColor: &quot;Tomato&quot; }
        ListElement { name: &quot;Easing.OutInQuad&quot;; type: Easing.OutInQuad; ballColor: &quot;DarkOrange&quot; }
        ListElement { name: &quot;Easing.InCubic&quot;; type: Easing.InCubic; ballColor: &quot;Gold&quot; }
        ListElement { name: &quot;Easing.OutCubic&quot;; type: Easing.OutCubic; ballColor: &quot;Yellow&quot; }
        ListElement { name: &quot;Easing.InOutCubic&quot;; type: Easing.InOutCubic; ballColor: &quot;PeachPuff&quot; }
        ListElement { name: &quot;Easing.OutInCubic&quot;; type: Easing.OutInCubic; ballColor: &quot;Thistle&quot; }
        ListElement { name: &quot;Easing.InQuart&quot;; type: Easing.InQuart; ballColor: &quot;Orchid&quot; }
        ListElement { name: &quot;Easing.OutQuart&quot;; type: Easing.OutQuart; ballColor: &quot;Purple&quot; }
        ListElement { name: &quot;Easing.InOutQuart&quot;; type: Easing.InOutQuart; ballColor: &quot;SlateBlue&quot; }
        ListElement { name: &quot;Easing.OutInQuart&quot;; type: Easing.OutInQuart; ballColor: &quot;Chartreuse&quot; }
        ListElement { name: &quot;Easing.InQuint&quot;; type: Easing.InQuint; ballColor: &quot;LimeGreen&quot; }
        ListElement { name: &quot;Easing.OutQuint&quot;; type: Easing.OutQuint; ballColor: &quot;SeaGreen&quot; }
        ListElement { name: &quot;Easing.InOutQuint&quot;; type: Easing.InOutQuint; ballColor: &quot;DarkGreen&quot; }
        ListElement { name: &quot;Easing.OutInQuint&quot;; type: Easing.OutInQuint; ballColor: &quot;Olive&quot; }
        ListElement { name: &quot;Easing.InSine&quot;; type: Easing.InSine; ballColor: &quot;DarkSeaGreen&quot; }
        ListElement { name: &quot;Easing.OutSine&quot;; type: Easing.OutSine; ballColor: &quot;Teal&quot; }
        ListElement { name: &quot;Easing.InOutSine&quot;; type: Easing.InOutSine; ballColor: &quot;Turquoise&quot; }
        ListElement { name: &quot;Easing.OutInSine&quot;; type: Easing.OutInSine; ballColor: &quot;SteelBlue&quot; }
        ListElement { name: &quot;Easing.InExpo&quot;; type: Easing.InExpo; ballColor: &quot;SkyBlue&quot; }
        ListElement { name: &quot;Easing.OutExpo&quot;; type: Easing.OutExpo; ballColor: &quot;RoyalBlue&quot; }
        ListElement { name: &quot;Easing.InOutExpo&quot;; type: Easing.InOutExpo; ballColor: &quot;MediumBlue&quot; }
        ListElement { name: &quot;Easing.OutInExpo&quot;; type: Easing.OutInExpo; ballColor: &quot;MidnightBlue&quot; }
        ListElement { name: &quot;Easing.InCirc&quot;; type: Easing.InCirc; ballColor: &quot;CornSilk&quot; }
        ListElement { name: &quot;Easing.OutCirc&quot;; type: Easing.OutCirc; ballColor: &quot;Bisque&quot; }
        ListElement { name: &quot;Easing.InOutCirc&quot;; type: Easing.InOutCirc; ballColor: &quot;RosyBrown&quot; }
        ListElement { name: &quot;Easing.OutInCirc&quot;; type: Easing.OutInCirc; ballColor: &quot;SandyBrown&quot; }
        ListElement { name: &quot;Easing.InElastic&quot;; type: Easing.InElastic; ballColor: &quot;DarkGoldenRod&quot; }
        ListElement { name: &quot;Easing.OutElastic&quot;; type: Easing.OutElastic; ballColor: &quot;Chocolate&quot; }
        ListElement { name: &quot;Easing.InOutElastic&quot;; type: Easing.InOutElastic; ballColor: &quot;SaddleBrown&quot; }
        ListElement { name: &quot;Easing.OutInElastic&quot;; type: Easing.OutInElastic; ballColor: &quot;Brown&quot; }
        ListElement { name: &quot;Easing.InBack&quot;; type: Easing.InBack; ballColor: &quot;Maroon&quot; }
        ListElement { name: &quot;Easing.OutBack&quot;; type: Easing.OutBack; ballColor: &quot;LavenderBlush&quot; }
        ListElement { name: &quot;Easing.InOutBack&quot;; type: Easing.InOutBack; ballColor: &quot;MistyRose&quot; }
        ListElement { name: &quot;Easing.OutInBack&quot;; type: Easing.OutInBack; ballColor: &quot;Gainsboro&quot; }
        ListElement { name: &quot;Easing.OutBounce&quot;; type: Easing.OutBounce; ballColor: &quot;Silver&quot; }
        ListElement { name: &quot;Easing.InBounce&quot;; type: Easing.InBounce; ballColor: &quot;DimGray&quot; }
        ListElement { name: &quot;Easing.InOutBounce&quot;; type: Easing.InOutBounce; ballColor: &quot;SlateGray&quot; }
        ListElement { name: &quot;Easing.OutInBounce&quot;; type: Easing.OutInBounce; ballColor: &quot;DarkSlateGray&quot; }
        ListElement { name: &quot;Easing.Bezier&quot;; type: Easing.Bezier; ballColor: &quot;Chartreuse&quot;; }
    }

    Component {
        id: delegate

        Item {
            height: 56; width: window.width

            Text { text: name; anchors.centerIn: parent; color: &quot;White&quot; }

            Rectangle {
                id: slot1; color: &quot;#121212&quot;; x: 30; height: 46; width: 46
                border.color: &quot;#343434&quot;; border.width: 1; radius: 12; antialiasing: true
                anchors.verticalCenter: parent.verticalCenter
            }

            Rectangle {
                id: slot2; color: &quot;#121212&quot;; x: window.width - 76; height: 46; width: 46
                border.color: &quot;#343434&quot;; border.width: 1; radius: 12; antialiasing: true
                anchors.verticalCenter: parent.verticalCenter
            }

            Rectangle {
                id: rect; x: 30; color: &quot;#454545&quot;
                border.color: &quot;White&quot;; border.width: 2
                height: 46; width: 46; radius: 12; antialiasing: true
                anchors.verticalCenter: parent.verticalCenter

                MouseArea {
                    onClicked: if (rect.state == '') rect.state = &quot;right&quot;; else rect.state = ''
                    anchors.fill: parent
                    anchors.margins: -5 // Make MouseArea bigger than the rectangle, itself
                }

                states : State {
                    name: &quot;right&quot;
                    PropertyChanges { target: rect; x: window.width - 76; color: ballColor }
                }

                transitions: Transition {
                    NumberAnimation { properties: &quot;x&quot;; easing.type: type; easing.bezierCurve: getBezierCurve(name); duration: 1000 }
                    ColorAnimation { properties: &quot;color&quot;; easing.type: type; easing.bezierCurve: getBezierCurve(name); duration: 1000 }
                }
            }
        }
    }

    Flickable {
        anchors.fill: parent
        contentHeight: layout.height
        Column {
            id: layout
            Repeater { model: easingTypes; delegate: delegate }
        }
    }

    function getBezierCurve(name)
    {
        if (name === &quot;Easing.Bezier&quot;)
            return easingCurve;
        return [];
    }
}

</db:programlisting>
</db:article>
