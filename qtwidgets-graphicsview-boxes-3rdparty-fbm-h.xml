<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Boxes</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Combines advanced OpenGL rendering with the Graphics View framework.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/*****************************************************************

  Prototypes for the fractional Brownian motion algorithm. These
  functions were originally the work of F. Kenton Musgrave.  For
  documentation of the different functions please refer to the book:
  &quot;Texturing and modeling: a procedural approach&quot;
  by David S. Ebert et. al.

******************************************************************/

#ifndef _fbm_h
#define _fbm_h

#include  &lt;math.h&gt;

#ifdef __cplusplus
extern &quot;C&quot; {
#endif

//#define TRUE    1
//#define FALSE   0

typedef struct {
    double x;
    double y;
    double z;
} Vector;

float noise3(float vec[]);
double fBm( Vector point, double H, double lacunarity, double octaves,
            int init );
#endif

#ifdef __cplusplus
}
#endif

</db:programlisting>
</db:article>
