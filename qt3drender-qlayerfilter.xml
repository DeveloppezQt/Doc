<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QLayerFilter Class</db:title>
<db:subtitle>Qt3DRender::QLayerFilter</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Controls layers drawn in a frame graph branch.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QLayerFilter</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-layerfilter.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qframegraphnode.xml" xlink:role="class">Qt3DRender::QFrameGraphNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qt3drender-qlayerfilter.xml">Qt3DRender::QLayerFilter</db:link> can be used to instruct the renderer as to which layer(s) to draw in that branch of the frame graph. <db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link> selects which entities to draw based on the <db:link xlink:href="qt3drender-qlayer.xml">QLayer</db:link> instance(s) added to the <db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link> and as components to <db:link xlink:href="qt3dcore-qentity.xml">Qt3DCore::QEntity</db:link>.</db:para>
<db:para><db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link> can be configured to select or discard entities with a specific <db:link xlink:href="qt3drender-qlayer.xml">QLayer</db:link> depending on the <db:link xlink:href="qt3drender-qlayerfilter.xml#filterMode-prop">filterMode</db:link> property. By default, entities referencing one of the <db:link xlink:href="qt3drender-qlayer.xml">QLayer</db:link> objects that are also being referenced by the <db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link> are selected (<db:link xlink:href="qt3drender-qlayerfilter.xml#FilterMode-enum">AcceptAnyMatchingLayers</db:link>).</db:para>
<db:para>Within the FrameGraph tree, multiple <db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link> nodes can be nested within a branch going from root to a leaf. In that case the filtering will first operate on all entities of the scene using the filtering method specified by the first declared <db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link>. Then the filtered subset of entities will be filtered again based on the filtering method set on the second <db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link> declared. This is then repeated until all <db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link> nodes of the branch have been consumed.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="FilterMode-enum">
<db:title>enum QLayerFilter::FilterMode</db:title>
<db:enumsynopsis>
<db:enumname>FilterMode</db:enumname>
<db:enumitem>
<db:enumidentifier>AcceptAnyMatchingLayers</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AcceptAllMatchingLayers</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DiscardAnyMatchingLayers</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DiscardAllMatchingLayers</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>Specifies the rules for selecting entities to draw.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link></db:emphasis>::AcceptAnyMatchingLayers</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Accept entities that reference one or more <db:link xlink:href="qt3drender-qlayer.xml">QLayer</db:link> objects added to this <db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link>. This is the default</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link></db:emphasis>::AcceptAllMatchingLayers</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Accept entities that reference all the <db:link xlink:href="qt3drender-qlayer.xml">QLayer</db:link> objects added to this <db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link></db:emphasis>::DiscardAnyMatchingLayers</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Discard entities that reference one or more <db:link xlink:href="qt3drender-qlayer.xml">QLayer</db:link> objects added to this <db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link></db:emphasis>::DiscardAllMatchingLayers</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Discard entities that reference all <db:link xlink:href="qt3drender-qlayer.xml">QLayer</db:link> objects added to this <db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="filterMode-prop">
<db:title>filterMode : FilterMode</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>FilterMode</db:type>
<db:varname>filterMode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">filterMode</db:synopsisinfo>
<db:synopsisinfo role="setter">setFilterMode</db:synopsisinfo>
<db:synopsisinfo role="notifier">filterModeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the filter mode specifying the entities to select for drawing.</db:para>
<db:para>The default value is AcceptMatchingLayers.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qlayerfilter.xml#FilterMode-enum">Qt3DRender::QLayerFilter::FilterMode</db:link></db:type> <db:emphasis role="bold">filterMode</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setFilterMode</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qlayerfilter.xml#FilterMode-enum">Qt3DRender::QLayerFilter::FilterMode</db:link></db:type> <db:emphasis>filterMode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">filterModeChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qlayerfilter.xml#FilterMode-enum">Qt3DRender::QLayerFilter::FilterMode</db:link></db:type> <db:emphasis>filterMode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QLayerFilter">
<db:title>[explicit] QLayerFilter::QLayerFilter(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QLayerFilter</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QNode *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QLayerFilter(Qt3DCore::QNode *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>The constructor creates an instance with the specified <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="addLayer">
<db:title>void QLayerFilter::addLayer(Qt3DRender::QLayer *<db:emphasis>layer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addLayer</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QLayer *</db:type>
<db:parameter>layer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addLayer(Qt3DRender::QLayer *layer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Add <db:code role="parameter">layer</db:code> to the current list of layers</db:para>
</db:section>
<db:section xml:id="layers">
<db:title>QList&lt;Qt3DRender::QLayer *&gt; QLayerFilter::layers() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;Qt3DRender::QLayer *&gt;</db:type>
<db:methodname>layers</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;Qt3DRender::QLayer *&gt; layers() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the current list of layers</db:para>
</db:section>
<db:section xml:id="removeLayer">
<db:title>void QLayerFilter::removeLayer(Qt3DRender::QLayer *<db:emphasis>layer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>removeLayer</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QLayer *</db:type>
<db:parameter>layer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void removeLayer(Qt3DRender::QLayer *layer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Remove <db:code role="parameter">layer</db:code> from the current list of layers</db:para>
</db:section>
</db:section>
</db:article>
