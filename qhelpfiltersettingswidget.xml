<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QHelpFilterSettingsWidget Class</db:title>
<db:productname>QtHelp</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Help Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qhelpfiltersettingswidget.xml">QHelpFilterSettingsWidget</db:link> class provides a widget that allows for creating, editing and removing filters.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QHelpFilterSettingsWidget</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Help)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Help)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += help</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qwidget.xml" xlink:role="class">QWidget</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The instance of <db:link xlink:href="qhelpfiltersettingswidget.xml">QHelpFilterSettingsWidget</db:link> may be a part of a preferences dialog. Before showing the dialog, <db:link xlink:href="qhelpfiltersettingswidget.xml#setAvailableComponents">setAvailableComponents</db:link>() and <db:link xlink:href="qhelpfiltersettingswidget.xml#setAvailableVersions">setAvailableVersions</db:link>() should be called, otherwise the filter settings widget will only offer a creation of empty filters, which wouldn't be useful. In addition, <db:link xlink:href="qhelpfiltersettingswidget.xml#readSettings">readSettings</db:link> should also be called to fill up the filter settings widget with the list of filters already stored in the filter engine. The creation of new filters, modifications to existing filters and removal of unneeded filters are handled by the widget automatically. If you want to store the current state of the widget and apply it to the filter engine e.g. after the user clicked the apply button - call <db:link xlink:href="qhelpfiltersettingswidget.xml#applySettings">applySettings</db:link>().</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QHelpFilterSettingsWidget">
<db:title>[explicit] QHelpFilterSettingsWidget::QHelpFilterSettingsWidget(QWidget *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QHelpFilterSettingsWidget</db:methodname>
<db:methodparam>
<db:type>QWidget *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QHelpFilterSettingsWidget(QWidget *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a filter settings widget with <db:code role="parameter">parent</db:code> as parent widget.</db:para>
</db:section>
<db:section xml:id="dtor.QHelpFilterSettingsWidget">
<db:title>[virtual] QHelpFilterSettingsWidget::~QHelpFilterSettingsWidget()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QHelpFilterSettingsWidget</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QHelpFilterSettingsWidget()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the filter settings widget.</db:para>
</db:section>
<db:section xml:id="applySettings">
<db:title>bool QHelpFilterSettingsWidget::applySettings(QHelpFilterEngine *<db:emphasis>filterEngine</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>applySettings</db:methodname>
<db:methodparam>
<db:type>QHelpFilterEngine *</db:type>
<db:parameter>filterEngine</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool applySettings(QHelpFilterEngine *filterEngine) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Writes the filter settings, currently presented in this filter settings widget, to the <db:code role="parameter">filterEngine</db:code>. The old settings stored in the filter engine will be overwritten. Returns <db:code>true</db:code> on success.</db:para>
</db:section>
<db:section xml:id="readSettings">
<db:title>void QHelpFilterSettingsWidget::readSettings(const QHelpFilterEngine *<db:emphasis>filterEngine</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>readSettings</db:methodname>
<db:methodparam>
<db:type>const QHelpFilterEngine *</db:type>
<db:parameter>filterEngine</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void readSettings(const QHelpFilterEngine *filterEngine)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reads the filter settings stored inside <db:code role="parameter">filterEngine</db:code> and sets up this filter settings widget accordingly.</db:para>
</db:section>
<db:section xml:id="setAvailableComponents">
<db:title>void QHelpFilterSettingsWidget::setAvailableComponents(const QStringList &amp;<db:emphasis>components</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setAvailableComponents</db:methodname>
<db:methodparam>
<db:type>const QStringList &amp;</db:type>
<db:parameter>components</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setAvailableComponents(const QStringList &amp;components)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the list of all available components to <db:code role="parameter">components</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhelpfilterengine.xml#availableComponents">QHelpFilterEngine::availableComponents</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setAvailableVersions">
<db:title>void QHelpFilterSettingsWidget::setAvailableVersions(const QList&lt;QVersionNumber&gt; &amp;<db:emphasis>versions</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setAvailableVersions</db:methodname>
<db:methodparam>
<db:type>const QList&lt;QVersionNumber&gt; &amp;</db:type>
<db:parameter>versions</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setAvailableVersions(const QList&lt;QVersionNumber&gt; &amp;versions)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the list of all available version numbers to <db:code role="parameter">versions</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhelpfilterengine.xml#availableVersions">QHelpFilterEngine::availableVersions</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
