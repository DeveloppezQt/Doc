<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ObjectPicker QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qml-qt3d-render-objectpicker.xml">ObjectPicker</db:link> class instantiates a component that can be used to interact with an Entity by a process known as picking.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Render 2.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qobjectpicker.xml">QObjectPicker</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>For every combination of viewport and camera, picking casts a ray through the scene to find entities who's bounding volume intersects the ray. The bounding volume is computed using the values in the attribute buffer specified by the boundingVolumePositionAttribute of the geometry.</db:para>
<db:para>The signals <db:link xlink:href="qml-qt3d-render-objectpicker.xml#pressed-signal">pressed</db:link>(), <db:link xlink:href="qml-qt3d-render-objectpicker.xml#released-signal">released</db:link>(), <db:link xlink:href="qml-qt3d-render-objectpicker.xml#clicked-signal">clicked</db:link>(), <db:link xlink:href="qml-qt3d-render-objectpicker.xml#moved-signal">moved</db:link>(), <db:link xlink:href="qml-qt3d-render-objectpicker.xml#entered-signal">entered</db:link>(), and <db:link xlink:href="qml-qt3d-render-objectpicker.xml#exited-signal">exited</db:link>() are emitted when the bounding volume defined by the pickAttribute property intersects with a ray.</db:para>
<db:para>Most signals carry a <db:link xlink:href="qml-qt3d-render-pickevent.xml">PickEvent</db:link> instance. If <db:link xlink:href="qml-qt3d-render-pickingsettings.xml">PickingSettings</db:link>.pickMode is set to <db:link xlink:href="qml-qt3d-render-pickingsettings.xml">PickingSettings</db:link>.TrianglePicking, the actual type of the pick parameter will be <db:link xlink:href="qml-qt3d-render-picktriangleevent.xml">PickTriangleEvent</db:link>.</db:para>
<db:para>Pick queries are performed on mouse press and mouse release. If drag is enabled, queries also happen on each mouse move while any button is pressed. If hover is enabled, queries happen on every mouse move even if no button is pressed.</db:para>
<db:note>
<db:para>To receive hover events in <db:link xlink:href="qtquick-module.xml">QtQuick</db:link>, the <db:link xlink:href="qml-qt3d-render-objectpicker.xml#hoverEnabled-prop">hoverEnabled</db:link> property of <db:link xlink:href="qml-qtquick-scene3d-scene3d.xml">Scene3D</db:link> must also be set.</db:para>
</db:note>
<db:note>
<db:para>Instances of this component shouldn't be shared, not respecting that condition will most likely result in undefined behavior.</db:para>
</db:note>
<db:note>
<db:para>The camera far plane value affects picking and produces incorrect results due to floating-point precision if it is greater than ~100 000.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt3d-render-pickingsettings.xml">PickingSettings</db:link></db:member>
<db:member><db:link xlink:href="qml-qt3d-core-geometry.xml">Geometry</db:link></db:member>
<db:member><db:link xlink:href="qml-qt3d-core-attribute.xml">Attribute</db:link></db:member>
<db:member><db:link xlink:href="qml-qt3d-render-pickevent.xml">PickEvent</db:link></db:member>
<db:member><db:link xlink:href="qml-qt3d-render-picktriangleevent.xml">PickTriangleEvent</db:link></db:member>
<db:member><db:link xlink:href="qml-qt3d-render-nopicking.xml">NoPicking</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="containsMouse-prop">
<db:title>[read-only] containsMouse : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>containsMouse</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies if the object picker currently contains the mouse</db:para>
</db:section>
<db:section xml:id="dragEnabled-prop">
<db:title>dragEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>dragEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
</db:section>
<db:section xml:id="hoverEnabled-prop">
<db:title>hoverEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>hoverEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies if hover is enabled</db:para>
</db:section>
<db:section xml:id="pressed-prop">
<db:title>[read-only] pressed : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>pressed</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies if the object picker is currently pressed</db:para>
</db:section>
<db:section xml:id="priority-prop">
<db:title>priority : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>priority</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The priority to be used when filtering pick results by priority when <db:link xlink:href="qml-qt3d-render-pickingsettings.xml">PickingSettings</db:link>.pickResultMode is set to <db:link xlink:href="qml-qt3d-render-pickingsettings.xml">PickingSettings</db:link>.PriorityPick.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="clicked-signal">
<db:title>clicked(PickEvent <db:emphasis>pick</db:emphasis>)</db:title>
<db:para>This signal is emitted when the bounding volume defined by the pickAttribute property intersects with a ray on a mouse click. Intersection information are accessible through the <db:code role="parameter">pick</db:code> parameter.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="entered-signal">
<db:title>entered()</db:title>
<db:para>This signal is emitted when the bounding volume defined by the pickAttribute property intersects with a ray on the mouse entering the volume.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onEntered</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="exited-signal">
<db:title>exited()</db:title>
<db:para>This signal is emitted when the bounding volume defined by the pickAttribute property intersects with a ray on the ray exiting the volume.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onExited</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="moved-signal">
<db:title>moved(PickEvent <db:emphasis>pick</db:emphasis>)</db:title>
<db:para>This signal is emitted when the bounding volume defined by the pickAttribute property intersects with a ray on a mouse move with a button pressed. Intersection information are accessible through the <db:code role="parameter">pick</db:code> parameter.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onMoved</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="pressed-signal">
<db:title>pressed(PickEvent <db:emphasis>pick</db:emphasis>)</db:title>
<db:para>This signal is emitted when the bounding volume defined by the pickAttribute property intersects with a ray on a mouse press. Intersection information are accessible through the <db:code role="parameter">pick</db:code> parameter.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPressed</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="released-signal">
<db:title>released(PickEvent <db:emphasis>pick</db:emphasis>)</db:title>
<db:para>This signal is emitted when the bounding volume defined by the pickAttribute property intersects with a ray on a mouse release. Intersection information are accessible through the <db:code role="parameter">pick</db:code> parameter.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onReleased</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
