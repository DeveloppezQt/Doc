<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Sensors - QML Example</db:title>
<db:productname>QtSensors</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Sensors Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qtsensors-qmlmodule.xml">QtSensors</db:link> - QML example demonstrates the QML sensors types in the <db:link xlink:href="qtsensors-qmlmodule.xml">QtSensors</db:link> import.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qmlqtsensors.png"/>
</db:imageobject>
</db:mediaobject>
<db:section xml:id="qt-sensors-in-qml">
<db:title>Qt Sensors in QML</db:title>
<db:para>To write a QML application that will use the QML sensors types in the <db:link xlink:href="qtsensors-qmlmodule.xml">QtSensors</db:link> import you need to to the following steps:</db:para>
<db:para>Import the <db:link xlink:href="qtsensors-qmlmodule.xml">QtSensors</db:link> declarative plugin:</db:para>
<db:programlisting language="qml">import QtSensors
</db:programlisting>
<db:para>Add the Sensor QML types into your qml file.</db:para>
<db:para>In this example we use the <db:link xlink:href="qml-qtsensors-tiltsensor.xml">TiltSensor</db:link>:</db:para>
<db:programlisting language="qml">TiltSensor {
    id: tilt
    active: false
}
</db:programlisting>
<db:para>The Tilt-, AmbientLight- and the Proximity QML sensor types have the 'enabled' property in common. To start or stop the sensor set this property to true or false.</db:para>
<db:programlisting language="qml">tilt.active = (tiltStart.text === &quot;Start&quot;);
</db:programlisting>
<db:para>Reading the data can be done for each sensor type like following:</db:para>
<db:para><db:link xlink:href="qml-qtsensors-tiltsensor.xml">TiltSensor</db:link></db:para>
<db:programlisting language="qml">text: &quot;X Rotation: &quot; + (tilt.reading ? tilt.reading.xRotation.toFixed(2) + &quot;°&quot; : &quot;Unknown&quot;)
text: &quot;Y Rotation: &quot; + (tilt.reading ? tilt.reading.yRotation.toFixed(2) + &quot;°&quot; : &quot;Unknown&quot;)
</db:programlisting>
<db:para><db:link xlink:href="qml-qtsensors-ambientlightsensor.xml">AmbientLightSensor</db:link></db:para>
<db:programlisting language="qml">onReadingChanged: {
    if (reading.lightLevel == AmbientLightReading.Dark)
        ambientlighttext.text = &quot;Ambient light: Dark&quot;;
    else if (reading.lightLevel == AmbientLightReading.Twilight)
        ambientlighttext.text = &quot;Ambient light: Twilight&quot;;
    else if (reading.lightLevel == AmbientLightReading.Light)
        ambientlighttext.text = &quot;Ambient light: Light&quot;;
    else if (reading.lightLevel == AmbientLightReading.Bright)
        ambientlighttext.text = &quot;Ambient light: Bright&quot;;
    else if (reading.lightLevel == AmbientLightReading.Sunny)
        ambientlighttext.text = &quot;Ambient light: Sunny&quot;;
    else
        ambientlighttext.text = &quot;Ambient light: Unknown&quot;;
}
</db:programlisting>
<db:para><db:link xlink:href="qml-qtsensors-proximitysensor.xml">ProximitySensor</db:link></db:para>
<db:programlisting language="qml">text: &quot;Proximity: &quot; +
      (proxi.active ? (proxi.reading.near ? &quot;Near&quot; : &quot;Far&quot;) : &quot;Unknown&quot;)
</db:programlisting>
</db:section>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtsensors.git/tree/examples/sensors/qmlqtsensors?h=6.4">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
