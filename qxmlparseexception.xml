<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QXmlParseException Class</db:title>
<db:productname>QtXml</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt XML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qxmlparseexception.xml">QXmlParseException</db:link> class is used to report errors with the <db:link xlink:href="qxmlerrorhandler.xml">QXmlErrorHandler</db:link> interface.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QXmlParseException</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QXmlParseException is part of <db:simplelist><db:member><db:link xlink:href="xml-tools.xml">XML Classes</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The XML subsystem constructs an instance of this class when it detects an error. You can retrieve the place where the error occurred using <db:link xlink:href="qxmlparseexception.xml#systemId">systemId</db:link>(), <db:link xlink:href="qxmlparseexception.xml#publicId">publicId</db:link>(), <db:link xlink:href="qxmlparseexception.xml#lineNumber">lineNumber</db:link>() and <db:link xlink:href="qxmlparseexception.xml#columnNumber">columnNumber</db:link>(), along with the error <db:link xlink:href="qxmlparseexception.xml#message">message</db:link>(). The possible error messages are:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>&quot;no error occurred&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;error triggered by consumer&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;unexpected end of file&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;more than one document type definition&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;error occurred while parsing element&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;tag mismatch&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;error occurred while parsing content&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;unexpected character&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;invalid name for processing instruction&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;version expected while reading the XML declaration&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;wrong value for standalone declaration&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;encoding declaration or standalone declaration expected while reading the XML declaration&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;standalone declaration expected while reading the XML declaration&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;error occurred while parsing document type definition&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;letter is expected&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;error occurred while parsing comment&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;error occurred while parsing reference&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;internal general entity reference not allowed in DTD&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;external parsed general entity reference not allowed in attribute value&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;external parsed general entity reference not allowed in DTD&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;unparsed entity reference n wrong context&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;recursive entities&quot;</db:para>
</db:listitem>
<db:listitem>
<db:para>&quot;error in the text declaration of an external entity&quot;</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Note that, if you want to display these error messages to your application's users, they will be displayed in English unless they are explicitly translated.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qxmlerrorhandler.xml">QXmlErrorHandler</db:link></db:member>
<db:member><db:link xlink:href="qxmlreader.xml">QXmlReader</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QXmlParseException-1">
<db:title>[explicit] QXmlParseException::QXmlParseException(const QString &amp;<db:emphasis>name</db:emphasis> = QString(), int <db:emphasis>c</db:emphasis> = -1, int <db:emphasis>l</db:emphasis> = -1, const QString &amp;<db:emphasis>p</db:emphasis> = QString(), const QString &amp;<db:emphasis>s</db:emphasis> = QString())</db:title>
<db:para>Constructs a parse exception with the error string <db:code role="parameter">name</db:code> for column <db:code role="parameter">c</db:code> and line <db:code role="parameter">l</db:code> for the public identifier <db:code role="parameter">p</db:code> and the system identifier <db:code role="parameter">s</db:code>.</db:para>
</db:section>
<db:section xml:id="QXmlParseException">
<db:title>QXmlParseException::QXmlParseException(const QXmlParseException &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Creates a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QXmlParseException">
<db:title>[noexcept] QXmlParseException::~QXmlParseException()</db:title>
<db:para>Destroys the <db:link xlink:href="qxmlparseexception.xml">QXmlParseException</db:link>.</db:para>
</db:section>
<db:section xml:id="columnNumber">
<db:title>int QXmlParseException::columnNumber() const</db:title>
<db:para>Returns the column number where the error occurred.</db:para>
</db:section>
<db:section xml:id="lineNumber">
<db:title>int QXmlParseException::lineNumber() const</db:title>
<db:para>Returns the line number where the error occurred.</db:para>
</db:section>
<db:section xml:id="message">
<db:title>QString QXmlParseException::message() const</db:title>
<db:para>Returns the error message.</db:para>
</db:section>
<db:section xml:id="publicId">
<db:title>QString QXmlParseException::publicId() const</db:title>
<db:para>Returns the public identifier where the error occurred.</db:para>
</db:section>
<db:section xml:id="systemId">
<db:title>QString QXmlParseException::systemId() const</db:title>
<db:para>Returns the system identifier where the error occurred.</db:para>
</db:section>
</db:section>
</db:article>
