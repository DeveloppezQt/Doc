<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt SCXML Media Player QML Example (C++ Data Model)</db:title>
<db:productname>QtScxml</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Scxml Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Sends data to and receives it from a C++ data model.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!--
/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QtScxml module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/
--&gt;
&lt;!-- enable-qt-mode: yes --&gt;
&lt;scxml
    xmlns=&quot;http://www.w3.org/2005/07/scxml&quot;
    version=&quot;1.0&quot;
    name=&quot;MediaPlayerStateMachine&quot;
    initial=&quot;stopped&quot;
    datamodel=&quot;cplusplus:TheDataModel:thedatamodel.h&quot;
&gt;
    &lt;state id=&quot;stopped&quot;&gt;
        &lt;transition event=&quot;tap&quot; cond=&quot;isValidMedia()&quot; target=&quot;playing&quot;/&gt;
    &lt;/state&gt;

    &lt;state id=&quot;playing&quot;&gt;
        &lt;onentry&gt;
            &lt;script&gt;
                media = eventData().value(QStringLiteral(&quot;media&quot;)).toString();
            &lt;/script&gt;
            &lt;send type=&quot;qt:signal&quot; event=&quot;playbackStarted&quot;&gt;
                &lt;param name=&quot;media&quot; expr=&quot;media&quot;/&gt;
            &lt;/send&gt;
        &lt;/onentry&gt;

        &lt;onexit&gt;
            &lt;send type=&quot;qt:signal&quot; event=&quot;playbackStopped&quot;&gt;
                &lt;param name=&quot;media&quot; expr=&quot;media&quot;/&gt;
            &lt;/send&gt;
        &lt;/onexit&gt;

        &lt;transition event=&quot;tap&quot; cond=&quot;!isValidMedia() || media == eventData().value(QStringLiteral(&quot;media&quot;))&quot; target=&quot;stopped&quot;/&gt;
        &lt;transition event=&quot;tap&quot; cond=&quot;isValidMedia() &amp;amp;&amp;amp; media != eventData().value(QStringLiteral(&quot;media&quot;))&quot; target=&quot;playing&quot;/&gt;
    &lt;/state&gt;
&lt;/scxml&gt;

</db:programlisting>
</db:article>
