<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ForwardRenderer QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qml-qt3d-extras-forwardrenderer.xml">ForwardRenderer</db:link> provides a default <db:link xlink:href="qt3drender-framegraph.xml">FrameGraph</db:link> implementation of a forward renderer.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Extras 2.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dextras-qforwardrenderer.xml">QForwardRenderer</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Forward rendering is what OpenGL traditionally uses. It renders directly to the backbuffer one object at a time shading each one as it goes.</db:para>
<db:para><db:link xlink:href="qml-qt3d-extras-forwardrenderer.xml">ForwardRenderer</db:link> is a single leaf <db:link xlink:href="qt3drender-framegraph.xml">FrameGraph</db:link> tree which contains a Viewport, a <db:link xlink:href="qml-qt3d-render-cameraselector.xml">CameraSelector</db:link>, and a <db:link xlink:href="qml-qt3d-render-clearbuffers.xml">ClearBuffers</db:link>. The <db:link xlink:href="qml-qt3d-extras-forwardrenderer.xml">ForwardRenderer</db:link> has a default requirement filter key whose name is &quot;renderingStyle&quot; and value &quot;forward&quot;. If you need to filter out your techniques, you should do so based on that filter key.</db:para>
<db:para>By default the viewport occupies the whole screen and the clear color is white. Frustum culling is also enabled.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="buffersToClear-prop">
<db:title>buffersToClear : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>buffersToClear</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current buffers to be cleared. Default value is ColorDepthBuffer</db:para>
</db:section>
<db:section xml:id="camera-prop">
<db:title>camera : Entity</db:title>
<db:fieldsynopsis>
<db:type>Entity</db:type>
<db:varname>camera</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current camera entity used to render the scene.</db:para>
<db:note>
<db:para>A camera is an Entity that has a <db:link xlink:href="qml-qt3d-render-cameralens.xml">CameraLens</db:link> as one of its components.</db:para>
</db:note>
</db:section>
<db:section xml:id="clearColor-prop">
<db:title>clearColor : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>clearColor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current clear color of the scene. The frame buffer is initialized to the clear color before rendering.</db:para>
</db:section>
<db:section xml:id="externalRenderTargetSize-prop">
<db:title>externalRenderTargetSize : QSize</db:title>
<db:fieldsynopsis>
<db:type>QSize</db:type>
<db:varname>externalRenderTargetSize</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Contains the size of the external render target. External render targets are relevant when rendering does not target a window surface (as set in <db:link xlink:href="qml-qt3d-extras-forwardrenderer.xml#surface-prop">surface</db:link>).</db:para>
</db:section>
<db:section xml:id="frustumCulling-prop">
<db:title>frustumCulling : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>frustumCulling</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Indicates if the renderer applies frustum culling to the scene.</db:para>
</db:section>
<db:section xml:id="gamma-prop">
<db:title>gamma : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>gamma</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the gamma value the renderer applies to the scene.</db:para>
</db:section>
<db:section xml:id="showDebugOverlay-prop">
<db:title>showDebugOverlay : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>showDebugOverlay</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>If true, a debug overlay will be rendered over the scene. It will show detailed information about the runtime rendering state, let the user turn logging on and off, etc.</db:para>
</db:section>
<db:section xml:id="surface-prop">
<db:title>surface : QtObject</db:title>
<db:fieldsynopsis>
<db:type>QtObject</db:type>
<db:varname>surface</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current render surface.</db:para>
</db:section>
<db:section xml:id="viewportRect-prop">
<db:title>viewportRect : rect</db:title>
<db:fieldsynopsis>
<db:type>rect</db:type>
<db:varname>viewportRect</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current normalized viewport rectangle.</db:para>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for ForwardRenderer</db:title>
<db:para><db:emphasis role="bold">The following members of QML type <db:link xlink:href="qml-qt3d-extras-forwardrenderer.xml">ForwardRenderer</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-property-documentation">
<db:title>Obsolete Property Documentation</db:title>
<db:section xml:id="window-prop">
<db:title>window : QtObject</db:title>
<db:fieldsynopsis>
<db:type>QtObject</db:type>
<db:varname>window</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Holds the current render surface.</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
