<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QDnsLookup Class</db:title>
<db:productname>QtNetwork</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Network Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link> class represents a DNS lookup.</db:para>
<db:para>This class was introduced in Qt 5.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDnsLookup</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += network</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QDnsLookup is part of <db:simplelist><db:member><db:link xlink:href="network.xml">Network Programming API</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link> uses the mechanisms provided by the operating system to perform DNS lookups. To perform a lookup you need to specify a <db:link xlink:href="qdnslookup.xml#name-prop">name</db:link> and <db:link xlink:href="qdnslookup.xml#type-prop">type</db:link> then invoke the <db:link xlink:href="qdnslookup.xml#lookup">lookup</db:link>() slot. The <db:link xlink:href="qdnslookup.xml#finished">finished</db:link>() signal will be emitted upon completion.</db:para>
<db:para>For example, you can determine which servers an XMPP chat client should connect to for a given domain with:</db:para>
<db:programlisting language="cpp">void MyObject::lookupServers()
{
    // Create a DNS lookup.
    dns = new QDnsLookup(this);
    connect(dns, SIGNAL(finished()),
            this, SLOT(handleServers()));

    // Find the XMPP servers for gmail.com
    dns-&gt;setType(QDnsLookup::SRV);
    dns-&gt;setName(&quot;_xmpp-client._tcp.gmail.com&quot;);
    dns-&gt;lookup();
}
</db:programlisting>
<db:para>Once the request finishes you can handle the results with:</db:para>
<db:programlisting language="cpp">void MyObject::handleServers()
{
    // Check the lookup succeeded.
    if (dns-&gt;error() != QDnsLookup::NoError) {
        qWarning(&quot;DNS lookup failed&quot;);
        dns-&gt;deleteLater();
        return;
    }

    // Handle the results.
    foreach (const QDnsServiceRecord &amp;record, dns-&gt;serviceRecords()) {
        ...
    }
    dns-&gt;deleteLater();
}
</db:programlisting>
<db:note>
<db:para>If you simply want to find the IP address(es) associated with a host name, or the host name associated with an IP address you should use <db:link xlink:href="qhostinfo.xml">QHostInfo</db:link> instead.</db:para>
</db:note>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Error-enum">
<db:title>enum QDnsLookup::Error</db:title>
<db:para>Indicates all possible error conditions found during the processing of the DNS lookup.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::NoError</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>no error condition.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::ResolverError</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>there was an error initializing the system's DNS resolver.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::OperationCancelledError</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>the lookup was aborted using the <db:link xlink:href="qdnslookup.xml#abort">abort</db:link>() method.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::InvalidRequestError</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>the requested DNS lookup was invalid.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::InvalidReplyError</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>the reply returned by the server was invalid.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::ServerFailureError</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>the server encountered an internal failure while processing the request (SERVFAIL).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::ServerRefusedError</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>the server refused to process the request for security or policy reasons (REFUSED).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::NotFoundError</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>the requested domain name does not exist (NXDOMAIN).</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="Type-enum">
<db:title>enum QDnsLookup::Type</db:title>
<db:para>Indicates the type of DNS lookup that was performed.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::A</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>IPv4 address records.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::AAAA</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
<db:td>
<db:para>IPv6 address records.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::ANY</db:code></db:para>
</db:td>
<db:td><db:code>255</db:code></db:td>
<db:td>
<db:para>any records.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::CNAME</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>canonical name records.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::MX</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>mail exchange records.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::NS</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>name server records.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::PTR</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>pointer records.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::SRV</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td>
<db:para>service records.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:emphasis>::TXT</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>text records.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="error-prop">
<db:title>[read-only] error : const Error</db:title>
<db:para>This property holds the type of error that occurred if the DNS lookup failed, or <db:link xlink:href="qdnslookup.xml#Error-enum">NoError</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qdnslookup.xml#Error-enum">QDnsLookup::Error</db:link></db:type> <db:emphasis role="bold">error</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml#finished">finished</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="errorString-prop">
<db:title>[read-only] errorString : const QString</db:title>
<db:para>This property holds a human-readable description of the error if the DNS lookup failed.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">errorString</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml#finished">finished</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="name-prop">
<db:title>name : QString</db:title>
<db:para>This property holds the name to lookup.</db:para>
<db:note>
<db:para>The name will be encoded using IDNA, which means it's unsuitable for querying SRV records compatible with the DNS-SD specification.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">name</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setName</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>name</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml#nameChanged">nameChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>name</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="nameserver-prop">
<db:title>nameserver : QHostAddress</db:title>
<db:para>This property holds the nameserver to use for DNS lookup.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qhostaddress.xml">QHostAddress</db:link></db:type> <db:emphasis role="bold">nameserver</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setNameserver</db:emphasis>(const <db:type><db:link xlink:href="qhostaddress.xml">QHostAddress</db:link></db:type> &amp;<db:emphasis>nameserver</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">nameserverChanged</db:emphasis>(const <db:type><db:link xlink:href="qhostaddress.xml">QHostAddress</db:link></db:type> &amp;<db:emphasis>nameserver</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="type-prop">
<db:title>type : Type</db:title>
<db:para>This property holds the type of DNS lookup.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qdnslookup.xml#Type-enum">QDnsLookup::Type</db:link></db:type> <db:emphasis role="bold">type</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setType</db:emphasis>(<db:emphasis>QDnsLookup::Type</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qdnslookup.xml#typeChanged">typeChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qdnslookup.xml#Type-enum">QDnsLookup::Type</db:link></db:type> <db:emphasis>type</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QDnsLookup">
<db:title>[explicit] QDnsLookup::QDnsLookup(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a <db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link> object and sets <db:code role="parameter">parent</db:code> as the parent object.</db:para>
<db:para>The <db:link xlink:href="qdnslookup.xml#type-prop">type</db:link> property will default to <db:link xlink:href="qdnslookup.xml#Type-enum">QDnsLookup::A</db:link>.</db:para>
</db:section>
<db:section xml:id="QDnsLookup-1">
<db:title>QDnsLookup::QDnsLookup(QDnsLookup::Type <db:emphasis>type</db:emphasis>, const QString &amp;<db:emphasis>name</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a <db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link> object for the given <db:code role="parameter">type</db:code> and <db:code role="parameter">name</db:code> and sets <db:code role="parameter">parent</db:code> as the parent object.</db:para>
</db:section>
<db:section xml:id="QDnsLookup-2">
<db:title>[since 5.4] QDnsLookup::QDnsLookup(QDnsLookup::Type <db:emphasis>type</db:emphasis>, const QString &amp;<db:emphasis>name</db:emphasis>, const QHostAddress &amp;<db:emphasis>nameserver</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a <db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link> object for the given <db:code role="parameter">type</db:code>, <db:code role="parameter">name</db:code> and <db:code role="parameter">nameserver</db:code> and sets <db:code role="parameter">parent</db:code> as the parent object.</db:para>
<db:para>This function was introduced in Qt 5.4.</db:para>
</db:section>
<db:section xml:id="dtor.QDnsLookup">
<db:title>[virtual noexcept] QDnsLookup::~QDnsLookup()</db:title>
<db:para>Destroys the <db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link> object.</db:para>
<db:para>It is safe to delete a <db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link> object even if it is not finished, you will simply never receive its results.</db:para>
</db:section>
<db:section xml:id="abort">
<db:title>void QDnsLookup::abort()</db:title>
<db:para>Aborts the DNS lookup operation.</db:para>
<db:para>If the lookup is already finished, does nothing.</db:para>
</db:section>
<db:section xml:id="canonicalNameRecords">
<db:title>QList&lt;QDnsDomainNameRecord&gt; QDnsLookup::canonicalNameRecords() const</db:title>
<db:para>Returns the list of canonical name records associated with this lookup.</db:para>
</db:section>
<db:section xml:id="finished">
<db:title>void QDnsLookup::finished()</db:title>
<db:para>This signal is emitted when the reply has finished processing.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qdnslookup.xml#error-prop">error</db:link>. </db:para>
<db:para>Notifier signal for property <db:link xlink:href="qdnslookup.xml#errorString-prop">errorString</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="hostAddressRecords">
<db:title>QList&lt;QDnsHostAddressRecord&gt; QDnsLookup::hostAddressRecords() const</db:title>
<db:para>Returns the list of host address records associated with this lookup.</db:para>
</db:section>
<db:section xml:id="isFinished">
<db:title>bool QDnsLookup::isFinished() const</db:title>
<db:para>Returns whether the reply has finished or was aborted.</db:para>
</db:section>
<db:section xml:id="lookup">
<db:title>void QDnsLookup::lookup()</db:title>
<db:para>Performs the DNS lookup.</db:para>
<db:para>The <db:link xlink:href="qdnslookup.xml#finished">finished</db:link>() signal is emitted upon completion.</db:para>
</db:section>
<db:section xml:id="mailExchangeRecords">
<db:title>QList&lt;QDnsMailExchangeRecord&gt; QDnsLookup::mailExchangeRecords() const</db:title>
<db:para>Returns the list of mail exchange records associated with this lookup.</db:para>
<db:para>The records are sorted according to <db:link xlink:href="http://www.rfc-editor.org/rfc/rfc5321.txt">RFC 5321</db:link>, so if you use them to connect to servers, you should try them in the order they are listed.</db:para>
</db:section>
<db:section xml:id="nameChanged">
<db:title>void QDnsLookup::nameChanged(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:para>This signal is emitted when the lookup <db:link xlink:href="qdnslookup.xml#name-prop">name</db:link> changes. <db:code role="parameter">name</db:code> is the new lookup name.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qdnslookup.xml#name-prop">name</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="nameServerRecords">
<db:title>QList&lt;QDnsDomainNameRecord&gt; QDnsLookup::nameServerRecords() const</db:title>
<db:para>Returns the list of name server records associated with this lookup.</db:para>
</db:section>
<db:section xml:id="pointerRecords">
<db:title>QList&lt;QDnsDomainNameRecord&gt; QDnsLookup::pointerRecords() const</db:title>
<db:para>Returns the list of pointer records associated with this lookup.</db:para>
</db:section>
<db:section xml:id="serviceRecords">
<db:title>QList&lt;QDnsServiceRecord&gt; QDnsLookup::serviceRecords() const</db:title>
<db:para>Returns the list of service records associated with this lookup.</db:para>
<db:para>The records are sorted according to <db:link xlink:href="http://www.rfc-editor.org/rfc/rfc2782.txt">RFC 2782</db:link>, so if you use them to connect to servers, you should try them in the order they are listed.</db:para>
</db:section>
<db:section xml:id="textRecords">
<db:title>QList&lt;QDnsTextRecord&gt; QDnsLookup::textRecords() const</db:title>
<db:para>Returns the list of text records associated with this lookup.</db:para>
</db:section>
<db:section xml:id="typeChanged">
<db:title>void QDnsLookup::typeChanged(QDnsLookup::Type <db:emphasis>type</db:emphasis>)</db:title>
<db:para>This signal is emitted when the lookup <db:link xlink:href="qdnslookup.xml#type-prop">type</db:link> changes. <db:code role="parameter">type</db:code> is the new lookup type.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qdnslookup.xml#type-prop">type</db:link>. </db:para>
</db:note>
</db:section>
</db:section>
</db:article>
