<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSound Class</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qsound.xml">QSound</db:link> class provides a method to play .wav sound files.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSound</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += multimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSound is part of <db:simplelist><db:member>multimedia</db:member><db:member>multimedia_audio</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Qt provides the most commonly required audio operation in GUI applications: asynchronously playing a sound file. This is most easily accomplished using the static <db:link xlink:href="qsound.xml#play-1">play</db:link>() function:</db:para>
<db:programlisting language="cpp">QSound::play(&quot;mysounds/bells.wav&quot;);
</db:programlisting>
<db:para>Alternatively, create a <db:link xlink:href="qsound.xml">QSound</db:link> object from the sound file first and then call the <db:link xlink:href="qsound.xml#play-1">play</db:link>() slot:</db:para>
<db:programlisting language="cpp">QSound bells(&quot;mysounds/bells.wav&quot;);
bells.play();
</db:programlisting>
<db:para>Once created a <db:link xlink:href="qsound.xml">QSound</db:link> object can be queried for its <db:link xlink:href="qsound.xml#fileName">fileName</db:link>() and total number of <db:link xlink:href="qsound.xml#loops">loops</db:link>() (i.e. the number of times the sound will play). The number of repetitions can be altered using the <db:link xlink:href="qsound.xml#setLoops">setLoops</db:link>() function. While playing the sound, the <db:link xlink:href="qsound.xml#loopsRemaining">loopsRemaining</db:link>() function returns the remaining number of repetitions. Use the <db:link xlink:href="qsound.xml#isFinished">isFinished</db:link>() function to determine whether the sound has finished playing.</db:para>
<db:para>Sounds played using a <db:link xlink:href="qsound.xml">QSound</db:link> object may use more memory than the static <db:link xlink:href="qsound.xml#play-1">play</db:link>() function, but it may also play more immediately (depending on the underlying platform audio facilities).</db:para>
<db:para>If you require finer control over playing sounds, consider the <db:link xlink:href="qsoundeffect.xml">QSoundEffect</db:link> or <db:link xlink:href="qaudiooutput.xml">QAudioOutput</db:link> classes.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsoundeffect.xml">QSoundEffect</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Loop-enum">
<db:title>enum QSound::Loop</db:title>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsound.xml">QSound</db:link></db:emphasis>::Infinite</db:code></db:para>
</db:td>
<db:td><db:code>-1</db:code></db:td>
<db:td>
<db:para>Can be used as a parameter to <db:link xlink:href="qsound.xml#setLoops">setLoops</db:link>() to loop infinitely.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSound">
<db:title>[explicit] QSound::QSound(const QString &amp;<db:emphasis>filename</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a <db:link xlink:href="qsound.xml">QSound</db:link> object from the file specified by the given <db:code role="parameter">filename</db:code> and with the given <db:code role="parameter">parent</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsound.xml#play-1">play</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dtor.QSound">
<db:title>[virtual noexcept] QSound::~QSound()</db:title>
<db:para>Destroys this sound object. If the sound is not finished playing, the <db:link xlink:href="qsound.xml#stop">stop</db:link>() function is called before the sound object is destroyed.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsound.xml#stop">stop</db:link>()</db:member>
<db:member><db:link xlink:href="qsound.xml#isFinished">isFinished</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fileName">
<db:title>QString QSound::fileName() const</db:title>
<db:para>Returns the filename associated with this <db:link xlink:href="qsound.xml">QSound</db:link> object.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsound.xml#QSound">QSound</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isFinished">
<db:title>bool QSound::isFinished() const</db:title>
<db:para>Returns true if the sound has finished playing; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="loops">
<db:title>int QSound::loops() const</db:title>
<db:para>Returns the number of times the sound will play. Return value of <db:code>QSound::Infinite</db:code> indicates infinite number of loops</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsound.xml#loopsRemaining">loopsRemaining</db:link>()</db:member>
<db:member><db:link xlink:href="qsound.xml#setLoops">setLoops</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="loopsRemaining">
<db:title>int QSound::loopsRemaining() const</db:title>
<db:para>Returns the remaining number of times the sound will loop (for all positive values this value decreases each time the sound is played). Return value of <db:code>QSound::Infinite</db:code> indicates infinite number of loops</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsound.xml#loops">loops</db:link>()</db:member>
<db:member><db:link xlink:href="qsound.xml#isFinished">isFinished</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="play">
<db:title>[static] void QSound::play(const QString &amp;<db:emphasis>filename</db:emphasis>)</db:title>
<db:para>Plays the sound stored in the file specified by the given <db:code role="parameter">filename</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsound.xml#stop">stop</db:link>()</db:member>
<db:member><db:link xlink:href="qsound.xml#loopsRemaining">loopsRemaining</db:link>()</db:member>
<db:member><db:link xlink:href="qsound.xml#isFinished">isFinished</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="play-1">
<db:title>void QSound::play()</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Starts playing the sound specified by this <db:link xlink:href="qsound.xml">QSound</db:link> object.</db:para>
<db:para>The function returns immediately. Depending on the platform audio facilities, other sounds may stop or be mixed with the new sound. The sound can be played again at any time, possibly mixing or replacing previous plays of the sound.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsound.xml#fileName">fileName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLoops">
<db:title>void QSound::setLoops(int <db:emphasis>number</db:emphasis>)</db:title>
<db:para>Sets the sound to repeat the given <db:code role="parameter">number</db:code> of times when it is played.</db:para>
<db:para>Note that passing the value <db:code>QSound::Infinite</db:code> will cause the sound to loop indefinitely.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsound.xml#loops">loops</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="stop">
<db:title>void QSound::stop()</db:title>
<db:para>Stops the sound playing.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsound.xml#play-1">play</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
