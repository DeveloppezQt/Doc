<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>Boxes</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.2.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Combines advanced OpenGL rendering with the Graphics View framework.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the demonstration applications of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and Digia.  For licensing terms and
** conditions see http://qt.digia.com/licensing.  For further information
** use the contact form at http://qt.digia.com/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 as published by the Free Software
** Foundation and appearing in the file LICENSE.LGPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU Lesser General Public License version 2.1 requirements
** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** In addition, as a special exception, Digia gives you certain additional
** rights.  These rights are described in the Digia Qt LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3.0 as published by the Free Software
** Foundation and appearing in the file LICENSE.GPL included in the
** packaging of this file.  Please review the following information to
** ensure the GNU General Public License version 3.0 requirements will be
** met: http://www.gnu.org/copyleft/gpl.html.
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;glextensions.h&quot;

#define RESOLVE_GL_FUNC(f) ok &amp;= bool((f = (_gl##f) context-&gt;getProcAddress(QLatin1String(&quot;gl&quot; #f))));

bool GLExtensionFunctions::resolve(const QGLContext *context)
{
        bool ok = true;

        RESOLVE_GL_FUNC(GenFramebuffersEXT)
        RESOLVE_GL_FUNC(GenRenderbuffersEXT)
        RESOLVE_GL_FUNC(BindRenderbufferEXT)
        RESOLVE_GL_FUNC(RenderbufferStorageEXT)
        RESOLVE_GL_FUNC(DeleteFramebuffersEXT)
        RESOLVE_GL_FUNC(DeleteRenderbuffersEXT)
        RESOLVE_GL_FUNC(BindFramebufferEXT)
        RESOLVE_GL_FUNC(FramebufferTexture2DEXT)
        RESOLVE_GL_FUNC(FramebufferRenderbufferEXT)
        RESOLVE_GL_FUNC(CheckFramebufferStatusEXT)

        RESOLVE_GL_FUNC(ActiveTexture)
        RESOLVE_GL_FUNC(TexImage3D)

        RESOLVE_GL_FUNC(GenBuffers)
        RESOLVE_GL_FUNC(BindBuffer)
        RESOLVE_GL_FUNC(BufferData)
        RESOLVE_GL_FUNC(DeleteBuffers)
        RESOLVE_GL_FUNC(MapBuffer)
        RESOLVE_GL_FUNC(UnmapBuffer)

        return ok;
}

bool GLExtensionFunctions::fboSupported() {
    return GenFramebuffersEXT
            &amp;&amp; GenRenderbuffersEXT
            &amp;&amp; BindRenderbufferEXT
            &amp;&amp; RenderbufferStorageEXT
            &amp;&amp; DeleteFramebuffersEXT
            &amp;&amp; DeleteRenderbuffersEXT
            &amp;&amp; BindFramebufferEXT
            &amp;&amp; FramebufferTexture2DEXT
            &amp;&amp; FramebufferRenderbufferEXT
            &amp;&amp; CheckFramebufferStatusEXT;
}

bool GLExtensionFunctions::openGL15Supported() {
    return ActiveTexture
            &amp;&amp; TexImage3D
            &amp;&amp; GenBuffers
            &amp;&amp; BindBuffer
            &amp;&amp; BufferData
            &amp;&amp; DeleteBuffers
            &amp;&amp; MapBuffer
            &amp;&amp; UnmapBuffer;
}

#undef RESOLVE_GL_FUNC

</db:programlisting>
</db:article>
