<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QMediaControl Class</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qmediacontrol.xml">QMediaControl</db:link> class provides a base interface for media service controls.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QMediaControl</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += multimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qaudiodecodercontrol.xml" xlink:role="class">QAudioDecoderControl</db:link>, <db:link xlink:href="qaudioencodersettingscontrol.xml" xlink:role="class">QAudioEncoderSettingsControl</db:link>, <db:link xlink:href="qaudioinputselectorcontrol.xml" xlink:role="class">QAudioInputSelectorControl</db:link>, <db:link xlink:href="qaudiooutputselectorcontrol.xml" xlink:role="class">QAudioOutputSelectorControl</db:link>, <db:link xlink:href="qaudiorolecontrol.xml" xlink:role="class">QAudioRoleControl</db:link>, <db:link xlink:href="qcameracapturebufferformatcontrol.xml" xlink:role="class">QCameraCaptureBufferFormatControl</db:link>, <db:link xlink:href="qcameracapturedestinationcontrol.xml" xlink:role="class">QCameraCaptureDestinationControl</db:link>, <db:link xlink:href="qcameracontrol.xml" xlink:role="class">QCameraControl</db:link>, <db:link xlink:href="qcameraexposurecontrol.xml" xlink:role="class">QCameraExposureControl</db:link>, <db:link xlink:href="qcamerafeedbackcontrol.xml" xlink:role="class">QCameraFeedbackControl</db:link>, <db:link xlink:href="qcameraflashcontrol.xml" xlink:role="class">QCameraFlashControl</db:link>, <db:link xlink:href="qcamerafocuscontrol.xml" xlink:role="class">QCameraFocusControl</db:link>, <db:link xlink:href="qcameraimagecapturecontrol.xml" xlink:role="class">QCameraImageCaptureControl</db:link>, <db:link xlink:href="qcameraimageprocessingcontrol.xml" xlink:role="class">QCameraImageProcessingControl</db:link>, <db:link xlink:href="qcamerainfocontrol.xml" xlink:role="class">QCameraInfoControl</db:link>, <db:link xlink:href="qcameralockscontrol.xml" xlink:role="class">QCameraLocksControl</db:link>, <db:link xlink:href="qcameraviewfindersettingscontrol.xml" xlink:role="class">QCameraViewfinderSettingsControl</db:link>, <db:link xlink:href="qcameraviewfindersettingscontrol2.xml" xlink:role="class">QCameraViewfinderSettingsControl2</db:link>, <db:link xlink:href="qcamerazoomcontrol.xml" xlink:role="class">QCameraZoomControl</db:link>, <db:link xlink:href="qimageencodercontrol.xml" xlink:role="class">QImageEncoderControl</db:link>, <db:link xlink:href="qmediaaudioprobecontrol.xml" xlink:role="class">QMediaAudioProbeControl</db:link>, <db:link xlink:href="qmediaavailabilitycontrol.xml" xlink:role="class">QMediaAvailabilityControl</db:link>, <db:link xlink:href="qmediacontainercontrol.xml" xlink:role="class">QMediaContainerControl</db:link>, <db:link xlink:href="qmediagaplessplaybackcontrol.xml" xlink:role="class">QMediaGaplessPlaybackControl</db:link>, <db:link xlink:href="qmedianetworkaccesscontrol.xml" xlink:role="class">QMediaNetworkAccessControl</db:link>, <db:link xlink:href="qmediaplayercontrol.xml" xlink:role="class">QMediaPlayerControl</db:link>, <db:link xlink:href="qmediarecordercontrol.xml" xlink:role="class">QMediaRecorderControl</db:link>, <db:link xlink:href="qmediastreamscontrol.xml" xlink:role="class">QMediaStreamsControl</db:link>, <db:link xlink:href="qmediavideoprobecontrol.xml" xlink:role="class">QMediaVideoProbeControl</db:link>, <db:link xlink:href="qmetadatareadercontrol.xml" xlink:role="class">QMetaDataReaderControl</db:link>, <db:link xlink:href="qmetadatawritercontrol.xml" xlink:role="class">QMetaDataWriterControl</db:link>, <db:link xlink:href="qradiodatacontrol.xml" xlink:role="class">QRadioDataControl</db:link>, <db:link xlink:href="qradiotunercontrol.xml" xlink:role="class">QRadioTunerControl</db:link>, <db:link xlink:href="qvideodeviceselectorcontrol.xml" xlink:role="class">QVideoDeviceSelectorControl</db:link>, <db:link xlink:href="qvideoencodersettingscontrol.xml" xlink:role="class">QVideoEncoderSettingsControl</db:link>, <db:link xlink:href="qvideorenderercontrol.xml" xlink:role="class">QVideoRendererControl</db:link>, <db:link xlink:href="qvideowidgetcontrol.xml" xlink:role="class">QVideoWidgetControl</db:link>, and <db:link xlink:href="qvideowindowcontrol.xml" xlink:role="class">QVideoWindowControl</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QMediaControl is part of <db:simplelist><db:member>multimedia</db:member><db:member>multimedia_control</db:member><db:member>multimedia_core</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Media controls provide an interface to individual features provided by a media service. Most services implement a principal control which exposes the core functionality of the service and a number of optional controls which expose any additional functionality.</db:para>
<db:para>A pointer to a control implemented by a media service can be obtained using the <db:link xlink:href="qmediaservice.xml#requestControl">QMediaService::requestControl</db:link>() member of <db:link xlink:href="qmediaservice.xml">QMediaService</db:link>. If the service doesn't implement a control it will instead return a null pointer.</db:para>
<db:programlisting language="cpp">QMediaPlayerControl *control = qobject_cast&lt;QMediaPlayerControl *&gt;(
        mediaService-&gt;requestControl(&quot;org.qt-project.qt.mediaplayercontrol/5.0&quot;));
</db:programlisting>
<db:para>Alternatively if the IId of the control has been declared using <db:link xlink:href="qmediacontrol.xml#Q_MEDIA_DECLARE_CONTROL">Q_MEDIA_DECLARE_CONTROL</db:link> the template version of <db:link xlink:href="qmediaservice.xml#requestControl">QMediaService::requestControl</db:link>() can be used to request the service without explicitly passing the IId or using qobject_cast().</db:para>
<db:programlisting language="cpp">QMediaPlayerControl *control = mediaService-&gt;requestControl&lt;QMediaPlayerControl *&gt;();
</db:programlisting>
<db:para>Most application code will not interface directly with a media service's controls, instead the <db:link xlink:href="qmediaobject.xml">QMediaObject</db:link> which owns the service acts as an intermediary between one or more controls and the application.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediaservice.xml">QMediaService</db:link></db:member>
<db:member><db:link xlink:href="qmediaobject.xml">QMediaObject</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QMediaControl">
<db:title>[explicit protected] QMediaControl::QMediaControl(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a media control with the given <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QMediaControl">
<db:title>[virtual noexcept] QMediaControl::~QMediaControl()</db:title>
<db:para>Destroys a media control.</db:para>
</db:section>
</db:section>
<db:section xml:id="macro-documentation">
<db:title>Macro Documentation</db:title>
<db:section xml:id="Q_MEDIA_DECLARE_CONTROL">
<db:title>Q_MEDIA_DECLARE_CONTROL(<db:emphasis>Class</db:emphasis>, <db:emphasis>IId</db:emphasis>)</db:title>
<db:para>The Q_MEDIA_DECLARE_CONTROL macro declares an <db:code role="parameter">IId</db:code> for a <db:code role="parameter">Class</db:code> that inherits from <db:link xlink:href="qmediacontrol.xml">QMediaControl</db:link>.</db:para>
<db:para>Declaring an IId for a <db:link xlink:href="qmediacontrol.xml">QMediaControl</db:link> allows an instance of that control to be requested from <db:link xlink:href="qmediaservice.xml#requestControl">QMediaService::requestControl</db:link>() without explicitly passing the IId.</db:para>
<db:programlisting language="cpp">QMediaPlayerControl *control = mediaService-&gt;requestControl&lt;QMediaPlayerControl *&gt;();
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediaservice.xml#requestControl">QMediaService::requestControl</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
