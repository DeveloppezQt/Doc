<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QMessageLogger Class</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qmessagelogger.xml">QMessageLogger</db:link> class generates log messages.</db:para>
<db:para>This class was introduced in Qt 5.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QMessageLogger</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qmessagelogger.xml">QMessageLogger</db:link> is used to generate messages for the Qt logging framework. Usually one uses it through <db:link xlink:href="qtglobal.xml#qDebug">qDebug</db:link>(), <db:link xlink:href="qtglobal.xml#qInfo">qInfo</db:link>(), <db:link xlink:href="qtglobal.xml#qWarning">qWarning</db:link>(), <db:link xlink:href="qtglobal.xml#qCritical">qCritical</db:link>, or <db:link xlink:href="qtglobal.xml#qFatal">qFatal</db:link>() functions, which are actually macros: For example <db:link xlink:href="qtglobal.xml#qDebug">qDebug</db:link>() expands to <db:link xlink:href="qmessagelogger.xml">QMessageLogger</db:link>(__FILE__, __LINE__, <db:link xlink:href="qtglobal.xml#Q_FUNC_INFO">Q_FUNC_INFO</db:link>).<db:link xlink:href="qmessagelogger.xml#debug">debug</db:link>() for debug builds, and <db:link xlink:href="qmessagelogger.xml">QMessageLogger</db:link>(0, 0, 0).<db:link xlink:href="qmessagelogger.xml#debug">debug</db:link>() for release builds.</db:para>
<db:para>One example of direct use is to forward errors that stem from a scripting language, e.g. QML:</db:para>
<db:programlisting language="cpp">    void statusChanged(QDeclarativeComponent::Status status) {
        if (status == QDeclarativeComponent::Error) {
            foreach (const QDeclarativeError &amp;error, component-&gt;errors()) {
                const QByteArray file = error.url().toEncoded();
                QMessageLogger(file.constData(), error.line(), 0).debug() &lt;&lt; error.description();
            }
        }
    }
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmessagelogcontext.xml">QMessageLogContext</db:link></db:member>
<db:member><db:link xlink:href="qtglobal.xml#qDebug">qDebug</db:link>()</db:member>
<db:member><db:link xlink:href="qtglobal.xml#qInfo">qInfo</db:link>()</db:member>
<db:member><db:link xlink:href="qtglobal.xml#qWarning">qWarning</db:link>()</db:member>
<db:member><db:link xlink:href="qtglobal.xml#qCritical">qCritical</db:link>()</db:member>
<db:member><db:link xlink:href="qtglobal.xml#qFatal">qFatal</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="CategoryFunction-typedef">
<db:title>[since 5.3] QMessageLogger::CategoryFunction</db:title>
<db:para>This is a typedef for a pointer to a function with the following signature:</db:para>
<db:programlisting language="cpp">    const QLoggingCategory &amp;category();
</db:programlisting>
<db:para>A function which this signature is generated by <db:link xlink:href="qloggingcategory.xml#Q_DECLARE_LOGGING_CATEGORY">Q_DECLARE_LOGGING_CATEGORY</db:link>, <db:link xlink:href="qloggingcategory.xml#Q_LOGGING_CATEGORY">Q_LOGGING_CATEGORY</db:link>.</db:para>
<db:para>This typedef was introduced in Qt 5.3.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QMessageLogger">
<db:title>QMessageLogger::QMessageLogger()</db:title>
<db:para>Constructs a default <db:link xlink:href="qmessagelogger.xml">QMessageLogger</db:link>. See the other constructors to specify context information.</db:para>
</db:section>
<db:section xml:id="QMessageLogger-1">
<db:title>QMessageLogger::QMessageLogger(const char *<db:emphasis>file</db:emphasis>, int <db:emphasis>line</db:emphasis>, const char *<db:emphasis>function</db:emphasis>)</db:title>
<db:para>Constructs a <db:link xlink:href="qmessagelogger.xml">QMessageLogger</db:link> to record log messages for <db:code role="parameter">file</db:code> at <db:code role="parameter">line</db:code> in <db:code role="parameter">function</db:code>. The is equivalent to <db:link xlink:href="qmessagelogger.xml">QMessageLogger</db:link>(file, line, function, &quot;default&quot;)</db:para>
</db:section>
<db:section xml:id="QMessageLogger-2">
<db:title>QMessageLogger::QMessageLogger(const char *<db:emphasis>file</db:emphasis>, int <db:emphasis>line</db:emphasis>, const char *<db:emphasis>function</db:emphasis>, const char *<db:emphasis>category</db:emphasis>)</db:title>
<db:para>Constructs a <db:link xlink:href="qmessagelogger.xml">QMessageLogger</db:link> to record <db:code role="parameter">category</db:code> messages for <db:code role="parameter">file</db:code> at <db:code role="parameter">line</db:code> in <db:code role="parameter">function</db:code>.</db:para>
</db:section>
<db:section xml:id="critical">
<db:title>QDebug QMessageLogger::critical() const</db:title>
<db:para>Logs a critical message using a <db:link xlink:href="qdebug.xml">QDebug</db:link> stream</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtglobal.xml#qCritical">qCritical</db:link>()</db:member>
<db:member><db:link xlink:href="qdebug.xml">QDebug</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="critical-1">
<db:title>[since 5.3] QDebug QMessageLogger::critical(QMessageLogger::CategoryFunction <db:emphasis>catFunc</db:emphasis>) const</db:title>
<db:para>Logs a critical message into category returned by <db:code role="parameter">catFunc</db:code> using a <db:link xlink:href="qdebug.xml">QDebug</db:link> stream.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCCritical">qCCritical</db:link>()</db:member>
<db:member><db:link xlink:href="qdebug.xml">QDebug</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="critical-2">
<db:title>[since 5.3] QDebug QMessageLogger::critical(const QLoggingCategory &amp;<db:emphasis>cat</db:emphasis>) const</db:title>
<db:para>Logs a critical message into category <db:code role="parameter">cat</db:code> using a <db:link xlink:href="qdebug.xml">QDebug</db:link> stream.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCCritical">qCCritical</db:link>()</db:member>
<db:member><db:link xlink:href="qdebug.xml">QDebug</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="critical-3">
<db:title>void QMessageLogger::critical(const char *<db:emphasis>msg</db:emphasis>, <db:emphasis>...</db:emphasis>) const</db:title>
<db:para>Logs a critical message specified with format <db:code role="parameter">msg</db:code>. Additional parameters, specified by <db:code role="parameter">msg</db:code>, may be used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtglobal.xml#qCritical">qCritical</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="critical-4">
<db:title>[since 5.3] void QMessageLogger::critical(QMessageLogger::CategoryFunction <db:emphasis>catFunc</db:emphasis>, const char *<db:emphasis>msg</db:emphasis>, <db:emphasis>...</db:emphasis>) const</db:title>
<db:para>Logs a critical message specified with format <db:code role="parameter">msg</db:code> for the context returned by <db:code role="parameter">catFunc</db:code>. Additional parameters, specified by <db:code role="parameter">msg</db:code>, may be used.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCCritical">qCCritical</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="critical-5">
<db:title>[since 5.3] void QMessageLogger::critical(const QLoggingCategory &amp;<db:emphasis>cat</db:emphasis>, const char *<db:emphasis>msg</db:emphasis>, <db:emphasis>...</db:emphasis>) const</db:title>
<db:para>Logs a critical message specified with format <db:code role="parameter">msg</db:code> for the context <db:code role="parameter">cat</db:code>. Additional parameters, specified by <db:code role="parameter">msg</db:code>, may be used.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCCritical">qCCritical</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="debug">
<db:title>QDebug QMessageLogger::debug() const</db:title>
<db:para>Logs a debug message using a <db:link xlink:href="qdebug.xml">QDebug</db:link> stream</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtglobal.xml#qDebug">qDebug</db:link>()</db:member>
<db:member><db:link xlink:href="qdebug.xml">QDebug</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="debug-1">
<db:title>[since 5.3] QDebug QMessageLogger::debug(QMessageLogger::CategoryFunction <db:emphasis>catFunc</db:emphasis>) const</db:title>
<db:para>Logs a debug message into category returned by <db:code role="parameter">catFunc</db:code> using a <db:link xlink:href="qdebug.xml">QDebug</db:link> stream.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCDebug">qCDebug</db:link>()</db:member>
<db:member><db:link xlink:href="qdebug.xml">QDebug</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="debug-2">
<db:title>[since 5.3] QDebug QMessageLogger::debug(const QLoggingCategory &amp;<db:emphasis>cat</db:emphasis>) const</db:title>
<db:para>Logs a debug message into category <db:code role="parameter">cat</db:code> using a <db:link xlink:href="qdebug.xml">QDebug</db:link> stream.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCDebug">qCDebug</db:link>()</db:member>
<db:member><db:link xlink:href="qdebug.xml">QDebug</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="debug-3">
<db:title>void QMessageLogger::debug(const char *<db:emphasis>msg</db:emphasis>, <db:emphasis>...</db:emphasis>) const</db:title>
<db:para>Logs a debug message specified with format <db:code role="parameter">msg</db:code>. Additional parameters, specified by <db:code role="parameter">msg</db:code>, may be used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtglobal.xml#qDebug">qDebug</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="debug-4">
<db:title>[since 5.3] void QMessageLogger::debug(QMessageLogger::CategoryFunction <db:emphasis>catFunc</db:emphasis>, const char *<db:emphasis>msg</db:emphasis>, <db:emphasis>...</db:emphasis>) const</db:title>
<db:para>Logs a debug message specified with format <db:code role="parameter">msg</db:code> for the context returned by <db:code role="parameter">catFunc</db:code>. Additional parameters, specified by <db:code role="parameter">msg</db:code>, may be used.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCDebug">qCDebug</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="debug-5">
<db:title>[since 5.3] void QMessageLogger::debug(const QLoggingCategory &amp;<db:emphasis>cat</db:emphasis>, const char *<db:emphasis>msg</db:emphasis>, <db:emphasis>...</db:emphasis>) const</db:title>
<db:para>Logs a debug message specified with format <db:code role="parameter">msg</db:code> for the context <db:code role="parameter">cat</db:code>. Additional parameters, specified by <db:code role="parameter">msg</db:code>, may be used.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCDebug">qCDebug</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fatal">
<db:title>[noexcept] void QMessageLogger::fatal(const char *<db:emphasis>msg</db:emphasis>, <db:emphasis>...</db:emphasis>) const</db:title>
<db:para>Logs a fatal message specified with format <db:code role="parameter">msg</db:code>. Additional parameters, specified by <db:code role="parameter">msg</db:code>, may be used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtglobal.xml#qFatal">qFatal</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="info">
<db:title>[since 5.5] QDebug QMessageLogger::info() const</db:title>
<db:para>Logs an informational message using a <db:link xlink:href="qdebug.xml">QDebug</db:link> stream.</db:para>
<db:para>This function was introduced in Qt 5.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtglobal.xml#qInfo">qInfo</db:link>()</db:member>
<db:member><db:link xlink:href="qdebug.xml">QDebug</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="info-1">
<db:title>[since 5.5] QDebug QMessageLogger::info(QMessageLogger::CategoryFunction <db:emphasis>catFunc</db:emphasis>) const</db:title>
<db:para>Logs an informational message into category returned by <db:code role="parameter">catFunc</db:code> using a <db:link xlink:href="qdebug.xml">QDebug</db:link> stream.</db:para>
<db:para>This function was introduced in Qt 5.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCInfo">qCInfo</db:link>()</db:member>
<db:member><db:link xlink:href="qdebug.xml">QDebug</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="info-2">
<db:title>[since 5.5] QDebug QMessageLogger::info(const QLoggingCategory &amp;<db:emphasis>cat</db:emphasis>) const</db:title>
<db:para>Logs an informational message into the category <db:code role="parameter">cat</db:code> using a <db:link xlink:href="qdebug.xml">QDebug</db:link> stream.</db:para>
<db:para>This function was introduced in Qt 5.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCInfo">qCInfo</db:link>()</db:member>
<db:member><db:link xlink:href="qdebug.xml">QDebug</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="info-3">
<db:title>[since 5.5] void QMessageLogger::info(const char *<db:emphasis>msg</db:emphasis>, <db:emphasis>...</db:emphasis>) const</db:title>
<db:para>Logs an informational message specified with format <db:code role="parameter">msg</db:code>. Additional parameters, specified by <db:code role="parameter">msg</db:code>, may be used.</db:para>
<db:para>This function was introduced in Qt 5.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtglobal.xml#qInfo">qInfo</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="info-4">
<db:title>[since 5.5] void QMessageLogger::info(QMessageLogger::CategoryFunction <db:emphasis>catFunc</db:emphasis>, const char *<db:emphasis>msg</db:emphasis>, <db:emphasis>...</db:emphasis>) const</db:title>
<db:para>Logs an informational message specified with format <db:code role="parameter">msg</db:code> for the context returned by <db:code role="parameter">catFunc</db:code>. Additional parameters, specified by <db:code role="parameter">msg</db:code>, may be used.</db:para>
<db:para>This function was introduced in Qt 5.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCInfo">qCInfo</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="info-5">
<db:title>[since 5.5] void QMessageLogger::info(const QLoggingCategory &amp;<db:emphasis>cat</db:emphasis>, const char *<db:emphasis>msg</db:emphasis>, <db:emphasis>...</db:emphasis>) const</db:title>
<db:para>Logs an informational message specified with format <db:code role="parameter">msg</db:code> for the context <db:code role="parameter">cat</db:code>. Additional parameters, specified by <db:code role="parameter">msg</db:code>, may be used.</db:para>
<db:para>This function was introduced in Qt 5.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCInfo">qCInfo</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="warning">
<db:title>QDebug QMessageLogger::warning() const</db:title>
<db:para>Logs a warning message using a <db:link xlink:href="qdebug.xml">QDebug</db:link> stream</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtglobal.xml#qWarning">qWarning</db:link>()</db:member>
<db:member><db:link xlink:href="qdebug.xml">QDebug</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="warning-1">
<db:title>[since 5.3] QDebug QMessageLogger::warning(QMessageLogger::CategoryFunction <db:emphasis>catFunc</db:emphasis>) const</db:title>
<db:para>Logs a warning message into category returned by <db:code role="parameter">catFunc</db:code> using a <db:link xlink:href="qdebug.xml">QDebug</db:link> stream.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCWarning">qCWarning</db:link>()</db:member>
<db:member><db:link xlink:href="qdebug.xml">QDebug</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="warning-2">
<db:title>QDebug QMessageLogger::warning(const QLoggingCategory &amp;<db:emphasis>cat</db:emphasis>) const</db:title>
<db:para>Logs a warning message into category <db:code role="parameter">cat</db:code> using a <db:link xlink:href="qdebug.xml">QDebug</db:link> stream.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCWarning">qCWarning</db:link>()</db:member>
<db:member><db:link xlink:href="qdebug.xml">QDebug</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="warning-3">
<db:title>void QMessageLogger::warning(const char *<db:emphasis>msg</db:emphasis>, <db:emphasis>...</db:emphasis>) const</db:title>
<db:para>Logs a warning message specified with format <db:code role="parameter">msg</db:code>. Additional parameters, specified by <db:code role="parameter">msg</db:code>, may be used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtglobal.xml#qWarning">qWarning</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="warning-4">
<db:title>[since 5.3] void QMessageLogger::warning(QMessageLogger::CategoryFunction <db:emphasis>catFunc</db:emphasis>, const char *<db:emphasis>msg</db:emphasis>, <db:emphasis>...</db:emphasis>) const</db:title>
<db:para>Logs a warning message specified with format <db:code role="parameter">msg</db:code> for the context returned by <db:code role="parameter">catFunc</db:code>. Additional parameters, specified by <db:code role="parameter">msg</db:code>, may be used.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCWarning">qCWarning</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="warning-5">
<db:title>[since 5.3] void QMessageLogger::warning(const QLoggingCategory &amp;<db:emphasis>cat</db:emphasis>, const char *<db:emphasis>msg</db:emphasis>, <db:emphasis>...</db:emphasis>) const</db:title>
<db:para>Logs a warning message specified with format <db:code role="parameter">msg</db:code> for the context <db:code role="parameter">cat</db:code>. Additional parameters, specified by <db:code role="parameter">msg</db:code>, may be used.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qloggingcategory.xml#qCWarning">qCWarning</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
