<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QToolTip Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qtooltip.xml">QToolTip</db:link> class provides tool tips (balloon help) for any widget.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QToolTip</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QToolTip is part of <db:simplelist><db:member>helpsystem</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The tip is a short piece of text reminding the user of the widget's function. It is drawn immediately below the given position in a distinctive black-on-yellow color combination. The tip can be any <db:link xlink:href="qtextedit.xml">rich text</db:link> formatted string.</db:para>
<db:para>Rich text displayed in a tool tip is implicitly word-wrapped unless specified differently with <db:code>&lt;p style='white-space:pre'&gt;</db:code>.</db:para>
<db:para>The simplest and most common way to set a widget's tool tip is by calling its QWidget::setToolTip() function.</db:para>
<db:para>It is also possible to show different tool tips for different regions of a widget, by using a <db:link xlink:href="qhelpevent.xml">QHelpEvent</db:link> of type <db:link xlink:href="qevent.xml#Type-enum">QEvent::ToolTip</db:link>. Intercept the help event in your widget's <db:link xlink:href="qwidget.xml#event">event</db:link>() function and call <db:link xlink:href="qtooltip.xml#showText">QToolTip::showText</db:link>() with the text you want to display. The <db:link xlink:href="qtwidgets-widgets-tooltips-example.xml">Tooltips</db:link> example illustrates this technique.</db:para>
<db:para>If you are calling <db:link xlink:href="qtooltip.xml#hideText">QToolTip::hideText</db:link>(), or <db:link xlink:href="qtooltip.xml#showText">QToolTip::showText</db:link>() with an empty string, as a result of a <db:link xlink:href="qevent.xml#Type-enum">ToolTip</db:link>-event you should also call <db:link xlink:href="qevent.xml#ignore">ignore</db:link>() on the event, to signal that you don't want to start any tooltip specific modes.</db:para>
<db:para>Note that, if you want to show tooltips in an item view, the model/view architecture provides functionality to set an item's tool tip; e.g., the <db:link xlink:href="qtablewidgetitem.xml#setToolTip">QTableWidgetItem::setToolTip</db:link>() function. However, if you want to provide custom tool tips in an item view, you must intercept the help event in the <db:link xlink:href="qabstractitemview.xml#viewportEvent">QAbstractItemView::viewportEvent</db:link>() function and handle it yourself.</db:para>
<db:para>The default tool tip color and font can be customized with <db:link xlink:href="qtooltip.xml#setPalette">setPalette</db:link>() and <db:link xlink:href="qtooltip.xml#setFont">setFont</db:link>(). When a tooltip is currently on display, <db:link xlink:href="qtooltip.xml#isVisible">isVisible</db:link>() returns <db:code>true</db:code> and <db:link xlink:href="qtooltip.xml#text">text</db:link>() the currently visible text.</db:para>
<db:note>
<db:para>Tool tips use the inactive color group of <db:link xlink:href="qpalette.xml">QPalette</db:link>, because tool tips are not active windows.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">QWidget::toolTip</db:link></db:member>
<db:member><db:link xlink:href="">QAction::toolTip</db:link></db:member>
<db:member><db:link xlink:href="qtwidgets-widgets-tooltips-example.xml">Tool Tips Example</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="font">
<db:title>[static, since 4.2] QFont QToolTip::font()</db:title>
<db:para>Returns the font used to render tooltips.</db:para>
<db:para>This function was introduced in Qt 4.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtooltip.xml#setFont">setFont</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hideText">
<db:title>[static, since 4.2] void QToolTip::hideText()</db:title>
<db:para>Hides the tool tip. This is the same as calling <db:link xlink:href="qtooltip.xml#showText">showText</db:link>() with an empty string.</db:para>
<db:para>This function was introduced in Qt 4.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtooltip.xml#showText">showText</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isVisible">
<db:title>[static, since 4.4] bool QToolTip::isVisible()</db:title>
<db:para>Returns <db:code>true</db:code> if this tooltip is currently shown.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtooltip.xml#showText">showText</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="palette">
<db:title>[static] QPalette QToolTip::palette()</db:title>
<db:para>Returns the palette used to render tooltips.</db:para>
<db:note>
<db:para>Tool tips use the inactive color group of <db:link xlink:href="qpalette.xml">QPalette</db:link>, because tool tips are not active windows.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtooltip.xml#setPalette">setPalette</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFont">
<db:title>[static, since 4.2] void QToolTip::setFont(const QFont &amp;<db:emphasis>font</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">font</db:code> used to render tooltips.</db:para>
<db:para>This function was introduced in Qt 4.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtooltip.xml#font">font</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPalette">
<db:title>[static, since 4.2] void QToolTip::setPalette(const QPalette &amp;<db:emphasis>palette</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">palette</db:code> used to render tooltips.</db:para>
<db:note>
<db:para>Tool tips use the inactive color group of <db:link xlink:href="qpalette.xml">QPalette</db:link>, because tool tips are not active windows.</db:para>
</db:note>
<db:para>This function was introduced in Qt 4.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtooltip.xml#palette">palette</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="showText">
<db:title>[static] void QToolTip::showText(const QPoint &amp;<db:emphasis>pos</db:emphasis>, const QString &amp;<db:emphasis>text</db:emphasis>, QWidget *<db:emphasis>w</db:emphasis>, const QRect &amp;<db:emphasis>rect</db:emphasis>)</db:title>
<db:para>Shows <db:code role="parameter">text</db:code> as a tool tip, with the global position <db:code role="parameter">pos</db:code> as the point of interest. The tool tip will be shown with a platform specific offset from this point of interest.</db:para>
<db:para>If you specify a non-empty rect the tip will be hidden as soon as you move your cursor out of this area.</db:para>
<db:para>The <db:code role="parameter">rect</db:code> is in the coordinates of the widget you specify with <db:code role="parameter">w</db:code>. If the <db:code role="parameter">rect</db:code> is not empty you must specify a widget. Otherwise this argument can be 0 but it is used to determine the appropriate screen on multi-head systems.</db:para>
<db:para>If <db:code role="parameter">text</db:code> is empty the tool tip is hidden. If the text is the same as the currently shown tooltip, the tip will <db:emphasis>not</db:emphasis> move. You can force moving by first hiding the tip with an empty text, and then showing the new tip at the new position.</db:para>
</db:section>
<db:section xml:id="showText-1">
<db:title>[static] void QToolTip::showText(const QPoint &amp;<db:emphasis>pos</db:emphasis>, const QString &amp;<db:emphasis>text</db:emphasis>, QWidget *<db:emphasis>w</db:emphasis> = 0)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>This is analogous to calling <db:link xlink:href="qtooltip.xml#showText">QToolTip::showText</db:link>(<db:code role="parameter">pos</db:code>, <db:code role="parameter">text</db:code>, <db:code role="parameter">w</db:code>, QRect())</db:para>
</db:section>
<db:section xml:id="showText-2">
<db:title>[static, since 5.2] void QToolTip::showText(const QPoint &amp;<db:emphasis>pos</db:emphasis>, const QString &amp;<db:emphasis>text</db:emphasis>, QWidget *<db:emphasis>w</db:emphasis>, const QRect &amp;<db:emphasis>rect</db:emphasis>, int <db:emphasis>msecDisplayTime</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>This is similar to <db:link xlink:href="qtooltip.xml#showText">QToolTip::showText</db:link>(<db:code role="parameter">pos</db:code>, <db:code role="parameter">text</db:code>, <db:code role="parameter">w</db:code>, <db:code role="parameter">rect</db:code>) but with an extra parameter <db:code role="parameter">msecDisplayTime</db:code> that specifies how long the tool tip will be displayed, in milliseconds.</db:para>
<db:para>This function was introduced in Qt 5.2.</db:para>
</db:section>
<db:section xml:id="text">
<db:title>[static, since 4.4] QString QToolTip::text()</db:title>
<db:para>Returns the tooltip text, if a tooltip is visible, or an empty string if a tooltip is not visible.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
</db:section>
</db:section>
</db:article>
