<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Multimedia</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Qt Multimedia module provides APIs for playing back and recording audiovisual content.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:alt>&quot;image of multimedia icons, courtesy of misirlou from the Noun Project&quot;</db:alt>
<db:imageobject>
<db:imagedata fileref="images/noun_Media_166644.svg"/>
</db:imageobject>
</db:mediaobject>
<db:para>Qt Multimedia is an add-on module that provides a rich set of QML types and C++ classes to handle multimedia content. It contains an easy to use API for playing back audio and video files and rendering those on screen, as well as a comprehensive API for recording audio and video from the systems cameras and microphones.</db:para>
<db:para>The functionality of this module is divided into the following submodules:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="multimediaoverview.xml">Qt Multimedia</db:link></db:para>
</db:td>
<db:td>
<db:para>Provides an API for multimedia-specific use cases.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtmultimediawidgets-index.xml">Qt Multimedia Widgets</db:link></db:para>
</db:td>
<db:td>
<db:para>Provides a widget-based multimedia API.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtspatialaudio-index.xml">Qt Spatial Audio</db:link></db:para>
</db:td>
<db:td>
<db:para>(Technology Preview) Provides an API for implementing sound fields in 3D space.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section xml:id="getting-started">
<db:title>Getting started</db:title>
<db:para>If you are porting from Qt 5 to Qt 6 see <db:link xlink:href="qtmultimedia-changes-qt6.xml">Changes to Qt Multimedia</db:link>.</db:para>
<db:para>If you are new to Qt Multimedia, the QML types can be <db:link xlink:href="https://doc.qt.io/qt-6/qtqml-syntax-imports.html">imported</db:link> into an application using the following statement in your <db:code>.qml</db:code> file.</db:para>
<db:programlisting language="qml">import QtMultimedia
</db:programlisting>
<db:para>To link against the C++ libraries, add the following to your project's <db:code>CMakeLists.txt</db:code> file. Substitute <db:code>my_project</db:code> with the name of your project.</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS Multimedia)
target_link_libraries(my_project PRIVATE Qt6::Multimedia)
</db:programlisting>
</db:section>
<db:section xml:id="overviews-and-important-topics">
<db:title>Overviews and Important Topics</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtmultimedia-changes-qt6.xml">Changes in Qt 6</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediaoverview.xml">Multimedia Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="audiooverview.xml">Audio Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="spatialaudiooverview.xml">Spatial Audio Overview</db:link> (Technology Preview)</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="videooverview.xml">Video Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="cameraoverview.xml">Camera Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="videooverview.xml#supported-media-formats">Supported Media Formats</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qml-types">
<db:title>QML Types</db:title>
<db:para>The following table outlines some important QML types.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Type</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link></db:para>
</db:td>
<db:td>
<db:para>Add audio/video playback functionality to a scene.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-capturesession.xml">CaptureSession</db:link></db:para>
</db:td>
<db:td>
<db:para>Create a session for capturing audio/video.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-camera.xml">Camera</db:link></db:para>
</db:td>
<db:td>
<db:para>Access a camera connected to the system.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-audioinput.xml">AudioInput</db:link></db:para>
</db:td>
<db:td>
<db:para>Access an audio input (microphone) connected to the system.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-audiooutput.xml">AudioOutput</db:link></db:para>
</db:td>
<db:td>
<db:para>Access an audio output (speaker, headphone) connected to the system.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link></db:para>
</db:td>
<db:td>
<db:para>Display video content.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-mediarecorder.xml">MediaRecorder</db:link></db:para>
</db:td>
<db:td>
<db:para>Record audio/video from the <db:link xlink:href="qml-qtmultimedia-capturesession.xml">CaptureSession</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-imagecapture.xml">ImageCapture</db:link></db:para>
</db:td>
<db:td>
<db:para>Capture still images from the Camera.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-video.xml">Video</db:link></db:para>
</db:td>
<db:td>
<db:para>Add Video playback functionality to a scene. Uses <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link> and <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link> types to provide video playback functionality.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="c-classes">
<db:title>C++ Classes</db:title>
<db:para>The following table outlines some important C++ Classes</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Class</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qmediaplayer.xml">QMediaPlayer</db:link></db:para>
</db:td>
<db:td>
<db:para>Playback media from a source.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qvideowidget.xml">QVideoWidget</db:link></db:para>
</db:td>
<db:td>
<db:para>Display video from a media player or a capture session.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qmediacapturesession.xml">QMediaCaptureSession</db:link></db:para>
</db:td>
<db:td>
<db:para>Capture audio and video.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qcamera.xml">QCamera</db:link></db:para>
</db:td>
<db:td>
<db:para>Access a camera connected to the system</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qaudioinput.xml">QAudioInput</db:link></db:para>
</db:td>
<db:td>
<db:para>Access an audio input (microphone) connected to the system.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qaudiooutput.xml">QAudioOutput</db:link></db:para>
</db:td>
<db:td>
<db:para>Access an audio output (speaker, headphone) connected to the system.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qimagecapture.xml">QImageCapture</db:link></db:para>
</db:td>
<db:td>
<db:para>Capture still images with a camera.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qmediarecorder.xml">QMediaRecorder</db:link></db:para>
</db:td>
<db:td>
<db:para>Record media content from a capture session.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qvideosink.xml">QVideoSink</db:link></db:para>
</db:td>
<db:td>
<db:para>Access and render individual video frames.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qaudiosink.xml">QAudioSink</db:link></db:para>
</db:td>
<db:td>
<db:para>Sends raw audio data to an audio output device.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>For playback <db:link xlink:href="qmediaplayer.xml">QMediaPlayer</db:link>, <db:link xlink:href="qaudiooutput.xml">QAudioOutput</db:link> and QVideoOutput contain all the required functionality. The other classes are used for capturing audio and video content, where the <db:link xlink:href="qmediacapturesession.xml">QMediaCaptureSession</db:link> is the central class managing the whole capture/recording process.</db:para>
</db:section>
<db:section xml:id="licenses-and-attributions">
<db:title>Licenses and Attributions</db:title>
<db:para>The Qt Multimedia module is available under commercial licenses from <db:link xlink:href="http://www.qt.io/about-us/">The Qt Company</db:link>. In addition, it is available under free software licenses. Since Qt 5.6, these free software licenses are <db:link xlink:href="http://www.gnu.org/licenses/lgpl-3.0.html">GNU Lesser General Public License, version 3</db:link>, or the <db:link xlink:href="http://www.gnu.org/licenses/gpl-2.0.html">GNU General Public License, version 2</db:link>. See <db:link xlink:href="licensing.xml">Qt Licensing</db:link> for further details.</db:para>
<db:para>The FFmpeg backend uses the <db:link xlink:href="https://ffmpeg.org">FFmpeg framework</db:link>. FFmpeg is licensed under LGPLv2.1, GPLv2, or later versions of the licenses. Some optional components of FFmpeg are only available under GPL. The FFmpeg backend shipped with the Qt binary packages is configured to not contain any of the components that are available under GPLv2 only. See the <db:link xlink:href="https://ffmpeg.org/legal.html">FFmpeg licensing page</db:link> for further details.</db:para>
</db:section>
<db:section xml:id="target-platform-and-backend-notes">
<db:title>Target platform and backend notes</db:title>
<db:para>On most platforms, there are two different backends that can be used for Qt Multimedia.</db:para>
<db:para>The first one is the backend built on the native multimedia framework of the underlying operating system. This is currently the default, and will use gstreamer on Linux, AVFoundation on macOS/iOS, WMF on Windows, and the MediaCodec framework on Android.</db:para>
<db:para>While we try to support our full API on all backends using the native multimedia framework, platform specific limitations do exist in a few places. This is due to the fact that the feature set supported by those frameworks varies, implying that some functionality might not be available on all platforms. This is especially true for the set of supported file formats and codecs, as well as advanced camera functionality.</db:para>
<db:para>Where limitations exist, we aim to document those in the respective classes and methods.</db:para>
<db:para>With Qt 6.4, we are adding a new, more platform independent backend based on the <db:link xlink:href="http://ffmpeg.org">FFmpeg framework</db:link>. The FFmpeg backend is currently available as a technology preview. This backend has the advantage that we can offer proper cross-platform support for all features of Qt Multimedia, going beyond the limitations that exist with many of the native frameworks.</db:para>
<db:para>You can test the FFmpeg backend right now by using a Qt build that has FFmpeg enabled and setting the <db:code>QT_MEDIA_BACKEND</db:code> environment variable to ffmpeg:</db:para>
<db:programlisting language="cpp">export QT_MEDIA_BACKEND=ffmpeg
</db:programlisting>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtmultimedia-apple.xml">macOS and iOS</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="reference-and-examples">
<db:title>Reference and Examples</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtmultimedia-qmlmodule.xml">QML Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtmultimedia-modules.xml">C++ Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimedia-examples.xml">Examples</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
