<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Multimedia</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Qt Multimedia module provides APIs for playing back and recording audiovisual content.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:alt>&quot;image of multimedia icons, courtesy of misirlou from the Noun Project&quot;</db:alt>
<db:imageobject>
<db:imagedata fileref="images/noun_Media_166644.svg"/>
</db:imageobject>
</db:mediaobject>
<db:para>Qt Multimedia is an add-on module that provides a rich set of QML types and C++ classes to handle multimedia content. It contains an easy to use API for playing back audio and video files and rendering those on screen, as well as a comprehensive API for recording audio and video from the system's cameras and microphones.</db:para>
<db:para>The functionality of this module is divided into the following submodules:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="multimediaoverview.xml">Qt Multimedia</db:link></db:para>
</db:td>
<db:td>
<db:para>Provides an API for multimedia-specific use cases.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtmultimediawidgets-index.xml">Qt Multimedia Widgets</db:link></db:para>
</db:td>
<db:td>
<db:para>Provides a widget-based multimedia API.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtspatialaudio-index.xml">Qt Spatial Audio</db:link></db:para>
</db:td>
<db:td>
<db:para>Provides an API for implementing sound fields in 3D space.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section xml:id="getting-started">
<db:title>Getting started</db:title>
<db:para>If you are porting from Qt 5 to Qt 6 see <db:link xlink:href="qtmultimedia-changes-qt6.xml">Changes to Qt Multimedia</db:link>.</db:para>
<db:para>If you are new to Qt Multimedia, the QML types can be <db:link xlink:href="https://doc.qt.io/qt-6/qtqml-syntax-imports.html">imported</db:link> into an application using the following statement in your <db:code>.qml</db:code> file.</db:para>
<db:programlisting language="qml">import QtMultimedia
</db:programlisting>
<db:para>To link against the C++ libraries, add the following to your project's <db:code>CMakeLists.txt</db:code> file. Substitute <db:code>my_project</db:code> with the name of your project.</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS Multimedia)
target_link_libraries(my_project PRIVATE Qt6::Multimedia)
</db:programlisting>
</db:section>
<db:section xml:id="overviews-and-important-topics">
<db:title>Overviews and important topics</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtmultimedia-changes-qt6.xml">Changes in Qt 6</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediaoverview.xml">Multimedia Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="audiooverview.xml">Audio Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="spatialaudiooverview.xml">Spatial Audio Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="videooverview.xml">Video Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="cameraoverview.xml">Camera Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="videooverview.xml#supported-media-formats">Supported Media Formats</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qml-types">
<db:title>QML types</db:title>
<db:para>The following table outlines some important QML types.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Type</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link></db:para>
</db:td>
<db:td>
<db:para>Add audio/video playback functionality to a scene.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-capturesession.xml">CaptureSession</db:link></db:para>
</db:td>
<db:td>
<db:para>Create a session for capturing audio/video.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-camera.xml">Camera</db:link></db:para>
</db:td>
<db:td>
<db:para>Access a camera connected to the system.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-audioinput.xml">AudioInput</db:link></db:para>
</db:td>
<db:td>
<db:para>Access an audio input (microphone) connected to the system.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-audiooutput.xml">AudioOutput</db:link></db:para>
</db:td>
<db:td>
<db:para>Access an audio output (speaker, headphone) connected to the system.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link></db:para>
</db:td>
<db:td>
<db:para>Display video content.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-mediarecorder.xml">MediaRecorder</db:link></db:para>
</db:td>
<db:td>
<db:para>Record audio/video from the <db:link xlink:href="qml-qtmultimedia-capturesession.xml">CaptureSession</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-imagecapture.xml">ImageCapture</db:link></db:para>
</db:td>
<db:td>
<db:para>Capture still images from the Camera.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-video.xml">Video</db:link></db:para>
</db:td>
<db:td>
<db:para>Add Video playback functionality to a scene. Uses <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link> and <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link> types to provide video playback functionality.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-screencapture.xml">ScreenCapture</db:link></db:para>
</db:td>
<db:td>
<db:para>Captures a screen.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="c-classes">
<db:title>C++ classes</db:title>
<db:para>The following table outlines some important C++ classes</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Class</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qmediaplayer.xml">QMediaPlayer</db:link></db:para>
</db:td>
<db:td>
<db:para>Playback media from a source.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qvideowidget.xml">QVideoWidget</db:link></db:para>
</db:td>
<db:td>
<db:para>Display video from a media player or a capture session.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qmediacapturesession.xml">QMediaCaptureSession</db:link></db:para>
</db:td>
<db:td>
<db:para>Capture audio and video.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qcamera.xml">QCamera</db:link></db:para>
</db:td>
<db:td>
<db:para>Access a camera connected to the system</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qaudioinput.xml">QAudioInput</db:link></db:para>
</db:td>
<db:td>
<db:para>Access an audio input (microphone) connected to the system.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qaudiooutput.xml">QAudioOutput</db:link></db:para>
</db:td>
<db:td>
<db:para>Access an audio output (speaker, headphone) connected to the system.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qimagecapture.xml">QImageCapture</db:link></db:para>
</db:td>
<db:td>
<db:para>Capture still images with a camera.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qmediarecorder.xml">QMediaRecorder</db:link></db:para>
</db:td>
<db:td>
<db:para>Record media content from a capture session.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qvideosink.xml">QVideoSink</db:link></db:para>
</db:td>
<db:td>
<db:para>Access and render individual video frames.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qaudiosink.xml">QAudioSink</db:link></db:para>
</db:td>
<db:td>
<db:para>Sends raw audio data to an audio output device.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qscreencapture.xml">QScreenCapture</db:link></db:para>
</db:td>
<db:td>
<db:para>Captures a screen.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>For playback <db:link xlink:href="qmediaplayer.xml">QMediaPlayer</db:link>, <db:link xlink:href="qaudiooutput.xml">QAudioOutput</db:link> and QVideoOutput contain all the required functionality. The other classes are used for capturing audio and video content, where the <db:link xlink:href="qmediacapturesession.xml">QMediaCaptureSession</db:link> is the central class managing the whole capture/recording process.</db:para>
</db:section>
<db:section xml:id="licenses-and-attributions">
<db:title>Licenses and attributions</db:title>
<db:para>The Qt Multimedia module is available under commercial licenses from <db:link xlink:href="http://www.qt.io/about-us/">The Qt Company</db:link>. In addition, it is available under free software licenses. Since Qt 5.6, these free software licenses are <db:link xlink:href="http://www.gnu.org/licenses/lgpl-3.0.html">GNU Lesser General Public License, version 3</db:link>, or the <db:link xlink:href="http://www.gnu.org/licenses/gpl-2.0.html">GNU General Public License, version 2</db:link>. See <db:link xlink:href="licensing.xml">Qt Licensing</db:link> for further details.</db:para>
<db:para>The FFmpeg backend uses the <db:link xlink:href="https://ffmpeg.org">FFmpeg framework</db:link>. FFmpeg is licensed under LGPLv2.1, GPLv2, or later versions of the licenses. Some optional components of FFmpeg are only available under GPL. The FFmpeg backend shipped with the Qt binary packages is configured to not contain any of the components that are available under GPLv2 only.</db:para>
<db:para>See the <db:link xlink:href="https://ffmpeg.org/legal.html">FFmpeg licensing page</db:link> for further details.</db:para>
<db:para>Note that video compression standards, such as the H.264 media compression standard, may be covered by patents and can incur royalty fees. Such fees are not covered by the Qt licenses.</db:para>
</db:section>
<db:section xml:id="target-platform-and-backend-notes">
<db:title>Target platform and backend notes</db:title>
<db:para>We aim to align the behavior on all the platforms but there are some issues to consider.</db:para>
<db:section xml:id="backends">
<db:title>Backends</db:title>
<db:para>On most platforms, there are two different backends that can be used for Qt Multimedia.</db:para>
<db:section xml:id="ffmpeg-as-the-default-backend">
<db:title>FFmpeg as the default backend</db:title>
<db:para>In this release the <db:link xlink:href="http://ffmpeg.org">FFmpeg framework</db:link> is set as the default backend on Windows, macOS, Android, and Linux except Yocto distribution.</db:para>
<db:para>The version shipped with Qt binary packages is <db:emphasis role="bold">FFmpeg 6.0</db:emphasis> and is tested by the maintainers.</db:para>
<db:note>
<db:para>See <db:link xlink:href="qtmultimedia-index.xml#licenses-and-attributions">Licenses and Attributions</db:link> regarding what components are removed in the package shipped by Qt.</db:para>
</db:note>
</db:section>
<db:section xml:id="native-backends">
<db:title>Native backends</db:title>
<db:para>These are:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>gstreamer on Linux</db:para>
</db:listitem>
<db:listitem>
<db:para>AVFoundation on macOS</db:para>
</db:listitem>
<db:listitem>
<db:para>WMF Windows</db:para>
</db:listitem>
<db:listitem>
<db:para>MediaCodec framework on Android</db:para>
</db:listitem>
</db:itemizedlist>
<db:note>
<db:para>These are still available but with <db:emphasis role="bold">limited</db:emphasis> support.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="backend-support">
<db:title>Backend support</db:title>
<db:para>Maintainers will strive to fix critical issues with the native backends but don't guarantee fixing minor issues and won't implement new features for the native backends. Furthermore, even some major issues with the gstreamer backend (on Linux) won't be fixed since gstreamer is difficult to debug and is further complicated as it is dependent on Linux distributions.</db:para>
<db:para>We aim to align the behavior on all the platforms, especially, with the FFmpeg backend. Despite this fact we still have platform-dependent issues with formats, codecs, advanced camera features, and screen capturing due to the Qt Multimedia API relying on target platform APIs. For example, with FFmpeg, there are specific problems with hardware acceleration on Linux targets with ARM architectures.</db:para>
<db:para>Backend-dependent limitations will be documented and their status maintained in the respective classes.</db:para>
</db:section>
<db:section xml:id="changing-backends">
<db:title>Changing backends</db:title>
<db:para>In the case of issues with the default FFmpeg backend, we suggest testing with a native backend. You can switch to native backends by setting the <db:code>QT_MEDIA_BACKEND</db:code> environment variable to <db:code>windows</db:code>, <db:code>gstreamer</db:code> (on Linux), <db:code>darwin</db:code> (on macOS), or <db:code>android</db:code>:</db:para>
<db:programlisting language="cpp">export QT_MEDIA_BACKEND=darwin
</db:programlisting>
<db:para>In order to force assign FFmpeg as the used backend, set the variable to <db:code>ffmpeg</db:code>:</db:para>
<db:programlisting language="cpp">export QT_MEDIA_BACKEND=ffmpeg
</db:programlisting>
<db:para>On the Qt Multimedia compilation stage the default media backend can be configured via cmake variable <db:code>QT_DEFAULT_MEDIA_BACKEND</db:code>.</db:para>
</db:section>
<db:section xml:id="target-platform-notes">
<db:title>Target platform notes</db:title>
<db:para>The following pages list issues for specific target platforms that are not related to the multimedia backed.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtmultimedia-apple.xml">macOS and iOS</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtmultimedia-wasm.xml">WebAssembly</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="permissions">
<db:title>Permissions</db:title>
<db:para>Starting from Qt 6.6, the Qt Multimedia module uses new <db:link xlink:href="qpermission.xml">QPermission</db:link> API to handle <db:link xlink:href="qcamerapermission.xml">camera</db:link> and <db:link xlink:href="qmicrophonepermission.xml">microphone</db:link> permissions. This means that Qt itself no longer queries for these permissions, so this needs to be done directly from the client application.</db:para>
<db:para>Please refer to the <db:link xlink:href="permissions.xml">Application Permissions</db:link> page for an example of how to integrate the new <db:link xlink:href="qpermission.xml">QPermission</db:link> API into the application.</db:para>
</db:section>
<db:section xml:id="reference-and-examples">
<db:title>Reference and examples</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtmultimedia-qmlmodule.xml">QML Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtmultimedia-modules.xml">C++ Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimedia-examples.xml">Examples</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
