<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt WebEngine QML Types</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides QML types for rendering web content within a QML application.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="details"/>
<db:para>To link against the module using build with qmake, add the following QT variable to your qmake .pro file:</db:para>
<db:programlisting language="cpp">QT += webenginequick
</db:programlisting>
<db:para>For build with CMake use the <db:code>find_package()</db:code> command to locate the needed module components in the Qt6 package and <db:code>target_link_libraries()</db:code> to link against the module:</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS WebEngineQuick)
target_link_libraries(target PRIVATE Qt6::WebEngineQuick)
</db:programlisting>
<db:para>The minimal amount of code needed to load and display an HTML page using the QML engine requires a proper initialization:</db:para>
<db:programlisting language="cpp">#include &amp;lt;QGuiApplication&amp;gt;
#include &amp;lt;QQmlApplicationEngine&amp;gt;
#include &amp;lt;QtWebEngineQuick/qtwebenginequickglobal.h&amp;gt;

int main(int argc, char *argv[])
{
    QCoreApplication::setAttribute(Qt::AA_ShareOpenGLContexts);
    QtWebEngineQuick::initialize();
    QGuiApplication app(argc, argv);
    QQmlApplicationEngine engine;
    engine.load(QUrl(QStringLiteral(&quot;qrc:/main.qml&quot;)));
    return app.exec();
}
</db:programlisting>
<db:para>Where the content of main.qml is simply:</db:para>
<db:programlisting language="qml">import QtQuick
import QtQuick.Window
import QtWebEngine

Window {
    width: 1024
    height: 750
    visible: true
    WebEngineView {
        anchors.fill: parent
        url: &quot;https://www.qt.io&quot;
    }
}
</db:programlisting>
<db:variablelist role="members">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-authenticationdialogrequest.xml" xlink:role="">AuthenticationDialogRequest</db:link></db:term>
<db:listitem>
<db:para>A request for providing authentication credentials required by proxies or HTTP servers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-colordialogrequest.xml" xlink:role="">ColorDialogRequest</db:link></db:term>
<db:listitem>
<db:para>A request for selecting a color by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-contextmenurequest.xml" xlink:role="">ContextMenuRequest</db:link></db:term>
<db:listitem>
<db:para>A request for showing a context menu.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-filedialogrequest.xml" xlink:role="">FileDialogRequest</db:link></db:term>
<db:listitem>
<db:para>A request for letting the user choose a (new or existing) file or directory.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-findtextresult.xml" xlink:role="">FindTextResult</db:link></db:term>
<db:listitem>
<db:para>A utility type for encapsulating the result of a string search on a page.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-fullscreenrequest.xml" xlink:role="">FullScreenRequest</db:link></db:term>
<db:listitem>
<db:para>A utility type for the WebEngineView::fullScreenRequested() signal.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-javascriptdialogrequest.xml" xlink:role="">JavaScriptDialogRequest</db:link></db:term>
<db:listitem>
<db:para>A request for showing an alert, a confirmation, or a prompt dialog from within JavaScript to the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-registerprotocolhandlerrequest.xml" xlink:role="">RegisterProtocolHandlerRequest</db:link></db:term>
<db:listitem>
<db:para>The RegisterProtocolHandlerRequest type enables accepting or rejecting requests from the registerProtocolHandler API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-tooltiprequest.xml" xlink:role="">TooltipRequest</db:link></db:term>
<db:listitem>
<db:para>A request for showing a tooltip to the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-touchselectionmenurequest.xml" xlink:role="">TouchSelectionMenuRequest</db:link></db:term>
<db:listitem>
<db:para>A request for showing a touch selection menu.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webengine.xml" xlink:role="">WebEngine</db:link></db:term>
<db:listitem>
<db:para>Provides access to the default settings and profiles shared by all web engine views.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webengineaction.xml" xlink:role="">WebEngineAction</db:link></db:term>
<db:listitem>
<db:para>An action that represents a WebEngineView::WebAction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webenginecertificateerror.xml" xlink:role="">WebEngineCertificateError</db:link></db:term>
<db:listitem>
<db:para>A utility type for ignoring certificate errors or rejecting erroneous certificates.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webengineclientcertificateoption.xml" xlink:role="">WebEngineClientCertificateOption</db:link></db:term>
<db:listitem>
<db:para>Represents a client certificate option.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webengineclientcertificateselection.xml" xlink:role="">WebEngineClientCertificateSelection</db:link></db:term>
<db:listitem>
<db:para>Provides a selection of client certificates.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webenginedownloadrequest.xml" xlink:role="">WebEngineDownloadRequest</db:link></db:term>
<db:listitem>
<db:para>Provides information about a download.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webenginehistory.xml" xlink:role="">WebEngineHistory</db:link></db:term>
<db:listitem>
<db:para>Provides data models that represent the history of a web engine page.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webenginehistorymodel.xml" xlink:role="">WebEngineHistoryModel</db:link></db:term>
<db:listitem>
<db:para>A data model that represents the history of a web engine page.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webengineloadinginfo.xml" xlink:role="">WebEngineLoadingInfo</db:link></db:term>
<db:listitem>
<db:para>A utility type for the WebEngineView::loadingChanged signal.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webenginenavigationrequest.xml" xlink:role="">WebEngineNavigationRequest</db:link></db:term>
<db:listitem>
<db:para>Represents a request for navigating to a web page as part of WebEngineView::navigationRequested().</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webenginenewwindowrequest.xml" xlink:role="">WebEngineNewWindowRequest</db:link></db:term>
<db:listitem>
<db:para>A utility type for the WebEngineView::newWindowRequested signal.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webenginenotification.xml" xlink:role="">WebEngineNotification</db:link></db:term>
<db:listitem>
<db:para>Encapsulates the data of an HTML5 web notification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webengineprofile.xml" xlink:role="">WebEngineProfile</db:link></db:term>
<db:listitem>
<db:para>Contains settings, scripts, and visited links common to multiple web engine views.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webenginescript.xml" xlink:role="">WebEngineScript</db:link></db:term>
<db:listitem>
<db:para>Enables the programmatic injection of scripts in the JavaScript engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webenginescriptcollection.xml" xlink:role="">WebEngineScriptCollection</db:link></db:term>
<db:listitem>
<db:para>Manages a collection of user scripts.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webenginesettings.xml" xlink:role="">WebEngineSettings</db:link></db:term>
<db:listitem>
<db:para>Allows configuration of browser properties and attributes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwebengine-webengineview.xml" xlink:role="">WebEngineView</db:link></db:term>
<db:listitem>
<db:para>A WebEngineView renders web content within a QML application.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:article>
