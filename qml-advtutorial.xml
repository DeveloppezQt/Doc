<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QML Advanced Tutorial</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="qtquick-tutorials-samegame-samegame1-example.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="QML Advanced Tutorial 1 - Creating the Game Canvas and Blocks"/></db:extendedlink>
<db:abstract>
<db:para>A more advanced tutorial, showing how to use QML to create a game.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>This tutorial walks step-by-step through the creation of a full application using QML. It assumes that you already know the basics of QML (for example, from reading the <db:link xlink:href="qml-tutorial.xml">simple tutorial</db:link>).</db:para>
<db:para>In this tutorial we write a game, <db:emphasis>Same Game</db:emphasis>, based on the Same Game application included in the declarative <db:code>examples</db:code> directory, which looks like this:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/declarative-samegame.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>We will cover concepts for producing a fully functioning application, including JavaScript integration, using QML <db:link xlink:href="qml-qtquick-state.xml">Qt Quick States</db:link> and <db:link xlink:href="qml-qtquick-behavior.xml">Behaviors</db:link> to manage components and enhance your interface, and storing persistent application data.</db:para>
<db:para>An understanding of JavaScript is helpful to understand parts of this tutorial, but if you don't know JavaScript you can still get a feel for how you can integrate backend logic to create and control QML types.</db:para>
<db:para>Tutorial chapters:</db:para>
<db:orderedlist numeration="arabic">
<db:listitem>
<db:para><db:link xlink:href="qtquick-tutorials-samegame-samegame1-example.xml">Creating the Game Canvas and Blocks</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-tutorials-samegame-samegame2-example.xml">Populating the Game Canvas</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-tutorials-samegame-samegame3-example.xml">Implementing the Game Logic</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-tutorials-samegame-samegame4-example.xml">Finishing Touches</db:link></db:para>
</db:listitem>
</db:orderedlist>
<db:para>All the code in this tutorial can be found in Qt's <db:code>examples/quick/tutorials/samegame</db:code> directory.</db:para>
</db:article>
