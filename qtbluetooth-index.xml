<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Bluetooth</db:title>
<db:productname>QtBluetooth</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Bluetooth Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Bluetooth enables connectivity between Bluetooth enabled devices.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Bluetooth API provides connectivity between Bluetooth enabled devices.</db:para>
<db:para>Currently, the API is supported on the following platforms:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>API Feature</db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="android.xml">Android</db:link></db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="ios.xml">iOS</db:link></db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="linux.xml">Linux (BlueZ 4.x/5.x)</db:link></db:para>
</db:th>
<db:th>
<db:para>macOS</db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="winrt-support.xml">WinRT</db:link></db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="windows.xml">Win32</db:link></db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>Classic Bluetooth</db:para>
</db:td>
<db:td>
<db:para>x</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>x</db:para>
</db:td>
<db:td>
<db:para>x</db:para>
</db:td>
<db:td>
<db:para>x</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Bluetooth LE Central</db:para>
</db:td>
<db:td>
<db:para>x</db:para>
</db:td>
<db:td>
<db:para>x</db:para>
</db:td>
<db:td>
<db:para>x</db:para>
</db:td>
<db:td>
<db:para>x</db:para>
</db:td>
<db:td>
<db:para>x</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Bluetooth LE Peripheral</db:para>
</db:td>
<db:td>
<db:para>x</db:para>
</db:td>
<db:td>
<db:para>x</db:para>
</db:td>
<db:td>
<db:para>x</db:para>
</db:td>
<db:td>
<db:para>x</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Bluetooth LE Advertisement &amp; Scanning</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
</db:td>
<db:td>
</db:td>
<db:td>
</db:td>
<db:td>
</db:td>
<db:td>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Despite there not being a Win32 port yet, the WinRT backend is automatically used if the win32 target platform supports the required WinRT APIs. Minimal requirement is Windows 10 version 1507 with slightly improved service discovery since Windows 10 version 1607. Therefore Windows 7 and 8.x targets are excluded.</db:para>
<db:section xml:id="overview">
<db:title>Overview</db:title>
<db:para>Bluetooth is a short-range (less than 100 meters) wireless technology. It has a reasonably high data transfer rate of 2.1 Mbit/s, which makes it ideal for transferring data between devices. Bluetooth connectivity is based on basic device management, such as scanning for devices, gathering information about them, and exchanging data between them.</db:para>
<db:para>Qt Bluetooth supports Bluetooth Low Energy development for client/central role use cases. Further details can be found in the <db:link xlink:href="qtbluetooth-le-overview.xml">Bluetooth Low Energy Overview</db:link> section.</db:para>
<db:para>A new addition since the Qt Bluetooth 5.7 release covers support for Bluetooth Low Energy applications performing the peripheral/server role. This new API remains in Technology Preview.</db:para>
</db:section>
<db:section xml:id="getting-started">
<db:title>Getting Started</db:title>
<db:para>To use the C++ library in your application, add the following configuration option to your <db:code>.pro</db:code> file:</db:para>
<db:programlisting language="cpp">QT += bluetooth
</db:programlisting>
<db:para>To use the classes of the module in your application you need the following import statement in your <db:code>.qml</db:code> file:</db:para>
<db:programlisting language="qml">import QtBluetooth 5.12
</db:programlisting>
</db:section>
<db:section xml:id="related-information">
<db:title>Related Information</db:title>
<db:section xml:id="building-qt-bluetooth">
<db:title>Building Qt Bluetooth</db:title>
<db:para>Despite the fact that the module can be built for all Qt platforms, the module is not ported to all of them. Not supported platforms such as Windows desktop employ a fake or dummy backend which is automatically selected when the platform is not supported. The dummy backend reports appropriate error messages and values which allow the Qt Bluetooth developer to detect at runtime that the current platform is not supported. The dummy backend is also selected on Linux if BlueZ development headers are not found during build time or Qt was built without Qt D-Bus support.</db:para>
<db:para>The usage of the dummy backend is highlighted via an appropriate warning while building and running.</db:para>
</db:section>
<db:section xml:id="guides">
<db:title>Guides</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-overview.xml">Classic Bluetooth Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-le-overview.xml">Bluetooth Low Energy Overview</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="reference">
<db:title>Reference</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-qmlmodule.xml">QML Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-module.xml">C++ Classes</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="logging-categories">
<db:title>Logging Categories</db:title>
<db:para>The <db:link xlink:href="qtbluetooth-qmlmodule.xml">QtBluetooth</db:link> module exports the following <db:link xlink:href="qloggingcategory.xml#configuring-categories">logging categories</db:link>:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Logging Category</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>qt.bluetooth</db:para>
</db:td>
<db:td>
<db:para>Enables logging of cross platform code path in <db:link xlink:href="qtbluetooth-qmlmodule.xml">QtBluetooth</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>qt.bluetooth.android</db:para>
</db:td>
<db:td>
<db:para>Enables logging of the <db:link xlink:href="android.xml">Android</db:link> implementation</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>qt.bluetooth.bluez</db:para>
</db:td>
<db:td>
<db:para>Enables logging of the BLuez/Linux implementation</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>qt.bluetooth.ios</db:para>
</db:td>
<db:td>
<db:para>Enables logging of the <db:link xlink:href="ios.xml">iOS</db:link> implementation</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>qt.bluetooth.osx</db:para>
</db:td>
<db:td>
<db:para>Enables logging of the <db:link xlink:href="macos.xml">macOS</db:link> implementation</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>qt.bluetooth.qml</db:para>
</db:td>
<db:td>
<db:para>Enables logging of the <db:link xlink:href="qtbluetooth-qmlmodule.xml">QtBluetooth</db:link> QML implementation</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>qt.bluetooth.winrt</db:para>
</db:td>
<db:td>
<db:para>Enables logging of the <db:link xlink:href="winrt-support.xml">WinRT</db:link> implementation</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Logging categories can be used to enable additional warning and debug output for <db:link xlink:href="qtbluetooth-qmlmodule.xml">QtBluetooth</db:link>. More detailed information about logging can be found in <db:link xlink:href="qloggingcategory.xml">QLoggingCategory</db:link>. A quick way to enable all <db:link xlink:href="qtbluetooth-qmlmodule.xml">QtBluetooth</db:link> logging is to add the following line to the <db:code>main()</db:code> function:</db:para>
<db:programlisting language="cpp">QLoggingCategory::setFilterRules(QStringLiteral(&quot;qt.bluetooth* = true&quot;));
</db:programlisting>
</db:section>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>QML</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-scanner-example.xml">QML Bluetooth Scanner</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-picturetransfer-example.xml">QML Bluetooth Picture Push</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-pingpong-example.xml">QML Bluetooth PingPong</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-chat-example.xml">QML Bluetooth Chat</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-heartrate-game-example.xml">Bluetooth Low Energy Heart Rate Game</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-heartrate-server-example.xml">Bluetooth Low Energy Heart Rate Server</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-lowenergyscanner-example.xml">Bluetooth Low Energy Scanner</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para>C++</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-btchat-example.xml">Bluetooth Chat</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-btscanner-example.xml">Bluetooth Scanner</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtbluetooth-btfiletransfer-example.xml">Bluetooth File Transfer</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="licenses-and-attributions">
<db:title>Licenses and Attributions</db:title>
<db:para>Qt Bluetooth is available under commercial licenses from <db:link xlink:href="http://www.qt.io/about-us/">The Qt Company</db:link>. In addition, it is available under the <db:link xlink:href="http://www.gnu.org/licenses/lgpl-3.0.html">GNU Lesser General Public License, version 3</db:link>, or the <db:link xlink:href="http://www.gnu.org/licenses/gpl-2.0.html">GNU General Public License, version 2</db:link>. See <db:link xlink:href="licensing.xml">Qt Licensing</db:link> for further details.</db:para>
<db:para>On Linux, Qt Bluetooth uses a separate executable, <db:code>sdpscanner</db:code>, to integrate with the official Linux bluetooth protocol stack BlueZ. BlueZ is available under the <db:link xlink:href="http://www.gnu.org/licenses/gpl-2.0.html">GNU General Public License, version 2</db:link>.</db:para>
<db:para/>
</db:section>
</db:article>
