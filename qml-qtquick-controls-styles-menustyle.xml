<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>MenuStyle QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides custom styling for Menu.</db:para>
<db:para>This type was introduced in Qt 5.3.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls.Styles 1.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.3</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>MenuStyle is part of <db:simplelist><db:member><db:link xlink:href="controlsstyling.xml">Styling Controls</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:anchor xml:id="styledata-properties"/>
<db:para>The <db:emphasis role="bold">styleData</db:emphasis> object contains the following read-only properties:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.index</db:emphasis> : int</db:para>
</db:td>
<db:td>
<db:para>The index of the menu item in its menu.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.type</db:emphasis> : enumeration</db:para>
</db:td>
<db:td>
<db:para>The type of menu item. See below for possible values.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.selected</db:emphasis> : bool</db:para>
</db:td>
<db:td>
<db:para><db:code>true</db:code> if the menu item is selected.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.pressed</db:emphasis> : bool</db:para>
</db:td>
<db:td>
<db:para><db:code>true</db:code> if the menu item is pressed. Available since 5.4.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.text</db:emphasis> : string</db:para>
</db:td>
<db:td>
<db:para>The menu item's text, or title if it's a submenu.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.underlineMnemonic</db:emphasis> : bool</db:para>
</db:td>
<db:td>
<db:para>Whether the style should underline the menu item's label mnemonic.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.shortcut</db:emphasis> : string</db:para>
</db:td>
<db:td>
<db:para>The text for the menu item's shortcut.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.iconSource</db:emphasis> : url</db:para>
</db:td>
<db:td>
<db:para>The source URL to the menu item's icon. Undefined if it has no icon.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.enabled</db:emphasis> : bool</db:para>
</db:td>
<db:td>
<db:para><db:code>true</db:code> if the menu item is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.checkable</db:emphasis> : bool</db:para>
</db:td>
<db:td>
<db:para><db:code>true</db:code> if the menu item is checkable.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.exclusive</db:emphasis> : bool</db:para>
</db:td>
<db:td>
<db:para><db:code>true</db:code> if the menu item is checkable, and it's part of an <db:link xlink:href="qml-qtquick-controls-exclusivegroup.xml">ExclusiveGroup</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.checked</db:emphasis> : bool</db:para>
</db:td>
<db:td>
<db:para><db:code>true</db:code> if the menu item is checkable and currently checked.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.scrollerDirection</db:emphasis> : enumeration</db:para>
</db:td>
<db:td>
<db:para>If the menu item is a scroller, its pointing direction. Valid values are <db:code>Qt.UpArrow</db:code>, <db:code>Qt.DownArrow</db:code>, and <db:code>Qt.NoArrow</db:code>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The valid values for <db:emphasis role="bold">styleData.type</db:emphasis> are:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>MenuItemType.Item</db:para>
</db:listitem>
<db:listitem>
<db:para>MenuItemType.Menu</db:para>
</db:listitem>
<db:listitem>
<db:para>MenuItemType.Separator</db:para>
</db:listitem>
<db:listitem>
<db:para>MenuItemType.ScrollIndicator</db:para>
</db:listitem>
</db:itemizedlist>
<db:note>
<db:para>Styling menus may not be supported on platforms using native menus through their QPA plugin.</db:para>
</db:note>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="font-prop">
<db:title>[since QtQuick.Controls.Styles 1.3] font : font</db:title>
<db:para>The font of the control.</db:para>
<db:para>This property was introduced in QtQuick.Controls.Styles 1.3.</db:para>
</db:section>
<db:section xml:id="frame-prop">
<db:title>frame : Component</db:title>
<db:para>The background frame for the menu popup.</db:para>
<db:para>The <db:link xlink:href="qml-qtquick-controls-menu.xml">Menu</db:link> will resize the frame to its contents plus the padding.</db:para>
</db:section>
<db:section xml:id="itemDelegate-prop">
<db:title>itemDelegate : Object</db:title>
<db:para>The object containing the menu item subcontrol components. These subcontrols are used for normal menu items only, i.e. not for separators or scroll indicators.</db:para>
<db:para>The subcontrols are:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:emphasis role="bold">itemDelegate.background</db:emphasis> : Component</db:para>
<db:para>The menu item background component.</db:para>
<db:para>Its appearance generally changes with <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.selected</db:link> and <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.enabled</db:link>.</db:para>
<db:para>The default implementation shows only when the item is enabled and selected. It remains invisible otherwise.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis role="bold">itemDelegate.label</db:emphasis> : Component</db:para>
<db:para>Component for the actual text label.</db:para>
<db:para>The text itself is fetched from <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.text</db:link>, and its appearance should depend on <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.enabled</db:link> and <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.selected</db:link>.</db:para>
<db:para>If <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.underlineMnemonic</db:link> is true, the label should underline its mnemonic character. <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#formatMnemonic-method">formatMnemonic</db:link> provides the default formatting.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis role="bold">itemDelegate.submenuIndicator</db:emphasis> : Component</db:para>
<db:para>It indicates that the current menu item is a submenu.</db:para>
<db:para>Only used when <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.type</db:link> equals <db:code>MenuItemType.Menu</db:code>.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis role="bold">itemDelegate.shortcut</db:emphasis> : Component</db:para>
<db:para>Displays the shortcut attached to the menu item.</db:para>
<db:para>Only used when <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.shortcut</db:link> is not empty.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis role="bold">itemDelegate.checkmarkIndicator</db:emphasis> : Component</db:para>
<db:para>Will be used when <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.checkable</db:link> is <db:code>true</db:code> and its appearance may depend on <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.exclusive</db:link>, i.e., whether it will behave like a checkbox or a radio button. Use <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.checked</db:link> for the checked state.</db:para>
</db:listitem>
</db:itemizedlist>
<db:note>
<db:para>This property cannot be overwritten although all of the subcontrol properties can.</db:para>
</db:note>
</db:section>
<db:section xml:id="padding-prop">
<db:title>padding group</db:title>
<db:bridgehead renderas="sect2" xml:id="padding.bottom-prop">padding.bottom : int</db:bridgehead>
<db:bridgehead renderas="sect2" xml:id="padding.left-prop">padding.left : int</db:bridgehead>
<db:bridgehead renderas="sect2" xml:id="padding.right-prop">padding.right : int</db:bridgehead>
<db:bridgehead renderas="sect2" xml:id="padding.top-prop">padding.top : int</db:bridgehead>
<db:para>This grouped property holds the <db:code>top</db:code>, <db:code>left</db:code>, <db:code>right</db:code> and <db:code>bottom</db:code> padding.</db:para>
</db:section>
<db:section xml:id="scrollIndicator-prop">
<db:title>scrollIndicator : Component</db:title>
<db:para>Component for the scroll indicator menu item.</db:para>
<db:para>Will be used when <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.type</db:link> equals <db:code>MenuItemType.ScrollIndicator</db:code>. Its appearance should follow <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.scrollerDirection</db:link>.</db:para>
<db:para>This is the item added at the top and bottom of the menu popup when its contents won't fit the screen to indicate more content is available in the direction of the arrow.</db:para>
</db:section>
<db:section xml:id="separator-prop">
<db:title>separator : Component</db:title>
<db:para>Component for the separator menu item.</db:para>
<db:para>Will be used when <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml#styledata-properties">styleData.type</db:link> equals <db:code>MenuItemType.Separator</db:code>.</db:para>
</db:section>
<db:section xml:id="submenuOverlap-prop">
<db:title>submenuOverlap : int</db:title>
<db:para>The amount of pixels by which a submenu popup overlaps horizontally its parent menu.</db:para>
</db:section>
<db:section xml:id="submenuPopupDelay-prop">
<db:title>submenuPopupDelay : int</db:title>
<db:para>The number of milliseconds to wait before opening a submenu.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="formatMnemonic-method">
<db:title>string formatMnemonic(string <db:emphasis>text</db:emphasis>, bool <db:emphasis>underline</db:emphasis> = false)</db:title>
<db:para>Returns a rich-text string to render mnemonics for a given menu item.</db:para>
<db:para>The mnemonic character is prefixed by an ampersand in the original string.</db:para>
<db:para>Passing <db:code>true</db:code> for <db:code>underline</db:code> will underline the mnemonic character (e.g., <db:code>formatMnemonic(&quot;&amp;Open...&quot;, true)</db:code> will return <db:code>&quot;&lt;u&gt;O&lt;/u&gt;pen...&quot;</db:code>). Passing <db:code>false</db:code> for <db:code>underline</db:code> will return the plain text form (e.g., <db:code>formatMnemonic(&quot;&amp;Open...&quot;, false)</db:code> will return <db:code>&quot;Open...&quot;</db:code>).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-label.xml">Label</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
