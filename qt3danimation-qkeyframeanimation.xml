<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QKeyframeAnimation Class</db:title>
<db:subtitle>Qt3DAnimation::QKeyframeAnimation</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A class implementing simple keyframe animation to a QTransform.</db:para>
<db:para>This class was introduced in Qt 5.9.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QKeyframeAnimation</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.9</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3danimation)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3danimation)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3danimation</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-animation-keyframeanimation.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3danimation-qabstractanimation.xml" xlink:role="class">Qt3DAnimation::QAbstractAnimation</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qt3danimation-qkeyframeanimation.xml">Qt3DAnimation::QKeyframeAnimation</db:link> class implements simple keyframe animation that can be used to animate QTransform. The keyframes consists of multiple timed QTransforms, which are interpolated and applied to the target QTransform. QEasingCurve is used between keyframes to control the interpolator. <db:link xlink:href="qt3danimation-qkeyframeanimation.xml#RepeatMode-enum">RepeatMode</db:link> can be set for when the position set to the <db:link xlink:href="qt3danimation-qkeyframeanimation.xml">QKeyframeAnimation</db:link> is below or above the values defined in the keyframe positions.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="RepeatMode-enum">
<db:title>enum QKeyframeAnimation::RepeatMode</db:title>
<db:enumsynopsis>
<db:enumname>RepeatMode</db:enumname>
<db:enumitem>
<db:enumidentifier>None</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Constant</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Repeat</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enumeration specifies how position values outside keyframe values are handled.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3danimation.xml">Qt3DAnimation</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3danimation-qkeyframeanimation.xml">QKeyframeAnimation</db:link></db:emphasis>::None</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The animation is not applied to the target transform.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3danimation.xml">Qt3DAnimation</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3danimation-qkeyframeanimation.xml">QKeyframeAnimation</db:link></db:emphasis>::Constant</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The edge keyframe value is used.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3danimation.xml">Qt3DAnimation</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3danimation-qkeyframeanimation.xml">QKeyframeAnimation</db:link></db:emphasis>::Repeat</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The animation is repeated.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="easing-prop">
<db:title>easing : QEasingCurve</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QEasingCurve</db:type>
<db:varname>easing</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">easing</db:synopsisinfo>
<db:synopsisinfo role="setter">setEasing</db:synopsisinfo>
<db:synopsisinfo role="notifier">easingChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the easing curve of the interpolator between keyframes.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QEasingCurve</db:type> <db:emphasis role="bold">easing</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setEasing</db:emphasis>(const <db:type>QEasingCurve</db:type> &amp;<db:emphasis>easing</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">easingChanged</db:emphasis>(const <db:type>QEasingCurve</db:type> &amp;<db:emphasis>easing</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="endMode-prop">
<db:title>endMode : RepeatMode</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>RepeatMode</db:type>
<db:varname>endMode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">endMode</db:synopsisinfo>
<db:synopsisinfo role="setter">setEndMode</db:synopsisinfo>
<db:synopsisinfo role="notifier">endModeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the repeat mode for the position values greater than the last frame position.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3danimation-qkeyframeanimation.xml#RepeatMode-enum">Qt3DAnimation::QKeyframeAnimation::RepeatMode</db:link></db:type> <db:emphasis role="bold">endMode</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setEndMode</db:emphasis>(<db:type><db:link xlink:href="qt3danimation-qkeyframeanimation.xml#RepeatMode-enum">Qt3DAnimation::QKeyframeAnimation::RepeatMode</db:link></db:type> <db:emphasis>mode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">endModeChanged</db:emphasis>(<db:type><db:link xlink:href="qt3danimation-qkeyframeanimation.xml#RepeatMode-enum">QKeyframeAnimation::RepeatMode</db:link></db:type> <db:emphasis>endMode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="framePositions-prop">
<db:title>framePositions : QList&lt;float&gt;</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QList&lt;float&gt;</db:type>
<db:varname>framePositions</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">framePositions</db:synopsisinfo>
<db:synopsisinfo role="setter">setFramePositions</db:synopsisinfo>
<db:synopsisinfo role="notifier">framePositionsChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the positions of the keyframes. Each position in the list specifies the position of the corresponding keyframe with the same index. The values must be in an ascending order. Values can be positive or negative and do not have any predefined unit.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QList</db:type>&lt;<db:type>float</db:type>&gt; <db:emphasis role="bold">framePositions</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setFramePositions</db:emphasis>(const <db:type>QList</db:type>&lt;<db:type>float</db:type>&gt; &amp;<db:emphasis>positions</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">framePositionsChanged</db:emphasis>(const <db:type>QList</db:type>&lt;<db:type>float</db:type>&gt; &amp;<db:emphasis>positions</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="startMode-prop">
<db:title>startMode : RepeatMode</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>RepeatMode</db:type>
<db:varname>startMode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">startMode</db:synopsisinfo>
<db:synopsisinfo role="setter">setStartMode</db:synopsisinfo>
<db:synopsisinfo role="notifier">startModeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the repeat mode for the position values less than the first frame position.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3danimation-qkeyframeanimation.xml#RepeatMode-enum">Qt3DAnimation::QKeyframeAnimation::RepeatMode</db:link></db:type> <db:emphasis role="bold">startMode</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setStartMode</db:emphasis>(<db:type><db:link xlink:href="qt3danimation-qkeyframeanimation.xml#RepeatMode-enum">Qt3DAnimation::QKeyframeAnimation::RepeatMode</db:link></db:type> <db:emphasis>mode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">startModeChanged</db:emphasis>(<db:type><db:link xlink:href="qt3danimation-qkeyframeanimation.xml#RepeatMode-enum">QKeyframeAnimation::RepeatMode</db:link></db:type> <db:emphasis>startMode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="target-prop">
<db:title>target : Qt3DCore::QTransform*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DCore::QTransform*</db:type>
<db:varname>target</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">target</db:synopsisinfo>
<db:synopsisinfo role="setter">setTarget</db:synopsisinfo>
<db:synopsisinfo role="notifier">targetChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the target QTransform the animation is applied to.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qtransform.xml">Qt3DCore::QTransform</db:link></db:type> *<db:emphasis role="bold">target</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTarget</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qtransform.xml">Qt3DCore::QTransform</db:link></db:type> *<db:emphasis>target</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">targetChanged</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qtransform.xml">Qt3DCore::QTransform</db:link></db:type> *<db:emphasis>target</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="targetName-prop">
<db:title>targetName : QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>targetName</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">targetName</db:synopsisinfo>
<db:synopsisinfo role="setter">setTargetName</db:synopsisinfo>
<db:synopsisinfo role="notifier">targetNameChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the name of the target transform. This is a convenience property making it easier to match the target transform to the keyframe animation. The name is usually same as the name of the parent entity of the target transform, but does not have to be.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QString</db:type> <db:emphasis role="bold">targetName</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTargetName</db:emphasis>(const <db:type>QString</db:type> &amp;<db:emphasis>name</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">targetNameChanged</db:emphasis>(const <db:type>QString</db:type> &amp;<db:emphasis>name</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QKeyframeAnimation">
<db:title>[explicit] QKeyframeAnimation::QKeyframeAnimation(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QKeyframeAnimation</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QKeyframeAnimation(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an <db:link xlink:href="qt3danimation-qkeyframeanimation.xml">QKeyframeAnimation</db:link> with <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="addKeyframe">
<db:title>void QKeyframeAnimation::addKeyframe(Qt3DCore::QTransform *<db:emphasis>keyframe</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addKeyframe</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QTransform *</db:type>
<db:parameter>keyframe</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addKeyframe(Qt3DCore::QTransform *keyframe)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Adds new <db:code role="parameter">keyframe</db:code> at the end of the animation. The QTransform can be added to the animation multiple times.</db:para>
</db:section>
<db:section xml:id="keyframeList">
<db:title>QList&lt;Qt3DCore::QTransform *&gt; QKeyframeAnimation::keyframeList() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;Qt3DCore::QTransform *&gt;</db:type>
<db:methodname>keyframeList</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;Qt3DCore::QTransform *&gt; keyframeList() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of keyframes.</db:para>
</db:section>
<db:section xml:id="removeKeyframe">
<db:title>void QKeyframeAnimation::removeKeyframe(Qt3DCore::QTransform *<db:emphasis>keyframe</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>removeKeyframe</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QTransform *</db:type>
<db:parameter>keyframe</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void removeKeyframe(Qt3DCore::QTransform *keyframe)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Removes a <db:code role="parameter">keyframe</db:code> from the animation. If the same QTransform is set as keyframe multiple times, all occurrences are removed.</db:para>
</db:section>
<db:section xml:id="setKeyframes">
<db:title>void QKeyframeAnimation::setKeyframes(const QList&lt;Qt3DCore::QTransform *&gt; &amp;<db:emphasis>keyframes</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setKeyframes</db:methodname>
<db:methodparam>
<db:type>const QList&lt;Qt3DCore::QTransform *&gt; &amp;</db:type>
<db:parameter>keyframes</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setKeyframes(const QList&lt;Qt3DCore::QTransform *&gt; &amp;keyframes)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the <db:code role="parameter">keyframes</db:code> of the animation. Old keyframes are cleared.</db:para>
</db:section>
</db:section>
</db:article>
