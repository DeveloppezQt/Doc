<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>SelectionListModel Class</db:title>
<db:subtitle>QtVirtualKeyboard::SelectionListModel</db:subtitle>
<db:productname>QtVirtualKeyboard</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Virtual Keyboard</db:titleabbrev>
<db:abstract>
<db:para>List model for selection lists.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>SelectionListModel</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-virtualkeyboard-selectionlistmodel.xml" xlink:role="">SelectionListModel</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstractlistmodel.xml" xlink:role="class">QAbstractListModel</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This class acts as a bridge between the UI and the input method that provides the data for selection lists.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Role-enum">
<db:title>enum SelectionListModel::Role</db:title>
<db:para>This enum specifies a role of the data requested.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtvirtualkeyboard.xml">QtVirtualKeyboard</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qtvirtualkeyboard-selectionlistmodel.xml">SelectionListModel</db:link></db:emphasis>::DisplayRole</db:code></db:para>
</db:td>
<db:td><db:code>Qt::DisplayRole</db:code></db:td>
<db:td>
<db:para>The data to be rendered in form of text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtvirtualkeyboard.xml">QtVirtualKeyboard</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qtvirtualkeyboard-selectionlistmodel.xml">SelectionListModel</db:link></db:emphasis>::WordCompletionLengthRole</db:code></db:para>
</db:td>
<db:td><db:code>Qt::UserRole + 1</db:code></db:td>
<db:td>
<db:para>An integer specifying the length of the word the completion part expressed as the number of characters counted from the end of the string.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="Type-enum">
<db:title>enum SelectionListModel::Type</db:title>
<db:para>This enum specifies the type of selection list.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtvirtualkeyboard.xml">QtVirtualKeyboard</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qtvirtualkeyboard-selectionlistmodel.xml">SelectionListModel</db:link></db:emphasis>::WordCandidateList</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Shows list of word candidates</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="activeItemChanged">
<db:title>void SelectionListModel::activeItemChanged(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted when the active item in the list changes. The UI should react to this signal by highlighting the item at <db:code role="parameter">index</db:code> in the list.</db:para>
</db:section>
<db:section xml:id="itemSelected">
<db:title>void SelectionListModel::itemSelected(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted when an item at <db:code role="parameter">index</db:code> is selected by the user.</db:para>
</db:section>
<db:section xml:id="selectItem">
<db:title>void SelectionListModel::selectItem(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This method should be called when the user selects an item at position <db:code role="parameter">index</db:code> from the list. The selection is forwarded to the input method for further processing.</db:para>
</db:section>
</db:section>
</db:article>
