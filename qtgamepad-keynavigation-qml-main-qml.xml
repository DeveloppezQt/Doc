<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Gamepad Key Navigation Example</db:title>
<db:productname>QtGamepad</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Gamepad Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates how to use navigation keys on the gamepad.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Gamepad module
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.2
import QtQuick.Controls 1.1
import QtGamepad 1.0

ApplicationWindow {
    visible: true
    width: 640
    height: 480
    title: qsTr(&quot;Gamepad Key Navigation&quot;)

    Gamepad {
        id: gamepad1
        deviceId: GamepadManager.connectedGamepads.length &gt; 0 ? GamepadManager.connectedGamepads[0] : -1
    }

    Connections {
        target: GamepadManager
        onGamepadConnected: gamepad1.deviceId = deviceId
    }

    GamepadKeyNavigation {
        id: gamepadKeyNavigation
        gamepad: gamepad1
        active: true
        buttonYKey: Qt.Key_Y
    }

    Text {
        text: qsTr(&quot;Test key events from Gamepad&quot;)
        anchors.centerIn: parent
        focus: true
        Keys.onPressed: {
            if (event.key === Qt.Key_Up) {
                text = &quot;Key Up Pressed&quot;;
            } else if (event.key === Qt.Key_Down) {
                text = &quot;Key Down Pressed&quot;;
            } else if (event.key === Qt.Key_Right) {
                text = &quot;Key Right Pressed&quot;;
            } else if (event.key === Qt.Key_Left) {
                text = &quot;Key Left Pressed&quot;;
            } else if (event.key === Qt.Key_Return) {
                text = &quot;Key Return Pressed&quot;;
            } else if (event.key === Qt.Key_Back) {
                text = &quot;Key Back Pressed&quot;;
            } else if (event.key === Qt.Key_Forward) {
                text = &quot;Key Forward Pressed&quot;;
            } else if (event.key === Qt.Key_Y) {
                text = &quot;Key Y Pressed&quot;;
            }
        }
        Keys.onReleased: {
            if (event.key === Qt.Key_Up) {
                text = &quot;Key Up Released&quot;;
            } else if (event.key === Qt.Key_Down) {
                text = &quot;Key Down Released&quot;;
            } else if (event.key === Qt.Key_Right) {
                text = &quot;Key Right Released&quot;;
            } else if (event.key === Qt.Key_Left) {
                text = &quot;Key Left Released&quot;;
            } else if (event.key === Qt.Key_Return) {
                text = &quot;Key Return Released&quot;;
            } else if (event.key === Qt.Key_Back) {
                text = &quot;Key Back Released&quot;;
            } else if (event.key === Qt.Key_Forward) {
                text = &quot;Key Forward Released&quot;;
            } else if (event.key === Qt.Key_Y) {
                text = &quot;Key Y Released&quot;;
            }
        }
    }
}

</db:programlisting>
</db:article>
