<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>FontDialog QML Type</db:title>
<db:productname>QtQuickDialogs</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Dialogs Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A font dialog.</db:para>
<db:para>This type was introduced in Qt 6.2.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Dialogs</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Dialog</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtquick-dialogs-fontdialog.xml">FontDialog</db:link> type provides a QML API for font dialogs.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickdialogs-fontdialog-gtk.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>To show a font dialog, construct an instance of <db:link xlink:href="qml-qtquick-dialogs-fontdialog.xml">FontDialog</db:link>, set the desired properties, and call <db:link xlink:href="qml-qtquick-dialogs-dialog.xml#open-method">open</db:link>(). The <db:link xlink:href="qml-qtquick-dialogs-fontdialog.xml#currentFont-prop" role="deprecated">currentFont</db:link> property can be used to determine the currently selected font in the dialog. The <db:link xlink:href="qml-qtquick-dialogs-fontdialog.xml#selectedFont-prop">selectedFont</db:link> property is updated only after the final selection has been made by accepting the dialog.</db:para>
<db:programlisting language="cpp">MenuItem {
    text: &quot;Font&quot;
    onTriggered: fontDialog.open()
}

FontDialog {
    id: fontDialog
    currentFont.family: document.font
}

MyDocument {
    id: document
    font: fontDialog.selectedFont
}
</db:programlisting>
<db:section xml:id="availability">
<db:title>Availability</db:title>
<db:para>A native platform font dialog is currently available on the following platforms:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>iOS</db:para>
</db:listitem>
<db:listitem>
<db:para>Linux (when running with the GTK+ platform theme)</db:para>
</db:listitem>
<db:listitem>
<db:para>macOS</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Qt Quick Dialogs uses a Qt Quick implementation as a fallback on platforms that do not have a native implementation available.</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="options-prop">
<db:title>options : flags</db:title>
<db:fieldsynopsis>
<db:type>flags</db:type>
<db:varname>options</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the various options that affect the look and feel of the dialog.</db:para>
<db:para>By default, all options are disabled.</db:para>
<db:para>Options should be set before showing the dialog. Setting them while the dialog is visible is not guaranteed to have an immediate effect on the dialog (depending on the option and on the platform).</db:para>
<db:para>Available options:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>FontDialog.ScalableFonts</db:para>
</db:td>
<db:td>
<db:para>Show scalable fonts.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FontDialog.NonScalableFonts</db:para>
</db:td>
<db:td>
<db:para>Show non-scalable fonts.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FontDialog.MonospacedFonts</db:para>
</db:td>
<db:td>
<db:para>Show monospaced fonts.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FontDialog.ProportionalFonts</db:para>
</db:td>
<db:td>
<db:para>Show proportional fonts.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FontDialog.NoButtons</db:para>
</db:td>
<db:td>
<db:para>Don't display <db:guilabel>Open</db:guilabel> and <db:guilabel>Cancel</db:guilabel> buttons (useful for &quot;live dialogs&quot;).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FontDialog.DontUseNativeDialog</db:para>
</db:td>
<db:td>
<db:para>Forces the dialog to use a non-native quick implementation.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="selectedFont-prop">
<db:title>selectedFont : font</db:title>
<db:fieldsynopsis>
<db:type>font</db:type>
<db:varname>selectedFont</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the currently selected font in the dialog.</db:para>
<db:para>The <db:code>selectedFont</db:code> property is updated while the user is selecting fonts in the dialog, even before the final selection has been made.</db:para>
<db:para>The <db:link xlink:href="qml-qtquick-dialogs-dialog.xml#accepted-signal">accepted</db:link>() signal can be handled to get the final selection. When the user has clicked <db:guilabel>Open</db:guilabel> to accept a font, a signal handler for the <db:link xlink:href="qml-qtquick-dialogs-dialog.xml#accepted-signal">accepted</db:link>() signal can query the selectedFont property to get the final font that was selected by the user.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-dialogs-fontdialog.xml#currentFont-prop" role="deprecated">currentFont</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-dialogs-dialog.xml#accepted-signal">accepted</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for FontDialog</db:title>
<db:para><db:emphasis role="bold">The following members of QML type <db:link xlink:href="qml-qtquick-dialogs-fontdialog.xml">FontDialog</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-property-documentation">
<db:title>Obsolete Property Documentation</db:title>
<db:section xml:id="currentFont-prop">
<db:title>currentFont : font</db:title>
<db:fieldsynopsis>
<db:type>font</db:type>
<db:varname>currentFont</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property is deprecated since 6.3. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qml-qtquick-dialogs-fontdialog.xml#selectedFont-prop">selectedFont</db:link> instead.</db:para>
<db:para>This property holds the currently selected font in the dialog.</db:para>
<db:para>The <db:code>currentFont</db:code> property is updated while the user is selecting fonts in the dialog, even before the final selection has been made.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-dialogs-fontdialog.xml#selectedFont-prop">selectedFont</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:section>
</db:article>
