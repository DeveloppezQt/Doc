<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Texture QML Type</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Defines a texture for use in 3D scenes.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick3D</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick3d-cubemaptexture.xml" xlink:role="">CubeMapTexture</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Object3D</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A texture is technically any array of pixels (1D, 2D or 3D) and its related settings, such as minification and magnification filters, scaling and UV transformations.</db:para>
<db:para>The Texture type in Qt Quick 3D represents a two-dimensional image. Its use is typically to map onto / wrap around three-dimensional geometry to emulate additional detail which cannot be efficiently modelled in 3D. It can also be used to emulate other lighting effects, such as reflections.</db:para>
<db:para>While Texture itself always represents a 2D texture, other kinds of textures are available as well via subclasses of Texture. For example, to create a cube map texture with 6 faces, use the <db:link xlink:href="qml-qtquick3d-cubemaptexture.xml">CubeMapTexture</db:link> type.</db:para>
<db:para>When the geometry is being rendered, each location on its surface will be transformed to a corresponding location in the texture by transforming and interpolating the UV coordinates (texture coordinate) that have been set for the mesh's vertexes. The fragment shader program that is being used to render the active material will then typically sample the material's texture(s) at the given coordinates and use the sampled data in its light calculations.</db:para>
<db:note>
<db:para>A Material may use multiple textures to give the desired interaction with light in the 3D scene. It can represent the color of each texel on the geometry surface, but also other attributes of the surface. For instance, a &quot;normal map&quot; can represent the deviation from the geometry normals for each texel on the surface, emulating light interaction with finer details on the surface, such as cracks or bumps. See <db:link xlink:href="qtquick3d-principledmaterial-example.xml">the principled material example</db:link> for a demonstration of a material with multiple texture maps.</db:para>
</db:note>
<db:para>Texture objects can source image data from:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>an image or texture file by using the <db:link xlink:href="qml-qtquick3d-texture.xml#source-prop">source</db:link> property,</db:para>
</db:listitem>
<db:listitem>
<db:para>a Qt Quick <db:link xlink:href="qml-qtquick-item.xml">Item</db:link> by using the <db:link xlink:href="qml-qtquick3d-texture.xml#sourceItem-prop">sourceItem</db:link> property,</db:para>
</db:listitem>
<db:listitem>
<db:para>or by setting the <db:link xlink:href="qml-qtquick3d-texture.xml#textureData-prop">textureData</db:link> property to a <db:link xlink:href="qml-qtquick3d-texturedata.xml">TextureData</db:link> item subclass for defining the custom texture contents.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The following example maps the image &quot;madewithqt.png&quot; onto the default sphere mesh, and scales the UV coordinates to tile the image on the sphere surface.</db:para>
<db:programlisting language="qml">Model {
    source: &quot;#Sphere&quot;
    materials: [ PrincipledMaterial {
            baseColorMap: Texture {
                source: &quot;madewithqt.png&quot;
                scaleU: 4.0
                scaleV: 4.0
            }
        }
    ]
}
</db:programlisting>
<db:para>The result looks as follows:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Original image</db:para>
</db:th>
<db:th>
<db:para>Mapped onto a sphere</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/madewithqt.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/spheremap.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick3d-proceduraltexture-example.xml">Qt Quick 3D - Procedural Texture Example</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="autoOrientation-prop">
<db:title>[since 6.2] autoOrientation : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>autoOrientation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property determines if a texture transformation, such as flipping the V texture coordinate, is applied automatically for textures where this is typically relevant.</db:para>
<db:para>By default, this property is set to true.</db:para>
<db:para>Certain type of texture data, such as compressed textures loaded via the <db:link xlink:href="qml-qtquick3d-texture.xml#source-prop">source</db:link> property from a .ktx or .pkm file, or textures generated by rendering a Qt Quick scene via the <db:link xlink:href="qml-qtquick3d-texture.xml#sourceItem-prop">sourceItem</db:link> property, often have a different Y axis orientation when compared to textures loaded from image files, such as, .png or .jpg. Therefore, such a Texture would appear &quot;upside down&quot; compared to a Texture with its source set to a regular image file. To remedy this, any qualifying Texture gets an implicit UV transformation as if the <db:link xlink:href="qml-qtquick3d-texture.xml#flipV-prop">flipV</db:link> property was set to true. If this is not desired, set this property to false.</db:para>
<db:note>
<db:para>This property is effective when the Texture is used in combination with a DefaultMaterial or <db:link xlink:href="qml-qtquick3d-principledmaterial.xml">PrincipledMaterial</db:link>. <db:link xlink:href="qml-qtquick3d-custommaterial.xml">Custom materials</db:link> provide their own shader code, and so transformations such as the one configured by this property are ignored and are up to the application-provided shader code to implement.</db:para>
</db:note>
<db:para>This property was introduced in Qt 6.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#flipV-prop">flipV</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="flipU-prop">
<db:title>flipU : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>flipU</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property sets the use of the horizontally flipped texture coordinates.</db:para>
<db:para>The default is false.</db:para>
<db:note>
<db:para>This property is effective when the Texture is used in combination with a DefaultMaterial or <db:link xlink:href="qml-qtquick3d-principledmaterial.xml">PrincipledMaterial</db:link>. <db:link xlink:href="qml-qtquick3d-custommaterial.xml">Custom materials</db:link> provide their own shader code, and so transformations such as the one configured by this property are ignored and are up to the application-provided shader code to implement.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#flipV-prop">flipV</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="flipV-prop">
<db:title>flipV : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>flipV</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property sets the use of the vertically flipped texture coordinates.</db:para>
<db:para>The default is false.</db:para>
<db:note>
<db:para>This property is effective when the Texture is used in combination with a DefaultMaterial or <db:link xlink:href="qml-qtquick3d-principledmaterial.xml">PrincipledMaterial</db:link>. <db:link xlink:href="qml-qtquick3d-custommaterial.xml">Custom materials</db:link> provide their own shader code, and so transformations such as the one configured by this property are ignored and are up to the application-provided shader code to implement.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#flipU-prop">flipU</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="generateMipmaps-prop">
<db:title>generateMipmaps : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>generateMipmaps</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property determines if mipmaps are generated for textures that do not provide mipmap levels themselves. Using mipmaps along with mip filtering gives better visual quality when viewing textures at a distance compared rendering without them, but it may come at a performance cost (both when initializing the image and during rendering).</db:para>
<db:para>By default, this property is set to false.</db:para>
<db:note>
<db:para>It is necessary to set a <db:link xlink:href="qml-qtquick3d-texture.xml#mipFilter-prop">mipFilter</db:link> mode for the generated mipmaps to be be used.</db:para>
</db:note>
<db:note>
<db:para>This property is not applicable when the texture content is based on a Qt Quick item referenced by the <db:link xlink:href="qml-qtquick3d-texture.xml#sourceItem-prop">sourceItem</db:link> property. Mipmap generation for dynamic textures is not feasible due to the performance implications. Therefore, the value of this property is ignored for such textures.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#mipFilter-prop">mipFilter</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="indexUV-prop">
<db:title>indexUV : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>indexUV</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property sets the UV coordinate index used by this texture. Since <db:link xlink:href="qtquick3d-qmlmodule.xml">QtQuick3D</db:link> supports 2 UV sets(0 or 1) for now, the value will be saturated to the range.</db:para>
<db:para>The default is 0.</db:para>
</db:section>
<db:section xml:id="magFilter-prop">
<db:title>magFilter : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>magFilter</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property determines how the texture is sampled when it is &quot;magnified&quot;, i.e. a texel covers <db:emphasis>more</db:emphasis> than one pixel in screen space.</db:para>
<db:para>The default value is <db:code>Texture.Linear</db:code>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Texture.Nearest</db:para>
</db:td>
<db:td>
<db:para>uses the value of the closest texel.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Texture.Linear</db:para>
</db:td>
<db:td>
<db:para>takes the four closest texels and bilinearly interpolates them.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:note>
<db:para>Using <db:code>Texture.None</db:code> here will default to <db:code>Texture.Linear</db:code> instead.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#minFilter-prop">minFilter</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#mipFilter-prop">mipFilter</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mappingMode-prop">
<db:title>mappingMode : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>mappingMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines which method of mapping to use when sampling this texture.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Texture.UV</db:para>
</db:td>
<db:td>
<db:para>The default value. Suitable for base color, diffuse, opacity, and most other texture maps. Performs standard UV mapping. The same portion of the image will always appear on the same vertex, unless the UV coordinates are transformed and animated.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Texture.Environment</db:para>
</db:td>
<db:td>
<db:para>Used for <db:link xlink:href="qml-qtquick3d-principledmaterial.xml#specularReflectionMap-prop">specular reflection</db:link>, this causes the image to be projected onto the material as though it was being reflected. Using this mode for other type of texture maps provides a mirror effect.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Texture.LightProbe</db:para>
</db:td>
<db:td>
<db:para>The default for HDRI sphere maps used by light probes. This mode does not need to be manually set for Texture objects associated with the <db:link xlink:href="qml-qtquick3d-sceneenvironment.xml#lightProbe-prop">lightProbe</db:link> property, because it is implied automatically.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="minFilter-prop">
<db:title>minFilter : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>minFilter</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property determines how the texture is sampled when it is &quot;minimized&quot;, i.e. a texel covers <db:emphasis>less</db:emphasis> than one pixel in screen space.</db:para>
<db:para>The default value is <db:code>Texture.Linear</db:code>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Texture.Nearest</db:para>
</db:td>
<db:td>
<db:para>uses the value of the closest texel.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Texture.Linear</db:para>
</db:td>
<db:td>
<db:para>takes the four closest texels and bilinearly interpolates them.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:note>
<db:para>Using <db:code>Texture.None</db:code> here will default to <db:code>Texture.Linear</db:code> instead.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#magFilter-prop">magFilter</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#mipFilter-prop">mipFilter</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mipFilter-prop">
<db:title>mipFilter : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>mipFilter</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property determines how the texture mipmaps are sampled when a texel covers less than one pixel.</db:para>
<db:para>The default value is <db:code>Texture.None</db:code>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Texture.None</db:para>
</db:td>
<db:td>
<db:para>disables the usage of mipmap sampling.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Texture.Nearest</db:para>
</db:td>
<db:td>
<db:para>uses mipmapping and samples the value of the closest texel.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Texture.Linear</db:para>
</db:td>
<db:td>
<db:para>uses mipmapping and interpolates between multiple texel values.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:note>
<db:para>This property will have no effect on Textures that do not have mipmaps.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#minFilter-prop">minFilter</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#magFilter-prop">magFilter</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pivotU-prop">
<db:title>pivotU : float</db:title>
<db:fieldsynopsis>
<db:type>float</db:type>
<db:varname>pivotU</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property sets the pivot U position which is used when applying a <db:link xlink:href="qml-qtquick3d-texture.xml#rotationUV-prop">rotationUV</db:link>.</db:para>
<db:para>The default is 0.0.</db:para>
<db:note>
<db:para>This property is effective when the Texture is used in combination with a DefaultMaterial or <db:link xlink:href="qml-qtquick3d-principledmaterial.xml">PrincipledMaterial</db:link>. <db:link xlink:href="qml-qtquick3d-custommaterial.xml">Custom materials</db:link> provide their own shader code, and so transformations such as the one configured by this property are ignored and are up to the application-provided shader code to implement.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#rotationUV-prop">rotationUV</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pivotV-prop">
<db:title>pivotV : float</db:title>
<db:fieldsynopsis>
<db:type>float</db:type>
<db:varname>pivotV</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property sets the pivot V position which is used when applying a <db:link xlink:href="qml-qtquick3d-texture.xml#rotationUV-prop">rotationUV</db:link>.</db:para>
<db:para>The default is 0.0.</db:para>
<db:note>
<db:para>This property is effective when the Texture is used in combination with a DefaultMaterial or <db:link xlink:href="qml-qtquick3d-principledmaterial.xml">PrincipledMaterial</db:link>. <db:link xlink:href="qml-qtquick3d-custommaterial.xml">Custom materials</db:link> provide their own shader code, and so transformations such as the one configured by this property are ignored and are up to the application-provided shader code to implement.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#pivotU-prop">pivotU</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#rotationUV-prop">rotationUV</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="positionU-prop">
<db:title>positionU : float</db:title>
<db:fieldsynopsis>
<db:type>float</db:type>
<db:varname>positionU</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property offsets the U coordinate mapping from left to right.</db:para>
<db:para>The default is 0.0.</db:para>
<db:note>
<db:para>This property is effective when the Texture is used in combination with a DefaultMaterial or <db:link xlink:href="qml-qtquick3d-principledmaterial.xml">PrincipledMaterial</db:link>. <db:link xlink:href="qml-qtquick3d-custommaterial.xml">Custom materials</db:link> provide their own shader code, and so transformations such as the one configured by this property are ignored and are up to the application-provided shader code to implement.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#positionV-prop">positionV</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="positionV-prop">
<db:title>positionV : float</db:title>
<db:fieldsynopsis>
<db:type>float</db:type>
<db:varname>positionV</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property offsets the V coordinate mapping from bottom to top.</db:para>
<db:para>The default is 0.0.</db:para>
<db:note>
<db:para>Qt Quick 3D uses OpenGL-style vertex data, regardless of the graphics API used at run time. The UV position <db:code>(0, 0)</db:code> is therefore referring to the bottom-left corner of the image data.</db:para>
</db:note>
<db:note>
<db:para>This property is effective when the Texture is used in combination with a DefaultMaterial or <db:link xlink:href="qml-qtquick3d-principledmaterial.xml">PrincipledMaterial</db:link>. <db:link xlink:href="qml-qtquick3d-custommaterial.xml">Custom materials</db:link> provide their own shader code, and so transformations such as the one configured by this property are ignored and are up to the application-provided shader code to implement.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#positionU-prop">positionU</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rotationUV-prop">
<db:title>rotationUV : float</db:title>
<db:fieldsynopsis>
<db:type>float</db:type>
<db:varname>rotationUV</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property rotates the texture around the pivot point. This is defined using euler angles and for a positive value rotation is clockwise.</db:para>
<db:para>The default is 0.0.</db:para>
<db:note>
<db:para>This property is effective when the Texture is used in combination with a DefaultMaterial or <db:link xlink:href="qml-qtquick3d-principledmaterial.xml">PrincipledMaterial</db:link>. <db:link xlink:href="qml-qtquick3d-custommaterial.xml">Custom materials</db:link> provide their own shader code, and so transformations such as the one configured by this property are ignored and are up to the application-provided shader code to implement.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#pivotU-prop">pivotU</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#pivotV-prop">pivotV</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="scaleU-prop">
<db:title>scaleU : float</db:title>
<db:fieldsynopsis>
<db:type>float</db:type>
<db:varname>scaleU</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines how to scale the U texture coordinate when mapping to a mesh's UV coordinates.</db:para>
<db:para>Scaling the U value when using horizontal tiling will define how many times the texture is repeated from left to right.</db:para>
<db:para>The default is 1.0.</db:para>
<db:note>
<db:para>This property is effective when the Texture is used in combination with a DefaultMaterial or <db:link xlink:href="qml-qtquick3d-principledmaterial.xml">PrincipledMaterial</db:link>. <db:link xlink:href="qml-qtquick3d-custommaterial.xml">Custom materials</db:link> provide their own shader code, and so transformations such as the one configured by this property are ignored and are up to the application-provided shader code to implement.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#tilingModeHorizontal-prop">tilingModeHorizontal</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="scaleV-prop">
<db:title>scaleV : float</db:title>
<db:fieldsynopsis>
<db:type>float</db:type>
<db:varname>scaleV</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines how to scale the V texture coordinate when mapping to a mesh's UV coordinates.</db:para>
<db:para>Scaling the V value when using vertical tiling will define how many times a texture is repeated from bottom to top.</db:para>
<db:para>The default is 1.0.</db:para>
<db:note>
<db:para>This property is effective when the Texture is used in combination with a DefaultMaterial or <db:link xlink:href="qml-qtquick3d-principledmaterial.xml">PrincipledMaterial</db:link>. <db:link xlink:href="qml-qtquick3d-custommaterial.xml">Custom materials</db:link> provide their own shader code, and so transformations such as the one configured by this property are ignored and are up to the application-provided shader code to implement.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#tilingModeVertical-prop">tilingModeVertical</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="source-prop">
<db:title>source : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>source</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the location of an image or texture file containing the data used by the texture.</db:para>
<db:para>The property is a URL, with the same rules as other source properties, such as <db:link xlink:href="qml-qtquick-image.xml#source-prop">Image.source</db:link>. With Texture, only the <db:code>qrc</db:code> and <db:code>file</db:code> schemes are supported. When no scheme is present and the value is a relative path, it is assumed to be relative to the component's (i.e. the <db:code>.qml</db:code> file's) location.</db:para>
<db:para>The source file can have any conventional image file format <db:link xlink:href="qimagereader.xml#supportedImageFormats">supported by Qt</db:link>. In addition, Texture supports the same <db:link xlink:href="qml-qtquick-image.xml#compressed-texture-files">compressed texture file types</db:link> as QtQuick::Image.</db:para>
<db:note>
<db:para>Texture data read from image files such as .png or .jpg involves storing the rows of pixels within the texture in an order defined the Qt Quick 3D rendering engine. When the source file is a container for - possibly compressed - texture data, such transformations cannot happen on the pixel data level. Examples of this are .ktx or .pkm files. Instead, the Texture implicitly enables vertical flipping in the fragment shader code in order to get identical on-screen results. This is controlled by the <db:link xlink:href="qml-qtquick3d-texture.xml#autoOrientation-prop">autoOrientation</db:link> property and can be disabled, if desired.</db:para>
</db:note>
<db:note>
<db:para>Some texture compression tools may apply automatic vertical mirroring (flipping) on the image data. In modern tools this is often an opt-in setting. It is important to be aware of the settings used in the asset conditioning pipeline, because an unexpectedly flipped texture, and thus incorrect texturing of objects, can have its root cause in the asset itself, outside the application's and rendering engine's control. When the asset requires it, applications can always set the <db:link xlink:href="qml-qtquick3d-texture.xml#flipV-prop">flipV</db:link> property themselves.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#sourceItem-prop">sourceItem</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#textureData-prop">textureData</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#autoOrientation-prop">autoOrientation</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#flipV-prop">flipV</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sourceItem-prop">
<db:title>sourceItem : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>sourceItem</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines a Item to be used as the source of the texture. Using this property allows any 2D Qt Quick content to be used as a texture source by rendering that item as an offscreen layer.</db:para>
<db:para>If the item is a <db:link xlink:href="qquickitem.xml#textureProvider">texture provider</db:link>, no additional texture is used.</db:para>
<db:para>If this property is set, then the value of <db:link xlink:href="qml-qtquick3d-texture.xml#source-prop">source</db:link> will be ignored. A Texture should use one method to provide image data, and set only one of source, sourceItem, or <db:link xlink:href="qml-qtquick3d-texture.xml#textureData-prop">textureData</db:link>.</db:para>
<db:note>
<db:para>Currently input events are forwarded to the Item used as a texture source only if the user is limited to interacting with one sourceItem instance at a time. In other words: you can share the same Item between multiple Textures, but then you cannot have multi-touch interaction with the same item on multiple textures at the same time. So it's best to use a separate 2D subscene instance for each Texture instance, if you expect to manipulate interactive items inside.</db:para>
</db:note>
<db:note>
<db:para>Using this property in a Texture that is referenced from multiple windows is strongly discouraged. This includes usage via <db:link xlink:href="qml-qtquick3d-view3d.xml#importScene-prop">View3D::importScene</db:link>. As the source texture created by this property is only accessible by one render thread, attempting to share it between multiple <db:link xlink:href="qquickwindow.xml">QQuickWindow</db:link> instances is going to fail, unless the <db:code>basic</db:code> render loop of Qt Quick is used instead of the default <db:code>threaded</db:code> one. See <db:link xlink:href="qtquick-visualcanvas-scenegraph.xml">Qt Quick Scene Graph</db:link> on more information about the Qt Quick render loops.</db:para>
</db:note>
<db:note>
<db:para>A Texture that contains the results of a Qt Quick offscreen render pass will in effect have an Y axis orientation that is different from what a Texture that receives its content via the source property uses. When used in combination with DefaultMaterial or <db:link xlink:href="qml-qtquick3d-principledmaterial.xml">PrincipledMaterial</db:link>, this is all transparent to the application as the necessary UV transformations are applied automatically as long as the <db:link xlink:href="qml-qtquick3d-texture.xml#autoOrientation-prop">autoOrientation</db:link> property is set to true, and so no further action is needed, regardless of how the texture was sourced. However, when developing <db:link xlink:href="qml-qtquick3d-custommaterial.xml">custom materials</db:link> this needs to be kept in mind by the shader code author when sampling the texture and working with UV coordinates.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#source-prop">source</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#textureData-prop">textureData</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#autoOrientation-prop">autoOrientation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="textureData-prop">
<db:title>textureData : TextureData</db:title>
<db:fieldsynopsis>
<db:type>TextureData</db:type>
<db:varname>textureData</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a reference to a <db:link xlink:href="qml-qtquick3d-texturedata.xml">TextureData</db:link> component which defines the contents and properties of raw texture data.</db:para>
<db:para>If this property is used, then the value of <db:link xlink:href="qml-qtquick3d-texture.xml#source-prop">source</db:link> will be ignored. A Texture should use one method to provide image data, and set only one of source, <db:link xlink:href="qml-qtquick3d-texture.xml#sourceItem-prop">sourceItem</db:link>, or textureData.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#source-prop">source</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#sourceItem-prop">sourceItem</db:link></db:member>
<db:member><db:link xlink:href="qtquick3d-proceduraltexture-example.xml">Qt Quick 3D - Procedural Texture Example</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="textureProvider-prop">
<db:title>[since 6.7] textureProvider : RenderExtension</db:title>
<db:fieldsynopsis>
<db:type>RenderExtension</db:type>
<db:varname>textureProvider</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the <db:link xlink:href="qml-qtquick3d-renderextension.xml">RenderExtension</db:link> that will provide the <db:link xlink:href="qrhitexture.xml">QRhiTexture</db:link> that will be used by this item.</db:para>
<db:note>
<db:para>The texture created by <db:link xlink:href="qml-qtquick3d-renderextension.xml">RenderExtension</db:link> needs to be made available by <db:link xlink:href="qssgrenderextensionhelpers.xml#registerRenderResult">registering</db:link> it with the engine.</db:para>
</db:note>
<db:para>This property was introduced in Qt 6.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-renderextension.xml">RenderExtension</db:link></db:member>
<db:member><db:link xlink:href="qssgrenderextensionhelpers.xml">QSSGRenderExtensionHelpers</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="tilingModeDepth-prop">
<db:title>tilingModeDepth : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>tilingModeDepth</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property controls how the texture is mapped when the Z scaling value is greater than 1.</db:para>
<db:para>By default, this property is set to <db:code>Texture.Repeat</db:code>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Texture.ClampToEdge</db:para>
</db:td>
<db:td>
<db:para>Texture is not tiled, but the value on the edge is used instead.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Texture.MirroredRepeat</db:para>
</db:td>
<db:td>
<db:para>Texture is repeated and mirrored over the Z axis.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Texture.Repeat</db:para>
</db:td>
<db:td>
<db:para>Texture is repeated over the Z axis.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="tilingModeHorizontal-prop">
<db:title>tilingModeHorizontal : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>tilingModeHorizontal</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Controls how the texture is mapped when the U scaling value is greater than 1.</db:para>
<db:para>By default, this property is set to <db:code>Texture.Repeat</db:code>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Texture.ClampToEdge</db:para>
</db:td>
<db:td>
<db:para>Texture is not tiled, but the value on the edge is used instead.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Texture.MirroredRepeat</db:para>
</db:td>
<db:td>
<db:para>Texture is repeated and mirrored over the X axis.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Texture.Repeat</db:para>
</db:td>
<db:td>
<db:para>Texture is repeated over the X axis.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#scaleU-prop">scaleU</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="tilingModeVertical-prop">
<db:title>tilingModeVertical : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>tilingModeVertical</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property controls how the texture is mapped when the V scaling value is greater than 1.</db:para>
<db:para>By default, this property is set to <db:code>Texture.Repeat</db:code>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Texture.ClampToEdge</db:para>
</db:td>
<db:td>
<db:para>Texture is not tiled, but the value on the edge is used instead.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Texture.MirroredRepeat</db:para>
</db:td>
<db:td>
<db:para>Texture is repeated and mirrored over the Y axis.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Texture.Repeat</db:para>
</db:td>
<db:td>
<db:para>Texture is repeated over the Y axis.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml#scaleV-prop">scaleV</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
