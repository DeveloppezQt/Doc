<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Style Sheets Reference</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="stylesheet-customizing.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Customizing Qt Widgets Using Style Sheets"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="stylesheet-examples.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="Qt Style Sheets Examples"/></db:extendedlink>
<db:abstract>
<db:para>Qt Widgets Reference Documentation.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>{Qt Style Sheets}{Contents}</db:para>
<db:para>Qt Style Sheets support various properties, pseudo-states, and subcontrols that make it possible to customize the look of widgets.</db:para>
<db:section xml:id="list-of-stylable-widgets">
<db:title>List of Stylable Widgets</db:title>
<db:para>The following table lists the Qt widgets that can be customized using style sheets:</db:para>
<db:informaltable style="generic" width="100%">
<db:thead>
<db:tr>
<db:th>
<db:para>Widget</db:para>
</db:th>
<db:th>
<db:para>How to Style</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qabstractscrollarea.xml">QAbstractScrollArea</db:link> <db:anchor xml:id="qabstractscrollarea-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>.</db:para>
<db:para>All derivatives of <db:link xlink:href="qabstractscrollarea.xml">QAbstractScrollArea</db:link>, including <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, and <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> (all item view classes), support scrollable backgrounds using <db:link xlink:href="stylesheet-reference.xml#background-attachment-prop">background-attachment</db:link>. Setting the background-attachment to fixed provides a background-image that does not scroll with the viewport. Setting the background-attachment to scroll, scrolls the background-image when the scroll bars move.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qabstractscrollarea">Customizing QAbstractScrollArea</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qcheckbox.xml">QCheckBox</db:link> <db:anchor xml:id="qcheckbox-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. The check indicator can be styled using the <db:link xlink:href="stylesheet-reference.xml#indicator-sub">::indicator</db:link> subcontrol. By default, the indicator is placed in the Top Left corner of the Contents rectangle of the widget.</db:para>
<db:para>The <db:link xlink:href="stylesheet-reference.xml#spacing-prop">spacing</db:link> property specifies the spacing between the check indicator and the text.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qcheckbox">Customizing QCheckBox</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qcolumnview.xml">QColumnView</db:link> <db:anchor xml:id="qcolumnview-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>The grip can be styled be using the <db:link xlink:href="stylesheet-reference.xml#image-prop">image</db:link> property. The arrow indicators can by styled using the <db:link xlink:href="stylesheet-reference.xml#left-arrow-sub">::left-arrow</db:link> subcontrol and the <db:link xlink:href="stylesheet-reference.xml#right-arrow-sub">::right-arrow</db:link> subcontrol.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qcombobox.xml">QComboBox</db:link> <db:anchor xml:id="qcombobox-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>The frame around the combobox can be styled using the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. The drop-down button can be styled using the <db:link xlink:href="stylesheet-reference.xml#drop-down-sub">::drop-down</db:link> subcontrol. By default, the drop-down button is placed in the top right corner of the padding rectangle of the widget. The arrow mark inside the drop-down button can be styled using the <db:link xlink:href="stylesheet-reference.xml#down-arrow-sub">::down-arrow</db:link> subcontrol. By default, the arrow is placed in the center of the contents rectangle of the drop-down subcontrol.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qcombobox">Customizing QComboBox</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qdateedit.xml">QDateEdit</db:link> <db:anchor xml:id="qdateedit-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>See <db:link xlink:href="stylesheet-reference.xml#qspinbox-widget">QSpinBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link> <db:anchor xml:id="qdatetimeedit-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>See <db:link xlink:href="stylesheet-reference.xml#qspinbox-widget">QSpinBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qdialog.xml">QDialog</db:link> <db:anchor xml:id="qdialog-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports only the <db:link xlink:href="stylesheet-reference.xml#background-prop">background</db:link>, <db:link xlink:href="stylesheet-reference.xml#background-clip-prop">background-clip</db:link> and <db:link xlink:href="stylesheet-reference.xml#background-origin-prop">background-origin</db:link> properties.</db:para>
<db:warning>
<db:para>Make sure you define the <db:link xlink:href="qobject.xml#Q_OBJECT">Q_OBJECT</db:link> macro for your custom widget.</db:para>
</db:warning>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link> <db:anchor xml:id="qdialogbuttonbox-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>The layout of buttons can be altered using the <db:link xlink:href="stylesheet-reference.xml#button-layout-prop">button-layout</db:link> property.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qdockwidget.xml">QDockWidget</db:link> <db:anchor xml:id="qdockwidget-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports styling of the title bar and the title bar buttons when docked.</db:para>
<db:para>The dock widget border can be styled using the <db:link xlink:href="stylesheet-reference.xml#border-prop">border</db:link> property. The <db:link xlink:href="stylesheet-reference.xml#title-sub">::title</db:link> subcontrol can be used to customize the title bar. The close and float buttons are positioned with respect to the <db:link xlink:href="stylesheet-reference.xml#title-sub">::title</db:link> subcontrol using the <db:link xlink:href="stylesheet-reference.xml#close-button-sub">::close-button</db:link> and <db:link xlink:href="stylesheet-reference.xml#float-button-sub">::float-button</db:link> respectively.</db:para>
<db:para>When the title bar is vertical, the <db:link xlink:href="stylesheet-reference.xml#vertical-ps">:vertical</db:link> pseudo class is set. In addition, depending on <db:link xlink:href="qdockwidget.xml#DockWidgetFeature-enum">QDockWidget::DockWidgetFeature</db:link>, the <db:link xlink:href="stylesheet-reference.xml#closable-ps">:closable</db:link>, <db:link xlink:href="stylesheet-reference.xml#floatable-ps">:floatable</db:link> and <db:link xlink:href="stylesheet-reference.xml#movable-ps">:movable</db:link> pseudo states are set.</db:para>
<db:note>
<db:para>Use QMainWindow::separator to style the resize handle.</db:para>
</db:note>
<db:warning>
<db:para>The style sheet has no effect when the <db:link xlink:href="qdockwidget.xml">QDockWidget</db:link> is undocked as Qt uses native top level windows when undocked.</db:para>
</db:warning>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qdockwidget">Customizing QDockWidget</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qdoublespinbox.xml">QDoubleSpinBox</db:link> <db:anchor xml:id="qdoublespinbox-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>See <db:link xlink:href="stylesheet-reference.xml#qspinbox-widget">QSpinBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qframe.xml">QFrame</db:link> <db:anchor xml:id="qframe-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>.</db:para>
<db:para>Since 4.3, setting a stylesheet on a <db:link xlink:href="qlabel.xml">QLabel</db:link> automatically sets the <db:link xlink:href="qframe.xml#frameStyle">QFrame::frameStyle</db:link> property to <db:link xlink:href="qframe.xml#Shape-enum">QFrame::StyledPanel</db:link>.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qframe">Customizing QFrame</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qgroupbox.xml">QGroupBox</db:link> <db:anchor xml:id="qgroupbox-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. The title can be styled using the <db:link xlink:href="stylesheet-reference.xml#title-sub">::title</db:link> subcontrol. By default, the title is placed depending on QGroupBox::textAlignment.</db:para>
<db:para>In the case of a checkable <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, the title includes the check indicator. The indicator is styled using the <db:link xlink:href="stylesheet-reference.xml#indicator-sub">::indicator</db:link> subcontrol. The <db:link xlink:href="stylesheet-reference.xml#spacing-prop">spacing</db:link> property can be used to control the spacing between the text and indicator.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qgroupbox">Customizing QGroupBox</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qheaderview.xml">QHeaderView</db:link> <db:anchor xml:id="qheaderview-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. The sections of the header view are styled using the <db:link xlink:href="stylesheet-reference.xml#section-sub">::section</db:link> sub control. The section Sub-control supports the <db:link xlink:href="stylesheet-reference.xml#middle-ps">:middle</db:link>, <db:link xlink:href="stylesheet-reference.xml#first-ps">:first</db:link>, <db:link xlink:href="stylesheet-reference.xml#last-ps">:last</db:link>, <db:link xlink:href="stylesheet-reference.xml#only-one-ps">:only-one</db:link>, <db:link xlink:href="stylesheet-reference.xml#next-selected-ps">:next-selected</db:link>, <db:link xlink:href="stylesheet-reference.xml#previous-selected-ps">:previous-selected</db:link>, <db:link xlink:href="stylesheet-reference.xml#selected-ps">:selected</db:link>, and <db:link xlink:href="stylesheet-reference.xml#checked-ps">:checked</db:link> pseudo states.</db:para>
<db:para>The sort indicator can be styled using the <db:link xlink:href="stylesheet-reference.xml#up-arrow-sub">::up-arrow</db:link> and the <db:link xlink:href="stylesheet-reference.xml#down-arrow-sub">::down-arrow</db:link> Sub-control.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qheaderview">Customizing QHeaderView</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qlabel.xml">QLabel</db:link> <db:anchor xml:id="qlabel-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. Does not support the <db:link xlink:href="stylesheet-reference.xml#hover-ps">:hover</db:link> pseudo-state.</db:para>
<db:para>Since 4.3, setting a stylesheet on a <db:link xlink:href="qlabel.xml">QLabel</db:link> automatically sets the <db:link xlink:href="qframe.xml#frameStyle">QFrame::frameStyle</db:link> property to <db:link xlink:href="qframe.xml#Shape-enum">QFrame::StyledPanel</db:link>.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qframe">Customizing QFrame</db:link> for an example (a <db:link xlink:href="qlabel.xml">QLabel</db:link> derives from <db:link xlink:href="qframe.xml">QFrame</db:link>).</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qlineedit.xml">QLineEdit</db:link> <db:anchor xml:id="qlineedit-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Support the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>.</db:para>
<db:para>The color and background of the selected item is styled using <db:link xlink:href="stylesheet-reference.xml#selection-color-prop">selection-color</db:link> and <db:link xlink:href="stylesheet-reference.xml#selection-background-color-prop">selection-background-color</db:link> respectively.</db:para>
<db:para>The password character can be styled using the <db:link xlink:href="stylesheet-reference.xml#lineedit-password-character-prop">lineedit-password-character</db:link> property.</db:para>
<db:para>The password mask delay can be changed using the <db:link xlink:href="stylesheet-reference.xml#lineedit-password-mask-delay-prop">lineedit-password-mask-delay</db:link></db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qlineedit">Customizing QLineEdit</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qlistview.xml">QListView</db:link> <db:anchor xml:id="qlistview-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. When <db:link xlink:href="qabstractitemview.xml#alternatingRowColors-prop">alternating row colors</db:link> is enabled, the alternating colors can be styled using the <db:link xlink:href="stylesheet-reference.xml#alternate-background-color-prop">alternate-background-color</db:link> property.</db:para>
<db:para>The color and background of the selected item is styled using <db:link xlink:href="stylesheet-reference.xml#selection-color-prop">selection-color</db:link> and <db:link xlink:href="stylesheet-reference.xml#selection-background-color-prop">selection-background-color</db:link> respectively.</db:para>
<db:para>The selection behavior is controlled by the <db:link xlink:href="stylesheet-reference.xml#show-decoration-selected-prop">show-decoration-selected</db:link> property.</db:para>
<db:para>Use the <db:link xlink:href="stylesheet-reference.xml#item-sub">::item</db:link> subcontrol for more fine grained control over the items in the <db:link xlink:href="qlistview.xml">QListView</db:link>.</db:para>
<db:para>See <db:link xlink:href="stylesheet-reference.xml#qabstractscrollarea-widget">QAbsractScrollArea</db:link> to style scrollable backgrounds.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qlistview">Customzing QListView</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qlistwidget.xml">QListWidget</db:link> <db:anchor xml:id="qlistwidget-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>See <db:link xlink:href="stylesheet-reference.xml#qlistview-widget">QListView</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qmainwindow.xml">QMainWindow</db:link> <db:anchor xml:id="qmainwindow-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports styling of the separator</db:para>
<db:para>The separator in a <db:link xlink:href="qmainwindow.xml">QMainWindow</db:link> when using <db:link xlink:href="qdockwidget.xml">QDockWidget</db:link> is styled using the <db:link xlink:href="stylesheet-reference.xml#separator-sub">::separator</db:link> subcontrol.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qmainwindow">Customizing QMainWindow</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qmenu.xml">QMenu</db:link> <db:anchor xml:id="qmenu-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>.</db:para>
<db:para>Individual items are styled using the <db:link xlink:href="stylesheet-reference.xml#item-sub">::item</db:link> subcontrol. In addition to the usually supported pseudo states, item subcontrol supports the <db:link xlink:href="stylesheet-reference.xml#selected-ps">:selected</db:link>, <db:link xlink:href="stylesheet-reference.xml#default-ps">:default</db:link>, <db:link xlink:href="stylesheet-reference.xml#exclusive-ps">:exclusive</db:link> and the <db:link xlink:href="stylesheet-reference.xml#non-exclusive-ps">non-exclusive</db:link> pseudo states.</db:para>
<db:para>The indicator of checkable menu items is styled using the <db:link xlink:href="stylesheet-reference.xml#indicator-sub">::indicator</db:link> subcontrol.</db:para>
<db:para>The separator is styled using the <db:link xlink:href="stylesheet-reference.xml#separator-sub">::separator</db:link> subcontrol.</db:para>
<db:para>For items with a sub menu, the arrow marks are styled using the <db:link xlink:href="stylesheet-reference.xml#right-arrow-sub">right-arrow</db:link> and <db:link xlink:href="stylesheet-reference.xml#left-arrow-sub">left-arrow</db:link>.</db:para>
<db:para>The scroller is styled using the <db:link xlink:href="stylesheet-reference.xml#scroller-sub">::scroller</db:link>.</db:para>
<db:para>The tear-off is styled using the <db:link xlink:href="stylesheet-reference.xml#tearoff-sub">::tearoff</db:link>.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qmenu">Customizing QMenu</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qmenubar.xml">QMenuBar</db:link> <db:anchor xml:id="qmenubar-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. The <db:link xlink:href="stylesheet-reference.xml#spacing-prop">spacing</db:link> property specifies the spacing between menu items. Individual items are styled using the <db:link xlink:href="stylesheet-reference.xml#item-sub">::item</db:link> subcontrol.</db:para>
<db:warning>
<db:para>When running on Qt/Mac, the menu bar is usually embedded into the system-wide menu bar. In this case, the style sheet will have no effect.</db:para>
</db:warning>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qmenubar">Customizing QMenuBar</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qmessagebox.xml">QMessageBox</db:link> <db:anchor xml:id="qmessagebox-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="stylesheet-reference.xml#messagebox-text-interaction-flags-prop">messagebox-text-interaction-flags</db:link> property can be used to alter the interaction with text in the message box.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qprogressbar.xml">QProgressBar</db:link> <db:anchor xml:id="qprogressbar-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. The chunks of the progress bar can be styled using the <db:link xlink:href="stylesheet-reference.xml#chunk-sub">::chunk</db:link> subcontrol. The chunk is displayed on the Contents rectangle of the widget.</db:para>
<db:para>If the progress bar displays text, use the <db:link xlink:href="stylesheet-reference.xml#text-align-prop">text-align</db:link> property to position the text.</db:para>
<db:para>Indeterminate progress bars have the <db:link xlink:href="stylesheet-reference.xml#indeterminate-ps">:indeterminate</db:link> pseudo state set.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qprogressbar">Customizing QProgressBar</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qpushbutton.xml">QPushButton</db:link> <db:anchor xml:id="qpushbutton-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. Supports the <db:link xlink:href="stylesheet-reference.xml#default-ps">:default</db:link>, <db:link xlink:href="stylesheet-reference.xml#flat-ps">:flat</db:link>, <db:link xlink:href="stylesheet-reference.xml#checked-ps">:checked</db:link> pseudo states.</db:para>
<db:para>For <db:link xlink:href="qpushbutton.xml">QPushButton</db:link> with a menu, the menu indicator is styled using the <db:link xlink:href="stylesheet-reference.xml#menu-indicator-sub">::menu-indicator</db:link> subcontrol. Appearance of checkable push buttons can be customized using the <db:link xlink:href="stylesheet-reference.xml#open-ps">:open</db:link> and <db:link xlink:href="stylesheet-reference.xml#closed-ps">:closed</db:link> pseudo-states.</db:para>
<db:warning>
<db:para>If you only set a background-color on a <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, the background may not appear unless you set the border property to some value. This is because, by default, the <db:link xlink:href="qpushbutton.xml">QPushButton</db:link> draws a native border which completely overlaps the background-color. For example,</db:para>
</db:warning>
<db:programlisting language="cpp">QPushButton { background-color: red; border: none; }
</db:programlisting>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qpushbutton">Customizing QPushButton</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qradiobutton.xml">QRadioButton</db:link> <db:anchor xml:id="qradiobutton-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. The check indicator can be styled using the <db:link xlink:href="stylesheet-reference.xml#indicator-sub">::indicator</db:link> subcontrol. By default, the indicator is placed in the Top Left corner of the Contents rectangle of the widget.</db:para>
<db:para>The <db:link xlink:href="stylesheet-reference.xml#spacing-prop">spacing</db:link> property specifies the spacing between the check indicator and the text.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qradiobutton">Customizing QRadioButton</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qscrollbar.xml">QScrollBar</db:link> <db:anchor xml:id="qscrollbar-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. The Contents rectangle of the widget is considered to be the groove over which the slider moves. The extent of the <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link> (i.e the width or the height depending on the orientation) is set using the <db:link xlink:href="stylesheet-reference.xml#width-prop">width</db:link> or <db:link xlink:href="stylesheet-reference.xml#height-prop">height</db:link> property respectively. To determine the orientation, use the <db:link xlink:href="stylesheet-reference.xml#horizontal-ps">:horizontal</db:link> and the <db:link xlink:href="stylesheet-reference.xml#vertical-ps">:vertical</db:link> pseudo states.</db:para>
<db:para>The slider can be styled using the <db:link xlink:href="stylesheet-reference.xml#handle-sub">::handle</db:link> subcontrol. Setting the <db:link xlink:href="stylesheet-reference.xml#min-width-prop">min-width</db:link> or <db:link xlink:href="stylesheet-reference.xml#min-height-prop">min-height</db:link> provides size contraints for the slider depending on the orientation.</db:para>
<db:para>The <db:link xlink:href="stylesheet-reference.xml#add-line-sub">::add-line</db:link> subcontrol can be used to style the button to add a line. By default, the add-line subcontrol is placed in top right corner of the Border rectangle of the widget. Depending on the orientation the <db:link xlink:href="stylesheet-reference.xml#right-arrow-sub">::right-arrow</db:link> or <db:link xlink:href="stylesheet-reference.xml#down-arrow-sub">::down-arrow</db:link>. By default, the arrows are placed in the center of the Contents rectangle of the add-line subcontrol.</db:para>
<db:para>The <db:link xlink:href="stylesheet-reference.xml#sub-line-sub">::sub-line</db:link> subcontrol can be used to style the button to subtract a line. By default, the sub-line subcontrol is placed in bottom right corner of the Border rectangle of the widget. Depending on the orientation the <db:link xlink:href="stylesheet-reference.xml#left-arrow-sub">::left-arrow</db:link> or <db:link xlink:href="stylesheet-reference.xml#up-arrow-sub">::up-arrow</db:link>. By default, the arrows are placed in the center of the Contents rectangle of the sub-line subcontrol.</db:para>
<db:para>The <db:link xlink:href="stylesheet-reference.xml#sub-page-sub">::sub-page</db:link> subcontrol can be used to style the region of the slider that subtracts a page. The <db:link xlink:href="stylesheet-reference.xml#add-page-sub">::add-page</db:link> subcontrol can be used to style the region of the slider that adds a page.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qscrollbar">Customizing QScrollBar</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qsizegrip.xml">QSizeGrip</db:link> <db:anchor xml:id="qsizegrip-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-reference.xml#width-prop">width</db:link>, <db:link xlink:href="stylesheet-reference.xml#height-prop">height</db:link>, and <db:link xlink:href="stylesheet-reference.xml#image-prop">image</db:link> properties.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qsizegrip">Customizing QSizeGrip</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qslider.xml">QSlider</db:link> <db:anchor xml:id="qslider-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. For horizontal slides, the <db:link xlink:href="stylesheet-reference.xml#min-width-prop">min-width</db:link> and <db:link xlink:href="stylesheet-reference.xml#height-prop">height</db:link> properties must be provided. For vertical sliders, the <db:link xlink:href="stylesheet-reference.xml#min-height-prop">min-height</db:link> and <db:link xlink:href="stylesheet-reference.xml#width-prop">width</db:link> properties must be provided.</db:para>
<db:para>The groove of the slider is styled using the <db:link xlink:href="stylesheet-reference.xml#groove-sub">::groove</db:link>. The groove is positioned by default in the Contents rectangle of the widget. The thumb of the slider is styled using <db:link xlink:href="stylesheet-reference.xml#handle-sub">::handle</db:link> subcontrol. The subcontrol moves in the Contents rectangle of the groove subcontrol.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qslider">Customizing QSlider</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qspinbox.xml">QSpinBox</db:link> <db:anchor xml:id="qspinbox-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>The frame of the spin box can be styled using the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>.</db:para>
<db:para>The up button and arrow can be styled using the <db:link xlink:href="stylesheet-reference.xml#up-button-sub">::up-button</db:link> and <db:link xlink:href="stylesheet-reference.xml#up-arrow-sub">::up-arrow</db:link> subcontrols. By default, the up-button is placed in the top right corner in the Padding rectangle of the widget. Without an explicit size, it occupies half the height of its reference rectangle. The up-arrow is placed in the center of the Contents rectangle of the up-button.</db:para>
<db:para>The down button and arrow can be styled using the <db:link xlink:href="stylesheet-reference.xml#down-button-sub">::down-button</db:link> and <db:link xlink:href="stylesheet-reference.xml#down-arrow-sub">::down-arrow</db:link> subcontrols. By default, the down-button is placed in the bottom right corner in the Padding rectangle of the widget. Without an explicit size, it occupies half the height of its reference rectangle. The bottom-arrow is placed in the center of the Contents rectangle of the bottom-button.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qspinbox">Customizing QSpinBox</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qsplitter.xml">QSplitter</db:link> <db:anchor xml:id="qsplitter-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. The handle of the splitter is styled using the <db:link xlink:href="stylesheet-reference.xml#handle-sub">::handle</db:link> subcontrol.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qsplitter">Customizing QSplitter</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstatusbar.xml">QStatusBar</db:link> <db:anchor xml:id="qstatusbar-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports only the <db:link xlink:href="stylesheet-reference.xml#background-prop">background</db:link> property. The frame for individual items can be style using the <db:link xlink:href="stylesheet-reference.xml#item-sub">::item</db:link> subcontrol.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qstatusbar">Customizing QStatusBar</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtabbar.xml">QTabBar</db:link> <db:anchor xml:id="qtabbar-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Individual tabs may be styled using the <db:link xlink:href="stylesheet-reference.xml#tab-sub">::tab</db:link> subcontrol. Close buttons using the <db:link xlink:href="stylesheet-reference.xml#close-button-sub">::close-button</db:link> The tabs support the <db:link xlink:href="stylesheet-reference.xml#only-one-ps">:only-one</db:link>, <db:link xlink:href="stylesheet-reference.xml#first-ps">:first</db:link>, <db:link xlink:href="stylesheet-reference.xml#last-ps">:last</db:link>, <db:link xlink:href="stylesheet-reference.xml#middle-ps">:middle</db:link>, <db:link xlink:href="stylesheet-reference.xml#previous-selected-ps">:previous–selected</db:link>, <db:link xlink:href="stylesheet-reference.xml#next-selected-ps">:next-selected</db:link>, <db:link xlink:href="stylesheet-reference.xml#selected-ps">:selected</db:link> pseudo states.</db:para>
<db:para>The <db:link xlink:href="stylesheet-reference.xml#top-ps">:top</db:link>, <db:link xlink:href="stylesheet-reference.xml#left-ps">:left</db:link>, <db:link xlink:href="stylesheet-reference.xml#right-ps">:right</db:link>, <db:link xlink:href="stylesheet-reference.xml#bottom-ps">:bottom</db:link> pseudo states depending on the orientation of the tabs.</db:para>
<db:para>Overlapping tabs for the selected state are created by using negative margins or using the absolute position scheme.</db:para>
<db:para>The tear indicator of the <db:link xlink:href="qtabbar.xml">QTabBar</db:link> is styled using the <db:link xlink:href="stylesheet-reference.xml#tear-sub">::tear</db:link> subcontrol.</db:para>
<db:para><db:link xlink:href="qtabbar.xml">QTabBar</db:link> used two QToolButtons for its scrollers that can be styled using the QTabBar QToolButton selector. To specify the width of the scroll button use the <db:link xlink:href="stylesheet-reference.xml#scroller-sub">::scroller</db:link> subcontrol.</db:para>
<db:para>The alignment of the tabs within the <db:link xlink:href="qtabbar.xml">QTabBar</db:link> is styled using the <db:link xlink:href="stylesheet-reference.xml#alignment">alignment</db:link> property.</db:para>
<db:para>To change the position of the <db:link xlink:href="qtabbar.xml">QTabBar</db:link> within a <db:link xlink:href="qtabwidget.xml">QTabWidget</db:link>, use the <db:link xlink:href="stylesheet-reference.xml#tab-bar-sub">tab-bar</db:link> subcontrol (and set subcontrol-position).</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qtabwidget-and-qtabbar">Customizing QTabBar</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtabwidget.xml">QTabWidget</db:link> <db:anchor xml:id="qtabwidget-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>The frame of the tab widget is styled using the <db:link xlink:href="stylesheet-reference.xml#pane-sub">::pane</db:link> subcontrol. The left and right corners are styled using the <db:link xlink:href="stylesheet-reference.xml#left-corner-sub">::left-corner</db:link> and <db:link xlink:href="stylesheet-reference.xml#right-corner-sub">::right-corner</db:link> respectively. The position of the tab bar is controlled using the <db:link xlink:href="stylesheet-reference.xml#tab-bar-sub">::tab-bar</db:link> subcontrol.</db:para>
<db:para>By default, the subcontrols have positions of a <db:link xlink:href="qtabwidget.xml">QTabWidget</db:link> in the QWindowsStyle. To place the <db:link xlink:href="qtabbar.xml">QTabBar</db:link> in the center, set the subcontrol-position of the tab-bar subcontrol.</db:para>
<db:para>The <db:link xlink:href="stylesheet-reference.xml#top-ps">:top</db:link>, <db:link xlink:href="stylesheet-reference.xml#left-ps">:left</db:link>, <db:link xlink:href="stylesheet-reference.xml#right-ps">:right</db:link>, <db:link xlink:href="stylesheet-reference.xml#bottom-ps">:bottom</db:link> pseudo states depending on the orientation of the tabs.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qtabwidget-and-qtabbar">Customizing QTabWidget</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtableview.xml">QTableView</db:link> <db:anchor xml:id="qtableview-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. When <db:link xlink:href="qabstractitemview.xml#alternatingRowColors-prop">alternating row colors</db:link> is enabled, the alternating colors can be styled using the <db:link xlink:href="stylesheet-reference.xml#alternate-background-color-prop">alternate-background-color</db:link> property.</db:para>
<db:para>The color and background of the selected item is styled using <db:link xlink:href="stylesheet-reference.xml#selection-color-prop">selection-color</db:link> and <db:link xlink:href="stylesheet-reference.xml#selection-background-color-prop">selection-background-color</db:link> respectively.</db:para>
<db:para>The corner widget in a <db:link xlink:href="qtableview.xml">QTableView</db:link> is implemented as a <db:link xlink:href="qabstractbutton.xml">QAbstractButton</db:link> and can be styled using the &quot;<db:link xlink:href="qtableview.xml">QTableView</db:link> QTableCornerButton::section&quot; selector.</db:para>
<db:warning>
<db:para>If you only set a background-color on a QTableCornerButton, the background may not appear unless you set the border property to some value. This is because, by default, the QTableCornerButton draws a native border which completely overlaps the background-color.</db:para>
</db:warning>
<db:para>The color of the grid can be specified using the <db:link xlink:href="stylesheet-reference.xml#gridline-color-prop">gridline-color</db:link> property.</db:para>
<db:para>See <db:link xlink:href="stylesheet-reference.xml#qabstractscrollarea-widget">QAbsractScrollArea</db:link> to style scrollable backgrounds.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qtableview">Customzing QTableView</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtablewidget.xml">QTableWidget</db:link> <db:anchor xml:id="qtablewidget-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>See <db:link xlink:href="stylesheet-reference.xml#qtableview-widget">QTableView</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtextedit.xml">QTextEdit</db:link> <db:anchor xml:id="qtextedit-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>.</db:para>
<db:para>The color and background of selected text is styled using <db:link xlink:href="stylesheet-reference.xml#selection-color-prop">selection-color</db:link> and <db:link xlink:href="stylesheet-reference.xml#selection-background-color-prop">selection-background-color</db:link> respectively.</db:para>
<db:para>See <db:link xlink:href="stylesheet-reference.xml#qabstractscrollarea-widget">QAbsractScrollArea</db:link> to style scrollable backgrounds.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtimeedit.xml">QTimeEdit</db:link> <db:anchor xml:id="qtimeedit-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>See <db:link xlink:href="stylesheet-reference.xml#qspinbox-widget">QSpinBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtoolbar.xml">QToolBar</db:link> <db:anchor xml:id="qtoolbar-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>.</db:para>
<db:para>The <db:link xlink:href="stylesheet-reference.xml#top-ps">:top</db:link>, <db:link xlink:href="stylesheet-reference.xml#left-ps">:left</db:link>, <db:link xlink:href="stylesheet-reference.xml#right-ps">:right</db:link>, <db:link xlink:href="stylesheet-reference.xml#bottom-ps">:bottom</db:link> pseudo states depending on the area in which the tool bar is grouped.</db:para>
<db:para>The <db:link xlink:href="stylesheet-reference.xml#first-ps">:first</db:link>, <db:link xlink:href="stylesheet-reference.xml#last-ps">:last</db:link>, <db:link xlink:href="stylesheet-reference.xml#middle-ps">:middle</db:link>, <db:link xlink:href="stylesheet-reference.xml#only-one-ps">:only-one</db:link> pseudo states indicator the position of the tool bar within a line group (See <db:link xlink:href="qstyleoptiontoolbar.xml#positionWithinLine-var">QStyleOptionToolBar::positionWithinLine</db:link>).</db:para>
<db:para>The separator of a <db:link xlink:href="qtoolbar.xml">QToolBar</db:link> is styled using the <db:link xlink:href="stylesheet-reference.xml#separator-sub">::separator</db:link> subcontrol.</db:para>
<db:para>The handle (to move the toolbar) is styled using the <db:link xlink:href="stylesheet-reference.xml#handle-sub">::handle</db:link> subcontrol.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qtoolbar">Customizing QToolBar</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtoolbutton.xml">QToolButton</db:link> <db:anchor xml:id="qtoolbutton-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>.</db:para>
<db:para>If the <db:link xlink:href="qtoolbutton.xml">QToolButton</db:link> has a menu, is <db:link xlink:href="stylesheet-reference.xml#menu-indicator-sub">::menu-indicator</db:link> subcontrol can be used to style the indicator. By default, the menu-indicator is positioned at the bottom right of the Padding rectangle of the widget.</db:para>
<db:para>If the <db:link xlink:href="qtoolbutton.xml">QToolButton</db:link> is in <db:link xlink:href="qtoolbutton.xml#ToolButtonPopupMode-enum">QToolButton::MenuButtonPopup</db:link> mode, the <db:link xlink:href="stylesheet-reference.xml#menu-button-sub">::menu-button</db:link> subcontrol is used to draw the menu button. <db:link xlink:href="stylesheet-reference.xml#menu-arrow-sub">::menu-arrow</db:link> subcontrol is used to draw the menu arrow inside the menu-button. By default, it is positioned in the center of the Contents rectangle of the menu-button subcontrol.</db:para>
<db:para>When the <db:link xlink:href="qtoolbutton.xml">QToolButton</db:link> displays arrows, the <db:link xlink:href="stylesheet-reference.xml#up-arrow-sub">::up-arrow</db:link>, <db:link xlink:href="stylesheet-reference.xml#down-arrow-sub">::down-arrow</db:link>, <db:link xlink:href="stylesheet-reference.xml#left-arrow-sub">::left-arrow</db:link> and <db:link xlink:href="stylesheet-reference.xml#right-arrow-sub">::right-arrow</db:link> subcontrols are used.</db:para>
<db:warning>
<db:para>If you only set a background-color on a <db:link xlink:href="qtoolbutton.xml">QToolButton</db:link>, the background will not appear unless you set the border property to some value. This is because, by default, the <db:link xlink:href="qtoolbutton.xml">QToolButton</db:link> draws a native border which completely overlaps the background-color. For example,</db:para>
</db:warning>
<db:programlisting language="cpp">QToolButton { background-color: red; border: none; }
</db:programlisting>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qtoolbutton">Customizing QToolButton</db:link> for an example.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtoolbox.xml">QToolBox</db:link> <db:anchor xml:id="qtoolbox-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>.</db:para>
<db:para>The individual tabs can by styled using the <db:link xlink:href="stylesheet-reference.xml#tab-sub">::tab</db:link> subcontrol. The tabs support the <db:link xlink:href="stylesheet-reference.xml#only-one-ps">:only-one</db:link>, <db:link xlink:href="stylesheet-reference.xml#first-ps">:first</db:link>, <db:link xlink:href="stylesheet-reference.xml#last-ps">:last</db:link>, <db:link xlink:href="stylesheet-reference.xml#middle-ps">:middle</db:link>, <db:link xlink:href="stylesheet-reference.xml#previous-selected-ps">:previous-selected</db:link>, <db:link xlink:href="stylesheet-reference.xml#next-selected-ps">:next-selected</db:link>, <db:link xlink:href="stylesheet-reference.xml#selected-ps">:selected</db:link> pseudo states.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtooltip.xml">QToolTip</db:link> <db:anchor xml:id="qtooltip-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. The <db:link xlink:href="stylesheet-reference.xml#opacity-prop">opacity</db:link> property controls the opacity of the tooltip.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qframe">Customizing QFrame</db:link> for an example (a <db:link xlink:href="qtooltip.xml">QToolTip</db:link> is a <db:link xlink:href="qframe.xml">QFrame</db:link>).</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtreeview.xml">QTreeView</db:link> <db:anchor xml:id="qtreeview-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>. When <db:link xlink:href="qabstractitemview.xml#alternatingRowColors-prop">alternating row colors</db:link> is enabled, the alternating colors can be styled using the <db:link xlink:href="stylesheet-reference.xml#alternate-background-color-prop">alternate-background-color</db:link> property.</db:para>
<db:para>The color and background of the selected item is styled using <db:link xlink:href="stylesheet-reference.xml#selection-color-prop">selection-color</db:link> and <db:link xlink:href="stylesheet-reference.xml#selection-background-color-prop">selection-background-color</db:link> respectively.</db:para>
<db:para>The selection behavior is controlled by the <db:link xlink:href="stylesheet-reference.xml#show-decoration-selected-prop">show-decoration-selected</db:link> property.</db:para>
<db:para>The branches of the tree view can be styled using the <db:link xlink:href="stylesheet-reference.xml#branch-sub">::branch</db:link> subcontrol. The ::branch Sub-control supports the <db:link xlink:href="stylesheet-reference.xml#open-ps">:open</db:link>, <db:link xlink:href="stylesheet-reference.xml#closed-ps">:closed</db:link>, <db:link xlink:href="stylesheet-reference.xml#has-siblings-ps">:has-sibling</db:link> and <db:link xlink:href="stylesheet-reference.xml#has-children-ps">:has-children</db:link> pseudo states.</db:para>
<db:para>Use the <db:link xlink:href="stylesheet-reference.xml#item-sub">::item</db:link> subcontrol for more fine grained control over the items in the <db:link xlink:href="qtreeview.xml">QTreeView</db:link>.</db:para>
<db:para>See <db:link xlink:href="stylesheet-reference.xml#qabstractscrollarea-widget">QAbsractScrollArea</db:link> to style scrollable backgrounds.</db:para>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-qtreeview">Customizing QTreeView</db:link> for an example to style the branches.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtreewidget.xml">QTreeWidget</db:link> <db:anchor xml:id="qtreewidget-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>See <db:link xlink:href="stylesheet-reference.xml#qtreeview-widget">QTreeView</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qwidget.xml">QWidget</db:link> <db:anchor xml:id="qwidget-widget"/>
</db:para>
</db:td>
<db:td>
<db:para>Supports only the <db:link xlink:href="stylesheet-reference.xml#background-prop">background</db:link>, <db:link xlink:href="stylesheet-reference.xml#background-clip-prop">background-clip</db:link> and <db:link xlink:href="stylesheet-reference.xml#background-origin-prop">background-origin</db:link> properties.</db:para>
<db:para>If you subclass from <db:link xlink:href="qwidget.xml">QWidget</db:link>, you need to provide a paintEvent for your custom <db:link xlink:href="qwidget.xml">QWidget</db:link> as below:</db:para>
<db:programlisting language="cpp">void CustomWidget::paintEvent(QPaintEvent *)
{
    QStyleOption opt;
    opt.init(this);
    QPainter p(this);
    style()-&gt;drawPrimitive(QStyle::PE_Widget, &amp;opt, &amp;p, this);
}
</db:programlisting>
<db:para>The above code is a no-operation if there is no stylesheet set.</db:para>
<db:warning>
<db:para>Make sure you define the <db:link xlink:href="qobject.xml#Q_OBJECT">Q_OBJECT</db:link> macro for your custom widget.</db:para>
</db:warning>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="list-of-properties">
<db:title>List of Properties</db:title>
<db:para>The table below lists all the properties supported by Qt Style Sheets. Which values can be given to an property depend on the <db:link xlink:href="stylesheet-reference.xml#list-of-property-types">property's type</db:link>. Unless otherwise specified, properties below apply to all widgets. Properties marked with an asterisk * are specific to Qt and have no equivalent in CSS2 or CSS3.</db:para>
<db:informaltable style="generic" width="100%">
<db:thead>
<db:tr>
<db:th>
<db:para>Property</db:para>
</db:th>
<db:th>
<db:para>Type</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">alternate-background-color</db:emphasis> <db:anchor xml:id="alternate-background-color-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link> </db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qabstractitemview.xml#alternatingRowColors-prop">alternate background color</db:link> used in <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses.</db:para>
<db:para>If this property is not set, the default value is whatever is set for the palette's <db:link xlink:href="qpalette.xml#ColorRole-enum">AlternateBase</db:link> role.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QTreeView {
    alternate-background-color: blue;
    background: yellow;
}
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#background-prop">background</db:link> and <db:link xlink:href="stylesheet-reference.xml#selection-background-color-prop">selection-background-color</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">background</db:emphasis> <db:anchor xml:id="background-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#background">Background</db:link></db:para>
</db:td>
<db:td>
<db:para>Shorthand notation for setting the background. Equivalent to specifying background-color, background-image, background-repeat, and/or background-position.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qdialog.xml">QDialog</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>, <db:link xlink:href="qmenu.xml">QMenu</db:link>, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, <db:link xlink:href="qtooltip.xml">QToolTip</db:link>, and plain <db:link xlink:href="qwidget.xml">QWidget</db:link>s.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QTextEdit { background: yellow }
</db:programlisting>
<db:para>Often, it is required to set a fill pattern similar to the styles in <db:link xlink:href="qt.xml#BrushStyle-enum">Qt::BrushStyle</db:link>. You can use the background-color property for <db:link xlink:href="qt.xml#BrushStyle-enum">Qt::SolidPattern</db:link>, <db:link xlink:href="qt.xml#BrushStyle-enum">Qt::RadialGradientPattern</db:link>, <db:link xlink:href="qt.xml#BrushStyle-enum">Qt::LinearGradientPattern</db:link> and <db:link xlink:href="qt.xml#BrushStyle-enum">Qt::ConicalGradientPattern</db:link>. The other patterns are easily achieved by creating a background image that contains the pattern.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QLabel {
    background-image: url(dense6pattern.png);
    background-repeat: repeat-xy;
}
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#background-origin-prop">background-origin</db:link>, <db:link xlink:href="stylesheet-reference.xml#selection-background-color-prop">selection-background-color</db:link>, <db:link xlink:href="stylesheet-reference.xml#background-clip-prop">background-clip</db:link>, <db:link xlink:href="stylesheet-reference.xml#background-attachment-prop">background-attachment</db:link> and <db:link xlink:href="stylesheet-reference.xml#alternate-background-color-prop">alternate-background-color</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>background-color <db:anchor xml:id="background-color-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link> </db:para>
</db:td>
<db:td>
<db:para>The background color used for the widget.</db:para>
<db:para>Examples:</db:para>
<db:programlisting language="cpp">QLabel { background-color: yellow }
QLineEdit { background-color: rgb(255, 0, 0) }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>background-image <db:anchor xml:id="background-image-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#url">Url</db:link></db:para>
</db:td>
<db:td>
<db:para>The background image used for the widget. Semi-transparent parts of the image let the background-color shine through.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QFrame { background-image: url(:/images/hydro.png) }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>background-repeat <db:anchor xml:id="background-repeat-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#repeat">Repeat</db:link></db:para>
</db:td>
<db:td>
<db:para>Whether and how the background image is repeated to fill the background-origin rectangle.</db:para>
<db:para>If this property is not specified, the background image is repeated in both directions (repeat).</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QFrame {
    background: white url(:/images/ring.png);
    background-repeat: repeat-y;
    background-position: left;
}
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>background-position</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#alignment">Alignment</db:link></db:para>
</db:td>
<db:td>
<db:para>The alignment of the background image within the background-origin rectangle.</db:para>
<db:para>If this property is not specified, the alignment is top left.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QFrame {
    background: url(:/images/footer.png);
    background-position: bottom left;
}
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">background-attachment</db:emphasis> <db:anchor xml:id="background-attachment-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#attachment">Attachment</db:link></db:para>
</db:td>
<db:td>
<db:para>Determines whether the background-image in a <db:link xlink:href="qabstractscrollarea.xml">QAbstractScrollArea</db:link> is scrolled or fixed with respect to the viewport. By default, the background-image scrolls with the viewport.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QTextEdit {
    background-image: url(&quot;leaves.png&quot;);
    background-attachment: fixed;
}
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#background-prop">background</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">background-clip</db:emphasis> <db:anchor xml:id="background-clip-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#origin">Origin</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's rectangle, in which the background is drawn.</db:para>
<db:para>This property specifies the rectangle to which the background-color and background-image are clipped.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qdialog.xml">QDialog</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, <db:link xlink:href="qtooltip.xml">QToolTip</db:link>, and plain <db:link xlink:href="qwidget.xml">QWidget</db:link>s.</db:para>
<db:para>If this property is not specified, the default is border.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QFrame {
    background-image: url(:/images/header.png);
    background-position: top left;
    background-origin: content;
    background-clip: padding;
}
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#background-prop">background</db:link>, <db:link xlink:href="stylesheet-reference.xml#background-origin-prop">background-origin</db:link> and <db:link xlink:href="stylesheet-customizing.xml#the-box-model">The Box Model</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">background-origin</db:emphasis> <db:anchor xml:id="background-origin-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#origin">Origin</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's background rectangle, to use in conjunction with background-position and background-image.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qdialog.xml">QDialog</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, <db:link xlink:href="qtooltip.xml">QToolTip</db:link>, and plain <db:link xlink:href="qwidget.xml">QWidget</db:link>s.</db:para>
<db:para>If this property is not specified, the default is padding.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QFrame {
    background-image: url(:/images/header.png);
    background-position: top left;
    background-origin: content;
}
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#background-prop">background</db:link> and <db:link xlink:href="stylesheet-customizing.xml#the-box-model">The Box Model</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">border</db:emphasis> <db:anchor xml:id="border-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#border">Border</db:link></db:para>
</db:td>
<db:td>
<db:para>Shorthand notation for setting the widget's border. Equivalent to specifying border-color, border-style, and/or border-width.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>, <db:link xlink:href="qmenu.xml">QMenu</db:link>, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, <db:link xlink:href="qtooltip.xml">QToolTip</db:link>, and plain <db:link xlink:href="qwidget.xml">QWidget</db:link>s.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QLineEdit { border: 1px solid white }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-top</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#border">Border</db:link></db:para>
</db:td>
<db:td>
<db:para>Shorthand notation for setting the widget's top border. Equivalent to specifying border-top-color, border-top-style, and/or border-top-width.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-right</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#border">Border</db:link></db:para>
</db:td>
<db:td>
<db:para>Shorthand notation for setting the widget's right border. Equivalent to specifying border-right-color, border-right-style, and/or border-right-width.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-bottom</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#border">Border</db:link></db:para>
</db:td>
<db:td>
<db:para>Shorthand notation for setting the widget's bottom border. Equivalent to specifying border-bottom-color, border-bottom-style, and/or border-bottom-width.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-left</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#border">Border</db:link></db:para>
</db:td>
<db:td>
<db:para>Shorthand notation for setting the widget's left border. Equivalent to specifying border-left-color, border-left-style, and/or border-left-width.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">border-color</db:emphasis> <db:anchor xml:id="border-attrs"/>
 <db:anchor xml:id="border-color-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#box-colors">Box Colors</db:link></db:para>
</db:td>
<db:td>
<db:para>The color of all the border's edges. Equivalent to specifying border-top-color, border-right-color, border-bottom-color, and border-left-color.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>, <db:link xlink:href="qmenu.xml">QMenu</db:link>, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, <db:link xlink:href="qtooltip.xml">QToolTip</db:link>, and plain <db:link xlink:href="qwidget.xml">QWidget</db:link>s.</db:para>
<db:para>If this property is not specified, it defaults to <db:link xlink:href="stylesheet-reference.xml#color-prop">color</db:link> (i.e., the widget's foreground color).</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QLineEdit {
    border-width: 1px;
    border-style: solid;
    border-color: white;
}
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#border-style-prop">border-style</db:link>, <db:link xlink:href="stylesheet-reference.xml#border-width-prop">border-width</db:link>, <db:link xlink:href="stylesheet-reference.xml#border-image-prop">border-image</db:link>, and <db:link xlink:href="stylesheet-customizing.xml#the-box-model">The Box Model</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-top-color</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link> </db:para>
</db:td>
<db:td>
<db:para>The color of the border's top edge.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-right-color</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link> </db:para>
</db:td>
<db:td>
<db:para>The color of the border's right edge.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-bottom-color</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link> </db:para>
</db:td>
<db:td>
<db:para>The color of the border's bottom edge.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-left-color</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link> </db:para>
</db:td>
<db:td>
<db:para>The color of the border's left edge.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">border-image</db:emphasis> <db:anchor xml:id="border-image-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#border-image">Border Image</db:link></db:para>
</db:td>
<db:td>
<db:para>The image used to fill the border. The image is cut into nine parts and stretched appropriately if necessary. See <db:link xlink:href="stylesheet-reference.xml#border-image">Border Image</db:link> for details.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>, <db:link xlink:href="qmenu.xml">QMenu</db:link>, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link> and <db:link xlink:href="qtooltip.xml">QToolTip</db:link>.</db:para>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#border-color-prop">border-color</db:link>, <db:link xlink:href="stylesheet-reference.xml#border-style-prop">border-style</db:link>, <db:link xlink:href="stylesheet-reference.xml#border-width-prop">border-width</db:link>, and <db:link xlink:href="stylesheet-customizing.xml#the-box-model">The Box Model</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">border-radius</db:emphasis> <db:anchor xml:id="border-radius-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#radius">Radius</db:link></db:para>
</db:td>
<db:td>
<db:para>The radius of the border's corners. Equivalent to specifying border-top-left-radius, border-top-right-radius, border-bottom-right-radius, and border-bottom-left-radius.</db:para>
<db:para>The border-radius clips the element's <db:link xlink:href="stylesheet-reference.xml#background-prop">background</db:link>.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>, <db:link xlink:href="qmenu.xml">QMenu</db:link>, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, and <db:link xlink:href="qtooltip.xml">QToolTip</db:link>.</db:para>
<db:para>If this property is not specified, it defaults to 0.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QLineEdit {
    border-width: 1px;
    border-style: solid;
    border-radius: 4px;
}
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#border-width-prop">border-width</db:link> and <db:link xlink:href="stylesheet-customizing.xml#the-box-model">The Box Model</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-top-left-radius</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#radius">Radius</db:link></db:para>
</db:td>
<db:td>
<db:para>The radius of the border's top-left corner.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-top-right-radius</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#radius">Radius</db:link></db:para>
</db:td>
<db:td>
<db:para>The radius of the border's top-right corner.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-bottom-right-radius</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#radius">Radius</db:link></db:para>
</db:td>
<db:td>
<db:para>The radius of the border's bottom-right corner. Setting this property to a positive value results in a rounded corner.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-bottom-left-radius</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#radius">Radius</db:link></db:para>
</db:td>
<db:td>
<db:para>The radius of the border's bottom-left corner. Setting this property to a positive value results in a rounded corner.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">border-style</db:emphasis> <db:anchor xml:id="border-style-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#border-style">Border Style</db:link></db:para>
</db:td>
<db:td>
<db:para>The style of all the border's edges.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>, <db:link xlink:href="qmenu.xml">QMenu</db:link>, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, and <db:link xlink:href="qtooltip.xml">QToolTip</db:link>.</db:para>
<db:para>If this property is not specified, it defaults to none.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QLineEdit {
    border-width: 1px;
    border-style: solid;
    border-color: blue;
}
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#border-color-prop">border-color</db:link>, <db:link xlink:href="stylesheet-reference.xml#border-style-prop">border-style</db:link>, <db:link xlink:href="stylesheet-reference.xml#border-image-prop">border-image</db:link>, and <db:link xlink:href="stylesheet-customizing.xml#the-box-model">The Box Model</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-top-style</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#border-style">Border Style</db:link></db:para>
</db:td>
<db:td>
<db:para>The style of the border's top edge.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-right-style</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#border-style">Border Style</db:link></db:para>
</db:td>
<db:td>
<db:para>The style of the border's right edge/</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-bottom-style</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#border-style">Border Style</db:link></db:para>
</db:td>
<db:td>
<db:para>The style of the border's bottom edge.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-left-style</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#border-style">Border Style</db:link></db:para>
</db:td>
<db:td>
<db:para>The style of the border's left edge.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">border-width</db:emphasis> <db:anchor xml:id="border-width-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#box-lengths">Box Lengths</db:link></db:para>
</db:td>
<db:td>
<db:para>The width of the border. Equivalent to setting border-top-width, border-right-width, border-bottom-width, and border-left-width.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>, <db:link xlink:href="qmenu.xml">QMenu</db:link>, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, and <db:link xlink:href="qtooltip.xml">QToolTip</db:link>.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QLineEdit {
    border-width: 2px;
    border-style: solid;
    border-color: darkblue;
}
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#border-color-prop">border-color</db:link>, <db:link xlink:href="stylesheet-reference.xml#border-radius-prop">border-radius</db:link>, <db:link xlink:href="stylesheet-reference.xml#border-style-prop">border-style</db:link>, <db:link xlink:href="stylesheet-reference.xml#border-image-prop">border-image</db:link>, and <db:link xlink:href="stylesheet-customizing.xml#the-box-model">The Box Model</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-top-width</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The width of the border's top edge.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-right-width</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The width of the border's right edge.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-bottom-width</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The width of the border's bottom edge.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>border-left-width</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The width of the border's left edge.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">bottom</db:emphasis> <db:anchor xml:id="bottom-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>If <db:link xlink:href="stylesheet-reference.xml#position-prop">position</db:link> is relative (the default), moves a subcontrol by a certain offset up; specifying <db:code>bottom: <db:emphasis>y</db:emphasis></db:code> is then equivalent to specifying <db:code><db:link xlink:href="stylesheet-reference.xml#top-prop">top</db:link>: -<db:emphasis>y</db:emphasis></db:code>.</db:para>
<db:para>If <db:link xlink:href="stylesheet-reference.xml#position-prop">position</db:link> is absolute, the bottom property specifies the subcontrol's bottom edge in relation to the parent's bottom edge (see also <db:link xlink:href="stylesheet-reference.xml#subcontrol-origin-prop">subcontrol-origin</db:link>).</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QSpinBox::down-button { bottom: 2px }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#left-prop">left</db:link>, <db:link xlink:href="stylesheet-reference.xml#right-prop">right</db:link>, and <db:link xlink:href="stylesheet-reference.xml#top-prop">top</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">button-layout</db:emphasis> <db:anchor xml:id="button-layout-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#number">Number</db:link></db:para>
</db:td>
<db:td>
<db:para>The layout of buttons in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link> or a <db:link xlink:href="qmessagebox.xml">QMessageBox</db:link>. The possible values are 0 (<db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">WinLayout</db:link>), 1 (<db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">MacLayout</db:link>), 2 (<db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">KdeLayout</db:link>), and 3 (<db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">GnomeLayout</db:link>).</db:para>
<db:para>If this property is not specified, it defaults to the value specified by the current style for the <db:link xlink:href="qstyle.xml#StyleHint-enum">SH_DialogButtonLayout</db:link> style hint.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">* { button-layout: 2 }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">color</db:emphasis> <db:anchor xml:id="color-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link> </db:para>
</db:td>
<db:td>
<db:para>The color used to render text.</db:para>
<db:para>This property is supported by all widgets that respect the <db:link xlink:href="qwidget.xml#palette-prop">QWidget::palette</db:link>.</db:para>
<db:para>If this property is not set, the default is whatever is set for in the widget's palette for the <db:link xlink:href="qwidget.xml#foregroundRole">QWidget::foregroundRole</db:link> (typically black).</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QPushButton { color: red }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#background-prop">background</db:link> and <db:link xlink:href="stylesheet-reference.xml#selection-color-prop">selection-color</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">dialogbuttonbox-buttons-have-icons</db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#boolean">Boolean</db:link></db:para>
</db:td>
<db:td>
<db:para>Whether the buttons in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link> show icons</db:para>
<db:para>If this property is set to 1, the buttons of a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link> show icons; if it is set to 0, the icons are not shown.</db:para>
<db:para>See the <db:link xlink:href="stylesheet-reference.xml#list-of-icons">List of Icons</db:link> section for information on how to set icons.</db:para>
<db:programlisting language="cpp">QDialogButtonBox { dialogbuttonbox-buttons-have-icons: 1; }
</db:programlisting>
<db:note>
<db:para>Styles defining this property must be applied before the <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link> is created; this means that you must apply the style to the parent widget or to the application itself.</db:para>
</db:note>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">font</db:emphasis> <db:anchor xml:id="font-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#font">Font</db:link></db:para>
</db:td>
<db:td>
<db:para>Shorthand notation for setting the text's font. Equivalent to specifying font-family, font-size, font-style, and/or font-weight.</db:para>
<db:para>This property is supported by all widgets that respect the <db:link xlink:href="qwidget.xml#font-prop">QWidget::font</db:link>.</db:para>
<db:para>If this property is not set, the default is the <db:link xlink:href="qwidget.xml#font-prop">QWidget::font</db:link>.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QCheckBox { font: bold italic large &quot;Times New Roman&quot; }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>font-family</db:para>
</db:td>
<db:td>
<db:para>String</db:para>
</db:td>
<db:td>
<db:para>The font family.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QCheckBox { font-family: &quot;New Century Schoolbook&quot; }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>font-size</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#font-size">Font Size</db:link></db:para>
</db:td>
<db:td>
<db:para>The font size. In this version of Qt, only pt and px metrics are supported.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QTextEdit { font-size: 12px }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>font-style</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#font-style">Font Style</db:link></db:para>
</db:td>
<db:td>
<db:para>The font style.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QTextEdit { font-style: italic }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>font-weight</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#font-weight">Font Weight</db:link></db:para>
</db:td>
<db:td>
<db:para>The weight of the font.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">gridline-color</db:emphasis>* <db:anchor xml:id="gridline-color-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#color">Color</db:link> </db:para>
</db:td>
<db:td>
<db:para>The color of the grid line in a <db:link xlink:href="qtableview.xml">QTableView</db:link>.</db:para>
<db:para>If this property is not specified, it defaults to the value specified by the current style for the <db:link xlink:href="qstyle.xml#StyleHint-enum">SH_Table_GridLineColor</db:link> style hint.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">* { gridline-color: gray }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">height</db:emphasis> <db:anchor xml:id="height-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The height of a subcontrol (or in some case, a widget).</db:para>
<db:para>If this property is not specified, it defaults to a value that depends on the subcontrol/widget and on the current style.</db:para>
<db:warning>
<db:para>Unless otherwise specified, this property has no effect when set on widgets. If you want a widget with a fixed height, set the <db:link xlink:href="stylesheet-reference.xml#min-width-prop">min-height</db:link> and <db:link xlink:href="stylesheet-reference.xml#max-width-prop">max-height</db:link> to the same value.</db:para>
</db:warning>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QSpinBox::down-button { height: 10px }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#width-prop">width</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">icon-size</db:emphasis> <db:anchor xml:id="icon-size-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The width and height of the icon in a widget.</db:para>
<db:para>The icon size of the following widgets can be set using this property.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qcheckbox.xml">QCheckBox</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qlistview.xml">QListView</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qpushbutton.xml">QPushButton</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qradiobutton.xml">QRadioButton</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtabbar.xml">QTabBar</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtoolbar.xml">QToolBar</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtoolbox.xml">QToolBox</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtreeview.xml">QTreeView</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">image</db:emphasis>* <db:anchor xml:id="image-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#url">Url</db:link>+</db:para>
</db:td>
<db:td>
<db:para>The image that is drawn in the contents rectangle of a subcontrol.</db:para>
<db:para>The image property accepts a list of <db:link xlink:href="stylesheet-reference.xml#url">Url</db:link>s or an svg. The actual image that is drawn is determined using the same algorithm as <db:link xlink:href="qicon.xml">QIcon</db:link> (i.e) the image is never scaled up but always scaled down if necessary. If a svg is specified, the image is scaled to the size of the contents rectangle.</db:para>
<db:para>Setting the image property on sub controls implicitly sets the width and height of the sub-control (unless the image in a SVG).</db:para>
<db:para>In Qt 4.3 and later, the alignment of the image within the rectangle can be specified using <db:link xlink:href="stylesheet-reference.xml#image-position-prop">image-position</db:link>.</db:para>
<db:para>This property is for subcontrols only–we don't support it for other elements.</db:para>
<db:warning>
<db:para>The <db:link xlink:href="qicon.xml">QIcon</db:link> SVG plugin is needed to render SVG images.</db:para>
</db:warning>
<db:para>Example:</db:para>
<db:programlisting language="cpp">// implicitly sets the size of down-button to the
// size of spindown.png
QSpinBox::down-button { image: url(:/images/spindown.png) }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">image-position</db:emphasis> <db:anchor xml:id="image-position-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#alignment">alignment</db:link></db:para>
</db:td>
<db:td>
<db:para>In Qt 4.3 and later, the alignment of the image image's position can be specified using relative or absolute position.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">left</db:emphasis> <db:anchor xml:id="left-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>If <db:link xlink:href="stylesheet-reference.xml#position-prop">position</db:link> is relative (the default), moves a subcontrol by a certain offset to the right.</db:para>
<db:para>If <db:link xlink:href="stylesheet-reference.xml#position-prop">position</db:link> is absolute, the left property specifies the subcontrol's left edge in relation to the parent's left edge (see also <db:link xlink:href="stylesheet-reference.xml#subcontrol-origin-prop">subcontrol-origin</db:link>).</db:para>
<db:para>If this property is not specified, it defaults to 0.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QSpinBox::down-button { left: 2px }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#right-prop">right</db:link>, <db:link xlink:href="stylesheet-reference.xml#top-prop">top</db:link>, and <db:link xlink:href="stylesheet-reference.xml#bottom-prop">bottom</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">lineedit-password-character*</db:emphasis> <db:anchor xml:id="lineedit-password-character-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#number">Number</db:link></db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qlineedit.xml">QLineEdit</db:link> password character as a Unicode number.</db:para>
<db:para>If this property is not specified, it defaults to the value specified by the current style for the <db:link xlink:href="qstyle.xml#StyleHint-enum">SH_LineEdit_PasswordCharacter</db:link> style hint.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">* { lineedit-password-character: 9679 }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">lineedit-password-mask-delay*</db:emphasis> <db:anchor xml:id="lineedit-password-mask-delay-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#number">Number</db:link></db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qlineedit.xml">QLineEdit</db:link> password mask delay in milliseconds before <db:link xlink:href="stylesheet-reference.xml#lineedit-password-character-prop">lineedit-password-character</db:link> is applied to visible character.</db:para>
<db:para>If this property is not specified, it defaults to the value specified by the current style for the <db:link xlink:href="qstyle.xml#StyleHint-enum">SH_LineEdit_PasswordMaskDelay</db:link> style hint.</db:para>
<db:para><db:emphasis role="bold">This property was added in Qt 5.4.</db:emphasis></db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">* { lineedit-password-mask-delay: 1000 }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">margin</db:emphasis> <db:anchor xml:id="margin-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#box-lengths">Box Lengths</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's margins. Equivalent to specifying margin-top, margin-right, margin-bottom, and margin-left.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>, <db:link xlink:href="qmenu.xml">QMenu</db:link>, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, and <db:link xlink:href="qtooltip.xml">QToolTip</db:link>.</db:para>
<db:para>If this property is not specified, it defaults to 0.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QLineEdit { margin: 2px }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#padding-prop">padding</db:link>, <db:link xlink:href="stylesheet-reference.xml#spacing-prop">spacing</db:link>, and <db:link xlink:href="stylesheet-customizing.xml#the-box-model">The Box Model</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>margin-top</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's top margin.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>margin-right</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's right margin.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>margin-bottom</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's bottom margin.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>margin-left</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's left margin.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">max-height</db:emphasis> <db:anchor xml:id="max-height-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's or a subcontrol's maximum height.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>, <db:link xlink:href="qmenu.xml">QMenu</db:link>, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsizegrip.xml">QSizeGrip</db:link>, <db:link xlink:href="qspinbox.xml">QSpinBox</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qstatusbar.xml">QStatusBar</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, and <db:link xlink:href="qtooltip.xml">QToolTip</db:link>.</db:para>
<db:para>The value is relative to the contents rect in the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QSpinBox { max-height: 24px }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#max-width-prop">max-width</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">max-width</db:emphasis> <db:anchor xml:id="max-width-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's or a subcontrol's maximum width.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>, <db:link xlink:href="qmenu.xml">QMenu</db:link>, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsizegrip.xml">QSizeGrip</db:link>, <db:link xlink:href="qspinbox.xml">QSpinBox</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qstatusbar.xml">QStatusBar</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, and <db:link xlink:href="qtooltip.xml">QToolTip</db:link>.</db:para>
<db:para>The value is relative to the contents rect in the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QComboBox { max-width: 72px }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#max-height-prop">max-height</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">messagebox-text-interaction-flags*</db:emphasis> <db:anchor xml:id="messagebox-text-interaction-flags-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#number">Number</db:link></db:para>
</db:td>
<db:td>
<db:para>The interaction behavior for text in a message box. Possible values are based on <db:link xlink:href="qt.xml#TextInteractionFlag-enum">Qt::TextInteractionFlags</db:link>.</db:para>
<db:para>If this property is not specified, it defaults to the value specified by the current style for the <db:link xlink:href="qstyle.xml#StyleHint-enum">SH_MessageBox_TextInteractionFlags</db:link> style hint.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QMessageBox { messagebox-text-interaction-flags: 5 }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">min-height</db:emphasis> <db:anchor xml:id="min-height-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's or a subcontrol's minimum height.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>, <db:link xlink:href="qmenu.xml">QMenu</db:link>, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsizegrip.xml">QSizeGrip</db:link>, <db:link xlink:href="qspinbox.xml">QSpinBox</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qstatusbar.xml">QStatusBar</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, and <db:link xlink:href="qtooltip.xml">QToolTip</db:link>.</db:para>
<db:para>If this property is not specified, the minimum height is derived based on the widget's contents and the style.</db:para>
<db:para>The value is relative to the contents rect in the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QComboBox { min-height: 24px }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#min-width-prop">min-width</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">min-width</db:emphasis> <db:anchor xml:id="min-width-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's or a subcontrol's minimum width.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>, <db:link xlink:href="qmenu.xml">QMenu</db:link>, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsizegrip.xml">QSizeGrip</db:link>, <db:link xlink:href="qspinbox.xml">QSpinBox</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qstatusbar.xml">QStatusBar</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, and <db:link xlink:href="qtooltip.xml">QToolTip</db:link>.</db:para>
<db:para>If this property is not specified, the minimum width is derived based on the widget's contents and the style.</db:para>
<db:para>The value is relative to the contents rect in the <db:link xlink:href="stylesheet-customizing.xml#the-box-model">box model</db:link>.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QComboBox { min-width: 72px }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#min-height-prop">min-height</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">opacity*</db:emphasis> <db:anchor xml:id="opacity-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#number">Number</db:link></db:para>
</db:td>
<db:td>
<db:para>The opacity for a widget. Possible values are from 0 (transparent) to 255 (opaque). For the moment, this is only supported for <db:link xlink:href="qtooltip.xml">tooltips</db:link>.</db:para>
<db:para>If this property is not specified, it defaults to the value specified by the current style for the <db:link xlink:href="qstyle.xml#StyleHint-enum">SH_ToolTipLabel_Opacity</db:link> style hint.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QToolTip { opacity: 223 }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">outline</db:emphasis></db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>The outline drawn around the object's border.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">outline-color</db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#color">Color</db:link></db:para>
</db:td>
<db:td>
<db:para>The color of the outline. See also <db:link xlink:href="stylesheet-reference.xml#border-color-prop">border-color</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">outline-offset</db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The outline's offset from the border of the widget.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">outline-style</db:emphasis></db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Specifies the pattern used to draw the outline. See also <db:link xlink:href="stylesheet-reference.xml#border-style-prop">border-style</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">outline-radius</db:emphasis></db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Adds rounded corners to the outline</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">outline-bottom-left-radius</db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#radius">Radius</db:link></db:para>
</db:td>
<db:td>
<db:para>The radius for the bottom-left rounded corner of the outline.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">outline-bottom-right-radius</db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#radius">Radius</db:link></db:para>
</db:td>
<db:td>
<db:para>The radius for the bottom-right rounded corner of the outline.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">outline-top-left-radius</db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#radius">Radius</db:link></db:para>
</db:td>
<db:td>
<db:para>The radius for the top-left corner of the outline.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">outline-top-right-radius</db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#radius">Radius</db:link></db:para>
</db:td>
<db:td>
<db:para>The radius for the top-right rounded corner of the outline.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">padding</db:emphasis> <db:anchor xml:id="padding-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#box-lengths">Box Lengths</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's padding. Equivalent to specifying padding-top, padding-right, padding-bottom, and padding-left.</db:para>
<db:para>This property is supported by <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> subclasses, <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link> subclasses, <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qframe.xml">QFrame</db:link>, <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>, <db:link xlink:href="qlabel.xml">QLabel</db:link>, <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>, <db:link xlink:href="qmenu.xml">QMenu</db:link>, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, <db:link xlink:href="qtextedit.xml">QTextEdit</db:link>, and <db:link xlink:href="qtooltip.xml">QToolTip</db:link>.</db:para>
<db:para>If this property is not specified, it defaults to 0.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QLineEdit { padding: 3px }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#margin-prop">margin</db:link>, <db:link xlink:href="stylesheet-reference.xml#spacing-prop">spacing</db:link>, and <db:link xlink:href="stylesheet-customizing.xml#the-box-model">The Box Model</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>padding-top</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's top padding.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>padding-right</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's right padding.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>padding-bottom</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's bottom padding.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>padding-left</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The widget's left padding.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">paint-alternating-row-colors-for-empty-area</db:emphasis> <db:anchor xml:id="paint-alternating-row-colors-for-empty-area-prop"/>
</db:para>
</db:td>
<db:td>
<db:para>bool</db:para>
</db:td>
<db:td>
<db:para>Whether the <db:link xlink:href="qtreeview.xml">QTreeView</db:link> paints alternating row colors for the empty area (i.e the area where there are no items)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">position</db:emphasis> <db:anchor xml:id="position-prop"/>
</db:para>
</db:td>
<db:td>
<db:para>relative  | absolute</db:para>
</db:td>
<db:td>
<db:para>Whether offsets specified using <db:link xlink:href="stylesheet-reference.xml#left-prop">left</db:link>, <db:link xlink:href="stylesheet-reference.xml#right-prop">right</db:link>, <db:link xlink:href="stylesheet-reference.xml#top-prop">top</db:link>, and <db:link xlink:href="stylesheet-reference.xml#bottom-prop">bottom</db:link> are relative or absolute coordinates.</db:para>
<db:para>If this property is not specified, it defaults to relative.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">right</db:emphasis> <db:anchor xml:id="right-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>If <db:link xlink:href="stylesheet-reference.xml#position-prop">position</db:link> is relative (the default), moves a subcontrol by a certain offset to the left; specifying <db:code>right: <db:emphasis>x</db:emphasis></db:code> is then equivalent to specifying <db:code><db:link xlink:href="stylesheet-reference.xml#left-prop">left</db:link>: -<db:emphasis>x</db:emphasis></db:code>.</db:para>
<db:para>If <db:link xlink:href="stylesheet-reference.xml#position-prop">position</db:link> is absolute, the right property specifies the subcontrol's right edge in relation to the parent's right edge (see also <db:link xlink:href="stylesheet-reference.xml#subcontrol-origin-prop">subcontrol-origin</db:link>).</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QSpinBox::down-button { right: 2px }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#left-prop">left</db:link>, <db:link xlink:href="stylesheet-reference.xml#top-prop">top</db:link>, and <db:link xlink:href="stylesheet-reference.xml#bottom-prop">bottom</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">selection-background-color*</db:emphasis> <db:anchor xml:id="selection-background-color-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link> </db:para>
</db:td>
<db:td>
<db:para>The background of selected text or items.</db:para>
<db:para>This property is supported by all widgets that respect the <db:link xlink:href="qwidget.xml#palette-prop">QWidget::palette</db:link> and that show selection text.</db:para>
<db:para>If this property is not set, the default value is whatever is set for the palette's <db:link xlink:href="qpalette.xml#ColorRole-enum">Highlight</db:link> role.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QTextEdit { selection-background-color: darkblue }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#selection-color-prop">selection-color</db:link> and <db:link xlink:href="stylesheet-reference.xml#background-prop">background</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">selection-color*</db:emphasis> <db:anchor xml:id="selection-color-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link> </db:para>
</db:td>
<db:td>
<db:para>The foreground of selected text or items.</db:para>
<db:para>This property is supported by all widgets that respect the <db:link xlink:href="qwidget.xml#palette-prop">QWidget::palette</db:link> and that show selection text.</db:para>
<db:para>If this property is not set, the default value is whatever is set for the palette's <db:link xlink:href="qpalette.xml#ColorRole-enum">HighlightedText</db:link> role.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QTextEdit { selection-color: white }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#selection-background-color-prop">selection-background-color</db:link> and <db:link xlink:href="stylesheet-reference.xml#color-prop">color</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">show-decoration-selected*</db:emphasis> <db:anchor xml:id="show-decoration-selected-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#boolean">Boolean</db:link></db:para>
</db:td>
<db:td>
<db:para>Controls whether selections in a <db:link xlink:href="qlistview.xml">QListView</db:link> cover the entire row or just the extent of the text.</db:para>
<db:para>If this property is not specified, it defaults to the value specified by the current style for the <db:link xlink:href="qstyle.xml#StyleHint-enum">SH_ItemView_ShowDecorationSelected</db:link> style hint.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">* { show-decoration-selected: 1 }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">spacing*</db:emphasis> <db:anchor xml:id="spacing-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>Internal spacing in the widget.</db:para>
<db:para>This property is supported by <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, checkable <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>es, <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, and <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>.</db:para>
<db:para>If this property is not specified, the default value depends on the widget and on the current style.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QMenuBar { spacing: 10 }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#padding-prop">padding</db:link> and <db:link xlink:href="stylesheet-reference.xml#margin-prop">margin</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">subcontrol-origin*</db:emphasis> <db:anchor xml:id="subcontrol-origin-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#origin">Origin</db:link></db:para>
</db:td>
<db:td>
<db:para>The origin rectangle of the subcontrol within the parent element.</db:para>
<db:para>If this property is not specified, the default is padding.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QSpinBox::up-button {
    image: url(:/images/spinup.png);
    subcontrol-origin: content;
    subcontrol-position: right top;
}
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#subcontrol-position-prop">subcontrol-position</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">subcontrol-position*</db:emphasis> <db:anchor xml:id="subcontrol-position-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#alignment">Alignment</db:link></db:para>
</db:td>
<db:td>
<db:para>The alignment of the subcontrol within the origin rectangle specified by <db:link xlink:href="stylesheet-reference.xml#subcontrol-origin-prop">subcontrol-origin</db:link>.</db:para>
<db:para>If this property is not specified, it defaults to a value that depends on the subcontrol.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QSpinBox::down-button {
    image: url(:/images/spindown.png);
    subcontrol-origin: padding;
    subcontrol-position: right bottom;
}
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#subcontrol-origin-prop">subcontrol-origin</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">text-align</db:emphasis> <db:anchor xml:id="text-align-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#alignment">Alignment</db:link></db:para>
</db:td>
<db:td>
<db:para>The alignment of text and icon within the contents of the widget.</db:para>
<db:para>If this value is not specified, it defaults to the value that depends on the native style.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QPushButton {
    text-align: left;
}
</db:programlisting>
<db:para>This property is currently supported only by <db:link xlink:href="qpushbutton.xml">QPushButton</db:link> and <db:link xlink:href="qprogressbar.xml">QProgressBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">text-decoration</db:emphasis></db:para>
</db:td>
<db:td>
<db:para>none  underline  overline  line-through</db:para>
</db:td>
<db:td>
<db:para>Additional text effects</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">top</db:emphasis> <db:anchor xml:id="top-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>If <db:link xlink:href="stylesheet-reference.xml#position-prop">position</db:link> is relative (the default), moves a subcontrol by a certain offset down.</db:para>
<db:para>If <db:link xlink:href="stylesheet-reference.xml#position-prop">position</db:link> is absolute, the top property specifies the subcontrol's top edge in relation to the parent's top edge (see also <db:link xlink:href="stylesheet-reference.xml#subcontrol-origin-prop">subcontrol-origin</db:link>).</db:para>
<db:para>If this property is not specified, it defaults to 0.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QSpinBox::up-button { top: 2px }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#left-prop">left</db:link>, <db:link xlink:href="stylesheet-reference.xml#right-prop">right</db:link>, and <db:link xlink:href="stylesheet-reference.xml#bottom-prop">bottom</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">width</db:emphasis> <db:anchor xml:id="width-prop"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The width of a subcontrol (or a widget in some cases).</db:para>
<db:para>If this property is not specified, it defaults to a value that depends on the subcontrol/widget and on the current style.</db:para>
<db:warning>
<db:para>Unless otherwise specified, this property has no effect when set on widgets. If you want a widget with a fixed width, set the <db:link xlink:href="stylesheet-reference.xml#min-width-prop">min-width</db:link> and <db:link xlink:href="stylesheet-reference.xml#max-width-prop">max-width</db:link> to the same value.</db:para>
</db:warning>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QSpinBox::up-button { width: 12px }
</db:programlisting>
<db:para>See also <db:link xlink:href="stylesheet-reference.xml#height-prop">height</db:link>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="list-of-icons">
<db:title>List of Icons</db:title>
<db:para>Icons used in Qt can be customized using the following properties. Each of the properties listed in this section have the type <db:link xlink:href="stylesheet-reference.xml#icon">Icon</db:link>.</db:para>
<db:para>Note that for icons to appear in buttons in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>, you need to set the dialogbuttonbox-buttons-have-icons property to true. Also, to customize the size of the icons, use the icon-size property.</db:para>
<db:informaltable style="generic" width="100%">
<db:thead>
<db:tr>
<db:th>
<db:para>Name</db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::StandardPixmap</db:link></db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>backward-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_ArrowBack</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>cd-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DriveCDIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>computer-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_ComputerIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>desktop-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DesktopIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dialog-apply-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DialogApplyButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dialog-cancel-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DialogCancelButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dialog-close-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DialogCloseButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dialog-discard-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DialogDiscardButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dialog-help-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DialogHelpButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dialog-no-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DialogNoButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dialog-ok-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DialogOkButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dialog-open-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DialogOpenButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dialog-reset-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DialogResetButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dialog-save-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DialogSaveButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dialog-yes-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DialogYesButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>directory-closed-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DirClosedIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>directory-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DirIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>directory-link-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DirLinkIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>directory-open-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DirOpenIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dockwidget-close-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DockWidgetCloseButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>downarrow-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_ArrowDown</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dvd-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DriveDVDIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>file-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_FileIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>file-link-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_FileLinkIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>filedialog-contentsview-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_FileDialogContentsView</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>filedialog-detailedview-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_FileDialogDetailedView</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>filedialog-end-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_FileDialogEnd</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>filedialog-infoview-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_FileDialogInfoView</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>filedialog-listview-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_FileDialogListView</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>filedialog-new-directory-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_FileDialogNewFolder</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>filedialog-parent-directory-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_FileDialogToParent</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>filedialog-start-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_FileDialogStart</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>floppy-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DriveFDIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>forward-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_ArrowForward</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>harddisk-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DriveHDIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>home-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DirHomeIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>leftarrow-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_ArrowLeft</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>messagebox-critical-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_MessageBoxCritical</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>messagebox-information-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_MessageBoxInformation</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>messagebox-question-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_MessageBoxQuestion</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>messagebox-warning-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_MessageBoxWarning</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>network-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_DriveNetIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>rightarrow-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_ArrowRight</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>titlebar-contexthelp-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_TitleBarContextHelpButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>titlebar-maximize-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_TitleBarMaxButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>titlebar-menu-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_TitleBarMenuButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>titlebar-minimize-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_TitleBarMinButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>titlebar-normal-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_TitleBarNormalButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>titlebar-shade-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_TitleBarShadeButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>titlebar-unshade-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_TitleBarUnshadeButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>trash-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_TrashIcon</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>uparrow-icon</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StandardPixmap-enum">QStyle::SP_ArrowUp</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="list-of-property-types">
<db:title>List of Property Types</db:title>
<db:para>The following table summarizes the syntax and meaning of the different property types.</db:para>
<db:informaltable style="generic" width="100%">
<db:thead>
<db:tr>
<db:th>
<db:para>Type</db:para>
</db:th>
<db:th>
<db:para>Syntax</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Alignment</db:emphasis> <db:anchor xml:id="alignment"/>
</db:para>
</db:td>
<db:td>
<db:para>{ top  | bottom  | left  | right  | center }*</db:para>
</db:td>
<db:td>
<db:para>Horizontal and/or vertical alignment.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QTextEdit { background-position: bottom center }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Attachment</db:emphasis> <db:anchor xml:id="attachment"/>
</db:para>
</db:td>
<db:td>
<db:para>{ scroll  | fixed }*</db:para>
</db:td>
<db:td>
<db:para>Scroll or fixed attachment.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Background</db:emphasis> <db:anchor xml:id="background"/>
</db:para>
</db:td>
<db:td>
<db:para>{ <db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link>  | <db:link xlink:href="stylesheet-reference.xml#url">Url</db:link>  | <db:link xlink:href="stylesheet-reference.xml#repeat">Repeat</db:link>  | <db:link xlink:href="stylesheet-reference.xml#alignment">Alignment</db:link> }*</db:para>
</db:td>
<db:td>
<db:para>A sequence of <db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link>, <db:link xlink:href="stylesheet-reference.xml#url">Url</db:link>, <db:link xlink:href="stylesheet-reference.xml#repeat">Repeat</db:link>, and <db:link xlink:href="stylesheet-reference.xml#alignment">Alignment</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Boolean</db:emphasis> <db:anchor xml:id="boolean"/>
</db:para>
</db:td>
<db:td>
<db:para>0 | 1</db:para>
</db:td>
<db:td>
<db:para>True (1) or false (0).</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QDialog { etch-disabled-text: 1 }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Border</db:emphasis> <db:anchor xml:id="border"/>
</db:para>
</db:td>
<db:td>
<db:para>{ <db:link xlink:href="stylesheet-reference.xml#border-style">Border Style</db:link>  | <db:link xlink:href="stylesheet-reference.xml#length">Length</db:link>  | <db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link> }*</db:para>
</db:td>
<db:td>
<db:para>Shorthand border property.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Border Image</db:emphasis> <db:anchor xml:id="border-image"/>
</db:para>
</db:td>
<db:td>
<db:para>none  | <db:link xlink:href="stylesheet-reference.xml#url">Url</db:link> <db:link xlink:href="stylesheet-reference.xml#number">Number</db:link>{4}  (stretch | repeat){0,2}</db:para>
</db:td>
<db:td>
<db:para>A border image is an image that is composed of nine parts (top left, top center, top right, center left, center, center right, bottom left, bottom center, and bottom right). When a border of a certain size is required, the corner parts are used as is, and the top, right, bottom, and left parts are stretched or repeated to produce a border with the desired size.</db:para>
<db:para>See the <db:link xlink:href="http://www.w3.org/TR/css3-background/#the-border-image">CSS3 Draft Specification</db:link> for details.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Border Style</db:emphasis> <db:anchor xml:id="border-style"/>
</db:para>
</db:td>
<db:td>
<db:para>dashed  | dot-dash  | dot-dot-dash  | dotted  | double  | groove  | inset  | outset  | ridge  | solid  | none</db:para>
</db:td>
<db:td>
<db:para>Specifies the pattern used to draw a border. See the <db:link xlink:href="http://www.w3.org/TR/css3-background/#border-style">CSS3 Draft Specification</db:link> for details.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Box Colors</db:emphasis> <db:anchor xml:id="box-colors"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link>{1,4}</db:para>
</db:td>
<db:td>
<db:para>One to four occurrences of <db:link xlink:href="stylesheet-reference.xml#brush">Brush</db:link>, specifying the top, right, bottom, and left edges of a box, respectively. If the left color is not specified, it is taken to be the same as the right color. If the bottom color is not specified, it is taken to be the same as the top color. If the right color is not specified, it is taken to be the same as the top color.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QLabel { border-color: red }   /* red red red red */
QLabel { border-color: red blue } /* red blue red blue */
QLabel { border-color: red blue green } /* red blue green blue */
QLabel { border-color: red blue green yellow }
/* red blue green yellow */
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Box Lengths</db:emphasis> <db:anchor xml:id="box-lengths"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link>{1,4}</db:para>
</db:td>
<db:td>
<db:para>One to four occurrences of <db:link xlink:href="stylesheet-reference.xml#length">Length</db:link>, specifying the top, right, bottom, and left edges of a box, respectively. If the left length is not specified, it is taken to be the same as the right length. If the bottom length is not specified, is it taken to be the same as the top length. If the right length is not specified, it is taken to be the same as the top length.</db:para>
<db:para>Examples:</db:para>
<db:programlisting language="cpp">QLabel { border-width: 1px }                    /* 1px 1px 1px 1px */
QLabel { border-width: 1px 2px }                /* 1px 2px 1px 2px */
QLabel { border-width: 1px 2px 3px }            /* 1px 2px 3px 2px */
QLabel { border-width: 1px 2px 3px 4px }        /* 1px 2px 3px 4px */
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Brush</db:emphasis> <db:anchor xml:id="brush"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#color">Color</db:link>  | <db:link xlink:href="stylesheet-reference.xml#gradient">Gradient</db:link>  | <db:link xlink:href="stylesheet-reference.xml#paletterole">PaletteRole</db:link></db:para>
</db:td>
<db:td>
<db:para>Specifies a Color or a Gradient or an entry in the Palette.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Color</db:emphasis> <db:anchor xml:id="color"/>
</db:para>
</db:td>
<db:td>
<db:para><db:code>rgb(<db:emphasis>r</db:emphasis>, <db:emphasis>g</db:emphasis>, <db:emphasis>b</db:emphasis>)</db:code>  | <db:code>rgba(<db:emphasis>r</db:emphasis>, <db:emphasis>g</db:emphasis>, <db:emphasis>b</db:emphasis>, <db:emphasis>a</db:emphasis>)</db:code>  | <db:code>hsv(<db:emphasis>h</db:emphasis>, <db:emphasis>s</db:emphasis>, <db:emphasis>v</db:emphasis>)</db:code>  | <db:code>hsva(<db:emphasis>h</db:emphasis>, <db:emphasis>s</db:emphasis>, <db:emphasis>v</db:emphasis>, <db:emphasis>a</db:emphasis>)</db:code>  | <db:code>#<db:emphasis>rrggbb</db:emphasis></db:code>  | <db:link xlink:href="qcolor.xml#setNamedColor">Color Name</db:link> </db:para>
</db:td>
<db:td>
<db:para>Specifies a color as RGB (red, green, blue) or RGBA (red, green, blue, alpha) or HSV (hue, saturation, value) or HSVA (hue, saturation, value, alpha) or a named color. The rgb() or rgba() syntax can be used with integer values between 0 and 255, or with percentages. The value of s, v, and a in hsv() or hsva() must all be in the range 0-255; the value of h must be in the range 0-359.</db:para>
<db:para>Examples:</db:para>
<db:programlisting language="cpp">QLabel { border-color: red }                    /* opaque red */
QLabel { border-color: #FF0000 }                /* opaque red */
QLabel { border-color: rgba(255, 0, 0, 75%) }   /* 75% opaque red */
QLabel { border-color: rgb(255, 0, 0) }         /* opaque red */
QLabel { border-color: rgb(100%, 0%, 0%) }      /* opaque red */
QLabel { border-color: hsv(60, 255, 255) }      /* opaque yellow */
QLabel { border-color: hsva(240, 255, 255, 75%) }      /* 75% blue */
</db:programlisting>
<db:note>
<db:para>The RGB colors allowed are the same as those allowed with CSS 2.1, as listed <db:link xlink:href="http://www.w3.org/TR/CSS21/syndata.html#color-units">here</db:link>.</db:para>
</db:note>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Font</db:emphasis> <db:anchor xml:id="font"/>
</db:para>
</db:td>
<db:td>
<db:para>(<db:link xlink:href="stylesheet-reference.xml#font-style">Font Style</db:link> | <db:link xlink:href="stylesheet-reference.xml#font-weight">Font Weight</db:link>){0,2} <db:link xlink:href="stylesheet-reference.xml#font-size">Font Size</db:link> String</db:para>
</db:td>
<db:td>
<db:para>Shorthand font property.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Font Size</db:emphasis> <db:anchor xml:id="font-size"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link></db:para>
</db:td>
<db:td>
<db:para>The size of a font.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Font Style</db:emphasis> <db:anchor xml:id="font-style"/>
</db:para>
</db:td>
<db:td>
<db:para>normal  | italic  | oblique</db:para>
</db:td>
<db:td>
<db:para>The style of a font.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Font Weight</db:emphasis> <db:anchor xml:id="font-weight"/>
</db:para>
</db:td>
<db:td>
<db:para>normal  | bold  | 100  | 200  ...  | 900</db:para>
</db:td>
<db:td>
<db:para>The weight of a font.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Gradient</db:emphasis> <db:anchor xml:id="gradient"/>
</db:para>
</db:td>
<db:td>
<db:para>qlineargradient  | qradialgradient  | qconicalgradient</db:para>
</db:td>
<db:td>
<db:para>Specifies gradient fills. There are three types of gradient fills:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:emphasis>Linear</db:emphasis> gradients interpolate colors between start and end points.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis>Radial</db:emphasis> gradients interpolate colors between a focal point and end points on a circle surrounding it.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis>Conical</db:emphasis> gradients interpolate colors around a center point.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Gradients are specified in Object Bounding Mode. Imagine the box in which the gradient is rendered, to have its top left corner at (0, 0) and its bottom right corner at (1, 1). Gradient parameters are then specified as percentages from 0 to 1. These values are extrapolated to actual box coordinates at runtime. It is possible specify values that lie outside the bounding box (-0.6 or 1.8, for instance).</db:para>
<db:warning>
<db:para>The stops have to appear sorted in ascending order.</db:para>
</db:warning>
<db:para>Examples:</db:para>
<db:programlisting language="cpp">/* linear gradient from white to green */
QTextEdit {
    background: qlineargradient(x1:0, y1:0, x2:1, y2:1,
                stop:0 white, stop: 0.4 gray, stop:1 green)
}

/* linear gradient from white to green */
QTextEdit {
    background: qlineargradient(x1:0, y1:0, x2:1, y2:1,
                stop:0 white, stop: 0.4 rgba(10, 20, 30, 40),
                stop:1 rgb(0, 200, 230, 200))
}

/* conical gradient from white to green */
QTextEdit {
    background: qconicalgradient(cx:0.5, cy:0.5, angle:30,
                stop:0 white, stop:1 #00FF00)
}

/* radial gradient from white to green */
QTextEdit {
    background: qradialgradient(cx:0, cy:0, radius: 1,
                fx:0.5, fy:0.5, stop:0 white, stop:1 green)
}
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Icon</db:emphasis> <db:anchor xml:id="icon"/>
</db:para>
</db:td>
<db:td>
<db:para>(<db:link xlink:href="stylesheet-reference.xml#url">Url</db:link> (disabled | active | normal | selected)? (on | off)? )*</db:para>
</db:td>
<db:td>
<db:para>A list of url, <db:link xlink:href="qicon.xml#Mode-enum">QIcon::Mode</db:link> and <db:link xlink:href="qicon.xml#State-enum">QIcon::State</db:link>.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">* {
    file-icon: url(file.png),
               url(file_selected.png) selected;
  }

QMessageBox {
    dialogbuttonbox-buttons-have-icons: true;
    dialog-ok-icon: url(ok.svg);
    dialog-cancel-icon: url(cancel.png),
                        url(grayed_cancel.png) disabled;
}
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Length</db:emphasis> <db:anchor xml:id="length"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#number">Number</db:link> (px | pt | em | ex)?</db:para>
</db:td>
<db:td>
<db:para>A number followed by a measurement unit. The CSS standard recommends that user agents must <db:link xlink:href="http://www.w3.org/TR/CSS21/syndata.html#illegalvalues">ignore</db:link> a declaration with an illegal value. In Qt, it is mandatory to specify measurement units. For compatibility with earlier versions of Qt, numbers without measurement units are treated as pixels in most contexts. The supported units are:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>px: pixels</db:para>
</db:listitem>
<db:listitem>
<db:para>pt: the size of one point (i.e., 1/72 of an inch)</db:para>
</db:listitem>
<db:listitem>
<db:para>em: the em width of the font (i.e., the width of 'M')</db:para>
</db:listitem>
<db:listitem>
<db:para>ex: the ex width of the font (i.e., the height of 'x')</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>However, Qt is limited to font sizes in pt and px and any other size must be in px, em or ex.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Number</db:emphasis> <db:anchor xml:id="number"/>
</db:para>
</db:td>
<db:td>
<db:para>A decimal integer or a real number</db:para>
</db:td>
<db:td>
<db:para>Examples: 0, 18, +127, -255, 12.34, -.5, 0009.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Origin</db:emphasis> <db:anchor xml:id="origin"/>
</db:para>
</db:td>
<db:td>
<db:para>margin  | border  | padding  | content</db:para>
</db:td>
<db:td>
<db:para>Indicates which of four rectangles to use.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>margin: The margin rectangle. The margin falls outside the border.</db:para>
</db:listitem>
<db:listitem>
<db:para>border: The border rectangle. This is where any border is drawn.</db:para>
</db:listitem>
<db:listitem>
<db:para>padding: The padding rectangle. Unlike the margins, padding is located inside the border.</db:para>
</db:listitem>
<db:listitem>
<db:para>content: The content rectangle. This specifies where the actual contents go, excluding any padding, border, or margin.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>See also <db:link xlink:href="stylesheet-customizing.xml#the-box-model">The Box Model</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">PaletteRole</db:emphasis> <db:anchor xml:id="paletterole"/>
</db:para>
</db:td>
<db:td>
<db:para>alternate-base  | base  | bright-text  | button  | button-text  | dark  | highlight  | highlighted-text  | light  | link  | link-visited  | mid  | midlight  | shadow  | text  | window  | window-text </db:para>
</db:td>
<db:td>
<db:para>These values correspond the <db:link xlink:href="qpalette.xml#ColorRole-enum">Color roles</db:link> in the widget's <db:link xlink:href="qpalette.xml">QPalette</db:link>.</db:para>
<db:para>For example,</db:para>
<db:programlisting language="cpp">QPushButton { color: palette(dark); }
</db:programlisting>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Radius</db:emphasis> <db:anchor xml:id="radius"/>
</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="stylesheet-reference.xml#length">Length</db:link>{1, 2}</db:para>
</db:td>
<db:td>
<db:para>One or two occurrences of <db:link xlink:href="stylesheet-reference.xml#length">Length</db:link>. If only one length is specified, it is used as the radius of the quarter circle defining the corner. If two lengths are specified, the first length is the horizontal radius of a quarter ellipse, whereas the second length is the vertical radius.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Repeat</db:emphasis> <db:anchor xml:id="repeat"/>
</db:para>
</db:td>
<db:td>
<db:para>repeat-x  | repeat-y  | repeat  | no-repeat</db:para>
</db:td>
<db:td>
<db:para>A value indicating the nature of repetition.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>repeat-x: Repeat horizontally.</db:para>
</db:listitem>
<db:listitem>
<db:para>repeat-y: Repeat vertically.</db:para>
</db:listitem>
<db:listitem>
<db:para>repeat: Repeat horizontally and vertically.</db:para>
</db:listitem>
<db:listitem>
<db:para>no-repeat: Don't repeat.</db:para>
</db:listitem>
</db:itemizedlist>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">Url</db:emphasis> <db:anchor xml:id="url"/>
</db:para>
</db:td>
<db:td>
<db:para><db:code>url(<db:emphasis>filename</db:emphasis>)</db:code></db:para>
</db:td>
<db:td>
<db:para><db:code><db:emphasis>filename</db:emphasis></db:code> is the name of a file on the local disk or stored using <db:link xlink:href="resources.xml">The Qt Resource System</db:link>. Setting an image implicitly sets the width and height of the element.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="list-of-pseudo-states">
<db:title>List of Pseudo-States</db:title>
<db:para>The following pseudo-states are supported:</db:para>
<db:informaltable style="generic" width="100%">
<db:thead>
<db:tr>
<db:th>
<db:para>Pseudo-State</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>:active <db:anchor xml:id="active"/>
</db:para>
</db:td>
<db:td>
<db:para>This state is set when the widget resides in an active window.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:adjoins-item <db:anchor xml:id="adjoins-item-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>This state is set when the <db:link xlink:href="stylesheet-reference.xml#branch-sub">::branch</db:link> of a <db:link xlink:href="qtreeview.xml">QTreeView</db:link> is adjacent to an item.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:alternate <db:anchor xml:id="alternate-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>This state is set for every alternate row whe painting the row of a <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> when <db:link xlink:href="qabstractitemview.xml#alternatingRowColors-prop">QAbstractItemView::alternatingRowColors</db:link>() is set to true.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:bottom <db:anchor xml:id="bottom-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is positioned at the bottom. For example, a <db:link xlink:href="qtabbar.xml">QTabBar</db:link> that has its tabs positioned at the bottom.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:checked <db:anchor xml:id="checked-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is checked. For example, the <db:link xlink:href="qabstractbutton.xml#checked-prop">checked</db:link> state of <db:link xlink:href="qabstractbutton.xml">QAbstractButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:closable <db:anchor xml:id="closable-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The items can be closed. For example, the <db:link xlink:href="qdockwidget.xml">QDockWidget</db:link> has the <db:link xlink:href="qdockwidget.xml#DockWidgetFeature-enum">QDockWidget::DockWidgetClosable</db:link> feature turned on.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:closed <db:anchor xml:id="closed-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is in the closed state. For example, an non-expanded item in a <db:link xlink:href="qtreeview.xml">QTreeView</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:default <db:anchor xml:id="default-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is the default. For example, a <db:link xlink:href="qpushbutton.xml#default-prop">default</db:link> <db:link xlink:href="qpushbutton.xml">QPushButton</db:link> or a default action in a <db:link xlink:href="qmenu.xml">QMenu</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:disabled <db:anchor xml:id="disabled-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is <db:link xlink:href="qwidget.xml#enabled-prop">disabled</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:editable <db:anchor xml:id="editable-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qcombobox.xml">QComboBox</db:link> is editable.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:edit-focus <db:anchor xml:id="edit-focus-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item has edit focus (See <db:link xlink:href="qstyle.xml#StateFlag-enum">QStyle::State_HasEditFocus</db:link>). This state is available only for Qt Extended applications.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:enabled <db:anchor xml:id="enabled-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is <db:link xlink:href="qwidget.xml#enabled-prop">enabled</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:exclusive <db:anchor xml:id="exclusive-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is part of an exclusive item group. For example, a menu item in a exclusive <db:link xlink:href="qactiongroup.xml">QActionGroup</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:first <db:anchor xml:id="first-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is the first (in a list). For example, the first tab in a <db:link xlink:href="qtabbar.xml">QTabBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:flat <db:anchor xml:id="flat-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is flat. For example, a <db:link xlink:href="qpushbutton.xml#flat-prop">flat</db:link> <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:floatable <db:anchor xml:id="floatable-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The items can be floated. For example, the <db:link xlink:href="qdockwidget.xml">QDockWidget</db:link> has the <db:link xlink:href="qdockwidget.xml#DockWidgetFeature-enum">QDockWidget::DockWidgetFloatable</db:link> feature turned on.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:focus <db:anchor xml:id="focus-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item has <db:link xlink:href="qwidget.xml#focus-prop">input focus</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:has-children <db:anchor xml:id="has-children-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item has children. For example, an item in a <db:link xlink:href="qtreeview.xml">QTreeView</db:link> that has child items.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:has-siblings <db:anchor xml:id="has-siblings-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item has siblings. For example, an item in a <db:link xlink:href="qtreeview.xml">QTreeView</db:link> that siblings.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:horizontal <db:anchor xml:id="horizontal-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item has horizontal orientation</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:hover <db:anchor xml:id="hover-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The mouse is hovering over the item.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:indeterminate <db:anchor xml:id="indeterminate-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item has indeterminate state. For example, a <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link> or <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link> is <db:link xlink:href="qt.xml#CheckState-enum">partially checked</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:last <db:anchor xml:id="last-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is the last (in a list). For example, the last tab in a <db:link xlink:href="qtabbar.xml">QTabBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:left <db:anchor xml:id="left-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is positioned at the left. For example, a <db:link xlink:href="qtabbar.xml">QTabBar</db:link> that has its tabs positioned at the left.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:maximized <db:anchor xml:id="maximized-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is maximized. For example, a maximized <db:link xlink:href="qmdisubwindow.xml">QMdiSubWindow</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:middle <db:anchor xml:id="middle-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is in the middle (in a list). For example, a tab that is not in the beginning or the end in a <db:link xlink:href="qtabbar.xml">QTabBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:minimized <db:anchor xml:id="minimized-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is minimized. For example, a minimized <db:link xlink:href="qmdisubwindow.xml">QMdiSubWindow</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:movable <db:anchor xml:id="movable-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item can be moved around. For example, the <db:link xlink:href="qdockwidget.xml">QDockWidget</db:link> has the <db:link xlink:href="qdockwidget.xml#DockWidgetFeature-enum">QDockWidget::DockWidgetMovable</db:link> feature turned on.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:no-frame <db:anchor xml:id="no-frame-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item has no frame. For example, a frameless <db:link xlink:href="qspinbox.xml">QSpinBox</db:link> or <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:non-exclusive <db:anchor xml:id="non-exclusive-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is part of a non-exclusive item group. For example, a menu item in a non-exclusive <db:link xlink:href="qactiongroup.xml">QActionGroup</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:off <db:anchor xml:id="off-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>For items that can be toggled, this applies to items in the &quot;off&quot; state.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:on <db:anchor xml:id="on-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>For items that can be toggled, this applies to widgets in the &quot;on&quot; state.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:only-one <db:anchor xml:id="only-one-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is the only one (in a list). For example, a lone tab in a <db:link xlink:href="qtabbar.xml">QTabBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:open <db:anchor xml:id="open-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is in the open state. For example, an expanded item in a <db:link xlink:href="qtreeview.xml">QTreeView</db:link>, or a <db:link xlink:href="qcombobox.xml">QComboBox</db:link> or <db:link xlink:href="qpushbutton.xml">QPushButton</db:link> with an open menu.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:next-selected <db:anchor xml:id="next-selected-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The next item (in a list) is selected. For example, the selected tab of a <db:link xlink:href="qtabbar.xml">QTabBar</db:link> is next to this item.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:pressed <db:anchor xml:id="pressed-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is being pressed using the mouse.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:previous-selected <db:anchor xml:id="previous-selected-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The previous item (in a list) is selected. For example, a tab in a <db:link xlink:href="qtabbar.xml">QTabBar</db:link> that is next to the selected tab.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:read-only <db:anchor xml:id="read-only-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is marked read only or non-editable. For example, a read only <db:link xlink:href="qlineedit.xml">QLineEdit</db:link> or a non-editable <db:link xlink:href="qcombobox.xml">QComboBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:right <db:anchor xml:id="right-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is positioned at the right. For example, a <db:link xlink:href="qtabbar.xml">QTabBar</db:link> that has its tabs positioned at the right.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:selected <db:anchor xml:id="selected-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is selected. For example, the selected tab in a <db:link xlink:href="qtabbar.xml">QTabBar</db:link> or the selected item in a <db:link xlink:href="qmenu.xml">QMenu</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:top <db:anchor xml:id="top-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is positioned at the top. For example, a <db:link xlink:href="qtabbar.xml">QTabBar</db:link> that has its tabs positioned at the top.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:unchecked <db:anchor xml:id="unchecked-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item is <db:link xlink:href="qabstractbutton.xml#checked-prop">unchecked</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:vertical <db:anchor xml:id="vertical-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The item has vertical orientation.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>:window <db:anchor xml:id="window-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The widget is a window (i.e top level widget)</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:anchor xml:id="subcontrols"/>
</db:section>
<db:section xml:id="list-of-sub-controls">
<db:title>List of Sub-Controls</db:title>
<db:para>The following subcontrols are available:</db:para>
<db:informaltable style="generic" width="100%">
<db:thead>
<db:tr>
<db:th>
<db:para>Sub-Control</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>::add-line <db:anchor xml:id="add-line-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The button to add a line of a <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::add-page <db:anchor xml:id="add-page-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The region between the handle (slider) and the <db:link xlink:href="stylesheet-reference.xml#add-line-sub">add-line</db:link> of a <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::branch <db:anchor xml:id="branch-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The branch indicator of a <db:link xlink:href="qtreeview.xml">QTreeView</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::chunk <db:anchor xml:id="chunk-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The progress chunk of a <db:link xlink:href="qprogressbar.xml">QProgressBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::close-button <db:anchor xml:id="close-button-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The close button of a <db:link xlink:href="qdockwidget.xml">QDockWidget</db:link> or tabs of <db:link xlink:href="qtabbar.xml">QTabBar</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::corner <db:anchor xml:id="corner-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The corner between two scrollbars in a <db:link xlink:href="qabstractscrollarea.xml">QAbstractScrollArea</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::down-arrow <db:anchor xml:id="down-arrow-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The down arrow of a <db:link xlink:href="qcombobox.xml">QComboBox</db:link>, <db:link xlink:href="qheaderview.xml">QHeaderView</db:link> (sort indicator), <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link> or <db:link xlink:href="qspinbox.xml">QSpinBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::down-button <db:anchor xml:id="down-button-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The down button of a <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link> or a <db:link xlink:href="qspinbox.xml">QSpinBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::drop-down <db:anchor xml:id="drop-down-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The drop-down button of a <db:link xlink:href="qcombobox.xml">QComboBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::float-button <db:anchor xml:id="float-button-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The float button of a <db:link xlink:href="qdockwidget.xml">QDockWidget</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::groove <db:anchor xml:id="groove-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The groove of a <db:link xlink:href="qslider.xml">QSlider</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::indicator <db:anchor xml:id="indicator-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The indicator of a <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link>, a <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, a <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, a checkable <db:link xlink:href="qmenu.xml">QMenu</db:link> item or a checkable <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::handle <db:anchor xml:id="handle-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The handle (slider) of a <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link>, a <db:link xlink:href="qsplitter.xml">QSplitter</db:link>, or a <db:link xlink:href="qslider.xml">QSlider</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::icon <db:anchor xml:id="icon-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The icon of a <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link> or a <db:link xlink:href="qmenu.xml">QMenu</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::item <db:anchor xml:id="item-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>An item of a <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link>, a <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>, a <db:link xlink:href="qmenu.xml">QMenu</db:link>, or a <db:link xlink:href="qstatusbar.xml">QStatusBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::left-arrow <db:anchor xml:id="left-arrow-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The left arrow of a <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::left-corner <db:anchor xml:id="left-corner-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The left corner of a <db:link xlink:href="qtabwidget.xml">QTabWidget</db:link>. For example, this control can be used to control position the left corner widget in a <db:link xlink:href="qtabwidget.xml">QTabWidget</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::menu-arrow <db:anchor xml:id="menu-arrow-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The arrow of a <db:link xlink:href="qtoolbutton.xml">QToolButton</db:link> with a menu.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::menu-button <db:anchor xml:id="menu-button-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The menu button of a <db:link xlink:href="qtoolbutton.xml">QToolButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::menu-indicator <db:anchor xml:id="menu-indicator-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The menu indicator of a <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::right-arrow <db:anchor xml:id="right-arrow-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The right arrow of a <db:link xlink:href="qmenu.xml">QMenu</db:link> or a <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::pane <db:anchor xml:id="pane-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The pane (frame) of a <db:link xlink:href="qtabwidget.xml">QTabWidget</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::right-corner <db:anchor xml:id="right-corner-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The right corner of a <db:link xlink:href="qtabwidget.xml">QTabWidget</db:link>. For example, this control can be used to control the position the right corner widget in a <db:link xlink:href="qtabwidget.xml">QTabWidget</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::scroller <db:anchor xml:id="scroller-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The scroller of a <db:link xlink:href="qmenu.xml">QMenu</db:link> or <db:link xlink:href="qtabbar.xml">QTabBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::section <db:anchor xml:id="section-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The section of a <db:link xlink:href="qheaderview.xml">QHeaderView</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::separator <db:anchor xml:id="separator-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The separator of a <db:link xlink:href="qmenu.xml">QMenu</db:link> or in a <db:link xlink:href="qmainwindow.xml">QMainWindow</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::sub-line <db:anchor xml:id="sub-line-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The button to subtract a line of a <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::sub-page <db:anchor xml:id="sub-page-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The region between the handle (slider) and the <db:link xlink:href="stylesheet-reference.xml#sub-line-sub">sub-line</db:link> of a <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::tab <db:anchor xml:id="tab-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The tab of a <db:link xlink:href="qtabbar.xml">QTabBar</db:link> or <db:link xlink:href="qtoolbox.xml">QToolBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::tab-bar <db:anchor xml:id="tab-bar-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The tab bar of a <db:link xlink:href="qtabwidget.xml">QTabWidget</db:link>. This subcontrol exists only to control the position of the <db:link xlink:href="qtabbar.xml">QTabBar</db:link> inside the <db:link xlink:href="qtabwidget.xml">QTabWidget</db:link>. To style the tabs using the <db:link xlink:href="stylesheet-reference.xml#tab-sub">::tab</db:link> subcontrol.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::tear <db:anchor xml:id="tear-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The tear indicator of a <db:link xlink:href="qtabbar.xml">QTabBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::tearoff <db:anchor xml:id="tearoff-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The tear-off indicator of a <db:link xlink:href="qmenu.xml">QMenu</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::text <db:anchor xml:id="text-ps"/>
</db:para>
</db:td>
<db:td>
<db:para>The text of a <db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::title <db:anchor xml:id="title-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The title of a <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link> or a <db:link xlink:href="qdockwidget.xml">QDockWidget</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::up-arrow <db:anchor xml:id="up-arrow-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The up arrow of a <db:link xlink:href="qheaderview.xml">QHeaderView</db:link> (sort indicator), <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link> or a <db:link xlink:href="qspinbox.xml">QSpinBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>::up-button <db:anchor xml:id="up-button-sub"/>
</db:para>
</db:td>
<db:td>
<db:para>The up button of a <db:link xlink:href="qspinbox.xml">QSpinBox</db:link>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>See <db:link xlink:href="stylesheet-examples.xml#customizing-the-qpushbutton-s-menu-indicator-sub-control">Customizing the QPushButton's Menu Indicator Sub-Control</db:link> for an example of how to customize a subcontrol.</db:para>
</db:section>
</db:article>
