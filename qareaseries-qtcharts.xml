<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAreaSeries Class</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qareaseries-qtcharts.xml">QAreaSeries</db:link> class presents data in area charts.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAreaSeries</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtcharts-areaseries.xml" xlink:role="">AreaSeries</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstractseries-qtcharts.xml" xlink:role="class">QAbstractSeries</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>An area series is used to show quantitative data. It is based on a line series, in the way that the area between the boundary lines is emphasized with color. Since the area series is based on the line series, the <db:link xlink:href="qareaseries-qtcharts.xml">QAreaSeries</db:link> constructor needs a <db:link xlink:href="qlineseries-qtcharts.xml">QLineSeries</db:link> instance, which defines the <db:emphasis>upper</db:emphasis> boundary of the area. The area chart is drawn using the bottom of the plot area as the <db:emphasis>lower</db:emphasis> boundary by default. Instead of the bottom of the plot area, the lower boundary can be specified by another line. In that case, <db:link xlink:href="qareaseries-qtcharts.xml">QAreaSeries</db:link> should be initialized with two <db:link xlink:href="qlineseries-qtcharts.xml">QLineSeries</db:link> instances.</db:para>
<db:note>
<db:para>The terms <db:emphasis>upper</db:emphasis> and <db:emphasis>lower</db:emphasis> boundary can be misleading in cases where the value of the lower boundary is greater than that of the upper boundary. The main point is that the area between these two boundary lines will be filled.</db:para>
</db:note>
<db:para>See the <db:link xlink:href="qtcharts-chartsgallery-example.xml">Charts with Widgets Gallery</db:link> to learn how to create a simple area chart.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_areachart.png"/>
</db:imageobject>
</db:mediaobject>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="borderColor-prop">
<db:title>borderColor : QColor</db:title>
<db:para>This property holds the line (pen) color of the series. This is a convenience property for modifying the color of the pen.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">borderColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setBorderColor</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qareaseries-qtcharts.xml#borderColorChanged">borderColorChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pen">QAreaSeries::pen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="color-prop">
<db:title>color : QColor</db:title>
<db:para>This property holds the fill (brush) color of the series. This is a convenience property for modifying the color of the brush.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">color</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setColor</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qareaseries-qtcharts.xml#colorChanged">colorChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#brush">QAreaSeries::brush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="lowerSeries-prop">
<db:title>[read-only] lowerSeries : QLineSeries* const</db:title>
<db:para>This property holds the lower one of the two line series used to define area series boundaries.</db:para>
<db:note>
<db:para>If <db:link xlink:href="qareaseries-qtcharts.xml">QAreaSeries</db:link> was constructed without a lowerSeries, this is null.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qlineseries-qtcharts.xml">QLineSeries</db:link></db:type> *<db:emphasis role="bold">lowerSeries</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="pointLabelsClipping-prop">
<db:title>pointLabelsClipping : bool</db:title>
<db:para>This property holds the clipping for data point labels. True by default. The labels on the edge of the plot area are cut when clipping is enabled.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">pointLabelsClipping</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setPointLabelsClipping</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsClippingChanged">pointLabelsClippingChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>clipping</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsVisible-prop">pointLabelsVisible</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointLabelsColor-prop">
<db:title>pointLabelsColor : QColor</db:title>
<db:para>This property holds the color used for data point labels. By default, the color is the color of the brush defined for labels in the theme.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">pointLabelsColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setPointLabelsColor</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsColorChanged">pointLabelsColorChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsFormat-prop">QAreaSeries::pointLabelsFormat</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointLabelsFont-prop">
<db:title>pointLabelsFont : QFont</db:title>
<db:para>This property holds the font used for data point labels.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> <db:emphasis role="bold">pointLabelsFont</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setPointLabelsFont</db:emphasis>(const <db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> &amp;<db:emphasis>font</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsFontChanged">pointLabelsFontChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> &amp;<db:emphasis>font</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsFormat-prop">QAreaSeries::pointLabelsFormat</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointLabelsFormat-prop">
<db:title>pointLabelsFormat : QString</db:title>
<db:para>This property holds the format used for showing labels with series points.</db:para>
<db:para><db:link xlink:href="qareaseries-qtcharts.xml">QAreaSeries</db:link> supports the following format tags:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para>@xPoint</db:para>
</db:td>
<db:td>
<db:para>The x value of the data point</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>@yPoint</db:para>
</db:td>
<db:td>
<db:para>The y value of the data point</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>For example, the following usage of the format tags would produce labels that have the data point (x, y) shown inside brackets separated by a comma:</db:para>
<db:programlisting language="cpp">series-&gt;setPointLabelsFormat(&quot;(@xPoint, @yPoint)&quot;);
</db:programlisting>
<db:para>By default, the label format is set to <db:code>@xPoint, @yPoint</db:code>. The labels are shown on the plot area, whereas labels on the edge of the plot area are cut. If the points are close to each other, the labels may overlap.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">pointLabelsFormat</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setPointLabelsFormat</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>format</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsFormatChanged">pointLabelsFormatChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>format</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsVisible-prop">QAreaSeries::pointLabelsVisible</db:link></db:member>
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsFont-prop">QAreaSeries::pointLabelsFont</db:link></db:member>
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsColor-prop">QAreaSeries::pointLabelsColor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointLabelsVisible-prop">
<db:title>pointLabelsVisible : bool</db:title>
<db:para>This property holds the visibility of data point labels. False by default.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">pointLabelsVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setPointLabelsVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsVisibilityChanged">pointLabelsVisibilityChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsFormat-prop">QAreaSeries::pointLabelsFormat</db:link></db:member>
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsClipping-prop">QAreaSeries::pointLabelsClipping</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="upperSeries-prop">
<db:title>[read-only] upperSeries : QLineSeries* const</db:title>
<db:para>This property holds the upper one of the two line series used to define area series boundaries.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qlineseries-qtcharts.xml">QLineSeries</db:link></db:type> *<db:emphasis role="bold">upperSeries</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QAreaSeries">
<db:title>[explicit] QAreaSeries::QAreaSeries(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs an area series object without an upper or a lower series with the <db:code role="parameter">parent</db:code> object.</db:para>
</db:section>
<db:section xml:id="QAreaSeries-1">
<db:title>[explicit] QAreaSeries::QAreaSeries(QLineSeries *<db:emphasis>upperSeries</db:emphasis>, QLineSeries *<db:emphasis>lowerSeries</db:emphasis> = nullptr)</db:title>
<db:para>Constructs an area series object that will be spanned between an <db:code role="parameter">upperSeries</db:code> line and a <db:code role="parameter">lowerSeries</db:code> line. If no <db:code role="parameter">lowerSeries</db:code> is passed to the constructor, the x-axis is used as the lower bound instead.</db:para>
<db:para>The <db:link xlink:href="qareaseries-qtcharts.xml">QAreaSeries</db:link> does not own the upper or lower series, but the ownership stays with the caller. When the series object is added to <db:link xlink:href="qchartview-qtcharts.xml">QChartView</db:link> or <db:link xlink:href="qchart-qtcharts.xml">QChart</db:link>, the instance ownership is transferred.</db:para>
</db:section>
<db:section xml:id="dtor.QAreaSeries">
<db:title>[virtual noexcept] QAreaSeries::~QAreaSeries()</db:title>
<db:para>Destroys the object.</db:para>
</db:section>
<db:section xml:id="borderColorChanged">
<db:title>void QAreaSeries::borderColorChanged(QColor <db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the line (pen) color changes to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qareaseries-qtcharts.xml#borderColor-prop">borderColor</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="brush">
<db:title>QBrush QAreaSeries::brush() const</db:title>
<db:para>Returns the brush used to draw the line for this series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#setBrush">setBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clicked">
<db:title>void QAreaSeries::clicked(const QPointF &amp;<db:emphasis>point</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user triggers a press on <db:code role="parameter">point</db:code> by clicking it in an area chart.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pressed">pressed</db:link></db:member>
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#released">released</db:link></db:member>
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#doubleClicked">doubleClicked</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="colorChanged">
<db:title>void QAreaSeries::colorChanged(QColor <db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the fill (brush) color changes to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qareaseries-qtcharts.xml#color-prop">color</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="doubleClicked">
<db:title>void QAreaSeries::doubleClicked(const QPointF &amp;<db:emphasis>point</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user triggers the first press in an area chart by doubleclicking <db:code role="parameter">point</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pressed">pressed</db:link></db:member>
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#released">released</db:link></db:member>
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#clicked">clicked</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hovered">
<db:title>void QAreaSeries::hovered(const QPointF &amp;<db:emphasis>point</db:emphasis>, bool <db:emphasis>state</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user hovers the mouse cursor over a series or moves it away from the series. <db:code role="parameter">point</db:code> shows the origin (coordinate) of the hover event. <db:code role="parameter">state</db:code> is <db:code>true</db:code> when the cursor hovers over the series and turns <db:emphasis>false</db:emphasis> when it moves away from the series.</db:para>
</db:section>
<db:section xml:id="pen">
<db:title>QPen QAreaSeries::pen() const</db:title>
<db:para>Returns the pen used to draw the line for this series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#setPen">setPen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pointLabelsClippingChanged">
<db:title>void QAreaSeries::pointLabelsClippingChanged(bool <db:emphasis>clipping</db:emphasis>)</db:title>
<db:para>This signal is emitted when the clipping of the data point labels changes to <db:code role="parameter">clipping</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsClipping-prop">pointLabelsClipping</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="pointLabelsColorChanged">
<db:title>void QAreaSeries::pointLabelsColorChanged(const QColor &amp;<db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the color used for data point labels changes to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsColor-prop">pointLabelsColor</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="pointLabelsFontChanged">
<db:title>void QAreaSeries::pointLabelsFontChanged(const QFont &amp;<db:emphasis>font</db:emphasis>)</db:title>
<db:para>This signal is emitted when the font used for data point labels changes to <db:code role="parameter">font</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsFont-prop">pointLabelsFont</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="pointLabelsFormatChanged">
<db:title>void QAreaSeries::pointLabelsFormatChanged(const QString &amp;<db:emphasis>format</db:emphasis>)</db:title>
<db:para>This signal is emitted when the <db:code role="parameter">format</db:code> of data point labels is changed.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsFormat-prop">pointLabelsFormat</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="pointLabelsVisibilityChanged">
<db:title>void QAreaSeries::pointLabelsVisibilityChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:para>This signal is emitted when the visibility of the data point labels changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qareaseries-qtcharts.xml#pointLabelsVisible-prop">pointLabelsVisible</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="pointsVisible">
<db:title>bool QAreaSeries::pointsVisible() const</db:title>
<db:para>Returns whether the points are drawn for this series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#setPointsVisible">setPointsVisible</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pressed">
<db:title>void QAreaSeries::pressed(const QPointF &amp;<db:emphasis>point</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user presses the point specified by <db:code role="parameter">point</db:code> in an area chart.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#clicked">clicked</db:link></db:member>
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#released">released</db:link></db:member>
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#doubleClicked">doubleClicked</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="released">
<db:title>void QAreaSeries::released(const QPointF &amp;<db:emphasis>point</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user releases a press that was triggered on <db:code role="parameter">point</db:code> in an area chart.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pressed">pressed</db:link></db:member>
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#clicked">clicked</db:link></db:member>
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#doubleClicked">doubleClicked</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBrush">
<db:title>void QAreaSeries::setBrush(const QBrush &amp;<db:emphasis>brush</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">brush</db:code> used for filling the area.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#brush">brush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLowerSeries">
<db:title>void QAreaSeries::setLowerSeries(QLineSeries *<db:emphasis>series</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">series</db:code> that is to be used as the area chart lower series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#lowerSeries-prop">lowerSeries</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPen">
<db:title>void QAreaSeries::setPen(const QPen &amp;<db:emphasis>pen</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">pen</db:code> used for drawing the area outline.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pen">pen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPointsVisible">
<db:title>void QAreaSeries::setPointsVisible(bool <db:emphasis>visible</db:emphasis> = true)</db:title>
<db:para>Determines whether data points are <db:code role="parameter">visible</db:code> and should be drawn on the line.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#pointsVisible">pointsVisible</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setUpperSeries">
<db:title>void QAreaSeries::setUpperSeries(QLineSeries *<db:emphasis>series</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">series</db:code> that is to be used as the area chart upper series. If the upper series is null, the area chart is not drawn, even if it has a lower series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qareaseries-qtcharts.xml#upperSeries-prop">upperSeries</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="type">
<db:title>[override virtual] QAbstractSeries::SeriesType QAreaSeries::type() const</db:title>
<db:para>Reimplements an access function for property: <db:link xlink:href="qabstractseries-qtcharts.xml#type-prop" role="property">QAbstractSeries::type</db:link>.</db:para>
<db:para>Returns <db:link xlink:href="qabstractseries-qtcharts.xml#SeriesType-enum">QAbstractSeries::SeriesTypeArea</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
