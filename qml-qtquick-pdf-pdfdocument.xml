<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>PdfDocument QML Type</db:title>
<db:productname>QtPdf</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Pdf Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A representation of a PDF document.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Pdf</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>PdfDocument is part of <db:simplelist><db:member>pdf</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-pdf-pdfdocument.xml">PdfDocument</db:link> provides access to PDF document meta-information. It is not necessary for rendering, as it is enough to use an <db:link xlink:href="qml-qtquick-image.xml">Image</db:link> with source set to the URL of the PDF.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="author-prop">
<db:title>author : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>author</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the name of the person who created the document.</db:para>
</db:section>
<db:section xml:id="creationDate-prop">
<db:title>creationDate : date</db:title>
<db:fieldsynopsis>
<db:type>date</db:type>
<db:varname>creationDate</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the date and time the document was created.</db:para>
</db:section>
<db:section xml:id="creator-prop">
<db:title>creator : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>creator</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>If the document was converted to PDF from another format, this property holds the name of the software that created the original document.</db:para>
</db:section>
<db:section xml:id="error-prop">
<db:title>error : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>error</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a translated string representation of the current error, if any.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-pdf-pdfdocument.xml#status-prop">status</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="keywords-prop">
<db:title>keywords : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>keywords</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the keywords associated with the document.</db:para>
</db:section>
<db:section xml:id="maxPageHeight-prop">
<db:title>maxPageHeight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>maxPageHeight</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the height of the tallest page in the document, in points.</db:para>
</db:section>
<db:section xml:id="maxPageWidth-prop">
<db:title>maxPageWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>maxPageWidth</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the width of the widest page in the document, in points.</db:para>
</db:section>
<db:section xml:id="modificationDate-prop">
<db:title>modificationDate : date</db:title>
<db:fieldsynopsis>
<db:type>date</db:type>
<db:varname>modificationDate</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the date and time the document was most recently modified.</db:para>
</db:section>
<db:section xml:id="pageCount-prop">
<db:title>pageCount : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>pageCount</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the number of pages the PDF contains.</db:para>
</db:section>
<db:section xml:id="password-prop">
<db:title>password : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>password</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the document password. If the <db:link xlink:href="qml-qtquick-pdf-pdfdocument.xml#passwordRequired-signal">passwordRequired</db:link>() signal is emitted, the UI should prompt the user and then set this property so that document opening can continue.</db:para>
</db:section>
<db:section xml:id="producer-prop">
<db:title>producer : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>producer</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>If the document was converted to PDF from another format, this property holds the name of the software that converted it to PDF.</db:para>
</db:section>
<db:section xml:id="source-prop">
<db:title>source : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>source</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a URL pointing to the PDF file to be loaded.</db:para>
<db:note>
<db:para>At this time, only local filesystem URLs are supported.</db:para>
</db:note>
</db:section>
<db:section xml:id="status-prop">
<db:title>status : enum</db:title>
<db:fieldsynopsis>
<db:type>enum</db:type>
<db:varname>status</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property tells the current status of the document. The possible values are:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>PdfDocument.Null</db:para>
</db:td>
<db:td>
<db:para>The initial status after the document has been created or after it has been closed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>PdfDocument.Loading</db:para>
</db:td>
<db:td>
<db:para>The status after load() has been called and before the document is fully loaded.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>PdfDocument.Ready</db:para>
</db:td>
<db:td>
<db:para>The status when the document is fully loaded and its data can be accessed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>PdfDocument.Unloading</db:para>
</db:td>
<db:td>
<db:para>The status after close() has been called on an open document. At this point the document is still valid and all its data can be accessed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>PdfDocument.Error</db:para>
</db:td>
<db:td>
<db:para>The status after Loading, if loading has failed.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="subject-prop">
<db:title>subject : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>subject</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the subject of the document.</db:para>
</db:section>
<db:section xml:id="title-prop">
<db:title>title : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>title</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the document's title. A typical viewer UI can bind this to the <db:code>Window.title</db:code> property.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="passwordRequired-signal">
<db:title>passwordRequired()</db:title>
<db:para>This signal is emitted when the PDF requires a password in order to open. The UI in a typical PDF viewer should prompt the user for the password and then set the password property when the user has provided it.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPasswordRequired</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="pagePointSize-method">
<db:title>size pagePointSize(int <db:emphasis>page</db:emphasis>)</db:title>
<db:para>Returns the size of the given <db:code role="parameter">page</db:code> in points.</db:para>
</db:section>
</db:section>
</db:article>
