<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Q3DCamera Class</db:title>
<db:productname>QtDataVis3D</db:productname>
<db:edition>Qt Data Visualization | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Data Visualization Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Representation of a camera in 3D space.</db:para>
<db:para>This class was introduced in QtDataVisualization 1.0.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Q3DCamera</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtDataVisualization 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS DataVisualization)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::DataVisualization)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += datavisualization</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qtdatavisualization-camera3d.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="q3dobject.xml" xlink:role="class">Q3DObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link> represents a basic orbit around centerpoint 3D camera that is used when rendering the data visualization. The class offers simple methods for rotating the camera around the origin and setting zoom level.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="CameraPreset-enum">
<db:title>enum Q3DCamera::CameraPreset</db:title>
<db:enumsynopsis>
<db:enumname>CameraPreset</db:enumname>
<db:enumitem>
<db:enumidentifier>CameraPresetNone</db:enumidentifier>
<db:enumvalue>-1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetFrontLow</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetFront</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetFrontHigh</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetLeftLow</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetLeft</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetLeftHigh</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetRightLow</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetRight</db:enumidentifier>
<db:enumvalue>7</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetRightHigh</db:enumidentifier>
<db:enumvalue>8</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetBehindLow</db:enumidentifier>
<db:enumvalue>9</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetBehind</db:enumidentifier>
<db:enumvalue>10</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetBehindHigh</db:enumidentifier>
<db:enumvalue>11</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetIsometricLeft</db:enumidentifier>
<db:enumvalue>12</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetIsometricLeftHigh</db:enumidentifier>
<db:enumvalue>13</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetIsometricRight</db:enumidentifier>
<db:enumvalue>14</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetIsometricRightHigh</db:enumidentifier>
<db:enumvalue>15</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetDirectlyAbove</db:enumidentifier>
<db:enumvalue>16</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetDirectlyAboveCW45</db:enumidentifier>
<db:enumvalue>17</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetDirectlyAboveCCW45</db:enumidentifier>
<db:enumvalue>18</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetFrontBelow</db:enumidentifier>
<db:enumvalue>19</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetLeftBelow</db:enumidentifier>
<db:enumvalue>20</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetRightBelow</db:enumidentifier>
<db:enumvalue>21</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetBehindBelow</db:enumidentifier>
<db:enumvalue>22</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPresetDirectlyBelow</db:enumidentifier>
<db:enumvalue>23</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>Predefined positions for camera.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetNone</db:code></db:para>
</db:td>
<db:td><db:code>-1</db:code></db:td>
<db:td>
<db:para>Used to indicate a preset has not been set, or the scene has been rotated freely.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetFrontLow</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetFront</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetFrontHigh</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetLeftLow</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetLeft</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetLeftHigh</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetRightLow</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetRight</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetRightHigh</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetBehindLow</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetBehind</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetBehindHigh</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetIsometricLeft</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetIsometricLeftHigh</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetIsometricRight</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetIsometricRightHigh</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetDirectlyAbove</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetDirectlyAboveCW45</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetDirectlyAboveCCW45</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetFrontBelow</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>In <db:link xlink:href="q3dbars.xml">Q3DBars</db:link> from CameraPresetFrontBelow onward these only work for graphs including negative values. They act as Preset...Low for positive-only values.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetLeftBelow</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetRightBelow</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetBehindBelow</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dcamera.xml">Q3DCamera</db:link></db:emphasis>::CameraPresetDirectlyBelow</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>Acts as CameraPresetFrontLow for positive-only bars.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="cameraPreset-prop">
<db:title>cameraPreset : CameraPreset</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>CameraPreset</db:type>
<db:varname>cameraPreset</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">cameraPreset</db:synopsisinfo>
<db:synopsisinfo role="setter">setCameraPreset</db:synopsisinfo>
<db:synopsisinfo role="notifier">cameraPresetChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the currently active camera preset.</db:para>
<db:para>If no <db:link xlink:href="q3dcamera.xml#CameraPreset-enum">CameraPreset</db:link> value is set, <db:link xlink:href="q3dcamera.xml#CameraPreset-enum">CameraPresetNone</db:link> is used by default.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="q3dcamera.xml#CameraPreset-enum">Q3DCamera::CameraPreset</db:link></db:type> <db:emphasis role="bold">cameraPreset</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setCameraPreset</db:emphasis>(<db:type><db:link xlink:href="q3dcamera.xml#CameraPreset-enum">Q3DCamera::CameraPreset</db:link></db:type> <db:emphasis>preset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">cameraPresetChanged</db:emphasis>(<db:type><db:link xlink:href="q3dcamera.xml#CameraPreset-enum">Q3DCamera::CameraPreset</db:link></db:type> <db:emphasis>preset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="maxZoomLevel-prop">
<db:title>maxZoomLevel : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>maxZoomLevel</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">maxZoomLevel</db:synopsisinfo>
<db:synopsisinfo role="setter">setMaxZoomLevel</db:synopsisinfo>
<db:synopsisinfo role="notifier">maxZoomLevelChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the maximum allowed camera zoom level.</db:para>
<db:para>If the maximum level is set to a new value that is lower than the existing minimum level, the minimum level is adjusted to the new maximum as well. If the current <db:link xlink:href="q3dcamera.xml#zoomLevel-prop">zoomLevel</db:link> is outside the new bounds, it is adjusted as well. Defaults to <db:code>500.0f</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">maxZoomLevel</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMaxZoomLevel</db:emphasis>(<db:type>float</db:type> <db:emphasis>zoomLevel</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">maxZoomLevelChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>zoomLevel</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="q3dcamera.xml#zoomLevel-prop">zoomLevel</db:link></db:member>
<db:member><db:link xlink:href="q3dcamera.xml#minZoomLevel-prop">minZoomLevel</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="minZoomLevel-prop">
<db:title>minZoomLevel : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>minZoomLevel</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">minZoomLevel</db:synopsisinfo>
<db:synopsisinfo role="setter">setMinZoomLevel</db:synopsisinfo>
<db:synopsisinfo role="notifier">minZoomLevelChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the minimum allowed camera zoom level.</db:para>
<db:para>If the minimum level is set to a new value that is higher than the existing maximum level, the maximum level is adjusted to the new minimum as well. If the current <db:link xlink:href="q3dcamera.xml#zoomLevel-prop">zoomLevel</db:link> is outside the new bounds, it is adjusted as well. The minZoomLevel cannot be set below <db:code>1.0f</db:code>. Defaults to <db:code>10.0f</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">minZoomLevel</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinZoomLevel</db:emphasis>(<db:type>float</db:type> <db:emphasis>zoomLevel</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">minZoomLevelChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>zoomLevel</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="q3dcamera.xml#zoomLevel-prop">zoomLevel</db:link></db:member>
<db:member><db:link xlink:href="q3dcamera.xml#maxZoomLevel-prop">maxZoomLevel</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="target-prop">
<db:title>[since QtDataVisualization 1.2] target : QVector3D</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVector3D</db:type>
<db:varname>target</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">target</db:synopsisinfo>
<db:synopsisinfo role="setter">setTarget</db:synopsisinfo>
<db:synopsisinfo role="notifier">targetChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the camera target as a vector or vertex in the 3D space.</db:para>
<db:para>Defaults to <db:code>QVector3D(0.0, 0.0, 0.0)</db:code>.</db:para>
<db:para>Valid coordinate values are between <db:code>-1.0...1.0</db:code>, where the edge values indicate the edges of the corresponding axis range. Any values outside this range are clamped to the edge.</db:para>
<db:note>
<db:para>For bar graphs, the Y-coordinate is ignored and camera always targets a point on the horizontal background.</db:para>
</db:note>
<db:para>This property was introduced in QtDataVisualization 1.2.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> <db:emphasis role="bold">target</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTarget</db:emphasis>(const <db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> &amp;<db:emphasis>target</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">targetChanged</db:emphasis>(const <db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> &amp;<db:emphasis>target</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="wrapXRotation-prop">
<db:title>wrapXRotation : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>wrapXRotation</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">wrapXRotation</db:synopsisinfo>
<db:synopsisinfo role="setter">setWrapXRotation</db:synopsisinfo>
<db:synopsisinfo role="notifier">wrapXRotationChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the behavior of the minimum and maximum limits in the X-rotation.</db:para>
<db:para>If set to <db:code>true</db:code>, the X-rotation of the camera is wrapped from minimum to maximum and from maximum to minimum. If set to <db:code>false</db:code>, the X-rotation of the camera is limited to the sector determined by the minimum and maximum values. Set to <db:code>true</db:code> by default.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">wrapXRotation</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setWrapXRotation</db:emphasis>(<db:type>bool</db:type> <db:emphasis>isEnabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">wrapXRotationChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>isEnabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="wrapYRotation-prop">
<db:title>wrapYRotation : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>wrapYRotation</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">wrapYRotation</db:synopsisinfo>
<db:synopsisinfo role="setter">setWrapYRotation</db:synopsisinfo>
<db:synopsisinfo role="notifier">wrapYRotationChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the behavior of the minimum and maximum limits in the Y-rotation.</db:para>
<db:para>If <db:code>true</db:code>, the Y-rotation of the camera is wrapped from minimum to maximum and from maximum to minimum. If <db:code>false</db:code>, the Y-rotation of the camera is limited to the sector determined by the minimum and maximum values. Set to <db:code>true</db:code> by default.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">wrapYRotation</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setWrapYRotation</db:emphasis>(<db:type>bool</db:type> <db:emphasis>isEnabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">wrapYRotationChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>isEnabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="xRotation-prop">
<db:title>xRotation : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>xRotation</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">xRotation</db:synopsisinfo>
<db:synopsisinfo role="setter">setXRotation</db:synopsisinfo>
<db:synopsisinfo role="notifier">xRotationChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the X-rotation angle of the camera around the target point in degrees.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">xRotation</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setXRotation</db:emphasis>(<db:type>float</db:type> <db:emphasis>rotation</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">xRotationChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>rotation</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="yRotation-prop">
<db:title>yRotation : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>yRotation</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">yRotation</db:synopsisinfo>
<db:synopsisinfo role="setter">setYRotation</db:synopsisinfo>
<db:synopsisinfo role="notifier">yRotationChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the Y-rotation angle of the camera around the target point in degrees.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">yRotation</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setYRotation</db:emphasis>(<db:type>float</db:type> <db:emphasis>rotation</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">yRotationChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>rotation</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="zoomLevel-prop">
<db:title>zoomLevel : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>zoomLevel</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">zoomLevel</db:synopsisinfo>
<db:synopsisinfo role="setter">setZoomLevel</db:synopsisinfo>
<db:synopsisinfo role="notifier">zoomLevelChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the camera zoom level in percentage.</db:para>
<db:para>The default value of <db:code>100.0f</db:code> means there is no zoom in or out set in the camera. The value is limited by the <db:link xlink:href="q3dcamera.xml#minZoomLevel-prop">minZoomLevel</db:link> and <db:link xlink:href="q3dcamera.xml#maxZoomLevel-prop">maxZoomLevel</db:link> properties.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">zoomLevel</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setZoomLevel</db:emphasis>(<db:type>float</db:type> <db:emphasis>zoomLevel</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">zoomLevelChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>zoomLevel</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="q3dcamera.xml#minZoomLevel-prop">minZoomLevel</db:link></db:member>
<db:member><db:link xlink:href="q3dcamera.xml#maxZoomLevel-prop">maxZoomLevel</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="Q3DCamera">
<db:title>[explicit] Q3DCamera::Q3DCamera(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>Q3DCamera</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">Q3DCamera(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new 3D camera with position set to origin, up direction facing towards the Y-axis and looking at origin by default. An optional <db:code role="parameter">parent</db:code> parameter can be given and is then passed to <db:link xlink:href="qobject.xml">QObject</db:link> constructor.</db:para>
</db:section>
<db:section xml:id="dtor.Q3DCamera">
<db:title>[virtual] Q3DCamera::~Q3DCamera()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~Q3DCamera</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~Q3DCamera()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the camera object.</db:para>
</db:section>
<db:section xml:id="copyValuesFrom">
<db:title>[override virtual] void Q3DCamera::copyValuesFrom(const Q3DObject &amp;<db:emphasis>source</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>copyValuesFrom</db:methodname>
<db:methodparam>
<db:type>const Q3DObject &amp;</db:type>
<db:parameter>source</db:parameter>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void copyValuesFrom(const Q3DObject &amp;source) override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="q3dobject.xml#copyValuesFrom" role="function">Q3DObject::copyValuesFrom(const Q3DObject &amp;source)</db:link>.</db:para>
<db:para>Copies the 3D camera's properties from the given source camera. Values are copied from the <db:code role="parameter">source</db:code> to this object.</db:para>
</db:section>
<db:section xml:id="setCameraPosition">
<db:title>void Q3DCamera::setCameraPosition(float <db:emphasis>horizontal</db:emphasis>, float <db:emphasis>vertical</db:emphasis>, float <db:emphasis>zoom</db:emphasis> = 100.0f)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setCameraPosition</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>horizontal</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>vertical</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>zoom</db:parameter>
<db:initializer>100.0f</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setCameraPosition(float horizontal, float vertical, float zoom)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Utility function that sets the camera rotations and distance.<db:code role="parameter">horizontal</db:code> and <db:code role="parameter">vertical</db:code> define the camera rotations to be used. Optional <db:code role="parameter">zoom</db:code> parameter can be given to set the zoom percentage of the camera within the bounds defined by <db:link xlink:href="q3dcamera.xml#minZoomLevel-prop">minZoomLevel</db:link> and <db:link xlink:href="q3dcamera.xml#maxZoomLevel-prop">maxZoomLevel</db:link> properties.</db:para>
</db:section>
</db:section>
</db:article>
