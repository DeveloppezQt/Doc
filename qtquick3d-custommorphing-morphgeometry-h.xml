<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick 3D - Custom Morphing Animation</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates writing C++ custom geometry with a morph target.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">// Copyright (C) 2021 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR BSD-3-Clause

#ifndef MORPHGEOMETRY_H
#define MORPHGEOMETRY_H

#include &amp;lt;QtQuick3D/qquick3d.h&amp;gt;
#include &amp;lt;QtQuick3D/qquick3dgeometry.h&amp;gt;

#include &amp;lt;QVector3D&amp;gt;
#include &amp;lt;QtCore/QList&amp;gt;

class MorphGeometry : public QQuick3DGeometry
{
    Q_OBJECT
    QML_NAMED_ELEMENT(MorphGeometry)
    Q_PROPERTY(int gridSize READ gridSize WRITE setGridSize NOTIFY gridSizeChanged)

public:
    MorphGeometry(QQuick3DObject *parent = nullptr);

    int gridSize() { return m_gridSize; }
    void setGridSize(int gridSize);

signals:
    void gridSizeChanged();

private:
    void calculateGeometry();
    void updateData();

    QList&amp;lt;QVector3D&amp;gt; m_positions;
    QList&amp;lt;QVector3D&amp;gt; m_normals;

    QList&amp;lt;QVector3D&amp;gt; m_targetPositions;
    QList&amp;lt;QVector3D&amp;gt; m_targetNormals;

    QList&amp;lt;quint32&amp;gt; m_indexes;

    QByteArray m_vertexBuffer;
    QByteArray m_indexBuffer;

    int m_gridSize = 50;
    QVector3D boundsMin;
    QVector3D boundsMax;
};

#endif // MORPHGEOMETRY_H

</db:programlisting>
</db:article>
