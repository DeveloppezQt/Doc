<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>qt_extract_metatypes</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Extracts metatypes from a Qt target and generates an associated metatypes.json file.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Extracts metatypes from a Qt target and generates an associated metatypes.json file.</db:para>
<db:para>This command was introduced in Qt 6.0.</db:para>
<db:note>
<db:para>This command is in technology preview and may change in future releases.</db:para>
</db:note>
<db:section xml:id="synopsis">
<db:title>Synopsis</db:title>
<db:programlisting language="cpp" role="bad">qt_extract_metatypes(target
    [MANUAL_MOC_JSON_FILES json_files...]
    [OUTPUT_FILES variable_name]
)
</db:programlisting>
<db:para>If <db:link xlink:href="cmake-qt5-and-qt6-compatibility.xml#versionless-commands">versionless commands</db:link> are disabled, use qt6_extract_metatypes() instead. It supports the same set of arguments as this command.</db:para>
</db:section>
<db:section xml:id="description">
<db:title>Description</db:title>
<db:para>Certain operations rely on metatype information being generated and collected on targets. This is typically handled internally by Qt commands, but for scenarios where this is not the case, qt_extract_metatypes() can be called to force the collection of this information for a specific target.</db:para>
<db:para>Metatype information is generated for a target's source files in one of the following ways:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Automatically by AUTOMOC. The qt_extract_metatypes() command detects when AUTOMOC is enabled on the target and will automatically extract the information it needs.</db:para>
</db:listitem>
<db:listitem>
<db:para>Manually by invoking moc with the --output-json option. The project is responsible for keeping track of all the JSON files generated using this method and passing them to qt_extract_metatypes() with the MANUAL_MOC_JSON_FILES option.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>qt_extract_metatypes() produces a target-specific metatypes JSON file which collects all the metatype details from the AUTOMOC and manual moc inputs. It does this by calling moc with the --collect-json option. If you need to know where to find the resultant metatypes JSON file (for example, to pass it to another command or to install it), use the OUTPUT_FILES option to provide the name of a variable in which to store its absolute path.</db:para>
</db:section>
</db:article>
