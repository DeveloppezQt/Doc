<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAbstractUriResolver Class</db:title>
<db:productname>QtXmlPatterns</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt XML Patterns Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qabstracturiresolver.xml">QAbstractUriResolver</db:link> class is a callback interface for resolving Uniform Resource Identifiers. A Uniform Resource Identifier (URI) is a string that uniquely identifies a resource. URIs are versatile global identifiers. It is often useful to transform a URI that identifies something logical into a URI that locates something physical (a URL), or to simply map a URI to a different URI. <db:link xlink:href="qabstracturiresolver.xml#resolve">QAbstractUriResolver::resolve</db:link>() provides this functionality.</db:para>
<db:para>This class was introduced in Qt 4.4.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAbstractUriResolver</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += xmlpatterns</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QAbstractUriResolver is part of <db:simplelist><db:member>xml-tools</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>For example, one could write a <db:link xlink:href="qabstracturiresolver.xml">QAbstractUriResolver</db:link> subclass that rewrites library ISBN number URIs as book title URLs, e.g., <db:emphasis>urn:isbn:0-345-33973-8</db:emphasis> would be rewritten as <db:emphasis>file:///books/returnOfTheKing.doc</db:emphasis>. Or a <db:link xlink:href="qabstracturiresolver.xml">QAbstractUriResolver</db:link> subclass could be written for a web browser to let the web browser protect the user's private files by mapping incoming requests for them to null URIs.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="http://en.wikipedia.org/wiki/Uniform_Resource_Identifier">http://en.wikipedia.org/wiki/Uniform_Resource_Identifier</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QAbstractUriResolver">
<db:title>QAbstractUriResolver::QAbstractUriResolver(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a <db:link xlink:href="qabstracturiresolver.xml">QAbstractUriResolver</db:link> with the specified <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QAbstractUriResolver">
<db:title>[virtual noexcept] QAbstractUriResolver::~QAbstractUriResolver()</db:title>
<db:para>Destructor.</db:para>
</db:section>
<db:section xml:id="resolve">
<db:title>[pure virtual] QUrl QAbstractUriResolver::resolve(const QUrl &amp;<db:emphasis>relative</db:emphasis>, const QUrl &amp;<db:emphasis>baseURI</db:emphasis>) const</db:title>
<db:para>Returns the <db:code role="parameter">relative</db:code> URI resolved using the <db:code role="parameter">baseURI</db:code>.</db:para>
<db:para>The caller guarantees that both <db:code role="parameter">relative</db:code> and <db:code role="parameter">baseURI</db:code> are valid, and that <db:code role="parameter">baseURI</db:code> is absolute. <db:code role="parameter">relative</db:code> can be relative, absolute, or empty.</db:para>
<db:para>The returned <db:link xlink:href="qurl.xml">QUrl</db:link> can be a default constructed <db:link xlink:href="qurl.xml">QUrl</db:link>. If it is not a default constructed <db:link xlink:href="qurl.xml">QUrl</db:link>, it will be absolute and valid. If a default constructed <db:link xlink:href="qurl.xml">QUrl</db:link> is returned, it means the <db:code role="parameter">relative</db:code> URI was not accepted to be resolved.</db:para>
<db:para>If the reimplemented resolve() function decides it has nothing to do about resolving the <db:code role="parameter">relative</db:code> URI, it should simply return the <db:code role="parameter">relative</db:code> URI resolved against the <db:code role="parameter">baseURI</db:code>, i.e.:</db:para>
<db:programlisting language="cpp">return baseURI.resolved(relative);
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qurl.xml#isRelative">QUrl::isRelative</db:link>()</db:member>
<db:member><db:link xlink:href="qurl.xml#isValid">QUrl::isValid</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
