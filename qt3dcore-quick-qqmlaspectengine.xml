<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QQmlAspectEngine Class</db:title>
<db:subtitle>Qt3DCore::Quick::QQmlAspectEngine</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qt3dcore-quick-qqmlaspectengine.xml">QQmlAspectEngine</db:link> provides an environment for the <db:link xlink:href="qt3dcore-qaspectengine.xml">QAspectEngine</db:link> and a method for instantiating QML components.</db:para>
<db:para>This class was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Qt3DQuick/QQmlAspectEngine</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3dcore)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3dcore)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dcore</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Status-enum">
<db:title>enum QQmlAspectEngine::Status</db:title>
<db:enumsynopsis>
<db:enumname>Status</db:enumname>
<db:enumitem>
<db:enumidentifier>Null</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Ready</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Loading</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Error</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>The status of the engine.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-quick.xml">Quick</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-quick-qqmlaspectengine.xml">QQmlAspectEngine</db:link></db:emphasis>::Null</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-quick.xml">Quick</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-quick-qqmlaspectengine.xml">QQmlAspectEngine</db:link></db:emphasis>::Ready</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-quick.xml">Quick</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-quick-qqmlaspectengine.xml">QQmlAspectEngine</db:link></db:emphasis>::Loading</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-quick.xml">Quick</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-quick-qqmlaspectengine.xml">QQmlAspectEngine</db:link></db:emphasis>::Error</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QQmlAspectEngine">
<db:title>[explicit] QQmlAspectEngine::QQmlAspectEngine(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QQmlAspectEngine</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QQmlAspectEngine(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qt3dcore-quick-qqmlaspectengine.xml">QQmlAspectEngine</db:link> with <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="aspectEngine">
<db:title>Qt3DCore::QAspectEngine *QQmlAspectEngine::aspectEngine() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>Qt3DCore::QAspectEngine *</db:type>
<db:methodname>aspectEngine</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">Qt3DCore::QAspectEngine * aspectEngine() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the aspectEngine.</db:para>
</db:section>
<db:section xml:id="qmlEngine">
<db:title>QQmlEngine *QQmlAspectEngine::qmlEngine() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QQmlEngine *</db:type>
<db:methodname>qmlEngine</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QQmlEngine * qmlEngine() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the engine.</db:para>
</db:section>
<db:section xml:id="sceneCreated">
<db:title>void QQmlAspectEngine::sceneCreated(QObject *<db:emphasis>rootObject</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>sceneCreated</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>rootObject</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void sceneCreated(QObject *rootObject)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted with <db:code role="parameter">rootObject</db:code> when the scene has been instantiated. This provides a chance to manipulate the scene before passing it over to the aspect engine. Useful for convenience window classes to set up cameras and surfaces on the framegraph and event sources for the input aspect etc.</db:para>
</db:section>
<db:section xml:id="setSource">
<db:title>void QQmlAspectEngine::setSource(const QUrl &amp;<db:emphasis>source</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setSource</db:methodname>
<db:methodparam>
<db:type>const QUrl &amp;</db:type>
<db:parameter>source</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setSource(const QUrl &amp;source)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets <db:code role="parameter">source</db:code> as a source for the QML component to be created.</db:para>
</db:section>
<db:section xml:id="status">
<db:title>Qt3DCore::Quick::QQmlAspectEngine::Status QQmlAspectEngine::status() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>Qt3DCore::Quick::QQmlAspectEngine::Status</db:type>
<db:methodname>status</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">Qt3DCore::Quick::QQmlAspectEngine::Status status() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the status.</db:para>
</db:section>
<db:section xml:id="statusChanged">
<db:title>void QQmlAspectEngine::statusChanged(Qt3DCore::Quick::QQmlAspectEngine::Status <db:emphasis>status</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>statusChanged</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::Quick::QQmlAspectEngine::Status</db:type>
<db:parameter>status</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void statusChanged(Qt3DCore::Quick::QQmlAspectEngine::Status status)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted with <db:code role="parameter">status</db:code> when the status of the engine changes.</db:para>
</db:section>
</db:section>
</db:article>
