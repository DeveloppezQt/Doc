<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QNetworkCacheMetaData Class</db:title>
<db:productname>QtNetwork</db:productname>
<db:titleabbrev>Qt Network Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qnetworkcachemetadata.xml">QNetworkCacheMetaData</db:link> class provides cache information.</db:para>
<db:para>This class was introduced in Qt 4.5.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QNetworkCacheMetaData</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QNetworkCacheMetaData is part of <db:simplelist><db:member>shared</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qnetworkcachemetadata.xml">QNetworkCacheMetaData</db:link> provides information about a cache file including the url, when it was last modified, when the cache file was created, headers for file and if the file should be saved onto a disk.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractnetworkcache.xml">QAbstractNetworkCache</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="AttributesMap-typedef">
<db:title>QNetworkCacheMetaData::AttributesMap</db:title>
<db:para>Synonym for <db:link xlink:href="qhash.xml#the-qhash-hashing-function">QHash</db:link>&lt;<db:link xlink:href="qnetworkrequest.xml#Attribute-enum">QNetworkRequest::Attribute</db:link>, <db:link xlink:href="qvariant.xml">QVariant</db:link>&gt;</db:para>
</db:section>
<db:section xml:id="RawHeader-typedef">
<db:title>QNetworkCacheMetaData::RawHeader</db:title>
<db:para>Synonym for <db:link xlink:href="qpair.xml">QPair</db:link>&lt;<db:link xlink:href="qbytearray.xml">QByteArray</db:link>, <db:link xlink:href="qbytearray.xml">QByteArray</db:link>&gt;</db:para>
</db:section>
<db:section xml:id="RawHeaderList-typedef">
<db:title>QNetworkCacheMetaData::RawHeaderList</db:title>
<db:para>Synonym for <db:link xlink:href="qlist.xml">QList</db:link>&lt;<db:link xlink:href="qnetworkcachemetadata.xml#RawHeader-typedef">RawHeader</db:link>&gt;</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QNetworkCacheMetaData">
<db:title>QNetworkCacheMetaData::QNetworkCacheMetaData()</db:title>
<db:para>Constructs an invalid network cache meta data.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#isValid">isValid</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QNetworkCacheMetaData-1">
<db:title>QNetworkCacheMetaData::QNetworkCacheMetaData(const QNetworkCacheMetaData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a copy of the <db:code role="parameter">other</db:code> <db:link xlink:href="qnetworkcachemetadata.xml">QNetworkCacheMetaData</db:link>.</db:para>
</db:section>
<db:section xml:id="dtor.QNetworkCacheMetaData">
<db:title>[noexcept] QNetworkCacheMetaData::~QNetworkCacheMetaData()</db:title>
<db:para>Destroys the network cache meta data.</db:para>
</db:section>
<db:section xml:id="attributes">
<db:title>[since 4.6] QNetworkCacheMetaData::AttributesMap QNetworkCacheMetaData::attributes() const</db:title>
<db:para>Returns all the attributes stored with this cache item.</db:para>
<db:para>This function was introduced in Qt 4.6.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#setAttributes">setAttributes</db:link>()</db:member>
<db:member><db:link xlink:href="qnetworkrequest.xml#Attribute-enum">QNetworkRequest::Attribute</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="expirationDate">
<db:title>QDateTime QNetworkCacheMetaData::expirationDate() const</db:title>
<db:para>Returns the date and time when the meta data expires.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#setExpirationDate">setExpirationDate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isValid">
<db:title>bool QNetworkCacheMetaData::isValid() const</db:title>
<db:para>Returns true if this network cache meta data has attributes that have been set otherwise false.</db:para>
</db:section>
<db:section xml:id="lastModified">
<db:title>QDateTime QNetworkCacheMetaData::lastModified() const</db:title>
<db:para>Returns the date and time when the meta data was last modified.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#setLastModified">setLastModified</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rawHeaders">
<db:title>QNetworkCacheMetaData::RawHeaderList QNetworkCacheMetaData::rawHeaders() const</db:title>
<db:para>Returns a list of all raw headers that are set in this meta data. The list is in the same order that the headers were set.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#setRawHeaders">setRawHeaders</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="saveToDisk">
<db:title>bool QNetworkCacheMetaData::saveToDisk() const</db:title>
<db:para>Returns is this cache should be allowed to be stored on disk.</db:para>
<db:para>Some cache implementations can keep these cache items in memory for performance reasons, but for security reasons they should not be written to disk.</db:para>
<db:para>Specifically with http, documents marked with Pragma: no-cache, or have a Cache-control set to no-store or no-cache or any https document that doesn't have &quot;Cache-control: public&quot; set will set the saveToDisk to false.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#setSaveToDisk">setSaveToDisk</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setAttributes">
<db:title>[since 4.6] void QNetworkCacheMetaData::setAttributes(const QNetworkCacheMetaData::AttributesMap &amp;<db:emphasis>attributes</db:emphasis>)</db:title>
<db:para>Sets all attributes of this cache item to be the map <db:code role="parameter">attributes</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.6.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#attributes">attributes</db:link>()</db:member>
<db:member><db:link xlink:href="qnetworkrequest.xml#setAttribute">QNetworkRequest::setAttribute</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setExpirationDate">
<db:title>void QNetworkCacheMetaData::setExpirationDate(const QDateTime &amp;<db:emphasis>dateTime</db:emphasis>)</db:title>
<db:para>Sets the date and time when the meta data expires to <db:code role="parameter">dateTime</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#expirationDate">expirationDate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLastModified">
<db:title>void QNetworkCacheMetaData::setLastModified(const QDateTime &amp;<db:emphasis>dateTime</db:emphasis>)</db:title>
<db:para>Sets the date and time when the meta data was last modified to <db:code role="parameter">dateTime</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#lastModified">lastModified</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setRawHeaders">
<db:title>void QNetworkCacheMetaData::setRawHeaders(const QNetworkCacheMetaData::RawHeaderList &amp;<db:emphasis>list</db:emphasis>)</db:title>
<db:para>Sets the raw headers to <db:code role="parameter">list</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#rawHeaders">rawHeaders</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSaveToDisk">
<db:title>void QNetworkCacheMetaData::setSaveToDisk(bool <db:emphasis>allow</db:emphasis>)</db:title>
<db:para>Sets whether this network cache meta data and associated content should be allowed to be stored on disk to <db:code role="parameter">allow</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#saveToDisk">saveToDisk</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setUrl">
<db:title>void QNetworkCacheMetaData::setUrl(const QUrl &amp;<db:emphasis>url</db:emphasis>)</db:title>
<db:para>Sets the URL this network cache meta data to be <db:code role="parameter">url</db:code>.</db:para>
<db:para>The password and fragment are removed from the url.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#url">url</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="swap">
<db:title>[since 5.0] void QNetworkCacheMetaData::swap(QNetworkCacheMetaData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps this metadata instance with <db:code role="parameter">other</db:code>. This function is very fast and never fails.</db:para>
<db:para>This function was introduced in Qt 5.0.</db:para>
</db:section>
<db:section xml:id="url">
<db:title>QUrl QNetworkCacheMetaData::url() const</db:title>
<db:para>Returns the URL this network cache meta data is referring to.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#setUrl">setUrl</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QNetworkCacheMetaData::operator!=(const QNetworkCacheMetaData &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if this meta data is not equal to the <db:code role="parameter">other</db:code> meta data; otherwise returns false.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#operator-eq-eq">operator==</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QNetworkCacheMetaData &amp;QNetworkCacheMetaData::operator=(const QNetworkCacheMetaData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Makes a copy of the <db:code role="parameter">other</db:code> <db:link xlink:href="qnetworkcachemetadata.xml">QNetworkCacheMetaData</db:link> and returns a reference to the copy.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QNetworkCacheMetaData::operator==(const QNetworkCacheMetaData &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if this meta data is equal to the <db:code role="parameter">other</db:code> meta data; otherwise returns false.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkcachemetadata.xml#operator-not-eq">operator!=</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-lt-lt-1">
<db:title>[since 4.5] QDataStream &amp;operator&lt;&lt;(QDataStream &amp;<db:emphasis>out</db:emphasis>, const QNetworkCacheMetaData &amp;<db:emphasis>metaData</db:emphasis>)</db:title>
<db:para>Writes <db:code role="parameter">metaData</db:code> to the <db:code role="parameter">out</db:code> stream.</db:para>
<db:para>This function was introduced in Qt 4.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="datastreamformat.xml">Serializing Qt Data Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-gt-gt-1">
<db:title>[since 4.5] QDataStream &amp;operator&gt;&gt;(QDataStream &amp;<db:emphasis>in</db:emphasis>, QNetworkCacheMetaData &amp;<db:emphasis>metaData</db:emphasis>)</db:title>
<db:para>Reads a <db:link xlink:href="qnetworkcachemetadata.xml">QNetworkCacheMetaData</db:link> from the stream <db:code role="parameter">in</db:code> into <db:code role="parameter">metaData</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="datastreamformat.xml">Serializing Qt Data Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
