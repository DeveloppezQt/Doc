<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QFileOpenEvent Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qfileopenevent.xml">QFileOpenEvent</db:link> class provides an event that will be sent when there is a request to open a file or a URL.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QFileOpenEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qevent.xml" xlink:role="class">QEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QFileOpenEvent is part of <db:simplelist><db:member>events</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>File open events will be sent to the <db:link xlink:href="qcoreapplication.xml#instance">QApplication::instance</db:link>() when the operating system requests that a file or URL should be opened. This is a high-level event that can be caused by different user actions depending on the user's desktop environment; for example, double clicking on an file icon in the Finder on macOS.</db:para>
<db:para>This event is only used to notify the application of a request. It may be safely ignored.</db:para>
<db:note>
<db:para>This class is currently supported for macOS only.</db:para>
</db:note>
<db:section xml:id="macos-example">
<db:title>macOS Example</db:title>
<db:para>In order to trigger the event on macOS, the application must be configured to let the OS know what kind of file(s) it should react on.</db:para>
<db:para>For example, the following <db:code>Info.plist</db:code> file declares that the application can act as a viewer for files with a PNG extension:</db:para>
<db:programlisting language="cpp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;
&lt;plist version=&quot;1.0&quot;&gt;
&lt;dict&gt;
    &lt;key&gt;CFBundleDocumentTypes&lt;/key&gt;
    &lt;array&gt;
        &lt;dict&gt;
            &lt;key&gt;CFBundleTypeExtensions&lt;/key&gt;
            &lt;array&gt;
                &lt;string&gt;png&lt;/string&gt;
            &lt;/array&gt;
            &lt;key&gt;CFBundleTypeRole&lt;/key&gt;
            &lt;string&gt;Viewer&lt;/string&gt;
        &lt;/dict&gt;
    &lt;/array&gt;
&lt;/dict&gt;
&lt;/plist&gt;
</db:programlisting>
<db:para>The following implementation of a <db:link xlink:href="qapplication.xml">QApplication</db:link> subclass prints the path to the file that was, for example, dropped on the Dock icon of the application.</db:para>
<db:programlisting language="cpp">#include &lt;QApplication&gt;
#include &lt;QFileOpenEvent&gt;
#include &lt;QtDebug&gt;

class MyApplication : public QApplication
{
public:
    MyApplication(int &amp;argc, char **argv)
        : QApplication(argc, argv)
    {
    }

    bool event(QEvent *event)
    {
        if (event-&gt;type() == QEvent::FileOpen) {
            QFileOpenEvent *openEvent = static_cast&lt;QFileOpenEvent *&gt;(event);
            qDebug() &lt;&lt; &quot;Open file&quot; &lt;&lt; openEvent-&gt;file();
        }

        return QApplication::event(event);
    }
};
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="file">
<db:title>QString QFileOpenEvent::file() const</db:title>
<db:para>Returns the file that is being opened.</db:para>
</db:section>
<db:section xml:id="openFile">
<db:title>[since 4.8] bool QFileOpenEvent::openFile(QFile &amp;<db:emphasis>file</db:emphasis>, QIODevice::OpenMode <db:emphasis>flags</db:emphasis>) const</db:title>
<db:para>Opens a <db:link xlink:href="qfile.xml">QFile</db:link> on the <db:code role="parameter">file</db:code> referenced by this event in the mode specified by <db:code role="parameter">flags</db:code>. Returns <db:code>true</db:code> if successful; otherwise returns <db:code>false</db:code>.</db:para>
<db:para>This is necessary as some files cannot be opened by name, but require specific information stored in this event.</db:para>
<db:para>This function was introduced in Qt 4.8.</db:para>
</db:section>
<db:section xml:id="url">
<db:title>[since 4.6] QUrl QFileOpenEvent::url() const</db:title>
<db:para>Returns the url that is being opened.</db:para>
<db:para>This function was introduced in Qt 4.6.</db:para>
</db:section>
</db:section>
</db:article>
