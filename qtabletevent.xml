<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QTabletEvent Class</db:title>
<db:productname>QtGui</db:productname>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qtabletevent.xml">QTabletEvent</db:link> class contains parameters that describe a Tablet event.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QTabletEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qinputevent.xml" xlink:role="class">QInputEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QTabletEvent is part of <db:simplelist><db:member><db:link xlink:href="events.xml">Event Classes</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Tablet Events are generated from a Wacom tablet. Most of the time you will want to deal with events from the tablet as if they were events from a mouse; for example, you would retrieve the cursor position with <db:link xlink:href="qtabletevent.xml#x">x</db:link>(), <db:link xlink:href="qtabletevent.xml#y">y</db:link>(), <db:link xlink:href="qtabletevent.xml#pos">pos</db:link>(), <db:link xlink:href="qtabletevent.xml#globalX">globalX</db:link>(), <db:link xlink:href="qtabletevent.xml#globalY">globalY</db:link>(), and <db:link xlink:href="qtabletevent.xml#globalPos">globalPos</db:link>(). In some situations you may wish to retrieve the extra information provided by the tablet device driver; for example, you might want to do subpixeling with higher resolution coordinates or you may want to adjust color brightness based on pressure. <db:link xlink:href="qtabletevent.xml">QTabletEvent</db:link> allows you to read the <db:link xlink:href="qtabletevent.xml#pressure">pressure</db:link>(), the <db:link xlink:href="qtabletevent.xml#xTilt">xTilt</db:link>(), and <db:link xlink:href="qtabletevent.xml#yTilt">yTilt</db:link>(), as well as the type of device being used with <db:link xlink:href="qtabletevent.xml#device">device</db:link>() (see <db:link xlink:href="qtabletevent.xml#TabletDevice-enum">TabletDevice</db:link>). It can also give you the minimum and maximum values for each device's pressure and high resolution coordinates.</db:para>
<db:para>A tablet event contains a special accept flag that indicates whether the receiver wants the event. You should call <db:link xlink:href="qevent.xml#accept">QTabletEvent::accept</db:link>() if you handle the tablet event; otherwise it will be sent to the parent widget. The exception are TabletEnterProximity and TabletLeaveProximity events, these are only sent to QApplication and don't check whether or not they are accepted.</db:para>
<db:para>The QWidget::setEnabled() function can be used to enable or disable mouse and keyboard events for a widget.</db:para>
<db:para>The event handler QWidget::tabletEvent() receives all three types of tablet events. Qt will first send a tabletEvent then, if it is not accepted, it will send a mouse event. This allows applications that don't utilize tablets to use a tablet like a mouse, while also enabling those who want to use both tablets and mouses differently.</db:para>
<db:section xml:id="notes-for-x11-users">
<db:title>Notes for X11 Users</db:title>
<db:para>Qt uses the following hard-coded names to identify tablet devices from the xorg.conf file on X11 (apart from IRIX): 'stylus', 'pen', and 'eraser'. If the devices have other names, they will not be picked up Qt.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="PointerType-enum">
<db:title>enum QTabletEvent::PointerType</db:title>
<db:para>This enum defines what type of point is generating the event.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtabletevent.xml">QTabletEvent</db:link></db:emphasis>::UnknownPointer</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>An unknown device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtabletevent.xml">QTabletEvent</db:link></db:emphasis>::Pen</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Tip end of a stylus-like device (the narrow end of the pen).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtabletevent.xml">QTabletEvent</db:link></db:emphasis>::Cursor</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Any puck-like device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtabletevent.xml">QTabletEvent</db:link></db:emphasis>::Eraser</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Eraser end of a stylus-like device (the broad end of the pen).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#pointerType">pointerType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="TabletDevice-enum">
<db:title>[since 4.1] enum QTabletEvent::TabletDevice</db:title>
<db:para>This enum defines what type of device is generating the event.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtabletevent.xml">QTabletEvent</db:link></db:emphasis>::NoDevice</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>No device, or an unknown device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtabletevent.xml">QTabletEvent</db:link></db:emphasis>::Puck</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>A Puck (a device that is similar to a flat mouse with a transparent circle with cross-hairs).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtabletevent.xml">QTabletEvent</db:link></db:emphasis>::Stylus</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>A Stylus.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtabletevent.xml">QTabletEvent</db:link></db:emphasis>::Airbrush</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>An airbrush</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtabletevent.xml">QTabletEvent</db:link></db:emphasis>::FourDMouse</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>A 4D Mouse.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtabletevent.xml">QTabletEvent</db:link></db:emphasis>::RotationStylus</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>A special stylus that also knows about rotation (a 6D stylus).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This enum was introduced in Qt 4.1.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QTabletEvent">
<db:title>QTabletEvent::QTabletEvent(QEvent::Type <db:emphasis>type</db:emphasis>, const QPointF &amp;<db:emphasis>pos</db:emphasis>, const QPointF &amp;<db:emphasis>globalPos</db:emphasis>, int <db:emphasis>device</db:emphasis>, int <db:emphasis>pointerType</db:emphasis>, qreal <db:emphasis>pressure</db:emphasis>, int <db:emphasis>xTilt</db:emphasis>, int <db:emphasis>yTilt</db:emphasis>, qreal <db:emphasis>tangentialPressure</db:emphasis>, qreal <db:emphasis>rotation</db:emphasis>, int <db:emphasis>z</db:emphasis>, Qt::KeyboardModifiers <db:emphasis>keyState</db:emphasis>, qint64 <db:emphasis>uniqueID</db:emphasis>)</db:title>
<db:para>Construct a tablet event of the given <db:code role="parameter">type</db:code>.</db:para>
<db:para>The <db:code role="parameter">pos</db:code> parameter indicates where the event occurred in the widget; <db:code role="parameter">globalPos</db:code> is the corresponding position in absolute coordinates.</db:para>
<db:para><db:code role="parameter">pressure</db:code> contains the pressure exerted on the <db:code role="parameter">device</db:code>.</db:para>
<db:para><db:code role="parameter">pointerType</db:code> describes the type of pen that is being used.</db:para>
<db:para><db:code role="parameter">xTilt</db:code> and <db:code role="parameter">yTilt</db:code> contain the device's degree of tilt from the x and y axes respectively.</db:para>
<db:para><db:code role="parameter">keyState</db:code> specifies which keyboard modifiers are pressed (e.g., <db:guilabel>Ctrl</db:guilabel>).</db:para>
<db:para>The <db:code role="parameter">uniqueID</db:code> parameter contains the unique ID for the current device.</db:para>
<db:para>The <db:code role="parameter">z</db:code> parameter contains the coordinate of the device on the tablet, this is usually given by a wheel on 4D mouse. If the device does not support a Z-axis, pass zero here.</db:para>
<db:para>The <db:code role="parameter">tangentialPressure</db:code> parameter contins the tangential pressure of an air brush. If the device does not support tangential pressure, pass 0 here.</db:para>
<db:para><db:code role="parameter">rotation</db:code> contains the device's rotation in degrees. 4D mice support rotation. If the device does not support rotation, pass 0 here.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#pos">pos</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#globalPos">globalPos</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#device">device</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#pressure">pressure</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#xTilt">xTilt</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#yTilt">yTilt</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#uniqueId">uniqueId</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#rotation">rotation</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#tangentialPressure">tangentialPressure</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#z">z</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="device">
<db:title>QTabletEvent::TabletDevice QTabletEvent::device() const</db:title>
<db:para>Returns the type of device that generated the event.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#TabletDevice-enum">TabletDevice</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="globalPos">
<db:title>QPoint QTabletEvent::globalPos() const</db:title>
<db:para>Returns the global position of the device <db:emphasis>at the time of the event</db:emphasis>. This is important on asynchronous windows systems like X11; whenever you move your widgets around in response to mouse events, globalPos() can differ significantly from the current position <db:link xlink:href="qcursor.xml#pos">QCursor::pos</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#globalX">globalX</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#globalY">globalY</db:link>()</db:member>
<db:member><db:link xlink:href="">hiResGlobalPos()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="globalPosF">
<db:title>const QPointF &amp;QTabletEvent::globalPosF() const</db:title>
<db:para>Returns the global position of the device <db:emphasis>at the time of the event</db:emphasis>. This is important on asynchronous windows systems like X11; whenever you move your widgets around in response to mouse events, globalPosF() can differ significantly from the current position <db:link xlink:href="qcursor.xml#pos">QCursor::pos</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#posF">posF</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="globalX">
<db:title>int QTabletEvent::globalX() const</db:title>
<db:para>Returns the global x position of the mouse pointer at the time of the event.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#globalY">globalY</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#globalPos">globalPos</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#hiResGlobalX">hiResGlobalX</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="globalY">
<db:title>int QTabletEvent::globalY() const</db:title>
<db:para>Returns the global y position of the tablet device at the time of the event.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#globalX">globalX</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#globalPos">globalPos</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#hiResGlobalY">hiResGlobalY</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hiResGlobalX">
<db:title>qreal QTabletEvent::hiResGlobalX() const</db:title>
<db:para>The high precision x position of the tablet device.</db:para>
</db:section>
<db:section xml:id="hiResGlobalY">
<db:title>qreal QTabletEvent::hiResGlobalY() const</db:title>
<db:para>The high precision y position of the tablet device.</db:para>
</db:section>
<db:section xml:id="pointerType">
<db:title>QTabletEvent::PointerType QTabletEvent::pointerType() const</db:title>
<db:para>Returns the type of point that generated the event.</db:para>
</db:section>
<db:section xml:id="pos">
<db:title>QPoint QTabletEvent::pos() const</db:title>
<db:para>Returns the position of the device, relative to the widget that received the event.</db:para>
<db:para>If you move widgets around in response to mouse events, use <db:link xlink:href="qtabletevent.xml#globalPos">globalPos</db:link>() instead of this function.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#x">x</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#y">y</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#globalPos">globalPos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="posF">
<db:title>const QPointF &amp;QTabletEvent::posF() const</db:title>
<db:para>Returns the position of the device, relative to the widget that received the event.</db:para>
<db:para>If you move widgets around in response to mouse events, use <db:link xlink:href="qtabletevent.xml#globalPosF">globalPosF</db:link>() instead of this function.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#globalPosF">globalPosF</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pressure">
<db:title>qreal QTabletEvent::pressure() const</db:title>
<db:para>Returns the pressure for the device. 0.0 indicates that the stylus is not on the tablet, 1.0 indicates the maximum amount of pressure for the stylus.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#tangentialPressure">tangentialPressure</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rotation">
<db:title>qreal QTabletEvent::rotation() const</db:title>
<db:para>Returns the rotation of the current device in degress. This is usually given by a 4D Mouse. If the device doesn't support rotation this value is always 0.0.</db:para>
</db:section>
<db:section xml:id="tangentialPressure">
<db:title>qreal QTabletEvent::tangentialPressure() const</db:title>
<db:para>Returns the tangential pressure for the device. This is typically given by a finger wheel on an airbrush tool. The range is from -1.0 to 1.0. 0.0 indicates a neutral position. Current airbrushes can only move in the positive direction from the neutrual position. If the device does not support tangential pressure, this value is always 0.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#pressure">pressure</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="uniqueId">
<db:title>qint64 QTabletEvent::uniqueId() const</db:title>
<db:para>Returns a unique ID for the current device, making it possible to differentiate between multiple devices being used at the same time on the tablet.</db:para>
<db:para>Support of this feature is dependent on the tablet.</db:para>
<db:para>Values for the same device may vary from OS to OS.</db:para>
<db:para>Later versions of the Wacom driver for Linux will now report the ID information. If you have a tablet that supports unique ID and are not getting the information on Linux, consider upgrading your driver.</db:para>
<db:para>As of Qt 4.2, the unique ID is the same regardless of the orientation of the pen. Earlier versions would report a different value when using the eraser-end versus the pen-end of the stylus on some OS's.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#pointerType">pointerType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="x">
<db:title>int QTabletEvent::x() const</db:title>
<db:para>Returns the x position of the device, relative to the widget that received the event.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#y">y</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#pos">pos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="xTilt">
<db:title>int QTabletEvent::xTilt() const</db:title>
<db:para>Returns the angle between the device (a pen, for example) and the perpendicular in the direction of the x axis. Positive values are towards the tablet's physical right. The angle is in the range -60 to +60 degrees.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtabletevent-tilt.png"/>
</db:imageobject>
</db:mediaobject>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#yTilt">yTilt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="y">
<db:title>int QTabletEvent::y() const</db:title>
<db:para>Returns the y position of the device, relative to the widget that received the event.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#x">x</db:link>()</db:member>
<db:member><db:link xlink:href="qtabletevent.xml#pos">pos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="yTilt">
<db:title>int QTabletEvent::yTilt() const</db:title>
<db:para>Returns the angle between the device (a pen, for example) and the perpendicular in the direction of the y axis. Positive values are towards the bottom of the tablet. The angle is within the range -60 to +60 degrees.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#xTilt">xTilt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="z">
<db:title>int QTabletEvent::z() const</db:title>
<db:para>Returns the z position of the device. Typically this is represented by a wheel on a 4D Mouse. If the device does not support a Z-axis, this value is always zero. This is <db:emphasis role="bold">not</db:emphasis> the same as pressure.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabletevent.xml#pressure">pressure</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
