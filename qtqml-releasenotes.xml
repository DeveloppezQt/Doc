<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>Qt QML Release Notes</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt QML Reference Documentation.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="qt-qml-in-qt-5-1">
<db:title>Qt QML in Qt 5.1</db:title>
<db:para>Qt 5.1 introduces several bug fixes and new functionalities to Qt QML. This is a summary of the new changes:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>New <db:link xlink:href="qqmlapplicationengine.xml">QQmlApplicationEngine</db:link> convenience class for QML applications.</db:para>
</db:listitem>
<db:listitem>
<db:para>New Instantiatior type for generic, dynamic object creation.</db:para>
</db:listitem>
<db:listitem>
<db:para>New properties for <db:link xlink:href="qml-qtqml-qt.xml#application-prop">Qt.application</db:link>: arguments, name, and version.</db:para>
</db:listitem>
<db:listitem>
<db:para>The 'with' statement has been deprecated and is slated for removal in a future version of the language.</db:para>
</db:listitem>
<db:listitem>
<db:para>New <db:link xlink:href="qml-qtqml-qt.xml#platform-prop">Qt.platform</db:link> object with an os property</db:para>
</db:listitem>
<db:listitem>
<db:para>New <db:link xlink:href="qqmlengine.xml#qmlClearTypeRegistrations">qmlClearTypeRegistrations</db:link>() function drops all data from <db:link xlink:href="qqmlengine.xml#qmlRegisterType">qmlRegisterType</db:link>() calls</db:para>
</db:listitem>
<db:listitem>
<db:para>New <db:link xlink:href="qqmlengine.xml#qmlRegisterType">qmlRegisterType</db:link>() function for registering composite types.</db:para>
</db:listitem>
</db:itemizedlist>
<db:section xml:id="new-submodule">
<db:title>New Submodule</db:title>
<db:para>The <db:link xlink:href="qtqml-models-qmlmodule.xml">Qt QML Models</db:link> is a new submodule in Qt 5.1 and provides several QML types for handling data with models and lists. These types replace types such as <db:link xlink:href="qml-visualitemmodel.xml">VisualItemModel</db:link>, <db:link xlink:href="qml-visualdatamodel.xml">VisualDataModel</db:link>, and <db:link xlink:href="qml-visualdatagroup.xml">VisualDataGroup</db:link>.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtqml-models-qmlmodule.xml">Models</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The <db:link xlink:href="">What's New in Qt 5.1</db:link> has more information about the Qt 5.1 release.</db:para>
</db:section>
</db:section>
<db:section xml:id="qt-qml-in-qt-5-0">
<db:title>Qt QML in Qt 5.0</db:title>
<db:para>The <db:link xlink:href="qtqml-index.xml">Qt QML</db:link> module is new in Qt 5.0. It provides the QML engine and implements the QML language supporting infrastructure.</db:para>
<db:para>(Prior to Qt 5, this functionality was provided by the QtDeclarative module, which has now been replaced by the new <db:link xlink:href="qtqml-index.xml">Qt QML</db:link> and <db:link xlink:href="">Qt Quick</db:link> modules. See the <db:link xlink:href="">Porting QML Applications to Qt 5</db:link> page for more information.)</db:para>
<db:section xml:id="qml-engine">
<db:title>QML Engine</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>JavaScript engine has changed to V8.</db:para>
</db:listitem>
<db:listitem>
<db:para>Various parser and compiler optimizations have been implemented, as well as a new bindings optimizer.</db:para>
</db:listitem>
<db:listitem>
<db:para>New <db:link xlink:href="qqmlengine.xml#trimComponentCache">QQmlEngine::trimComponentCache</db:link>() method safely discards unused data in the engine's component cache to free memory.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="component-and-object-creation">
<db:title>Component and Object Creation</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>QML objects can now be created asynchronously to improve application performance.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>New <db:link xlink:href="qqmlincubator.xml">QQmlIncubator</db:link> and <db:link xlink:href="qqmlincubationcontroller.xml">QQmlIncubationController</db:link> C++ classes can be used to create objects asynchronously.</db:para>
</db:listitem>
<db:listitem>
<db:para>From QML code, this behavior can enabled by:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Calling the new Component <db:link xlink:href="qml-qtqml-component.xml#incubateObject-method">Component::incubateObject</db:link> method</db:para>
</db:listitem>
<db:listitem>
<db:para>Passing the Component.Asynchronous parameter to Qt.createComponent()</db:para>
</db:listitem>
<db:listitem>
<db:para>Loading a Loader object asynchronously using the asynchronous property</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para>The component returned by Qt.createComponent() is no longer parented to the engine. Be sure to hold a reference, or provide a parent.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="type-system">
<db:title>Type System</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>New <db:link xlink:href="qml-var.xml">var</db:link> property type. This is a general-purpose property type which obsoletes the <db:link xlink:href="qml-variant.xml" role="deprecated">variant</db:link> type. Properties of the <db:link xlink:href="qml-var.xml">var</db:link> type may hold JavaScript references.</db:para>
</db:listitem>
<db:listitem>
<db:para>QML properties of type <db:link xlink:href="qml-var.xml">var</db:link> and <db:link xlink:href="qml-variant.xml" role="deprecated">variant</db:link> can now hold pixmaps. See <db:link xlink:href="">Scarce Resources in JavaScript</db:link> for more information.</db:para>
</db:listitem>
<db:listitem>
<db:para>Value type improvements:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>QML now supports defining properties of value type basic types within QML documents. Supported types include <db:link xlink:href="qsizef.xml">QSizeF</db:link>, <db:link xlink:href="qpointf.xml">QPointF</db:link> and <db:link xlink:href="qrectf.xml">QRectF</db:link> as size, point and rect respectively.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qcolor.xml">QColor</db:link> is now a value type provided by the QtQuick module. The red, green, blue and alpha channels of a <db:link xlink:href="stylesheet-reference.xml#color">color</db:link> property can be accessed via r, g, b and a properties.</db:para>
</db:listitem>
<db:listitem>
<db:para>Factory functions for various value types have been added to the Qt object exposed to QML. Some of those functions require the QtQuick module to be imported in order to return valid values. See the <db:link xlink:href="">Qt Quick Release Notes</db:link> for more information about these functions.</db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para>Support for sequence types <db:link xlink:href="qlist.xml">QList</db:link>&lt;int&gt;, <db:link xlink:href="qlist.xml">QList</db:link>&lt;qreal&gt;, <db:link xlink:href="qlist.xml">QList</db:link>&lt;bool&gt;, <db:link xlink:href="qlist.xml">QList</db:link>&lt;<db:link xlink:href="qurl.xml">QUrl</db:link>&gt;, <db:link xlink:href="qlist.xml">QList</db:link>&lt;<db:link xlink:href="qstring.xml">QString</db:link>&gt; and <db:link xlink:href="qstringlist.xml">QStringList</db:link> has been improved. QObjects can define Q_PROPERTYs of these types which can be accessed transparently from JavaScript.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="modules-and-imports">
<db:title>Modules and Imports</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Arbitrary functionality may be provided in a namespace through a singleton type. See <db:link xlink:href="qqmlengine.xml#qmlRegisterSingletonType">qmlRegisterSingletonType</db:link>() for more information.</db:para>
</db:listitem>
<db:listitem>
<db:para>JavaScript (.js) files may now import QML modules and other JavaScript files using the &quot;.import&quot; syntax.</db:para>
</db:listitem>
<db:listitem>
<db:para>Plugins may now use <db:link xlink:href="qqmlextensionplugin.xml#baseUrl">QQmlExtensionPlugin::baseUrl</db:link> to get the directory from which the plugin is loaded. This will be useful if the plugin needs to load QML or other assets from the same directory.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="other">
<db:title>Other</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qqmlexpression.xml">QQmlExpression</db:link> can now be constructed directly (and more efficiently) from a <db:link xlink:href="qqmlscriptstring.xml">QQmlScriptString</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>The <db:link xlink:href="qml-qtqml-qt.xml">Qt</db:link> global object now provides an <db:link xlink:href="qml-qtqml-qt.xml#inputMethod-prop">inputMethod</db:link> property to access the active text input method for an application.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:article>
