<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Controls - UI Forms</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates how to separate the application logic from the UI.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.2
import QtQuick.Layouts 1.1
import QtQuick.Dialogs 1.1
import QtQuick.Controls 1.2
import io.qt.example 1.0
import &quot;qml&quot;

ApplicationWindow {
    visible: true
    title: &quot;Qt Quick UI Forms&quot;

    MessageDialog {
        id: aboutDialog
        icon: StandardIcon.Information
        title: qsTr(&quot;About&quot;)
        text: &quot;Qt Quick UI Forms&quot;
        informativeText: qsTr(&quot;This example demonstrates how to separate the implementation of an application from the UI using ui.qml files.&quot;)
    }

    Action {
        id: copyAction
        text: qsTr(&quot;&amp;Copy&quot;)
        shortcut: StandardKey.Copy
        iconName: &quot;edit-copy&quot;
        enabled: (!!activeFocusItem &amp;&amp; !!activeFocusItem[&quot;copy&quot;])
        onTriggered: activeFocusItem.copy()
    }

    Action {
        id: cutAction
        text: qsTr(&quot;Cu&amp;t&quot;)
        shortcut: StandardKey.Cut
        iconName: &quot;edit-cut&quot;
        enabled: (!!activeFocusItem &amp;&amp; !!activeFocusItem[&quot;cut&quot;])
        onTriggered: activeFocusItem.cut()
    }

    Action {
        id: pasteAction
        text: qsTr(&quot;&amp;Paste&quot;)
        shortcut: StandardKey.Paste
        iconName: &quot;edit-paste&quot;
        enabled: (!!activeFocusItem &amp;&amp; !!activeFocusItem[&quot;paste&quot;])
        onTriggered: activeFocusItem.paste()
    }

    menuBar: MenuBar {
        Menu {
            title: qsTr(&quot;&amp;File&quot;)
            MenuItem {
                text: qsTr(&quot;E&amp;xit&quot;)
                shortcut: StandardKey.Quit
                onTriggered: Qt.quit()
            }
        }
        Menu {
            title: qsTr(&quot;&amp;Edit&quot;)
            MenuItem {
                action: cutAction
            }
            MenuItem {
                action: copyAction
            }
            MenuItem {
                action: pasteAction
            }
        }
        Menu {
            title: qsTr(&quot;&amp;Help&quot;)
            MenuItem {
                text: qsTr(&quot;About...&quot;)
                onTriggered: aboutDialog.open()
            }
        }
    }

    MainForm {
        id: mainForm

        anchors.fill: parent

        Layout.minimumWidth: 800
        Layout.minimumHeight: 480
        Layout.preferredWidth: 768
        Layout.preferredHeight: 480

        tableView.model: CustomerModel

        Component.onCompleted: CustomerModel.selection = tableView.selection
    }
}

</db:programlisting>
</db:article>
