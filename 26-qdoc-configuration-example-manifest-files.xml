<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Example Manifest Files</db:title>
<db:productname>QDoc</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>QDoc Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="25-qdoc-configuration-derivedprojects.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Supporting Derived Projects"/></db:extendedlink>
<db:abstract>
<db:para>QDoc Manual.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>QDoc Manual</db:para>
<db:para>QDoc generates XML files that contain information about all documented examples and demos. These files, named examples-manifest.xml and demos-manifest.xml, are used by Qt Creator to present a list of examples in its welcome screen and to link to their documentation.</db:para>
<db:section xml:id="manifest-xml-structure">
<db:title>Manifest XML Structure</db:title>
<db:para>A manifest file has the following structure:</db:para>
<db:programlisting language="cpp" role="bad">&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;instructionals module=&quot;QtGui&quot;&amp;gt;
    &amp;lt;examples&amp;gt;
        &amp;lt;example
            name=&quot;Analog Clock Window Example&quot;
            docUrl=&quot;qthelp://org.qt-project.qtgui.502/qtgui/analogclock.html&quot;
            projectPath=&quot;gui/analogclock/analogclock.pro&quot;
            imageUrl=&quot;qthelp://org.qt-project.qtgui.502/qtgui/images/analogclock-window-example.png&quot;&amp;gt;
            &amp;lt;description&amp;gt;&amp;lt;![CDATA[The Analog Clock Window example shows how
                to draw the contents of a custom window.]]&amp;gt;&amp;lt;/description&amp;gt;
            &amp;lt;tags&amp;gt;analog,clock,window&amp;lt;/tags&amp;gt;
            &amp;lt;fileToOpen&amp;gt;gui/analogclock/main.cpp&amp;lt;/fileToOpen&amp;gt;
        &amp;lt;/example&amp;gt;
        ...
    &amp;lt;/examples&amp;gt;
&amp;lt;/instructionals&amp;gt;
</db:programlisting>
<db:para>Each &lt;example&gt; element contains information about a name, description, the location of the project file and documentation, as well as a list of tags associated with the example.</db:para>
<db:anchor xml:id="metacontent"/>
</db:section>
<db:section xml:id="manifest-meta-content">
<db:title>Manifest Meta Content</db:title>
<db:para>It is possible to augment the manifest files with additional meta-content - that is, extra attributes and tags for selected examples, using the manifestmeta configuration command.</db:para>
<db:para>One use case for meta-content is highlighting a number of prominent examples. Another is improving search functionality by adding relevant keywords as tags for a certain category of examples.</db:para>
<db:para>The examples for which meta-content is applied to is specified using one or more filters. Matching examples to filters is done based on names, with each example name prefixed with a module name and a slash. Simple wildcard matching is supported; by using * at the end it's possible to match multiple examples with a single string.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp" role="bad">manifestmeta.filters                = highlighted sql webkit global

manifestmeta.highlighted.names      = &quot;QtGui/Analog Clock Window Example&quot; \
                                      &quot;QtWidgets/Analog Clock Example&quot;
manifestmeta.highlighted.attributes = isHighlighted:true

manifestmeta.sql.names              = &quot;QtSql/*&quot;
manifestmeta.sql.tags               = database,sql

manifestmeta.webkit.names           = &quot;QtWebKitExamples/*&quot;
manifestmeta.webkit.tags            = webkit

manifestmeta.global.names           = *
manifestmeta.global.tags            = qt5
</db:programlisting>
<db:para>Above, an isHighlighted attribute is added to two examples. If the attribute value is omitted, QDoc uses the string true by default. Extra tags are added for Qt WebKit and Qt SQL examples, and another tag is applied to all examples by using just * as the match string.</db:para>
</db:section>
</db:article>
