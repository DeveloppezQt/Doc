<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>WaylandHardwareLayer QML Type</db:title>
<db:productname>QtWaylandCompositor</db:productname>
<db:edition>Qt Wayland Compositor | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Wayland Compositor Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Makes a parent <db:link xlink:href="qml-qtwayland-compositor-waylandquickitem.xml">WaylandQuickItem</db:link> use hardware layers for rendering.</db:para>
<db:para><db:emphasis role="bold">This type is under development and is subject to change.</db:emphasis></db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtWayland.Compositor 1.5</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This item needs to be a descendant of a <db:link xlink:href="qml-qtwayland-compositor-waylandquickitem.xml">WaylandQuickItem</db:link> or a derivative, (i.e. <db:link xlink:href="qml-qtwayland-compositor-shellsurfaceitem.xml">ShellSurfaceItem</db:link> or similar)</db:para>
<db:para>The Surface of the parent <db:link xlink:href="qml-qtwayland-compositor-waylandquickitem.xml">WaylandQuickItem</db:link> will be drawn in a hardware specific way instead of the regular way using the <db:link xlink:href="qtquick-module.xml">QtQuick</db:link> scene graph. On some platforms, the <db:link xlink:href="qml-qtwayland-compositor-waylandquickitem.xml">WaylandQuickItem</db:link>'s current buffer and the scene graph can be blended in a separate step. This makes it possible for clients to update continuously without triggering a full redraw of the compositor scene graph for each frame.</db:para>
<db:para>The preferred hardware layer integration may be overridden by setting the QT_WAYLAND_HARDWARE_LAYER_INTEGRATION environment variable.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="stackingLevel-prop">
<db:title>stackingLevel : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>stackingLevel</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the stacking level of this hardware layer relative to other hardware layers, and can be used to sort hardware layers. I.e. a layer with a higher level is rendered on top of one with a lower level.</db:para>
<db:para>Layers with level 0 will be drawn in an implementation defined order on top of the compositor scene graph.</db:para>
<db:para>Layers with a level below 0 are drawn beneath the compositor scene graph, if supported by the hardware layer integration.</db:para>
</db:section>
</db:section>
</db:article>
