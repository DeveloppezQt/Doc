<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Release managers</db:title>
<db:productname>QtLinguist</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Linguist Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="qtlinguist-index.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Qt Linguist Manual"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="linguist-creating-ts-files.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="Creating translation files"/></db:extendedlink>
<db:abstract>
<db:para>Qt Linguist Manual.</db:para></db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/front-publishing.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Release managers use <db:code>lupdate</db:code> to generate a set of translation source (TS) files from the application source files (QML and C++) and pass them to translators. The translators use <db:emphasis>Qt Linguist</db:emphasis> to translate the strings and pass the TS files back to the release managers. They use <db:code>lrelease</db:code> to generate compact versions of the TS files, called Qt message (QM) files, that are ready for use by the application.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="linguist-creating-ts-files.xml">Creating translation files</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="linguist-lupdate.xml">Using lupdate</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="linguist-lrelease.xml">Using lrelease</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>You can use the tools in repeated cycles as applications change and evolve. They preserve existing translations and make it easy to identify new strings. In addition, you can use the <db:emphasis>Qt Linguist</db:emphasis> phrase books to consistently translate multiple applications and projects.</db:para>
<db:para>You can configure CMake projects to automatically run <db:code>lupdate</db:code> and <db:code>lrelease</db:code> when you build a project and generate TS and QM files for you.</db:para>
<db:para>You can use the Qt Design Studio <db:link xlink:href="https://doc-snapshots.qt.io/qtdesignstudio/studio-translations.html">Translations</db:link> view to test and manage <db:link xlink:href="linguist-id-based-i18n.xml">ID-based translations</db:link>.</db:para>
</db:article>
