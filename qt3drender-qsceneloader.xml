<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSceneLoader Class</db:title>
<db:subtitle>Qt3DRender::QSceneLoader</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides the facility to load an existing Scene.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSceneLoader</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml" xlink:role="">SceneLoader</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qcomponent.xml" xlink:role="class">Qt3DCore::QComponent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSceneLoader is part of <db:simplelist><db:member>io</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Given a 3D source file, the <db:link xlink:href="qt3drender-qsceneloader.xml">Qt3DRender::QSceneLoader</db:link> will try to parse it and build a tree of <db:link xlink:href="qt3dcore-qentity.xml">Qt3DCore::QEntity</db:link> objects with proper <db:link xlink:href="qt3drender-qgeometryrenderer.xml">Qt3DRender::QGeometryRenderer</db:link>, <db:link xlink:href="qt3dcore-qtransform.xml">Qt3DCore::QTransform</db:link> and <db:link xlink:href="qt3drender-qmaterial.xml">Qt3DRender::QMaterial</db:link> components.</db:para>
<db:para>The loader will try to determine the best material to be used based on the properties of the model file. If you wish to use a custom material, you will have to traverse the tree and replace the default associated materials with yours.</db:para>
<db:para>As the name implies, <db:link xlink:href="qt3drender-qsceneloader.xml">Qt3DRender::QSceneLoader</db:link> loads a complete scene subtree. If you wish to load a single piece of geometry, you should rather use the <db:link xlink:href="qt3drender-qmesh.xml">Qt3DRender::QMesh</db:link> instead.</db:para>
<db:para><db:link xlink:href="qt3drender-qsceneloader.xml">Qt3DRender::QSceneLoader</db:link> internally relies on the use of plugins to support a wide variety of 3D file formats. <db:link xlink:href="http://assimp.sourceforge.net/main_features_formats.html">Here</db:link> is a list of formats that are supported by Qt3D.</db:para>
<db:note>
<db:para>this component shouldn't be shared among several <db:link xlink:href="qt3dcore-qentity.xml">Qt3DCore::QEntity</db:link> instances. Undefined behavior will result.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qmesh.xml">Qt3DRender::QMesh</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qgeometryrenderer.xml">Qt3DRender::QGeometryRenderer</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="ComponentType-enum">
<db:title>enum QSceneLoader::ComponentType</db:title>
<db:para>This enum specifies a component type.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qsceneloader.xml">QSceneLoader</db:link></db:emphasis>::UnknownComponent</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Unknown component type</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qsceneloader.xml">QSceneLoader</db:link></db:emphasis>::GeometryRendererComponent</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qt3drender-qgeometryrenderer.xml">Qt3DRender::QGeometryRenderer</db:link> component</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qsceneloader.xml">QSceneLoader</db:link></db:emphasis>::TransformComponent</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qt3dcore-qtransform.xml">Qt3DCore::QTransform</db:link> component</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qsceneloader.xml">QSceneLoader</db:link></db:emphasis>::MaterialComponent</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qt3drender-qmaterial.xml">Qt3DRender::QMaterial</db:link> component</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qsceneloader.xml">QSceneLoader</db:link></db:emphasis>::LightComponent</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qt3drender-qabstractlight.xml">Qt3DRender::QAbstractLight</db:link> component</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qsceneloader.xml">QSceneLoader</db:link></db:emphasis>::CameraLensComponent</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qt3drender-qcameralens.xml">Qt3DRender::QCameraLens</db:link> component</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="Status-enum">
<db:title>enum QSceneLoader::Status</db:title>
<db:para>This enum identifies the state of loading</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qsceneloader.xml">QSceneLoader</db:link></db:emphasis>::None</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The <db:link xlink:href="qt3drender-qsceneloader.xml">Qt3DRender::QSceneLoader</db:link> hasn't been used yet.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qsceneloader.xml">QSceneLoader</db:link></db:emphasis>::Loading</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The <db:link xlink:href="qt3drender-qsceneloader.xml">Qt3DRender::QSceneLoader</db:link> is currently loading the scene file.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qsceneloader.xml">QSceneLoader</db:link></db:emphasis>::Ready</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The <db:link xlink:href="qt3drender-qsceneloader.xml">Qt3DRender::QSceneLoader</db:link> successfully loaded the scene file.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qsceneloader.xml">QSceneLoader</db:link></db:emphasis>::Error</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>The <db:link xlink:href="qt3drender-qsceneloader.xml">Qt3DRender::QSceneLoader</db:link> encountered an error while loading the scene file.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="source-prop">
<db:title>source : QUrl</db:title>
<db:para>Holds the url to the source to be loaded.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QUrl</db:type> <db:emphasis role="bold">source</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSource</db:emphasis>(const <db:type>QUrl</db:type> &amp;<db:emphasis>arg</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">sourceChanged</db:emphasis>(const <db:type>QUrl</db:type> &amp;<db:emphasis>source</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="status-prop">
<db:title>[read-only] status : const Status</db:title>
<db:para>Holds the status of scene loading.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.None</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.Loading</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.Ready</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.Error</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qsceneloader.xml#Status-enum">Qt3DRender::QSceneLoader::Status</db:link></db:type> <db:emphasis role="bold">status</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">statusChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qsceneloader.xml#Status-enum">Qt3DRender::QSceneLoader::Status</db:link></db:type> <db:emphasis>status</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qsceneloader.xml#Status-enum">Qt3DRender::QSceneLoader::Status</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSceneLoader">
<db:title>[explicit] QSceneLoader::QSceneLoader(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>The constructor creates an instance with the specified <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="component">
<db:title>Qt3DCore::QComponent *QSceneLoader::component(const QString &amp;<db:emphasis>entityName</db:emphasis>, Qt3DRender::QSceneLoader::ComponentType <db:emphasis>componentType</db:emphasis>) const</db:title>
<db:para>Returns a component matching <db:code role="parameter">componentType</db:code> of a loaded entity with an objectName matching the <db:code role="parameter">entityName</db:code>. If the entity has multiple matching components, the first match in the component list of the entity is returned. If there is no match, a null pointer is returned.</db:para>
</db:section>
<db:section xml:id="entity">
<db:title>Qt3DCore::QEntity *QSceneLoader::entity(const QString &amp;<db:emphasis>entityName</db:emphasis>) const</db:title>
<db:para>Returns a loaded entity with an <db:code>objectName</db:code> matching the <db:code role="parameter">entityName</db:code> parameter. If multiple entities have the same name, it is undefined which one of them is returned, but it will always be the same one.</db:para>
</db:section>
<db:section xml:id="entityNames">
<db:title>QStringList QSceneLoader::entityNames() const</db:title>
<db:para>Returns a list of the <db:code>objectNames</db:code> of the loaded entities.</db:para>
</db:section>
</db:section>
</db:article>
