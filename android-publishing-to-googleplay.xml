<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Publishing to Google Play</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="android-3rdparty-libs.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Third-party Android Libraries"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="android-platform-notes.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="Android Platform Notes"/></db:extendedlink>
<db:abstract>
<db:para>Provides instructions to prepare your application for publishing.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:link xlink:href="android.xml">Qt for Android</db:link> provides a complete solution to develop, build, and package your applications for Android. Most of these tasks, especially packaging and deployment are handled by Qt Creator providing rich developer experience.</db:para>
<db:para>Every time you run the application using Qt Creator, an Android Application Package (APK) is created and deployed onto the target of your choice (device or emulator). With few minor changes to packaging settings, you can publish your application on Google Play. The following instructions guide you to create an .apk that can go live on Google Play:</db:para>
<db:orderedlist numeration="arabic">
<db:listitem>
<db:para>Open your project with Qt Creator 4.11 or later choosing a Release Build.</db:para>
</db:listitem>
<db:listitem>
<db:para>Select <db:guilabel>Projects</db:guilabel> &gt; <db:guilabel>Build</db:guilabel> &gt; <db:guilabel>Build Android APK</db:guilabel> &gt; <db:guilabel>Create Templates</db:guilabel> to create the Android package template files such as AndroidManifest.xml which is the main file of concern here.</db:para>
</db:listitem>
<db:listitem>
<db:para>Check for the following settings in AndroidManifest.xml:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Set <db:guilabel>Minimum required SDK</db:guilabel> to API 23 or later.</db:para>
</db:listitem>
<db:listitem>
<db:para>Set <db:guilabel>Application name</db:guilabel> and <db:guilabel>Application icon</db:guilabel>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Check the <db:guilabel>Permissions</db:guilabel> list has all the required permissions.</db:para>
</db:listitem>
<db:listitem>
<db:para>Check the <db:guilabel>Features</db:guilabel> list has the software or hardware features that your application depends on, such as GPS or NFC.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>For more information, see <db:link xlink:href="http://doc.qt.io/qtcreator/creator-deploying-android.html#editing-manifest-files">editing the Manifest Files in Qt Creator</db:link>.</db:para>
<db:note>
<db:para>By default, Qt adds the permissions and the features based on the module dependencies of your application. If you do not want these default permissions and features, either deselect the checkboxes <db:guilabel>Include default permissions for Qt modules</db:guilabel> and <db:guilabel>Include default features for Qt modules</db:guilabel>, or remove the following part from the AndroidManifest.xml file:</db:para>
</db:note>
<db:programlisting language="cpp" role="bad">&amp;lt;!-- The following comment will be replaced upon deployment with default permissions based on the dependencies of the application.
     Remove the comment if you do not require these default permissions. --&amp;gt;
&amp;lt;!-- %%INSERT_PERMISSIONS --&amp;gt;

&amp;lt;!-- The following comment will be replaced upon deployment with default features based on the dependencies of the application.
     Remove the comment if you do not require these default features. --&amp;gt;
&amp;lt;!-- %%INSERT_FEATURES --&amp;gt;
</db:programlisting>
<db:para>For information on the manifest XML format, see <db:link xlink:href="http://developer.android.com/guide/topics/manifest/manifest-intro.html">Android: App Manifest</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Set up a <db:link xlink:href="https://developer.android.com/training/articles/keystore">keystore</db:link> to sign your .apk file. You can create a new keystore if you do not have one. For more information, see <db:link xlink:href="http://doc.qt.io/qtcreator/creator-deploying-android.html#specifying-settings-for-packages">Specifying Settings for Packages in Qt Creator</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Locate the generated package:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>For APK packages, locate the .apk package at:</db:para>
<db:programlisting language="cpp" role="bad">&amp;lt;$BUILD_DIR&amp;gt;/android-build/build/outputs/apk/release/android-build-release.apk
</db:programlisting>
<db:note>
<db:para>In Qt Creator, select <db:guilabel>Projects</db:guilabel> &gt; <db:guilabel>Build</db:guilabel> &gt; <db:guilabel>Build Steps</db:guilabel> &gt; <db:guilabel>Build Android APK</db:guilabel> &gt; <db:guilabel>Open package location after build</db:guilabel> to build the application's .apk and open the directory containing the package.</db:para>
</db:note>
</db:listitem>
<db:listitem>
<db:para>For AAB packages, select <db:guilabel>Projects</db:guilabel> &gt; <db:guilabel>Build</db:guilabel> &gt; <db:guilabel>Build Steps</db:guilabel> &gt; <db:guilabel>Build Android APK</db:guilabel> &gt; <db:guilabel>Build .aab (Android App Bundle)</db:guilabel> for Qt Creator to generate the .aab file, then locate the package at:</db:para>
<db:programlisting language="cpp" role="bad">&amp;lt;$BUILD_DIR&amp;gt;/android-build/build/outputs/bundle/release/android-build-release.aab
</db:programlisting>
</db:listitem>
</db:itemizedlist>
</db:listitem>
<db:listitem>
<db:para>Log into the <db:link xlink:href="https://play.google.com/apps/publish">Google Play Developer Console</db:link> and upload either of .apk or .aab files, along with a description and screen captures resembling the usage of your application.</db:para>
</db:listitem>
</db:orderedlist>
<db:para>For more information on packaging, see <db:link xlink:href="deployment-android.xml">Deploying an Application on Android</db:link>.</db:para>
</db:article>
