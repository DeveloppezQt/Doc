<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>Event Classes</db:title>
<db:productname>QtGui</db:productname>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Classes that provide UI and input events.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="details"/>
<db:variablelist role="members">
<db:varlistentry>
<db:term><db:link xlink:href="qabstracteventdispatcher.xml" xlink:role="class">QAbstractEventDispatcher</db:link></db:term>
<db:listitem>
<db:para>The QAbstractEventDispatcher class provides an interface to manage Qt's event queue.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qactionevent.xml" xlink:role="class">QActionEvent</db:link></db:term>
<db:listitem>
<db:para>The QActionEvent class provides an event that is generated when a QAction is added, removed, or changed.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbasictimer.xml" xlink:role="class">QBasicTimer</db:link></db:term>
<db:listitem>
<db:para>The QBasicTimer class provides timer events for objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qchildevent.xml" xlink:role="class">QChildEvent</db:link></db:term>
<db:listitem>
<db:para>The QChildEvent class contains event parameters for child object events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcloseevent.xml" xlink:role="class">QCloseEvent</db:link></db:term>
<db:listitem>
<db:para>The QCloseEvent class contains parameters that describe a close event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcontextmenuevent.xml" xlink:role="class">QContextMenuEvent</db:link></db:term>
<db:listitem>
<db:para>The QContextMenuEvent class contains parameters that describe a context menu event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdragenterevent.xml" xlink:role="class">QDragEnterEvent</db:link></db:term>
<db:listitem>
<db:para>The QDragEnterEvent class provides an event which is sent to a widget when a drag and drop action enters it.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdragleaveevent.xml" xlink:role="class">QDragLeaveEvent</db:link></db:term>
<db:listitem>
<db:para>The QDragLeaveEvent class provides an event that is sent to a widget when a drag and drop action leaves it.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdragmoveevent.xml" xlink:role="class">QDragMoveEvent</db:link></db:term>
<db:listitem>
<db:para>The QDragMoveEvent class provides an event which is sent while a drag and drop action is in progress.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdropevent.xml" xlink:role="class">QDropEvent</db:link></db:term>
<db:listitem>
<db:para>The QDropEvent class provides an event which is sent when a drag and drop action is completed.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdynamicpropertychangeevent.xml" xlink:role="class">QDynamicPropertyChangeEvent</db:link></db:term>
<db:listitem>
<db:para>The QDynamicPropertyChangeEvent class contains event parameters for dynamic property change events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qenterevent.xml" xlink:role="class">QEnterEvent</db:link></db:term>
<db:listitem>
<db:para>The QEnterEvent class contains parameters that describe an enter event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qevent.xml" xlink:role="class">QEvent</db:link></db:term>
<db:listitem>
<db:para>The QEvent class is the base class of all event classes. Event objects contain event parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qexposeevent.xml" xlink:role="class">QExposeEvent</db:link></db:term>
<db:listitem>
<db:para>The QExposeEvent class contains event parameters for expose events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfileopenevent.xml" xlink:role="class">QFileOpenEvent</db:link></db:term>
<db:listitem>
<db:para>The QFileOpenEvent class provides an event that will be sent when there is a request to open a file or a URL.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfocusevent.xml" xlink:role="class">QFocusEvent</db:link></db:term>
<db:listitem>
<db:para>The QFocusEvent class contains event parameters for widget focus events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpevent.xml" xlink:role="class">QHelpEvent</db:link></db:term>
<db:listitem>
<db:para>The QHelpEvent class provides an event that is used to request helpful information about a particular point in a widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhideevent.xml" xlink:role="class">QHideEvent</db:link></db:term>
<db:listitem>
<db:para>The QHideEvent class provides an event which is sent after a widget is hidden.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhoverevent.xml" xlink:role="class">QHoverEvent</db:link></db:term>
<db:listitem>
<db:para>The QHoverEvent class contains parameters that describe a mouse event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qicondragevent.xml" xlink:role="class">QIconDragEvent</db:link></db:term>
<db:listitem>
<db:para>The QIconDragEvent class indicates that a main icon drag has begun.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qinputevent.xml" xlink:role="class">QInputEvent</db:link></db:term>
<db:listitem>
<db:para>The QInputEvent class is the base class for events that describe user input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qinputmethodevent.xml" xlink:role="class">QInputMethodEvent</db:link></db:term>
<db:listitem>
<db:para>The QInputMethodEvent class provides parameters for input method events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qkeyevent.xml" xlink:role="class">QKeyEvent</db:link></db:term>
<db:listitem>
<db:para>The QKeyEvent class describes a key event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmouseevent.xml" xlink:role="class">QMouseEvent</db:link></db:term>
<db:listitem>
<db:para>The QMouseEvent class contains parameters that describe a mouse event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmoveevent.xml" xlink:role="class">QMoveEvent</db:link></db:term>
<db:listitem>
<db:para>The QMoveEvent class contains event parameters for move events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpaintevent.xml" xlink:role="class">QPaintEvent</db:link></db:term>
<db:listitem>
<db:para>The QPaintEvent class contains event parameters for paint events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qresizeevent.xml" xlink:role="class">QResizeEvent</db:link></db:term>
<db:listitem>
<db:para>The QResizeEvent class contains event parameters for resize events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscrollevent.xml" xlink:role="class">QScrollEvent</db:link></db:term>
<db:listitem>
<db:para>The QScrollEvent class is send when scrolling.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscrollprepareevent.xml" xlink:role="class">QScrollPrepareEvent</db:link></db:term>
<db:listitem>
<db:para>The QScrollPrepareEvent class is send in preparation of a scrolling.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qshortcutevent.xml" xlink:role="class">QShortcutEvent</db:link></db:term>
<db:listitem>
<db:para>The QShortcutEvent class provides an event which is generated when the user presses a key combination.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qshowevent.xml" xlink:role="class">QShowEvent</db:link></db:term>
<db:listitem>
<db:para>The QShowEvent class provides an event that is sent when a widget is shown.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstatustipevent.xml" xlink:role="class">QStatusTipEvent</db:link></db:term>
<db:listitem>
<db:para>The QStatusTipEvent class provides an event that is used to show messages in a status bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtabletevent.xml" xlink:role="class">QTabletEvent</db:link></db:term>
<db:listitem>
<db:para>The QTabletEvent class contains parameters that describe a Tablet event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimer.xml" xlink:role="class">QTimer</db:link></db:term>
<db:listitem>
<db:para>The QTimer class provides repetitive and single-shot timers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimerevent.xml" xlink:role="class">QTimerEvent</db:link></db:term>
<db:listitem>
<db:para>The QTimerEvent class contains parameters that describe a timer event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtouchevent.xml" xlink:role="class">QTouchEvent</db:link></db:term>
<db:listitem>
<db:para>The QTouchEvent class contains parameters that describe a touch event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwhatsthisclickedevent.xml" xlink:role="class">QWhatsThisClickedEvent</db:link></db:term>
<db:listitem>
<db:para>The QWhatsThisClickedEvent class provides an event that can be used to handle hyperlinks in a &quot;What's This?&quot; text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwheelevent.xml" xlink:role="class">QWheelEvent</db:link></db:term>
<db:listitem>
<db:para>The QWheelEvent class contains parameters that describe a wheel event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwindowstatechangeevent.xml" xlink:role="class">QWindowStateChangeEvent</db:link></db:term>
<db:listitem>
<db:para>The QWindowStateChangeEvent class provides the window state before a window state change.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:article>
