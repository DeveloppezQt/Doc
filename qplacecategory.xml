<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QPlaceCategory Class</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qplacecategory.xml">QPlaceCategory</db:link> class represents a category that a <db:link xlink:href="qplace.xml">QPlace</db:link> can be associated with.</db:para>
<db:para>This class was introduced in Qt 5.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPlaceCategory</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += location</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QPlaceCategory is part of <db:simplelist><db:member>QtLocation-places</db:member><db:member>QtLocation-places-data</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Categories are used to search for places based on the categories they are associated with. The list/tree of available categories can be obtained from <db:link xlink:href="qplacemanager.xml">QPlaceManager</db:link>. The <db:link xlink:href="qplacesearchrequest.xml#setCategories">QPlaceSearchRequest::setCategories</db:link>() function can be used to limit the search results to places with the specified categories.</db:para>
<db:para>If the <db:link xlink:href="qgeoserviceprovider.xml">QGeoServiceProvider</db:link> supports it, categories can be created and removed. This functionality is available in the <db:link xlink:href="qplacemanager.xml">QPlaceManager</db:link> class.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QPlaceCategory">
<db:title>QPlaceCategory::QPlaceCategory()</db:title>
<db:para>Constructs a category.</db:para>
</db:section>
<db:section xml:id="QPlaceCategory-1">
<db:title>QPlaceCategory::QPlaceCategory(const QPlaceCategory &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a category which is a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QPlaceCategory">
<db:title>[virtual noexcept] QPlaceCategory::~QPlaceCategory()</db:title>
<db:para>Destroys the category.</db:para>
</db:section>
<db:section xml:id="categoryId">
<db:title>QString QPlaceCategory::categoryId() const</db:title>
<db:para>Returns the identifier of the category. The category identifier is a string which uniquely identifies this category within a particular <db:link xlink:href="qplacemanager.xml">QPlaceManager</db:link>. The identifier is only meaningful to the <db:link xlink:href="qplacemanager.xml">QPlaceManager</db:link> that generated it and is not transferable between managers.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacecategory.xml#setCategoryId">setCategoryId</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="icon">
<db:title>QPlaceIcon QPlaceCategory::icon() const</db:title>
<db:para>Returns the icon associated with the category.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacecategory.xml#setIcon">setIcon</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isEmpty">
<db:title>bool QPlaceCategory::isEmpty() const</db:title>
<db:para>Returns a boolean indicating whether the all the fields of the place category are empty or not.</db:para>
</db:section>
<db:section xml:id="name">
<db:title>QString QPlaceCategory::name() const</db:title>
<db:para>Returns the name of category.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacecategory.xml#setName">setName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCategoryId">
<db:title>void QPlaceCategory::setCategoryId(const QString &amp;<db:emphasis>identifier</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">identifier</db:code> of the category.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacecategory.xml#categoryId">categoryId</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setIcon">
<db:title>void QPlaceCategory::setIcon(const QPlaceIcon &amp;<db:emphasis>icon</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">icon</db:code> of the category.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacecategory.xml#icon">icon</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setName">
<db:title>void QPlaceCategory::setName(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">name</db:code> of the category.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacecategory.xml#name">name</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setVisibility">
<db:title>void QPlaceCategory::setVisibility(QLocation::Visibility <db:emphasis>visibility</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">visibility</db:code> of the category.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacecategory.xml#visibility">visibility</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="visibility">
<db:title>QLocation::Visibility QPlaceCategory::visibility() const</db:title>
<db:para>Returns the visibility of the category.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacecategory.xml#setVisibility">setVisibility</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QPlaceCategory::operator!=(const QPlaceCategory &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if <db:code role="parameter">other</db:code> is not equal to this category; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QPlaceCategory &amp;QPlaceCategory::operator=(const QPlaceCategory &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns <db:code role="parameter">other</db:code> to this category and returns a reference to this category.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QPlaceCategory::operator==(const QPlaceCategory &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if <db:code role="parameter">other</db:code> is equal to this category; otherwise returns false.</db:para>
</db:section>
</db:section>
</db:article>
