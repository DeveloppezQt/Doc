<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ShapePath QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Describes a Path and associated properties for stroking and filling.</db:para>
<db:para>This type was introduced in Qt 5.10.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Shapes 1.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.10</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Path</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>ShapePath is part of <db:simplelist><db:member>qtquick-paths</db:member><db:member>qtquick-views</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qml-qtquick-shapes-shape.xml">Shape</db:link> contains one or more <db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link> elements. At least one <db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link> is necessary in order to have a Shape output anything visible. A <db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link> itself is a <db:link xlink:href="qml-qtquick-path.xml">Path</db:link> with additional properties describing the stroking and filling parameters, such as the stroke width and color, the fill color or gradient, join and cap styles, and so on. As with ordinary <db:link xlink:href="qml-qtquick-path.xml">Path</db:link> objects, <db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link> also contains a list of path elements like <db:link xlink:href="qml-qtquick-pathmove.xml">PathMove</db:link>, <db:link xlink:href="qml-qtquick-pathline.xml">PathLine</db:link>, <db:link xlink:href="qml-qtquick-pathcubic.xml">PathCubic</db:link>, <db:link xlink:href="qml-qtquick-pathquad.xml">PathQuad</db:link>, <db:link xlink:href="qml-qtquick-patharc.xml">PathArc</db:link>, together with a starting position.</db:para>
<db:para>Any property changes in these data sets will be bubble up and change the output of the Shape. This means that it is simple and easy to change, or even animate, the starting and ending position, control points, or any stroke or fill parameters using the usual QML bindings and animation types like <db:link xlink:href="qml-qtquick-numberanimation.xml">NumberAnimation</db:link>.</db:para>
<db:para>In the following example the line join style changes automatically based on the value of joinStyleIndex:</db:para>
<db:programlisting language="qml">ShapePath {
    strokeColor: &quot;black&quot;
    strokeWidth: 16
    fillColor: &quot;transparent&quot;
    capStyle: ShapePath.RoundCap

    property int joinStyleIndex: 0

    property variant styles: [
        ShapePath.BevelJoin,
        ShapePath.MiterJoin,
        ShapePath.RoundJoin
    ]

    joinStyle: styles[joinStyleIndex]

    startX: 30
    startY: 30
    PathLine { x: 100; y: 100 }
    PathLine { x: 30; y: 100 }
}
</db:programlisting>
<db:para>Once associated with a Shape, here is the output with a joinStyleIndex of 2 (<db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link>.RoundJoin):</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/visualpath-code-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-shapes-example.xml">Qt Quick Examples - Shapes</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-shapes-shape.xml">Shape</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="capStyle-prop">
<db:title>capStyle : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>capStyle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines how the end points of lines are drawn. The default value is ShapePath.SquareCap.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>ShapePath.FlatCap</db:para>
</db:td>
<db:td>
<db:para>A square line end that does not cover the end point of the line.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ShapePath.SquareCap</db:para>
</db:td>
<db:td>
<db:para>A square line end that covers the end point and extends beyond it by half the line width.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ShapePath.RoundCap</db:para>
</db:td>
<db:td>
<db:para>A rounded line end.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="dashOffset-prop">
<db:title>dashOffset : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>dashOffset</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the starting point on the dash pattern, measured in units used to specify the dash pattern.</db:para>
<db:para>The default value is 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpen.xml#setDashOffset">QPen::setDashOffset</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dashPattern-prop">
<db:title>dashPattern : list&lt;real&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;real&gt;</db:type>
<db:varname>dashPattern</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the dash pattern when <db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link>.<db:link xlink:href="qml-qtquick-shapes-shapepath.xml#strokeStyle-prop">strokeStyle</db:link> is set to <db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link>.DashLine. The pattern must be specified as an even number of positive entries where the entries 1, 3, 5... are the dashes and 2, 4, 6... are the spaces. The pattern is specified in units of the pen's width.</db:para>
<db:para>The default value is (4, 2), meaning a dash of 4 * <db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link>.<db:link xlink:href="qml-qtquick-shapes-shapepath.xml#strokeWidth-prop">strokeWidth</db:link> pixels followed by a space of 2 * <db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link>.<db:link xlink:href="qml-qtquick-shapes-shapepath.xml#strokeWidth-prop">strokeWidth</db:link> pixels.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpen.xml#setDashPattern">QPen::setDashPattern</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fillColor-prop">
<db:title>fillColor : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>fillColor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the fill color.</db:para>
<db:para>When set to transparent, no filling occurs.</db:para>
<db:para>The default value is white.</db:para>
</db:section>
<db:section xml:id="fillGradient-prop">
<db:title>fillGradient : ShapeGradient</db:title>
<db:fieldsynopsis>
<db:type>ShapeGradient</db:type>
<db:varname>fillGradient</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the fill gradient. By default no gradient is enabled and the value is null. In this case the fill uses a solid color based on the value of <db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link>.<db:link xlink:href="qml-qtquick-shapes-shapepath.xml#fillColor-prop">fillColor</db:link>.</db:para>
<db:para>When set, <db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link>.<db:link xlink:href="qml-qtquick-shapes-shapepath.xml#fillColor-prop">fillColor</db:link> is ignored and filling is done using one of the <db:link xlink:href="qml-qtquick-shapes-shapegradient.xml">ShapeGradient</db:link> subtypes.</db:para>
<db:note>
<db:para>The Gradient type cannot be used here. Rather, prefer using one of the advanced subtypes, like <db:link xlink:href="qml-qtquick-shapes-lineargradient.xml">LinearGradient</db:link>.</db:para>
</db:note>
</db:section>
<db:section xml:id="fillRule-prop">
<db:title>fillRule : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>fillRule</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the fill rule. The default value is ShapePath.OddEvenFill. For an explanation on fill rules, see <db:link xlink:href="qpainterpath.xml#setFillRule">QPainterPath::setFillRule</db:link>().</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>ShapePath.OddEvenFill</db:para>
</db:td>
<db:td>
<db:para>Odd-even fill rule.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ShapePath.WindingFill</db:para>
</db:td>
<db:td>
<db:para>Non-zero winding fill rule.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="joinStyle-prop">
<db:title>joinStyle : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>joinStyle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines how joins between two connected lines are drawn. The default value is ShapePath.BevelJoin.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>ShapePath.MiterJoin</db:para>
</db:td>
<db:td>
<db:para>The outer edges of the lines are extended to meet at an angle, and this area is filled.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ShapePath.BevelJoin</db:para>
</db:td>
<db:td>
<db:para>The triangular notch between the two lines is filled.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ShapePath.RoundJoin</db:para>
</db:td>
<db:td>
<db:para>A circular arc between the two lines is filled.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="miterLimit-prop">
<db:title>miterLimit : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>miterLimit</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>When <db:link xlink:href="qml-qtquick-shapes-shapepath.xml#joinStyle-prop">joinStyle</db:link> is set to ShapePath.MiterJoin, this property specifies how far the miter join can extend from the join point.</db:para>
<db:para>The default value is 2.</db:para>
</db:section>
<db:section xml:id="strokeColor-prop">
<db:title>strokeColor : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>strokeColor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the stroking color.</db:para>
<db:para>When set to transparent, no stroking occurs.</db:para>
<db:para>The default value is white.</db:para>
</db:section>
<db:section xml:id="strokeStyle-prop">
<db:title>strokeStyle : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>strokeStyle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the style of stroking. The default value is <db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link>.SolidLine.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link>.SolidLine - A plain line.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link>.DashLine - Dashes separated by a few pixels.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="strokeWidth-prop">
<db:title>strokeWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>strokeWidth</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the stroke width.</db:para>
<db:para>When set to a negative value, no stroking occurs.</db:para>
<db:para>The default value is 1.</db:para>
</db:section>
</db:section>
</db:article>
