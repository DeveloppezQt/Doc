<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGeoSatelliteInfo Class</db:title>
<db:productname>QtPositioning</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Positioning Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgeosatelliteinfo.xml">QGeoSatelliteInfo</db:link> class contains basic information about a satellite.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGeoSatelliteInfo</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Positioning)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Positioning)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += positioning</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGeoSatelliteInfo is part of <db:simplelist><db:member>QtPositioning-positioning</db:member><db:member>shared</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeosatelliteinfosource.xml">QGeoSatelliteInfoSource</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Attribute-enum">
<db:title>enum QGeoSatelliteInfo::Attribute</db:title>
<db:enumsynopsis>
<db:enumname>Attribute</db:enumname>
<db:enumitem>
<db:enumidentifier>Elevation</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Azimuth</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>Defines the attributes for the satellite information.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeosatelliteinfo.xml">QGeoSatelliteInfo</db:link></db:emphasis>::Elevation</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The elevation of the satellite, in degrees.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeosatelliteinfo.xml">QGeoSatelliteInfo</db:link></db:emphasis>::Azimuth</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The azimuth to true north, in degrees.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="SatelliteSystem-enum">
<db:title>enum QGeoSatelliteInfo::SatelliteSystem</db:title>
<db:enumsynopsis>
<db:enumname>SatelliteSystem</db:enumname>
<db:enumitem>
<db:enumidentifier>Undefined</db:enumidentifier>
<db:enumvalue>0x00</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>GPS</db:enumidentifier>
<db:enumvalue>0x01</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>GLONASS</db:enumidentifier>
<db:enumvalue>0x02</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>GALILEO</db:enumidentifier>
<db:enumvalue>0x03</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>BEIDOU</db:enumidentifier>
<db:enumvalue>0x04</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>QZSS</db:enumidentifier>
<db:enumvalue>0x05</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Multiple</db:enumidentifier>
<db:enumvalue>0xFF</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CustomType</db:enumidentifier>
<db:enumvalue>0x100</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>Defines the GNSS system of the satellite.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeosatelliteinfo.xml">QGeoSatelliteInfo</db:link></db:emphasis>::Undefined</db:code></db:para>
</db:td>
<db:td><db:code>0x00</db:code></db:td>
<db:td>
<db:para>Not defined.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeosatelliteinfo.xml">QGeoSatelliteInfo</db:link></db:emphasis>::GPS</db:code></db:para>
</db:td>
<db:td><db:code>0x01</db:code></db:td>
<db:td>
<db:para>Global Positioning System (USA).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeosatelliteinfo.xml">QGeoSatelliteInfo</db:link></db:emphasis>::GLONASS</db:code></db:para>
</db:td>
<db:td><db:code>0x02</db:code></db:td>
<db:td>
<db:para>Global Positioning System (Russia).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeosatelliteinfo.xml">QGeoSatelliteInfo</db:link></db:emphasis>::GALILEO</db:code></db:para>
</db:td>
<db:td><db:code>0x03</db:code></db:td>
<db:td>
<db:para>Global navigation satellite system (EU).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeosatelliteinfo.xml">QGeoSatelliteInfo</db:link></db:emphasis>::BEIDOU</db:code></db:para>
</db:td>
<db:td><db:code>0x04</db:code></db:td>
<db:td>
<db:para>BeiDou navigation satellite system (China).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeosatelliteinfo.xml">QGeoSatelliteInfo</db:link></db:emphasis>::QZSS</db:code></db:para>
</db:td>
<db:td><db:code>0x05</db:code></db:td>
<db:td>
<db:para>Quasi-Zenith Satellite System (Japan).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeosatelliteinfo.xml">QGeoSatelliteInfo</db:link></db:emphasis>::Multiple</db:code></db:para>
</db:td>
<db:td><db:code>0xFF</db:code></db:td>
<db:td>
<db:para>This type normally indicates that the information is received from a device that supports multiple satellite systems, and the satellite system is not explicitly specified. Depending on the data source, you might use other information to determine the actual system type. One example of the usage of this type is an NMEA $GNGSA message, which contains the IDs of the satellites being used, but does not explicitly mention their system types.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qgeosatelliteinfo.xml">QGeoSatelliteInfo</db:link></db:emphasis>::CustomType</db:code></db:para>
</db:td>
<db:td><db:code>0x100</db:code></db:td>
<db:td>
<db:para>The first type that can be used for user purposes. For example when reimplementing NMEA data parsing in <db:link xlink:href="qnmeasatelliteinfosource.xml">QNmeaSatelliteInfoSource</db:link>. User can add more types using <db:code>CustomType + 1</db:code>, <db:code>CustomType + 2</db:code> and so on.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGeoSatelliteInfo">
<db:title>QGeoSatelliteInfo::QGeoSatelliteInfo()</db:title>
<db:constructorsynopsis>
<db:methodname>QGeoSatelliteInfo</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QGeoSatelliteInfo()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a satellite information object.</db:para>
</db:section>
<db:section xml:id="QGeoSatelliteInfo-1">
<db:title>QGeoSatelliteInfo::QGeoSatelliteInfo(const QGeoSatelliteInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QGeoSatelliteInfo</db:methodname>
<db:methodparam>
<db:type>const QGeoSatelliteInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QGeoSatelliteInfo(const QGeoSatelliteInfo &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a satellite information object with the values of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="QGeoSatelliteInfo-3">
<db:title>[since 6.2] QGeoSatelliteInfo::QGeoSatelliteInfo(QGeoSatelliteInfo &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QGeoSatelliteInfo</db:methodname>
<db:methodparam>
<db:type>QGeoSatelliteInfo &amp;&amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">move-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">3</db:synopsisinfo>
<db:synopsisinfo role="signature">QGeoSatelliteInfo(QGeoSatelliteInfo &amp;&amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a satellite information object by moving from <db:code role="parameter">other</db:code>.</db:para>
<db:para>Note that a moved-from <db:link xlink:href="qgeosatelliteinfo.xml">QGeoSatelliteInfo</db:link> can only be destroyed or assigned to. The effect of calling other functions than the destructor or one of the assignment operators is undefined.</db:para>
<db:para>This function was introduced in Qt 6.2.</db:para>
</db:section>
<db:section xml:id="dtor.QGeoSatelliteInfo">
<db:title>QGeoSatelliteInfo::~QGeoSatelliteInfo()</db:title>
<db:destructorsynopsis>
<db:methodname>~QGeoSatelliteInfo</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QGeoSatelliteInfo()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys a satellite information object.</db:para>
</db:section>
<db:section xml:id="attribute">
<db:title>qreal QGeoSatelliteInfo::attribute(QGeoSatelliteInfo::Attribute <db:emphasis>attribute</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>qreal</db:type>
<db:methodname>attribute</db:methodname>
<db:methodparam>
<db:type>QGeoSatelliteInfo::Attribute</db:type>
<db:parameter>attribute</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal attribute(QGeoSatelliteInfo::Attribute attribute) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the value of the specified <db:code role="parameter">attribute</db:code> as a qreal value.</db:para>
<db:para>Returns -1 if the value has not been set.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeosatelliteinfo.xml#hasAttribute">hasAttribute</db:link>()</db:member>
<db:member><db:link xlink:href="qgeosatelliteinfo.xml#setAttribute">setAttribute</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hasAttribute">
<db:title>bool QGeoSatelliteInfo::hasAttribute(QGeoSatelliteInfo::Attribute <db:emphasis>attribute</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>hasAttribute</db:methodname>
<db:methodparam>
<db:type>QGeoSatelliteInfo::Attribute</db:type>
<db:parameter>attribute</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool hasAttribute(QGeoSatelliteInfo::Attribute attribute) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if the specified <db:code role="parameter">attribute</db:code> is present in this update.</db:para>
</db:section>
<db:section xml:id="removeAttribute">
<db:title>void QGeoSatelliteInfo::removeAttribute(QGeoSatelliteInfo::Attribute <db:emphasis>attribute</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>removeAttribute</db:methodname>
<db:methodparam>
<db:type>QGeoSatelliteInfo::Attribute</db:type>
<db:parameter>attribute</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void removeAttribute(QGeoSatelliteInfo::Attribute attribute)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Removes the specified <db:code role="parameter">attribute</db:code> and its value.</db:para>
</db:section>
<db:section xml:id="satelliteIdentifier">
<db:title>int QGeoSatelliteInfo::satelliteIdentifier() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>satelliteIdentifier</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">satelliteIdentifier</db:synopsisinfo>
<db:synopsisinfo role="signature">int satelliteIdentifier() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the satellite identifier number.</db:para>
<db:para>The satellite identifier number can be used to identify a satellite within the satellite system.</db:para>
<db:para>The actual value may vary, depending on the platform and the selected backend.</db:para>
<db:para>For example, if <db:emphasis>nmea</db:emphasis> plugin is used, the satellite identifier for GPS satellite system represents the PRN (Pseudo-random noise) number, and the satellite identifier for GLONASS satellite system represents the slot number.</db:para>
<db:para>For NMEA-based backends the satellite identifier can be used to determine the satellite system type if it is not available from other sources. You can refer to <db:link xlink:href="https://gpsd.gitlab.io/gpsd/NMEA.html#_satellite_ids">satellite IDs list</db:link> to check the ID ranges for different satellite systems.</db:para>
<db:note>
<db:para>Depending on the platform and the selected backend, the satellite identifier ranges for different satellite systems may intersect. To uniquely identify a satellite, a combination of satelliteIndetifier() and <db:link xlink:href="qgeosatelliteinfo.xml#satelliteSystem">satelliteSystem</db:link>() must be used.</db:para>
</db:note>
<db:note>
<db:para>Getter function for property satelliteIdentifier. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeosatelliteinfo.xml#setSatelliteIdentifier">setSatelliteIdentifier</db:link>()</db:member>
<db:member><db:link xlink:href="qgeosatelliteinfo.xml#satelliteSystem">satelliteSystem</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="satelliteSystem">
<db:title>QGeoSatelliteInfo::SatelliteSystem QGeoSatelliteInfo::satelliteSystem() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QGeoSatelliteInfo::SatelliteSystem</db:type>
<db:methodname>satelliteSystem</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">satelliteSystem</db:synopsisinfo>
<db:synopsisinfo role="signature">QGeoSatelliteInfo::SatelliteSystem satelliteSystem() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the Satellite System (GPS, GLONASS, ...)</db:para>
<db:note>
<db:para>This value can be used together with <db:link xlink:href="qgeosatelliteinfo.xml#satelliteIdentifier">satelliteIdentifier</db:link>() to uniquely identify a satellite.</db:para>
</db:note>
<db:note>
<db:para>Getter function for property satelliteSystem. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeosatelliteinfo.xml#setSatelliteSystem">setSatelliteSystem</db:link>()</db:member>
<db:member><db:link xlink:href="qgeosatelliteinfo.xml#satelliteIdentifier">satelliteIdentifier</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setAttribute">
<db:title>void QGeoSatelliteInfo::setAttribute(QGeoSatelliteInfo::Attribute <db:emphasis>attribute</db:emphasis>, qreal <db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setAttribute</db:methodname>
<db:methodparam>
<db:type>QGeoSatelliteInfo::Attribute</db:type>
<db:parameter>attribute</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setAttribute(QGeoSatelliteInfo::Attribute attribute, qreal value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the value for <db:code role="parameter">attribute</db:code> to <db:code role="parameter">value</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeosatelliteinfo.xml#attribute">attribute</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSatelliteIdentifier">
<db:title>void QGeoSatelliteInfo::setSatelliteIdentifier(int <db:emphasis>satId</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setSatelliteIdentifier</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>satId</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setSatelliteIdentifier(int satId)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the satellite identifier number to <db:code role="parameter">satId</db:code>.</db:para>
<db:para>The satellite identifier number can be used to identify a satellite within the satellite system.</db:para>
<db:para>The actual value may vary, depending on the platform and the selected backend.</db:para>
<db:para>For example, if <db:emphasis>nmea</db:emphasis> plugin is used, the satellite identifier for GPS satellite system represents the PRN (Pseudo-random noise) number, and the satellite identifier for GLONASS satellite system represents the slot number.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeosatelliteinfo.xml#satelliteIdentifier">satelliteIdentifier</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSatelliteSystem">
<db:title>void QGeoSatelliteInfo::setSatelliteSystem(QGeoSatelliteInfo::SatelliteSystem <db:emphasis>system</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setSatelliteSystem</db:methodname>
<db:methodparam>
<db:type>QGeoSatelliteInfo::SatelliteSystem</db:type>
<db:parameter>system</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setSatelliteSystem(QGeoSatelliteInfo::SatelliteSystem system)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the Satellite System (GPS, GLONASS, ...) to <db:code role="parameter">system</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeosatelliteinfo.xml#satelliteSystem">satelliteSystem</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSignalStrength">
<db:title>void QGeoSatelliteInfo::setSignalStrength(int <db:emphasis>signalStrength</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setSignalStrength</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>signalStrength</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setSignalStrength(int signalStrength)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the signal strength to <db:code role="parameter">signalStrength</db:code>, in decibels.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeosatelliteinfo.xml#signalStrength">signalStrength</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="signalStrength">
<db:title>int QGeoSatelliteInfo::signalStrength() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>signalStrength</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">signalStrength</db:synopsisinfo>
<db:synopsisinfo role="signature">int signalStrength() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the signal strength, or -1 if the value has not been set.</db:para>
<db:note>
<db:para>Getter function for property signalStrength. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeosatelliteinfo.xml#setSignalStrength">setSignalStrength</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QGeoSatelliteInfo &amp;QGeoSatelliteInfo::operator=(const QGeoSatelliteInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QGeoSatelliteInfo &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QGeoSatelliteInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QGeoSatelliteInfo &amp; operator=(const QGeoSatelliteInfo &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Assigns the values from <db:code role="parameter">other</db:code> to this object.</db:para>
</db:section>
<db:section xml:id="operator-eq-1">
<db:title>[since 6.2] QGeoSatelliteInfo &amp;QGeoSatelliteInfo::operator=(QGeoSatelliteInfo &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QGeoSatelliteInfo &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>QGeoSatelliteInfo &amp;&amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">move-assign</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QGeoSatelliteInfo &amp; operator=(QGeoSatelliteInfo &amp;&amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Move-assigns the value from <db:code role="parameter">other</db:code> to this object</db:para>
<db:para>Note that a moved-from <db:link xlink:href="qgeosatelliteinfo.xml">QGeoSatelliteInfo</db:link> can only be destroyed or assigned to. The effect of calling other functions than the destructor or one of the assignment operators is undefined.</db:para>
<db:para>This function was introduced in Qt 6.2.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-not-eq">
<db:title>bool operator!=(const QGeoSatelliteInfo &amp;<db:emphasis>lhs</db:emphasis>, const QGeoSatelliteInfo &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>operator!=</db:methodname>
<db:methodparam>
<db:type>const QGeoSatelliteInfo &amp;</db:type>
<db:parameter>lhs</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QGeoSatelliteInfo &amp;</db:type>
<db:parameter>rhs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator!=(const QGeoSatelliteInfo &amp;lhs, const QGeoSatelliteInfo &amp;rhs)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if any of the parameters of the <db:code role="parameter">lhs</db:code> satellite are not the same as those of <db:code role="parameter">rhs</db:code>. Otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-lt-lt-1">
<db:title>QDataStream &amp;operator&lt;&lt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, const QGeoSatelliteInfo &amp;<db:emphasis>info</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QDataStream &amp;</db:type>
<db:methodname>operator&lt;&lt;</db:methodname>
<db:methodparam>
<db:type>QDataStream &amp;</db:type>
<db:parameter>stream</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QGeoSatelliteInfo &amp;</db:type>
<db:parameter>info</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QDataStream &amp; operator&lt;&lt;(QDataStream &amp;stream, const QGeoSatelliteInfo &amp;info)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Writes the given <db:code role="parameter">info</db:code> to the specified <db:code role="parameter">stream</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="datastreamformat.xml">Serializing Qt Data Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool operator==(const QGeoSatelliteInfo &amp;<db:emphasis>lhs</db:emphasis>, const QGeoSatelliteInfo &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>const QGeoSatelliteInfo &amp;</db:type>
<db:parameter>lhs</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QGeoSatelliteInfo &amp;</db:type>
<db:parameter>rhs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(const QGeoSatelliteInfo &amp;lhs, const QGeoSatelliteInfo &amp;rhs)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if all the parameters of the <db:code role="parameter">lhs</db:code> satellite are the same as those of <db:code role="parameter">rhs</db:code>. Otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-gt-gt">
<db:title>QDataStream &amp;operator&gt;&gt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, QGeoSatelliteInfo &amp;<db:emphasis>info</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QDataStream &amp;</db:type>
<db:methodname>operator&gt;&gt;</db:methodname>
<db:methodparam>
<db:type>QDataStream &amp;</db:type>
<db:parameter>stream</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QGeoSatelliteInfo &amp;</db:type>
<db:parameter>info</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QDataStream &amp; operator&gt;&gt;(QDataStream &amp;stream, QGeoSatelliteInfo &amp;info)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reads satellite information from the specified <db:code role="parameter">stream</db:code> into the given <db:code role="parameter">info</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="datastreamformat.xml">Serializing Qt Data Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
