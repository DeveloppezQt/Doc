<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSql Namespace</db:title>
<db:productname>QtSql</db:productname>
<db:edition>Qt 5.15.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt SQL Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qsql.xml">QSql</db:link> namespace contains miscellaneous identifiers used throughout the Qt SQL module.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSql</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += sql</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSql is part of <db:simplelist><db:member><db:link xlink:href="database.xml">Database Classes</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtsql-index.xml">Qt SQL</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="type-documentation">
<db:title>Type Documentation</db:title>
<db:section xml:id="Location-enum">
<db:title>enum QSql::Location</db:title>
<db:enumsynopsis>
<db:enumname>Location</db:enumname>
<db:enumitem>
<db:enumidentifier>BeforeFirstRow</db:enumidentifier>
<db:enumvalue>-1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AfterLastRow</db:enumidentifier>
<db:enumvalue>-2</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum type describes special SQL navigation locations:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::BeforeFirstRow</db:code></db:para>
</db:td>
<db:td><db:code>-1</db:code></db:td>
<db:td>
<db:para>Before the first record.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::AfterLastRow</db:code></db:para>
</db:td>
<db:td><db:code>-2</db:code></db:td>
<db:td>
<db:para>After the last record.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsqlquery.xml#at">QSqlQuery::at</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="NumericalPrecisionPolicy-enum">
<db:title>enum QSql::NumericalPrecisionPolicy</db:title>
<db:enumsynopsis>
<db:enumname>NumericalPrecisionPolicy</db:enumname>
<db:enumitem>
<db:enumidentifier>LowPrecisionInt32</db:enumidentifier>
<db:enumvalue>0x01</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>LowPrecisionInt64</db:enumidentifier>
<db:enumvalue>0x02</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>LowPrecisionDouble</db:enumidentifier>
<db:enumvalue>0x04</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>HighPrecision</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>Numerical values in a database can have precisions greater than their corresponding C++ types. This enum lists the policies for representing such values in the application.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::LowPrecisionInt32</db:code></db:para>
</db:td>
<db:td><db:code>0x01</db:code></db:td>
<db:td>
<db:para>Force 32bit integer values. In case of floating point numbers, the fractional part is silently discarded.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::LowPrecisionInt64</db:code></db:para>
</db:td>
<db:td><db:code>0x02</db:code></db:td>
<db:td>
<db:para>Force 64bit integer values. In case of floating point numbers, the fractional part is silently discarded.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::LowPrecisionDouble</db:code></db:para>
</db:td>
<db:td><db:code>0x04</db:code></db:td>
<db:td>
<db:para>Force <db:code>double</db:code> values. This is the default policy.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::HighPrecision</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Strings will be used to preserve precision.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Note: The actual behaviour if an overflow occurs is driver specific. The Oracle database just returns an error in this case.</db:para>
</db:section>
<db:section xml:id="ParamTypeFlag-enum">
<db:title>enum QSql::ParamTypeFlag</db:title>
<db:bridgehead renderas="sect2">flags QSql::ParamType</db:bridgehead>
<db:enumsynopsis>
<db:enumname>ParamTypeFlag</db:enumname>
<db:enumitem>
<db:enumidentifier>In</db:enumidentifier>
<db:enumvalue>0x00000001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Out</db:enumidentifier>
<db:enumvalue>0x00000002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>InOut</db:enumidentifier>
<db:enumvalue>In | Out</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Binary</db:enumidentifier>
<db:enumvalue>0x00000004</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:typedefsynopsis>
<db:typedefname>QSql::ParamType</db:typedefname>
</db:typedefsynopsis>
<db:para>This enum is used to specify the type of a bind parameter.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::In</db:code></db:para>
</db:td>
<db:td><db:code>0x00000001</db:code></db:td>
<db:td>
<db:para>The bind parameter is used to put data into the database.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::Out</db:code></db:para>
</db:td>
<db:td><db:code>0x00000002</db:code></db:td>
<db:td>
<db:para>The bind parameter is used to receive data from the database.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::InOut</db:code></db:para>
</db:td>
<db:td><db:code>In | Out</db:code></db:td>
<db:td>
<db:para>The bind parameter is used to put data into the database; it will be overwritten with output data on executing a query.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::Binary</db:code></db:para>
</db:td>
<db:td><db:code>0x00000004</db:code></db:td>
<db:td>
<db:para>This must be OR'd with one of the other flags if you want to indicate that the data being transferred is raw binary data.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>ParamType</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;ParamTypeFlag&gt;. </db:code>It stores an OR combination of <db:code>ParamTypeFlag</db:code> values.</db:para>
</db:section>
<db:section xml:id="TableType-enum">
<db:title>enum QSql::TableType</db:title>
<db:enumsynopsis>
<db:enumname>TableType</db:enumname>
<db:enumitem>
<db:enumidentifier>Tables</db:enumidentifier>
<db:enumvalue>0x01</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SystemTables</db:enumidentifier>
<db:enumvalue>0x02</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Views</db:enumidentifier>
<db:enumvalue>0x04</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AllTables</db:enumidentifier>
<db:enumvalue>0xff</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum type describes types of SQL tables.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::Tables</db:code></db:para>
</db:td>
<db:td><db:code>0x01</db:code></db:td>
<db:td>
<db:para>All the tables visible to the user.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::SystemTables</db:code></db:para>
</db:td>
<db:td><db:code>0x02</db:code></db:td>
<db:td>
<db:para>Internal tables used by the database.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::Views</db:code></db:para>
</db:td>
<db:td><db:code>0x04</db:code></db:td>
<db:td>
<db:para>All the views visible to the user.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsql.xml">QSql</db:link></db:emphasis>::AllTables</db:code></db:para>
</db:td>
<db:td><db:code>0xff</db:code></db:td>
<db:td>
<db:para>All of the above.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
</db:article>
