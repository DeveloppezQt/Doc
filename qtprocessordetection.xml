<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>&lt;QtProcessorDetection&gt; - Architecture-specific Macro Definitions</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The &lt;QtProcessorDetection&gt; header file includes various architecture-specific macros.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QtProcessorDetection</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>&lt;QtProcessorDetection&gt; is part of <db:simplelist><db:member>funclists</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The &lt;QtProcessorDetection&gt; header file declares a range of macros (Q_PROCESSOR_*) that are defined if the application is compiled for specified processor architectures. For example, the <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_X86">Q_PROCESSOR_X86</db:link> macro is defined if the application is compiled for x86 processors.</db:para>
<db:para>The purpose of these macros is to enable programmers to add architecture-specific code to their application.</db:para>
</db:section>
<db:section xml:id="macro-documentation">
<db:title>Macro Documentation</db:title>
<db:section xml:id="QT_POINTER_SIZE">
<db:title>QT_POINTER_SIZE</db:title>
<db:methodsynopsis>
<db:methodname>QT_POINTER_SIZE</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">QT_POINTER_SIZE</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Expands to the size of a pointer in bytes (4 or 8). This is equivalent to sizeof(void *) but can be used in a preprocessor directive.</db:para>
</db:section>
<db:section xml:id="Q_BIG_ENDIAN">
<db:title>Q_BIG_ENDIAN</db:title>
<db:methodsynopsis>
<db:methodname>Q_BIG_ENDIAN</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_BIG_ENDIAN</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This macro represents a value you can compare to the macro <db:link xlink:href="qtprocessordetection.xml#Q_BYTE_ORDER">Q_BYTE_ORDER</db:link> to determine the endian-ness of your system. In a big-endian system, the most significant byte is stored at the lowest address. The other bytes follow in decreasing order of significance.</db:para>
<db:programlisting language="cpp">#if Q_BYTE_ORDER == Q_BIG_ENDIAN
...
#endif

</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtprocessordetection.xml#Q_BYTE_ORDER">Q_BYTE_ORDER</db:link></db:member>
<db:member><db:link xlink:href="qtprocessordetection.xml#Q_LITTLE_ENDIAN">Q_LITTLE_ENDIAN</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_BYTE_ORDER">
<db:title>Q_BYTE_ORDER</db:title>
<db:methodsynopsis>
<db:methodname>Q_BYTE_ORDER</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_BYTE_ORDER</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This macro can be used to determine the byte order your system uses for storing data in memory. i.e., whether your system is little-endian or big-endian. It is set by Qt to one of the macros <db:link xlink:href="qtprocessordetection.xml#Q_LITTLE_ENDIAN">Q_LITTLE_ENDIAN</db:link> or <db:link xlink:href="qtprocessordetection.xml#Q_BIG_ENDIAN">Q_BIG_ENDIAN</db:link>. You normally won't need to worry about endian-ness, but you might, for example if you need to know which byte of an integer or UTF-16 character is stored in the lowest address. Endian-ness is important in networking, where computers with different values for Q_BYTE_ORDER must pass data back and forth.</db:para>
<db:para>Use this macro as in the following examples.</db:para>
<db:programlisting language="cpp">#if Q_BYTE_ORDER == Q_BIG_ENDIAN
...
#endif

or

#if Q_BYTE_ORDER == Q_LITTLE_ENDIAN
...
#endif

</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtprocessordetection.xml#Q_BIG_ENDIAN">Q_BIG_ENDIAN</db:link></db:member>
<db:member><db:link xlink:href="qtprocessordetection.xml#Q_LITTLE_ENDIAN">Q_LITTLE_ENDIAN</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_LITTLE_ENDIAN">
<db:title>Q_LITTLE_ENDIAN</db:title>
<db:methodsynopsis>
<db:methodname>Q_LITTLE_ENDIAN</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_LITTLE_ENDIAN</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This macro represents a value you can compare to the macro <db:link xlink:href="qtprocessordetection.xml#Q_BYTE_ORDER">Q_BYTE_ORDER</db:link> to determine the endian-ness of your system. In a little-endian system, the least significant byte is stored at the lowest address. The other bytes follow in increasing order of significance.</db:para>
<db:programlisting language="cpp">#if Q_BYTE_ORDER == Q_LITTLE_ENDIAN
...
#endif

</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtprocessordetection.xml#Q_BYTE_ORDER">Q_BYTE_ORDER</db:link></db:member>
<db:member><db:link xlink:href="qtprocessordetection.xml#Q_BIG_ENDIAN">Q_BIG_ENDIAN</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_X86">
<db:title>Q_PROCESSOR_X86</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_X86</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_X86</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for x86 processors. Qt currently supports two x86 variants: <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_X86_32">Q_PROCESSOR_X86_32</db:link> and <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_X86_64">Q_PROCESSOR_X86_64</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_S390">
<db:title>Q_PROCESSOR_S390</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_S390</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_S390</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for S/390 processors. Qt supports one optional variant of S/390: <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_S390_X">Q_PROCESSOR_S390_X</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_ALPHA">
<db:title>Q_PROCESSOR_ALPHA</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_ALPHA</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_ALPHA</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for Alpha processors.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_ARM">
<db:title>Q_PROCESSOR_ARM</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_ARM</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_ARM</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for ARM processors. Qt currently supports three optional ARM revisions: <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_ARM_V5">Q_PROCESSOR_ARM_V5</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_ARM_V6">Q_PROCESSOR_ARM_V6</db:link>, and <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_ARM_V7">Q_PROCESSOR_ARM_V7</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_ARM_V5">
<db:title>Q_PROCESSOR_ARM_V5</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_ARM_V5</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_ARM_V5</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for ARMv5 processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_ARM">Q_PROCESSOR_ARM</db:link> macro is also defined when Q_PROCESSOR_ARM_V5 is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_ARM_V6">
<db:title>Q_PROCESSOR_ARM_V6</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_ARM_V6</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_ARM_V6</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for ARMv6 processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_ARM">Q_PROCESSOR_ARM</db:link> and <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_ARM_V5">Q_PROCESSOR_ARM_V5</db:link> macros are also defined when Q_PROCESSOR_ARM_V6 is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_ARM_V7">
<db:title>Q_PROCESSOR_ARM_V7</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_ARM_V7</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_ARM_V7</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for ARMv7 processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_ARM">Q_PROCESSOR_ARM</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_ARM_V5">Q_PROCESSOR_ARM_V5</db:link>, and <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_ARM_V6">Q_PROCESSOR_ARM_V6</db:link> macros are also defined when Q_PROCESSOR_ARM_V7 is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_AVR32">
<db:title>Q_PROCESSOR_AVR32</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_AVR32</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_AVR32</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for AVR32 processors.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_BLACKFIN">
<db:title>Q_PROCESSOR_BLACKFIN</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_BLACKFIN</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_BLACKFIN</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for Blackfin processors.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_HPPA">
<db:title>Q_PROCESSOR_HPPA</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_HPPA</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_HPPA</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for PA-RISC processors.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_IA64">
<db:title>Q_PROCESSOR_IA64</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_IA64</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_IA64</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for IA-64 processors. This includes all Itanium and Itanium 2 processors.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_LOONGARCH">
<db:title>[since 6.5] Q_PROCESSOR_LOONGARCH</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_LOONGARCH</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_LOONGARCH</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for LoongArch processors.</db:para>
<db:para>This macro was introduced in Qt 6.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_LOONGARCH_32">
<db:title>[since 6.5] Q_PROCESSOR_LOONGARCH_32</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_LOONGARCH_32</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_LOONGARCH_32</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for 32-bit LoongArch processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_LOONGARCH">Q_PROCESSOR_LOONGARCH</db:link> macro is also defined when Q_PROCESSOR_LOONGARCH_32 is defined.</db:para>
<db:para>This macro was introduced in Qt 6.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_LOONGARCH_64">
<db:title>[since 6.5] Q_PROCESSOR_LOONGARCH_64</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_LOONGARCH_64</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_LOONGARCH_64</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for 64-bit LoongArch processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_LOONGARCH">Q_PROCESSOR_LOONGARCH</db:link> macro is also defined when Q_PROCESSOR_LOONGARCH_64 is defined.</db:para>
<db:para>This macro was introduced in Qt 6.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_M68K">
<db:title>Q_PROCESSOR_M68K</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_M68K</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_M68K</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for Motorola 68000 processors.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_MIPS">
<db:title>Q_PROCESSOR_MIPS</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_MIPS</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_MIPS</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for MIPS processors. Qt currently supports seven MIPS revisions: <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_I">Q_PROCESSOR_MIPS_I</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_II">Q_PROCESSOR_MIPS_II</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_III">Q_PROCESSOR_MIPS_III</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_IV">Q_PROCESSOR_MIPS_IV</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_V">Q_PROCESSOR_MIPS_V</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_32">Q_PROCESSOR_MIPS_32</db:link>, and <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_64">Q_PROCESSOR_MIPS_64</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_MIPS_32">
<db:title>Q_PROCESSOR_MIPS_32</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_MIPS_32</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_MIPS_32</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for MIPS32 processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS">Q_PROCESSOR_MIPS</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_I">Q_PROCESSOR_MIPS_I</db:link>, and <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_II">Q_PROCESSOR_MIPS_II</db:link> macros are also defined when Q_PROCESSOR_MIPS_32 is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_MIPS_64">
<db:title>Q_PROCESSOR_MIPS_64</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_MIPS_64</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_MIPS_64</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for MIPS64 processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS">Q_PROCESSOR_MIPS</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_I">Q_PROCESSOR_MIPS_I</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_II">Q_PROCESSOR_MIPS_II</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_III">Q_PROCESSOR_MIPS_III</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_IV">Q_PROCESSOR_MIPS_IV</db:link>, and <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_V">Q_PROCESSOR_MIPS_V</db:link> macros are also defined when Q_PROCESSOR_MIPS_64 is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_MIPS_I">
<db:title>Q_PROCESSOR_MIPS_I</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_MIPS_I</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_MIPS_I</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for MIPS-I processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS">Q_PROCESSOR_MIPS</db:link> macro is also defined when Q_PROCESSOR_MIPS_I is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_MIPS_II">
<db:title>Q_PROCESSOR_MIPS_II</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_MIPS_II</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_MIPS_II</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for MIPS-II processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS">Q_PROCESSOR_MIPS</db:link> and <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_I">Q_PROCESSOR_MIPS_I</db:link> macros are also defined when Q_PROCESSOR_MIPS_II is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_MIPS_III">
<db:title>Q_PROCESSOR_MIPS_III</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_MIPS_III</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_MIPS_III</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for MIPS-III processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS">Q_PROCESSOR_MIPS</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_I">Q_PROCESSOR_MIPS_I</db:link>, and <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_II">Q_PROCESSOR_MIPS_II</db:link> macros are also defined when Q_PROCESSOR_MIPS_III is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_MIPS_IV">
<db:title>Q_PROCESSOR_MIPS_IV</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_MIPS_IV</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_MIPS_IV</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for MIPS-IV processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS">Q_PROCESSOR_MIPS</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_I">Q_PROCESSOR_MIPS_I</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_II">Q_PROCESSOR_MIPS_II</db:link>, and <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_III">Q_PROCESSOR_MIPS_III</db:link> macros are also defined when Q_PROCESSOR_MIPS_IV is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_MIPS_V">
<db:title>Q_PROCESSOR_MIPS_V</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_MIPS_V</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_MIPS_V</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for MIPS-V processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS">Q_PROCESSOR_MIPS</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_I">Q_PROCESSOR_MIPS_I</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_II">Q_PROCESSOR_MIPS_II</db:link>, <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_III">Q_PROCESSOR_MIPS_III</db:link>, and <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_MIPS_IV">Q_PROCESSOR_MIPS_IV</db:link> macros are also defined when Q_PROCESSOR_MIPS_V is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_POWER">
<db:title>Q_PROCESSOR_POWER</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_POWER</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_POWER</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for POWER processors. Qt currently supports two Power variants: <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_POWER_32">Q_PROCESSOR_POWER_32</db:link> and <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_POWER_64">Q_PROCESSOR_POWER_64</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_POWER_32">
<db:title>Q_PROCESSOR_POWER_32</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_POWER_32</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_POWER_32</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for 32-bit Power processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_POWER">Q_PROCESSOR_POWER</db:link> macro is also defined when Q_PROCESSOR_POWER_32 is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_POWER_64">
<db:title>Q_PROCESSOR_POWER_64</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_POWER_64</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_POWER_64</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for 64-bit Power processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_POWER">Q_PROCESSOR_POWER</db:link> macro is also defined when Q_PROCESSOR_POWER_64 is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_RISCV">
<db:title>Q_PROCESSOR_RISCV</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_RISCV</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_RISCV</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for RISC-V processors. Qt currently supports two RISC-V variants: <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_RISCV_32">Q_PROCESSOR_RISCV_32</db:link> and <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_RISCV_64">Q_PROCESSOR_RISCV_64</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_RISCV_32">
<db:title>Q_PROCESSOR_RISCV_32</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_RISCV_32</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_RISCV_32</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for 32-bit RISC-V processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_RISCV">Q_PROCESSOR_RISCV</db:link> macro is also defined when Q_PROCESSOR_RISCV_32 is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_RISCV_64">
<db:title>Q_PROCESSOR_RISCV_64</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_RISCV_64</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_RISCV_64</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for 64-bit RISC-V processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_RISCV">Q_PROCESSOR_RISCV</db:link> macro is also defined when Q_PROCESSOR_RISCV_64 is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_S390_X">
<db:title>Q_PROCESSOR_S390_X</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_S390_X</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_S390_X</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for S/390x processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_S390">Q_PROCESSOR_S390</db:link> macro is also defined when Q_PROCESSOR_S390_X is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_SH">
<db:title>Q_PROCESSOR_SH</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_SH</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_SH</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for SuperH processors. Qt currently supports one SuperH revision: <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_SH_4A">Q_PROCESSOR_SH_4A</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_SH_4A">
<db:title>Q_PROCESSOR_SH_4A</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_SH_4A</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_SH_4A</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for SuperH 4A processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_SH">Q_PROCESSOR_SH</db:link> macro is also defined when Q_PROCESSOR_SH_4A is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_SPARC">
<db:title>Q_PROCESSOR_SPARC</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_SPARC</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_SPARC</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for SPARC processors. Qt currently supports one optional SPARC revision: <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_SPARC_V9">Q_PROCESSOR_SPARC_V9</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_SPARC_V9">
<db:title>Q_PROCESSOR_SPARC_V9</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_SPARC_V9</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_SPARC_V9</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for SPARC V9 processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_SPARC">Q_PROCESSOR_SPARC</db:link> macro is also defined when Q_PROCESSOR_SPARC_V9 is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_X86_32">
<db:title>Q_PROCESSOR_X86_32</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_X86_32</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_X86_32</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for 32-bit x86 processors. This includes all i386, i486, i586, and i686 processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_X86">Q_PROCESSOR_X86</db:link> macro is also defined when Q_PROCESSOR_X86_32 is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_PROCESSOR_X86_64">
<db:title>Q_PROCESSOR_X86_64</db:title>
<db:methodsynopsis>
<db:methodname>Q_PROCESSOR_X86_64</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_PROCESSOR_X86_64</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defined if the application is compiled for 64-bit x86 processors. This includes all AMD64, Intel 64, and other x86_64/x64 processors. The <db:link xlink:href="qtprocessordetection.xml#Q_PROCESSOR_X86">Q_PROCESSOR_X86</db:link> macro is also defined when Q_PROCESSOR_X86_64 is defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsysinfo.xml#buildCpuArchitecture">QSysInfo::buildCpuArchitecture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
