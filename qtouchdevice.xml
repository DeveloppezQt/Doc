<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QTouchDevice Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qtouchdevice.xml">QTouchDevice</db:link> class describes the device from which touch events originate.</db:para>
<db:para>This class was introduced in Qt 5.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QTouchDevice</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QTouchDevice is part of <db:simplelist><db:member>touch</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Each <db:link xlink:href="qtouchevent.xml">QTouchEvent</db:link> contains a <db:link xlink:href="qtouchdevice.xml">QTouchDevice</db:link> pointer to allow accessing device-specific properties like type and capabilities. It is the responsibility of the platform or generic plug-ins to register the available touch devices via QWindowSystemInterface before generating any touch events. Applications do not need to instantiate this class, they should just access the global instances pointed to by <db:link xlink:href="qtouchevent.xml#device">QTouchEvent::device</db:link>().</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="CapabilityFlag-enum">
<db:title>enum QTouchDevice::CapabilityFlag</db:title>
<db:bridgehead renderas="sect2">flags QTouchDevice::Capabilities</db:bridgehead>
<db:para>This enum is used with <db:link xlink:href="qtouchdevice.xml#capabilities">QTouchDevice::capabilities</db:link>() to indicate what kind of information the touch device or its driver can provide.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtouchdevice.xml">QTouchDevice</db:link></db:emphasis>::Position</db:code></db:para>
</db:td>
<db:td><db:code>0x0001</db:code></db:td>
<db:td>
<db:para>Indicates that position information is available, meaning that the pos() family of functions in the touch points return valid points.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtouchdevice.xml">QTouchDevice</db:link></db:emphasis>::Area</db:code></db:para>
</db:td>
<db:td><db:code>0x0002</db:code></db:td>
<db:td>
<db:para>Indicates that touch area information is available, meaning that the rect() family of functions in the touch points return valid rectangles.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtouchdevice.xml">QTouchDevice</db:link></db:emphasis>::Pressure</db:code></db:para>
</db:td>
<db:td><db:code>0x0004</db:code></db:td>
<db:td>
<db:para>Indicates that pressure information is available, meaning that pressure() returns a valid value.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtouchdevice.xml">QTouchDevice</db:link></db:emphasis>::Velocity</db:code></db:para>
</db:td>
<db:td><db:code>0x0008</db:code></db:td>
<db:td>
<db:para>Indicates that velocity information is available, meaning that velocity() returns a valid vector.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtouchdevice.xml">QTouchDevice</db:link></db:emphasis>::RawPositions</db:code></db:para>
</db:td>
<db:td><db:code>0x0010</db:code></db:td>
<db:td>
<db:para>Indicates that the list returned by <db:link xlink:href="qtouchevent-touchpoint.xml#rawScreenPositions">QTouchEvent::TouchPoint::rawScreenPositions</db:link>() may contain one or more positions for each touch point. This is relevant when the touch input gets filtered or corrected on driver level.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtouchdevice.xml">QTouchDevice</db:link></db:emphasis>::NormalizedPosition</db:code></db:para>
</db:td>
<db:td><db:code>0x0020</db:code></db:td>
<db:td>
<db:para>Indicates that the normalized position is available, meaning that normalizedPos() returns a valid value.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtouchdevice.xml">QTouchDevice</db:link></db:emphasis>::MouseEmulation</db:code></db:para>
</db:td>
<db:td><db:code>0x0040</db:code></db:td>
<db:td>
<db:para>Indicates that the device synthesizes mouse events. This enum value has been introduced in Qt 5.5.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>Capabilities</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;CapabilityFlag&gt;. </db:code>It stores an OR combination of <db:code>CapabilityFlag</db:code> values.</db:para>
</db:section>
<db:section xml:id="DeviceType-enum">
<db:title>enum QTouchDevice::DeviceType</db:title>
<db:para>This enum represents the type of device that generated a <db:link xlink:href="qtouchevent.xml">QTouchEvent</db:link>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtouchdevice.xml">QTouchDevice</db:link></db:emphasis>::TouchScreen</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>In this type of device, the touch surface and display are integrated. This means the surface and display typically have the same size, such that there is a direct relationship between the touch points' physical positions and the coordinate reported by <db:link xlink:href="qtouchevent-touchpoint.xml">QTouchEvent::TouchPoint</db:link>. As a result, Qt allows the user to interact directly with multiple QWidgets and QGraphicsItems at the same time.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtouchdevice.xml">QTouchDevice</db:link></db:emphasis>::TouchPad</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>In this type of device, the touch surface is separate from the display. There is not a direct relationship between the physical touch location and the on-screen coordinates. Instead, they are calculated relative to the current mouse position, and the user must use the touch-pad to move this reference point. Unlike touch-screens, Qt allows users to only interact with a single <db:link xlink:href="qwidget.xml">QWidget</db:link> or <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link> at a time.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QTouchDevice">
<db:title>QTouchDevice::QTouchDevice()</db:title>
<db:para>Creates a new touch device instance. By default the name is empty, the only capability is Position and type is <db:link xlink:href="qtouchdevice.xml#DeviceType-enum">TouchScreen</db:link>.</db:para>
</db:section>
<db:section xml:id="dtor.QTouchDevice">
<db:title>[noexcept] QTouchDevice::~QTouchDevice()</db:title>
<db:para>Destroys a touch device instance.</db:para>
</db:section>
<db:section xml:id="capabilities">
<db:title>QTouchDevice::Capabilities QTouchDevice::capabilities() const</db:title>
<db:para>Returns the touch device capabilities.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtouchdevice.xml#setCapabilities">setCapabilities</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="devices">
<db:title>[static] QList&lt;const QTouchDevice *&gt; QTouchDevice::devices()</db:title>
<db:para>Returns a list of all registered devices.</db:para>
<db:note>
<db:para>The returned list cannot be used to add new devices. Use QWindowSystemInterface::registerTouchDevice() instead.</db:para>
</db:note>
</db:section>
<db:section xml:id="maximumTouchPoints">
<db:title>[since 5.2] int QTouchDevice::maximumTouchPoints() const</db:title>
<db:para>Returns the maximum number of simultaneous touch points (fingers) that can be detected.</db:para>
<db:para>This function was introduced in Qt 5.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtouchdevice.xml#setMaximumTouchPoints">setMaximumTouchPoints</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="name">
<db:title>QString QTouchDevice::name() const</db:title>
<db:para>Returns the touch device name.</db:para>
<db:para>This string may often be empty. It is however useful for systems that have more than one touch input device because there it can be used to differentiate between the devices (i.e. to tell from which device a <db:link xlink:href="qtouchevent.xml">QTouchEvent</db:link> originates from).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtouchdevice.xml#setName">setName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCapabilities">
<db:title>void QTouchDevice::setCapabilities(QTouchDevice::Capabilities <db:emphasis>caps</db:emphasis>)</db:title>
<db:para>Sets the capabilities <db:code role="parameter">caps</db:code> supported by the device and its driver.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtouchdevice.xml#capabilities">capabilities</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setMaximumTouchPoints">
<db:title>void QTouchDevice::setMaximumTouchPoints(int <db:emphasis>max</db:emphasis>)</db:title>
<db:para>Sets the maximum number of simultaneous touchpoints <db:code role="parameter">max</db:code> supported by the device and its driver.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtouchdevice.xml#maximumTouchPoints">maximumTouchPoints</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setName">
<db:title>void QTouchDevice::setName(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">name</db:code> (a unique identifier) for the device. In most systems it is enough to leave this unset and keep the default empty name. This identifier becomes important when having multiple touch devices and a need to differentiate between them.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtouchdevice.xml#name">name</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setType">
<db:title>void QTouchDevice::setType(QTouchDevice::DeviceType <db:emphasis>devType</db:emphasis>)</db:title>
<db:para>Sets the device type <db:code role="parameter">devType</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtouchdevice.xml#type">type</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="type">
<db:title>QTouchDevice::DeviceType QTouchDevice::type() const</db:title>
<db:para>Returns the touch device type.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtouchdevice.xml#setType">setType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
