<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>NearField QML Type</db:title>
<db:productname>QtNfc</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt NFC Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides access to NDEF messages stored on NFC Forum tags.</db:para>
<db:para>This type was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtNfc 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>NearField is part of <db:simplelist><db:member>nfc-qml</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtnfc-nearfield.xml">NearField</db:link> type can be used to read NDEF messages from NFC Forum tags. Set the <db:link xlink:href="qml-qtnfc-nearfield.xml#filter-prop">filter</db:link> and <db:link xlink:href="qml-qtnfc-nearfield.xml#orderMatch-prop">orderMatch</db:link> properties to match the required NDEF messages. Once an NDEF message is successfully read from a tag the <db:link xlink:href="qml-qtnfc-nearfield.xml#messageRecords-prop">messageRecords</db:link> property is updated.</db:para>
<db:note>
<db:para>For platforms using neard, filtering is currently not implemented. For more information on neard see <db:link xlink:href="qnearfieldmanager.xml">QNearFieldManager</db:link>.</db:para>
</db:note>
<db:programlisting language="qml">    NearField {
        filter: [ NdefFilter { type: &quot;U&quot;; typeNameFormat: NdefRecord.NfcRtd; minimum: 1; maximum: 1 } ]
        orderMatch: false

        onMessageRecordsChanged: displayMessage()
    }
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtnfc-ndeffilter.xml">NdefFilter</db:link></db:member>
<db:member><db:link xlink:href="qml-qtnfc-ndefrecord.xml">NdefRecord</db:link></db:member>
<db:member><db:link xlink:href="qnearfieldmanager.xml">QNearFieldManager</db:link></db:member>
<db:member><db:link xlink:href="qndefmessage.xml">QNdefMessage</db:link></db:member>
<db:member><db:link xlink:href="qndefrecord.xml">QNdefRecord</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="filter-prop">
<db:title>[read-only] filter : list&lt;NdefFilter&gt;</db:title>
<db:para>This property holds the NDEF filter constraints. The <db:link xlink:href="qml-qtnfc-nearfield.xml#messageRecords-prop">messageRecords</db:link> property will only be set to NDEF messages which match the filter. If no filter is set, a message handler for all NDEF messages will be registered.</db:para>
<db:note>
<db:para>Filtering is not supported when using neard.</db:para>
</db:note>
<db:para><db:link xlink:href="qnearfieldmanager.xml#registerNdefMessageHandler">QNearFieldManager::registerNdefMessageHandler</db:link>()</db:para>
</db:section>
<db:section xml:id="messageRecords-prop">
<db:title>[read-only] messageRecords : list&lt;NdefRecord&gt;</db:title>
<db:para>This property contains the list of NDEF records in the last NDEF message read.</db:para>
</db:section>
<db:section xml:id="orderMatch-prop">
<db:title>orderMatch : bool</db:title>
<db:para>This property indicates whether the order of records should be taken into account when matching messages. This is not supported when using neard.</db:para>
<db:para>The default of orderMatch is false.</db:para>
</db:section>
<db:section xml:id="polling-prop">
<db:title>[since 5.5] polling : bool</db:title>
<db:para>This property indicates if the underlying adapter is currently in polling state. If set to <db:code>true</db:code> the adapter will start polling and stop polling if set to <db:code>false</db:code>.</db:para>
<db:note>
<db:para>On platforms using neard, the adapter will stop polling as soon as a tag has been detected. For more information see <db:link xlink:href="qnearfieldmanager.xml">QNearFieldManager</db:link>.</db:para>
</db:note>
<db:para>This property was introduced in Qt 5.5.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="tagFound-signal">
<db:title>[since 5.5] tagFound()</db:title>
<db:para>This signal will be emitted when a tag has been detected.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onTagFound</db:code>.</db:para>
</db:note>
<db:para>This signal was introduced in Qt 5.5.</db:para>
</db:section>
<db:section xml:id="tagRemoved-signal">
<db:title>[since 5.5] tagRemoved()</db:title>
<db:para>This signal will be emitted when a tag has been removed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onTagRemoved</db:code>.</db:para>
</db:note>
<db:para>This signal was introduced in Qt 5.5.</db:para>
</db:section>
</db:section>
</db:article>
