<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QQuickAsyncImageProvider Class</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qquickasyncimageprovider.xml">QQuickAsyncImageProvider</db:link> class provides an interface for asynchronous control of QML image requests.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QQuickAsyncImageProvider</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Quick)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Quick)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += quick</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qquickimageprovider.xml" xlink:role="class">QQuickImageProvider</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>See the <db:link xlink:href="qtquick-imageresponseprovider-example.xml">Image Response Provider Example</db:link> for a complete implementation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qquickimageprovider.xml">QQuickImageProvider</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="requestImageResponse">
<db:title>[pure virtual] QQuickImageResponse *QQuickAsyncImageProvider::requestImageResponse(const QString &amp;<db:emphasis>id</db:emphasis>, const QSize &amp;<db:emphasis>requestedSize</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>QQuickImageResponse *</db:type>
<db:methodname>requestImageResponse</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>id</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QSize &amp;</db:type>
<db:parameter>requestedSize</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QQuickImageResponse * requestImageResponse(const QString &amp;id, const QSize &amp;requestedSize) = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Implement this method to return the job that will provide the texture with <db:code role="parameter">id</db:code>.</db:para>
<db:para>The <db:code role="parameter">id</db:code> is the requested image source, with the &quot;image:&quot; scheme and provider identifier removed. For example, if the image <db:link xlink:href="qml-qtquick-image.xml#source-prop">source</db:link> was &quot;image://myprovider/icons/home&quot;, the given <db:code role="parameter">id</db:code> would be &quot;icons/home&quot;.</db:para>
<db:para>The <db:code role="parameter">requestedSize</db:code> corresponds to the <db:link xlink:href="qml-qtquick-image.xml#sourceSize-prop">Image::sourceSize</db:link> requested by an Image item. If <db:code role="parameter">requestedSize</db:code> is a valid size, the image returned should be of that size.</db:para>
<db:note>
<db:para>this method may be called by multiple threads, so ensure the implementation of this method is reentrant.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
