<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QDesignerFormWindowManagerInterface Class</db:title>
<db:productname>QtDesigner</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Designer Manual</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link> class allows you to manipulate the collection of form windows in Qt Designer, and control Qt Designer's form editing actions.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDesignerFormWindowManagerInterface</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += designer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link> is not intended to be instantiated directly. <db:emphasis>Qt Designer</db:emphasis> uses the form window manager to control the various form windows in its workspace. You can retrieve an interface to <db:emphasis>Qt Designer</db:emphasis>'s form window manager using the <db:link xlink:href="qdesignerformeditorinterface.xml#formWindowManager">QDesignerFormEditorInterface::formWindowManager</db:link>() function. For example:</db:para>
<db:programlisting language="cpp">        QDesignerFormWindowManagerInterface *manager = 0;
        QDesignerFormWindowInterface *formWindow = 0;

        manager = formEditor-&gt;formWindowManager();
        formWindow = manager-&gt;formWindow(0);

        manager-&gt;setActiveFormWindow(formWindow);
</db:programlisting>
<db:para>When implementing a custom widget plugin, a pointer to <db:emphasis>Qt Designer</db:emphasis>'s current <db:link xlink:href="qdesignerformeditorinterface.xml">QDesignerFormEditorInterface</db:link> object (<db:code>formEditor</db:code> in the example above) is provided by the <db:link xlink:href="qdesignercustomwidgetinterface.xml#initialize">QDesignerCustomWidgetInterface::initialize</db:link>() function's parameter. You must subclass the <db:link xlink:href="qdesignercustomwidgetinterface.xml">QDesignerCustomWidgetInterface</db:link> to expose your plugin to Qt Designer.</db:para>
<db:para>The form window manager interface provides the <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#createFormWindow">createFormWindow</db:link>() function that enables you to create a new form window which you can add to the collection of form windows that the manager maintains, using the <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#addFormWindow">addFormWindow</db:link>() slot. It also provides the <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#formWindowCount">formWindowCount</db:link>() function returning the number of form windows currently under the manager's control, the <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#formWindow">formWindow</db:link>() function returning the form window associated with a given index, and the <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#activeFormWindow">activeFormWindow</db:link>() function returning the currently selected form window. The <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#removeFormWindow">removeFormWindow</db:link>() slot allows you to reduce the number of form windows the manager must maintain, and the <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#setActiveFormWindow">setActiveFormWindow</db:link>() slot allows you to change the form window focus in <db:emphasis>Qt Designer</db:emphasis>'s workspace.</db:para>
<db:para>In addition, <db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link> contains a collection of functions that enables you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s form editing actions. All these functions return the original action, making it possible to propagate the function further after intervention.</db:para>
<db:para>Finally, the interface provides three signals which are emitted when a form window is added, when the currently selected form window changes, or when a form window is removed, respectively. All the signals carry the form window in question as their parameter.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformeditorinterface.xml">QDesignerFormEditorInterface</db:link></db:member>
<db:member><db:link xlink:href="qdesignerformwindowinterface.xml">QDesignerFormWindowInterface</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Action-enum">
<db:title>[since 5.0] enum QDesignerFormWindowManagerInterface::Action</db:title>
<db:para>Specifies an action of <db:emphasis>Qt Designer</db:emphasis>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::CutAction</db:code></db:para>
</db:td>
<db:td><db:code>100</db:code></db:td>
<db:td>
<db:para>Clipboard Cut</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::CopyAction</db:code></db:para>
</db:td>
<db:td><db:code>101</db:code></db:td>
<db:td>
<db:para>Clipboard Copy</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::PasteAction</db:code></db:para>
</db:td>
<db:td><db:code>102</db:code></db:td>
<db:td>
<db:para>Clipboard Paste</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::DeleteAction</db:code></db:para>
</db:td>
<db:td><db:code>103</db:code></db:td>
<db:td>
<db:para>Clipboard Delete</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::SelectAllAction</db:code></db:para>
</db:td>
<db:td><db:code>104</db:code></db:td>
<db:td>
<db:para>Select All</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::LowerAction</db:code></db:para>
</db:td>
<db:td><db:code>200</db:code></db:td>
<db:td>
<db:para>Lower current widget</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::RaiseAction</db:code></db:para>
</db:td>
<db:td><db:code>201</db:code></db:td>
<db:td>
<db:para>Raise current widget</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::UndoAction</db:code></db:para>
</db:td>
<db:td><db:code>300</db:code></db:td>
<db:td>
<db:para>Undo</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::RedoAction</db:code></db:para>
</db:td>
<db:td><db:code>301</db:code></db:td>
<db:td>
<db:para>Redo</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::HorizontalLayoutAction</db:code></db:para>
</db:td>
<db:td><db:code>400</db:code></db:td>
<db:td>
<db:para>Lay out using <db:link xlink:href="qhboxlayout.xml">QHBoxLayout</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::VerticalLayoutAction</db:code></db:para>
</db:td>
<db:td><db:code>401</db:code></db:td>
<db:td>
<db:para>Lay out using <db:link xlink:href="qvboxlayout.xml">QVBoxLayout</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::SplitHorizontalAction</db:code></db:para>
</db:td>
<db:td><db:code>402</db:code></db:td>
<db:td>
<db:para>Lay out in horizontal <db:link xlink:href="qsplitter.xml">QSplitter</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::SplitVerticalAction</db:code></db:para>
</db:td>
<db:td><db:code>403</db:code></db:td>
<db:td>
<db:para>Lay out in vertical <db:link xlink:href="qsplitter.xml">QSplitter</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::GridLayoutAction</db:code></db:para>
</db:td>
<db:td><db:code>404</db:code></db:td>
<db:td>
<db:para>Lay out using <db:link xlink:href="qgridlayout.xml">QGridLayout</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::FormLayoutAction</db:code></db:para>
</db:td>
<db:td><db:code>405</db:code></db:td>
<db:td>
<db:para>Lay out using <db:link xlink:href="qformlayout.xml">QFormLayout</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::BreakLayoutAction</db:code></db:para>
</db:td>
<db:td><db:code>406</db:code></db:td>
<db:td>
<db:para>Break existing layout</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::AdjustSizeAction</db:code></db:para>
</db:td>
<db:td><db:code>407</db:code></db:td>
<db:td>
<db:para>Adjust size</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::SimplifyLayoutAction</db:code></db:para>
</db:td>
<db:td><db:code>408</db:code></db:td>
<db:td>
<db:para>Simplify <db:link xlink:href="qgridlayout.xml">QGridLayout</db:link> or <db:link xlink:href="qformlayout.xml">QFormLayout</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::DefaultPreviewAction</db:code></db:para>
</db:td>
<db:td><db:code>500</db:code></db:td>
<db:td>
<db:para>Create a preview in default style</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::FormWindowSettingsDialogAction</db:code></db:para>
</db:td>
<db:td><db:code>600</db:code></db:td>
<db:td>
<db:para>Show dialog with form settings</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This enum was introduced in Qt 5.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="ActionGroup-enum">
<db:title>[since 5.0] enum QDesignerFormWindowManagerInterface::ActionGroup</db:title>
<db:para>Specifies an action group of <db:emphasis>Qt Designer</db:emphasis>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:emphasis>::StyledPreviewActionGroup</db:code></db:para>
</db:td>
<db:td><db:code>100</db:code></db:td>
<db:td>
<db:para>Action group containing styled preview actions</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This enum was introduced in Qt 5.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#actionGroup">actionGroup</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QDesignerFormWindowManagerInterface">
<db:title>[explicit] QDesignerFormWindowManagerInterface::QDesignerFormWindowManagerInterface(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs an interface with the given <db:code role="parameter">parent</db:code> for the form window manager.</db:para>
</db:section>
<db:section xml:id="dtor.QDesignerFormWindowManagerInterface">
<db:title>[virtual noexcept] QDesignerFormWindowManagerInterface::~QDesignerFormWindowManagerInterface()</db:title>
<db:para>Destroys the interface for the form window manager.</db:para>
</db:section>
<db:section xml:id="action">
<db:title>[pure virtual, since 5.0] QAction *QDesignerFormWindowManagerInterface::action(QDesignerFormWindowManagerInterface::Action <db:emphasis>action</db:emphasis>) const</db:title>
<db:para>Returns the action specified by the enumeration value <db:code role="parameter">action</db:code>.</db:para>
<db:para>Obsoletes the action accessors of Qt 4.X.</db:para>
<db:para>This function was introduced in Qt 5.0.</db:para>
</db:section>
<db:section xml:id="actionGroup">
<db:title>[pure virtual, since 5.0] QActionGroup *QDesignerFormWindowManagerInterface::actionGroup(QDesignerFormWindowManagerInterface::ActionGroup <db:emphasis>actionGroup</db:emphasis>) const</db:title>
<db:para>Returns the action group specified by the enumeration value <db:code role="parameter">actionGroup</db:code>.</db:para>
<db:para>This function was introduced in Qt 5.0.</db:para>
</db:section>
<db:section xml:id="activeFormWindow">
<db:title>[pure virtual] QDesignerFormWindowInterface *QDesignerFormWindowManagerInterface::activeFormWindow() const</db:title>
<db:para>Returns the currently active form window in <db:emphasis>Qt Designer</db:emphasis>'s workspace.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#setActiveFormWindow">setActiveFormWindow</db:link>()</db:member>
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#removeFormWindow">removeFormWindow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="activeFormWindowChanged">
<db:title>void QDesignerFormWindowManagerInterface::activeFormWindowChanged(QDesignerFormWindowInterface *<db:emphasis>formWindow</db:emphasis>)</db:title>
<db:para>This signal is emitted when the contents of the currently active form window in <db:emphasis>Qt Designer</db:emphasis>'s workspace changed. A pointer to the currently active <db:code role="parameter">formWindow</db:code> is passed as an argument.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#activeFormWindow">activeFormWindow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addFormWindow">
<db:title>[pure virtual] void QDesignerFormWindowManagerInterface::addFormWindow(QDesignerFormWindowInterface *<db:emphasis>formWindow</db:emphasis>)</db:title>
<db:para>Adds the given <db:code role="parameter">formWindow</db:code> to the collection of windows that <db:emphasis>Qt Designer</db:emphasis>'s form window manager maintains.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#formWindowAdded">formWindowAdded</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="closeAllPreviews">
<db:title>[pure virtual, since 5.0] void QDesignerFormWindowManagerInterface::closeAllPreviews()</db:title>
<db:para>Close all currently open previews.</db:para>
<db:para>This function was introduced in Qt 5.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#showPreview">showPreview</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="core">
<db:title>[pure virtual] QDesignerFormEditorInterface *QDesignerFormWindowManagerInterface::core() const</db:title>
<db:para>Returns a pointer to <db:emphasis>Qt Designer</db:emphasis>'s current <db:link xlink:href="qdesignerformeditorinterface.xml">QDesignerFormEditorInterface</db:link> object.</db:para>
</db:section>
<db:section xml:id="createFormWindow">
<db:title>[pure virtual] QDesignerFormWindowInterface *QDesignerFormWindowManagerInterface::createFormWindow(QWidget *<db:emphasis>parent</db:emphasis> = Q_NULLPTR, Qt::WindowFlags <db:emphasis>flags</db:emphasis> = Qt::WindowFlags())</db:title>
<db:para>Creates a form window with the given <db:code role="parameter">parent</db:code> and the given window <db:code role="parameter">flags</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#addFormWindow">addFormWindow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="formWindow">
<db:title>[pure virtual] QDesignerFormWindowInterface *QDesignerFormWindowManagerInterface::formWindow(int <db:emphasis>index</db:emphasis>) const</db:title>
<db:para>Returns the form window at the given <db:code role="parameter">index</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#setActiveFormWindow">setActiveFormWindow</db:link>()</db:member>
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#removeFormWindow">removeFormWindow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="formWindowAdded">
<db:title>void QDesignerFormWindowManagerInterface::formWindowAdded(QDesignerFormWindowInterface *<db:emphasis>formWindow</db:emphasis>)</db:title>
<db:para>This signal is emitted when a new form window is added to the collection of windows that <db:emphasis>Qt Designer</db:emphasis>'s form window manager maintains. A pointer to the new <db:code role="parameter">formWindow</db:code> is passed as an argument.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#addFormWindow">addFormWindow</db:link>()</db:member>
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#setActiveFormWindow">setActiveFormWindow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="formWindowCount">
<db:title>[pure virtual] int QDesignerFormWindowManagerInterface::formWindowCount() const</db:title>
<db:para>Returns the number of form windows maintained by <db:emphasis>Qt Designer</db:emphasis>'s form window manager.</db:para>
</db:section>
<db:section xml:id="formWindowRemoved">
<db:title>void QDesignerFormWindowManagerInterface::formWindowRemoved(QDesignerFormWindowInterface *<db:emphasis>formWindow</db:emphasis>)</db:title>
<db:para>This signal is emitted when a form window is removed from the collection of windows that <db:emphasis>Qt Designer</db:emphasis>'s form window manager maintains. A pointer to the removed <db:code role="parameter">formWindow</db:code> is passed as an argument.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#removeFormWindow">removeFormWindow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="formWindowSettingsChanged">
<db:title>void QDesignerFormWindowManagerInterface::formWindowSettingsChanged(QDesignerFormWindowInterface *<db:emphasis>formWindow</db:emphasis>)</db:title>
<db:para>This signal is emitted when the settings of the form window change. It can be used to update window titles, etc. accordingly. A pointer to the <db:code role="parameter">formWindow</db:code> is passed as an argument.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#Action-enum">FormWindowSettingsDialogAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="removeFormWindow">
<db:title>[pure virtual] void QDesignerFormWindowManagerInterface::removeFormWindow(QDesignerFormWindowInterface *<db:emphasis>formWindow</db:emphasis>)</db:title>
<db:para>Removes the given <db:code role="parameter">formWindow</db:code> from the collection of windows that <db:emphasis>Qt Designer</db:emphasis>'s form window manager maintains.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#formWindow">formWindow</db:link>()</db:member>
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#formWindowRemoved">formWindowRemoved</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setActiveFormWindow">
<db:title>[pure virtual] void QDesignerFormWindowManagerInterface::setActiveFormWindow(QDesignerFormWindowInterface *<db:emphasis>formWindow</db:emphasis>)</db:title>
<db:para>Sets the given <db:code role="parameter">formWindow</db:code> to be the currently active form window in <db:emphasis>Qt Designer</db:emphasis>'s workspace.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#activeFormWindow">activeFormWindow</db:link>()</db:member>
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#activeFormWindowChanged">activeFormWindowChanged</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="showPluginDialog">
<db:title>[pure virtual, since 5.0] void QDesignerFormWindowManagerInterface::showPluginDialog()</db:title>
<db:para>Opens a dialog showing the plugins loaded by <db:emphasis>Qt Designer</db:emphasis>'s and its plugin load failures.</db:para>
<db:para>This function was introduced in Qt 5.0.</db:para>
</db:section>
<db:section xml:id="showPreview">
<db:title>[pure virtual, since 5.0] void QDesignerFormWindowManagerInterface::showPreview()</db:title>
<db:para>Show a preview of the current form using the default parameters.</db:para>
<db:para>This function was introduced in Qt 5.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml#closeAllPreviews">closeAllPreviews</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for QDesignerFormWindowManagerInterface</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-member-function-documentation">
<db:title>Obsolete Member Function Documentation</db:title>
<db:section xml:id="actionAdjustSize">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionAdjustSize() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s &quot;adjust size&quot; action. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionBreakLayout">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionBreakLayout() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s &quot;break layout&quot; action. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionCopy">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionCopy() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s &quot;copy&quot; action. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionCut">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionCut() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s &quot;cut&quot; action. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionDelete">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionDelete() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s &quot;delete&quot; action. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionFormLayout">
<db:title>[since 4.4, deprecated] QAction *QDesignerFormWindowManagerInterface::actionFormLayout() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s &quot;form layout&quot; action. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionGridLayout">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionGridLayout() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control a request for grid layout for a form window in <db:emphasis>Qt Designer</db:emphasis>'s workspace. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionHorizontalLayout">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionHorizontalLayout() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control a request for horizontal layout for a form window in <db:emphasis>Qt Designer</db:emphasis>'s workspace. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionLower">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionLower() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control the action of lowering a form window in <db:emphasis>Qt Designer</db:emphasis>'s workspace. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionPaste">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionPaste() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s &quot;paste&quot; action. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionRaise">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionRaise() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control the action of raising of a form window in <db:emphasis>Qt Designer</db:emphasis>'s workspace. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionRedo">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionRedo() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s &quot;redo&quot; action. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionSelectAll">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionSelectAll() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s &quot;select all&quot; action. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionSimplifyLayout">
<db:title>[since 4.4, deprecated] QAction *QDesignerFormWindowManagerInterface::actionSimplifyLayout() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s &quot;simplify layout&quot; action. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionSplitHorizontal">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionSplitHorizontal() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s &quot;split horizontal&quot; action. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionSplitVertical">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionSplitVertical() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s &quot;split vertical&quot; action. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionUndo">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionUndo() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control <db:emphasis>Qt Designer</db:emphasis>'s &quot;undo&quot; action. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="actionVerticalLayout">
<db:title>[deprecated] QAction *QDesignerFormWindowManagerInterface::actionVerticalLayout() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Allows you to intervene and control a request for vertical layout for a form window in <db:emphasis>Qt Designer</db:emphasis>'s workspace. The function returns the original action.</db:para>
<db:para>Use <db:link xlink:href="qdesignerformwindowmanagerinterface.xml#action">action</db:link>() instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaction.xml">QAction</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:section>
</db:article>
