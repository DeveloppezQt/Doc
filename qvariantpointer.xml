<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QVariantPointer Class</db:title>
<db:subtitle>template &lt;typename Pointer&gt; class QVariantPointer</db:subtitle>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qvariantpointer.xml">QVariantPointer</db:link> is a template class that emulates a pointer to <db:link xlink:href="qvariant.xml">QVariant</db:link> based on a pointer.</db:para>
<db:para>This class was introduced in Qt 6.0.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QVariantPointer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Core)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Core)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qvariantconstpointer.xml">QVariantConstPointer</db:link> wraps a pointer and returns <db:link xlink:href="qvariantref.xml">QVariantRef</db:link> to it from its operator*(). This makes it suitable as replacement for an actual pointer. We cannot return an actual pointer from generic iterators as the iterators don't hold an actual <db:link xlink:href="qvariant.xml">QVariant</db:link>.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QVariantPointer">
<db:title>[explicit] QVariantPointer::QVariantPointer(const Pointer *<db:emphasis>pointer</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QVariantPointer</db:methodname>
<db:methodparam>
<db:type>const Pointer *</db:type>
<db:parameter>pointer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QVariantPointer(const Pointer *pointer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qvariantpointer.xml">QVariantPointer</db:link> from the given <db:code role="parameter">pointer</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-2a">
<db:title>QVariantRef&lt;Pointer&gt; QVariantPointer::operator*() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QVariantRef&lt;Pointer&gt;</db:type>
<db:methodname>operator*</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QVariantRef&lt;Pointer&gt; operator*() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Dereferences the <db:link xlink:href="qvariantpointer.xml">QVariantPointer</db:link> to a <db:link xlink:href="qvariantref.xml">QVariantRef</db:link>.</db:para>
</db:section>
<db:section xml:id="operator--gt">
<db:title>Pointer QVariantPointer::operator-&gt;() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>Pointer</db:type>
<db:methodname>operator-&gt;</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">Pointer operator-&gt;() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Dereferences and returns the pointer. The pointer is expected to also implement operator-&gt;().</db:para>
</db:section>
</db:section>
</db:article>
