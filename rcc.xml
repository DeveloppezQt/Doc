<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Resource Compiler (rcc)</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Reference Documentation.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The rcc tool is used to embed resources into a Qt application during the build process. It works by generating a C++ source file containing data specified in a Qt resource (.qrc) file.</db:para>
<db:para>Usage:</db:para>
<db:programlisting language="cpp">rcc [options] &amp;lt;inputs&amp;gt;
</db:programlisting>
<db:para>RCC accepts the following command line options:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Option</db:para>
</db:th>
<db:th>
<db:para>Argument</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>-o</db:para>
</db:td>
<db:td>
<db:para>file</db:para>
</db:td>
<db:td>
<db:para>Write output to file rather than to stdout.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-g, --generator</db:para>
</db:td>
<db:td>
<db:para>&lt;cpp|python|python2&gt;</db:para>
</db:td>
<db:td>
<db:para>Select generator.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-name</db:para>
</db:td>
<db:td>
<db:para>name</db:para>
</db:td>
<db:td>
<db:para>Create an external initialization function with name.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-threshold</db:para>
</db:td>
<db:td>
<db:para>level</db:para>
</db:td>
<db:td>
<db:para>Specifies a threshold level (as a percentage) to use when deciding whether to compress a file. If the reduction in the file size is greater than the threshold level, it is compressed; otherwise, the uncompressed data is stored instead. The default threshold level is 70%, meaning that compressed files which are 30% or less of their original size are stored as compressed data.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-compress-algo</db:para>
</db:td>
<db:td>
<db:para>algorithm</db:para>
</db:td>
<db:td>
<db:para>The algorithm to compress files with. Supported algorithms are zstd, zlib, and none, which respectively mean to compress the content using the <db:link xlink:href="http://facebook.github.io/zstd/">Zstandard</db:link> library, <db:link xlink:href="https://zlib.net">zlib</db:link> library, and no compression. The default is zstd if that library was found at compile time, zlib if not.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-compress</db:para>
</db:td>
<db:td>
<db:para>level</db:para>
</db:td>
<db:td>
<db:para>Compress input files to the given compression level, which is algorithm-dependent. If the algorithm is zstd, the valid levels are 1 to 19, with the special values of 0 and -1 meaning libzstd's and rcc's default compressions. If the algorithm is zlib, the level is an integer in the range 1 to 9. For both algorithms, level 1 does the least compression but is fastest. Levels 9 or 19 do the most compression but are slowest. To turn off compression, use -no-compress. The default value for level is -1.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-root</db:para>
</db:td>
<db:td>
<db:para>path</db:para>
</db:td>
<db:td>
<db:para>Prefix the resource access path with path. The default is no prefix.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-no-compress</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Disable compression.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--pass</db:para>
</db:td>
<db:td>
<db:para>&lt;number&gt;</db:para>
</db:td>
<db:td>
<db:para>Pass number for big resources</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-binary</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Output a binary file for use as a dynamic resource.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-version</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Display version information.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-help</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Display usage information.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-t, --temp &lt;file&gt;</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Use temporary &lt;file&gt; for big resources.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--namespace</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Turn off namespace macros.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--verbose</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Enable verbose mode.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--list</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Only list .qrc file entries, do not generate code.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--list-mapping</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Only output a mapping of resource paths to file system paths defined in the .qrc file, do not generate code.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-d, --depfile</db:para>
</db:td>
<db:td>
<db:para>&lt;file&gt;</db:para>
</db:td>
<db:td>
<db:para>Write a depfile with the .qrc dependencies to &lt;file&gt;.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-project</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para>Output a resource file containing all files from the current directory.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--format-version</db:para>
</db:td>
<db:td>
<db:para>&lt;number&gt;</db:para>
</db:td>
<db:td>
<db:para>The RCC format version to write.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>See also <db:link xlink:href="porting-to-android.xml#the-qt-resource-system">The Qt Resource System</db:link> for more information about embedding resources in Qt applications.</db:para>
</db:article>
