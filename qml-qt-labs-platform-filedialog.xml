<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>FileDialog QML Type</db:title>
<db:productname>QtLabsPlatform</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Labs Platform Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A native file dialog.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt.labs.platform</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Dialog</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qt-labs-platform-filedialog.xml">FileDialog</db:link> type provides a QML API for native platform file dialogs.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtlabsplatform-filedialog-gtk.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>To show a file dialog, construct an instance of <db:link xlink:href="qml-qt-labs-platform-filedialog.xml">FileDialog</db:link>, set the desired properties, and call <db:link xlink:href="qml-qt-labs-platform-dialog.xml#open-method">open</db:link>(). The <db:link xlink:href="qml-qt-labs-platform-filedialog.xml#currentFile-prop">currentFile</db:link> or <db:link xlink:href="qml-qt-labs-platform-filedialog.xml#currentFiles-prop">currentFiles</db:link> properties can be used to determine the currently selected file(s) in the dialog. The <db:link xlink:href="qml-qt-labs-platform-filedialog.xml#file-prop">file</db:link> and <db:link xlink:href="qml-qt-labs-platform-filedialog.xml#files-prop">files</db:link> properties are updated only after the final selection has been made by accepting the dialog.</db:para>
<db:programlisting language="cpp">MenuItem {
    text: &quot;Open...&quot;
    onTriggered: fileDialog.open()
}

FileDialog {
    id: fileDialog
    currentFile: document.source
    folder: StandardPaths.writableLocation(StandardPaths.DocumentsLocation)
}

MyDocument {
    id: document
    source: fileDialog.file
}
</db:programlisting>
<db:section xml:id="availability">
<db:title>Availability</db:title>
<db:para>A native platform file dialog is currently available on the following platforms:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Android</db:para>
</db:listitem>
<db:listitem>
<db:para>iOS</db:para>
</db:listitem>
<db:listitem>
<db:para>Linux (when running with the GTK+ platform theme)</db:para>
</db:listitem>
<db:listitem>
<db:para>macOS</db:para>
</db:listitem>
<db:listitem>
<db:para>Windows</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The Qt Labs Platform module uses Qt Widgets as a fallback on platforms that do not have a native implementation available. Therefore, applications that use types from the Qt Labs Platform module should link to <db:link xlink:href="qtwidgets-module.xml">QtWidgets</db:link> and use <db:link xlink:href="qapplication.xml">QApplication</db:link> instead of <db:link xlink:href="qguiapplication.xml">QGuiApplication</db:link>.</db:para>
<db:para>To link against the <db:link xlink:href="qtwidgets-module.xml">QtWidgets</db:link> library, add the following to your qmake project file:</db:para>
<db:programlisting language="cpp">QT += widgets
</db:programlisting>
<db:para>Create an instance of <db:link xlink:href="qapplication.xml">QApplication</db:link> in <db:code>main()</db:code>:</db:para>
<db:programlisting language="cpp">#include &amp;lt;QApplication&amp;gt;
#include &amp;lt;QQmlApplicationEngine&amp;gt;

int main(int argc, char *argv[])
{
    QApplication app(argc, argv);
    QQmlApplicationEngine engine;
    engine.load(QUrl(QStringLiteral(&quot;qrc:/main.qml&quot;)));
    return app.exec();
}
</db:programlisting>
<db:note>
<db:para><db:emphasis>Types in Qt.labs modules are not guaranteed to remain compatible in future versions.</db:emphasis></db:para>
</db:note>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-folderdialog.xml">FolderDialog</db:link></db:member>
<db:member><db:link xlink:href="qml-qt-labs-platform-standardpaths.xml" role="deprecated">StandardPaths</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="acceptLabel-prop">
<db:title>acceptLabel : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>acceptLabel</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the label text shown on the button that accepts the dialog.</db:para>
<db:para>When set to an empty string, the default label of the underlying platform is used. The default label is typically <db:guilabel>Open</db:guilabel> or <db:guilabel>Save</db:guilabel> depending on which <db:link xlink:href="qml-qt-labs-platform-filedialog.xml#fileMode-prop">fileMode</db:link> the dialog is used in.</db:para>
<db:para>The default value is an empty string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-filedialog.xml#rejectLabel-prop">rejectLabel</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="currentFile-prop">
<db:title>currentFile : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>currentFile</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the currently selected file in the dialog.</db:para>
<db:para>Unlike the <db:link xlink:href="qml-qt-labs-platform-filedialog.xml#file-prop">file</db:link> property, the <db:code>currentFile</db:code> property is updated while the user is selecting files in the dialog, even before the final selection has been made.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-filedialog.xml#file-prop">file</db:link></db:member>
<db:member><db:link xlink:href="qml-qt-labs-platform-filedialog.xml#currentFiles-prop">currentFiles</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="currentFiles-prop">
<db:title>currentFiles : list&lt;url&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;url&gt;</db:type>
<db:varname>currentFiles</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the currently selected files in the dialog.</db:para>
<db:para>Unlike the <db:link xlink:href="qml-qt-labs-platform-filedialog.xml#files-prop">files</db:link> property, the <db:code>currentFiles</db:code> property is updated while the user is selecting files in the dialog, even before the final selection has been made.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-filedialog.xml#files-prop">files</db:link></db:member>
<db:member><db:link xlink:href="qml-qt-labs-platform-filedialog.xml#currentFile-prop">currentFile</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="defaultSuffix-prop">
<db:title>defaultSuffix : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>defaultSuffix</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a suffix that is added to selected files that have no suffix specified. The suffix is typically used to indicate the file type (e.g. &quot;txt&quot; indicates a text file).</db:para>
<db:para>If the first character is a dot ('.'), it is removed.</db:para>
</db:section>
<db:section xml:id="file-prop">
<db:title>file : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>file</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the final accepted file.</db:para>
<db:para>Unlike the <db:link xlink:href="qml-qt-labs-platform-filedialog.xml#currentFile-prop">currentFile</db:link> property, the <db:code>file</db:code> property is not updated while the user is selecting files in the dialog, but only after the final selection has been made. That is, when the user has clicked <db:guilabel>OK</db:guilabel> to accept a file. Alternatively, the <db:link xlink:href="qml-qt-labs-platform-dialog.xml#accepted-signal">accepted</db:link>() signal can be handled to get the final selection.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-filedialog.xml#currentFile-prop">currentFile</db:link></db:member>
<db:member><db:link xlink:href="qml-qt-labs-platform-dialog.xml#accepted-signal">accepted</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fileMode-prop">
<db:title>fileMode : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>fileMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the mode of the dialog.</db:para>
<db:para>Available values:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>FileDialog.OpenFile</db:para>
</db:td>
<db:td>
<db:para>The dialog is used to select an existing file (default).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FileDialog.OpenFiles</db:para>
</db:td>
<db:td>
<db:para>The dialog is used to select multiple existing files.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FileDialog.SaveFile</db:para>
</db:td>
<db:td>
<db:para>The dialog is used to select any file. The file does not have to exist.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="files-prop">
<db:title>files : list&lt;url&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;url&gt;</db:type>
<db:varname>files</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the final accepted files.</db:para>
<db:para>Unlike the <db:link xlink:href="qml-qt-labs-platform-filedialog.xml#currentFiles-prop">currentFiles</db:link> property, the <db:code>files</db:code> property is not updated while the user is selecting files in the dialog, but only after the final selection has been made. That is, when the user has clicked <db:guilabel>OK</db:guilabel> to accept files. Alternatively, the <db:link xlink:href="qml-qt-labs-platform-dialog.xml#accepted-signal">accepted</db:link>() signal can be handled to get the final selection.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-filedialog.xml#currentFiles-prop">currentFiles</db:link></db:member>
<db:member><db:link xlink:href="qml-qt-labs-platform-dialog.xml#accepted-signal">accepted</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="folder-prop">
<db:title>folder : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>folder</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the folder where files are selected. For selecting a folder, use <db:link xlink:href="qml-qt-labs-platform-folderdialog.xml">FolderDialog</db:link> instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-folderdialog.xml">FolderDialog</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="nameFilters-prop">
<db:title>nameFilters : list&lt;string&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;string&gt;</db:type>
<db:varname>nameFilters</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the filters that restrict the types of files that can be selected.</db:para>
<db:programlisting language="cpp">FileDialog {
    nameFilters: [&quot;Text files (*.txt)&quot;, &quot;HTML files (*.html *.htm)&quot;]
}
</db:programlisting>
<db:note>
<db:para><db:emphasis role="bold">*.*</db:emphasis> is not a portable filter, because the historical assumption that the file extension determines the file type is not consistent on every operating system. It is possible to have a file with no dot in its name (for example, <db:code>Makefile</db:code>). In a native Windows file dialog, <db:emphasis role="bold">*.*</db:emphasis> will match such files, while in other types of file dialogs it may not. So it is better to use <db:emphasis role="bold">*</db:emphasis> if you mean to select any file.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-filedialog.xml#selectedNameFilter-prop">selectedNameFilter</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="options-prop">
<db:title>options : flags</db:title>
<db:fieldsynopsis>
<db:type>flags</db:type>
<db:varname>options</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the various options that affect the look and feel of the dialog.</db:para>
<db:para>By default, all options are disabled.</db:para>
<db:para>Options should be set before showing the dialog. Setting them while the dialog is visible is not guaranteed to have an immediate effect on the dialog (depending on the option and on the platform).</db:para>
<db:para>Available options:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>FileDialog.DontResolveSymlinks</db:para>
</db:td>
<db:td>
<db:para>Don't resolve symlinks in the file dialog. By default symlinks are resolved.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FileDialog.DontConfirmOverwrite</db:para>
</db:td>
<db:td>
<db:para>Don't ask for confirmation if an existing file is selected. By default confirmation is requested.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FileDialog.ReadOnly</db:para>
</db:td>
<db:td>
<db:para>Indicates that the dialog doesn't allow creating directories.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FileDialog.HideNameFilterDetails</db:para>
</db:td>
<db:td>
<db:para>Indicates if the file name filter details are hidden or not.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="rejectLabel-prop">
<db:title>rejectLabel : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>rejectLabel</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the label text shown on the button that rejects the dialog.</db:para>
<db:para>When set to an empty string, the default label of the underlying platform is used. The default label is typically <db:guilabel>Cancel</db:guilabel>.</db:para>
<db:para>The default value is an empty string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-filedialog.xml#acceptLabel-prop">acceptLabel</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectedNameFilter-prop">
<db:title>selectedNameFilter group</db:title>
<db:bridgehead renderas="sect2" xml:id="selectedNameFilter.extensions-prop">selectedNameFilter.extensions : list&lt;string&gt;</db:bridgehead>
<db:fieldsynopsis>
<db:type>list&lt;string&gt;</db:type>
<db:varname>selectedNameFilter.extensions</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="selectedNameFilter.index-prop">selectedNameFilter.index : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>selectedNameFilter.index</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="selectedNameFilter.name-prop">selectedNameFilter.name : string</db:bridgehead>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>selectedNameFilter.name</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>These properties hold the currently selected name filter.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Name</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">index</db:emphasis> : int</db:para>
</db:td>
<db:td>
<db:para>This property determines which <db:link xlink:href="qml-qt-labs-platform-filedialog.xml#nameFilters-prop">name filter</db:link> is selected. The specified filter is selected when the dialog is opened. The value is updated when the user selects another filter.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>[read-only] <db:emphasis role="bold">name</db:emphasis> : string</db:para>
</db:td>
<db:td>
<db:para>This property holds the name of the selected filter. In the example below, the name of the first filter is <db:code>&quot;Text files&quot;</db:code> and the second is <db:code>&quot;HTML files&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>[read-only] <db:emphasis role="bold">extensions</db:emphasis> : list&lt;string&gt;</db:para>
</db:td>
<db:td>
<db:para>This property holds the list of extensions of the selected filter. In the example below, the list of extensions of the first filter is <db:code>[&quot;txt&quot;]</db:code> and the second is <db:code>[&quot;html&quot;, &quot;htm&quot;]</db:code>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:programlisting language="cpp">FileDialog {
    id: fileDialog
    selectedNameFilter.index: 1
    nameFilters: [&quot;Text files (*.txt)&quot;, &quot;HTML files (*.html *.htm)&quot;]
}

MyDocument {
    id: document
    fileType: fileDialog.selectedNameFilter.extensions[0]
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-filedialog.xml#nameFilters-prop">nameFilters</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
