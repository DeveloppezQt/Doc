<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Rotation QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides a way to rotate an Item.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick 2.12</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Rotation is part of <db:simplelist><db:member>qtquick-visual-transforms</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The Rotation type provides a way to rotate an <db:link xlink:href="qml-qtquick-item.xml">Item</db:link> through a rotation-type transform.</db:para>
<db:para>It allows (z axis) rotation to be relative to an arbitrary point, and also provides a way to specify 3D-like rotations for Items. This gives more control over item rotation than the <db:link xlink:href="qml-qtquick-item.xml#rotation-prop">rotation</db:link> property.</db:para>
<db:para>The following example rotates a Rectangle around its interior point (25, 25):</db:para>
<db:programlisting language="qml">Rectangle {
    width: 100; height: 100
    color: &quot;blue&quot;
    transform: Rotation { origin.x: 25; origin.y: 25; angle: 45}
}
</db:programlisting>
<db:para>For 3D-like item rotations, you must specify the axis of rotation in addition to the origin point. The following example shows various 3D-like rotations applied to an <db:link xlink:href="qml-qtquick-image.xml">Image</db:link>.</db:para>
<db:programlisting language="qml">import QtQuick 2.0

Row {
    x: 10; y: 10
    spacing: 10

    Image { source: &quot;pics/qt.png&quot; }
    Image {
        source: &quot;pics/qt.png&quot;
        transform: Rotation { origin.x: 30; origin.y: 30; axis { x: 0; y: 1; z: 0 } angle: 18 }
    }
    Image {
        source: &quot;pics/qt.png&quot;
        transform: Rotation { origin.x: 30; origin.y: 30; axis { x: 0; y: 1; z: 0 } angle: 36 }
    }
    Image {
        source: &quot;pics/qt.png&quot;
        transform: Rotation { origin.x: 30; origin.y: 30; axis { x: 0; y: 1; z: 0 } angle: 54 }
    }
    Image {
        source: &quot;pics/qt.png&quot;
        transform: Rotation { origin.x: 30; origin.y: 30; axis { x: 0; y: 1; z: 0 } angle: 72 }
    }
}
</db:programlisting>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/axisrotation.png"/>
</db:imageobject>
</db:mediaobject>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-customitems-dialcontrol-example.xml">Dial Control example</db:link></db:member>
<db:member><db:link xlink:href="qtdoc-demos-clocks-example.xml">Qt Quick Demo - Clocks</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="angle-prop">
<db:title>angle : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>angle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The angle to rotate, in degrees clockwise.</db:para>
</db:section>
<db:section xml:id="axis-prop">
<db:title>axis group</db:title>
<db:bridgehead renderas="sect2" xml:id="axis.x-prop">axis.x : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>axis.x</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="axis.y-prop">axis.y : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>axis.y</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="axis.z-prop">axis.z : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>axis.z</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The axis to rotate around. For simple (2D) rotation around a point, you do not need to specify an axis, as the default axis is the z axis (axis { x: 0; y: 0; z: 1 }).</db:para>
<db:para>For a typical 3D-like rotation you will usually specify both the origin and the axis.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/3d-rotation-axis.png"/>
</db:imageobject>
</db:mediaobject>
</db:section>
<db:section xml:id="origin-prop">
<db:title>origin group</db:title>
<db:bridgehead renderas="sect2" xml:id="origin.x-prop">origin.x : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>origin.x</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="origin.y-prop">origin.y : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>origin.y</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The origin point of the rotation (i.e., the point that stays fixed relative to the parent as the rest of the item rotates). By default the origin is (0, 0).</db:para>
</db:section>
</db:section>
</db:article>
