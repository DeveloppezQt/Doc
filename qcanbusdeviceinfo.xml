<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QCanBusDeviceInfo Class</db:title>
<db:productname>QtSerialBus</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Serial Bus Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qcanbusdeviceinfo.xml">QCanBusDeviceInfo</db:link> provides information about CAN bus interfaces.</db:para>
<db:para>This class was introduced in Qt 5.9.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QCanBusDeviceInfo</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.9</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS SerialBus)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::SerialBus)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += serialbus</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Each plugin may support one or more interfaces with different capabilities. This class provides information about available functions.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QCanBusDeviceInfo-1">
<db:title>QCanBusDeviceInfo::QCanBusDeviceInfo(const QCanBusDeviceInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QCanBusDeviceInfo</db:methodname>
<db:methodparam>
<db:type>const QCanBusDeviceInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QCanBusDeviceInfo(const QCanBusDeviceInfo &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QCanBusDeviceInfo">
<db:title>QCanBusDeviceInfo::~QCanBusDeviceInfo()</db:title>
<db:destructorsynopsis>
<db:methodname>~QCanBusDeviceInfo</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QCanBusDeviceInfo()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the CAN bus device info.</db:para>
</db:section>
<db:section xml:id="alias">
<db:title>[since 6.0] QString QCanBusDeviceInfo::alias() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>alias</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString alias() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a user defineable alias associated with this CAN bus interface.</db:para>
<db:para>Some CAN bus interfaces can have a user defined alias associated. This is mostly done with the CAN hardware vendors tools. The alias allows to identify this hardware later, especially when multiple interfaces are connected.</db:para>
<db:note>
<db:para>In contrast to <db:link xlink:href="qcanbusdeviceinfo.xml#serialNumber">serialNumber</db:link>(), the alias is not guaranteed to be unique.</db:para>
</db:note>
<db:para>If this function is not supported by the CAN plugin, an empty string is returned.</db:para>
<db:para>This function was introduced in Qt 6.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcanbusdeviceinfo.xml#serialNumber">serialNumber</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="channel">
<db:title>[since 5.11] int QCanBusDeviceInfo::channel() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>channel</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int channel() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the sequential channel number of the CAN bus interface, starting with zero. For example, a two channel CAN interface may have the channels 0 and 1. If the interface has only one channel or if no information about the channel is available, zero is returned.</db:para>
<db:para>This function was introduced in Qt 5.11.</db:para>
</db:section>
<db:section xml:id="description">
<db:title>[since 5.11] QString QCanBusDeviceInfo::description() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>description</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString description() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a textual description of the CAN bus interface, if available. Example output: &quot;PCAN USB Pro FD&quot;. If no description is available, an empty string is returned.</db:para>
<db:para>This function was introduced in Qt 5.11.</db:para>
</db:section>
<db:section xml:id="hasFlexibleDataRate">
<db:title>bool QCanBusDeviceInfo::hasFlexibleDataRate() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>hasFlexibleDataRate</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool hasFlexibleDataRate() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true, if the CAN bus interface is CAN FD (flexible data rate) capable.</db:para>
<db:para>If this information is not available, false is returned.</db:para>
</db:section>
<db:section xml:id="isVirtual">
<db:title>bool QCanBusDeviceInfo::isVirtual() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isVirtual</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isVirtual() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true, if the CAN bus interface is virtual (i.e. not connected to real CAN hardware).</db:para>
<db:para>If this information is not available, false is returned.</db:para>
</db:section>
<db:section xml:id="name">
<db:title>QString QCanBusDeviceInfo::name() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>name</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString name() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the interface name of this CAN bus interface, e.g. &quot;can0&quot;.</db:para>
<db:para>This corresponds to the <db:code>interfaceName</db:code> parameter of <db:link xlink:href="qcanbus.xml#createDevice">QCanBus::createDevice</db:link>().</db:para>
</db:section>
<db:section xml:id="plugin">
<db:title>[since 6.2] QString QCanBusDeviceInfo::plugin() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>plugin</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString plugin() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the plugin name of this CAN bus interface, e.g. &quot;peakcan&quot;.</db:para>
<db:para>This corresponds to the <db:code>plugin</db:code> parameter of <db:link xlink:href="qcanbus.xml#createDevice">QCanBus::createDevice</db:link>().</db:para>
<db:para>This function was introduced in Qt 6.2.</db:para>
</db:section>
<db:section xml:id="serialNumber">
<db:title>[since 5.11] QString QCanBusDeviceInfo::serialNumber() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>serialNumber</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString serialNumber() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the serial number of the CAN bus interface as string, if available. Otherwise, an empty string is returned.</db:para>
<db:para>This function was introduced in Qt 5.11.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcanbusdeviceinfo.xml#alias">alias</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="swap">
<db:title>void QCanBusDeviceInfo::swap(QCanBusDeviceInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>swap</db:methodname>
<db:methodparam>
<db:type>QCanBusDeviceInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void swap(QCanBusDeviceInfo &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Swaps this CAN bus device info with <db:code role="parameter">other</db:code>. This operation is very fast and never fails.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QCanBusDeviceInfo &amp;QCanBusDeviceInfo::operator=(const QCanBusDeviceInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QCanBusDeviceInfo &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QCanBusDeviceInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QCanBusDeviceInfo &amp; operator=(const QCanBusDeviceInfo &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Assigns <db:code role="parameter">other</db:code> to this CAN bus device info and returns a reference to this CAN bus device info.</db:para>
</db:section>
<db:section xml:id="operator-eq-1">
<db:title>QCanBusDeviceInfo &amp;QCanBusDeviceInfo::operator=(QCanBusDeviceInfo &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QCanBusDeviceInfo &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>QCanBusDeviceInfo &amp;&amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">move-assign</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QCanBusDeviceInfo &amp; operator=(QCanBusDeviceInfo &amp;&amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Move-assigns other to this <db:link xlink:href="qcanbusdeviceinfo.xml">QCanBusDeviceInfo</db:link> instance.</db:para>
</db:section>
</db:section>
</db:article>
