<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>WebChannel QML Type</db:title>
<db:productname>QtWebChannel</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebChannel Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>QML interface to <db:link xlink:href="qwebchannel.xml">QWebChannel</db:link>.</db:para>
<db:para>This type was introduced in Qt 5.4.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtWebChannel 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>WebChannel is part of <db:simplelist><db:member>webchannel-qml</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtwebchannel-webchannel.xml">WebChannel</db:link> provides a mechanism to transparently access <db:link xlink:href="qobject.xml">QObject</db:link> or QML objects from HTML clients. All properties, signals and public slots can be used from the HTML clients.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebchannel.xml">QWebChannel</db:link></db:member>
<db:member><db:link xlink:href="qtwebchannel-javascript.xml">JavaScript API</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="registeredObjects-prop">
<db:title>[read-only] registeredObjects : QQmlListProperty&lt;QObject&gt;</db:title>
<db:para>A list of objects which should be accessible to remote clients.</db:para>
<db:para>The objects must have the attached <db:link xlink:href="qml-qtwebchannel-webchannel.xml#id-attached-prop">id</db:link> property set to an identifier, under which the object is then known on the HTML side.</db:para>
<db:para>Once registered, all signals and property changes are automatically propagated to the clients. Public invokable methods, including slots, are also accessible to the clients.</db:para>
<db:para>If one needs to register objects which are not available when the component is created, use the imperative <db:link xlink:href="qml-qtwebchannel-webchannel.xml#registerObjects-method">registerObjects</db:link> method.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebchannel-webchannel.xml#registerObjects-method">registerObjects</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtwebchannel-webchannel.xml#id-attached-prop">id</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="transports-prop">
<db:title>[read-only] transports : QQmlListProperty&lt;QObject&gt;</db:title>
<db:para>A list of transport objects, which implement <db:link xlink:href="qwebchannelabstracttransport.xml">QWebChannelAbstractTransport</db:link>. The transports are used to talk to the remote clients.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebchannel-webchannel.xml#connectTo-method">connectTo</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtwebchannel-webchannel.xml#disconnectFrom-method">disconnectFrom</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="attached-property-documentation">
<db:title>Attached Property Documentation</db:title>
<db:section xml:id="id-attached-prop">
<db:title>WebChannel.id : QString</db:title>
<db:para>The identifier under which an object, registered to a <db:link xlink:href="qml-qtwebchannel-webchannel.xml">WebChannel</db:link>, is known to remote clients.</db:para>
<db:para>This property must be set for every object that should be published over the <db:link xlink:href="qml-qtwebchannel-webchannel.xml">WebChannel</db:link>. While no restrictions are enforced on the format of the id, it is usually a good idea to choose a string that is also a valid JavaScript identifier.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="connectTo-method">
<db:title>void connectTo(QWebChannelAbstractTransport <db:emphasis>transport</db:emphasis>)</db:title>
<db:para>Connects to the <db:code role="parameter">transport</db:code>, which represents a communication channel to a single client.</db:para>
<db:para>The transport object must be an implementation of <db:link xlink:href="qwebchannelabstracttransport.xml">QWebChannelAbstractTransport</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebchannel-webchannel.xml#transports-prop">transports</db:link></db:member>
<db:member><db:link xlink:href="qml-qtwebchannel-webchannel.xml#disconnectFrom-method">disconnectFrom</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="disconnectFrom-method">
<db:title>void disconnectFrom(QWebChannelAbstractTransport <db:emphasis>transport</db:emphasis>)</db:title>
<db:para>Disconnects the <db:code role="parameter">transport</db:code> from this <db:link xlink:href="qml-qtwebchannel-webchannel.xml">WebChannel</db:link>.</db:para>
<db:para>The client will not be able to communicate with the <db:link xlink:href="qml-qtwebchannel-webchannel.xml">WebChannel</db:link> anymore, nor will it receive any signals or property updates.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebchannel-webchannel.xml#connectTo-method">connectTo</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="registerObjects-method">
<db:title>void registerObjects(QVariantMap <db:emphasis>objects</db:emphasis>)</db:title>
<db:para>Registers objects to make them accessible to HTML clients. The key of the map is used as an identifier for the object on the client side.</db:para>
<db:para>Once registered, all signals and property changes are automatically propagated to the clients. Public invokable methods, including slots, are also accessible to the clients.</db:para>
<db:para>This imperative API can be used to register objects on the fly. For static objects, the declarative <db:link xlink:href="qml-qtwebchannel-webchannel.xml#registeredObjects-prop">registeredObjects</db:link> property should be preferred.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebchannel-webchannel.xml#registeredObjects-prop">registeredObjects</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
