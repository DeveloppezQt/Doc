<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Registering Products in App Store</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A short guide to registering in-app products in the iOS App Store.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>To take advantage of in-app purchasing functionality on iOS, register your application and all the available products in <db:link xlink:href="https://appstoreconnect.apple.com/login">App Store Connect</db:link>. This guide provides a brief introduction on how to register an application and it's in-app products on App Store.</db:para>
<db:para>In-App purchasing can only be tested on the actual hardware for the iOS platform. For more information refer to the <db:link xlink:href="http://developer.apple.com/in-app-purchase/">iOS documentation</db:link>.</db:para>
<db:section xml:id="register-a-unique-app-id">
<db:title>Register a unique app ID</db:title>
<db:para>One of the requirements to support in-app purchases on iOS is to have a registered unique App ID. This means that it is not possible to use an App ID that contains a wildcard character. You can check the existing App IDs and create new ones from the <db:link xlink:href="https://developer.apple.com/account/ios/identifiers/bundle/bundleList.action">Apple Developer Certificate, Identifiers, and Profiles manager</db:link>.</db:para>
<db:para>In the <db:guilabel>Identifiers</db:guilabel> tab of the <db:guilabel>Developer Certificate, Identifiers, and Profiles</db:guilabel> manager, click the <db:guilabel>+</db:guilabel> button to create a New App ID. This will open up the page to register a new iOS App ID.</db:para>
<db:para>Give your App a relevant ID description and prefix. Your App ID Suffix should be an Explicit App ID type. Enter a unique App ID in the Bundle ID field. It is recommended to use the com.mycompany.myappname convention for App ID. Where, the &quot;com.mycompany&quot; is the Internet domain name of the publisher.</db:para>
<db:para>In the <db:guilabel>App Services</db:guilabel> area make sure that the <db:guilabel>In-App Purchases</db:guilabel> is checked. Click <db:guilabel>continue</db:guilabel> your to complete the App ID registration.</db:para>
</db:section>
<db:section xml:id="create-a-provisioning-profile">
<db:title>Create a provisioning profile</db:title>
<db:para>To be able to use your new App ID, generate a new provision profile that includes the new ID to sign and run your app. Provisioning Profiles are also managed through the <db:guilabel>Apple Developer Certificate, Identifiers, and Profiles</db:guilabel> manager.</db:para>
<db:para>Navigate to the <db:guilabel>Provisioning Profiles</db:guilabel> tab of the manager and click the <db:guilabel>+</db:guilabel> button to create a new Provisioning Profile. Make sure that the <db:guilabel>iOS App Development</db:guilabel> is selected and click the <db:guilabel>Continue</db:guilabel> button.</db:para>
<db:para>You are now given an option to choose the App ID to use for this profile, which will be the unique App ID you created in the previous section. Once again make sure that the App ID does not contain any wildcard characters (“*”) as it is not be possible to use the In-App Purchasing service with such an App ID.</db:para>
<db:para>On the next page you will need to select the certificates that will be distributed with your Provisioning Profile. You would have needed to uploaded a certificate on your local development machine to the Apple Developer Certificate, Identifiers, and Profiles manager previously. Generally you will want to add any certificates of the members of your team who will need to build your App.</db:para>
<db:para>On the next page you will need to select the devices you will be developing and testing your app on. You must register your devices to the Apple Developer Certificate, Identifiers, and Profiles manager previously. The devices you select here are the only ones capable of running apps signed against this provisioning profile, so select all the devices you intend use during the development and testing phase.</db:para>
<db:para>Give your Provisioning Profile a descriptive display name, and click <db:guilabel>Generate</db:guilabel> to create the actual profile. When this process is completed you’ll be given a choice to download the Provisioning Profile.</db:para>
<db:para>Open the downloaded file in XCode to install. Now the next time you plug in one of the registered devices, your Provisioning Profile should be installed to it automatically.</db:para>
</db:section>
<db:section xml:id="register-your-application">
<db:title>Register your application</db:title>
<db:para>Before you can register new products available to the in-app purchasing service, you need to register your application in App Store Connect. App Store Connect is the place where you register an app when you want to submit it to the Apple iOS App Store.</db:para>
<db:para>Start by going to <db:link xlink:href="https://appstoreconnect.apple.com/login">App Store Connect</db:link> and logging in. Once logged in open the <db:guilabel>My Apps</db:guilabel> link that will take you to <db:guilabel>Apps</db:guilabel> page. If you have already registered your app here, you can skip the registration step, otherwise click the plus button and select <db:guilabel>New App</db:guilabel> in the top left corner of the page.</db:para>
<db:para>Select iOS App and then proceed to fill out the required information on the next page. When you get to the <db:guilabel>Bundle ID</db:guilabel> section select the unique App ID we created in the previous steps.</db:para>
<db:para>It is likely at this point that you do not have all the necessary details to complete the information required to register your app. For now, just fill out the forms with stub data as everything except the <db:guilabel>SKU</db:guilabel> and <db:guilabel>Version</db:guilabel> fields are editable later.</db:para>
</db:section>
<db:section xml:id="archive-and-uploading-application">
<db:title>Archive and uploading application</db:title>
<db:para>When you build application for <db:link xlink:href="qdesktopservices.xml#ios">iOs</db:link> device Qt Creator creates XCode project that will be used for uploading your application to the App Store. Open the XCode project and go to signing and Capabilities from your project properties and make sure that the Apple ID is selected what you use on App Store Connect. Make Sure that the Bundle Identifier is the same as that you created on the <db:guilabel>Developer Certificate, Identifiers, and Profiles</db:guilabel> page.</db:para>
<db:para>Next select Set the active scheme from the top bar of the XCode window and select Generic iOS Device. Afte that select Product on the menu bar and click Archive. On the pop-up window select Distribute App go through the wizard and the build will show up to the App Store Connect.</db:para>
</db:section>
<db:section xml:id="setting-up-application-testing">
<db:title>Setting up application testing</db:title>
<db:para>From the App Store Connect select your application and go to TestFlight page. You should see at least one build of your application in the page. there are two type of testing groups internal and external. In internal testing group you can select developer who has access to your application on the App Store Connect. In external group you can share your application with public link or you can invite specific people to test your application.</db:para>
</db:section>
<db:section xml:id="register-the-products">
<db:title>Register the products</db:title>
<db:para>Once your app is registered in App Store Connect you will have additional options available to manage that App. In the <db:guilabel>Apps</db:guilabel> page of App Sotre Connect, click the icon representing your app to manage its details. Within this menu you can select the <db:guilabel>Manage In-App Purchases</db:guilabel> from list on the right to register in-app products you wish to offer.</db:para>
<db:para>To register a new product, click the <db:guilabel>Plus icon</db:guilabel> button in the right of the &quot;In-App Purchase&quot; header. The first choice you will be given is the type of in-app purchase you would like to create.</db:para>
<db:para>On the next page, you must fill out the details about your product. The <db:guilabel>Reference Name</db:guilabel> field refers to how the product will be displayed in App Store Connect and in sales reports, but not in the App Store itself. The <db:guilabel>Product ID</db:guilabel> field is very important as it is the unique ID that will be used to query for the product from your app itself. If possible make this the same ID as the corresponding products in the other platform’s stores, otherwise you will have to conditional logic in your app for each platform when specifying product identifiers.</db:para>
<db:para>Select the pricing and availability details for you product next. For the iOS App Store, pricing is set via a tier system. Each tier represents a price level in each iOS App Store region. Your end users will be given the actual price expected for a product in terms of what region their App Store is in.</db:para>
<db:para>In the next section <db:guilabel>In-App Purchase Details</db:guilabel> you specify the details for at least one language. When the app requests the product details like title and description, they will be provided in the language of their locale if they are available. Create language details for the regions you expect to distribute app in.</db:para>
<db:para>Finally, you will need to attach a screenshot that will be used for review purposes. This again can be a stub for now, but your product will need to pass the review before it can go live to be sold in your published app. Click <db:guilabel>save</db:guilabel> to complete the product registration.</db:para>
</db:section>
</db:article>
