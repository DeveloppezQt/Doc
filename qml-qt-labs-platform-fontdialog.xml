<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>FontDialog QML Type</db:title>
<db:productname>QtLabsPlatform</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Labs Platform Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A native font dialog.</db:para>
<db:para>This type was introduced in Qt 5.8.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt.labs.platform 1.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Dialog</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qt-labs-platform-fontdialog.xml">FontDialog</db:link> type provides a QML API for native platform font dialogs.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtlabsplatform-fontdialog-gtk.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>To show a font dialog, construct an instance of <db:link xlink:href="qml-qt-labs-platform-fontdialog.xml">FontDialog</db:link>, set the desired properties, and call <db:link xlink:href="qml-qt-labs-platform-dialog.xml#open-method">open</db:link>(). The <db:link xlink:href="qml-qt-labs-platform-fontdialog.xml#currentFont-prop">currentFont</db:link> property can be used to determine the currently selected font in the dialog. The <db:link xlink:href="qml-qt-labs-platform-fontdialog.xml#font-prop">font</db:link> property is updated only after the final selection has been made by accepting the dialog.</db:para>
<db:programlisting language="cpp">MenuItem {
    text: &quot;Font&quot;
    onTriggered: fontDialog.open()
}

FontDialog {
    id: fontDialog
    currentFont.family: document.font
}

MyDocument {
    id: document
    font: fontDialog.font
}
</db:programlisting>
<db:section xml:id="availability">
<db:title>Availability</db:title>
<db:para>A native platform font dialog is currently available on the following platforms:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>macOS</db:para>
</db:listitem>
<db:listitem>
<db:para>Linux (when running with the GTK+ platform theme)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The Qt Labs Platform module uses Qt Widgets as a fallback on platforms that do not have a native implementation available. Therefore, applications that use types from the Qt Labs Platform module should link to <db:link xlink:href="qtwidgets-module.xml">QtWidgets</db:link> and use <db:link xlink:href="qapplication.xml">QApplication</db:link> instead of <db:link xlink:href="qguiapplication.xml">QGuiApplication</db:link>.</db:para>
<db:para>To link against the <db:link xlink:href="qtwidgets-module.xml">QtWidgets</db:link> library, add the following to your qmake project file:</db:para>
<db:programlisting language="cpp">QT += widgets
</db:programlisting>
<db:para>Create an instance of <db:link xlink:href="qapplication.xml">QApplication</db:link> in <db:code>main()</db:code>:</db:para>
<db:programlisting language="cpp">#include &amp;lt;QApplication&amp;gt;
#include &amp;lt;QQmlApplicationEngine&amp;gt;

int main(int argc, char *argv[])
{
    QApplication::setAttribute(Qt::AA_EnableHighDpiScaling);
    QApplication app(argc, argv);
    QQmlApplicationEngine engine;
    engine.load(QUrl(QStringLiteral(&quot;qrc:/main.qml&quot;)));
    return app.exec();
}
</db:programlisting>
<db:note>
<db:para><db:emphasis>Types in Qt.labs modules are not guaranteed to remain compatible in future versions.</db:emphasis></db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="currentFont-prop">
<db:title>currentFont : font</db:title>
<db:fieldsynopsis>
<db:type>font</db:type>
<db:varname>currentFont</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the currently selected font in the dialog.</db:para>
<db:para>Unlike the <db:link xlink:href="qml-qt-labs-platform-fontdialog.xml#font-prop">font</db:link> property, the <db:code>currentFont</db:code> property is updated while the user is selecting fonts in the dialog, even before the final selection has been made.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-fontdialog.xml#font-prop">font</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="font-prop">
<db:title>font : font</db:title>
<db:fieldsynopsis>
<db:type>font</db:type>
<db:varname>font</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the final accepted font.</db:para>
<db:para>Unlike the <db:link xlink:href="qml-qt-labs-platform-fontdialog.xml#currentFont-prop">currentFont</db:link> property, the <db:code>font</db:code> property is not updated while the user is selecting fonts in the dialog, but only after the final selection has been made. That is, when the user has clicked <db:guilabel>OK</db:guilabel> to accept a font. Alternatively, the <db:link xlink:href="qml-qt-labs-platform-dialog.xml#accepted-signal">accepted</db:link>() signal can be handled to get the final selection.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-fontdialog.xml#currentFont-prop">currentFont</db:link></db:member>
<db:member><db:link xlink:href="qml-qt-labs-platform-dialog.xml#accepted-signal">accepted</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="options-prop">
<db:title>options : flags</db:title>
<db:fieldsynopsis>
<db:type>flags</db:type>
<db:varname>options</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the various options that affect the look and feel of the dialog.</db:para>
<db:para>By default, all options are disabled.</db:para>
<db:para>Options should be set before showing the dialog. Setting them while the dialog is visible is not guaranteed to have an immediate effect on the dialog (depending on the option and on the platform).</db:para>
<db:para>Available options:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>FontDialog.ScalableFonts</db:para>
</db:td>
<db:td>
<db:para>Show scalable fonts.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FontDialog.NonScalableFonts</db:para>
</db:td>
<db:td>
<db:para>Show non-scalable fonts.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FontDialog.MonospacedFonts</db:para>
</db:td>
<db:td>
<db:para>Show monospaced fonts.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FontDialog.ProportionalFonts</db:para>
</db:td>
<db:td>
<db:para>Show proportional fonts.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FontDialog.NoButtons</db:para>
</db:td>
<db:td>
<db:para>Don't display <db:guilabel>OK</db:guilabel> and <db:guilabel>Cancel</db:guilabel> buttons (useful for &quot;live dialogs&quot;).</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
</db:article>
