<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Icon QML Type</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Icon type represents an icon image source which can have multiple sizes.</db:para>
<db:para>This type was introduced in Qt Location 5.5.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtLocation 5.3</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt Location 5.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Icon is part of <db:simplelist><db:member>qml-QtLocation5-places</db:member><db:member>qml-QtLocation5-places-data</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The Icon type can be used in conjunction with an <db:link xlink:href="qml-qtquick-image.xml">Image</db:link> type to display an icon. The <db:link xlink:href="qml-qtlocation-icon.xml#url-method">url</db:link>() function is used to construct an icon URL of a requested size, the icon which most closely matches the requested size is returned.</db:para>
<db:para>The Icon type also has a parameters map which is a set of key value pairs. The precise keys to use depend on the <db:link xlink:href="qtlocation-index.xml#plugin-references-and-parameters">plugin</db:link> being used. The parameters map is used by the <db:link xlink:href="qml-qtlocation-plugin.xml">Plugin</db:link> to determine which URL to return.</db:para>
<db:para>In the case where an icon can only possibly have one image URL, the parameter key of <db:code>&quot;singleUrl&quot;</db:code> can be used with a <db:link xlink:href="qurl.xml">QUrl</db:link> value. Any Icon with this parameter will always return the specified URL regardless of the requested icon size and not defer to any Plugin.</db:para>
<db:para>The following code shows how to display a 64x64 pixel icon:</db:para>
<db:programlisting language="qml">import QtQuick 2.0
import QtPositioning 5.5
import QtLocation 5.6

Image {
    source: icon.url(Qt.size(64, 64))
}
</db:programlisting>
<db:para>Alternatively, a default sized icon can be specified like so:</db:para>
<db:programlisting language="qml">    source: icon.url()
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="icon-prop">
<db:title>icon : QPlaceIcon</db:title>
<db:para>For details on how to use this property to interface between C++ and QML see &quot;<db:link xlink:href="location-cpp-qml.xml#icon-qplaceicon">Interfaces between C++ and QML Code</db:link>&quot;.</db:para>
</db:section>
<db:section xml:id="parameters-prop">
<db:title>[read-only] parameters : Object</db:title>
<db:para>This property holds the parameters of the icon and is a map. These parameters are used by the plugin to return the appropriate URL when <db:link xlink:href="qml-qtlocation-icon.xml#url-method">url</db:link>() is called and to specify locations to save to when saving icons.</db:para>
<db:para>Consult the <db:link xlink:href="qtlocation-index.xml#plugin-references-and-parameters">plugin documentation</db:link> for what parameters are supported and how they should be used.</db:para>
<db:para>Note, due to limitations of the <db:link xlink:href="qqmlpropertymap.xml">QQmlPropertyMap</db:link>, it is not possible to declaratively specify the parameters in QML, assignment of parameters keys and values can only be accomplished by JavaScript.</db:para>
</db:section>
<db:section xml:id="plugin-prop">
<db:title>plugin : Plugin</db:title>
<db:para>The property holds the plugin that is responsible for managing this icon.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="url-method">
<db:title>url url(size <db:emphasis>size</db:emphasis>)</db:title>
<db:para>Returns a URL for the icon image that most closely matches the given <db:code role="parameter">size</db:code>.</db:para>
<db:para>If no plugin has been assigned to the icon, and the parameters do not contain the 'singleUrl' key, a default constructed URL is returned.</db:para>
</db:section>
</db:section>
</db:article>
