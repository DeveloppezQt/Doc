<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Data Visualization Interacting with Data</db:title>
<db:productname>QtDataVisualization</db:productname>
<db:edition>Qt Data Visualization | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Data Visualization Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Data Visualization Reference Documentation.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="interacting-with-data">
<db:title>Interacting with Data</db:title>
<db:para>End users can interact with the rendered graph by using either the mouse or touch to rotate, zoom, or select data. Graphs can be rotated freely by holding down the right mouse button and moving the mouse. Zooming is done by rolling the mouse wheel. Selecting, if enabled, is done by pressing the left mouse button. The scene can be reset to the default camera view by clicking the mouse wheel. In touch devices, rotation is done by tap-and-move, selection by tap-and-hold, and zoom by pinch.</db:para>
<db:para>Qt Data Visualization has default handlers for mouse actions and touch gestures. For the default mouse controls, see <db:link xlink:href="q3dinputhandler.xml">Q3DInputHandler</db:link>, and for the default touch controls, see <db:link xlink:href="qtouch3dinputhandler.xml">QTouch3DInputHandler</db:link>. The default handlers must be disabled when using customized input handlers.</db:para>
<db:para>The <db:link xlink:href="qtdatavisualization-custominput-example.xml">Custom Input Example</db:link> illustrates how to use a custom input handler to select items upon mouseover instead of mouse click. The information below the mouse cursor is displayed as a popup.</db:para>
<db:para>In addition to perspective projection, orthographic projection can be used to create 2D graphs by replacing the default input handler with one that does not allow rotating the graph and setting the camera to view the graph directly from the side or from the top.</db:para>
</db:section>
<db:section xml:id="data-selection-modes">
<db:title>Data Selection Modes</db:title>
<db:para>All visualization types support selecting a single data item - a bar, a scatter item, or a surface vertex - using mouse, touch, and programmatically via the series APIs. The selected item is highlighted in the rendered graph, and selecting causes emission of a series specific signal for this purpose, for example, <db:link xlink:href="qbar3dseries.xml#selectedBar-prop">QBar3DSeries::selectedBarChanged</db:link>(), which the application can handle.</db:para>
<db:para>Bar and surface graphs support slice selection modes, where the selected row or column is drawn in a separate viewport as a pseudo-2D graph. This makes it easier to see the actual values of a single row or column.</db:para>
<db:para>Bar graph additionally supports simply highlighting the whole row and/or column of the selected bar without opening the slice view. Bar graph also supports selecting/slicing a whole row and/or column by clicking the axis label, based on selection mode.</db:para>
<db:para>When multiple series are added to a graph, selecting an item in one of them will clear the selection on other series.</db:para>
</db:section>
</db:article>
