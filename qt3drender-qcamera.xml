<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QCamera Class</db:title>
<db:subtitle>Qt3DRender::QCamera</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qt3drender-qcamera.xml">QCamera</db:link> class defines a view point through which the scene will be rendered.</db:para>
<db:para>This class was introduced in Qt 5.5.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QCamera</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-camera.xml" xlink:role="">Camera</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qentity.xml" xlink:role="class">Qt3DCore::QEntity</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="CameraTranslationOption-enum">
<db:title>enum QCamera::CameraTranslationOption</db:title>
<db:para>This enum specifies how camera view center is translated</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qcamera.xml">QCamera</db:link></db:emphasis>::TranslateViewCenter</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Translate the view center causing the view direction to remain the same</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qcamera.xml">QCamera</db:link></db:emphasis>::DontTranslateViewCenter</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Don't translate the view center causing the view direction to change</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QCamera">
<db:title>[explicit] QCamera::QCamera(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Creates a new <db:link xlink:href="qt3drender-qcamera.xml">QCamera</db:link> instance with the specified <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="lens">
<db:title>Qt3DRender::QCameraLens *QCamera::lens() const</db:title>
<db:para>Returns the current lens.</db:para>
</db:section>
<db:section xml:id="pan">
<db:title>void QCamera::pan(float <db:emphasis>angle</db:emphasis>)</db:title>
<db:para>Adjusts the pan angle of the camera by <db:code role="parameter">angle</db:code> in degrees.</db:para>
</db:section>
<db:section xml:id="pan-1">
<db:title>void QCamera::pan(float <db:emphasis>angle</db:emphasis>, const QVector3D &amp;<db:emphasis>axis</db:emphasis>)</db:title>
<db:para>Adjusts the pan angle of the camera by <db:code role="parameter">angle</db:code> in degrees on a chosen <db:code role="parameter">axis</db:code>.</db:para>
</db:section>
<db:section xml:id="panAboutViewCenter">
<db:title>void QCamera::panAboutViewCenter(float <db:emphasis>angle</db:emphasis>)</db:title>
<db:para>Adjusts the camera pan about view center by <db:code role="parameter">angle</db:code> in degrees.</db:para>
</db:section>
<db:section xml:id="panAboutViewCenter-1">
<db:title>void QCamera::panAboutViewCenter(float <db:emphasis>angle</db:emphasis>, const QVector3D &amp;<db:emphasis>axis</db:emphasis>)</db:title>
<db:para>Adjusts the camera pan about view center by <db:code role="parameter">angle</db:code> in degrees on <db:code role="parameter">axis</db:code>.</db:para>
</db:section>
<db:section xml:id="panRotation">
<db:title>QQuaternion QCamera::panRotation(float <db:emphasis>angle</db:emphasis>) const</db:title>
<db:para>Returns the calculated pan rotation in relation to the <db:code role="parameter">angle</db:code> in degrees taken in to adjust the camera's pan or left/right rotation on the Y axis.</db:para>
</db:section>
<db:section xml:id="roll">
<db:title>void QCamera::roll(float <db:emphasis>angle</db:emphasis>)</db:title>
<db:para>Adjusts the camera roll by <db:code role="parameter">angle</db:code> in degrees.</db:para>
</db:section>
<db:section xml:id="rollAboutViewCenter">
<db:title>void QCamera::rollAboutViewCenter(float <db:emphasis>angle</db:emphasis>)</db:title>
<db:para>Adjusts the camera roll about view center by <db:code role="parameter">angle</db:code> in degrees.</db:para>
</db:section>
<db:section xml:id="rollRotation">
<db:title>QQuaternion QCamera::rollRotation(float <db:emphasis>angle</db:emphasis>) const</db:title>
<db:para>Returns the calculated roll rotation in relation to the <db:code role="parameter">angle</db:code> in degrees taken in to adjust the camera's roll or lean left/right rotation on the Z axis.</db:para>
</db:section>
<db:section xml:id="rotate">
<db:title>void QCamera::rotate(const QQuaternion &amp;<db:emphasis>q</db:emphasis>)</db:title>
<db:para>Rotates the camera with the use of a Quaternion in <db:code role="parameter">q</db:code>.</db:para>
</db:section>
<db:section xml:id="rotateAboutViewCenter">
<db:title>void QCamera::rotateAboutViewCenter(const QQuaternion &amp;<db:emphasis>q</db:emphasis>)</db:title>
<db:para>Rotates the camera about the view center with the use of a Quaternion in <db:code role="parameter">q</db:code>.</db:para>
</db:section>
<db:section xml:id="rotation">
<db:title>QQuaternion QCamera::rotation(float <db:emphasis>angle</db:emphasis>, const QVector3D &amp;<db:emphasis>axis</db:emphasis>) const</db:title>
<db:para>Returns the calculated rotation in relation to the <db:code role="parameter">angle</db:code> in degrees and chosen <db:code role="parameter">axis</db:code> taken in.</db:para>
</db:section>
<db:section xml:id="setAspectRatio">
<db:title>void QCamera::setAspectRatio(float <db:emphasis>aspectRatio</db:emphasis>)</db:title>
<db:para>Sets the camera's aspect ratio to <db:code role="parameter">aspectRatio</db:code>.</db:para>
<db:note>
<db:para>Setter function for property aspectRatio. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcamera.xml#aspectRatio-prop">aspectRatio</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBottom">
<db:title>void QCamera::setBottom(float <db:emphasis>bottom</db:emphasis>)</db:title>
<db:para>Sets the bottom of the camera to <db:code role="parameter">bottom</db:code>.</db:para>
<db:note>
<db:para>Setter function for property bottom. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcamera.xml#bottom-prop">bottom</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFarPlane">
<db:title>void QCamera::setFarPlane(float <db:emphasis>farPlane</db:emphasis>)</db:title>
<db:para>Sets the camera's far plane to <db:code role="parameter">farPlane</db:code></db:para>
<db:note>
<db:para>Setter function for property farPlane. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcamera.xml#farPlane-prop">farPlane</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFieldOfView">
<db:title>void QCamera::setFieldOfView(float <db:emphasis>fieldOfView</db:emphasis>)</db:title>
<db:para>Sets the camera's field of view to <db:code role="parameter">fieldOfView</db:code> in degrees.</db:para>
<db:note>
<db:para>Setter function for property fieldOfView. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcamera.xml#fieldOfView-prop">fieldOfView</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLeft">
<db:title>void QCamera::setLeft(float <db:emphasis>left</db:emphasis>)</db:title>
<db:para>Sets the left of the camera to <db:code role="parameter">left</db:code>.</db:para>
<db:note>
<db:para>Setter function for property left. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcamera.xml#left-prop">left</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setNearPlane">
<db:title>void QCamera::setNearPlane(float <db:emphasis>nearPlane</db:emphasis>)</db:title>
<db:para>Sets the camera's near plane to <db:code role="parameter">nearPlane</db:code>.</db:para>
<db:note>
<db:para>Setter function for property nearPlane. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcamera.xml#nearPlane-prop">nearPlane</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPosition">
<db:title>void QCamera::setPosition(const QVector3D &amp;<db:emphasis>position</db:emphasis>)</db:title>
<db:para>Sets the camera's position in 3D space to <db:code role="parameter">position</db:code>.</db:para>
<db:note>
<db:para>Setter function for property position. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcamera.xml#position-prop">position</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setProjectionMatrix">
<db:title>void QCamera::setProjectionMatrix(const QMatrix4x4 &amp;<db:emphasis>projectionMatrix</db:emphasis>)</db:title>
<db:para>Sets the camera's projection matrix to <db:code role="parameter">projectionMatrix</db:code>.</db:para>
<db:note>
<db:para>Setter function for property projectionMatrix. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcamera.xml#projectionMatrix-prop">projectionMatrix</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setProjectionType">
<db:title>void QCamera::setProjectionType(Qt3DRender::QCameraLens::ProjectionType <db:emphasis>type</db:emphasis>)</db:title>
<db:para>Sets the camera's projection type to <db:code role="parameter">type</db:code>.</db:para>
<db:note>
<db:para>Setter function for property projectionType. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcamera.xml#projectionType-prop">projectionType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setRight">
<db:title>void QCamera::setRight(float <db:emphasis>right</db:emphasis>)</db:title>
<db:para>Sets the right of the camera to <db:code role="parameter">right</db:code>.</db:para>
<db:note>
<db:para>Setter function for property right. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcamera.xml#right-prop">right</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTop">
<db:title>void QCamera::setTop(float <db:emphasis>top</db:emphasis>)</db:title>
<db:para>Sets the top of the camera to <db:code role="parameter">top</db:code>.</db:para>
<db:note>
<db:para>Setter function for property top. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcamera.xml#top-prop">top</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setUpVector">
<db:title>void QCamera::setUpVector(const QVector3D &amp;<db:emphasis>upVector</db:emphasis>)</db:title>
<db:para>Sets the camera's up vector to <db:code role="parameter">upVector</db:code>.</db:para>
<db:note>
<db:para>Setter function for property upVector. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcamera.xml#upVector-prop">upVector</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setViewCenter">
<db:title>void QCamera::setViewCenter(const QVector3D &amp;<db:emphasis>viewCenter</db:emphasis>)</db:title>
<db:para>Sets the camera's view center to <db:code role="parameter">viewCenter</db:code>.</db:para>
<db:note>
<db:para>Setter function for property viewCenter. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcamera.xml#viewCenter-prop">viewCenter</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="tilt">
<db:title>void QCamera::tilt(float <db:emphasis>angle</db:emphasis>)</db:title>
<db:para>Adjusts the tilt angle of the camera by <db:code role="parameter">angle</db:code> in degrees.</db:para>
</db:section>
<db:section xml:id="tiltAboutViewCenter">
<db:title>void QCamera::tiltAboutViewCenter(float <db:emphasis>angle</db:emphasis>)</db:title>
<db:para>Adjusts the camera tilt about view center by <db:code role="parameter">angle</db:code> in degrees.</db:para>
</db:section>
<db:section xml:id="tiltRotation">
<db:title>QQuaternion QCamera::tiltRotation(float <db:emphasis>angle</db:emphasis>) const</db:title>
<db:para>Returns the calculated tilt rotation in relation to the <db:code role="parameter">angle</db:code> in degrees taken in to adjust the camera's tilt or up/down rotation on the X axis.</db:para>
</db:section>
<db:section xml:id="transform">
<db:title>Qt3DCore::QTransform *QCamera::transform() const</db:title>
<db:para>Returns the camera's position via transform.</db:para>
</db:section>
<db:section xml:id="translate">
<db:title>void QCamera::translate(const QVector3D &amp;<db:emphasis>vLocal</db:emphasis>, Qt3DRender::QCamera::CameraTranslationOption <db:emphasis>option</db:emphasis> = TranslateViewCenter)</db:title>
<db:para>Translates the camera's position and its view vector by <db:code role="parameter">vLocal</db:code> in local coordinates. The <db:code role="parameter">option</db:code> allows for toggling whether the view center should be translated.</db:para>
</db:section>
<db:section xml:id="translateWorld">
<db:title>void QCamera::translateWorld(const QVector3D &amp;<db:emphasis>vWorld</db:emphasis>, Qt3DRender::QCamera::CameraTranslationOption <db:emphasis>option</db:emphasis> = TranslateViewCenter)</db:title>
<db:para>Translates the camera's position and its view vector by <db:code role="parameter">vWorld</db:code> in world coordinates. The <db:code role="parameter">option</db:code> allows for toggling whether the view center should be translated.</db:para>
</db:section>
</db:section>
</db:article>
