<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>BarChart Example</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The example shows how to create a bar chart.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>BarChart shows the data in sets as separate bars, which are in categories.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_barchart.png"/>
</db:imageobject>
</db:mediaobject>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="http://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section xml:id="creating-bar-charts">
<db:title>Creating Bar Charts</db:title>
<db:para>The barsets are used in the same way in all barcharts. To illustrate the difference between various barcharts, we use the same data in the examples. Data that the barchart visualizes, is defined by the <db:link xlink:href="qbarset.xml">QBarSet</db:link> instances. Here we create the sets and append data to them. The data is appended here with the &lt;&lt; operator. Alternatively, the append method could be used.</db:para>
<db:programlisting language="cpp">    QBarSet *set0 = new QBarSet(&quot;Jane&quot;);
    QBarSet *set1 = new QBarSet(&quot;John&quot;);
    QBarSet *set2 = new QBarSet(&quot;Axel&quot;);
    QBarSet *set3 = new QBarSet(&quot;Mary&quot;);
    QBarSet *set4 = new QBarSet(&quot;Samantha&quot;);

    *set0 &amp;lt;&amp;lt; 1 &amp;lt;&amp;lt; 2 &amp;lt;&amp;lt; 3 &amp;lt;&amp;lt; 4 &amp;lt;&amp;lt; 5 &amp;lt;&amp;lt; 6;
    *set1 &amp;lt;&amp;lt; 5 &amp;lt;&amp;lt; 0 &amp;lt;&amp;lt; 0 &amp;lt;&amp;lt; 4 &amp;lt;&amp;lt; 0 &amp;lt;&amp;lt; 7;
    *set2 &amp;lt;&amp;lt; 3 &amp;lt;&amp;lt; 5 &amp;lt;&amp;lt; 8 &amp;lt;&amp;lt; 13 &amp;lt;&amp;lt; 8 &amp;lt;&amp;lt; 5;
    *set3 &amp;lt;&amp;lt; 5 &amp;lt;&amp;lt; 6 &amp;lt;&amp;lt; 7 &amp;lt;&amp;lt; 3 &amp;lt;&amp;lt; 4 &amp;lt;&amp;lt; 5;
    *set4 &amp;lt;&amp;lt; 9 &amp;lt;&amp;lt; 7 &amp;lt;&amp;lt; 5 &amp;lt;&amp;lt; 3 &amp;lt;&amp;lt; 1 &amp;lt;&amp;lt; 2;
</db:programlisting>
<db:para>We create the series and append the barsets to it. The series takes ownership of the barsets. The series groups the data from sets to categories. First values of each set are grouped together at first category second value to second category and so on.</db:para>
<db:programlisting language="cpp">    QBarSeries *series = new QBarSeries();
    series-&amp;gt;append(set0);
    series-&amp;gt;append(set1);
    series-&amp;gt;append(set2);
    series-&amp;gt;append(set3);
    series-&amp;gt;append(set4);
</db:programlisting>
<db:para>Here we create the chart object and add the series to it. We set the title for chart with setTitle and then turn on animations of the series by calling setAnimationOptions(<db:link xlink:href="qchart.xml#AnimationOption-enum">QChart::SeriesAnimations</db:link>)</db:para>
<db:programlisting language="cpp">    QChart *chart = new QChart();
    chart-&amp;gt;addSeries(series);
    chart-&amp;gt;setTitle(&quot;Simple barchart example&quot;);
    chart-&amp;gt;setAnimationOptions(QChart::SeriesAnimations);
</db:programlisting>
<db:para>To have categories displayed on axis, we need to create a <db:link xlink:href="qbarcategoryaxis.xml">QBarCategoryAxis</db:link> for that. Here we create a category axis with a list of categories and set it to be aligned to the bottom, acting as the x-axis, and attach it to the series. The chart takes ownership of the axis. For y-axis we use a value axis, aligned to the left-hand side.</db:para>
<db:programlisting language="cpp">    QStringList categories;
    categories &amp;lt;&amp;lt; &quot;Jan&quot; &amp;lt;&amp;lt; &quot;Feb&quot; &amp;lt;&amp;lt; &quot;Mar&quot; &amp;lt;&amp;lt; &quot;Apr&quot; &amp;lt;&amp;lt; &quot;May&quot; &amp;lt;&amp;lt; &quot;Jun&quot;;
    QBarCategoryAxis *axisX = new QBarCategoryAxis();
    axisX-&amp;gt;append(categories);
    chart-&amp;gt;addAxis(axisX, Qt::AlignBottom);
    series-&amp;gt;attachAxis(axisX);

    QValueAxis *axisY = new QValueAxis();
    axisY-&amp;gt;setRange(0,15);
    chart-&amp;gt;addAxis(axisY, Qt::AlignLeft);
    series-&amp;gt;attachAxis(axisY);
</db:programlisting>
<db:para>We also want to show the legend. To do that, we get the legend pointer from the chart and set it to visible. We also place the legend to the bottom of the chart by setting its alignment to <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignBottom</db:link>.</db:para>
<db:programlisting language="cpp">    chart-&amp;gt;legend()-&amp;gt;setVisible(true);
    chart-&amp;gt;legend()-&amp;gt;setAlignment(Qt::AlignBottom);
</db:programlisting>
<db:para>Finally we add the chart onto a view. We also turn on the antialiasing for the chartView.</db:para>
<db:programlisting language="cpp">    QChartView *chartView = new QChartView(chart);
    chartView-&amp;gt;setRenderHint(QPainter::Antialiasing);
</db:programlisting>
<db:para>The chart is ready to be shown. We set the chart to be central widget of the window. We also set the size for the chart window and show it.</db:para>
<db:programlisting language="cpp">    QMainWindow window;
    window.setCentralWidget(chartView);
    window.resize(420, 300);
    window.show();
</db:programlisting>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="barchart/barchart.pro">barchart/barchart.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="barchart/main.cpp">barchart/main.cpp</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
