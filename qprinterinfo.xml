<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QPrinterInfo Class</db:title>
<db:productname>QtPrintSupport</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Print Support Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qprinterinfo.xml">QPrinterInfo</db:link> class gives access to information about existing printers.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPrinterInfo</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS PrintSupport)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::PrintSupport)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += printsupport</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QPrinterInfo is part of <db:simplelist><db:member><db:link xlink:href="printing.xml">Printer and Printing APIs</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Use the static functions to generate a list of <db:link xlink:href="qprinterinfo.xml">QPrinterInfo</db:link> objects. Each <db:link xlink:href="qprinterinfo.xml">QPrinterInfo</db:link> object in the list represents a single printer and can be queried for name, supported paper sizes, and whether or not it is the default printer.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QPrinterInfo">
<db:title>QPrinterInfo::QPrinterInfo()</db:title>
<db:constructorsynopsis>
<db:methodname>QPrinterInfo</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QPrinterInfo()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an empty <db:link xlink:href="qprinterinfo.xml">QPrinterInfo</db:link> object.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinterinfo.xml#isNull">isNull</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QPrinterInfo-2">
<db:title>[explicit] QPrinterInfo::QPrinterInfo(const QPrinter &amp;<db:emphasis>printer</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QPrinterInfo</db:methodname>
<db:methodparam>
<db:type>const QPrinter &amp;</db:type>
<db:parameter>printer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QPrinterInfo(const QPrinter &amp;printer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qprinterinfo.xml">QPrinterInfo</db:link> object from <db:code role="parameter">printer</db:code>.</db:para>
</db:section>
<db:section xml:id="QPrinterInfo-1">
<db:title>QPrinterInfo::QPrinterInfo(const QPrinterInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QPrinterInfo</db:methodname>
<db:methodparam>
<db:type>const QPrinterInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QPrinterInfo(const QPrinterInfo &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QPrinterInfo">
<db:title>QPrinterInfo::~QPrinterInfo()</db:title>
<db:destructorsynopsis>
<db:methodname>~QPrinterInfo</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QPrinterInfo()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the <db:link xlink:href="qprinterinfo.xml">QPrinterInfo</db:link> object. References to the values in the object become invalid.</db:para>
</db:section>
<db:section xml:id="availablePrinterNames">
<db:title>[static] QStringList QPrinterInfo::availablePrinterNames()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QStringList</db:type>
<db:methodname>availablePrinterNames</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QStringList availablePrinterNames()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of all the available Printer Names on this system.</db:para>
<db:para>It is recommended to use this instead of <db:link xlink:href="qprinterinfo.xml#availablePrinters">availablePrinters</db:link>() as it will be faster on most systems.</db:para>
<db:para>Note that the list may become outdated if changes are made on the local system or remote print server. Only instantiate required <db:link xlink:href="qprinterinfo.xml">QPrinterInfo</db:link> instances when needed, and always check for validity before calling.</db:para>
</db:section>
<db:section xml:id="availablePrinters">
<db:title>[static] QList&lt;QPrinterInfo&gt; QPrinterInfo::availablePrinters()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QList&lt;QPrinterInfo&gt;</db:type>
<db:methodname>availablePrinters</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QPrinterInfo&gt; availablePrinters()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of <db:link xlink:href="qprinterinfo.xml">QPrinterInfo</db:link> objects for all the available printers on this system.</db:para>
<db:para>It is NOT recommended to use this as creating each printer instance may take a long time, especially if there are remote networked printers, and retained instances may become outdated if changes are made on the local system or remote print server. Use <db:link xlink:href="qprinterinfo.xml#availablePrinterNames">availablePrinterNames</db:link>() instead and only instantiate printer instances as you need them.</db:para>
</db:section>
<db:section xml:id="defaultColorMode">
<db:title>QPrinter::ColorMode QPrinterInfo::defaultColorMode() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPrinter::ColorMode</db:type>
<db:methodname>defaultColorMode</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPrinter::ColorMode defaultColorMode() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the default color mode of this printer.</db:para>
</db:section>
<db:section xml:id="defaultDuplexMode">
<db:title>QPrinter::DuplexMode QPrinterInfo::defaultDuplexMode() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPrinter::DuplexMode</db:type>
<db:methodname>defaultDuplexMode</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPrinter::DuplexMode defaultDuplexMode() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the default duplex mode of this printer.</db:para>
</db:section>
<db:section xml:id="defaultPageSize">
<db:title>QPageSize QPrinterInfo::defaultPageSize() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPageSize</db:type>
<db:methodname>defaultPageSize</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPageSize defaultPageSize() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the current default Page Size for this printer.</db:para>
</db:section>
<db:section xml:id="defaultPrinter">
<db:title>[static] QPrinterInfo QPrinterInfo::defaultPrinter()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QPrinterInfo</db:type>
<db:methodname>defaultPrinter</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPrinterInfo defaultPrinter()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the default printer on the system.</db:para>
<db:para>The return value should be checked using <db:link xlink:href="qprinterinfo.xml#isNull">isNull</db:link>() before being used, in case there is no default printer.</db:para>
<db:para>On some systems it is possible for there to be available printers but none of them set to be the default printer.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinterinfo.xml#isNull">isNull</db:link>()</db:member>
<db:member><db:link xlink:href="qprinterinfo.xml#isDefault">isDefault</db:link>()</db:member>
<db:member><db:link xlink:href="qprinterinfo.xml#availablePrinters">availablePrinters</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="defaultPrinterName">
<db:title>[static] QString QPrinterInfo::defaultPrinterName()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QString</db:type>
<db:methodname>defaultPrinterName</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString defaultPrinterName()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the current default printer name.</db:para>
</db:section>
<db:section xml:id="description">
<db:title>QString QPrinterInfo::description() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>description</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString description() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the human-readable description of the printer.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinterinfo.xml#printerName">QPrinterInfo::printerName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isDefault">
<db:title>bool QPrinterInfo::isDefault() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isDefault</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isDefault() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns whether this printer is currently the default printer.</db:para>
</db:section>
<db:section xml:id="isNull">
<db:title>bool QPrinterInfo::isNull() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isNull</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isNull() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns whether this <db:link xlink:href="qprinterinfo.xml">QPrinterInfo</db:link> object holds a printer definition.</db:para>
<db:para>An empty <db:link xlink:href="qprinterinfo.xml">QPrinterInfo</db:link> object could result for example from calling <db:link xlink:href="qprinterinfo.xml#defaultPrinter">defaultPrinter</db:link>() when there are no printers on the system.</db:para>
</db:section>
<db:section xml:id="isRemote">
<db:title>bool QPrinterInfo::isRemote() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isRemote</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isRemote() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns whether this printer is a remote network printer.</db:para>
</db:section>
<db:section xml:id="location">
<db:title>QString QPrinterInfo::location() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>location</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString location() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the human-readable location of the printer.</db:para>
</db:section>
<db:section xml:id="makeAndModel">
<db:title>QString QPrinterInfo::makeAndModel() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>makeAndModel</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString makeAndModel() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the human-readable make and model of the printer.</db:para>
</db:section>
<db:section xml:id="maximumPhysicalPageSize">
<db:title>QPageSize QPrinterInfo::maximumPhysicalPageSize() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPageSize</db:type>
<db:methodname>maximumPhysicalPageSize</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPageSize maximumPhysicalPageSize() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the maximum physical page size supported by this printer.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinterinfo.xml#minimumPhysicalPageSize">minimumPhysicalPageSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="minimumPhysicalPageSize">
<db:title>QPageSize QPrinterInfo::minimumPhysicalPageSize() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPageSize</db:type>
<db:methodname>minimumPhysicalPageSize</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPageSize minimumPhysicalPageSize() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the minimum physical page size supported by this printer.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinterinfo.xml#maximumPhysicalPageSize">maximumPhysicalPageSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="printerInfo">
<db:title>[static] QPrinterInfo QPrinterInfo::printerInfo(const QString &amp;<db:emphasis>printerName</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QPrinterInfo</db:type>
<db:methodname>printerInfo</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>printerName</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPrinterInfo printerInfo(const QString &amp;printerName)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the printer <db:code role="parameter">printerName</db:code>.</db:para>
<db:para>The return value should be checked using <db:link xlink:href="qprinterinfo.xml#isNull">isNull</db:link>() before being used, in case the named printer does not exist.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinterinfo.xml#isNull">isNull</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="printerName">
<db:title>QString QPrinterInfo::printerName() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>printerName</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString printerName() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the name of the printer.</db:para>
<db:para>This is a unique id to identify the printer and may not be human-readable.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qprinterinfo.xml#description">QPrinterInfo::description</db:link>()</db:member>
<db:member><db:link xlink:href="qprinter.xml#setPrinterName">QPrinter::setPrinterName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="state">
<db:title>QPrinter::PrinterState QPrinterInfo::state() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPrinter::PrinterState</db:type>
<db:methodname>state</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPrinter::PrinterState state() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the current state of this printer.</db:para>
<db:para>This state may not always be accurate, depending on the platform, printer driver, or printer itself.</db:para>
</db:section>
<db:section xml:id="supportedColorModes">
<db:title>QList&lt;QPrinter::ColorMode&gt; QPrinterInfo::supportedColorModes() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;QPrinter::ColorMode&gt;</db:type>
<db:methodname>supportedColorModes</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QPrinter::ColorMode&gt; supportedColorModes() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the supported color modes of this printer.</db:para>
</db:section>
<db:section xml:id="supportedDuplexModes">
<db:title>QList&lt;QPrinter::DuplexMode&gt; QPrinterInfo::supportedDuplexModes() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;QPrinter::DuplexMode&gt;</db:type>
<db:methodname>supportedDuplexModes</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QPrinter::DuplexMode&gt; supportedDuplexModes() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of duplex modes supported by this printer.</db:para>
</db:section>
<db:section xml:id="supportedPageSizes">
<db:title>QList&lt;QPageSize&gt; QPrinterInfo::supportedPageSizes() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;QPageSize&gt;</db:type>
<db:methodname>supportedPageSizes</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QPageSize&gt; supportedPageSizes() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of Page Sizes supported by this printer.</db:para>
</db:section>
<db:section xml:id="supportedResolutions">
<db:title>QList&lt;int&gt; QPrinterInfo::supportedResolutions() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;int&gt;</db:type>
<db:methodname>supportedResolutions</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;int&gt; supportedResolutions() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of resolutions supported by this printer.</db:para>
</db:section>
<db:section xml:id="supportsCustomPageSizes">
<db:title>bool QPrinterInfo::supportsCustomPageSizes() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>supportsCustomPageSizes</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool supportsCustomPageSizes() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns whether this printer supports custom page sizes.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QPrinterInfo &amp;QPrinterInfo::operator=(const QPrinterInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QPrinterInfo &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QPrinterInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QPrinterInfo &amp; operator=(const QPrinterInfo &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the <db:link xlink:href="qprinterinfo.xml">QPrinterInfo</db:link> object to be equal to <db:code role="parameter">other</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
