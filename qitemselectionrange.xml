<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QItemSelectionRange Class</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qitemselectionrange.xml">QItemSelectionRange</db:link> class manages information about a range of selected items in a model.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QItemSelectionRange</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QItemSelectionRange is part of <db:simplelist><db:member>model-view</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qitemselectionrange.xml">QItemSelectionRange</db:link> contains information about a range of selected items in a model. A range of items is a contiguous array of model items, extending to cover a number of adjacent rows and columns with a common parent item; this can be visualized as a two-dimensional block of cells in a table. A selection range has a <db:link xlink:href="qitemselectionrange.xml#top">top</db:link>(), <db:link xlink:href="qitemselectionrange.xml#left">left</db:link>() a <db:link xlink:href="qitemselectionrange.xml#bottom">bottom</db:link>(), <db:link xlink:href="qitemselectionrange.xml#right">right</db:link>() and a <db:link xlink:href="qitemselectionrange.xml#parent">parent</db:link>().</db:para>
<db:para>The <db:link xlink:href="qitemselectionrange.xml">QItemSelectionRange</db:link> class is one of the <db:link xlink:href="model-view-programming.xml#the-model-view-classes">Model/View Classes</db:link> and is part of Qt's <db:link xlink:href="model-view-programming.xml">model/view framework</db:link>.</db:para>
<db:para>The model items contained in the selection range can be obtained using the <db:link xlink:href="qitemselectionrange.xml#indexes">indexes</db:link>() function. Use <db:link xlink:href="qitemselectionmodel.xml#selectedIndexes">QItemSelectionModel::selectedIndexes</db:link>() to get a list of all selected items for a view.</db:para>
<db:para>You can determine whether a given model item lies within a particular range by using the <db:link xlink:href="qitemselectionrange.xml#contains">contains</db:link>() function. Ranges can also be compared using the overloaded operators for equality and inequality, and the <db:link xlink:href="qitemselectionrange.xml#intersects">intersects</db:link>() function allows you to determine whether two ranges overlap.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="model-view-programming.xml">Model/View Programming</db:link></db:member>
<db:member><db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link></db:member>
<db:member><db:link xlink:href="qitemselection.xml">QItemSelection</db:link></db:member>
<db:member><db:link xlink:href="qitemselectionmodel.xml">QItemSelectionModel</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QItemSelectionRange">
<db:title>QItemSelectionRange::QItemSelectionRange()</db:title>
<db:para>Constructs an empty selection range.</db:para>
</db:section>
<db:section xml:id="QItemSelectionRange-2">
<db:title>[explicit] QItemSelectionRange::QItemSelectionRange(const QModelIndex &amp;<db:emphasis>index</db:emphasis>)</db:title>
<db:para>Constructs a new selection range containing only the model item specified by the model index <db:code role="parameter">index</db:code>.</db:para>
</db:section>
<db:section xml:id="QItemSelectionRange-3">
<db:title>QItemSelectionRange::QItemSelectionRange(const QModelIndex &amp;<db:emphasis>topLeft</db:emphasis>, const QModelIndex &amp;<db:emphasis>bottomRight</db:emphasis>)</db:title>
<db:para>Constructs a new selection range containing only the index specified by the <db:code role="parameter">topLeft</db:code> and the index <db:code role="parameter">bottomRight</db:code>.</db:para>
</db:section>
<db:section xml:id="QItemSelectionRange-1">
<db:title>QItemSelectionRange::QItemSelectionRange(const QItemSelectionRange &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Copy constructor. Constructs a new selection range with the same contents as the <db:code role="parameter">other</db:code> range given.</db:para>
</db:section>
<db:section xml:id="bottom">
<db:title>int QItemSelectionRange::bottom() const</db:title>
<db:para>Returns the row index corresponding to the lowermost selected row in the selection range.</db:para>
</db:section>
<db:section xml:id="bottomRight">
<db:title>const QPersistentModelIndex &amp;QItemSelectionRange::bottomRight() const</db:title>
<db:para>Returns the index for the item located at the bottom-right corner of the selection range.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qitemselectionrange.xml#bottom">bottom</db:link>()</db:member>
<db:member><db:link xlink:href="qitemselectionrange.xml#right">right</db:link>()</db:member>
<db:member><db:link xlink:href="qitemselectionrange.xml#topLeft">topLeft</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contains">
<db:title>bool QItemSelectionRange::contains(const QModelIndex &amp;<db:emphasis>index</db:emphasis>) const</db:title>
<db:para>Returns true if the model item specified by the <db:code role="parameter">index</db:code> lies within the range of selected items; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="contains-1">
<db:title>bool QItemSelectionRange::contains(int <db:emphasis>row</db:emphasis>, int <db:emphasis>column</db:emphasis>, const QModelIndex &amp;<db:emphasis>parentIndex</db:emphasis>) const</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns true if the model item specified by (<db:code role="parameter">row</db:code>, <db:code role="parameter">column</db:code>) and with <db:code role="parameter">parentIndex</db:code> as the parent item lies within the range of selected items; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="height">
<db:title>int QItemSelectionRange::height() const</db:title>
<db:para>Returns the number of selected rows in the selection range.</db:para>
</db:section>
<db:section xml:id="indexes">
<db:title>QModelIndexList QItemSelectionRange::indexes() const</db:title>
<db:para>Returns the list of model index items stored in the selection.</db:para>
</db:section>
<db:section xml:id="intersected">
<db:title>[since 4.2] QItemSelectionRange QItemSelectionRange::intersected(const QItemSelectionRange &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns a new selection range containing only the items that are found in both the selection range and the <db:code role="parameter">other</db:code> selection range.</db:para>
<db:para>This function was introduced in Qt 4.2.</db:para>
</db:section>
<db:section xml:id="intersects">
<db:title>bool QItemSelectionRange::intersects(const QItemSelectionRange &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if this selection range intersects (overlaps with) the <db:code role="parameter">other</db:code> range given; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="isEmpty">
<db:title>[since 4.7] bool QItemSelectionRange::isEmpty() const</db:title>
<db:para>Returns true if the selection range contains no selectable item</db:para>
<db:para>This function was introduced in Qt 4.7.</db:para>
</db:section>
<db:section xml:id="isValid">
<db:title>bool QItemSelectionRange::isValid() const</db:title>
<db:para>Returns true if the selection range is valid; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="left">
<db:title>int QItemSelectionRange::left() const</db:title>
<db:para>Returns the column index corresponding to the leftmost selected column in the selection range.</db:para>
</db:section>
<db:section xml:id="model">
<db:title>const QAbstractItemModel *QItemSelectionRange::model() const</db:title>
<db:para>Returns the model that the items in the selection range belong to.</db:para>
</db:section>
<db:section xml:id="parent">
<db:title>QModelIndex QItemSelectionRange::parent() const</db:title>
<db:para>Returns the parent model item index of the items in the selection range.</db:para>
</db:section>
<db:section xml:id="right">
<db:title>int QItemSelectionRange::right() const</db:title>
<db:para>Returns the column index corresponding to the rightmost selected column in the selection range.</db:para>
</db:section>
<db:section xml:id="swap">
<db:title>[noexcept, since 5.6] void QItemSelectionRange::swap(QItemSelectionRange &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps this selection range's contents with <db:code role="parameter">other</db:code>. This function is very fast and never fails.</db:para>
<db:para>This function was introduced in Qt 5.6.</db:para>
</db:section>
<db:section xml:id="top">
<db:title>int QItemSelectionRange::top() const</db:title>
<db:para>Returns the row index corresponding to the uppermost selected row in the selection range.</db:para>
</db:section>
<db:section xml:id="topLeft">
<db:title>const QPersistentModelIndex &amp;QItemSelectionRange::topLeft() const</db:title>
<db:para>Returns the index for the item located at the top-left corner of the selection range.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qitemselectionrange.xml#top">top</db:link>()</db:member>
<db:member><db:link xlink:href="qitemselectionrange.xml#left">left</db:link>()</db:member>
<db:member><db:link xlink:href="qitemselectionrange.xml#bottomRight">bottomRight</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="width">
<db:title>int QItemSelectionRange::width() const</db:title>
<db:para>Returns the number of selected columns in the selection range.</db:para>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QItemSelectionRange::operator!=(const QItemSelectionRange &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if the selection range differs from the <db:code role="parameter">other</db:code> range given; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="operator-lt">
<db:title>bool QItemSelectionRange::operator&lt;(const QItemSelectionRange &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if the selection range is less than the <db:code role="parameter">other</db:code> range given; otherwise returns false.</db:para>
<db:para>The less than calculation is not directly useful to developers - the way that ranges with different parents compare is not defined. This operator only exists so that the class can be used with <db:link xlink:href="qmap.xml">QMap</db:link>.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QItemSelectionRange::operator==(const QItemSelectionRange &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if the selection range is exactly the same as the <db:code role="parameter">other</db:code> range given; otherwise returns false.</db:para>
</db:section>
</db:section>
</db:article>
