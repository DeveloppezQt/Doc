<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QOpcUaX509Extension Class</db:title>
<db:productname>QtOpcUa</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>An OPC UA module for Qt</db:titleabbrev>
<db:abstract>
<db:para>Base class for all X509 extensions.</db:para>
<db:para>This class was introduced in Qt 5.14.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QOpcUaX509Extension</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.14</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += opcua</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This class is currently available as a Technology Preview, and therefore the API and functionality provided by the class may be subject to change at any time without prior notice.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member>QOpcUaX509ExtensionSubjectAlternativeName</db:member>
<db:member>QOpcUaX509ExtensionBasicConstraints</db:member>
<db:member>QOpcUaX509ExtensionKeyUsage</db:member>
<db:member>QOpcUaX509ExtensionKeyUsage</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QOpcUaX509Extension">
<db:title>QOpcUaX509Extension::QOpcUaX509Extension()</db:title>
<db:constructorsynopsis>
<db:methodname>QOpcUaX509Extension</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpcUaX509Extension()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a default X509Extension.</db:para>
</db:section>
<db:section xml:id="QOpcUaX509Extension-3">
<db:title>[protected] QOpcUaX509Extension::QOpcUaX509Extension(QSharedDataPointer&lt;QOpcUaX509ExtensionData&gt; <db:emphasis>rhs</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QOpcUaX509Extension</db:methodname>
<db:methodparam>
<db:type>QSharedDataPointer&lt;QOpcUaX509ExtensionData&gt;</db:type>
<db:parameter>rhs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">3</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpcUaX509Extension(QSharedDataPointer&lt;QOpcUaX509ExtensionData&gt; rhs)</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a X509Extension from <db:code role="parameter">rhs</db:code>.</db:para>
</db:section>
<db:section xml:id="QOpcUaX509Extension-1">
<db:title>QOpcUaX509Extension::QOpcUaX509Extension(const QOpcUaX509Extension &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QOpcUaX509Extension</db:methodname>
<db:methodparam>
<db:type>const QOpcUaX509Extension &amp;</db:type>
<db:parameter>rhs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpcUaX509Extension(const QOpcUaX509Extension &amp;rhs)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a X509Extension from <db:code role="parameter">rhs</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QOpcUaX509Extension">
<db:title>[virtual] QOpcUaX509Extension::~QOpcUaX509Extension()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QOpcUaX509Extension</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QOpcUaX509Extension()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destructs a X509Extension.</db:para>
</db:section>
<db:section xml:id="critical">
<db:title>bool QOpcUaX509Extension::critical() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>critical</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool critical() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Return the state of the critical flag.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuax509extension.xml#setCritical">setCritical</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCritical">
<db:title>void QOpcUaX509Extension::setCritical(bool <db:emphasis>critical</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setCritical</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>critical</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setCritical(bool critical)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the critical flag to <db:code role="parameter">critical</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuax509extension.xml#critical">critical</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QOpcUaX509Extension &amp;QOpcUaX509Extension::operator=(const QOpcUaX509Extension &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QOpcUaX509Extension &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QOpcUaX509Extension &amp;</db:type>
<db:parameter>rhs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpcUaX509Extension &amp; operator=(const QOpcUaX509Extension &amp;rhs)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the values from <db:code role="parameter">rhs</db:code> in this X509Extension.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QOpcUaX509Extension::operator==(const QOpcUaX509Extension &amp;<db:emphasis>rhs</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>const QOpcUaX509Extension &amp;</db:type>
<db:parameter>rhs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(const QOpcUaX509Extension &amp;rhs) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if this X509Extension has the same value as <db:code role="parameter">rhs</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
