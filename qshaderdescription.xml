<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QShaderDescription Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Describes the interface of a shader.</db:para>
<db:para>This class was introduced in Qt 6.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QShaderDescription</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QShaderDescription is part of <db:simplelist><db:member><db:link xlink:href="painting-3d.xml">Rendering in 3D</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:warning>
<db:para>The <db:link xlink:href="qrhi.xml">QRhi</db:link> family of classes in the Qt Gui module, including <db:link xlink:href="qshader.xml">QShader</db:link> and <db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link>, offer limited compatibility guarantees. There are no source or binary compatibility guarantees for these classes, meaning the API is only guaranteed to work with the Qt version the application was developed against. Source incompatible changes are however aimed to be kept at a minimum and will only be made in minor releases (6.7, 6.8, and so on). To use these classes in an application, link to <db:code>Qt::GuiPrivate</db:code> (if using CMake), and include the headers with the <db:code>rhi</db:code> prefix, for example <db:code>#include &lt;rhi/qshaderdescription.h&gt;</db:code>.</db:para>
</db:warning>
<db:para>A shader typically has a set of inputs and outputs. A vertex shader for example has a number of input variables and may use one or more uniform buffers to access data (e.g. a modelview matrix) provided by the application. The shader for the fragment stage receives data from the vertex stage (in a simple setup) and may also rely on data from uniform buffers, images, and samplers.</db:para>
<db:para>When it comes to vertex inputs and the layout of the uniform buffers (what are the names of the members? what is there size, offset, and so on), applications and frameworks may need to discover this dynamically at run time. This is typical when the shader is not built-in but provided by an external entity, like the user.</db:para>
<db:para>Modern and lean graphics APIs may no longer provide a way to query shader reflection information at run time. Therefore, such data is now automatically generated by QShaderBaker and is provided as a <db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link> object for each and every <db:link xlink:href="qshader.xml">QShader</db:link>.</db:para>
<db:section xml:id="example">
<db:title>Example</db:title>
<db:para>Take the following vertex shader:</db:para>
<db:programlisting language="cpp" role="bad">#version 440

layout(location = 0) in vec4 position;
layout(location = 1) in vec3 color;
layout(location = 0) out vec3 v_color;

layout(std140, binding = 0) uniform buf {
    mat4 mvp;
    float opacity;
} ubuf;

void main()
{
    v_color = color;
    gl_Position = ubuf.mvp * position;
}
</db:programlisting>
<db:para>This shader has two inputs: <db:code>position</db:code> at location 0 with a type of <db:code>vec4</db:code>, and <db:code>color</db:code> at location 1 with a type of <db:code>vec3</db:code>. It has one output: <db:code>v_color</db:code>, although this is typically not interesting for applications. What is more important, there is a uniform block at binding 0 with a size of 68 bytes and two members, a 4x4 matrix named <db:code>mvp</db:code> at offset 0, and a float <db:code>opacity</db:code> at offset 64.</db:para>
<db:para>All this is described by a <db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link> object. <db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link> can be serialized to JSON and to a binary format via <db:link xlink:href="qdatastream.xml">QDataStream</db:link>, and can be deserialized from this binary format. In practice this is rarely needed since <db:link xlink:href="qshader.xml">QShader</db:link> takes care of the associated <db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link> automatically, but if the <db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link> of the above shader would be written out as JSON (like it is done by the <db:code>qsb</db:code> tool's <db:code>-d</db:code> option), it would look like the following:</db:para>
<db:programlisting language="cpp" role="bad">{
    &quot;inputs&quot;: [
        {
            &quot;location&quot;: 1,
            &quot;name&quot;: &quot;color&quot;,
            &quot;type&quot;: &quot;vec3&quot;
        },
        {
            &quot;location&quot;: 0,
            &quot;name&quot;: &quot;position&quot;,
            &quot;type&quot;: &quot;vec4&quot;
        }
    ],
    &quot;outputs&quot;: [
        {
            &quot;location&quot;: 0,
            &quot;name&quot;: &quot;v_color&quot;,
            &quot;type&quot;: &quot;vec3&quot;
        }
    ],
    &quot;uniformBlocks&quot;: [
        {
            &quot;binding&quot;: 0,
            &quot;blockName&quot;: &quot;buf&quot;,
            &quot;members&quot;: [
                {
                    &quot;matrixStride&quot;: 16,
                    &quot;name&quot;: &quot;mvp&quot;,
                    &quot;offset&quot;: 0,
                    &quot;size&quot;: 64,
                    &quot;type&quot;: &quot;mat4&quot;
                },
                {
                    &quot;name&quot;: &quot;opacity&quot;,
                    &quot;offset&quot;: 64,
                    &quot;size&quot;: 4,
                    &quot;type&quot;: &quot;float&quot;
                }
            ],
            &quot;set&quot;: 0,
            &quot;size&quot;: 68,
            &quot;structName&quot;: &quot;ubuf&quot;
        }
    ]
}
</db:programlisting>
<db:para>The C++ API allows accessing a data structure like the above. For simplicity the inner structs only contain public data members, also considering that their layout is unlikely to change in the future.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member>QShaderBaker</db:member>
<db:member><db:link xlink:href="qshader.xml">QShader</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="BuiltinType-enum">
<db:title>enum QShaderDescription::BuiltinType</db:title>
<db:para>Built-in variable type.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::PositionBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::PointSizeBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ClipDistanceBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::CullDistanceBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::VertexIdBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::InstanceIdBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::PrimitiveIdBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::InvocationIdBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::LayerBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ViewportIndexBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::TessLevelOuterBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::TessLevelInnerBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::TessCoordBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::PatchVerticesBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::FragCoordBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::PointCoordBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::FrontFacingBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::SampleIdBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::SamplePositionBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::SampleMaskBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::FragDepthBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::NumWorkGroupsBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::WorkgroupSizeBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::WorkgroupIdBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::LocalInvocationIdBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::GlobalInvocationIdBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::LocalInvocationIndexBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::VertexIndexBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>42</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::InstanceIndexBuiltin</db:code></db:para>
</db:td>
<db:td><db:code>43</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="ImageFlag-enum">
<db:title>enum QShaderDescription::ImageFlag</db:title>
<db:bridgehead renderas="sect2">flags QShaderDescription::ImageFlags</db:bridgehead>
<db:para>Image flags.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ReadOnlyImage</db:code></db:para>
</db:td>
<db:td><db:code>1 &lt;&lt; 0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::WriteOnlyImage</db:code></db:para>
</db:td>
<db:td><db:code>1 &lt;&lt; 1</db:code></db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>ImageFlags</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;ImageFlag&gt;. </db:code>It stores an OR combination of <db:code>ImageFlag</db:code> values.</db:para>
</db:section>
<db:section xml:id="ImageFormat-enum">
<db:title>enum QShaderDescription::ImageFormat</db:title>
<db:para>Image format.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatUnknown</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgba32f</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgba16f</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatR32f</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgba8</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgba8Snorm</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRg32f</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRg16f</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatR11fG11fB10f</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatR16f</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgba16</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgb10A2</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRg16</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRg8</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatR16</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatR8</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgba16Snorm</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRg16Snorm</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRg8Snorm</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatR16Snorm</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatR8Snorm</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgba32i</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgba16i</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgba8i</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatR32i</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRg32i</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRg16i</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRg8i</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatR16i</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatR8i</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgba32ui</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgba16ui</db:code></db:para>
</db:td>
<db:td><db:code>31</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgba8ui</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatR32ui</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRgb10a2ui</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRg32ui</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRg16ui</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatRg8ui</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatR16ui</db:code></db:para>
</db:td>
<db:td><db:code>38</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageFormatR8ui</db:code></db:para>
</db:td>
<db:td><db:code>39</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="QualifierFlag-enum">
<db:title>enum QShaderDescription::QualifierFlag</db:title>
<db:bridgehead renderas="sect2">flags QShaderDescription::QualifierFlags</db:bridgehead>
<db:para>Qualifier flags.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::QualifierReadOnly</db:code></db:para>
</db:td>
<db:td><db:code>1 &lt;&lt; 0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::QualifierWriteOnly</db:code></db:para>
</db:td>
<db:td><db:code>1 &lt;&lt; 1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::QualifierCoherent</db:code></db:para>
</db:td>
<db:td><db:code>1 &lt;&lt; 2</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::QualifierVolatile</db:code></db:para>
</db:td>
<db:td><db:code>1 &lt;&lt; 3</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::QualifierRestrict</db:code></db:para>
</db:td>
<db:td><db:code>1 &lt;&lt; 4</db:code></db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>QualifierFlags</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;QualifierFlag&gt;. </db:code>It stores an OR combination of <db:code>QualifierFlag</db:code> values.</db:para>
</db:section>
<db:section xml:id="TessellationMode-enum">
<db:title>enum QShaderDescription::TessellationMode</db:title>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::UnknownTessellationMode</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::TrianglesTessellationMode</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::QuadTessellationMode</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::IsolineTessellationMode</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="TessellationPartitioning-enum">
<db:title>enum QShaderDescription::TessellationPartitioning</db:title>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::UnknownTessellationPartitioning</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::EqualTessellationPartitioning</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::FractionalEvenTessellationPartitioning</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::FractionalOddTessellationPartitioning</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="TessellationWindingOrder-enum">
<db:title>enum QShaderDescription::TessellationWindingOrder</db:title>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::UnknownTessellationWindingOrder</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::CwTessellationWindingOrder</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::CcwTessellationWindingOrder</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="VariableType-enum">
<db:title>enum QShaderDescription::VariableType</db:title>
<db:para>Represents the type of a variable or block member.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Unknown</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Float</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Vec2</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Vec3</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Vec4</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Mat2</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Mat2x3</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Mat2x4</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Mat3</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Mat3x2</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Mat3x4</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Mat4</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Mat4x2</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Mat4x3</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Int</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Int2</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Int3</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Int4</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Uint</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Uint2</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Uint3</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Uint4</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Bool</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Bool2</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Bool3</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Bool4</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Double</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Double2</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Double3</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Double4</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::DMat2</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::DMat2x3</db:code></db:para>
</db:td>
<db:td><db:code>31</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::DMat2x4</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::DMat3</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::DMat3x2</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::DMat3x4</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::DMat4</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::DMat4x2</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::DMat4x3</db:code></db:para>
</db:td>
<db:td><db:code>38</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Sampler1D</db:code></db:para>
</db:td>
<db:td><db:code>39</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Sampler2D</db:code></db:para>
</db:td>
<db:td><db:code>40</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Sampler2DMS</db:code></db:para>
</db:td>
<db:td><db:code>41</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Sampler3D</db:code></db:para>
</db:td>
<db:td><db:code>42</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::SamplerCube</db:code></db:para>
</db:td>
<db:td><db:code>43</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Sampler1DArray</db:code></db:para>
</db:td>
<db:td><db:code>44</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Sampler2DArray</db:code></db:para>
</db:td>
<db:td><db:code>45</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Sampler2DMSArray</db:code></db:para>
</db:td>
<db:td><db:code>46</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Sampler3DArray</db:code></db:para>
</db:td>
<db:td><db:code>47</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::SamplerCubeArray</db:code></db:para>
</db:td>
<db:td><db:code>48</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::SamplerRect</db:code></db:para>
</db:td>
<db:td><db:code>49</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::SamplerBuffer</db:code></db:para>
</db:td>
<db:td><db:code>50</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::SamplerExternalOES</db:code></db:para>
</db:td>
<db:td><db:code>51</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Sampler</db:code></db:para>
</db:td>
<db:td><db:code>52</db:code></db:td>
<db:td>
<db:para>For separate samplers.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Image1D</db:code></db:para>
</db:td>
<db:td><db:code>53</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Image2D</db:code></db:para>
</db:td>
<db:td><db:code>54</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Image2DMS</db:code></db:para>
</db:td>
<db:td><db:code>55</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Image3D</db:code></db:para>
</db:td>
<db:td><db:code>56</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageCube</db:code></db:para>
</db:td>
<db:td><db:code>57</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Image1DArray</db:code></db:para>
</db:td>
<db:td><db:code>58</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Image2DArray</db:code></db:para>
</db:td>
<db:td><db:code>59</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Image2DMSArray</db:code></db:para>
</db:td>
<db:td><db:code>60</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Image3DArray</db:code></db:para>
</db:td>
<db:td><db:code>61</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageCubeArray</db:code></db:para>
</db:td>
<db:td><db:code>62</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageRect</db:code></db:para>
</db:td>
<db:td><db:code>63</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::ImageBuffer</db:code></db:para>
</db:td>
<db:td><db:code>64</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Struct</db:code></db:para>
</db:td>
<db:td><db:code>65</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Half</db:code></db:para>
</db:td>
<db:td><db:code>66</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Half2</db:code></db:para>
</db:td>
<db:td><db:code>67</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Half3</db:code></db:para>
</db:td>
<db:td><db:code>68</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link></db:emphasis>::Half4</db:code></db:para>
</db:td>
<db:td><db:code>69</db:code></db:td>
<db:td/>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QShaderDescription">
<db:title>QShaderDescription::QShaderDescription()</db:title>
<db:para>Constructs a new, empty <db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link>.</db:para>
<db:note>
<db:para>Being empty implies that <db:link xlink:href="qshaderdescription.xml#isValid">isValid</db:link>() returns <db:code>false</db:code> for the newly constructed instance.</db:para>
</db:note>
</db:section>
<db:section xml:id="QShaderDescription-1">
<db:title>QShaderDescription::QShaderDescription(const QShaderDescription &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QShaderDescription">
<db:title>[noexcept] QShaderDescription::~QShaderDescription()</db:title>
<db:para>Destructor.</db:para>
</db:section>
<db:section xml:id="combinedImageSamplers">
<db:title>QList&lt;QShaderDescription::InOutVariable&gt; QShaderDescription::combinedImageSamplers() const</db:title>
<db:para>Returns the list of combined image samplers</db:para>
<db:para>With GLSL/Vulkan shaders as source a <db:code>layout(binding = 1) uniform sampler2D tex;</db:code> uniform generates the following: (shown as textual JSON here)</db:para>
<db:programlisting language="cpp" role="bad">&quot;combinedImageSamplers&quot;: [
     {
         &quot;binding&quot;: 1,
         &quot;name&quot;: &quot;tex&quot;,
         &quot;set&quot;: 0,
         &quot;type&quot;: &quot;sampler2D&quot;
     }
 ]
</db:programlisting>
<db:para>This does not mean that other language versions of the shader must also use a combined image sampler, especially considering that the concept may not exist everywhere. For instance, a HLSL version will likely just use a <db:link xlink:href="qml-qt3d-render-texture2d.xml">Texture2D</db:link> and SamplerState object with registers t1 and s1, respectively.</db:para>
</db:section>
<db:section xml:id="computeShaderLocalSize">
<db:title>std::array&lt;uint, 3&gt; QShaderDescription::computeShaderLocalSize() const</db:title>
<db:para>Returns the local size of a compute shader.</db:para>
<db:para>For example, for a compute shader with the following declaration the function returns { 256, 16, 1}.</db:para>
<db:programlisting language="cpp" role="bad">layout(local_size_x = 256, local_size_y = 16, local_size_z = 1) in;
</db:programlisting>
</db:section>
<db:section xml:id="deserialize">
<db:title>[static] QShaderDescription QShaderDescription::deserialize(QDataStream *<db:emphasis>stream</db:emphasis>, int <db:emphasis>version</db:emphasis>)</db:title>
<db:para>Returns a new <db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link> loaded from <db:code role="parameter">stream</db:code>. <db:code role="parameter">version</db:code> specifies the qsb version.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qshaderdescription.xml#serialize">serialize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="inputBuiltinVariables">
<db:title>QList&lt;QShaderDescription::BuiltinVariable&gt; QShaderDescription::inputBuiltinVariables() const</db:title>
<db:para>Returns the list of active builtins used as input. For example, a tessellation evaluation shader reading the value of gl_TessCoord and gl_Position will have <db:link xlink:href="qshaderdescription.xml#BuiltinType-enum">TessCoordBuiltin</db:link> and <db:link xlink:href="qshaderdescription.xml#BuiltinType-enum">PositionBuiltin</db:link> listed here.</db:para>
</db:section>
<db:section xml:id="inputVariables">
<db:title>QList&lt;QShaderDescription::InOutVariable&gt; QShaderDescription::inputVariables() const</db:title>
<db:para>Returns the list of input variables. This includes vertex inputs (sometimes called attributes) for the vertex stage, and inputs for other stages (sometimes called varyings).</db:para>
</db:section>
<db:section xml:id="isValid">
<db:title>bool QShaderDescription::isValid() const</db:title>
<db:para>Returns true if the <db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link> contains at least one entry in one of the variable and block lists.</db:para>
</db:section>
<db:section xml:id="outputBuiltinVariables">
<db:title>QList&lt;QShaderDescription::BuiltinVariable&gt; QShaderDescription::outputBuiltinVariables() const</db:title>
<db:para>Returns the list of active built-in variables used as input. For example, a vertex shader will very often have <db:link xlink:href="qshaderdescription.xml#BuiltinType-enum">PositionBuiltin</db:link> as an output built-in.</db:para>
</db:section>
<db:section xml:id="outputVariables">
<db:title>QList&lt;QShaderDescription::InOutVariable&gt; QShaderDescription::outputVariables() const</db:title>
<db:para>Returns the list of output variables.</db:para>
</db:section>
<db:section xml:id="pushConstantBlocks">
<db:title>QList&lt;QShaderDescription::PushConstantBlock&gt; QShaderDescription::pushConstantBlocks() const</db:title>
<db:para>Returns the list of push constant blocks.</db:para>
<db:note>
<db:para>Avoid relying on push constant blocks for shaders that are to be used in combination with the Qt Rendering Hardware Interface since that currently has no support for them.</db:para>
</db:note>
</db:section>
<db:section xml:id="serialize">
<db:title>void QShaderDescription::serialize(QDataStream *<db:emphasis>stream</db:emphasis>, int <db:emphasis>version</db:emphasis>) const</db:title>
<db:para>Serializes this <db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link> to <db:code role="parameter">stream</db:code>. <db:code role="parameter">version</db:code> specifies the qsb version.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qshaderdescription.xml#deserialize">deserialize</db:link>()</db:member>
<db:member><db:link xlink:href="qshaderdescription.xml#toJson">toJson</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="storageBlocks">
<db:title>QList&lt;QShaderDescription::StorageBlock&gt; QShaderDescription::storageBlocks() const</db:title>
<db:para>Returns the list of shader storage blocks.</db:para>
<db:para>For example, with GLSL/Vulkan shaders as source, the declaration</db:para>
<db:programlisting language="cpp" role="bad">struct Stuff {
    vec2 a;
    vec2 b;
};
layout(std140, binding = 0) buffer StuffSsbo {
    vec4 whatever;
    Stuff stuff[];
} buf;
</db:programlisting>
<db:para>generates the following: (shown as textual JSON here)</db:para>
<db:programlisting language="cpp" role="bad">&quot;storageBlocks&quot;: [ {
    &quot;binding&quot;: 0,
    &quot;blockName&quot;: &quot;StuffSsbo&quot;,
    &quot;instanceName&quot;: &quot;buf&quot;,
    &quot;knownSize&quot;: 16,
    &quot;runtimeArrayStride&quot;: 16
    &quot;members&quot;: [
        {
            &quot;name&quot;: &quot;whatever&quot;,
            &quot;offset&quot;: 0,
            &quot;size&quot;: 16,
            &quot;type&quot;: &quot;vec4&quot;
        },
        {
            &quot;arrayDims&quot;: [
                0
            ],
            &quot;name&quot;: &quot;stuff&quot;,
            &quot;offset&quot;: 16,
            &quot;size&quot;: 0,
            &quot;structMembers&quot;: [
                {
                    &quot;name&quot;: &quot;a&quot;,
                    &quot;offset&quot;: 0,
                    &quot;size&quot;: 8,
                    &quot;type&quot;: &quot;vec2&quot;
                },
                {
                    &quot;name&quot;: &quot;b&quot;,
                    &quot;offset&quot;: 8,
                    &quot;size&quot;: 8,
                    &quot;type&quot;: &quot;vec2&quot;
                }
            ],
            &quot;type&quot;: &quot;struct&quot;
        }
    ],
    &quot;set&quot;: 0
} ]
</db:programlisting>
<db:note>
<db:para>The size of the last member in the storage block is undefined. This shows up as <db:code>size</db:code> 0 and an array dimension of <db:code>[0]</db:code>. The storage block's <db:code>knownSize</db:code> excludes the size of the last member since that will only be known at run time. The stride in bytes between array items for a last member with undefined array size is <db:code>runtimeArrayStride</db:code>. This value is determined according to the specified buffer memory layout standard (std140, std430) rules.</db:para>
</db:note>
<db:note>
<db:para>SSBOs are not available with some graphics APIs, such as, OpenGL 2.x or OpenGL ES older than 3.1.</db:para>
</db:note>
</db:section>
<db:section xml:id="storageImages">
<db:title>QList&lt;QShaderDescription::InOutVariable&gt; QShaderDescription::storageImages() const</db:title>
<db:para>Returns the list of image variables.</db:para>
<db:para>These will likely occur in compute shaders. For example, <db:code>layout (binding = 0, rgba8) uniform readonly image2D inputImage;</db:code> generates the following: (shown as textual JSON here)</db:para>
<db:programlisting language="cpp" role="bad">&quot;storageImages&quot;: [
     {
         &quot;binding&quot;: 0,
         &quot;imageFormat&quot;: &quot;rgba8&quot;,
         &quot;name&quot;: &quot;inputImage&quot;,
         &quot;set&quot;: 0,
         &quot;type&quot;: &quot;image2D&quot;
     }
 ]
</db:programlisting>
<db:note>
<db:para>Separate image objects are not compatible with some graphics APIs, such as, OpenGL 2.x or OpenGL ES older than 3.1.</db:para>
</db:note>
</db:section>
<db:section xml:id="tessellationMode">
<db:title>QShaderDescription::TessellationMode QShaderDescription::tessellationMode() const</db:title>
<db:para>Returns the tessellation execution mode for a tessellation control or evaluation shader.</db:para>
<db:para>When not set, the returned value is <db:link xlink:href="qshaderdescription.xml#TessellationMode-enum">UnknownTessellationMode</db:link>.</db:para>
<db:para>For example, for a tessellation evaluation shader with the following declaration the function returns <db:link xlink:href="qshaderdescription.xml#TessellationMode-enum">TrianglesTessellationMode</db:link>.</db:para>
<db:programlisting language="cpp" role="bad">layout(triangles) in;
</db:programlisting>
</db:section>
<db:section xml:id="tessellationOutputVertexCount">
<db:title>uint QShaderDescription::tessellationOutputVertexCount() const</db:title>
<db:para>Returns the number of output vertices.</db:para>
<db:para>For example, for a tessellation control shader with the following declaration the function returns 3.</db:para>
<db:programlisting language="cpp" role="bad">layout(vertices = 3) out;
</db:programlisting>
</db:section>
<db:section xml:id="tessellationPartitioning">
<db:title>QShaderDescription::TessellationPartitioning QShaderDescription::tessellationPartitioning() const</db:title>
<db:para>Returns the tessellation partitioning mode for a tessellation control or evaluation shader.</db:para>
<db:para>When not set, the returned value is <db:link xlink:href="qshaderdescription.xml#TessellationPartitioning-enum">UnknownTessellationPartitioning</db:link>.</db:para>
<db:para>For example, for a tessellation evaluation shader with the following declaration the function returns <db:link xlink:href="qshaderdescription.xml#TessellationPartitioning-enum">FractionalOddTessellationPartitioning</db:link>.</db:para>
<db:programlisting language="cpp" role="bad">layout(triangles, fractional_odd_spacing, ccw) in;
</db:programlisting>
</db:section>
<db:section xml:id="tessellationWindingOrder">
<db:title>QShaderDescription::TessellationWindingOrder QShaderDescription::tessellationWindingOrder() const</db:title>
<db:para>Returns the tessellation winding order for a tessellation control or evaluation shader.</db:para>
<db:para>When not set, the returned value is <db:link xlink:href="qshaderdescription.xml#TessellationWindingOrder-enum">UnknownTessellationWindingOrder</db:link>.</db:para>
<db:para>For example, for a tessellation evaluation shader with the following declaration the function returns <db:link xlink:href="qshaderdescription.xml#TessellationWindingOrder-enum">CcwTessellationWindingOrder</db:link>.</db:para>
<db:programlisting language="cpp" role="bad">layout(triangles, fractional_odd_spacing, ccw) in;
</db:programlisting>
</db:section>
<db:section xml:id="toJson">
<db:title>QByteArray QShaderDescription::toJson() const</db:title>
<db:para>Returns a serialized JSON text version of the data.</db:para>
<db:note>
<db:para>There is no deserialization method provided for JSON text.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qshaderdescription.xml#serialize">serialize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="uniformBlocks">
<db:title>QList&lt;QShaderDescription::UniformBlock&gt; QShaderDescription::uniformBlocks() const</db:title>
<db:para>Returns the list of uniform blocks.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QShaderDescription &amp;QShaderDescription::operator=(const QShaderDescription &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns <db:code role="parameter">other</db:code> to this object.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-eq-eq-1">
<db:title>[noexcept] bool operator==(const QShaderDescription &amp;<db:emphasis>lhs</db:emphasis>, const QShaderDescription &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:para>Returns <db:code>true</db:code> if the two <db:link xlink:href="qshaderdescription.xml">QShaderDescription</db:link> objects <db:code role="parameter">lhs</db:code> and <db:code role="parameter">rhs</db:code> are equal.</db:para>
</db:section>
</db:section>
</db:article>
