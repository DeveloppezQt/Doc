<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QDomDocumentType Class</db:title>
<db:productname>QtXml</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt XML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdomdocumenttype.xml">QDomDocumentType</db:link> class is the representation of the DTD in the document tree.</db:para>
<db:note>
<db:para>All functions in this class are reentrant.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDomDocumentType</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Xml)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Xml)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qdomnode.xml" xlink:role="class">QDomNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QDomDocumentType is part of <db:simplelist><db:member><db:link xlink:href="xml-tools.xml">XML Classes</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qdomdocumenttype.xml">QDomDocumentType</db:link> class allows read-only access to some of the data structures in the DTD: it can return a map of all <db:link xlink:href="qdomdocumenttype.xml#entities">entities</db:link>() and <db:link xlink:href="qdomdocumenttype.xml#notations">notations</db:link>(). In addition the function <db:link xlink:href="qdomdocumenttype.xml#name">name</db:link>() returns the name of the document type as specified in the &amp;lt;!DOCTYPE name&amp;gt; tag. This class also provides the <db:link xlink:href="qdomdocumenttype.xml#publicId">publicId</db:link>(), <db:link xlink:href="qdomdocumenttype.xml#systemId">systemId</db:link>() and <db:link xlink:href="qdomdocumenttype.xml#internalSubset">internalSubset</db:link>() functions.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdomdocument.xml">QDomDocument</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QDomDocumentType">
<db:title>QDomDocumentType::QDomDocumentType()</db:title>
<db:para>Creates an empty <db:link xlink:href="qdomdocumenttype.xml">QDomDocumentType</db:link> object.</db:para>
</db:section>
<db:section xml:id="QDomDocumentType-1">
<db:title>QDomDocumentType::QDomDocumentType(const QDomDocumentType &amp;<db:emphasis>documentType</db:emphasis>)</db:title>
<db:para>Constructs a copy of <db:code role="parameter">documentType</db:code>.</db:para>
<db:para>The data of the copy is shared (shallow copy): modifying one node will also change the other. If you want to make a deep copy, use <db:link xlink:href="qdomnode.xml#cloneNode">cloneNode</db:link>().</db:para>
</db:section>
<db:section xml:id="entities">
<db:title>QDomNamedNodeMap QDomDocumentType::entities() const</db:title>
<db:para>Returns a map of all entities described in the DTD.</db:para>
</db:section>
<db:section xml:id="internalSubset">
<db:title>QString QDomDocumentType::internalSubset() const</db:title>
<db:para>Returns the internal subset of the document type or an empty string if there is no internal subset.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdomdocumenttype.xml#publicId">publicId</db:link>()</db:member>
<db:member><db:link xlink:href="qdomdocumenttype.xml#systemId">systemId</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="name">
<db:title>QString QDomDocumentType::name() const</db:title>
<db:para>Returns the name of the document type as specified in the &amp;lt;!DOCTYPE name&amp;gt; tag.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdomnode.xml#nodeName">nodeName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="nodeType">
<db:title>QDomNode::NodeType QDomDocumentType::nodeType() const</db:title>
<db:para>Returns <db:code>DocumentTypeNode</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdomnode.xml#isDocumentType">isDocumentType</db:link>()</db:member>
<db:member><db:link xlink:href="qdomnode.xml#toDocumentType">QDomNode::toDocumentType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="notations">
<db:title>QDomNamedNodeMap QDomDocumentType::notations() const</db:title>
<db:para>Returns a map of all notations described in the DTD.</db:para>
</db:section>
<db:section xml:id="publicId">
<db:title>QString QDomDocumentType::publicId() const</db:title>
<db:para>Returns the public identifier of the external DTD subset or an empty string if there is no public identifier.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdomdocumenttype.xml#systemId">systemId</db:link>()</db:member>
<db:member><db:link xlink:href="qdomdocumenttype.xml#internalSubset">internalSubset</db:link>()</db:member>
<db:member><db:link xlink:href="qdomimplementation.xml#createDocumentType">QDomImplementation::createDocumentType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="systemId">
<db:title>QString QDomDocumentType::systemId() const</db:title>
<db:para>Returns the system identifier of the external DTD subset or an empty string if there is no system identifier.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdomdocumenttype.xml#publicId">publicId</db:link>()</db:member>
<db:member><db:link xlink:href="qdomdocumenttype.xml#internalSubset">internalSubset</db:link>()</db:member>
<db:member><db:link xlink:href="qdomimplementation.xml#createDocumentType">QDomImplementation::createDocumentType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QDomDocumentType &amp;QDomDocumentType::operator=(const QDomDocumentType &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns <db:code role="parameter">other</db:code> to this document type.</db:para>
<db:para>The data of the copy is shared (shallow copy): modifying one node will also change the other. If you want to make a deep copy, use <db:link xlink:href="qdomnode.xml#cloneNode">cloneNode</db:link>().</db:para>
</db:section>
</db:section>
</db:article>
