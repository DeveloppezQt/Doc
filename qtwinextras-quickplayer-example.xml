<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Quick Player</db:title>
<db:productname>QtWinExtras</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Windows Extras Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates using <db:link xlink:href="qtwinextras-module.xml">QtWinExtras</db:link> in Qt Quick.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:alt>Screenshot of the Quick Player example</db:alt>
<db:imageobject>
<db:imagedata fileref="images/qtwinextras-quickplayer-composited.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The Quick Player example demonstrates how to use the various features provided by the <db:link xlink:href="qtwinextras-module.xml">QtWinExtras</db:link> module in Qt Quick.</db:para>
<db:note>
<db:para>This example is a simplified Qt Quick-based version of the <db:link xlink:href="qtwinextras-musicplayer-example.xml">Music Player</db:link> example.</db:para>
</db:note>
<db:section xml:id="dwm-features">
<db:title>DWM Features</db:title>
<db:para>The example uses Windows DWM (Desktop Window Manager) features to visually integrate the window content to the window frame and to make the window translucent and blurred.</db:para>
<db:para>The example applies a different look based on whether composition is enabled or not. When composition is enabled, the window is made translucent and the window frame is extended to the client area to make the window content integrate seamlessly to the window frame as shown above.</db:para>
<db:programlisting language="qml">Win.DwmFeatures {
    id: dwm

    topGlassMargin: -1
    leftGlassMargin: -1
    rightGlassMargin: -1
    bottomGlassMargin: -1
}
</db:programlisting>
<db:para>When composition is disabled, the colorization color is used as a background color for the window.</db:para>
<db:programlisting language="qml">color: dwm.compositionEnabled ? &quot;transparent&quot; : dwm.realColorizationColor
</db:programlisting>
<db:para>The following screenshot illustrates how the Quick Player example looks when composition is disabled.</db:para>
<db:mediaobject>
<db:alt>Screenshot of the Quick Player example</db:alt>
<db:imageobject>
<db:imagedata fileref="images/qtwinextras-quickplayer-non-composited.png"/>
</db:imageobject>
</db:mediaobject>
</db:section>
<db:section xml:id="taskbar-overlay-and-progress">
<db:title>Taskbar Overlay and Progress</db:title>
<db:para>The example uses Windows Taskbar for two things; it sets an overlay icon that represents the current music playback state, and it indicates the playback progress in the taskbar button.</db:para>
<db:mediaobject>
<db:alt>Screenshot of the Quick Player taskbar</db:alt>
<db:imageobject>
<db:imagedata fileref="images/qtwinextras-quickplayer-taskbar.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The following snippet shows how the taskbar button is prepared. The taskbar progress indicator and the overlay icon are bound to the music playback, and will automatically change whenever the state or attributes of the music playback change.</db:para>
<db:programlisting language="qml">Win.TaskbarButton {
    id: taskbar

    progress.value: mediaPlayer.position
    progress.maximum: mediaPlayer.duration
    progress.visible: mediaPlayer.hasAudio
    progress.paused: mediaPlayer.playbackState === MediaPlayer.PausedState

    overlay.iconSource: mediaPlayer.playbackState === MediaPlayer.PlayingState ? &quot;qrc:/play-32.png&quot; :
                        mediaPlayer.playbackState === MediaPlayer.PausedState ? &quot;qrc:/pause-32.png&quot; : &quot;qrc:/stop-32.png&quot;
}
</db:programlisting>
</db:section>
<db:section xml:id="thumbnail-toolbar">
<db:title>Thumbnail Toolbar</db:title>
<db:mediaobject>
<db:alt>Screenshot of the Quick Player thumbnail</db:alt>
<db:imageobject>
<db:imagedata fileref="images/qtwinextras-quickplayer-thumbnail.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The Windows Thumbnail Toolbar is used for providing basic music playback controls. These controls can be used to control the application without having to activate the application. The thumbnail toolbar buttons are bound to the music playback, and will automatically change whenever the state or attributes of the music playback changes.</db:para>
<db:programlisting language="qml">Win.ThumbnailToolBar {
    id: thumbbar

    Win.ThumbnailToolButton {
        tooltip: qsTr(&quot;Rewind&quot;)
        iconSource: &quot;qrc:/backward-32.png&quot;

        enabled: mediaPlayer.position &gt; 0
        onClicked: mediaPlayer.seek(mediaPlayer.position - mediaPlayer.duration / 10)
    }

    Win.ThumbnailToolButton {
        tooltip: mediaPlayer.playbackState === MediaPlayer.PlayingState ? qsTr(&quot;Pause&quot;) : qsTr(&quot;Play&quot;)
        iconSource: mediaPlayer.playbackState === MediaPlayer.PlayingState ? &quot;qrc:/pause-32.png&quot; : &quot;qrc:/play-32.png&quot;

        enabled: mediaPlayer.hasAudio
        onClicked: mediaPlayer.playbackState === MediaPlayer.PlayingState ? mediaPlayer.pause() : mediaPlayer.play()
    }

    Win.ThumbnailToolButton {
        tooltip: qsTr(&quot;Fast forward&quot;)
        iconSource: &quot;qrc:/forward-32.png&quot;

        enabled: mediaPlayer.position &lt; mediaPlayer.duration
        onClicked: mediaPlayer.seek(mediaPlayer.position + mediaPlayer.duration / 10)
    }
}
</db:programlisting>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="quickplayer/main.cpp">quickplayer/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quickplayer/qml/main.qml">quickplayer/qml/main.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quickplayer/quickplayer.pro">quickplayer/quickplayer.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quickplayer/quickplayer.qrc">quickplayer/quickplayer.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Images:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="quickplayer/images/media-pause-16.png">quickplayer/images/media-pause-16.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quickplayer/images/media-pause-32.png">quickplayer/images/media-pause-32.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quickplayer/images/media-play-16.png">quickplayer/images/media-play-16.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quickplayer/images/media-play-32.png">quickplayer/images/media-play-32.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quickplayer/images/media-seek-backward-32.png">quickplayer/images/media-seek-backward-32.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quickplayer/images/media-seek-forward-32.png">quickplayer/images/media-seek-forward-32.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quickplayer/images/media-stop-32.png">quickplayer/images/media-stop-32.png</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:section></db:article>
