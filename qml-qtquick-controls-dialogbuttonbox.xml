<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>DialogButtonBox QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A button box used in dialogs.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Container</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>DialogButtonBox is part of <db:simplelist><db:member>qtquickcontrols-dialogs</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Dialogs and message boxes typically present buttons in an order that conforms to the interface guidelines for that platform. Invariably, different platforms have their dialog buttons in different orders. <db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml">DialogButtonBox</db:link> allows a developer to add buttons to it and will automatically use the appropriate order for the user's platform.</db:para>
<db:para>Most buttons for a dialog follow certain roles. Such roles include:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Accepting or rejecting the dialog.</db:para>
</db:listitem>
<db:listitem>
<db:para>Asking for help.</db:para>
</db:listitem>
<db:listitem>
<db:para>Performing actions on the dialog itself (such as resetting fields or applying changes).</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>There can also be alternate ways of dismissing the dialog which may cause destructive results.</db:para>
<db:para>Most dialogs have buttons that can almost be considered standard (e.g. <db:guilabel>OK</db:guilabel> and <db:guilabel>Cancel</db:guilabel> buttons). It is sometimes convenient to create these buttons in a standard way.</db:para>
<db:para>There are a couple ways of using <db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml">DialogButtonBox</db:link>. One way is to specify the standard buttons (e.g. <db:guilabel>OK</db:guilabel>, <db:guilabel>Cancel</db:guilabel>, <db:guilabel>Save</db:guilabel>) and let the button box setup the buttons.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-dialogbuttonbox.png"/>
</db:imageobject>
</db:mediaobject>
<db:programlisting language="qml">DialogButtonBox {
    standardButtons: DialogButtonBox.Ok | DialogButtonBox.Cancel

    onAccepted: console.log(&quot;Ok clicked&quot;)
    onRejected: console.log(&quot;Cancel clicked&quot;)
}
</db:programlisting>
<db:para>Alternatively, buttons and their roles can be specified by hand:</db:para>
<db:programlisting language="qml">DialogButtonBox {
    Button {
        text: qsTr(&quot;Save&quot;)
        DialogButtonBox.buttonRole: DialogButtonBox.AcceptRole
    }
    Button {
        text: qsTr(&quot;Close&quot;)
        DialogButtonBox.buttonRole: DialogButtonBox.DestructiveRole
    }
}
</db:programlisting>
<db:para>You can also mix and match normal buttons and standard buttons.</db:para>
<db:para>When a button is clicked in the button box, the <db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#clicked-signal">clicked</db:link>() signal is emitted for the actual button that is pressed. In addition, the following signals are automatically emitted when a button with the respective role(s) is pressed:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Role</db:para>
</db:th>
<db:th>
<db:para>Signal</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>AcceptRole</db:code>, <db:code>YesRole</db:code></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#accepted-signal">accepted</db:link>()</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>ApplyRole</db:code></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#applied-signal">applied</db:link>()</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>DiscardRole</db:code></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#discarded-signal">discarded</db:link>()</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>HelpRole</db:code></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#helpRequested-signal">helpRequested</db:link>()</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>RejectRole</db:code>, <db:code>NoRole</db:code></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#rejected-signal">rejected</db:link>()</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>ResetRole</db:code></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#reset-signal">reset</db:link>()</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-dialog.xml">Dialog</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="alignment-prop">
<db:title>alignment : flags</db:title>
<db:fieldsynopsis>
<db:type>flags</db:type>
<db:varname>alignment</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the alignment of the buttons.</db:para>
<db:para>Possible values:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>undefined</db:para>
</db:td>
<db:td>
<db:para>The buttons are resized to fill the available space.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.AlignLeft</db:para>
</db:td>
<db:td>
<db:para>The buttons are aligned to the left.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.AlignHCenter</db:para>
</db:td>
<db:td>
<db:para>The buttons are horizontally centered.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.AlignRight</db:para>
</db:td>
<db:td>
<db:para>The buttons are aligned to the right.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.AlignTop</db:para>
</db:td>
<db:td>
<db:para>The buttons are aligned to the top.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.AlignVCenter</db:para>
</db:td>
<db:td>
<db:para>The buttons are vertically centered.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.AlignBottom</db:para>
</db:td>
<db:td>
<db:para>The buttons are aligned to the bottom.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The default value is <db:code>undefined</db:code>.</db:para>
<db:note>
<db:para>This property assumes a horizontal layout of the buttons. The <db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml">DialogButtonBox</db:link> for the <db:link xlink:href="qtquickcontrols-ios.xml">iOS style</db:link> uses a vertical layout when there are more than two buttons, and if set to a value other than <db:code>undefined</db:code>, the layout of its buttons will be done horizontally.</db:para>
</db:note>
</db:section>
<db:section xml:id="buttonLayout-prop">
<db:title>[since QtQuick.Controls 2.5 (Qt 5.12)] buttonLayout : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>buttonLayout</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the button layout policy to be used when arranging the buttons contained in the button box. The default value is platform-specific.</db:para>
<db:para>Available values:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>DialogButtonBox.WinLayout</db:para>
</db:td>
<db:td>
<db:para>Use a policy appropriate for applications on Windows.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.MacLayout</db:para>
</db:td>
<db:td>
<db:para>Use a policy appropriate for applications on macOS.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.KdeLayout</db:para>
</db:td>
<db:td>
<db:para>Use a policy appropriate for applications on KDE.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.GnomeLayout</db:para>
</db:td>
<db:td>
<db:para>Use a policy appropriate for applications on GNOME.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.AndroidLayout</db:para>
</db:td>
<db:td>
<db:para>Use a policy appropriate for applications on Android.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This property was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
</db:section>
<db:section xml:id="delegate-prop">
<db:title>delegate : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>delegate</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a delegate for creating standard buttons.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#standardButtons-prop">standardButtons</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="position-prop">
<db:title>position : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>position</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the position of the button box.</db:para>
<db:note>
<db:para>If the button box is assigned as a header or footer of <db:link xlink:href="qml-qtquick-controls-applicationwindow.xml">ApplicationWindow</db:link> or Page, the appropriate position is set automatically.</db:para>
</db:note>
<db:para>Possible values:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Header</db:para>
</db:td>
<db:td>
<db:para>The button box is at the top, as a window or page header.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Footer</db:para>
</db:td>
<db:td>
<db:para>The button box is at the bottom, as a window or page footer.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The default value is <db:code>Footer</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-dialog.xml#header-prop">Dialog::header</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-dialog.xml#footer-prop">Dialog::footer</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="standardButtons-prop">
<db:title>standardButtons : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>standardButtons</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a combination of standard buttons that are used by the button box.</db:para>
<db:programlisting language="qml">DialogButtonBox {
    standardButtons: DialogButtonBox.Ok | DialogButtonBox.Cancel

    onAccepted: console.log(&quot;Ok clicked&quot;)
    onRejected: console.log(&quot;Cancel clicked&quot;)
}
</db:programlisting>
<db:para>The buttons will be positioned in the appropriate order for the user's platform.</db:para>
<db:para>Possible flags:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Ok</db:para>
</db:td>
<db:td>
<db:para>An &quot;OK&quot; button defined with the <db:code>AcceptRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Open</db:para>
</db:td>
<db:td>
<db:para>An &quot;Open&quot; button defined with the <db:code>AcceptRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Save</db:para>
</db:td>
<db:td>
<db:para>A &quot;Save&quot; button defined with the <db:code>AcceptRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Cancel</db:para>
</db:td>
<db:td>
<db:para>A &quot;Cancel&quot; button defined with the <db:code>RejectRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Close</db:para>
</db:td>
<db:td>
<db:para>A &quot;Close&quot; button defined with the <db:code>RejectRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Discard</db:para>
</db:td>
<db:td>
<db:para>A &quot;Discard&quot; or &quot;Don't Save&quot; button, depending on the platform, defined with the <db:code>DestructiveRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Apply</db:para>
</db:td>
<db:td>
<db:para>An &quot;Apply&quot; button defined with the <db:code>ApplyRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Reset</db:para>
</db:td>
<db:td>
<db:para>A &quot;Reset&quot; button defined with the <db:code>ResetRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.RestoreDefaults</db:para>
</db:td>
<db:td>
<db:para>A &quot;Restore Defaults&quot; button defined with the <db:code>ResetRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Help</db:para>
</db:td>
<db:td>
<db:para>A &quot;Help&quot; button defined with the <db:code>HelpRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.SaveAll</db:para>
</db:td>
<db:td>
<db:para>A &quot;Save All&quot; button defined with the <db:code>AcceptRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Yes</db:para>
</db:td>
<db:td>
<db:para>A &quot;Yes&quot; button defined with the <db:code>YesRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.YesToAll</db:para>
</db:td>
<db:td>
<db:para>A &quot;Yes to All&quot; button defined with the <db:code>YesRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.No</db:para>
</db:td>
<db:td>
<db:para>A &quot;No&quot; button defined with the <db:code>NoRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.NoToAll</db:para>
</db:td>
<db:td>
<db:para>A &quot;No to All&quot; button defined with the <db:code>NoRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Abort</db:para>
</db:td>
<db:td>
<db:para>An &quot;Abort&quot; button defined with the <db:code>RejectRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Retry</db:para>
</db:td>
<db:td>
<db:para>A &quot;Retry&quot; button defined with the <db:code>AcceptRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.Ignore</db:para>
</db:td>
<db:td>
<db:para>An &quot;Ignore&quot; button defined with the <db:code>AcceptRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.NoButton</db:para>
</db:td>
<db:td>
<db:para>An invalid button.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#standardButton-method">standardButton</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="attached-property-documentation">
<db:title>Attached Property Documentation</db:title>
<db:section xml:id="buttonBox-attached-prop">
<db:title>[read-only] DialogButtonBox.buttonBox : DialogButtonBox</db:title>
<db:fieldsynopsis>
<db:type>DialogButtonBox</db:type>
<db:varname>DialogButtonBox.buttonBox</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property holds the button box that manages this button, or <db:code>null</db:code> if the button is not in a button box.</db:para>
</db:section>
<db:section xml:id="buttonRole-attached-prop">
<db:title>DialogButtonBox.buttonRole : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>DialogButtonBox.buttonRole</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property holds the role of each button in a button box.</db:para>
<db:programlisting language="qml">DialogButtonBox {
    Button {
        text: qsTr(&quot;Save&quot;)
        DialogButtonBox.buttonRole: DialogButtonBox.AcceptRole
    }
    Button {
        text: qsTr(&quot;Close&quot;)
        DialogButtonBox.buttonRole: DialogButtonBox.DestructiveRole
    }
}
</db:programlisting>
<db:para>Available values:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>DialogButtonBox.InvalidRole</db:para>
</db:td>
<db:td>
<db:para>The button is invalid.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.AcceptRole</db:para>
</db:td>
<db:td>
<db:para>Clicking the button causes the dialog to be accepted (e.g. <db:guilabel>OK</db:guilabel>).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.RejectRole</db:para>
</db:td>
<db:td>
<db:para>Clicking the button causes the dialog to be rejected (e.g. <db:guilabel>Cancel</db:guilabel>).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.DestructiveRole</db:para>
</db:td>
<db:td>
<db:para>Clicking the button causes a destructive change (e.g. for discarding changes) and closes the dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.ActionRole</db:para>
</db:td>
<db:td>
<db:para>Clicking the button causes changes to the elements within the dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.HelpRole</db:para>
</db:td>
<db:td>
<db:para>The button can be clicked to request help.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.YesRole</db:para>
</db:td>
<db:td>
<db:para>The button is a &quot;Yes&quot;-like button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.NoRole</db:para>
</db:td>
<db:td>
<db:para>The button is a &quot;No&quot;-like button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.ResetRole</db:para>
</db:td>
<db:td>
<db:para>The button resets the dialog's fields to default values.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DialogButtonBox.ApplyRole</db:para>
</db:td>
<db:td>
<db:para>The button applies current changes.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="accepted-signal">
<db:title>accepted()</db:title>
<db:para>This signal is emitted when a button defined with the <db:code>AcceptRole</db:code> or <db:code>YesRole</db:code> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onAccepted</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#rejected-signal">rejected</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#clicked-signal">clicked</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#helpRequested-signal">helpRequested</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="applied-signal">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] applied()</db:title>
<db:para>This signal is emitted when a button defined with the <db:code>ApplyRole</db:code> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onApplied</db:code>.</db:para>
</db:note>
<db:para>This signal was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#discarded-signal">discarded</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#reset-signal">reset</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clicked-signal">
<db:title>clicked(AbstractButton <db:emphasis>button</db:emphasis>)</db:title>
<db:para>This signal is emitted when a <db:code role="parameter">button</db:code> inside the button box is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onClicked</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#accepted-signal">accepted</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#rejected-signal">rejected</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#helpRequested-signal">helpRequested</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="discarded-signal">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] discarded()</db:title>
<db:para>This signal is emitted when a button defined with the <db:code>DiscardRole</db:code> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onDiscarded</db:code>.</db:para>
</db:note>
<db:para>This signal was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#reset-signal">reset</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#applied-signal">applied</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="helpRequested-signal">
<db:title>helpRequested()</db:title>
<db:para>This signal is emitted when a button defined with the <db:code>HelpRole</db:code> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onHelpRequested</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#accepted-signal">accepted</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#rejected-signal">rejected</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#clicked-signal">clicked</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rejected-signal">
<db:title>rejected()</db:title>
<db:para>This signal is emitted when a button defined with the <db:code>RejectRole</db:code> or <db:code>NoRole</db:code> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onRejected</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#accepted-signal">accepted</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#helpRequested-signal">helpRequested</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#clicked-signal">clicked</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="reset-signal">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] reset()</db:title>
<db:para>This signal is emitted when a button defined with the <db:code>ResetRole</db:code> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onReset</db:code>.</db:para>
</db:note>
<db:para>This signal was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#discarded-signal">discarded</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#applied-signal">applied</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="standardButton-method">
<db:title>AbstractButton standardButton(StandardButton <db:emphasis>button</db:emphasis>)</db:title>
<db:para>Returns the specified standard <db:code role="parameter">button</db:code>, or <db:code>null</db:code> if it does not exist.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-dialogbuttonbox.xml#standardButtons-prop">standardButtons</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
