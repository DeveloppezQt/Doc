<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QMorphTarget Class</db:title>
<db:subtitle>Qt3DAnimation::QMorphTarget</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A class providing morph targets to blend-shape animation.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QMorphTarget</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3danimation)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3danimation)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3danimation</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-animation-morphtarget.xml" xlink:role="">MorphTarget</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qt3danimation-qmorphtarget.xml">Qt3DAnimation::QMorphTarget</db:link> class is a convenience class, which provides a list of <db:link xlink:href="qt3dcore-qattribute.xml">QAttributes</db:link>, which the <db:link xlink:href="qt3danimation-qmorphinganimation.xml">QMorphingAnimation</db:link> uses to animate geometry. A <db:link xlink:href="qt3danimation-qmorphtarget.xml">QMorphTarget</db:link> can also be created based on existing <db:link xlink:href="qt3dcore-qgeometry.xml">Qt3DCore::QGeometry</db:link>.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="attributeNames-prop">
<db:title>[read-only] attributeNames : const QStringList</db:title>
<db:para>Holds a list of attribute names contained in the morph target.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QStringList</db:type> <db:emphasis role="bold">attributeNames</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">attributeNamesChanged</db:emphasis>(const <db:type>QStringList</db:type> &amp;<db:emphasis>attributeNames</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QMorphTarget">
<db:title>[explicit] QMorphTarget::QMorphTarget(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a <db:link xlink:href="qt3danimation-qmorphtarget.xml">QMorphTarget</db:link> with given <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="addAttribute">
<db:title>void QMorphTarget::addAttribute(Qt3DCore::QAttribute *<db:emphasis>attribute</db:emphasis>)</db:title>
<db:para>Adds an <db:code role="parameter">attribute</db:code> the morph target. An attribute with the same name must not have been added previously to the morph target.</db:para>
</db:section>
<db:section xml:id="attributeList">
<db:title>QList&lt;Qt3DCore::QAttribute *&gt; QMorphTarget::attributeList() const</db:title>
<db:para>Returns a list of attributes contained in the morph target.</db:para>
</db:section>
<db:section xml:id="fromGeometry">
<db:title>[static] Qt3DAnimation::QMorphTarget *QMorphTarget::fromGeometry(Qt3DCore::QGeometry *<db:emphasis>geometry</db:emphasis>, const QStringList &amp;<db:emphasis>attributes</db:emphasis>)</db:title>
<db:para>Returns a morph target based on the <db:code role="parameter">attributes</db:code> in the given <db:code role="parameter">geometry</db:code>.</db:para>
</db:section>
<db:section xml:id="removeAttribute">
<db:title>void QMorphTarget::removeAttribute(Qt3DCore::QAttribute *<db:emphasis>attribute</db:emphasis>)</db:title>
<db:para>Removes an <db:code role="parameter">attribute</db:code> from the morph target.</db:para>
</db:section>
<db:section xml:id="setAttributes">
<db:title>void QMorphTarget::setAttributes(const QList&lt;Qt3DCore::QAttribute *&gt; &amp;<db:emphasis>attributes</db:emphasis>)</db:title>
<db:para>Sets <db:code role="parameter">attributes</db:code> to the morph target. Old attributes are cleared.</db:para>
</db:section>
</db:section>
</db:article>
