<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>qml</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Qml Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A tool that loads QML documents and creates a window to show the scene if your QML document includes a visual item.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="the-qml-utility">
<db:title>The qml utility</db:title>
<db:para>The qml utility tool loads QML documents and creates a window to show the scene if your QML document includes a visual item. You can also evaluate non-visual QML documents with it. It is mainly meant for testing your QML applications or components quickly as described in here.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Usage:</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>qml [<db:link xlink:href="qtqml-tooling-qmlformat.xml#options">options</db:link>] files... [– args...]</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section xml:id="options">
<db:title>options</db:title>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Option</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>-h, –help</db:para>
</db:td>
<db:td>
<db:para>Displays help on commandline options.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–help-all</db:para>
</db:td>
<db:td>
<db:para>Displays help, including generic Qt options.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-v, –version</db:para>
</db:td>
<db:td>
<db:para>Displays version information.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-a, –apptype &lt;core|gui|widget&gt;</db:para>
</db:td>
<db:td>
<db:para>Select which application class to use. Default is gui.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-I &lt;path&gt;</db:para>
</db:td>
<db:td>
<db:para>Prepend the given path to the import paths.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-f &lt;file&gt;</db:para>
</db:td>
<db:td>
<db:para>Load the given file as a QML file.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-c, –config &lt;file&gt;</db:para>
</db:td>
<db:td>
<db:para>Load the given built-in configuration or configuration file.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–list-conf</db:para>
</db:td>
<db:td>
<db:para>List the built-in configurations.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–translation &lt;file&gt;</db:para>
</db:td>
<db:td>
<db:para>Load the given file as the translations file.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–dummy-data &lt;file&gt;</db:para>
</db:td>
<db:td>
<db:para>Load QML files from the given directory as context properties. (deprecated)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–desktop</db:para>
</db:td>
<db:td>
<db:para>Force use of desktop OpenGL (AA_UseDesktopOpenGL).</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–gles</db:para>
</db:td>
<db:td>
<db:para>Force use of GLES (AA_UseOpenGLES).</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–software</db:para>
</db:td>
<db:td>
<db:para>Force use of software rendering (AA_UseSoftwareOpenGL).</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–core-profile</db:para>
</db:td>
<db:td>
<db:para>Force use of OpenGL Core Profile.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–disable-context-sharing</db:para>
</db:td>
<db:td>
<db:para>Disable the use of a shared GL context for QtQuick Windows</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–enable-shader-cache</db:para>
</db:td>
<db:td>
<db:para>Enable persistent caching of generated shaders</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–transparent</db:para>
</db:td>
<db:td>
<db:para>Requests an alpha channel in order to enable semi-transparent windows.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–multisample</db:para>
</db:td>
<db:td>
<db:para>Requests 4x multisample antialiasing.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–quiet</db:para>
</db:td>
<db:td>
<db:para>Suppress all output.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–verbose</db:para>
</db:td>
<db:td>
<db:para>Print information about what qml is doing, like specific file URLs being loaded.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–slow-animations</db:para>
</db:td>
<db:td>
<db:para>Run all animations in slow motion.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>–fixed-animations</db:para>
</db:td>
<db:td>
<db:para>Run animations off animation tick rather than wall time.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-r, –rhi &lt;backend&gt;</db:para>
</db:td>
<db:td>
<db:para>Set the backend for the Qt graphics abstraction (RHI). Backend is one of: default, vulkan, metal, d3d11, gl</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-S &lt;selector&gt;</db:para>
</db:td>
<db:td>
<db:para>Add selector to the list of QQmlFileSelectors.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
</db:article>
