<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QTextFrame Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qtextframe.xml">QTextFrame</db:link> class represents a frame in a <db:link xlink:href="qtextdocument.xml">QTextDocument</db:link>.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QTextFrame</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qtextobject.xml" xlink:role="class">QTextObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qtexttable.xml" xlink:role="class">QTextTable</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QTextFrame is part of <db:simplelist><db:member><db:link xlink:href="richtext-processing.xml">Rich Text Processing APIs</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Text frames provide structure for the text in a document. They are used as generic containers for other document elements. Frames are usually created by using <db:link xlink:href="qtextcursor.xml#insertFrame">QTextCursor::insertFrame</db:link>().</db:para>
<db:para>Frames can be used to create hierarchical structures in rich text documents. Each document has a root frame (<db:link xlink:href="qtextdocument.xml#rootFrame">QTextDocument::rootFrame</db:link>()), and each frame beneath the root frame has a parent frame and a (possibly empty) list of child frames. The parent frame can be found with <db:link xlink:href="qtextframe.xml#parentFrame">parentFrame</db:link>(), and the <db:link xlink:href="qtextframe.xml#childFrames">childFrames</db:link>() function provides a list of child frames.</db:para>
<db:para>Each frame contains at least one text block to enable text cursors to insert new document elements within. As a result, the <db:link xlink:href="qtextframe-iterator.xml">QTextFrame::iterator</db:link> class is used to traverse both the blocks and child frames within a given frame. The first and last child elements in the frame can be found with <db:link xlink:href="qtextframe.xml#begin">begin</db:link>() and <db:link xlink:href="qtextframe.xml#end">end</db:link>().</db:para>
<db:para>A frame also has a format (specified using <db:link xlink:href="qtextframeformat.xml">QTextFrameFormat</db:link>) which can be set with <db:link xlink:href="qtextobject.xml#setFormat">setFormat</db:link>() and read with <db:link xlink:href="qtextobject.xml#format">format</db:link>().</db:para>
<db:para>Text cursors can be obtained that point to the first and last valid cursor positions within a frame; use the <db:link xlink:href="qtextframe.xml#firstCursorPosition">firstCursorPosition</db:link>() and <db:link xlink:href="qtextframe.xml#lastCursorPosition">lastCursorPosition</db:link>() functions for this. The frame's extent in the document can be found with <db:link xlink:href="qtextframe.xml#firstPosition">firstPosition</db:link>() and <db:link xlink:href="qtextframe.xml#lastPosition">lastPosition</db:link>().</db:para>
<db:para>You can iterate over a frame's contents using the <db:link xlink:href="qtextframe-iterator.xml">QTextFrame::iterator</db:link> class: this provides read-only access to its internal list of text blocks and child frames.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextcursor.xml">QTextCursor</db:link></db:member>
<db:member><db:link xlink:href="qtextdocument.xml">QTextDocument</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Iterator-typedef">
<db:title>QTextFrame::Iterator</db:title>
<db:typedefsynopsis>
<db:typedefname>Iterator</db:typedefname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:typedefsynopsis>
<db:para>Qt-style synonym for <db:link xlink:href="qtextframe-iterator.xml">QTextFrame::iterator</db:link>.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QTextFrame">
<db:title>[explicit] QTextFrame::QTextFrame(QTextDocument *<db:emphasis>document</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QTextFrame</db:methodname>
<db:methodparam>
<db:type>QTextDocument *</db:type>
<db:parameter>document</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QTextFrame(QTextDocument *document)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a new empty frame for the text <db:code role="parameter">document</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QTextFrame">
<db:title>[virtual] QTextFrame::~QTextFrame()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QTextFrame</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QTextFrame()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the text frame.</db:para>
<db:warning>
<db:para>Text frames are owned by the document, so you should never destroy them yourself. In order to remove a frame from its document, remove its contents using a <db:code>QTextCursor</db:code>.</db:para>
</db:warning>
</db:section>
<db:section xml:id="begin">
<db:title>QTextFrame::iterator QTextFrame::begin() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QTextFrame::iterator</db:type>
<db:methodname>begin</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QTextFrame::iterator begin() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns an iterator pointing to the first document element inside the frame. Please see the document <db:link xlink:href="containers.xml#stl-style-iterators">STL-style-Iterators</db:link> for more information.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe.xml#end">end</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="childFrames">
<db:title>QList&lt;QTextFrame *&gt; QTextFrame::childFrames() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;QTextFrame *&gt;</db:type>
<db:methodname>childFrames</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QTextFrame *&gt; childFrames() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a (possibly empty) list of the frame's child frames.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe.xml#parentFrame">parentFrame</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="end">
<db:title>QTextFrame::iterator QTextFrame::end() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QTextFrame::iterator</db:type>
<db:methodname>end</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QTextFrame::iterator end() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns an iterator pointing to the position past the last document element inside the frame. Please see the document <db:link xlink:href="containers.xml#stl-style-iterators">STL-Style Iterators</db:link> for more information.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe.xml#begin">begin</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="firstCursorPosition">
<db:title>QTextCursor QTextFrame::firstCursorPosition() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QTextCursor</db:type>
<db:methodname>firstCursorPosition</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QTextCursor firstCursorPosition() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the first cursor position inside the frame.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe.xml#lastCursorPosition">lastCursorPosition</db:link>()</db:member>
<db:member><db:link xlink:href="qtextframe.xml#firstPosition">firstPosition</db:link>()</db:member>
<db:member><db:link xlink:href="qtextframe.xml#lastPosition">lastPosition</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="firstPosition">
<db:title>int QTextFrame::firstPosition() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>firstPosition</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int firstPosition() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the first document position inside the frame.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe.xml#lastPosition">lastPosition</db:link>()</db:member>
<db:member><db:link xlink:href="qtextframe.xml#firstCursorPosition">firstCursorPosition</db:link>()</db:member>
<db:member><db:link xlink:href="qtextframe.xml#lastCursorPosition">lastCursorPosition</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="frameFormat">
<db:title>QTextFrameFormat QTextFrame::frameFormat() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QTextFrameFormat</db:type>
<db:methodname>frameFormat</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QTextFrameFormat frameFormat() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the frame's format.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe.xml#setFrameFormat">setFrameFormat</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="lastCursorPosition">
<db:title>QTextCursor QTextFrame::lastCursorPosition() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QTextCursor</db:type>
<db:methodname>lastCursorPosition</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QTextCursor lastCursorPosition() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the last cursor position inside the frame.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe.xml#firstCursorPosition">firstCursorPosition</db:link>()</db:member>
<db:member><db:link xlink:href="qtextframe.xml#firstPosition">firstPosition</db:link>()</db:member>
<db:member><db:link xlink:href="qtextframe.xml#lastPosition">lastPosition</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="lastPosition">
<db:title>int QTextFrame::lastPosition() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>lastPosition</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int lastPosition() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the last document position inside the frame.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe.xml#firstPosition">firstPosition</db:link>()</db:member>
<db:member><db:link xlink:href="qtextframe.xml#firstCursorPosition">firstCursorPosition</db:link>()</db:member>
<db:member><db:link xlink:href="qtextframe.xml#lastCursorPosition">lastCursorPosition</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="parentFrame">
<db:title>QTextFrame *QTextFrame::parentFrame() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QTextFrame *</db:type>
<db:methodname>parentFrame</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QTextFrame * parentFrame() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the frame's parent frame. If the frame is the root frame of a document, this will return 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe.xml#childFrames">childFrames</db:link>()</db:member>
<db:member><db:link xlink:href="qtextdocument.xml#rootFrame">QTextDocument::rootFrame</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFrameFormat">
<db:title>void QTextFrame::setFrameFormat(const QTextFrameFormat &amp;<db:emphasis>format</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setFrameFormat</db:methodname>
<db:methodparam>
<db:type>const QTextFrameFormat &amp;</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setFrameFormat(const QTextFrameFormat &amp;format)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the frame's <db:code role="parameter">format</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe.xml#frameFormat">frameFormat</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
