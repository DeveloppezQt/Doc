<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Licenses Used in Qt</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Information about other licenses and third-party code used in Qt.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt contains some code that is not provided under the <db:link xlink:href="lgpl.xml">GNU Lesser General Public License (LGPL)</db:link> or the <db:link xlink:href="commerciallicense.xml">Qt Commercial License</db:link>, but rather under specific licenses from the original authors.</db:para>
<db:para>The Qt Company gratefully acknowledges these and other contributions to Qt. We recommend that programs that use Qt also acknowledge these contributions, and quote these license statements in an appendix to the documentation.</db:para>
<db:note>
<db:para>You only need to comply with (and acknowledge) the licenses of the third-party components that you are using with your application. Click the name of the component to see the licensing details.</db:para>
</db:note>
<db:para><db:emphasis role="bold">Third-party Licenses</db:emphasis></db:para>
<db:para>The following table lists parts (modules) of Qt that incorporate code licensed under third-party open-source licenses:</db:para>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-coffee-example.xml" xlink:role="page">Coffee Machine Example</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick application with a state-based custom user interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-tutorials-alarms-example.xml" xlink:role="page">Getting Started Programming with Qt Quick</db:link></db:term>
<db:listitem>
<db:para>A tutorial for Qt Quick based on an alarms application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-calqlatr-example.xml" xlink:role="page">Qt Quick Demo - Calqlatr</db:link></db:term>
<db:listitem>
<db:para>A QML app designed for portrait devices that uses custom components, animated with AnimationController, and JavaScript for the application logic.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-clocks-example.xml" xlink:role="page">Qt Quick Demo - Clocks</db:link></db:term>
<db:listitem>
<db:para>A QML clock application that demonstrates using a ListView type to display data generated by a ListModel and a SpringAnimation type to animate images.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-photosurface-example.xml" xlink:role="page">Qt Quick Demo - Photo Surface</db:link></db:term>
<db:listitem>
<db:para>A QML app for touch devices that uses a Repeater with a FolderListModel to access content in a folder, and a PinchArea that contains a MouseArea to handle pinch gestures on the fetched content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-photoviewer-example.xml" xlink:role="page">Qt Quick Demo - Photo Viewer</db:link></db:term>
<db:listitem>
<db:para>A QML photo viewer that uses XmlListModel and XmlListModelRole custom QML types to download Flickr feeds, and Package to display the photos in different views.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-stocqt-example.xml" xlink:role="page">Qt Quick Demo - StocQt</db:link></db:term>
<db:listitem>
<db:para>A configurable stock chart for the NASDAQ-100.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="qt-assistant-manual">
<db:title>Qt Assistant Manual</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtassistant-remotecontrol-example.xml" xlink:role="page">Remote Control Example</db:link></db:term>
<db:listitem>
<db:para>Using and controlling Qt Assistant as a help viewer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtassistant-simpletextviewer-example.xml" xlink:role="page">Simple Text Viewer Example</db:link></db:term>
<db:listitem>
<db:para>Using Qt Assistant as a customized help viewer for your application.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-concurrent">
<db:title>Qt Concurrent</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtconcurrent-imagescaling-example.xml" xlink:role="page">Image Scaling Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to asynchronously download and scale images.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtconcurrent-map-example.xml" xlink:role="page">Map Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to scale images synchronously.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtconcurrent-progressdialog-example.xml" xlink:role="page">QtConcurrent Progress Dialog Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to monitor the progress of the active processes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtconcurrent-wordcount-example.xml" xlink:role="page">QtConcurrent Word Count Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use the map-reduce algorithm.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtconcurrent-runfunction-example.xml" xlink:role="page">Run Function Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to run standard functions concurrently.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-core">
<db:title>Qt Core</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-tools-contiguouscache-example.xml" xlink:role="page">Contiguous Cache Example</db:link></db:term>
<db:listitem>
<db:para>The Contiguous Cache example shows how to use QContiguousCache to manage memory usage for very large models. In some environments memory is limited and, even when it isn't, users still dislike an application using excessive memory. Using QContiguousCache to manage a list, rather than loading the entire list into memory, allows the application to limit the amount of memory it uses, regardless of the size of the data set it accesses.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-tools-customtype-example.xml" xlink:role="page">Custom Type Example</db:link></db:term>
<db:listitem>
<db:para>The Custom Type example shows how to integrate a custom type into Qt's meta-object system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-serialization-savegame-example.xml" xlink:role="page">JSON Save Game Example</db:link></db:term>
<db:listitem>
<db:para>The JSON Save Game example demonstrates how to save and load a small game using QJsonDocument, QJsonObject and QJsonArray.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-ipc-localfortuneclient-example.xml" xlink:role="page">Local Fortune Client Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates using QLocalSocket for a simple local service client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-ipc-localfortuneserver-example.xml" xlink:role="page">Local Fortune Server Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates using QLocalServer and QLocalSocket for serving a simple local service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-mimetypes-mimetypebrowser-example.xml" xlink:role="page">MIME Type Browser Example</db:link></db:term>
<db:listitem>
<db:para>Shows the hierarchy of MIME types and can be used to determine the MIME type of a file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-mandelbrot-example.xml" xlink:role="page">Mandelbrot Example</db:link></db:term>
<db:listitem>
<db:para>The Mandelbrot example demonstrates multi-thread programming using Qt. It shows how to use a worker thread to perform heavy computations without blocking the main thread's event loop.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-queuedcustomtype-example.xml" xlink:role="page">Queued Custom Type Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates multi-thread programming using Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-semaphores-example.xml" xlink:role="page">Semaphores Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates multi-thread programming using Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-ipc-sharedmemory-example.xml" xlink:role="page">Shared Memory Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates doing inter-process communication using shared memory with the QSharedMemory class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-waitconditions-example.xml" xlink:role="page">Wait Conditions Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates multi-thread programming using Qt.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-d-bus">
<db:title>Qt D-Bus</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtdbus-chat-example.xml" xlink:role="page">D-Bus Chat Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates communication among instances of an application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdbus-complexpingpong-example.xml" xlink:role="page">D-Bus Complex Ping Pong Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates usage of the Qt D-Bus typesystem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdbus-listnames-example.xml" xlink:role="page">D-Bus List Names Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to access the D-Bus bus daemon service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdbus-pingpong-example.xml" xlink:role="page">D-Bus Ping Pong Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates a simple message system using D-Bus.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdbus-remotecontrolledcar-example.xml" xlink:role="page">D-Bus Remote Controlled Car Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to use Qt D-Bus to control a car from another application.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-designer-manual">
<db:title>Qt Designer Manual</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtdesigner-calculatorbuilder-example.xml" xlink:role="page">Calculator Builder Example</db:link></db:term>
<db:listitem>
<db:para>Creating a user interface from a Qt Designer form at run-time.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdesigner-calculatorform-example.xml" xlink:role="page">Calculator Form Example</db:link></db:term>
<db:listitem>
<db:para>Using a form created with Qt Designer in an application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdesigner-containerextension-example.xml" xlink:role="page">Container Extension Example</db:link></db:term>
<db:listitem>
<db:para>Creating a custom multi-page plugin for Qt Designer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdesigner-customwidgetplugin-example.xml" xlink:role="page">Custom Widget Plugin Example</db:link></db:term>
<db:listitem>
<db:para>Creating a custom widget plugin for Qt Designer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdesigner-taskmenuextension-example.xml" xlink:role="page">Task Menu Extension Example</db:link></db:term>
<db:listitem>
<db:para>Creating a custom widget plugin for Qt Designer and providing custom task menu entries that are associated with the plugin.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdesigner-worldtimeclockbuilder-example.xml" xlink:role="page">World Time Clock Builder Example</db:link></db:term>
<db:listitem>
<db:para>Creating forms with Qt Designer that contain custom widgets that can be dynamically generated at run-time.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdesigner-worldtimeclockplugin-example.xml" xlink:role="page">World Time Clock Plugin Example</db:link></db:term>
<db:listitem>
<db:para>Creating a custom widget plugin for Qt Designer that uses signals and slots.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-gui">
<db:title>Qt GUI</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtgui-analogclock-example.xml" xlink:role="page">Analog Clock Window Example</db:link></db:term>
<db:listitem>
<db:para>The Analog Clock Window example shows how to draw the contents of a custom window.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgui-hellovulkancubes-example.xml" xlink:role="page">Hello Vulkan Cubes Example</db:link></db:term>
<db:listitem>
<db:para>Shows the basics of using QVulkanWindow.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgui-hellovulkantexture-example.xml" xlink:role="page">Hello Vulkan Texture Vulkan Example</db:link></db:term>
<db:listitem>
<db:para>Shows the basics of rendering with textures in a QVulkanWindow.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgui-hellovulkantriangle-example.xml" xlink:role="page">Hello Vulkan Triangle Example</db:link></db:term>
<db:listitem>
<db:para>Shows the basics of rendering with QVulkanWindow and the Vulkan API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgui-hellovulkanwidget-example.xml" xlink:role="page">Hello Vulkan Widget Example</db:link></db:term>
<db:listitem>
<db:para>Shows the usage of QVulkanWindow in QWidget applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgui-hellovulkanwindow-example.xml" xlink:role="page">Hello Vulkan Window Example</db:link></db:term>
<db:listitem>
<db:para>Shows the basics of using QVulkanWindow.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgui-rasterwindow-example.xml" xlink:role="page">Raster Window Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a minimal QWindow based application using QPainter for rendering.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-help">
<db:title>Qt Help</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qthelp-contextsensitivehelp-example.xml" xlink:role="page">Context-Sensitive Help Example</db:link></db:term>
<db:listitem>
<db:para>Using the QHelpEngineCore class to implement context-sensitive help for applications.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-linguist-manual">
<db:title>Qt Linguist Manual</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtlinguist-arrowpad-example.xml" xlink:role="page">Arrow Pad Example</db:link></db:term>
<db:listitem>
<db:para>Understanding the Qt Linguist contexts concept and using two or more languages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlinguist-hellotr-example.xml" xlink:role="page">Hello tr() Example</db:link></db:term>
<db:listitem>
<db:para>Translating a small Hello World program to Latin.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlinguist-trollprint-example.xml" xlink:role="page">Troll Print Example</db:link></db:term>
<db:listitem>
<db:para>Updating translations for later releases.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-network">
<db:title>Qt Network</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-blockingfortuneclient-example.xml" xlink:role="page">Blocking Fortune Client Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to create a client for a network service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-broadcastreceiver-example.xml" xlink:role="page">Broadcast Receiver Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to receive information broadcasted over a local network.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-broadcastsender-example.xml" xlink:role="page">Broadcast Sender Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to broadcast information to multiple clients on a local network.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-secureudpclient-example.xml" xlink:role="page">DTLS client</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates how to implement client-side DTLS connections.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-secureudpserver-example.xml" xlink:role="page">DTLS server</db:link></db:term>
<db:listitem>
<db:para>This examples demonstrates how to implement a simple DTLS server.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-fortuneclient-example.xml" xlink:role="page">Fortune Client Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to create a client for a network service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-fortuneserver-example.xml" xlink:role="page">Fortune Server Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to create a server for a network service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-googlesuggest-example.xml" xlink:role="page">Google Suggest Example</db:link></db:term>
<db:listitem>
<db:para>Obtains the list of search recommendations by the Google search engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-http-example.xml" xlink:role="page">HTTP Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates a simple HTTP client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-loopback-example.xml" xlink:role="page">Loopback Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the client-server communication on a local host.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-multicastreceiver-example.xml" xlink:role="page">Multicast Receiver Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to receive information sent to a multicast group.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-multicastsender-example.xml" xlink:role="page">Multicast Sender Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to send messages to a multicast group.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-network-chat-example.xml" xlink:role="page">Network Chat Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates a stateful peer-to-peer Chat client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-download-example.xml" xlink:role="page">Network Download Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use networking APIs for multiple downloads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-downloadmanager-example.xml" xlink:role="page">Network Download Manager Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use the networking APIs for multiple downloads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-securesocketclient-example.xml" xlink:role="page">Secure Socket Client Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to communicate over an encrypted (SSL) connection.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-threadedfortuneserver-example.xml" xlink:role="page">Threaded Fortune Server Example</db:link></db:term>
<db:listitem>
<db:para>The Threaded Fortune Server example shows how to create a server for a simple network service that uses threads to handle requests from different clients. It is intended to be run alongside the Fortune Client example.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-torrent-example.xml" xlink:role="page">Torrent Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates complex TCP/IP operations.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-opengl">
<db:title>Qt OpenGL</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-2dpainting-example.xml" xlink:role="page">2D Painting Example</db:link></db:term>
<db:listitem>
<db:para>The 2D Painting example shows how QPainter and QOpenGLWidget can be used together to display accelerated 2D graphics on supported hardware.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-cube-example.xml" xlink:role="page">Cube OpenGL ES 2.0 example</db:link></db:term>
<db:listitem>
<db:para>The Cube OpenGL ES 2.0 example shows how to write mouse rotateable textured 3D cube using OpenGL ES 2.0 with Qt. It shows how to handle polygon geometries efficiently and how to write simple vertex and fragment shader for programmable graphics pipeline. In addition it shows how to use quaternions for representing 3D object orientation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-hellogl2-example.xml" xlink:role="page">Hello GL2 Example</db:link></db:term>
<db:listitem>
<db:para>The Hello GL2 example demonstrates the basic use of the OpenGL-related classes provided with Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-hellogles3-example.xml" xlink:role="page">Hello GLES3 Example</db:link></db:term>
<db:listitem>
<db:para>The Hello GLES3 example demonstrates easy, cross-platform usage of OpenGL ES 3.0 functions via QOpenGLExtraFunctions in an application that works identically on desktop platforms with OpenGL 3.3 and mobile/embedded devices with OpenGL ES 3.0.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-openglwindow-example.xml" xlink:role="page">OpenGL Window Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a minimal QWindow based application for the purpose of using OpenGL.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-textures-example.xml" xlink:role="page">Textures Example</db:link></db:term>
<db:listitem>
<db:para>The Textures example demonstrates the use of Qt's image classes as textures in applications that use both OpenGL and Qt to display graphics.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-qml">
<db:title>Qt QML</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-networkaccessmanagerfactory-example.xml" xlink:role="page">C++ Extensions: Network Access Manager Factory Example</db:link></db:term>
<db:listitem>
<db:para>Implements a custom network access manager for the QML engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-referenceexamples-adding-example.xml" xlink:role="page">Extending QML - Adding Types Example</db:link></db:term>
<db:listitem>
<db:para>Exporting C++ Classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-referenceexamples-attached-example.xml" xlink:role="page">Extending QML - Attached Properties Example</db:link></db:term>
<db:listitem>
<db:para>Attached Properties.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-referenceexamples-binding-example.xml" xlink:role="page">Extending QML - Binding Example</db:link></db:term>
<db:listitem>
<db:para>Binding.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-referenceexamples-default-example.xml" xlink:role="page">Extending QML - Default Property Example</db:link></db:term>
<db:listitem>
<db:para>Default Property.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-referenceexamples-extended-example.xml" xlink:role="page">Extending QML - Extension Objects Example</db:link></db:term>
<db:listitem>
<db:para>Extension Objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-referenceexamples-grouped-example.xml" xlink:role="page">Extending QML - Grouped Properties Example</db:link></db:term>
<db:listitem>
<db:para>Grouped Properties.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-referenceexamples-coercion-example.xml" xlink:role="page">Extending QML - Inheritance and Coercion Example</db:link></db:term>
<db:listitem>
<db:para>C++ Inheritance and Coercion.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-referenceexamples-methods-example.xml" xlink:role="page">Extending QML - Methods Example</db:link></db:term>
<db:listitem>
<db:para>Methods Support.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-referenceexamples-properties-example.xml" xlink:role="page">Extending QML - Object and List Property Types Example</db:link></db:term>
<db:listitem>
<db:para>Exporting C++ Properties.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-referenceexamples-valuesource-example.xml" xlink:role="page">Extending QML - Property Value Source Example</db:link></db:term>
<db:listitem>
<db:para>Property Value Source.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-referenceexamples-signal-example.xml" xlink:role="page">Extending QML - Signal Support Example</db:link></db:term>
<db:listitem>
<db:para>Signal Support.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-dynamicscene-example.xml" xlink:role="page">QML Example - Dynamic Scene</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates creating components dynamically.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-qml-i18n-example.xml" xlink:role="page">QML Examples - Internationalization</db:link></db:term>
<db:listitem>
<db:para>This is an internationalization example.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-qmlextensionplugins-example.xml" xlink:role="page">QML Plugin Example</db:link></db:term>
<db:listitem>
<db:para>This example creates a C++ plugin extension by subclassing QQmlEngineExtensionPlugin.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-xmlhttprequest-example.xml" xlink:role="page">Qt Quick Examples - XMLHttpRequest</db:link></db:term>
<db:listitem>
<db:para>This is a collection of XMLHttpRequest examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-tutorials-extending-qml-example.xml" xlink:role="page">Writing QML Extensions with C++</db:link></db:term>
<db:listitem>
<db:para>Tutorial about extending QML with Qt C++.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-quick">
<db:title>Qt Quick</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-imageprovider-example.xml" xlink:role="page">C++ Extensions: Image Provider Example</db:link></db:term>
<db:listitem>
<db:para>How to load images in QML with QQuickImageProvider.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-imageresponseprovider-example.xml" xlink:role="page">C++ Extensions: Image Response Provider Example</db:link></db:term>
<db:listitem>
<db:para>How to load images asynchronously in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-models-abstractitemmodel-example.xml" xlink:role="page">Models and Views: AbstractItemModel Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to use a QAbstractItemModel subclass as a model in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-models-objectlistmodel-example.xml" xlink:role="page">Models and Views: Object ListModel Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to use a QList&lt;QObject*&gt; as a model in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-models-stringlistmodel-example.xml" xlink:role="page">Models and Views: String ListModel Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to use a QStringList as a model in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-samegame-samegame1-example.xml" xlink:role="page">QML Advanced Tutorial 1 - Creating the Game Canvas and Blocks</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-samegame-samegame2-example.xml" xlink:role="page">QML Advanced Tutorial 2 - Populating the Game Canvas</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-samegame-samegame3-example.xml" xlink:role="page">QML Advanced Tutorial 3 - Implementing the Game Logic</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-samegame-samegame4-example.xml" xlink:role="page">QML Advanced Tutorial 4 - Finishing Touches</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-dynamicview-dynamicview1-example.xml" xlink:role="page">QML Dynamic View Ordering Tutorial 1 - A Simple ListView and Delegate</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-dynamicview-dynamicview2-example.xml" xlink:role="page">QML Dynamic View Ordering Tutorial 2 - Dragging View Items</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-dynamicview-dynamicview3-example.xml" xlink:role="page">QML Dynamic View Ordering Tutorial 3 - Moving Dragged Items</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-dynamicview-dynamicview4-example.xml" xlink:role="page">QML Dynamic View Ordering Tutorial 4 - Sorting Items</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-rendercontrol-rendercontrol-d3d11-example.xml" xlink:role="page">QQuickRenderControl D3D11 Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to render a Qt Quick scene into a texture that is then used by a non-Quick based Direct3D 11 renderer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-rendercontrol-rendercontrol-opengl-example.xml" xlink:role="page">QQuickRenderControl OpenGL Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to render a Qt Quick scene into a texture that is then used by a non-Quick based OpenGL renderer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-quick-accessibility-example.xml" xlink:role="page">Qt Quick Examples - Accessibility</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates the implementation of accessible buttons.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-animation-example.xml" xlink:role="page">Qt Quick Examples - Animation</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML Animation examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-canvas-example.xml" xlink:role="page">Qt Quick Examples - Canvas</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML Canvas examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-draganddrop-example.xml" xlink:role="page">Qt Quick Examples - Drag and Drop</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML drag and drop examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-imageelements-example.xml" xlink:role="page">Qt Quick Examples - Image Elements</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML examples relating to image types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-keyinteraction-example.xml" xlink:role="page">Qt Quick Examples - Key Interaction</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML keyboard interaction examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-localstorage-example.xml" xlink:role="page">Qt Quick Examples - Local Storage</db:link></db:term>
<db:listitem>
<db:para>A collection of QML local storage examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-mousearea-example.xml" xlink:role="page">Qt Quick Examples - MouseArea</db:link></db:term>
<db:listitem>
<db:para>This is an example of the MouseArea type in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-positioners-example.xml" xlink:role="page">Qt Quick Examples - Positioners</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML Positioner examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-righttoleft-example.xml" xlink:role="page">Qt Quick Examples - Right to Left</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML Right to Left examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-shadereffects-example.xml" xlink:role="page">Qt Quick Examples - Shader Effects</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick example demonstrating the use of shader effects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-shapes-example.xml" xlink:role="page">Qt Quick Examples - Shapes</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick example demonstrating the use of shape items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-text-example.xml" xlink:role="page">Qt Quick Examples - Text</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML examples relating to text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-threading-example.xml" xlink:role="page">Qt Quick Examples - Threading</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML multithreading examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-touchinteraction-example.xml" xlink:role="page">Qt Quick Examples - Touch Interaction</db:link></db:term>
<db:listitem>
<db:para>A collection of QML Touch Interaction examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-views-example.xml" xlink:role="page">Qt Quick Examples - Views</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML model-view examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-window-example.xml" xlink:role="page">Qt Quick Examples - Window and Screen</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates the Window and Screen types in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-externaldraganddrop-example.xml" xlink:role="page">Qt Quick Examples - externaldraganddrop</db:link></db:term>
<db:listitem>
<db:para>This is an example of drag-and-drop among QML applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-layouts-example.xml" xlink:role="page">Qt Quick Layouts - Basic Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use layout types to arrange a UI.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-particles-affectors-example.xml" xlink:role="page">Qt Quick Particles Examples - Affectors</db:link></db:term>
<db:listitem>
<db:para>This is a collection of examples using Affectors in the QML particle system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-particles-emitters-example.xml" xlink:role="page">Qt Quick Particles Examples - Emitters</db:link></db:term>
<db:listitem>
<db:para>This is a collection of examples using Emitters in the QML particle system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-particles-imageparticle-example.xml" xlink:role="page">Qt Quick Particles Examples - Image Particles</db:link></db:term>
<db:listitem>
<db:para>This is a collection of examples using Affectors in the QML particle system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-particles-system-example.xml" xlink:role="page">Qt Quick Particles Examples - System</db:link></db:term>
<db:listitem>
<db:para>This is a collection of examples using Affectors in the QML particle system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tableview-gameoflife-example.xml" xlink:role="page">Qt Quick TableView examples - Conway’s Game of Life</db:link></db:term>
<db:listitem>
<db:para>The Conway’s Game of Life example shows how the QML TableView type can be used to display a C++ model that the user can pan around.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tableview-pixelator-example.xml" xlink:role="page">Qt Quick TableViews examples - Pixelator</db:link></db:term>
<db:listitem>
<db:para>The Pixelator example shows how a QML TableView and a delegate can be used for custom table models.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-quickwidgets-quickwidget-example.xml" xlink:role="page">Qt Quick Widgets Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to mix QML with a Qt Widgets application using the QQuickWidget class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-customgeometry-example.xml" xlink:role="page">Scene Graph - Custom Geometry</db:link></db:term>
<db:listitem>
<db:para>Shows how to implement a custom geometry in the Qt Quick Scene Graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-custommaterial-example.xml" xlink:role="page">Scene Graph - Custom Material</db:link></db:term>
<db:listitem>
<db:para>Shows how to implement a custom material in the Qt Quick Scene Graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-d3d11underqml-example.xml" xlink:role="page">Scene Graph - Direct3D 11 Under QML</db:link></db:term>
<db:listitem>
<db:para>Shows how to render directly with Direct3D 11 under a Qt Quick scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-graph-example.xml" xlink:role="page">Scene Graph - Graph</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how one can combine custom materials and geometries under a single QQuickItem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-metaltextureimport-example.xml" xlink:role="page">Scene Graph - Metal Texture Import</db:link></db:term>
<db:listitem>
<db:para>Shows how to use a texture created directly with Metal.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-metalunderqml-example.xml" xlink:role="page">Scene Graph - Metal Under QML</db:link></db:term>
<db:listitem>
<db:para>Shows how to render directly with Metal under a Qt Quick scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-openglunderqml-example.xml" xlink:role="page">Scene Graph - OpenGL Under QML</db:link></db:term>
<db:listitem>
<db:para>Shows how to render OpenGL under a Qt Quick scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-customitems-painteditem-example.xml" xlink:role="page">Scene Graph - Painted Item</db:link></db:term>
<db:listitem>
<db:para>Shows how to implement QPainter-based custom scenegraph items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-fboitem-example.xml" xlink:role="page">Scene Graph - Rendering FBOs</db:link></db:term>
<db:listitem>
<db:para>Shows how to use FramebufferObjects with Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-twotextureproviders-example.xml" xlink:role="page">Scene Graph - Two Texture Providers</db:link></db:term>
<db:listitem>
<db:para>Shows how to combine two textures from two texture providers in a custom scene graph node.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-vulkantextureimport-example.xml" xlink:role="page">Scene Graph - Vulkan Texture Import</db:link></db:term>
<db:listitem>
<db:para>Shows how to use a texture created directly with use a texture created directly withulkan.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-vulkanunderqml-example.xml" xlink:role="page">Scene Graph - Vulkan Under QML</db:link></db:term>
<db:listitem>
<db:para>Shows how to render directly with vulkan under a Qt Quick scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-customitems-tabwidget-example.xml" xlink:role="page">TabWidget Example</db:link></db:term>
<db:listitem>
<db:para>The TabWidget example shows how to create a tabwidget using property aliases and QML Object default properties.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-threading-threadedlistmodel-example.xml" xlink:role="page">Threaded ListModel Example</db:link></db:term>
<db:listitem>
<db:para>The Threaded ListModel example shows how to use a ListModel from multiple threads using WorkerScript.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-customitems-dialcontrol-example.xml" xlink:role="page">UI Components: Dial Control Example</db:link></db:term>
<db:listitem>
<db:para>The Dial Control Example shows how to create a speedometer-type dial.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-customitems-flipable-example.xml" xlink:role="page">UI Components: Flipable Example</db:link></db:term>
<db:listitem>
<db:para>The Flipable Example shows an item that flips whenever clicked, rotating around the y-axis.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-customitems-scrollbar-example.xml" xlink:role="page">UI Components: Scroll Bar Example</db:link></db:term>
<db:listitem>
<db:para>The Scroll Bar Example shows how to use scroll bars on a flickable element.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-quick-controls">
<db:title>Qt Quick Controls</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-chattutorial-example.xml" xlink:role="page">Qt Quick Controls - Chat Tutorial</db:link></db:term>
<db:listitem>
<db:para>Tutorial about writing a basic chat client using Qt Quick Controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-contactlist-example.xml" xlink:role="page">Qt Quick Controls - Contact List</db:link></db:term>
<db:listitem>
<db:para>A QML app using Qt Quick Controls and a C++ class that implements a simple contact list.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-flatstyle-example.xml" xlink:role="page">Qt Quick Controls - Flat Style</db:link></db:term>
<db:listitem>
<db:para>A QML app using Qt Quick Controls and a QML plugin with customized controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-gallery-example.xml" xlink:role="page">Qt Quick Controls - Gallery</db:link></db:term>
<db:listitem>
<db:para>A gallery of controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-imagine-automotive-example.xml" xlink:role="page">Qt Quick Controls - Imagine Style Example: Automotive</db:link></db:term>
<db:listitem>
<db:para>An automotive user interface using custom Imagine style assets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-imagine-musicplayer-example.xml" xlink:role="page">Qt Quick Controls - Imagine Style Example: Music Player</db:link></db:term>
<db:listitem>
<db:para>An audio player user interface using custom Imagine style assets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-sidepanel-example.xml" xlink:role="page">Qt Quick Controls - Side Panel</db:link></db:term>
<db:listitem>
<db:para>A persistent side panel with Drawer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-swipetoremove-example.xml" xlink:role="page">Qt Quick Controls - Swipe to Remove</db:link></db:term>
<db:listitem>
<db:para>Demonstrates removal of list items by swipe gesture.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-texteditor-example.xml" xlink:role="page">Qt Quick Controls - Text Editor</db:link></db:term>
<db:listitem>
<db:para>A QML app using Qt Quick Controls and a C++ class to provide a fully-functional rich-text editor application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-wearable-example.xml" xlink:role="page">Qt Quick Controls - Wearable Demo</db:link></db:term>
<db:listitem>
<db:para>Demonstrates an application launcher designed for wearable devices.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-sql">
<db:title>Qt SQL</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-books-example.xml" xlink:role="page">Books</db:link></db:term>
<db:listitem>
<db:para>Shows how to use Qt SQL classes with a model/view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-cachedtable-example.xml" xlink:role="page">Cached Table Example</db:link></db:term>
<db:listitem>
<db:para>The Cached Table example shows how a table view can be used to access a database, caching any changes to the data until the user explicitly submits them using a push button.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-drilldown-example.xml" xlink:role="page">Drill Down Example</db:link></db:term>
<db:listitem>
<db:para>The Drill Down example shows how to read data from a database as well as submit changes, using the QSqlRelationalTableModel and QDataWidgetMapper classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-masterdetail-example.xml" xlink:role="page">Master Detail Example</db:link></db:term>
<db:listitem>
<db:para>The Master Detail Example shows how to present data from different data sources in the same application. The album titles, and the corresponding artists and release dates, are kept in a database, while each album's tracks are stored in an XML file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-querymodel-example.xml" xlink:role="page">Query Model Example</db:link></db:term>
<db:listitem>
<db:para>The Query Model example shows how to make customized versions of data obtained from a SQL query, using a model that encapsulates the query and table views to display the results.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-relationaltablemodel-example.xml" xlink:role="page">Relational Table Model Example</db:link></db:term>
<db:listitem>
<db:para>The Relational Table Model example shows how to use table views with a relational model to visualize the relations between items in a database.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-sqlbrowser-example.xml" xlink:role="page">SQL Browser</db:link></db:term>
<db:listitem>
<db:para>The SQL Browser example shows how a data browser can be used to visualize the results of SQL statements on a live database.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-sqlwidgetmapper-example.xml" xlink:role="page">SQL Widget Mapper Example</db:link></db:term>
<db:listitem>
<db:para>The SQL Widget Mapper example shows how to use a map information from a database to widgets on a form.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-tablemodel-example.xml" xlink:role="page">Table Model Example</db:link></db:term>
<db:listitem>
<db:para>The Table Model example shows how to use a specialized SQL table model with table views to edit information in a database.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-svg">
<db:title>Qt SVG</db:title>
<db:itemizedlist role="annotatedattributions">
<db:listitem>
<db:para><db:link xlink:href="qtsvg-svggenerator-example.xml" xlink:role="page">SVG Generator Example</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtsvg-svgviewer-example.xml" xlink:role="page">SVG Viewer Example</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtsvg-richtext-textobject-example.xml" xlink:role="page">Text Object Example</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qt-test">
<db:title>Qt Test</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qttestlib-tutorial1-example.xml" xlink:role="page">Chapter 1: Writing a Unit Test</db:link></db:term>
<db:listitem>
<db:para>How to write a unit test.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qttestlib-tutorial2-example.xml" xlink:role="page">Chapter 2: Data Driven Testing</db:link></db:term>
<db:listitem>
<db:para>How to create data driven tests.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qttestlib-tutorial3-example.xml" xlink:role="page">Chapter 3: Simulating GUI Events</db:link></db:term>
<db:listitem>
<db:para>Howe to simulate GUI events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qttestlib-tutorial4-example.xml" xlink:role="page">Chapter 4: Replaying GUI Events</db:link></db:term>
<db:listitem>
<db:para>How to replay GUI events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qttestlib-tutorial5-example.xml" xlink:role="page">Chapter 5: Writing a Benchmark</db:link></db:term>
<db:listitem>
<db:para>How to write a benchmark.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-ui-tools">
<db:title>Qt UI Tools</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtuitools-multipleinheritance-example.xml" xlink:role="page">Multiple Inheritance Example</db:link></db:term>
<db:listitem>
<db:para>Using a form created with Qt Designer in an application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtuitools-textfinder-example.xml" xlink:role="page">Text Finder Example</db:link></db:term>
<db:listitem>
<db:para>Dynamically loading .ui files using QUiLoader.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-wayland-compositor">
<db:title>Qt Wayland Compositor</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-ivi-compositor-example.xml" xlink:role="page">Qt Wayland Compositor Examples - IVI Compositor</db:link></db:term>
<db:listitem>
<db:para>IVI Compositor is an example that demonstrates how to use the IviApplication extension.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-minimal-qml-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Minimal QML</db:link></db:term>
<db:listitem>
<db:para>Minimal QML is a simple example that demonstrates how to write a Wayland compositor in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-multi-output-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Multi Output</db:link></db:term>
<db:listitem>
<db:para>Multi Output is an example that demonstrates a compositor with multiple outputs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-multi-screen-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Multi Screen</db:link></db:term>
<db:listitem>
<db:para>Multi Screen is a desktop-style Wayland compositor for multiple screens.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-overview-compositor-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Overview Compositor</db:link></db:term>
<db:listitem>
<db:para>Overview Compositor shows how to switch between clients in a grid.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-pure-qml-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Pure QML</db:link></db:term>
<db:listitem>
<db:para>Pure QML is an example that demonstrates how to write a Wayland compositor in pure QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-server-side-decoration-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Sever Side Decoration Compositor</db:link></db:term>
<db:listitem>
<db:para>Server Side Decoration Compositor is a simple example that demonstrates server side window decorations on xdg-shell.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-spanning-screens-example.xml" xlink:role="page">Qt Wayland Compositor Examples - Spanning Screens</db:link></db:term>
<db:listitem>
<db:para>Spanning Screens is an example that demonstrates how to let Wayland clients span multiple screens.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-widgets">
<db:title>Qt Widgets</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-chip-example.xml" xlink:role="page">40000 Chips</db:link></db:term>
<db:listitem>
<db:para>Visualizes a huge graphic view scene with 40000 chip items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-addressbook-example.xml" xlink:role="page">Address Book Example</db:link></db:term>
<db:listitem>
<db:para>The address book example shows how to use proxy models to display different views onto data from a single model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-affine-example.xml" xlink:role="page">Affine Transformations</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how affine transformations in QPainter works.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-analogclock-example.xml" xlink:role="page">Analog Clock Example</db:link></db:term>
<db:listitem>
<db:para>The Analog Clock example shows how to draw the contents of a custom widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-anchorlayout-example.xml" xlink:role="page">Anchor Layout Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates anchor layout in a graphics view scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-basicdrawing-example.xml" xlink:role="page">Basic Drawing Example</db:link></db:term>
<db:listitem>
<db:para>The Basic Drawing example shows how to display basic graphics primitives in a variety of styles using the QPainter class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-basicgraphicslayouts-example.xml" xlink:role="page">Basic Graphics Layouts Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to create basic graphics layout.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-layouts-basiclayouts-example.xml" xlink:role="page">Basic Layouts Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to use the standard layout managers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-basicsortfiltermodel-example.xml" xlink:role="page">Basic Sort/Filter Model Example</db:link></db:term>
<db:listitem>
<db:para>The Basic Sort/Filter Model example illustrates how to use QSortFilterProxyModel to perform basic sorting and filtering.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-effects-blurpicker-example.xml" xlink:role="page">Blur Picker Effect Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to apply graphical effects on items in the view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-layouts-borderlayout-example.xml" xlink:role="page">Border Layout Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to arrange child widgets along a border.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-calculator-example.xml" xlink:role="page">Calculator Example</db:link></db:term>
<db:listitem>
<db:para>The example shows how to use signals and slots to implement the functionality of a calculator widget, and how to use QGridLayout to place child widgets in a grid.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-richtext-calendar-example.xml" xlink:role="page">Calendar Example</db:link></db:term>
<db:listitem>
<db:para>The Calendar example shows how to create rich text content and display it using a rich text editor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-calendarwidget-example.xml" xlink:role="page">Calendar Widget Example</db:link></db:term>
<db:listitem>
<db:para>The Calendar Widget example shows use of QCalendarWidget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-charactermap-example.xml" xlink:role="page">Character Map Example</db:link></db:term>
<db:listitem>
<db:para>The Character Map example shows how to create a custom widget that can both display its own content and respond to user input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-chart-example.xml" xlink:role="page">Chart Example</db:link></db:term>
<db:listitem>
<db:para>The Chart example shows how to create a custom view for the model/view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-classwizard-example.xml" xlink:role="page">Class Wizard Example</db:link></db:term>
<db:listitem>
<db:para>The Class Wizard example shows how to implement linear wizards using QWizard.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-codeeditor-example.xml" xlink:role="page">Code Editor Example</db:link></db:term>
<db:listitem>
<db:para>The Code Editor example shows how to create a simple editor that has line numbers and that highlights the current line.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-collidingmice-example.xml" xlink:role="page">Colliding Mice Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to animate items on a graphics view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-coloreditorfactory-example.xml" xlink:role="page">Color Editor Factory Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create an editor that can be used by a QItemDelegate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-combowidgetmapper-example.xml" xlink:role="page">Combo Widget Mapper Example</db:link></db:term>
<db:listitem>
<db:para>The Combo Widget Mapper example shows how to use a custom delegate to map information from a model to specific widgets on a form.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-completer-example.xml" xlink:role="page">Completer Example</db:link></db:term>
<db:listitem>
<db:para>The Completer example shows how to provide string-completion facilities for an input widget based on data provided by a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-composition-example.xml" xlink:role="page">Composition Modes</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how Composition Modes work in QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-concentriccircles-example.xml" xlink:role="page">Concentric Circles Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the improved quality that antialiasing and floating point precision gives.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-customcompleter-example.xml" xlink:role="page">Custom Completer Example</db:link></db:term>
<db:listitem>
<db:para>The Custom Completer example shows how to provide string-completion facilities for an input widget based on data provided by a model. The completer pops up suggestions for possible words based on the first three characters input by the user and the user's choice of word is inserted into the TextEdit using QTextCursor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-customsortfiltermodel-example.xml" xlink:role="page">Custom Sort/Filter Model Example</db:link></db:term>
<db:listitem>
<db:para>The Custom Sort/Filter Model example illustrates how to subclass QSortFilterProxyModel to perform advanced sorting and filtering.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-diagramscene-example.xml" xlink:role="page">Diagram Scene Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrate how to use the Graphics View framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-digitalclock-example.xml" xlink:role="page">Digital Clock Example</db:link></db:term>
<db:listitem>
<db:para>The Digital Clock example shows how to use QLCDNumber to display a number with LCD-like digits.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-dirview-example.xml" xlink:role="page">Dir View Example</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates the usage of a tree view, and smooth flicking on a touchscreen.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-mainwindows-dockwidgets-example.xml" xlink:role="page">Dock Widgets Example</db:link></db:term>
<db:listitem>
<db:para>The Dock Widgets example shows how to add dock windows to an application. It also shows how to use Qt's rich text engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-draganddrop-puzzle-example.xml" xlink:role="page">Drag and Drop Puzzle Example</db:link></db:term>
<db:listitem>
<db:para>The Drag and Drop Puzzle example demonstrates a way of using the drag and drop system with item view widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-dragdroprobot-example.xml" xlink:role="page">Drag and Drop Robot Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to drag and drop items in a graphics view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-draganddrop-draggableicons-example.xml" xlink:role="page">Draggable Icons Example</db:link></db:term>
<db:listitem>
<db:para>The Draggable Icons example shows how to drag and drop image data between widgets in the same application, and between different applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-draganddrop-draggabletext-example.xml" xlink:role="page">Draggable Text Example</db:link></db:term>
<db:listitem>
<db:para>Illustrates how to drag and drop text between widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-draganddrop-dropsite-example.xml" xlink:role="page">Drop Site Example</db:link></db:term>
<db:listitem>
<db:para>The example shows how to distinguish the various MIME formats available in a drag and drop operation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-layouts-dynamiclayouts-example.xml" xlink:role="page">Dynamic Layouts Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to re-orient widgets in running applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-animation-easing-example.xml" xlink:role="page">Easing Curves Example</db:link></db:term>
<db:listitem>
<db:para>The Easing Curves example shows how to use easing curves to control the speed of an animation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-echoplugin-example.xml" xlink:role="page">Echo Plugin Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a Qt plugin.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-editabletreemodel-example.xml" xlink:role="page">Editable Tree Model Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to implement a simple item-based tree model that can be used with other classes the model/view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-elasticnodes-example.xml" xlink:role="page">Elastic Nodes Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to interact with graphical items in a scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-elidedlabel-example.xml" xlink:role="page">Elided Label Example</db:link></db:term>
<db:listitem>
<db:para>This example creates a widget similar to QLabel, that elides the last visible line, if the text is too long to fit the widget's geometry.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-embeddeddialogs-example.xml" xlink:role="page">Embedded Dialogs</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to embed dialogs into a graphics view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-extension-example.xml" xlink:role="page">Extension Example</db:link></db:term>
<db:listitem>
<db:para>The Extension example shows how to add an extension to a QDialog using the QAbstractButton::toggled() signal and the QWidget::setVisible() slot.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-effects-fademessage-example.xml" xlink:role="page">Fade Message Effect Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to apply effects on items in the view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-fetchmore-example.xml" xlink:role="page">Fetch More Example</db:link></db:term>
<db:listitem>
<db:para>The Fetch More example shows how to add items to an item view model on demand.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-findfiles-example.xml" xlink:role="page">Find Files Example</db:link></db:term>
<db:listitem>
<db:para>A dialog for finding files in a specified folder.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-touch-fingerpaint-example.xml" xlink:role="page">Finger Paint Example</db:link></db:term>
<db:listitem>
<db:para>Shows the use of a touchscreen to make a simple painting application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-layouts-flowlayout-example.xml" xlink:role="page">Flow Layout Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to arrange widgets for different window sizes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-fontsampler-example.xml" xlink:role="page">Font Sampler Example</db:link></db:term>
<db:listitem>
<db:para>The Font Sampler example shows how to preview and print multi-page documents.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-draganddrop-fridgemagnets-example.xml" xlink:role="page">Fridge Magnets Example</db:link></db:term>
<db:listitem>
<db:para>The Fridge Magnets example illustrates how to move around several types of MIME-encoded data with drag and drop.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-frozencolumn-example.xml" xlink:role="page">Frozen Column Example</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates how to freeze a column within a QTableView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-notepad-example.xml" xlink:role="page">Getting Started Programming with Qt Widgets</db:link></db:term>
<db:listitem>
<db:para>A tutorial for Qt Widgets based on a notepad application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-gradients-example.xml" xlink:role="page">Gradients</db:link></db:term>
<db:listitem>
<db:para>Shows how gradients can be used with QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-flowlayout-example.xml" xlink:role="page">Graphics View Flow Layout Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates flow layout on a graphics view scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-groupbox-example.xml" xlink:role="page">Group Box Example</db:link></db:term>
<db:listitem>
<db:para>The Group Box example shows how to use the different kinds of group boxes in Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-i18n-example.xml" xlink:role="page">I18N Example</db:link></db:term>
<db:listitem>
<db:para>The Internationalization (I18N) example demonstrates Qt's support for translated text. Developers can write the initial application text in one language, and translations can be provided later without any modifications to the code. It also demonstrates how to detect the system language settings and show the UI in the appropriate language.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-icons-example.xml" xlink:role="page">Icons Example</db:link></db:term>
<db:listitem>
<db:para>The Icons example shows how QIcon can generate pixmaps reflecting an icon's state, mode and size.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-imagecomposition-example.xml" xlink:role="page">Image Composition Example</db:link></db:term>
<db:listitem>
<db:para>Shows how composition modes work in QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-gestures-imagegestures-example.xml" xlink:role="page">Image Gestures Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the use of simple gestures in a widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-imageviewer-example.xml" xlink:role="page">Image Viewer Example</db:link></db:term>
<db:listitem>
<db:para>The example shows how to combine QLabel and QScrollArea to display an image.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-interview-example.xml" xlink:role="page">Interview</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates the usage of the model/view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-puzzle-example.xml" xlink:role="page">Item Views Puzzle Example</db:link></db:term>
<db:listitem>
<db:para>The Puzzle example shows how to enable drag and drop with a custom model to allow items to be transferred between a view and another widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-licensewizard-example.xml" xlink:role="page">License Wizard Example</db:link></db:term>
<db:listitem>
<db:para>The License Wizard example shows how to implement complex wizards in Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-lineedits-example.xml" xlink:role="page">Line Edits Example</db:link></db:term>
<db:listitem>
<db:para>The Line Edits example demonstrates the many ways that QLineEdit can be used, and shows the effects of various properties and validators on the input and output supplied by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-mainwindows-mdi-example.xml" xlink:role="page">MDI Example</db:link></db:term>
<db:listitem>
<db:para>The MDI example shows how to implement a Multiple Document Interface using Qt's QMdiArea class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-mainwindows-mainwindow-example.xml" xlink:role="page">Main Window</db:link></db:term>
<db:listitem>
<db:para>The Main Window example shows Qt's extensive support for tool bars, dock windows, menus, and other standard application features.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-mainwindows-menus-example.xml" xlink:role="page">Menus Example</db:link></db:term>
<db:listitem>
<db:para>The Menus example demonstrates how menus can be used in a main window application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-mousebuttons-example.xml" xlink:role="page">Mouse Button Tester</db:link></db:term>
<db:listitem>
<db:para>The 'Mouse Button Tester' example demonstrates how to reimplement mouse events within a custom class. You can also use this program to verify that Qt is actually receiving mouse events from your mouse.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-movie-example.xml" xlink:role="page">Movie Example</db:link></db:term>
<db:listitem>
<db:para>The Movie example demonstrates how to use QMovie and QLabel to display animations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-richtext-orderform-example.xml" xlink:role="page">Order Form Example</db:link></db:term>
<db:listitem>
<db:para>The Order Form example shows how to generate rich text documents by combining a simple template with data input by the user in a dialog.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-painterpaths-example.xml" xlink:role="page">Painter Paths Example</db:link></db:term>
<db:listitem>
<db:para>The Painter Paths example shows how painter paths can be used to beuild complex shapes for rendering.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-addressbook-part1-example.xml" xlink:role="page">Part 1 - Designing the User Interface</db:link></db:term>
<db:listitem>
<db:para>Describes how to code the user interface of the Address Book Example. This first part covers the design of the basic graphical user interface (GUI) for our address book application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-addressbook-part2-example.xml" xlink:role="page">Part 2 - Adding Addresses</db:link></db:term>
<db:listitem>
<db:para>Describes the code for inserting records in the Address Book Example.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-addressbook-part3-example.xml" xlink:role="page">Part 3 - Navigating between Entries</db:link></db:term>
<db:listitem>
<db:para>Explains the code that enables navigating the contacts.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-addressbook-part4-example.xml" xlink:role="page">Part 4 - Editing and Removing Addresses</db:link></db:term>
<db:listitem>
<db:para>Explains how to add edit and remove functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-addressbook-part5-example.xml" xlink:role="page">Part 5 - Adding a Find Function</db:link></db:term>
<db:listitem>
<db:para>Describes how to add a find function.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-addressbook-part6-example.xml" xlink:role="page">Part 6 - Loading and Saving</db:link></db:term>
<db:listitem>
<db:para>Describes how to add save and load functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-addressbook-part7-example.xml" xlink:role="page">Part 7 - Additional Features</db:link></db:term>
<db:listitem>
<db:para>Describes how to export data in VCard format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-pathstroke-example.xml" xlink:role="page">Path Stroking</db:link></db:term>
<db:listitem>
<db:para>The Path Stroking example shows various types of pens that can be used with QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-touch-pinchzoom-example.xml" xlink:role="page">Pinch Zoom Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to recognize a gesture.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-pixelator-example.xml" xlink:role="page">Pixelator Example</db:link></db:term>
<db:listitem>
<db:para>The Pixelator example shows how delegates can be used to customize the way that items are rendered in standard item views.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-plugandpaint-plugins-basictools-example.xml" xlink:role="page">Plug &amp; Paint Basic Tools Example</db:link></db:term>
<db:listitem>
<db:para>A plugin providing the basic tools for painting functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-plugandpaint-app-example.xml" xlink:role="page">Plug &amp; Paint Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to extend Qt applications using plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-plugandpaint-plugins-extrafilters-example.xml" xlink:role="page">Plug &amp; Paint Extra Filters Example</db:link></db:term>
<db:listitem>
<db:para>A plugin providing the extra filters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-regularexpression-example.xml" xlink:role="page">QRegularExpression Example</db:link></db:term>
<db:listitem>
<db:para>The QRegularExpression example shows how regular expressions in Qt are applied to text by providing an environment in which new regular expressions can be created and tested on custom text strings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-mainwindows-application-example.xml" xlink:role="page">Qt Widgets - Application Example</db:link></db:term>
<db:listitem>
<db:para>The Application example shows how to implement a standard widget application with menus, toolbars, and a status bar. The example itself is a simple text editor program built around QPlainTextEdit.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-mainwindows-sdi-example.xml" xlink:role="page">SDI Example</db:link></db:term>
<db:listitem>
<db:para>The SDI example shows how to create a Single Document Interface. It uses a number of top-level windows to display the contents of different text files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-desktop-screenshot-example.xml" xlink:role="page">Screenshot Example</db:link></db:term>
<db:listitem>
<db:para>The Screenshot example shows how to take a screenshot of the desktop.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-scribble-example.xml" xlink:role="page">Scribble Example</db:link></db:term>
<db:listitem>
<db:para>The Scribble example shows how to reimplement some of QWidget's event handlers to receive the events generated for the application's widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-settingseditor-example.xml" xlink:role="page">Settings Editor Example</db:link></db:term>
<db:listitem>
<db:para>The Settings Editor example shows how Qt's standard settings support is used in an application by providing an editor that enables the user to view the settings for installed applications, and modify those that can be edited.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-shapedclock-example.xml" xlink:role="page">Shaped Clock Example</db:link></db:term>
<db:listitem>
<db:para>The Shaped Clock example shows how to apply a translucent background and a widget mask to a top-level widget to produce a shaped window.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-simpleanchorlayout-example.xml" xlink:role="page">Simple Anchor Layout Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates anchor layout on a graphics view scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-simpledommodel-example.xml" xlink:role="page">Simple DOM Model Example</db:link></db:term>
<db:listitem>
<db:para>The Simple DOM Model example shows how an existing class can be adapted for use with the model/view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-simpletreemodel-example.xml" xlink:role="page">Simple Tree Model Example</db:link></db:term>
<db:listitem>
<db:para>The Simple Tree Model example shows how to use a hierarchical model with Qt's standard view classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-simplewidgetmapper-example.xml" xlink:role="page">Simple Widget Mapper Example</db:link></db:term>
<db:listitem>
<db:para>The Simple Widget Mapper example shows how to use a widget mapper to display data from a model in a collection of widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-sliders-example.xml" xlink:role="page">Sliders Example</db:link></db:term>
<db:listitem>
<db:para>The Sliders example shows how to use the different types of sliders available in Qt: QSlider, QScrollBar and QDial.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-spinboxdelegate-example.xml" xlink:role="page">Spin Box Delegate Example</db:link></db:term>
<db:listitem>
<db:para>The Spin Box Delegate example shows how to create an editor for a custom delegate in the model/view framework by reusing a standard Qt editor widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-spinboxes-example.xml" xlink:role="page">Spin Boxes Example</db:link></db:term>
<db:listitem>
<db:para>The Spin Boxes example shows how to use the many different types of spin boxes available in Qt, from a simple QSpinBox widget to more complex editors like the QDateTimeEdit widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-spreadsheet-example.xml" xlink:role="page">Spreadsheet</db:link></db:term>
<db:listitem>
<db:para>The Spreadsheet example shows how to create a simple spreadsheet application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-standarddialogs-example.xml" xlink:role="page">Standard Dialogs Example</db:link></db:term>
<db:listitem>
<db:para>The Standard Dialogs example shows the standard dialogs that are provided by Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-stardelegate-example.xml" xlink:role="page">Star Delegate Example</db:link></db:term>
<db:listitem>
<db:para>The Star Delegate example shows how to create a delegate that can paint itself and that supports editing.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-styleplugin-example.xml" xlink:role="page">Style Plugin Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a plugin that extends Qt with a new GUI look and feel.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-stylesheet-example.xml" xlink:role="page">Style Sheet Example</db:link></db:term>
<db:listitem>
<db:para>The Style Sheet Example shows how to use style sheets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-styles-example.xml" xlink:role="page">Styles Example</db:link></db:term>
<db:listitem>
<db:para>The Styles example illustrates how to create custom widget drawing styles using Qt, and demonstrates Qt's predefined styles.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-richtext-syntaxhighlighter-example.xml" xlink:role="page">Syntax Highlighter Example</db:link></db:term>
<db:listitem>
<db:para>The Syntax Highlighter example shows how to perform simple syntax highlighting.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-desktop-systray-example.xml" xlink:role="page">System Tray Icon Example</db:link></db:term>
<db:listitem>
<db:para>The System Tray Icon example shows how to add an icon with a menu and popup messages to a desktop environment's system tray.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-tabdialog-example.xml" xlink:role="page">Tab Dialog Example</db:link></db:term>
<db:listitem>
<db:para>The Tab Dialog example shows how to construct a tab dialog using the QTabWidget class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-tablet-example.xml" xlink:role="page">Tablet Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to use a Wacom tablet in Qt applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-tetrix-example.xml" xlink:role="page">Tetrix Example</db:link></db:term>
<db:listitem>
<db:para>The Tetrix example is a Qt version of the classic Tetrix game.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-richtext-textedit-example.xml" xlink:role="page">Text Edit</db:link></db:term>
<db:listitem>
<db:para>The Text Edit example shows Qt's rich text editing facilities in action.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-tooltips-example.xml" xlink:role="page">Tool Tips Example</db:link></db:term>
<db:listitem>
<db:para>The Tool Tips example shows how to provide static and dynamic tool tips for an application's widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-touch-dials-example.xml" xlink:role="page">Touch Dials Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to apply touch to a set of standard Qt widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-touch-knobs-example.xml" xlink:role="page">Touch Knobs Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to create custom controls that accept touch input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-transformations-example.xml" xlink:role="page">Transformations Example</db:link></db:term>
<db:listitem>
<db:para>The Transformations example shows how transformations influence the way that QPainter renders graphics primitives.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-treemodelcompleter-example.xml" xlink:role="page">Tree Model Completer Example</db:link></db:term>
<db:listitem>
<db:para>The Tree Model Completer example shows how to provide completion facilities for a hierarchical model, using a period as the separator to access Child, GrandChild and GrandGrandChild level objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-trivialwizard-example.xml" xlink:role="page">Trivial Wizard Example</db:link></db:term>
<db:listitem>
<db:para>The Trivial Wizard example illustrates how to create a linear three-page registration wizard using three instances of QWizardPage and one instance of QWizard.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-undo-example.xml" xlink:role="page">Undo Framework</db:link></db:term>
<db:listitem>
<db:para>This example shows Qt's undo framework in action.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-undoframework-example.xml" xlink:role="page">Undo Framework Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to implement undo/redo functionality with the Qt undo framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-validators-example.xml" xlink:role="page">Validators Example</db:link></db:term>
<db:listitem>
<db:para>The Validators example shows the signal emission behavior of input validators.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-deform-example.xml" xlink:role="page">Vector Deformation</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to manipulate the elements of a QPainterPath.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-weatheranchorlayout-example.xml" xlink:role="page">Weather Anchor Layout Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates anchor layout on a graphics view scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-gallery-example.xml" xlink:role="page">Widgets Gallery Example</db:link></db:term>
<db:listitem>
<db:para>The Widgets Gallery example shows widgets relevant for designing UIs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-widgets-childwidget-example.xml" xlink:role="page">Widgets Tutorial - Child Widgets</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-widgets-toplevel-example.xml" xlink:role="page">Widgets Tutorial - Creating a Window</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-widgets-nestedlayouts-example.xml" xlink:role="page">Widgets Tutorial - Nested Layouts</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-widgets-windowlayout-example.xml" xlink:role="page">Widgets Tutorial - Using Layouts</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-wiggly-example.xml" xlink:role="page">Wiggly Example</db:link></db:term>
<db:listitem>
<db:para>The Wiggly example shows how to animate a widget using QBasicTimer and timerEvent(). In addition, the example demonstrates how to use QFontMetrics to determine the size of text on screen.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-windowflags-example.xml" xlink:role="page">Window Flags Example</db:link></db:term>
<db:listitem>
<db:para>The Window Flags example shows how to use the window flags available in Qt.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-xml">
<db:title>Qt XML</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtxml-dombookmarks-example.xml" xlink:role="page">DOM Bookmarks Example</db:link></db:term>
<db:listitem>
<db:para>Provides a reader for XML Bookmark Exchange Language files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtxml-streambookmarks-example.xml" xlink:role="page">QXmlStream Bookmarks Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to read and write to XBEL files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtxml-xmlstreamlint-example.xml" xlink:role="page">XML Stream Lint Example</db:link></db:term>
<db:listitem>
<db:para>A commandline tool reading from an input file and writing to the standard output file.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="additional-information"><db:title>Additional Information</db:title><db:para>The following table lists related documents, such as information about Trademarks and other licenses used in parts of Qt.</db:para>
<db:variablelist role="licensing">
<db:varlistentry>
<db:term><db:link xlink:href="android-runtime-licensing-notes.xml" xlink:role="page">Android GNU C++ Run-time Licensing</db:link></db:term>
<db:listitem>
<db:para>Provides additional information about the licensing of run-time dependencies of Qt for Android</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt-attribution-llvm.xml" xlink:role="page">LLVM Attribution</db:link></db:term>
<db:listitem>
<db:para>University of Illinois/NCSA Open Source License, BSD licenses</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="license-changes.xml" xlink:role="page">License Changes</db:link></db:term>
<db:listitem>
<db:para>Information about changes of licenses in Qt and Third Party Modules</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt-attribution-cmake-macros.xml" xlink:role="page">Macros for Building with CMake</db:link></db:term>
<db:listitem>
<db:para>BSD 3-clause &quot;New&quot; or &quot;Revised&quot; License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt-attribution-llvmpipe.xml" xlink:role="page">Mesa llvmpipe</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="pdf-licensing.xml" xlink:role="page">Notes about PDF Licensing</db:link></db:term>
<db:listitem>
<db:para>Details of restrictions on the use of PDF-related trademarks.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtentrypoint.xml" xlink:role="page">The QtEntryPoint Library</db:link></db:term>
<db:listitem>
<db:para>Commercial and BSD 3-clause &quot;New&quot; or &quot;Revised&quot; License.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="trademarks.xml" xlink:role="page">Trademarks</db:link></db:term>
<db:listitem>
<db:para>Information about trademarks owned by The Qt Company and other organizations.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
</db:article>
