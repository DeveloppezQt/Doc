<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Licenses Used in Qt</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Information about other licenses and third-party code used in Qt.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt contains some code that is not provided under the <db:link xlink:href="lgpl.xml">GNU Lesser General Public License (LGPL)</db:link> or the <db:link xlink:href="licensing.xml">Qt Commercial License</db:link>, but rather under specific licenses from the original authors.</db:para>
<db:para>The Qt Company gratefully acknowledges these and other contributions to Qt. We recommend that programs that use Qt also acknowledge these contributions, and quote these license statements in an appendix to the documentation.</db:para>
<db:note>
<db:para>You only need to comply with (and acknowledge) the licenses of the third-party components that you are using with your application. Click the name of the component to see the licensing details.</db:para>
</db:note>
<db:para><db:emphasis role="bold">Third-party Licenses</db:emphasis></db:para>
<db:para>The following table lists parts (modules) of Qt 6.6.3 that incorporate code licensed under third-party open-source licenses:</db:para>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-calqlatr-example.xml" xlink:role="page">Calqlatr</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick app designed for portrait devices that uses custom components, animated with AnimationController, and JavaScript for the application logic.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-coffee-example.xml" xlink:role="page">Coffee Machine</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick application with a state-based custom user interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-dice-example.xml" xlink:role="page">Dice</db:link></db:term>
<db:listitem>
<db:para>A dice throwing application that demonstrates using Qt Quick 3D Physics and Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-documentviewer-example.xml" xlink:role="page">Document Viewer</db:link></db:term>
<db:listitem>
<db:para>A Widgets application to display and print JSON, text, and PDF files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-fx-material-showroom-example.xml" xlink:role="page">FX &amp; Material Showroom</db:link></db:term>
<db:listitem>
<db:para>Demonstrates material and effects capabilities of Qt Quick 3D. This example demonstrates how you can use particle effects and materials in Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-tutorials-alarms-example.xml" xlink:role="page">Getting Started Programming with Qt Quick</db:link></db:term>
<db:listitem>
<db:para>A tutorial for Qt Quick based on an alarms application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-hangman-example.xml" xlink:role="page">In-App purchasing demo</db:link></db:term>
<db:listitem>
<db:para>A complete mobile application that demonstrates purchasing in-app products.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-mediaplayer-example.xml" xlink:role="page">Media Player Example</db:link></db:term>
<db:listitem>
<db:para>Playing audio and video using Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-photosurface-example.xml" xlink:role="page">Photo Surface</db:link></db:term>
<db:listitem>
<db:para>A QML app for touch devices that uses a Repeater with a FolderListModel to access content in a folder, and a PinchHandler to handle pinch gestures on the fetched content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-clocks-example.xml" xlink:role="page">Qt Quick Demo - Clocks</db:link></db:term>
<db:listitem>
<db:para>A QML clock application that demonstrates using a ListView type to display data generated by a ListModel and a SpringAnimation type to animate images.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-colorpaletteclient-example.xml" xlink:role="page">Qt Quick Demo - RESTful API client</db:link></db:term>
<db:listitem>
<db:para>Example of how to create a RESTful API QML client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-rssnews-example.xml" xlink:role="page">Qt Quick Demo - RSS News</db:link></db:term>
<db:listitem>
<db:para>A QML RSS news reader that uses XmlListModel and XmlListModelRole custom QML types to download XML data, ListModel and ListElement to create a category list, and ListView to display the data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-documentviewer-plugins-txtviewer-example.xml" xlink:role="page">Qt Widgets - Text Viewer Plugin Example</db:link></db:term>
<db:listitem>
<db:para>A widget example with menus, toolbars and a status bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-robotarm-example.xml" xlink:role="page">Robot Arm Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to add a C++ backend to a 3D project from Qt Design Studio. This example demonstrates adding a C++ backend to a 3D project created in Qt Design Studio. The example itself consists of an interactive industrial robot arm in a Qt Quick 3D scene. The 2D UI to control the robot arm is implement using Qt Quick Controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-samegame-example.xml" xlink:role="page">Same Game</db:link></db:term>
<db:listitem>
<db:para>A QML implementation of the popular puzzle game by Kuniaki Moribe.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-stocqt-example.xml" xlink:role="page">StocQt</db:link></db:term>
<db:listitem>
<db:para>A configurable stock chart for 100 stocks.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-thermostat-example.xml" xlink:role="page">Thermostat</db:link></db:term>
<db:listitem>
<db:para>A user interface for a home thermostat, implemented in Qt Quick. It demonstrates how to create responsive applications that scale from large desktop displays to mobile and small embedded displays.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdoc-demos-todolist-example.xml" xlink:role="page">To Do List Example</db:link></db:term>
<db:listitem>
<db:para>A QML implementation of to do list application that demonstrates how to create application thats looks native on any platform.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="active-qt">
<db:title>Active Qt</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="activeqt-activeqt-comapp-example.xml" xlink:role="page">COM App Example (ActiveQt)</db:link></db:term>
<db:listitem>
<db:para>The COM App example shows how to use ActiveQt to develop a Qt application that can be automated via COM. Different QObject based classes are exposed as COM objects that communicate with the GUI of the running Qt application. The APIs of those COM objects has been designed to resemble the APIs of standard COM applications; i.e. those from Microsoft Office.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="activeqt-activeqt-qutlook-example.xml" xlink:role="page">Qutlook Example (ActiveQt)</db:link></db:term>
<db:listitem>
<db:para>The Qutlook example demonstrates the use of ActiveQt to automate Outlook. The example makes use of the dumpcpp tool to generate a C++ namespace for the type library describing the Outlook Object Model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="activeqt-activeqt-simple-example.xml" xlink:role="page">Simple Example (ActiveQt)</db:link></db:term>
<db:listitem>
<db:para>The Simple example demonstrates the use of QAxBindable and QAxFactory.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="activeqt-activeqt-wrapper-example.xml" xlink:role="page">Wrapper Example (ActiveQt)</db:link></db:term>
<db:listitem>
<db:para>The Wrapper example demonstrates how to export existing QWidget classes as ActiveX controls, and the use of QAxFactory together with the QAXFACTORY_EXPORT() macro. ActiveX controls in this example are the standard button classes QPushButton, QCheckBox and QRadioButton as provided by Qt.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-3d">
<db:title>Qt 3D</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-basicshapes-cpp-example.xml" xlink:role="page">Qt 3D: Basic Shapes C++ Example</db:link></db:term>
<db:listitem>
<db:para>Shows four basic shapes that Qt 3D offers and sets up a mesh for each of them.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-multiviewport-example.xml" xlink:role="page">Qt 3D: Multi Viewport QML Example</db:link></db:term>
<db:listitem>
<db:para>A QML example that demonstrates rendering a Scenegraph from multiple viewports.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-pbr-materials-example.xml" xlink:role="page">Qt 3D: PBR Materials QML Example</db:link></db:term>
<db:listitem>
<db:para>A QML application that demonstrates using PBR materials.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-simple-cpp-example.xml" xlink:role="page">Qt 3D: Simple C++ Example</db:link></db:term>
<db:listitem>
<db:para>A C++ application that demonstrates how to render a scene in Qt 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-simplecustommaterial-example.xml" xlink:role="page">Qt 3D: Simple Custom Material QML Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates creating a custom material in Qt 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-simple-qml-example.xml" xlink:role="page">Qt 3D: Simple QML Example</db:link></db:term>
<db:listitem>
<db:para>A QML application that demonstrates how to render a scene in Qt 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-wireframe-example.xml" xlink:role="page">Qt 3D: Wireframe QML Example</db:link></db:term>
<db:listitem>
<db:para>A Qt 3D QML application that implements a single-pass wireframe rendering method.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-assistant-manual">
<db:title>Qt Assistant Manual</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtassistant-remotecontrol-example.xml" xlink:role="page">Remote Control Example</db:link></db:term>
<db:listitem>
<db:para>Using and controlling Qt Assistant as a help viewer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtassistant-simpletextviewer-example.xml" xlink:role="page">Simple Text Viewer Example</db:link></db:term>
<db:listitem>
<db:para>Using Qt Assistant as a customized help viewer for your application.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-bluetooth">
<db:title>Qt Bluetooth</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtbluetooth-btchat-example.xml" xlink:role="page">Bluetooth Chat</db:link></db:term>
<db:listitem>
<db:para>Shows communication through Bluetooth using RFCOMM protocol.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtbluetooth-heartrate-game-example.xml" xlink:role="page">Bluetooth Low Energy Heart Rate Game</db:link></db:term>
<db:listitem>
<db:para>A game demonstrating the interaction with a Bluetooth Low Energy Heart Rate device/service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtbluetooth-heartrate-server-example.xml" xlink:role="page">Bluetooth Low Energy Heart Rate Server</db:link></db:term>
<db:listitem>
<db:para>An example demonstrating how to set up and advertise a GATT service. The example demonstrates the use of the Qt Bluetooth Low Energy classes related to peripheral (slave) functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtbluetooth-lowenergyscanner-example.xml" xlink:role="page">Bluetooth Low Energy Scanner</db:link></db:term>
<db:listitem>
<db:para>An application designed to browse the content of Bluetooth Low Energy peripheral devices. The example demonstrates the use of all Qt Bluetooth Low Energy classes.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-charts">
<db:title>Qt Charts</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-audio-example.xml" xlink:role="page">Audio Samples vs Sound Level</db:link></db:term>
<db:listitem>
<db:para>This example shows the drawing of microphone samples vs audio level.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-qmlchartsgallery-example.xml" xlink:role="page">Charts with QML Gallery</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use the different chart types by using qml.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-chartsgallery-example.xml" xlink:role="page">Charts with Widgets Gallery</db:link></db:term>
<db:listitem>
<db:para>An application that demonstrates the Qt Charts Widgets API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-openglseries-example.xml" xlink:role="page">OpenGL Accelerated Series Example</db:link></db:term>
<db:listitem>
<db:para>The example shows how to enable OpenGL acceleration for QLineSeries and QScatterSeries.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-qmloscilloscope-example.xml" xlink:role="page">Qml Oscilloscope</db:link></db:term>
<db:listitem>
<db:para>The example shows how to implement application with strict performance requirements using the Qt Charts QML API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-qmlweather-example.xml" xlink:role="page">Qml Weather</db:link></db:term>
<db:listitem>
<db:para>This is a basic demonstration showing how to use the different chart types by using qml.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcharts-zoomlinechart-example.xml" xlink:role="page">Zoom Line Example</db:link></db:term>
<db:listitem>
<db:para>The example shows how to create your own custom zooming effect.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-coap">
<db:title>Qt CoAP</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtcoap-quickmulticastclient-example.xml" xlink:role="page">Quick CoAP Multicast Discovery</db:link></db:term>
<db:listitem>
<db:para>Using the CoAP client for a multicast resource discovery with a Qt Quick user interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcoap-quicksecureclient-example.xml" xlink:role="page">Quick Secure CoAP Client</db:link></db:term>
<db:listitem>
<db:para>Securing the CoAP client and using it with a Qt Quick user interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcoap-simplecoapclient-example.xml" xlink:role="page">Simple CoAP Client</db:link></db:term>
<db:listitem>
<db:para>Creating an application that communicates with a CoAP server.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-concurrent">
<db:title>Qt Concurrent</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtconcurrent-imagescaling-example.xml" xlink:role="page">Image Scaling</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to asynchronously download and scale images.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtconcurrent-primecounter-example.xml" xlink:role="page">Prime Counter</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to monitor the progress of concurrent operations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtconcurrent-wordcount-example.xml" xlink:role="page">Word Count</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use the map-reduce algorithm.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-core">
<db:title>Qt Core</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-bindableproperties-example.xml" xlink:role="page">Bindable Properties</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how the usage of bindable properties can simplify your C++ code.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-tools-contiguouscache-example.xml" xlink:role="page">Contiguous Cache Example</db:link></db:term>
<db:listitem>
<db:para>The Contiguous Cache example shows how to use QContiguousCache to manage memory usage for very large models. In some environments memory is limited and, even when it isn't, users still dislike an application using excessive memory. Using QContiguousCache to manage a list, rather than loading the entire list into memory, allows the application to limit the amount of memory it uses, regardless of the size of the data set it accesses.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-ipc-sharedmemory-example.xml" xlink:role="page">IPC: Shared Memory</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to share image data between different processes using the Shared Memory IPC mechanism.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-ipc-localfortuneclient-example.xml" xlink:role="page">Local Fortune Client</db:link></db:term>
<db:listitem>
<db:para>Demonstrates using QLocalSocket for a simple local service client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-ipc-localfortuneserver-example.xml" xlink:role="page">Local Fortune Server</db:link></db:term>
<db:listitem>
<db:para>Demonstrates using QLocalServer and QLocalSocket for serving a simple local service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-mimetypes-mimetypebrowser-example.xml" xlink:role="page">MIME Type Browser</db:link></db:term>
<db:listitem>
<db:para>Shows the hierarchy of MIME types and can be used to determine the MIME type of a file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-mandelbrot-example.xml" xlink:role="page">Mandelbrot</db:link></db:term>
<db:listitem>
<db:para>The Mandelbrot example demonstrates multi-thread programming using Qt. It shows how to use a worker thread to perform heavy computations without blocking the main thread's event loop.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-serialization-cbordump-example.xml" xlink:role="page">Parsing and displaying CBOR data</db:link></db:term>
<db:listitem>
<db:para>A demonstration of how to parse files in CBOR format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-semaphores-example.xml" xlink:role="page">Producer and Consumer using Semaphores</db:link></db:term>
<db:listitem>
<db:para>The Producer and Consumer using Semaphores example shows how to use QSemaphore to control access to a circular buffer shared by a producer thread and a consumer thread.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-waitconditions-example.xml" xlink:role="page">Producer and Consumer using Wait Conditions</db:link></db:term>
<db:listitem>
<db:para>The Producer and Consumer using Wait Conditions example shows how to use QWaitCondition and QMutex to control access to a circular buffer shared by a producer thread and a consumer thread.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-serialization-streambookmarks-example.xml" xlink:role="page">QXmlStream Bookmarks Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to read and write XBEL files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-platform-androidnotifier-example.xml" xlink:role="page">Qt Android Notifier</db:link></db:term>
<db:listitem>
<db:para>Demonstrates calling Java code from Qt in an Android application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-queuedcustomtype-example.xml" xlink:role="page">Queued Custom Type</db:link></db:term>
<db:listitem>
<db:para>The Queued Custom Type example shows how to send custom types between threads with queued signals and slots.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-serialization-savegame-example.xml" xlink:role="page">Saving and Loading a Game</db:link></db:term>
<db:listitem>
<db:para>How to save and load a game using Qt's JSON or CBOR classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-serialization-convert-example.xml" xlink:role="page">Serialization Converter</db:link></db:term>
<db:listitem>
<db:para>How to convert between different serialization formats.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-d-bus">
<db:title>Qt D-Bus</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtdbus-chat-example.xml" xlink:role="page">D-Bus Chat</db:link></db:term>
<db:listitem>
<db:para>Demonstrates communication among instances of an application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdbus-complexpingpong-example.xml" xlink:role="page">D-Bus Complex Ping Pong</db:link></db:term>
<db:listitem>
<db:para>Demonstrates usage of the Qt D-Bus typesystem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdbus-pingpong-example.xml" xlink:role="page">D-Bus Ping Pong</db:link></db:term>
<db:listitem>
<db:para>Demonstrates a simple message system using D-Bus.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdbus-remotecontrolledcar-example.xml" xlink:role="page">D-Bus Remote Controlled Car</db:link></db:term>
<db:listitem>
<db:para>Shows how to use Qt D-Bus to control a car from another application.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-data-visualization">
<db:title>Qt Data Visualization</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtdatavis3d-qmlaxishandling-example.xml" xlink:role="page">Axis Handling</db:link></db:term>
<db:listitem>
<db:para>Implementing axis dragging with a custom input handler in QML, and creating a custom axis formatter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdatavis3d-graphgallery-example.xml" xlink:role="page">Graph Gallery</db:link></db:term>
<db:listitem>
<db:para>Gallery of Bar, Scatter, and Surface graphs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdatavis3d-qmlbars-example.xml" xlink:role="page">Simple Bar Graph</db:link></db:term>
<db:listitem>
<db:para>Using Bars3D in a QML application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdatavis3d-qmlscatter-example.xml" xlink:role="page">Simple Scatter Graph</db:link></db:term>
<db:listitem>
<db:para>Using Scatter3D in a QML application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdatavis3d-qmlsurfacegallery-example.xml" xlink:role="page">Surface Graph Gallery</db:link></db:term>
<db:listitem>
<db:para>Gallery with three different ways to use a Surface3D graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdatavis3d-volumetric-example.xml" xlink:role="page">Volumetric Rendering</db:link></db:term>
<db:listitem>
<db:para>Rendering volumetric objects.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-designer-manual">
<db:title>Qt Designer Manual</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtdesigner-calculatorbuilder-example.xml" xlink:role="page">Calculator Builder</db:link></db:term>
<db:listitem>
<db:para>Creating a user interface from a Qt Designer form at run-time.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdesigner-calculatorform-example.xml" xlink:role="page">Calculator Form</db:link></db:term>
<db:listitem>
<db:para>Using a form created with Qt Designer in an application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdesigner-calculatorform-mi-example.xml" xlink:role="page">Calculator Form/Multiple Inheritance</db:link></db:term>
<db:listitem>
<db:para>Using a form created with Qt Designer in an application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdesigner-containerextension-example.xml" xlink:role="page">Container Extension Example</db:link></db:term>
<db:listitem>
<db:para>Creating a custom multi-page plugin for Qt Designer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdesigner-customwidgetplugin-example.xml" xlink:role="page">Custom Widget Plugin</db:link></db:term>
<db:listitem>
<db:para>Creating a custom widget plugin for Qt Designer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtdesigner-taskmenuextension-example.xml" xlink:role="page">Task Menu Extension</db:link></db:term>
<db:listitem>
<db:para>Creating a custom widget plugin for Qt Designer and providing custom task menu entries that are associated with the plugin.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-grpc">
<db:title>Qt GRPC</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtgrpc-chat-example.xml" xlink:role="page">Chat</db:link></db:term>
<db:listitem>
<db:para>Using the Qt GRPC client API in the user applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgrpc-magic8ball-example.xml" xlink:role="page">Magic 8 Ball</db:link></db:term>
<db:listitem>
<db:para>Creating a HTTP2 connection between a Qt GRPC client and a C++ gRPC server.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-gui">
<db:title>Qt GUI</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtgui-hellovulkancubes-example.xml" xlink:role="page">Hello Vulkan Cubes Example</db:link></db:term>
<db:listitem>
<db:para>Shows the basics of using QVulkanWindow.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgui-hellovulkantriangle-example.xml" xlink:role="page">Hello Vulkan Triangle Example</db:link></db:term>
<db:listitem>
<db:para>Shows the basics of rendering with QVulkanWindow and the Vulkan API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgui-hellovulkanwidget-example.xml" xlink:role="page">Hello Vulkan Widget Example</db:link></db:term>
<db:listitem>
<db:para>Shows the usage of QVulkanWindow in QWidget applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgui-rhiwindow-example.xml" xlink:role="page">RHI Window Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a minimal QWindow-based application using QRhi.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgui-rasterwindow-example.xml" xlink:role="page">Raster Window Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a minimal QWindow based application using QPainter for rendering.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-graphs">
<db:title>Qt Graphs</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtgraphs-axishandling-example.xml" xlink:role="page">Axis Handling</db:link></db:term>
<db:listitem>
<db:para>Implementing axis dragging with a custom input handler in QML, and creating a custom axis formatter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgraphs-widgetgraphgallery-example.xml" xlink:role="page">Graph Gallery</db:link></db:term>
<db:listitem>
<db:para>Gallery of Bar, Scatter, and Surface graphs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgraphs-bars-example.xml" xlink:role="page">Simple Bar Graph</db:link></db:term>
<db:listitem>
<db:para>Using Bars3D in a QML application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgraphs-scatter-example.xml" xlink:role="page">Simple Scatter Graph</db:link></db:term>
<db:listitem>
<db:para>Using Scatter3D in a QML application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgraphs-surfacegallery-example.xml" xlink:role="page">Surface Graph Gallery</db:link></db:term>
<db:listitem>
<db:para>Gallery with three different ways to use a Surface3D graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtgraphs-widgetvolumetric-example.xml" xlink:role="page">Volumetric Rendering</db:link></db:term>
<db:listitem>
<db:para>Rendering volumetric objects.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-http-server">
<db:title>Qt HTTP Server</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qthttpserver-colorpalette-example.xml" xlink:role="page">RESTful API Server</db:link></db:term>
<db:listitem>
<db:para>Example of how to create a RESTful API server using the QHttpServer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qthttpserver-simple-example.xml" xlink:role="page">Simple HTTP Server</db:link></db:term>
<db:listitem>
<db:para>Simple example of how to set up an HTTP server.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-help">
<db:title>Qt Help</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qthelp-contextsensitivehelp-example.xml" xlink:role="page">Context-Sensitive Help Example</db:link></db:term>
<db:listitem>
<db:para>Using the QHelpEngineCore class to implement context-sensitive help for applications.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-insight-tracker">
<db:title>Qt Insight Tracker</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtinsighttracker-coffee-example.xml" xlink:role="page">Qt Insight - Qt Quick Application</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick application using Qt Insight Tracker.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-linguist-manual">
<db:title>Qt Linguist Manual</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtlinguist-arrowpad-example.xml" xlink:role="page">Arrow Pad Example</db:link></db:term>
<db:listitem>
<db:para>Understanding the Qt Linguist contexts concept and using two or more languages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlinguist-hellotr-example.xml" xlink:role="page">Hello tr() Example</db:link></db:term>
<db:listitem>
<db:para>Translating a small Hello World program to Latin.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlinguist-i18n-example.xml" xlink:role="page">I18N Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates Qt's support for translated text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlinguist-trollprint-example.xml" xlink:role="page">Troll Print Example</db:link></db:term>
<db:listitem>
<db:para>Updating translations for later releases.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-location">
<db:title>Qt Location</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-geojson-viewer-example.xml" xlink:role="page">GeoJson Viewer (C++/QML)</db:link></db:term>
<db:listitem>
<db:para>The GeoJson viewer example demonstrates how to manipulate MapItems, handle user input and I/O to and from a GeoJson file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-mapviewer-example.xml" xlink:role="page">Map Viewer (QML)</db:link></db:term>
<db:listitem>
<db:para>The Map Viewer example shows how to display and interact with a map, search for an address, and find driving directions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-itemview-transitions-example.xml" xlink:role="page">MapItemView Transitions (QML)</db:link></db:term>
<db:listitem>
<db:para>How to use transitions together with MapItemView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-minimal-map-example.xml" xlink:role="page">Minimal Map (QML)</db:link></db:term>
<db:listitem>
<db:para>The minimum code to display a map using Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-places-example.xml" xlink:role="page">Places (QML)</db:link></db:term>
<db:listitem>
<db:para>The Places example demonstrates how to search for Places and access related content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-places-list-example.xml" xlink:role="page">Places List (QML)</db:link></db:term>
<db:listitem>
<db:para>The Places List example demonstrates how to search for and display a list of places using a ListView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-places-map-example.xml" xlink:role="page">Places Map (QML)</db:link></db:term>
<db:listitem>
<db:para>The Places Map example demonstrates how to search for and display a list of places on a map using a MapItemView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtlocation-planespotter-example.xml" xlink:role="page">Plane Spotter (QML)</db:link></db:term>
<db:listitem>
<db:para>The Plane Spotter example demonstrates the tight integration of location and positioning data types into QML.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-mqtt">
<db:title>Qt MQTT</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtmqtt-subscriptions-example.xml" xlink:role="page">MQTT Subscriptions</db:link></db:term>
<db:listitem>
<db:para>Creating a application that communicates with an MQTT broker.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmqtt-quickpublication-example.xml" xlink:role="page">Qt Quick Publication</db:link></db:term>
<db:listitem>
<db:para>Use Qt Quick Controls to create an application that can publish on MQTT topics.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmqtt-quicksubscription-example.xml" xlink:role="page">Qt Quick Subscription</db:link></db:term>
<db:listitem>
<db:para>Use Qt Quick Controls to create an application that can subscribe to MQTT topics.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmqtt-simpleclient-example.xml" xlink:role="page">Simple MQTT Client</db:link></db:term>
<db:listitem>
<db:para>Creating a minimalistic telemetry application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmqtt-websocketsubscription-example.xml" xlink:role="page">WebSockets MQTT Subscription</db:link></db:term>
<db:listitem>
<db:para>Combining an MQTT client with a web socket connection.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-multimedia">
<db:title>Qt Multimedia</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-audiodevices-example.xml" xlink:role="page">Audio Devices Example</db:link></db:term>
<db:listitem>
<db:para>Testing the available audio devices and their configuration.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-audiooutput-example.xml" xlink:role="page">Audio Output Example</db:link></db:term>
<db:listitem>
<db:para>Enabling audio playback using the QAudioSink class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-audiorecorder-example.xml" xlink:role="page">Audio Recorder Example</db:link></db:term>
<db:listitem>
<db:para>Discovering the available devices and supported codecs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-audiosource-example.xml" xlink:role="page">Audio Source Example</db:link></db:term>
<db:listitem>
<db:para>Recording audio using the QAudioSource class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-camera-example.xml" xlink:role="page">Camera Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to capture a still image or record video.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-player-example.xml" xlink:role="page">Media Player Example</db:link></db:term>
<db:listitem>
<db:para>Playing audio and video.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-declarative-camera-example.xml" xlink:role="page">QML Camera Application</db:link></db:term>
<db:listitem>
<db:para>This Qt Quick based application shows how to use the API to capture a still image or video.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-video-mediaplayer-example.xml" xlink:role="page">QML Media Player Example</db:link></db:term>
<db:listitem>
<db:para>Playing audio and video using Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-video-qmlvideo-example.xml" xlink:role="page">QML Video Example</db:link></db:term>
<db:listitem>
<db:para>Transforming video and camera viewfinder content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-video-recorder-example.xml" xlink:role="page">QML Video Recorder</db:link></db:term>
<db:listitem>
<db:para>Recording audio and video using Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-screencapture-example.xml" xlink:role="page">Screen Capture Example</db:link></db:term>
<db:listitem>
<db:para>Capturing a screen or window.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-spectrum-example.xml" xlink:role="page">Spectrum Example</db:link></db:term>
<db:listitem>
<db:para>Analyzing a raw audio stream using the FFTReal library.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-videographicsitem-example.xml" xlink:role="page">Video Graphics Item Example</db:link></db:term>
<db:listitem>
<db:para>Streaming video on a graphics scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtmultimedia-videowidget-example.xml" xlink:role="page">Video Widget Example</db:link></db:term>
<db:listitem>
<db:para>Implementing a video player widget.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-nfc">
<db:title>Qt NFC</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtnfc-annotatedurl-example.xml" xlink:role="page">Annotated URL</db:link></db:term>
<db:listitem>
<db:para>Reads formatted NFC Data Exchange Format (NDEF) messages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnfc-ndefeditor-example.xml" xlink:role="page">NDEF Editor</db:link></db:term>
<db:listitem>
<db:para>Reads and writes NFC Data Exchange Format (NDEF) messages to NFC Forum Tags.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-network">
<db:title>Qt Network</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-rsslisting-example.xml" xlink:role="page">A minimal RSS listing application</db:link></db:term>
<db:listitem>
<db:para>A demonstration of how to fetch and display a network resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-blockingfortuneclient-example.xml" xlink:role="page">Blocking Fortune Client</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to create a client for a network service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-broadcastreceiver-example.xml" xlink:role="page">Broadcast Receiver Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to receive information broadcasted over a local network.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-broadcastsender-example.xml" xlink:role="page">Broadcast Sender Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to broadcast information to multiple clients on a local network.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-secureudpclient-example.xml" xlink:role="page">DTLS client</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates how to implement client-side DTLS connections.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-secureudpserver-example.xml" xlink:role="page">DTLS server</db:link></db:term>
<db:listitem>
<db:para>This examples demonstrates how to implement a simple DTLS server.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-fortuneclient-example.xml" xlink:role="page">Fortune Client</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to create a client for a network service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-fortuneserver-example.xml" xlink:role="page">Fortune Server</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to create a server for a network service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-http-example.xml" xlink:role="page">HTTP Client</db:link></db:term>
<db:listitem>
<db:para>Demonstrates a simple HTTP client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-multicastreceiver-example.xml" xlink:role="page">Multicast Receiver</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to receive information sent to a multicast group.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-multicastsender-example.xml" xlink:role="page">Multicast Sender</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to send messages to a multicast group.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-network-chat-example.xml" xlink:role="page">Network Chat</db:link></db:term>
<db:listitem>
<db:para>Demonstrates a stateful peer-to-peer Chat client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-securesocketclient-example.xml" xlink:role="page">Secure Socket Client</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to communicate over an encrypted (SSL) connection.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-threadedfortuneserver-example.xml" xlink:role="page">Threaded Fortune Server</db:link></db:term>
<db:listitem>
<db:para>The Threaded Fortune Server example shows how to create a server for a simple network service that uses threads to handle requests from different clients. It is intended to be run alongside the Fortune Client example.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtnetwork-torrent-example.xml" xlink:role="page">Torrent Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates complex TCP/IP operations.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-network-authorization">
<db:title>Qt Network Authorization</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtnetworkauth-redditclient-example.xml" xlink:role="page">Reddit Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates authenticating with OAuth 2 to access Reddit.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-opc-ua">
<db:title>Qt OPC UA</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtopcua-opcuaviewer-example.xml" xlink:role="page">Qt OPC UA Viewer Example</db:link></db:term>
<db:listitem>
<db:para>Using the model/view approach to display all nodes of an OPC UA server in a tree view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopcua-x509-example.xml" xlink:role="page">Qt OPC UA X509 Support Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to generate keys and certificate signing requests.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopcua-waterpump-waterpump-qml-example.xml" xlink:role="page">Qt Quick Water Pump</db:link></db:term>
<db:listitem>
<db:para>Interacting with an OPC UA server to build a QML-based HMI for a simple water pump machine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopcua-waterpump-waterpump-qmlcpp-example.xml" xlink:role="page">Waterpump Example</db:link></db:term>
<db:listitem>
<db:para>Interacting with an OPC UA server to build a QML-based HMI for a simple machine.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-opengl">
<db:title>Qt OpenGL</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-2dpainting-example.xml" xlink:role="page">2D Painting Example</db:link></db:term>
<db:listitem>
<db:para>The 2D Painting example shows how QPainter and QOpenGLWidget can be used together to display accelerated 2D graphics on supported hardware.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-cube-example.xml" xlink:role="page">Cube OpenGL ES 2.0 example</db:link></db:term>
<db:listitem>
<db:para>Shows how to manually rotate a textured 3D cube with user input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-hellogl2-example.xml" xlink:role="page">Hello GL2 Example</db:link></db:term>
<db:listitem>
<db:para>The Hello GL2 example demonstrates the basic use of the OpenGL-related classes provided with Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-hellogles3-example.xml" xlink:role="page">Hello GLES3 Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates OpenGL ES 3.0 functions via QOpenGLExtraFunctions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-openglwindow-example.xml" xlink:role="page">OpenGL Window Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a minimal QWindow based application for the purpose of using OpenGL.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-stereoqopenglwidget-example.xml" xlink:role="page">QOpenGLWidget Stereoscopic Rendering Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a minimal QOpenGLWidget based application with stereoscopic rendering support.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-textures-example.xml" xlink:role="page">Textures Example</db:link></db:term>
<db:listitem>
<db:para>The Textures example demonstrates the use of Qt's image classes as textures in applications that use both OpenGL and Qt to display graphics.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-pdf">
<db:title>Qt PDF</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtpdf-multipage-example.xml" xlink:role="page">PDF Multipage Viewer Example</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick PDF viewer that allows scrolling through the pages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtpdf-pdfviewer-example.xml" xlink:role="page">PDF Viewer Widget Example</db:link></db:term>
<db:listitem>
<db:para>A widget-based PDF viewer that allows scrolling through the pages.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-positioning">
<db:title>Qt Positioning</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtpositioning-logfilepositionsource-example.xml" xlink:role="page">Log File Position Source (C++)</db:link></db:term>
<db:listitem>
<db:para>Logfile Position Source shows how to create and work with a custom position source. It can be useful for simulating GPS data, or when the data is received in some custom format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtpositioning-satelliteinfo-example.xml" xlink:role="page">SatelliteInfo (C++/QML)</db:link></db:term>
<db:listitem>
<db:para>The SatelliteInfo example shows the available satellites using Sky View, Table View, or RSSI View and the user's current position.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtpositioning-weatherinfo-example.xml" xlink:role="page">Weather Info (C++/QML)</db:link></db:term>
<db:listitem>
<db:para>The Weather Info example shows how to use the user's current position to retrieve local content from a web service in a C++ plugin for QML.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-protobuf">
<db:title>Qt Protobuf</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtprotobuf-sensors-example.xml" xlink:role="page">Sensors</db:link></db:term>
<db:listitem>
<db:para>The Sensors example shows how two applications can communicate by sending protobuf messages using UDP sockets.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-qml">
<db:title>Qt QML</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-dynamicscene-example.xml" xlink:role="page">QML Example - Dynamic Scene</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates creating components dynamically.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-qml-i18n-example.xml" xlink:role="page">Qt Quick I18N</db:link></db:term>
<db:listitem>
<db:para>Generating translation files (TS and QM) for a Qt Quick application.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-quick">
<db:title>Qt Quick</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-imageprovider-example.xml" xlink:role="page">C++ Extensions: Image Provider Example</db:link></db:term>
<db:listitem>
<db:para>How to load images in QML with QQuickImageProvider.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-imageresponseprovider-example.xml" xlink:role="page">C++ Extensions: Image Response Provider Example</db:link></db:term>
<db:listitem>
<db:para>How to load images asynchronously in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-models-abstractitemmodel-example.xml" xlink:role="page">Models and Views: AbstractItemModel Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to use a QAbstractItemModel subclass as a model in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-models-objectlistmodel-example.xml" xlink:role="page">Models and Views: Object ListModel Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to use a QList&lt;QObject*&gt; as a model in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-models-stringlistmodel-example.xml" xlink:role="page">Models and Views: String ListModel Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to use a QStringList as a model in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-samegame-samegame1-example.xml" xlink:role="page">QML Advanced Tutorial 1 - Creating the Game Canvas and Blocks</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-samegame-samegame2-example.xml" xlink:role="page">QML Advanced Tutorial 2 - Populating the Game Canvas</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-samegame-samegame3-example.xml" xlink:role="page">QML Advanced Tutorial 3 - Implementing the Game Logic</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-samegame-samegame4-example.xml" xlink:role="page">QML Advanced Tutorial 4 - Finishing Touches</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-dynamicview-dynamicview1-example.xml" xlink:role="page">QML Dynamic View Ordering Tutorial 1 - A Simple ListView and Delegate</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-dynamicview-dynamicview2-example.xml" xlink:role="page">QML Dynamic View Ordering Tutorial 2 - Dragging View Items</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-dynamicview-dynamicview3-example.xml" xlink:role="page">QML Dynamic View Ordering Tutorial 3 - Moving Dragged Items</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tutorials-dynamicview-dynamicview4-example.xml" xlink:role="page">QML Dynamic View Ordering Tutorial 4 - Sorting Items</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-rendercontrol-rendercontrol-d3d11-example.xml" xlink:role="page">QQuickRenderControl D3D11 Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to render a Qt Quick scene into a texture that is then used by a non-Quick based Direct3D 11 renderer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-rendercontrol-rendercontrol-opengl-example.xml" xlink:role="page">QQuickRenderControl OpenGL Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to render a Qt Quick scene into a texture that is then used by a non-Quick based OpenGL renderer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-quickwidgets-qquickwidgetversuswindow-opengl-example.xml" xlink:role="page">QQuickWidget - QQuickView Comparison Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the benefits of QQuickWidget over a QQuickView embedded as a native window.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-quick-accessibility-example.xml" xlink:role="page">Qt Quick Examples - Accessibility</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates the implementation of accessible buttons.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-animation-example.xml" xlink:role="page">Qt Quick Examples - Animation</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML Animation examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-canvas-example.xml" xlink:role="page">Qt Quick Examples - Canvas</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML Canvas examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-draganddrop-example.xml" xlink:role="page">Qt Quick Examples - Drag and Drop</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML drag and drop examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-embeddedinwidgets-example.xml" xlink:role="page">Qt Quick Examples - Embedded in Widgets</db:link></db:term>
<db:listitem>
<db:para>Demonstrates embedding a QQuickWindow into a QWidget UI via QWidget::createWindowContainer().</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-imageelements-example.xml" xlink:role="page">Qt Quick Examples - Image Elements</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML examples relating to image types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-itemvariablerefreshrate-example.xml" xlink:role="page">Qt Quick Examples - Item Variable Refresh Rate</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick example shows how to setup variable refresh rate for specific parts of the UI.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-keyinteraction-example.xml" xlink:role="page">Qt Quick Examples - Key Interaction</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML keyboard interaction examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-localstorage-example.xml" xlink:role="page">Qt Quick Examples - Local Storage</db:link></db:term>
<db:listitem>
<db:para>A collection of QML local storage examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-mousearea-example.xml" xlink:role="page">Qt Quick Examples - MouseArea</db:link></db:term>
<db:listitem>
<db:para>This is an example of the MouseArea type in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-multieffect-itemswitcher-example.xml" xlink:role="page">Qt Quick Examples - MultiEffect Item Switcher</db:link></db:term>
<db:listitem>
<db:para>Demonstrates MultiEffect usage.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-multieffect-testbed-example.xml" xlink:role="page">Qt Quick Examples - MultiEffect Test Bed</db:link></db:term>
<db:listitem>
<db:para>Demonstrates MultiEffect usage.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-pointerhandlers-example.xml" xlink:role="page">Qt Quick Examples - Pointer Handlers</db:link></db:term>
<db:listitem>
<db:para>Shows how to use Qt Quick Input Handlers in interactive components.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-positioners-example.xml" xlink:role="page">Qt Quick Examples - Positioners</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML Positioner examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-shadereffects-example.xml" xlink:role="page">Qt Quick Examples - Shader Effects</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick example demonstrating the use of shader effects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-shapes-example.xml" xlink:role="page">Qt Quick Examples - Shapes</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick example demonstrating the use of shape items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-text-example.xml" xlink:role="page">Qt Quick Examples - Text</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML examples relating to text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-views-example.xml" xlink:role="page">Qt Quick Examples - Views</db:link></db:term>
<db:listitem>
<db:para>This is a collection of QML model-view examples.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-window-example.xml" xlink:role="page">Qt Quick Examples - Window and Screen</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates the Window and Screen types in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-layouts-example.xml" xlink:role="page">Qt Quick Layouts - Basic Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use layout types to arrange a UI.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-responsivelayouts-example.xml" xlink:role="page">Qt Quick Layouts - Responsive Layout Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use LayoutItemProxy to make a responsive UI.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-particles-affectors-example.xml" xlink:role="page">Qt Quick Particles Examples - Affectors</db:link></db:term>
<db:listitem>
<db:para>This is a collection of examples using Affectors in the QML particle system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-particles-emitters-example.xml" xlink:role="page">Qt Quick Particles Examples - Emitters</db:link></db:term>
<db:listitem>
<db:para>This is a collection of examples using Emitters in the QML particle system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-particles-imageparticle-example.xml" xlink:role="page">Qt Quick Particles Examples - Image Particles</db:link></db:term>
<db:listitem>
<db:para>This is a collection of examples using Affectors in the QML particle system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-particles-system-example.xml" xlink:role="page">Qt Quick Particles Examples - System</db:link></db:term>
<db:listitem>
<db:para>This is a collection of examples using Affectors in the QML particle system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tableview-gameoflife-example.xml" xlink:role="page">Qt Quick TableView examples - Conway’s Game of Life</db:link></db:term>
<db:listitem>
<db:para>The Conway’s Game of Life example shows how the QML TableView type can be used to display a C++ model that the user can pan around.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-tableview-pixelator-example.xml" xlink:role="page">Qt Quick TableViews examples - Pixelator</db:link></db:term>
<db:listitem>
<db:para>The Pixelator example shows how a QML TableView and a delegate can be used for custom table models.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-quickwidgets-quickwidget-example.xml" xlink:role="page">Qt Quick Widgets Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to mix QML with a Qt Widgets application using the QQuickWidget class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-customgeometry-example.xml" xlink:role="page">Scene Graph - Custom Geometry</db:link></db:term>
<db:listitem>
<db:para>Shows how to implement a custom geometry in the Qt Quick Scene Graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-custommaterial-example.xml" xlink:role="page">Scene Graph - Custom Material</db:link></db:term>
<db:listitem>
<db:para>Shows how to implement a custom material in the Qt Quick Scene Graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-customrendernode-example.xml" xlink:role="page">Scene Graph - Custom QSGRenderNode</db:link></db:term>
<db:listitem>
<db:para>Shows how to use QSGRenderNode to implement custom rendering in the Qt Quick scenegraph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-d3d11underqml-example.xml" xlink:role="page">Scene Graph - Direct3D 11 Under QML</db:link></db:term>
<db:listitem>
<db:para>Shows how to render directly with Direct3D 11 under a Qt Quick scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-graph-example.xml" xlink:role="page">Scene Graph - Graph</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how one can combine custom materials and geometries under a single QQuickItem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-metaltextureimport-example.xml" xlink:role="page">Scene Graph - Metal Texture Import</db:link></db:term>
<db:listitem>
<db:para>Shows how to use a texture created directly with Metal.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-metalunderqml-example.xml" xlink:role="page">Scene Graph - Metal Under QML</db:link></db:term>
<db:listitem>
<db:para>Shows how to render directly with Metal under a Qt Quick scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-openglunderqml-example.xml" xlink:role="page">Scene Graph - OpenGL Under QML</db:link></db:term>
<db:listitem>
<db:para>Shows how to render OpenGL under a Qt Quick scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-customitems-painteditem-example.xml" xlink:role="page">Scene Graph - Painted Item</db:link></db:term>
<db:listitem>
<db:para>Shows how to implement QPainter-based custom scenegraph items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-rhitextureitem-example.xml" xlink:role="page">Scene Graph - RHI Texture Item</db:link></db:term>
<db:listitem>
<db:para>Shows how to implement a custom QQuickItem that displays a QRhi-rendered texture.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-rhiunderqml-example.xml" xlink:role="page">Scene Graph - RHI Under QML</db:link></db:term>
<db:listitem>
<db:para>Shows how to render directly with QRhi under a Qt Quick scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-twotextureproviders-example.xml" xlink:role="page">Scene Graph - Two Texture Providers</db:link></db:term>
<db:listitem>
<db:para>Shows how to combine two textures from two texture providers in a custom scene graph node.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-vulkantextureimport-example.xml" xlink:role="page">Scene Graph - Vulkan Texture Import</db:link></db:term>
<db:listitem>
<db:para>Shows how to use a texture created directly with Vulkan.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scenegraph-vulkanunderqml-example.xml" xlink:role="page">Scene Graph - Vulkan Under QML</db:link></db:term>
<db:listitem>
<db:para>Shows how to render directly with Vulkan under a Qt Quick scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-customitems-dialcontrol-example.xml" xlink:role="page">UI Components: Dial Control Example</db:link></db:term>
<db:listitem>
<db:para>The Dial Control Example shows how to create a speedometer-type dial.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-customitems-flipable-example.xml" xlink:role="page">UI Components: Flipable Example</db:link></db:term>
<db:listitem>
<db:para>The Flipable Example shows an item that flips whenever clicked, rotating around the y-axis.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-quick-3d">
<db:title>Qt Quick 3D</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-helloqtquick3d-example.xml" xlink:role="page">Hello Qt Quick 3D Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates simple instanced drawing.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-antialiasing-example.xml" xlink:role="page">Qt Quick 3D - Antialiasing Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the antialiasing modes in Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-bakedlightmap-example.xml" xlink:role="page">Qt Quick 3D - Baked Lightmap Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the use of baked lightmaps in a 3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-customeffect-example.xml" xlink:role="page">Qt Quick 3D - Custom Effect Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates writing custom post-processing effects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-customgeometry-example.xml" xlink:role="page">Qt Quick 3D - Custom Geometry Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates providing custom vertex data from C++ and QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-custominstancing-example.xml" xlink:role="page">Qt Quick 3D - Custom Instanced Rendering</db:link></db:term>
<db:listitem>
<db:para>Demonstrates instancing with custom materials and a C++ instance table.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-custommaterial-example.xml" xlink:role="page">Qt Quick 3D - Custom Materials Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates writing shaded custom materials.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-custommorphing-example.xml" xlink:role="page">Qt Quick 3D - Custom Morphing Animation</db:link></db:term>
<db:listitem>
<db:para>Demonstrates writing C++ custom geometry with a morph target.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-customshaders-example.xml" xlink:role="page">Qt Quick 3D - Custom Shaders Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the use of custom vertex and fragment shaders.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-dynamiccreation-example.xml" xlink:role="page">Qt Quick 3D - Dynamic Model Creation Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates dynamic model creation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-hellocube-example.xml" xlink:role="page">Qt Quick 3D - HelloCube Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to render 2D and 3D objects together in Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-instancing-example.xml" xlink:role="page">Qt Quick 3D - Instanced Rendering Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to do instanced rendering in Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-intro-example.xml" xlink:role="page">Qt Quick 3D - Introduction</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to render a scene in Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-lodhelper-example.xml" xlink:role="page">Qt Quick 3D - Level of Detail Helper Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the use of level of detail helper.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-lights-example.xml" xlink:role="page">Qt Quick 3D - Lights Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the use of different light types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-morphing-example.xml" xlink:role="page">Qt Quick 3D - Morphing Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to control morphing animations in Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-particles3d-example.xml" xlink:role="page">Qt Quick 3D - Particles 3D Testbed Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use the Qt Quick 3D Particles3D module.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-picking-example.xml" xlink:role="page">Qt Quick 3D - Picking example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates picking of models.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-principledmaterial-example.xml" xlink:role="page">Qt Quick 3D - Principled Material Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the use of Principled Material.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-proceduraltexture-example.xml" xlink:role="page">Qt Quick 3D - Procedural Texture Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to provide custom texture data from C++ or QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-quickball-example.xml" xlink:role="page">Qt Quick 3D - Quick Ball Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to create a simple game using Quick3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-quickitems-example.xml" xlink:role="page">Qt Quick 3D - Quick Items Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the use of Qt Quick Items in Quick 3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-reflectionprobes-example.xml" xlink:role="page">Qt Quick 3D - Reflection Probes Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the use of reflection probes in Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-runtimeloader-example.xml" xlink:role="page">Qt Quick 3D - RuntimeLoader Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how assets can be loaded at runtime.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-sceneeffects-example.xml" xlink:role="page">Qt Quick 3D - Scene Effects Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the use of ExtendedSceneEnvironment.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-screenspacereflections-example.xml" xlink:role="page">Qt Quick 3D - Screen Space Reflections Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates reflections in Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-simplefog-example.xml" xlink:role="page">Qt Quick 3D - Simple Fog Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to enable fog in the 3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-skinning-example.xml" xlink:role="page">Qt Quick 3D - Simple Skinning Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to render a simple skinning animation in Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-submeshes-example.xml" xlink:role="page">Qt Quick 3D - Sub-mesh Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how assign materials to sub-meshes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-view3d-example.xml" xlink:role="page">Qt Quick 3D - View3D Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the use of View3D to show a scene from multiple cameras.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-virtualassistant-example.xml" xlink:role="page">Qt Quick 3D - Virtual Assistant Example</db:link></db:term>
<db:listitem>
<db:para>Qt Quick application that presents a 3D model of a virtual assistant with dynamic animations created using QML and timelines.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-volumeraycaster-example.xml" xlink:role="page">Qt Quick 3D - Volumetric Rendering Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to do volumetric rendering in Qt Quick 3D.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-quick-3d-physics">
<db:title>Qt Quick 3D Physics</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3dphysics-cannon-example.xml" xlink:role="page">Qt Quick 3D Physics - Cannon Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to spawn physical objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3dphysics-charactercontroller-example.xml" xlink:role="page">Qt Quick 3D Physics - CharacterController Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the CharacterController type.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3dphysics-compoundshapes-example.xml" xlink:role="page">Qt Quick 3D Physics - Compound Shapes Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates using complex collision shapes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3dphysics-customshapes-example.xml" xlink:role="page">Qt Quick 3D Physics - Custom Shapes Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates using different shapes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3dphysics-impeller-example.xml" xlink:role="page">Qt Quick 3D Physics - Impeller Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates using trigger bodies and collision info.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3dphysics-mass-example.xml" xlink:role="page">Qt Quick 3D Physics - Mass Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates different ways of setting mass and inertia of a body.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3dphysics-material-example.xml" xlink:role="page">Qt Quick 3D Physics - Material Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates using physical materials.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3dphysics-simple-example.xml" xlink:role="page">Qt Quick 3D Physics - Simple Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates setting up a simple physics scene.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-quick-controls">
<db:title>Qt Quick Controls</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-filesystemexplorer-example.xml" xlink:role="page">File System Explorer</db:link></db:term>
<db:listitem>
<db:para>A desktop QML app utilizing customized Qt Quick Controls to display text files from a filesystem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-attachedstyleproperties-example.xml" xlink:role="page">Qt Quick Controls - Attached Style Properties Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates use of QQuickAttachedPropertyPropagator.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-contactlist-example.xml" xlink:role="page">Qt Quick Controls - Contact List</db:link></db:term>
<db:listitem>
<db:para>A QML app using Qt Quick Controls and a C++ class that implements a simple contact list.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-eventcalendar-example.xml" xlink:role="page">Qt Quick Controls - Event Calendar</db:link></db:term>
<db:listitem>
<db:para>A simple event calendar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-flatstyle-example.xml" xlink:role="page">Qt Quick Controls - Flat Style</db:link></db:term>
<db:listitem>
<db:para>A QML app using Qt Quick Controls and a QML plugin with customized controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-gallery-example.xml" xlink:role="page">Qt Quick Controls - Gallery</db:link></db:term>
<db:listitem>
<db:para>A gallery of controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-imagine-automotive-example.xml" xlink:role="page">Qt Quick Controls - Imagine Style Example: Automotive</db:link></db:term>
<db:listitem>
<db:para>An automotive user interface using custom Imagine style assets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-texteditor-example.xml" xlink:role="page">Qt Quick Controls - Text Editor</db:link></db:term>
<db:listitem>
<db:para>A QML app using Qt Quick Controls and a C++ class to provide a fully-functional rich-text editor application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-ios-todolist-example.xml" xlink:role="page">Qt Quick Controls - To Do List</db:link></db:term>
<db:listitem>
<db:para>To do list application for iOS.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquickcontrols-wearable-example.xml" xlink:role="page">Qt Quick Controls - Wearable Demo</db:link></db:term>
<db:listitem>
<db:para>Demonstrates an application launcher designed for wearable devices.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-quick-effect-maker">
<db:title>Qt Quick Effect Maker</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtquickeffectmaker-wiggly-example.xml" xlink:role="page">Wiggly</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to use an effect created with the Qt Quick Effect Maker (QQEM).</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-remote-objects">
<db:title>Qt Remote Objects</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtremoteobjects-modelviewclient-example.xml" xlink:role="page">Model-View Client</db:link></db:term>
<db:listitem>
<db:para>Developing a very simple client program which displays the content and changes made on a server.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtremoteobjects-modelviewserver-example.xml" xlink:role="page">Model-View Server</db:link></db:term>
<db:listitem>
<db:para>Developing a simple server program that displays and makes changes to a QTreeView which is made available on a Remote Objects network.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtremoteobjects-websockets-example.xml" xlink:role="page">QtRemoteObjects WebSockets Applications</db:link></db:term>
<db:listitem>
<db:para>Using a non-QIODevice-based transport (QWebSocket) with QtRemoteObjects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtremoteobjects-ssl-example.xml" xlink:role="page">SSL Server and Client</db:link></db:term>
<db:listitem>
<db:para>Setting up a secure Remote Object network using QSslSockets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtremoteobjects-simpleswitch-example.xml" xlink:role="page">Simpleswitch Direct Server and Client</db:link></db:term>
<db:listitem>
<db:para>A minimalist Remote Object server and client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtremoteobjects-clientapp-example.xml" xlink:role="page">Time Client Application</db:link></db:term>
<db:listitem>
<db:para>A client who holds a replica of a time object from a server and displays the time in a clock.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtremoteobjects-remoteobjects-server-example.xml" xlink:role="page">Time Server Application</db:link></db:term>
<db:listitem>
<db:para>A server which shares a time object with connected clients.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-scxml">
<db:title>Qt SCXML</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtscxml-calculator-example.xml" xlink:role="page">SCXML Calculator</db:link></db:term>
<db:listitem>
<db:para>An application that implements the Calculator example presented in the SCXML Specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtscxml-ftpclient-example.xml" xlink:role="page">SCXML FTP Client</db:link></db:term>
<db:listitem>
<db:para>Implements a simple FTP client using a state machine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtscxml-invoke-example.xml" xlink:role="page">SCXML Invoke</db:link></db:term>
<db:listitem>
<db:para>Invokes a compiled nested state machine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtscxml-mediaplayer-example.xml" xlink:role="page">SCXML Media Player</db:link></db:term>
<db:listitem>
<db:para>Sends data to and receives it from a C++ data model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtscxml-sudoku-example.xml" xlink:role="page">SCXML Sudoku</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the use of separate javascript file with SCXML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtscxml-trafficlight-qml-dynamic-example.xml" xlink:role="page">SCXML Traffic Light (Dynamic, QML)</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick application that uses a dynamically loaded state machine to implement a traffic light.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtscxml-trafficlight-widgets-dynamic-example.xml" xlink:role="page">SCXML Traffic Light (Dynamic, Widgets)</db:link></db:term>
<db:listitem>
<db:para>A widget-based application that uses a dynamically loaded state machine to implement a traffic light.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtscxml-trafficlight-qml-simple-example.xml" xlink:role="page">SCXML Traffic Light (Simple, QML)</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick application that uses a compiled state machine to implement a simplified traffic light.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtscxml-trafficlight-qml-static-example.xml" xlink:role="page">SCXML Traffic Light (Static, QML)</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick application that uses a compiled state machine to implement a traffic light.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtscxml-trafficlight-widgets-static-example.xml" xlink:role="page">SCXML Traffic Light (Static, Widgets)</db:link></db:term>
<db:listitem>
<db:para>A widget-based application that uses a compiled state machine to implement a traffic light.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-sql">
<db:title>Qt SQL</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-books-example.xml" xlink:role="page">Books</db:link></db:term>
<db:listitem>
<db:para>Shows how to use Qt SQL classes with a model/view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-cachedtable-example.xml" xlink:role="page">Cached SQL Table</db:link></db:term>
<db:listitem>
<db:para>The Cached Table example shows how a table view can be used to access a database, caching any changes to the data until the user explicitly submits them using a push button.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-drilldown-example.xml" xlink:role="page">Drill Down Example</db:link></db:term>
<db:listitem>
<db:para>The Drill Down example shows how to read data from a database as well as submit changes, using the QSqlRelationalTableModel and QDataWidgetMapper classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-masterdetail-example.xml" xlink:role="page">Master Detail Example</db:link></db:term>
<db:listitem>
<db:para>The Master Detail Example shows how to present data from different data sources in the same application. The album titles, and the corresponding artists and release dates, are kept in a database, while each album's tracks are stored in an XML file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-querymodel-example.xml" xlink:role="page">Query Model Example</db:link></db:term>
<db:listitem>
<db:para>The Query Model example shows how to make customized versions of data obtained from a SQL query, using a model that encapsulates the query and table views to display the results.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-relationaltablemodel-example.xml" xlink:role="page">Relational Table Model Example</db:link></db:term>
<db:listitem>
<db:para>The Relational Table Model example shows how to use table views with a relational model to visualize the relations between items in a database.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-sqlbrowser-example.xml" xlink:role="page">SQL Browser</db:link></db:term>
<db:listitem>
<db:para>The SQL Browser example shows how a data browser can be used to visualize the results of SQL statements on a live database.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-sqlwidgetmapper-example.xml" xlink:role="page">SQL Widget Mapper Example</db:link></db:term>
<db:listitem>
<db:para>The SQL Widget Mapper example shows how to use a map information from a database to widgets on a form.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-tablemodel-example.xml" xlink:role="page">Table Model Example</db:link></db:term>
<db:listitem>
<db:para>The Table Model example shows how to use a specialized SQL table model with table views to edit information in a database.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-sensors">
<db:title>Qt Sensors</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtsensors-sensorsshowcase-example.xml" xlink:role="page">Sensors Showcase</db:link></db:term>
<db:listitem>
<db:para>The Sensors Showcase example demonstrates sensor usage with visual examples.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-serial-bus">
<db:title>Qt Serial Bus</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtserialbus-can-example.xml" xlink:role="page">CAN Bus Manager</db:link></db:term>
<db:listitem>
<db:para>The example sends and receives CAN bus frames.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtserialbus-modbus-client-example.xml" xlink:role="page">Modbus Client</db:link></db:term>
<db:listitem>
<db:para>The example implements a Modbus client application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtserialbus-modbus-custom-example.xml" xlink:role="page">Modbus Custom Command</db:link></db:term>
<db:listitem>
<db:para>The example shows how to handle custom Modbus function codes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtserialbus-modbus-server-example.xml" xlink:role="page">Modbus Server</db:link></db:term>
<db:listitem>
<db:para>The example implements a Modbus server application.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-serial-port">
<db:title>Qt Serial Port</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtserialport-blockingreceiver-example.xml" xlink:role="page">Blocking Receiver</db:link></db:term>
<db:listitem>
<db:para>Shows how to use the synchronous API of QSerialPort in a non-GUI thread.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtserialport-blockingsender-example.xml" xlink:role="page">Blocking Sender</db:link></db:term>
<db:listitem>
<db:para>Shows how to use the synchronous API of QSerialPort in a worker thread.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtserialport-terminal-example.xml" xlink:role="page">Serial Terminal</db:link></db:term>
<db:listitem>
<db:para>Shows how to use various features of QSerialPort.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-spatial-audio">
<db:title>Qt Spatial Audio</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtspatialaudio-audiopanning-example.xml" xlink:role="page">Spatial Audio Panning Example</db:link></db:term>
<db:listitem>
<db:para>Shows some of the capabilities of the spatial audio engine in Qt.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-state-machine">
<db:title>Qt State Machine</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtstatemachine-moveblocks-example.xml" xlink:role="page">Move Blocks</db:link></db:term>
<db:listitem>
<db:para>The Move Blocks example shows how to animate items in a QGraphicsScene using a QStateMachine with a custom transition.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtstatemachine-pingpong-example.xml" xlink:role="page">Ping Pong States</db:link></db:term>
<db:listitem>
<db:para>The Ping Pong States example shows how to use parallel states together with custom events and transitions in Qt State Machine Framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtstatemachine-rogue-example.xml" xlink:role="page">Rogue</db:link></db:term>
<db:listitem>
<db:para>The Rogue example shows how to use the Qt state machine for event handling.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtstatemachine-trafficlight-example.xml" xlink:role="page">Traffic Light</db:link></db:term>
<db:listitem>
<db:para>The Traffic Light example shows how to use Qt State Machine Overview to implement the control flow of a traffic light.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-texttospeech">
<db:title>Qt TextToSpeech</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qttexttospeech-hello-speak-example.xml" xlink:role="page">Hello Speak Example</db:link></db:term>
<db:listitem>
<db:para>The Hello Speak example reads out user-provided text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qttexttospeech-quickspeech-example.xml" xlink:role="page">Quick Speech Example</db:link></db:term>
<db:listitem>
<db:para>The Quick Speech example reads out user-provided text.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-ui-tools">
<db:title>Qt UI Tools</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtuitools-textfinder-example.xml" xlink:role="page">Text Finder</db:link></db:term>
<db:listitem>
<db:para>Dynamically loading .ui files using QUiLoader.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-virtual-keyboard">
<db:title>Qt Virtual Keyboard</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtvirtualkeyboard-basic-example.xml" xlink:role="page">Virtual Keyboard in Qt Quick</db:link></db:term>
<db:listitem>
<db:para>This example shows how to use the virtual keyboard in a Qt Quick application.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-wayland-compositor">
<db:title>Qt Wayland Compositor</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-custom-extension-example.xml" xlink:role="page">Custom Extension</db:link></db:term>
<db:listitem>
<db:para>Custom Extension shows how to implement a custom Wayland extension.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-custom-shell-example.xml" xlink:role="page">Custom Shell</db:link></db:term>
<db:listitem>
<db:para>Custom Shell shows how to implement a custom shell extension.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-fancy-compositor-example.xml" xlink:role="page">Fancy Compositor</db:link></db:term>
<db:listitem>
<db:para>Fancy Compositor is an example that demonstrates how to write a fancy Wayland compositor in pure QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-ivi-compositor-example.xml" xlink:role="page">IVI Compositor</db:link></db:term>
<db:listitem>
<db:para>IVI Compositor is an example that demonstrates how to use the IviApplication extension.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-minimal-cpp-example.xml" xlink:role="page">Minimal CPP</db:link></db:term>
<db:listitem>
<db:para>Minimal CPP is an example that demonstrates how to write a Wayland compositor in C++.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-minimal-qml-example.xml" xlink:role="page">Minimal QML</db:link></db:term>
<db:listitem>
<db:para>Minimal QML is a simple example that demonstrates how to write a Wayland compositor in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-multi-output-example.xml" xlink:role="page">Multi Output</db:link></db:term>
<db:listitem>
<db:para>Multi Output is an example that demonstrates a compositor with multiple outputs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-multi-screen-example.xml" xlink:role="page">Multi Screen</db:link></db:term>
<db:listitem>
<db:para>Multi Screen is a desktop-style Wayland compositor for multiple screens.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-overview-compositor-example.xml" xlink:role="page">Overview Compositor</db:link></db:term>
<db:listitem>
<db:para>Overview Compositor shows how to switch between clients in a grid.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-qtshell-example.xml" xlink:role="page">QtShell Compositor</db:link></db:term>
<db:listitem>
<db:para>QtShell Compositor shows how to use the QtShell shell extension.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-server-side-decoration-example.xml" xlink:role="page">Server Side Decoration Compositor</db:link></db:term>
<db:listitem>
<db:para>Server Side Decoration Compositor is a simple example that demonstrates server side window decorations on xdg-shell.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwaylandcompositor-spanning-screens-example.xml" xlink:role="page">Spanning Screens</db:link></db:term>
<db:listitem>
<db:para>Spanning Screens is an example that demonstrates how to let Wayland clients span multiple screens.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-webchannel">
<db:title>Qt WebChannel</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtwebchannel-chatclient-html-example.xml" xlink:role="page">Qt WebChannel ChatClient HTML Example</db:link></db:term>
<db:listitem>
<db:para>A HTML/JavaScript client that communicates over a WebSocket with a QWebChannel server.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebchannel-chatclient-qml-example.xml" xlink:role="page">Qt WebChannel ChatClient QML Application</db:link></db:term>
<db:listitem>
<db:para>A QML client that communicates over a WebSocket with a QWebChannel server.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebchannel-chatserver-cpp-example.xml" xlink:role="page">Qt WebChannel ChatServer Example</db:link></db:term>
<db:listitem>
<db:para>A simple chat server implemented using the QWebChannel C++ API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebchannel-standalone-example.xml" xlink:role="page">Qt WebChannel Standalone Example</db:link></db:term>
<db:listitem>
<db:para>A simple chat between a server and a remote client running in a browser.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-webengine">
<db:title>Qt WebEngine</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginewidgets-recipebrowser-example.xml" xlink:role="page">Recipe Browser</db:link></db:term>
<db:listitem>
<db:para>Injecting custom stylsheets into web pages and providing a rich text preview tool for a custom markup language.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginewidgets-contentmanipulation-example.xml" xlink:role="page">WebEngine Content Manipulation Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to load and manipulate web content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginewidgets-cookiebrowser-example.xml" xlink:role="page">WebEngine Cookie Browser Example</db:link></db:term>
<db:listitem>
<db:para>A cookie browser based on Qt WebEngine Widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginequick-lifecycle-example.xml" xlink:role="page">WebEngine Lifecycle Example</db:link></db:term>
<db:listitem>
<db:para>Freezes and discards background tabs to reduce CPU and memory usage.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginewidgets-notifications-example.xml" xlink:role="page">WebEngine Notifications Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to pass HTML5 web notifications to users.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginewidgets-push-notifications-example.xml" xlink:role="page">WebEngine Push Notifications Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to subscribe to and unsubscribe from push notifications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginequick-quicknanobrowser-example.xml" xlink:role="page">WebEngine Quick Nano Browser</db:link></db:term>
<db:listitem>
<db:para>A web browser implemented using the WebEngineView QML type.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginewidgets-clientcertificate-example.xml" xlink:role="page">WebEngine Widgets Client Certificate Example</db:link></db:term>
<db:listitem>
<db:para>A simple client certificate authentication scenario using Qt WebEngine and QSslServer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginewidgets-html2pdf-example.xml" xlink:role="page">WebEngine Widgets Html2Pdf Example</db:link></db:term>
<db:listitem>
<db:para>Converts web pages to PDF documents using Qt WebEngine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginewidgets-maps-example.xml" xlink:role="page">WebEngine Widgets Maps Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to handle geolocation requests.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginewidgets-printme-example.xml" xlink:role="page">WebEngine Widgets PrintMe Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to print web pages using Qt WebEngine Widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginewidgets-simplebrowser-example.xml" xlink:role="page">WebEngine Widgets Simple Browser Example</db:link></db:term>
<db:listitem>
<db:para>A simple browser based on Qt WebEngine Widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginewidgets-spellchecker-example.xml" xlink:role="page">WebEngine Widgets Spellchecker Example</db:link></db:term>
<db:listitem>
<db:para>Integrates a spellchecker into a simple HTML form.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebengine-webenginewidgets-videoplayer-example.xml" xlink:role="page">WebEngine Widgets Video Player Example</db:link></db:term>
<db:listitem>
<db:para>Displays full screen video using QWebEngineView.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-websockets">
<db:title>Qt WebSockets</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtwebsockets-qmlwebsocketclient-example.xml" xlink:role="page">QML WebSocket Client</db:link></db:term>
<db:listitem>
<db:para>Explains how to write a QML WebSocket client example.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebsockets-qmlwebsocketserver-example.xml" xlink:role="page">QML WebSocket Server</db:link></db:term>
<db:listitem>
<db:para>A simple example that shows how to use a QML WebSocketServer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebsockets-sslechoclient-example.xml" xlink:role="page">Secure WebSocket Echo Client</db:link></db:term>
<db:listitem>
<db:para>A simple client application using secure WebSockets (wss).</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebsockets-sslechoserver-example.xml" xlink:role="page">Secure WebSocket Echo Server</db:link></db:term>
<db:listitem>
<db:para>A simple server to respond to clients over secure WebSockets (wss).</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebsockets-simplechat-example.xml" xlink:role="page">Simple WebSocket Chat</db:link></db:term>
<db:listitem>
<db:para>A minimal chat application using the WebSocket protocol.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebsockets-echoclient-example.xml" xlink:role="page">WebSocket Echo Client</db:link></db:term>
<db:listitem>
<db:para>Show how to write a simple WebSocket client application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwebsockets-echoserver-example.xml" xlink:role="page">WebSocket Echo Server</db:link></db:term>
<db:listitem>
<db:para>Show how to write a simple WebSocket server application.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-webview">
<db:title>Qt WebView</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtwebview-minibrowser-example.xml" xlink:role="page">Qt WebView Examples - Minibrowser</db:link></db:term>
<db:listitem>
<db:para>Minibrowser example demonstrates how to use the Qt WebView module with Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-widgets">
<db:title>Qt Widgets</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-chip-example.xml" xlink:role="page">40000 Chips</db:link></db:term>
<db:listitem>
<db:para>Visualizes a huge graphic view scene with 40000 chip items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-addressbook-example.xml" xlink:role="page">Address Book</db:link></db:term>
<db:listitem>
<db:para>The address book example shows how to use proxy models to display different views onto data from a single model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-affine-example.xml" xlink:role="page">Affine Transformations</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how affine transformations in QPainter work.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-analogclock-example.xml" xlink:role="page">Analog Clock</db:link></db:term>
<db:listitem>
<db:para>The Analog Clock example shows how to draw the contents of a custom widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-basicdrawing-example.xml" xlink:role="page">Basic Drawing Example</db:link></db:term>
<db:listitem>
<db:para>The Basic Drawing example shows how to display basic graphics primitives in a variety of styles using the QPainter class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-basicgraphicslayouts-example.xml" xlink:role="page">Basic Graphics Layouts Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to create basic graphics layout.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-layouts-basiclayouts-example.xml" xlink:role="page">Basic Layouts Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to use the standard layout managers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-basicsortfiltermodel-example.xml" xlink:role="page">Basic Sort/Filter Model Example</db:link></db:term>
<db:listitem>
<db:para>The Basic Sort/Filter Model example illustrates how to use QSortFilterProxyModel to perform basic sorting and filtering.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-effects-blurpicker-example.xml" xlink:role="page">Blur Picker Effect Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to apply graphical effects on items in the view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-calculator-example.xml" xlink:role="page">Calculator Example</db:link></db:term>
<db:listitem>
<db:para>The example shows how to use signals and slots to implement the functionality of a calculator widget, and how to use QGridLayout to place child widgets in a grid.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-calendarwidget-example.xml" xlink:role="page">Calendar Widget Example</db:link></db:term>
<db:listitem>
<db:para>The Calendar Widget example shows use of QCalendarWidget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-collidingmice-example.xml" xlink:role="page">Colliding Mice Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to animate items on a graphics view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-coloreditorfactory-example.xml" xlink:role="page">Color Editor Factory Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create an editor that can be used by a QStyledItemDelegate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-combowidgetmapper-example.xml" xlink:role="page">Combo Widget Mapper Example</db:link></db:term>
<db:listitem>
<db:para>The Combo Widget Mapper example shows how to use a custom delegate to map information from a model to specific widgets on a form.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-completer-example.xml" xlink:role="page">Completer Example</db:link></db:term>
<db:listitem>
<db:para>The Completer example shows how to provide string-completion facilities for an input widget based on data provided by a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-composition-example.xml" xlink:role="page">Composition Modes</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how Composition Modes work in QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-customcompleter-example.xml" xlink:role="page">Custom Completer Example</db:link></db:term>
<db:listitem>
<db:para>The Custom Completer example shows how to provide string-completion facilities for an input widget based on data provided by a model. The completer pops up suggestions for possible words based on the first three characters input by the user and the user's choice of word is inserted into the TextEdit using QTextCursor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-customsortfiltermodel-example.xml" xlink:role="page">Custom Sort/Filter Model Example</db:link></db:term>
<db:listitem>
<db:para>The Custom Sort/Filter Model example illustrates how to subclass QSortFilterProxyModel to perform advanced sorting and filtering.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-diagramscene-example.xml" xlink:role="page">Diagram Scene Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrate how to use the Graphics View framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-dragdroprobot-example.xml" xlink:role="page">Drag and Drop Robot Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to drag and drop items in a graphics view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-draganddrop-draggableicons-example.xml" xlink:role="page">Draggable Icons Example</db:link></db:term>
<db:listitem>
<db:para>The Draggable Icons example shows how to drag and drop image data between widgets in the same application, and between different applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-draganddrop-draggabletext-example.xml" xlink:role="page">Draggable Text Example</db:link></db:term>
<db:listitem>
<db:para>Illustrates how to drag and drop text between widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-draganddrop-dropsite-example.xml" xlink:role="page">Drop Site Example</db:link></db:term>
<db:listitem>
<db:para>The example shows how to distinguish the various MIME formats available in a drag and drop operation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-animation-easing-example.xml" xlink:role="page">Easing Curves Example</db:link></db:term>
<db:listitem>
<db:para>The Easing Curves example shows how to use easing curves to control the speed of an animation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-echoplugin-example.xml" xlink:role="page">Echo Plugin Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a Qt plugin.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-editabletreemodel-example.xml" xlink:role="page">Editable Tree Model Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to implement a simple item-based tree model that can be used with other classes in the model/view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-elasticnodes-example.xml" xlink:role="page">Elastic Nodes Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to interact with graphical items in a scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-fetchmore-example.xml" xlink:role="page">Fetch More Example</db:link></db:term>
<db:listitem>
<db:para>The Fetch More example shows how to add items to an item view model on demand.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-layouts-flowlayout-example.xml" xlink:role="page">Flow Layout Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to arrange widgets for different window sizes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-frozencolumn-example.xml" xlink:role="page">Frozen Column Example</db:link></db:term>
<db:listitem>
<db:para>This example demonstrates how to freeze a column within a QTableView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-notepad-example.xml" xlink:role="page">Getting Started Programming with Qt Widgets</db:link></db:term>
<db:listitem>
<db:para>A tutorial for Qt Widgets based notepad application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-gradients-example.xml" xlink:role="page">Gradients</db:link></db:term>
<db:listitem>
<db:para>Shows how gradients can be used with QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-groupbox-example.xml" xlink:role="page">Group Box Example</db:link></db:term>
<db:listitem>
<db:para>The Group Box example shows how to use the different kinds of group boxes in Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-imagecomposition-example.xml" xlink:role="page">Image Composition Example</db:link></db:term>
<db:listitem>
<db:para>Shows how composition modes work in QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-gestures-imagegestures-example.xml" xlink:role="page">Image Gestures Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates the use of simple gestures in a widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-licensewizard-example.xml" xlink:role="page">License Wizard Example</db:link></db:term>
<db:listitem>
<db:para>The License Wizard example shows how to implement complex wizards in Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-lineedits-example.xml" xlink:role="page">Line Edits Example</db:link></db:term>
<db:listitem>
<db:para>The Line Edits example demonstrates the many ways that QLineEdit can be used, and shows the effects of various properties and validators on the input and output supplied by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-mainwindows-menus-example.xml" xlink:role="page">Menus Example</db:link></db:term>
<db:listitem>
<db:para>The Menus example demonstrates how menus can be used in a main window application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-richtext-orderform-example.xml" xlink:role="page">Order Form Example</db:link></db:term>
<db:listitem>
<db:para>The Order Form example shows how to generate rich text documents by combining a simple template with data input by the user in a dialog.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-painterpaths-example.xml" xlink:role="page">Painter Paths Example</db:link></db:term>
<db:listitem>
<db:para>The Painter Paths example shows how to use painter paths to build complex shapes for rendering.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-pathstroke-example.xml" xlink:role="page">Path Stroking</db:link></db:term>
<db:listitem>
<db:para>The Path Stroking example shows various types of pens that can be used with QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-regularexpression-example.xml" xlink:role="page">QRegularExpression Example</db:link></db:term>
<db:listitem>
<db:para>The QRegularExpression example shows how regular expressions in Qt are applied to text by providing an environment in which new regular expressions can be created and tested on custom text strings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-scribble-example.xml" xlink:role="page">Scribble Example</db:link></db:term>
<db:listitem>
<db:para>The Scribble example shows how to reimplement some of QWidget's event handlers to receive the events generated for the application's widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-settingseditor-example.xml" xlink:role="page">Settings Editor Example</db:link></db:term>
<db:listitem>
<db:para>The Settings Editor example shows how Qt's standard settings support is used in an application by providing an editor that enables the user to view the settings for installed applications, and modify those that can be edited.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-shortcuteditor-example.xml" xlink:role="page">Shortcut Editor Example</db:link></db:term>
<db:listitem>
<db:para>The Shortcut Editor example shows how to create a basic, read-write hierarchical model to use with Qt's standard view and QKeySequenceEdit classes. For a description of Model/View Programming, see the Model/View Programming overview.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-graphicsview-simpleanchorlayout-example.xml" xlink:role="page">Simple Anchor Layout Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates anchor layout on a graphics view scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-simpletreemodel-example.xml" xlink:role="page">Simple Tree Model Example</db:link></db:term>
<db:listitem>
<db:para>The Simple Tree Model example shows how to use a hierarchical model with Qt's standard view classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-sliders-example.xml" xlink:role="page">Sliders Example</db:link></db:term>
<db:listitem>
<db:para>The Sliders example shows how to use the different types of sliders available in Qt: QSlider, QScrollBar and QDial.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-spinboxdelegate-example.xml" xlink:role="page">Spin Box Delegate Example</db:link></db:term>
<db:listitem>
<db:para>The Spin Box Delegate example shows how to create an editor for a custom delegate in the model/view framework by reusing a standard Qt editor widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-spinboxes-example.xml" xlink:role="page">Spin Boxes Example</db:link></db:term>
<db:listitem>
<db:para>The Spin Boxes example shows how to use the many different types of spin boxes available in Qt, from a simple QSpinBox widget to more complex editors like the QDateTimeEdit widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-spreadsheet-example.xml" xlink:role="page">Spreadsheet</db:link></db:term>
<db:listitem>
<db:para>The Spreadsheet example shows how to create a simple spreadsheet application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-standarddialogs-example.xml" xlink:role="page">Standard Dialogs Example</db:link></db:term>
<db:listitem>
<db:para>The Standard Dialogs example shows the standard dialogs that are provided by Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-itemviews-stardelegate-example.xml" xlink:role="page">Star Delegate Example</db:link></db:term>
<db:listitem>
<db:para>The Star Delegate example shows how to create a delegate that can paint itself and that supports editing.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-styleplugin-example.xml" xlink:role="page">Style Plugin Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a plugin that extends Qt with a new GUI look and feel.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-richtext-syntaxhighlighter-example.xml" xlink:role="page">Syntax Highlighter Example</db:link></db:term>
<db:listitem>
<db:para>The Syntax Highlighter example shows how to perform simple syntax highlighting.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-desktop-systray-example.xml" xlink:role="page">System Tray Icon Example</db:link></db:term>
<db:listitem>
<db:para>The System Tray Icon example shows how to add an icon with a menu and popup messages to a desktop environment's system tray.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-tabdialog-example.xml" xlink:role="page">Tab Dialog Example</db:link></db:term>
<db:listitem>
<db:para>The Tab Dialog example shows how to construct a tab dialog using the QTabWidget class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-tablet-example.xml" xlink:role="page">Tablet Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to use a Wacom tablet in Qt applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-desktop-screenshot-example.xml" xlink:role="page">Taking a Screenshot</db:link></db:term>
<db:listitem>
<db:para>The Screenshot example shows how to take a screenshot of the desktop.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-touch-knobs-example.xml" xlink:role="page">Touch Knobs Example</db:link></db:term>
<db:listitem>
<db:para>Shows how to create custom controls that accept touch input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-transformations-example.xml" xlink:role="page">Transformations Example</db:link></db:term>
<db:listitem>
<db:para>The Transformations example shows how transformations influence the way that QPainter renders graphics primitives.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-shapedclock-example.xml" xlink:role="page">Translucent Background</db:link></db:term>
<db:listitem>
<db:para>The example shows how to make a round window with a translucent background.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-treemodelcompleter-example.xml" xlink:role="page">Tree Model Completer Example</db:link></db:term>
<db:listitem>
<db:para>The Tree Model Completer example shows how to provide completion facilities for a hierarchical model, using a period as the separator to access Child, GrandChild and GrandGrandChild level objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-dialogs-trivialwizard-example.xml" xlink:role="page">Trivial Wizard Example</db:link></db:term>
<db:listitem>
<db:para>The Trivial Wizard example illustrates how to create a linear three-page registration wizard using three instances of QWizardPage and one instance of QWizard.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tools-undoframework-example.xml" xlink:role="page">Undo Framework Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to implement undo/redo functionality with the Qt undo framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-painting-deform-example.xml" xlink:role="page">Vector Deformation</db:link></db:term>
<db:listitem>
<db:para>Demonstrates how to manipulate the elements of a QPainterPath.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-gallery-example.xml" xlink:role="page">Widgets Gallery Example</db:link></db:term>
<db:listitem>
<db:para>The Widgets Gallery example shows widgets relevant for designing UIs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-widgets-childwidget-example.xml" xlink:role="page">Widgets Tutorial - Child Widgets</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-widgets-toplevel-example.xml" xlink:role="page">Widgets Tutorial - Creating a Window</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-widgets-nestedlayouts-example.xml" xlink:role="page">Widgets Tutorial - Nested Layouts</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-tutorials-widgets-windowlayout-example.xml" xlink:role="page">Widgets Tutorial - Using Layouts</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtwidgets-widgets-windowflags-example.xml" xlink:role="page">Window Flags Example</db:link></db:term>
<db:listitem>
<db:para>The Window Flags example shows how to use the window flags available in Qt.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qt-xml">
<db:title>Qt XML</db:title>
<db:variablelist role="annotatedattributions">
<db:varlistentry>
<db:term><db:link xlink:href="qtxml-dombookmarks-example.xml" xlink:role="page">DOM Bookmarks Application</db:link></db:term>
<db:listitem>
<db:para>Provides a reader for XML Bookmark Exchange Language files.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="additional-information">
<db:title>Additional Information</db:title>
<db:para>The following table lists related documents, such as information about Trademarks and other licenses used in parts of Qt.</db:para>
<db:variablelist role="licensing">
<db:varlistentry>
<db:term><db:link xlink:href="android-runtime-licensing-notes.xml" xlink:role="page">Android GNU C++ Run-time Licensing</db:link></db:term>
<db:listitem>
<db:para>Provides additional information about the licensing of run-time dependencies of Qt for Android</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt-attribution-llvm.xml" xlink:role="page">LLVM Attribution</db:link></db:term>
<db:listitem>
<db:para>University of Illinois/NCSA Open Source License, BSD licenses</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="license-changes.xml" xlink:role="page">License Changes</db:link></db:term>
<db:listitem>
<db:para>Information about changes of licenses in Qt and Third Party Modules</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt-attribution-cmake-macros.xml" xlink:role="page">Macros for Building with CMake</db:link></db:term>
<db:listitem>
<db:para>BSD 3-clause &quot;New&quot; or &quot;Revised&quot; License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt-attribution-llvmpipe.xml" xlink:role="page">Mesa llvmpipe</db:link></db:term>
<db:listitem>
<db:para>MIT License and Boost Software License 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="pdf-licensing.xml" xlink:role="page">Notes about PDF Licensing</db:link></db:term>
<db:listitem>
<db:para>Details of restrictions on the use of PDF-related trademarks.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtentrypoint.xml" xlink:role="page">The QtEntryPoint Library</db:link></db:term>
<db:listitem>
<db:para>Commercial and BSD 3-clause &quot;New&quot; or &quot;Revised&quot; License.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="trademarks.xml" xlink:role="page">Trademarks</db:link></db:term>
<db:listitem>
<db:para>Information about trademarks owned by The Qt Company.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
</db:article>
