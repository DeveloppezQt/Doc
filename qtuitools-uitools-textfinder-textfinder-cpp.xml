<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Text Finder Example</db:title>
<db:productname>QtUiTools</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt UI Tools Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Dynamically loading .ui files using <db:link xlink:href="quiloader.xml">QUiLoader</db:link>.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;textfinder.h&quot;
#include &amp;lt;QFile&amp;gt;
#include &amp;lt;QLineEdit&amp;gt;
#include &amp;lt;QMessageBox&amp;gt;
#include &amp;lt;QPushButton&amp;gt;
#include &amp;lt;QTextEdit&amp;gt;
#include &amp;lt;QTextStream&amp;gt;
#include &amp;lt;QUiLoader&amp;gt;
#include &amp;lt;QVBoxLayout&amp;gt;

static QWidget *loadUiFile(QWidget *parent)
{
    QFile file(&quot;:/forms/textfinder.ui&quot;);
    file.open(QIODevice::ReadOnly);

    QUiLoader loader;
    return loader.load(&amp;amp;file, parent);
}

static QString loadTextFile()
{
    QFile inputFile(&quot;:/forms/input.txt&quot;);
    inputFile.open(QIODevice::ReadOnly);
    QTextStream in(&amp;amp;inputFile);
    in.setCodec(&quot;UTF-8&quot;);
    return in.readAll();
}

TextFinder::TextFinder(QWidget *parent)
    : QWidget(parent)
{
    QWidget *formWidget = loadUiFile(this);

    ui_findButton = findChild&amp;lt;QPushButton*&amp;gt;(&quot;findButton&quot;);
    ui_textEdit = findChild&amp;lt;QTextEdit*&amp;gt;(&quot;textEdit&quot;);
    ui_lineEdit = findChild&amp;lt;QLineEdit*&amp;gt;(&quot;lineEdit&quot;);

    QMetaObject::connectSlotsByName(this);

    ui_textEdit-&amp;gt;setText(loadTextFile());

    QVBoxLayout *layout = new QVBoxLayout;
    layout-&amp;gt;addWidget(formWidget);
    setLayout(layout);

    setWindowTitle(tr(&quot;Text Finder&quot;));
}

void TextFinder::on_findButton_clicked()
{
    QString searchString = ui_lineEdit-&amp;gt;text();
    QTextDocument *document = ui_textEdit-&amp;gt;document();

    bool found = false;

    // undo previous change (if any)
    document-&amp;gt;undo();

    if (searchString.isEmpty()) {
        QMessageBox::information(this, tr(&quot;Empty Search Field&quot;),
                                 tr(&quot;The search field is empty. &quot;
                                    &quot;Please enter a word and click Find.&quot;));
    } else {
        QTextCursor highlightCursor(document);
        QTextCursor cursor(document);

        cursor.beginEditBlock();

        QTextCharFormat plainFormat(highlightCursor.charFormat());
        QTextCharFormat colorFormat = plainFormat;
        colorFormat.setForeground(Qt::red);

        while (!highlightCursor.isNull() &amp;amp;&amp;amp; !highlightCursor.atEnd()) {
            highlightCursor = document-&amp;gt;find(searchString, highlightCursor,
                                             QTextDocument::FindWholeWords);

            if (!highlightCursor.isNull()) {
                found = true;
                highlightCursor.movePosition(QTextCursor::WordRight,
                                             QTextCursor::KeepAnchor);
                highlightCursor.mergeCharFormat(colorFormat);
            }
        }

        cursor.endEditBlock();

        if (found == false) {
            QMessageBox::information(this, tr(&quot;Word Not Found&quot;),
                                     tr(&quot;Sorry, the word cannot be found.&quot;));
        }
    }
}

</db:programlisting>
</db:article>
