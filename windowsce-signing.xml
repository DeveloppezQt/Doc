<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Windows CE - Signing</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>How to sign Qt projects for use with Windows CE.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="signing-on-windows-ce">
<db:title>Signing on Windows CE</db:title>
<db:para>Windows CE provides a security mechanism to ask the user to confirm that they want to use an application/library that is unknown to the system. This process gets repeated for each dependency of an application, meaning each library the application links to, which is not recognized yet.</db:para>
<db:para>To simplify this process you can use signatures and certificates. A certificate gets installed on the device and each file which is signed with the according certificate can be launched without the security warning.</db:para>
<db:para>If you want to use signatures for your project written in Qt, configure provides the -signature option. You need to specify the location of the .pfx file and qmake adds the signing step to the build rules.</db:para>
<db:para>If you need to select a separate signature for a specific project, or you only want to sign a single project, you can use the &quot;SIGNATURE_FILE = foo.pfx&quot; rule inside the project file.</db:para>
<db:para>The above described rules apply for command line makefiles as well as Visual Studio projects generated by qmake.</db:para>
<db:para>Microsoft usually ships development signatures inside the SDK packages. You can find them in the Tools subdirectory of the SDK root folder.</db:para>
<db:para>Example:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Calling configure with signing enabled:</db:para>
<db:programlisting language="cpp">configure.exe -platform win32-msvc2005 -xplatform wincewm50pocket-msvc2005 -signature C:\some\path\SDKSamplePrivDeveloper.pfx
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>Using pro file to specify signature</db:para>
<db:programlisting language="cpp">...
TARGET = foo

wince*: {
   SIGNATURE_FILE = somepath\customSignature.pfx
}
...
</db:programlisting>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
