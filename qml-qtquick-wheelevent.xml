<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>WheelEvent QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides information about a mouse wheel event.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick 2.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>WheelEvent is part of <db:simplelist><db:member>qtquick-input-events</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The position of the mouse can be found via the <db:link xlink:href="qml-qtquick-wheelevent.xml#x-prop">x</db:link> and <db:link xlink:href="qml-qtquick-wheelevent.xml#y-prop">y</db:link> properties.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-mousearea.xml">MouseArea</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="x-prop">
<db:title>[read-only] x : int</db:title>
<db:bridgehead renderas="sect2">[read-only] y : int</db:bridgehead><db:para>These properties hold the coordinates of the position supplied by the wheel event.</db:para>
</db:section>
<db:section xml:id="accepted-prop">
<db:title>accepted : bool</db:title>
<db:para>Setting <db:code role="parameter">accepted</db:code> to true prevents the wheel event from being propagated to items below this item.</db:para>
<db:para>Generally, if the item acts on the wheel event then it should be accepted so that items lower in the stacking order do not also respond to the same event.</db:para>
</db:section>
<db:section xml:id="angleDelta-prop">
<db:title>[read-only] angleDelta : point</db:title>
<db:para>This property holds the distance that the wheel is rotated in wheel degrees. The x and y cordinate of this property holds the delta in horizontal and vertical orientation.</db:para>
<db:para>A positive value indicates that the wheel was rotated up/right; a negative value indicates that the wheel was rotated down/left.</db:para>
<db:para>Most mouse types work in steps of 15 degrees, in which case the delta value is a multiple of 120; i.e., 120 units * 1/8 = 15 degrees.</db:para>
</db:section>
<db:section xml:id="buttons-prop">
<db:title>[read-only] buttons : int</db:title>
<db:para>This property holds the mouse buttons pressed when the wheel event was generated.</db:para>
<db:para>It contains a bitwise combination of:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Qt.LeftButton</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.RightButton</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.MiddleButton</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="modifiers-prop">
<db:title>[read-only] modifiers : int</db:title>
<db:para>This property holds the keyboard modifier flags that existed immediately before the event occurred.</db:para>
<db:para>It contains a bitwise combination of:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Qt.NoModifier - No modifier key is pressed.</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.ShiftModifier - A Shift key on the keyboard is pressed.</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.ControlModifier - A Ctrl key on the keyboard is pressed.</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.AltModifier - An Alt key on the keyboard is pressed.</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.MetaModifier - A Meta key on the keyboard is pressed.</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.KeypadModifier - A keypad button is pressed.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>For example, to react to a Control key pressed during the wheel event:</db:para>
<db:programlisting language="qml">MouseArea {
    onWheel: {
        if (wheel.modifiers &amp; Qt.ControlModifier) {
            adjustZoom(wheel.angleDelta.y / 120);
        }
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="pixelDelta-prop">
<db:title>[read-only] pixelDelta : point</db:title>
<db:para>This property holds the delta in screen pixels and is available in platforms that have high-resolution trackpads, such as macOS. The x and y cordinate of this property holds the delta in horizontal and vertical orientation. The value should be used directly to scroll content on screen.</db:para>
<db:para>For platforms without high-resolution trackpad support, pixelDelta will always be (0,0), and <db:link xlink:href="qml-qtquick-wheelevent.xml#angleDelta-prop">angleDelta</db:link> should be used instead.</db:para>
</db:section>
</db:section>
</db:article>
