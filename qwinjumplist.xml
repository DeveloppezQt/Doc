<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QWinJumpList Class</db:title>
<db:productname>QtWinExtras</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Windows Extras Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qwinjumplist.xml">QWinJumpList</db:link> class represents a transparent wrapper around Windows Jump Lists.</db:para>
<db:para>This class was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QWinJumpList</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += winextras</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>An application can use Jump Lists to provide users with faster access to files or to display shortcuts to tasks or commands.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="identifier-prop">
<db:title>identifier : QString</db:title>
<db:para>This property holds the jump list identifier</db:para>
<db:para>Specifies an optional explicit unique identifier for the application jump list.</db:para>
<db:para>The default value is empty; a system-defined internal identifier is used instead. See <db:link xlink:href="http://msdn.microsoft.com/en-us/library/windows/desktop/dd378459%28v=vs.85%29.aspx">Application User Model IDs</db:link> on MSDN for further details.</db:para>
<db:note>
<db:para>The identifier cannot have more than <db:code>128</db:code> characters and cannot contain spaces. A too long identifier is automatically truncated to <db:code>128</db:code> characters, and spaces are replaced by underscores.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">identifier</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setIdentifier</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>identifier</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QWinJumpList">
<db:title>[explicit] QWinJumpList::QWinJumpList(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a <db:link xlink:href="qwinjumplist.xml">QWinJumpList</db:link> with the parent object <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QWinJumpList">
<db:title>[virtual noexcept] QWinJumpList::~QWinJumpList()</db:title>
<db:para>Destroys the <db:link xlink:href="qwinjumplist.xml">QWinJumpList</db:link>.</db:para>
</db:section>
<db:section xml:id="addCategory">
<db:title>void QWinJumpList::addCategory(QWinJumpListCategory *<db:emphasis>category</db:emphasis>)</db:title>
<db:para>Adds a custom <db:code role="parameter">category</db:code> to the jump list.</db:para>
</db:section>
<db:section xml:id="addCategory-1">
<db:title>QWinJumpListCategory *QWinJumpList::addCategory(const QString &amp;<db:emphasis>title</db:emphasis>, const QList&lt;QWinJumpListItem *&gt; <db:emphasis>items</db:emphasis> = QList&lt;QWinJumpListItem *&gt;())</db:title>
<db:para>This function overloads <db:link xlink:href="qwinjumplist.xml#addCategory">addCategory</db:link>().</db:para>
<db:para>Creates a custom category with provided <db:code role="parameter">title</db:code> and optional <db:code role="parameter">items</db:code>, and adds it to the jump list.</db:para>
</db:section>
<db:section xml:id="categories">
<db:title>QList&lt;QWinJumpListCategory *&gt; QWinJumpList::categories() const</db:title>
<db:para>Returns the custom categories in the jump list.</db:para>
</db:section>
<db:section xml:id="clear">
<db:title>void QWinJumpList::clear()</db:title>
<db:para>Clears the jump list.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwinjumplistcategory.xml#clear">QWinJumpListCategory::clear</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="frequent">
<db:title>QWinJumpListCategory *QWinJumpList::frequent() const</db:title>
<db:para>Returns the frequent items category in the jump list.</db:para>
</db:section>
<db:section xml:id="recent">
<db:title>QWinJumpListCategory *QWinJumpList::recent() const</db:title>
<db:para>Returns the recent items category in the jump list.</db:para>
</db:section>
<db:section xml:id="tasks">
<db:title>QWinJumpListCategory *QWinJumpList::tasks() const</db:title>
<db:para>Returns the tasks category in the jump list.</db:para>
</db:section>
</db:section>
</db:article>
