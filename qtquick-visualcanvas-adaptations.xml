<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Scene Graph Adaptations</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Quick Reference Documentation.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="scene-graph-adaptations-in-qt-quick">
<db:title>Scene Graph Adaptations in Qt Quick</db:title>
<db:para>Originally Qt Quick only had one available renderer for parsing the scene graph and rendering the results to a render target. This renderer is now the default OpenGL Renderer which supports rendering either using the OpenGL ES 2.0 or OpenGL 2.0 (with framebuffer object extensions) APIs. The Qt Quick APIs have originally been designed with the assumption that OpenGL is always available. However, it is now possible to use other graphics API's to render Qt Quick scenes using the scene graph APIs.</db:para>
</db:section>
<db:section xml:id="switching-between-the-adaptation-used-by-the-application">
<db:title>Switching between the adaptation used by the application</db:title>
<db:para>The default of the OpenGL, or - in Qt builds with disabled OpenGL support - the software adaptation, can be overridden either by using an environment variable or a C++ API. The former consists of setting the <db:code>QT_QUICK_BACKEND</db:code> or the legacy <db:code>QMLSCENE_DEVICE</db:code> environment variable before launching applications. The latter is done by calling <db:link xlink:href="qquickwindow.xml#setSceneGraphBackend">QQuickWindow::setSceneGraphBackend</db:link>() early in the application's main() function.</db:para>
<db:para>The supported backends are the following</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>OpenGL - Requested by the string <db:code>&quot;&quot;</db:code> or the enum value <db:link xlink:href="qsgrendererinterface.xml#GraphicsApi-enum">QSGRendererInterface::OpenGL</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Software - Requested by the string <db:code>&quot;software&quot;</db:code> or the enum value <db:link xlink:href="qsgrendererinterface.xml#GraphicsApi-enum">QSGRendererInterface::Software</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Direct3D 12 - Requested by the string <db:code>&quot;d3d12&quot;</db:code> or the enum value <db:link xlink:href="qsgrendererinterface.xml#GraphicsApi-enum">QSGRendererInterface::Direct3D12</db:link>.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>When in doubt which backend is in use, enable basic scenegraph information logging via the <db:code>QSG_INFO</db:code> environment variable or the <db:code>qt.scenegraph.general</db:code> logging category. This will result in printing some information during application startup onto the debug output.</db:para>
<db:note>
<db:para>Adaptations other than OpenGL will typically come with a set of limitations since they are unlikely to provide a feature set 100% compatible with OpenGL. However, they may provide their own specific advantages in certain areas. Refer to the sections below for more information on the various adaptations.</db:para>
</db:note>
</db:section>
<db:section xml:id="opengl-es-2-0-and-opengl-2-0-adaptation">
<db:title>OpenGL ES 2.0 and OpenGL 2.0 Adaptation</db:title>
<db:para>The default adaptation capable of providing the full Qt Quick 2 feature set is the OpenGL adaptation. All of the details of the OpenGL adpatation can are available here: <db:link xlink:href="qtquick-visualcanvas-scenegraph-renderer.xml">OpenGL Adaptation</db:link></db:para>
</db:section>
<db:section xml:id="software-adaptation">
<db:title>Software Adaptation</db:title>
<db:para>The Software adaptation is an alternative renderer for <db:link xlink:href="qtquick-index.xml">Qt Quick</db:link> 2 that uses the raster paint engine to render the contents of the scene graph. The details for this adaptation are available here: <db:link xlink:href="qtquick-visualcanvas-adaptations-software.xml">Software Adaptation</db:link></db:para>
</db:section>
<db:section xml:id="direct3d-12-experimental">
<db:title>Direct3D 12 (experimental)</db:title>
<db:para>The Direct3D 12 adaptation is an alternative renderer for <db:link xlink:href="qtquick-index.xml">Qt Quick</db:link> 2 when running on Windows 10, both for Win32 and UWP applications. The details for this adaptation are available here: <db:link xlink:href="qtquick-visualcanvas-adaptations-d3d12.xml">Direct3D 12 Adaptation</db:link></db:para>
</db:section>
</db:article>
