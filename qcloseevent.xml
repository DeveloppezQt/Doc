<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QCloseEvent Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qcloseevent.xml">QCloseEvent</db:link> class contains parameters that describe a close event.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QCloseEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qevent.xml" xlink:role="class">QEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QCloseEvent is part of <db:simplelist><db:member>events</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Close events are sent to widgets that the user wants to close, usually by choosing &quot;Close&quot; from the window menu, or by clicking the <db:guilabel>X</db:guilabel> title bar button. They are also sent when you call <db:link xlink:href="qwidget.xml#close">QWidget::close</db:link>() to close a widget programmatically.</db:para>
<db:para>Close events contain a flag that indicates whether the receiver wants the widget to be closed or not. When a widget accepts the close event, it is hidden (and destroyed if it was created with the <db:link xlink:href="qt.xml#WidgetAttribute-enum">Qt::WA_DeleteOnClose</db:link> flag). If it refuses to accept the close event nothing happens. (Under X11 it is possible that the window manager will forcibly close the window; but at the time of writing we are not aware of any window manager that does this.)</db:para>
<db:para>The event handler <db:link xlink:href="qwidget.xml#closeEvent">QWidget::closeEvent</db:link>() receives close events. The default implementation of this event handler accepts the close event. If you do not want your widget to be hidden, or want some special handling, you should reimplement the event handler and <db:link xlink:href="qevent.xml#ignore">ignore</db:link>() the event.</db:para>
<db:para>If you want the widget to be deleted when it is closed, create it with the <db:link xlink:href="qt.xml#WidgetAttribute-enum">Qt::WA_DeleteOnClose</db:link> flag. This is very useful for independent top-level windows in a multi-window application.</db:para>
<db:para><db:link xlink:href="qobject.xml">QObject</db:link>s emits the <db:link xlink:href="qobject.xml#destroyed">destroyed</db:link>() signal when they are deleted.</db:para>
<db:para>If the last top-level window is closed, the <db:link xlink:href="qguiapplication.xml#lastWindowClosed">QGuiApplication::lastWindowClosed</db:link>() signal is emitted.</db:para>
<db:para>The <db:link xlink:href="qevent.xml#accepted-prop">isAccepted</db:link>() function returns <db:code>true</db:code> if the event's receiver has agreed to close the widget; call <db:link xlink:href="qevent.xml#accept">accept</db:link>() to agree to close the widget and call <db:link xlink:href="qevent.xml#ignore">ignore</db:link>() if the receiver of this event does not want the widget to be closed.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwidget.xml#close">QWidget::close</db:link>()</db:member>
<db:member><db:link xlink:href="qwidget.xml#hide">QWidget::hide</db:link>()</db:member>
<db:member><db:link xlink:href="qobject.xml#destroyed">QObject::destroyed</db:link>()</db:member>
<db:member><db:link xlink:href="qcoreapplication.xml#exec">QCoreApplication::exec</db:link>()</db:member>
<db:member><db:link xlink:href="qcoreapplication.xml#quit">QCoreApplication::quit</db:link>()</db:member>
<db:member><db:link xlink:href="qguiapplication.xml#lastWindowClosed">QGuiApplication::lastWindowClosed</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QCloseEvent-2">
<db:title>QCloseEvent::QCloseEvent()</db:title>
<db:constructorsynopsis>
<db:methodname>QCloseEvent</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QCloseEvent()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a close event object.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qevent.xml#accept">accept</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
