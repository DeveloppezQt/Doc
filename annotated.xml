<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Annotated Class List</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>If you don't know the name of the class you want, but you know what the class should do, you might try looking here.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt classes with brief descriptions:</db:para>
<db:variablelist role="annotatedclasses">
<db:varlistentry>
<db:term><db:link xlink:href="enginioclientconnection.xml" xlink:role="class">EnginioClientConnection</db:link></db:term>
<db:listitem>
<db:para>EnginioClientConnection keeps track of the authenticated connection to the server.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="enginioidentity.xml" xlink:role="class">EnginioIdentity</db:link></db:term>
<db:listitem>
<db:para>Represents a user that is authenticated with the backend This class is an abstract base class for the different authentication methods and is never used directly.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="enginiomodel.xml" xlink:role="class">EnginioModel</db:link></db:term>
<db:listitem>
<db:para>EnginioModel represents data from Enginio as a QAbstractListModel.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="enginiooauth2authentication.xml" xlink:role="class">EnginioOAuth2Authentication</db:link></db:term>
<db:listitem>
<db:para>Represents a user that is authenticated directly by the backend using OAuth2 standard.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="enginioreply.xml" xlink:role="class">EnginioReply</db:link></db:term>
<db:listitem>
<db:para>The EnginioReply class contains the data from a request to the Enginio database.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractanimation.xml" xlink:role="class">QAbstractAnimation</db:link></db:term>
<db:listitem>
<db:para>The QAbstractAnimation class is the base of all animations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractbutton.xml" xlink:role="class">QAbstractButton</db:link></db:term>
<db:listitem>
<db:para>The QAbstractButton class is the abstract base class of button widgets, providing functionality common to buttons.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstracteventdispatcher.xml" xlink:role="class">QAbstractEventDispatcher</db:link></db:term>
<db:listitem>
<db:para>The QAbstractEventDispatcher class provides an interface to manage Qt's event queue.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractextensionfactory.xml" xlink:role="class">QAbstractExtensionFactory</db:link></db:term>
<db:listitem>
<db:para>The QAbstractExtensionFactory class provides an interface for extension factories in Qt Designer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractextensionmanager.xml" xlink:role="class">QAbstractExtensionManager</db:link></db:term>
<db:listitem>
<db:para>The QAbstractExtensionManager class provides an interface for extension managers in Qt Designer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractformbuilder.xml" xlink:role="class">QAbstractFormBuilder</db:link></db:term>
<db:listitem>
<db:para>The QAbstractFormBuilder class provides a default implementation for classes that create user interfaces at run-time.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractgraphicsshapeitem.xml" xlink:role="class">QAbstractGraphicsShapeItem</db:link></db:term>
<db:listitem>
<db:para>The QAbstractGraphicsShapeItem class provides a common base for all path items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractitemdelegate.xml" xlink:role="class">QAbstractItemDelegate</db:link></db:term>
<db:listitem>
<db:para>The QAbstractItemDelegate class is used to display and edit data items from a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractitemmodel.xml" xlink:role="class">QAbstractItemModel</db:link></db:term>
<db:listitem>
<db:para>The QAbstractItemModel class provides the abstract interface for item model classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractitemview.xml" xlink:role="class">QAbstractItemView</db:link></db:term>
<db:listitem>
<db:para>The QAbstractItemView class provides the basic functionality for item view classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractlistmodel.xml" xlink:role="class">QAbstractListModel</db:link></db:term>
<db:listitem>
<db:para>The QAbstractListModel class provides an abstract model that can be subclassed to create one-dimensional list models.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractmessagehandler.xml" xlink:role="class">QAbstractMessageHandler</db:link></db:term>
<db:listitem>
<db:para>The QAbstractMessageHandler class provides a callback interface for handling messages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractnativeeventfilter.xml" xlink:role="class">QAbstractNativeEventFilter</db:link></db:term>
<db:listitem>
<db:para>The QAbstractNativeEventFilter class provides an interface for receiving native events, such as MSG or XCB event structs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractnetworkcache.xml" xlink:role="class">QAbstractNetworkCache</db:link></db:term>
<db:listitem>
<db:para>The QAbstractNetworkCache class provides the interface for cache implementations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractopenglfunctions.xml" xlink:role="class">QAbstractOpenGLFunctions</db:link></db:term>
<db:listitem>
<db:para>The QAbstractOpenGLFunctions class is the base class of a family of classes that expose all functions for each OpenGL version and profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractplanarvideobuffer.xml" xlink:role="class">QAbstractPlanarVideoBuffer</db:link></db:term>
<db:listitem>
<db:para>The QAbstractPlanarVideoBuffer class is an abstraction for planar video data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractprintdialog.xml" xlink:role="class">QAbstractPrintDialog</db:link></db:term>
<db:listitem>
<db:para>The QAbstractPrintDialog class provides a base implementation for print dialogs used to configure printers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractproxymodel.xml" xlink:role="class">QAbstractProxyModel</db:link></db:term>
<db:listitem>
<db:para>The QAbstractProxyModel class provides a base class for proxy item models that can do sorting, filtering or other data processing tasks.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractscrollarea.xml" xlink:role="class">QAbstractScrollArea</db:link></db:term>
<db:listitem>
<db:para>The QAbstractScrollArea widget provides a scrolling area with on-demand scroll bars.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractslider.xml" xlink:role="class">QAbstractSlider</db:link></db:term>
<db:listitem>
<db:para>The QAbstractSlider class provides an integer value within a range.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractsocket.xml" xlink:role="class">QAbstractSocket</db:link></db:term>
<db:listitem>
<db:para>The QAbstractSocket class provides the base functionality common to all socket types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractspinbox.xml" xlink:role="class">QAbstractSpinBox</db:link></db:term>
<db:listitem>
<db:para>The QAbstractSpinBox class provides a spinbox and a line edit to display values.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractstate.xml" xlink:role="class">QAbstractState</db:link></db:term>
<db:listitem>
<db:para>The QAbstractState class is the base class of states of a QStateMachine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstracttablemodel.xml" xlink:role="class">QAbstractTableModel</db:link></db:term>
<db:listitem>
<db:para>The QAbstractTableModel class provides an abstract model that can be subclassed to create table models.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstracttextdocumentlayout.xml" xlink:role="class">QAbstractTextDocumentLayout</db:link></db:term>
<db:listitem>
<db:para>The QAbstractTextDocumentLayout class is an abstract base class used to implement custom layouts for QTextDocuments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstracttransition.xml" xlink:role="class">QAbstractTransition</db:link></db:term>
<db:listitem>
<db:para>The QAbstractTransition class is the base class of transitions between QAbstractState objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstracturiresolver.xml" xlink:role="class">QAbstractUriResolver</db:link></db:term>
<db:listitem>
<db:para>The QAbstractUriResolver class is a callback interface for resolving Uniform Resource Identifiers. A Uniform Resource Identifier (URI) is a string that uniquely identifies a resource. URIs are versatile global identifiers. It is often useful to transform a URI that identifies something logical into a URI that locates something physical (a URL), or to simply map a URI to a different URI. QAbstractUriResolver::resolve() provides this functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractvideobuffer.xml" xlink:role="class">QAbstractVideoBuffer</db:link></db:term>
<db:listitem>
<db:para>The QAbstractVideoBuffer class is an abstraction for video data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractvideofilter.xml" xlink:role="class">QAbstractVideoFilter</db:link></db:term>
<db:listitem>
<db:para>The QAbstractVideoFilter class represents a filter that is applied to the video frames received by a VideoOutput type.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractvideosurface.xml" xlink:role="class">QAbstractVideoSurface</db:link></db:term>
<db:listitem>
<db:para>The QAbstractVideoSurface class is a base class for video presentation surfaces.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractxmlnodemodel.xml" xlink:role="class">QAbstractXmlNodeModel</db:link></db:term>
<db:listitem>
<db:para>The QAbstractXmlNodeModel class is an abstract base class for modeling non-XML data to look like XML for QXmlQuery.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractxmlreceiver.xml" xlink:role="class">QAbstractXmlReceiver</db:link></db:term>
<db:listitem>
<db:para>The QAbstractXmlReceiver class provides a callback interface for transforming the output of a QXmlQuery.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccelerometer.xml" xlink:role="class">QAccelerometer</db:link></db:term>
<db:listitem>
<db:para>The QAccelerometer class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccelerometerfilter.xml" xlink:role="class">QAccelerometerFilter</db:link></db:term>
<db:listitem>
<db:para>The QAccelerometerFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccelerometerreading.xml" xlink:role="class">QAccelerometerReading</db:link></db:term>
<db:listitem>
<db:para>The QAccelerometerReading class reports on linear acceleration along the X, Y and Z axes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessible.xml" xlink:role="class">QAccessible</db:link></db:term>
<db:listitem>
<db:para>The QAccessible class provides enums and static functions related to accessibility.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibleactioninterface.xml" xlink:role="class">QAccessibleActionInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleActionInterface class implements support for invocable actions in the interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibleeditabletextinterface.xml" xlink:role="class">QAccessibleEditableTextInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleEditableTextInterface class implements support for objects with editable text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibleevent.xml" xlink:role="class">QAccessibleEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleEvent class is the base class for accessibility notifications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibleinterface.xml" xlink:role="class">QAccessibleInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleInterface class defines an interface that exposes information about accessible objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibleobject.xml" xlink:role="class">QAccessibleObject</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleObject class implements parts of the QAccessibleInterface for QObjects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibleplugin.xml" xlink:role="class">QAccessiblePlugin</db:link></db:term>
<db:listitem>
<db:para>The QAccessiblePlugin class provides an abstract base class for plugins provinding accessibility information for user interface elements.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessiblestatechangeevent.xml" xlink:role="class">QAccessibleStateChangeEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleStateChangeEvent notfies the accessibility framework that the state of an object has changed.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletablecellinterface.xml" xlink:role="class">QAccessibleTableCellInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTableCellInterface class implements support for the IAccessibleTable2 Cell interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletableinterface.xml" xlink:role="class">QAccessibleTableInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTableInterface class implements support for the IAccessibleTable2 interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletablemodelchangeevent.xml" xlink:role="class">QAccessibleTableModelChangeEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTableModelChangeEvent signifies a change in a table, list, or tree where cells are added or removed. If the change affected a number of rows, firstColumn and lastColumn will return -1. Likewise for columns, the row functions may return -1.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletextcursorevent.xml" xlink:role="class">QAccessibleTextCursorEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTextCursorEvent class notifies of cursor movements.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletextinsertevent.xml" xlink:role="class">QAccessibleTextInsertEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTextInsertEvent class notifies of text being inserted.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletextinterface.xml" xlink:role="class">QAccessibleTextInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTextInterface class implements support for text handling.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletextremoveevent.xml" xlink:role="class">QAccessibleTextRemoveEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTextRemoveEvent class notifies of text being deleted.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletextselectionevent.xml" xlink:role="class">QAccessibleTextSelectionEvent</db:link></db:term>
<db:listitem>
<db:para>QAccessibleTextSelectionEvent signals a change in the text selection of an object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletextupdateevent.xml" xlink:role="class">QAccessibleTextUpdateEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTextUpdateEvent class notifies about text changes. This is for accessibles that support editable text such as line edits. This event occurs for example when a portion of selected text gets replaced by pasting a new text or in override mode of editors.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessiblevaluechangeevent.xml" xlink:role="class">QAccessibleValueChangeEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleValueChangeEvent describes a change in value for an accessible object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessiblevalueinterface.xml" xlink:role="class">QAccessibleValueInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleValueInterface class implements support for objects that manipulate a value.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessiblewidget.xml" xlink:role="class">QAccessibleWidget</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleWidget class implements the QAccessibleInterface for QWidgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaction.xml" xlink:role="class">QAction</db:link></db:term>
<db:listitem>
<db:para>The QAction class provides an abstract user interface action that can be inserted into widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qactionevent.xml" xlink:role="class">QActionEvent</db:link></db:term>
<db:listitem>
<db:para>The QActionEvent class provides an event that is generated when a QAction is added, removed, or changed.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qactiongroup.xml" xlink:role="class">QActionGroup</db:link></db:term>
<db:listitem>
<db:para>The QActionGroup class groups actions together.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaltimeter.xml" xlink:role="class">QAltimeter</db:link></db:term>
<db:listitem>
<db:para>The QAltimeter class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaltimeterfilter.xml" xlink:role="class">QAltimeterFilter</db:link></db:term>
<db:listitem>
<db:para>The QAltimeterFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaltimeterreading.xml" xlink:role="class">QAltimeterReading</db:link></db:term>
<db:listitem>
<db:para>The QAltimeterReading class holds readings from the altimeter sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qambientlightfilter.xml" xlink:role="class">QAmbientLightFilter</db:link></db:term>
<db:listitem>
<db:para>The QAmbientLightFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qambientlightreading.xml" xlink:role="class">QAmbientLightReading</db:link></db:term>
<db:listitem>
<db:para>The QAmbientLightReading class represents one reading from the ambient light sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qambientlightsensor.xml" xlink:role="class">QAmbientLightSensor</db:link></db:term>
<db:listitem>
<db:para>The QAmbientLightSensor class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qambienttemperaturefilter.xml" xlink:role="class">QAmbientTemperatureFilter</db:link></db:term>
<db:listitem>
<db:para>The QAmbientTemperatureFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qambienttemperaturereading.xml" xlink:role="class">QAmbientTemperatureReading</db:link></db:term>
<db:listitem>
<db:para>The QAmbientTemperatureReading class holds readings of the ambient temperature.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qambienttemperaturesensor.xml" xlink:role="class">QAmbientTemperatureSensor</db:link></db:term>
<db:listitem>
<db:para>The QAmbientTemperatureSensor class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qandroidactivityresultreceiver.xml" xlink:role="class">QAndroidActivityResultReceiver</db:link></db:term>
<db:listitem>
<db:para>Interface used for callbacks from onActivityResult() in the main Android activity.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qandroidjnienvironment.xml" xlink:role="class">QAndroidJniEnvironment</db:link></db:term>
<db:listitem>
<db:para>The QAndroidJniEnvironment provides access to the JNI Environment.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qandroidjniobject.xml" xlink:role="class">QAndroidJniObject</db:link></db:term>
<db:listitem>
<db:para>Provides APIs to call Java code from C++.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qanimationgroup.xml" xlink:role="class">QAnimationGroup</db:link></db:term>
<db:listitem>
<db:para>The QAnimationGroup class is an abstract base class for groups of animations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qapplication.xml" xlink:role="class">QApplication</db:link></db:term>
<db:listitem>
<db:para>The QApplication class manages the GUI application's control flow and main settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qassociativeiterable.xml" xlink:role="class">QAssociativeIterable</db:link></db:term>
<db:listitem>
<db:para>The QAssociativeIterable class is an iterable interface for an associative container in a QVariant.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qatomicint.xml" xlink:role="class">QAtomicInt</db:link></db:term>
<db:listitem>
<db:para>The QAtomicInt class provides platform-independent atomic operations on int.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qatomicinteger.xml" xlink:role="class">QAtomicInteger</db:link></db:term>
<db:listitem>
<db:para>The QAtomicInteger class provides platform-independent atomic operations on integers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qatomicpointer.xml" xlink:role="class">QAtomicPointer</db:link></db:term>
<db:listitem>
<db:para>The QAtomicPointer class is a template class that provides platform-independent atomic operations on pointers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiobuffer.xml" xlink:role="class">QAudioBuffer</db:link></db:term>
<db:listitem>
<db:para>The QAudioBuffer class represents a collection of audio samples with a specific format and sample rate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiodecoder.xml" xlink:role="class">QAudioDecoder</db:link></db:term>
<db:listitem>
<db:para>The QAudioDecoder class allows decoding audio.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiodecodercontrol.xml" xlink:role="class">QAudioDecoderControl</db:link></db:term>
<db:listitem>
<db:para>The QAudioDecoderControl class provides access to the audio decoding functionality of a QMediaService.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiodeviceinfo.xml" xlink:role="class">QAudioDeviceInfo</db:link></db:term>
<db:listitem>
<db:para>The QAudioDeviceInfo class provides an interface to query audio devices and their functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudioencodersettings.xml" xlink:role="class">QAudioEncoderSettings</db:link></db:term>
<db:listitem>
<db:para>The QAudioEncoderSettings class provides a set of audio encoder settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudioencodersettingscontrol.xml" xlink:role="class">QAudioEncoderSettingsControl</db:link></db:term>
<db:listitem>
<db:para>The QAudioEncoderSettingsControl class provides access to the settings of a media service that performs audio encoding.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudioformat.xml" xlink:role="class">QAudioFormat</db:link></db:term>
<db:listitem>
<db:para>The QAudioFormat class stores audio stream parameter information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudioinput.xml" xlink:role="class">QAudioInput</db:link></db:term>
<db:listitem>
<db:para>The QAudioInput class provides an interface for receiving audio data from an audio input device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudioinputselectorcontrol.xml" xlink:role="class">QAudioInputSelectorControl</db:link></db:term>
<db:listitem>
<db:para>The QAudioInputSelectorControl class provides an audio input selector media control.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiooutput.xml" xlink:role="class">QAudioOutput</db:link></db:term>
<db:listitem>
<db:para>The QAudioOutput class provides an interface for sending audio data to an audio output device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiooutputselectorcontrol.xml" xlink:role="class">QAudioOutputSelectorControl</db:link></db:term>
<db:listitem>
<db:para>The QAudioOutputSelectorControl class provides an audio output selector media control.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudioprobe.xml" xlink:role="class">QAudioProbe</db:link></db:term>
<db:listitem>
<db:para>The QAudioProbe class allows you to monitor audio being played or recorded.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiorecorder.xml" xlink:role="class">QAudioRecorder</db:link></db:term>
<db:listitem>
<db:para>The QAudioRecorder class is used for the recording of audio.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiorolecontrol.xml" xlink:role="class">QAudioRoleControl</db:link></db:term>
<db:listitem>
<db:para>The QAudioRoleControl class provides control over the audio role of a media object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qauthenticator.xml" xlink:role="class">QAuthenticator</db:link></db:term>
<db:listitem>
<db:para>The QAuthenticator class provides an authentication object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaxaggregated.xml" xlink:role="class">QAxAggregated</db:link></db:term>
<db:listitem>
<db:para>The QAxAggregated class is an abstract base class for implementations of additional COM interfaces.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaxbase.xml" xlink:role="class">QAxBase</db:link></db:term>
<db:listitem>
<db:para>The QAxBase class is an abstract class that provides an API to initialize and access a COM object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaxbindable.xml" xlink:role="class">QAxBindable</db:link></db:term>
<db:listitem>
<db:para>The QAxBindable class provides an interface between a QWidget and an ActiveX client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaxfactory.xml" xlink:role="class">QAxFactory</db:link></db:term>
<db:listitem>
<db:para>The QAxFactory class defines a factory for the creation of COM components.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaxobject.xml" xlink:role="class">QAxObject</db:link></db:term>
<db:listitem>
<db:para>The QAxObject class provides a QObject that wraps a COM object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaxscript.xml" xlink:role="class">QAxScript</db:link></db:term>
<db:listitem>
<db:para>The QAxScript class provides a wrapper around script code.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaxscriptengine.xml" xlink:role="class">QAxScriptEngine</db:link></db:term>
<db:listitem>
<db:para>The QAxScriptEngine class provides a wrapper around a script engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaxscriptmanager.xml" xlink:role="class">QAxScriptManager</db:link></db:term>
<db:listitem>
<db:para>The QAxScriptManager class provides a bridge between application objects and script code.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaxselect.xml" xlink:role="class">QAxSelect</db:link></db:term>
<db:listitem>
<db:para>The QAxSelect class provides a selection dialog for registered COM components.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaxwidget.xml" xlink:role="class">QAxWidget</db:link></db:term>
<db:listitem>
<db:para>The QAxWidget class is a QWidget that wraps an ActiveX control.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbackingstore.xml" xlink:role="class">QBackingStore</db:link></db:term>
<db:listitem>
<db:para>The QBackingStore class provides a drawing area for QWindow.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbasictimer.xml" xlink:role="class">QBasicTimer</db:link></db:term>
<db:listitem>
<db:para>The QBasicTimer class provides timer events for objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbitarray.xml" xlink:role="class">QBitArray</db:link></db:term>
<db:listitem>
<db:para>The QBitArray class provides an array of bits.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbitmap.xml" xlink:role="class">QBitmap</db:link></db:term>
<db:listitem>
<db:para>The QBitmap class provides monochrome (1-bit depth) pixmaps.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothaddress.xml" xlink:role="class">QBluetoothAddress</db:link></db:term>
<db:listitem>
<db:para>The QBluetoothAddress class assigns an address to the Bluetooth device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothdevicediscoveryagent.xml" xlink:role="class">QBluetoothDeviceDiscoveryAgent</db:link></db:term>
<db:listitem>
<db:para>The QBluetoothDeviceDiscoveryAgent class discovers the Bluetooth devices nearby.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothdeviceinfo.xml" xlink:role="class">QBluetoothDeviceInfo</db:link></db:term>
<db:listitem>
<db:para>The QBluetoothDeviceInfo class stores information about the Bluetooth device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothhostinfo.xml" xlink:role="class">QBluetoothHostInfo</db:link></db:term>
<db:listitem>
<db:para>The QBluetoothHostInfo class encapsulates the details of a local QBluetooth device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothlocaldevice.xml" xlink:role="class">QBluetoothLocalDevice</db:link></db:term>
<db:listitem>
<db:para>The QBluetoothLocalDevice class enables access to the local Bluetooth device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothserver.xml" xlink:role="class">QBluetoothServer</db:link></db:term>
<db:listitem>
<db:para>The QBluetoothServer class uses the RFCOMM or L2cap protocol to communicate with a Bluetooth device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothservicediscoveryagent.xml" xlink:role="class">QBluetoothServiceDiscoveryAgent</db:link></db:term>
<db:listitem>
<db:para>The QBluetoothServiceDiscoveryAgent class enables you to query for Bluetooth services.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothserviceinfo.xml" xlink:role="class">QBluetoothServiceInfo</db:link></db:term>
<db:listitem>
<db:para>The QBluetoothServiceInfo class enables access to the attributes of a Bluetooth service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothsocket.xml" xlink:role="class">QBluetoothSocket</db:link></db:term>
<db:listitem>
<db:para>The QBluetoothSocket class enables connection to a Bluetooth device running a bluetooth server.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothtransfermanager.xml" xlink:role="class">QBluetoothTransferManager</db:link></db:term>
<db:listitem>
<db:para>The QBluetoothTransferManager class transfers data to another device using Object Push Profile (OPP).</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothtransferreply.xml" xlink:role="class">QBluetoothTransferReply</db:link></db:term>
<db:listitem>
<db:para>The QBluetoothTransferReply class stores the response for a data transfer request.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothtransferrequest.xml" xlink:role="class">QBluetoothTransferRequest</db:link></db:term>
<db:listitem>
<db:para>The QBluetoothTransferRequest class stores information about a data transfer request.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothuuid.xml" xlink:role="class">QBluetoothUuid</db:link></db:term>
<db:listitem>
<db:para>The QBluetoothUuid class generates a UUID for each Bluetooth service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qboxlayout.xml" xlink:role="class">QBoxLayout</db:link></db:term>
<db:listitem>
<db:para>The QBoxLayout class lines up child widgets horizontally or vertically.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbrush.xml" xlink:role="class">QBrush</db:link></db:term>
<db:listitem>
<db:para>The QBrush class defines the fill pattern of shapes drawn by QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbuffer.xml" xlink:role="class">QBuffer</db:link></db:term>
<db:listitem>
<db:para>The QBuffer class provides a QIODevice interface for a QByteArray.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbuttongroup.xml" xlink:role="class">QButtonGroup</db:link></db:term>
<db:listitem>
<db:para>The QButtonGroup class provides a container to organize groups of button widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearray.xml" xlink:role="class">QByteArray</db:link></db:term>
<db:listitem>
<db:para>The QByteArray class provides an array of bytes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearraymatcher.xml" xlink:role="class">QByteArrayMatcher</db:link></db:term>
<db:listitem>
<db:para>The QByteArrayMatcher class holds a sequence of bytes that can be quickly matched in a byte array.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcache.xml" xlink:role="class">QCache</db:link></db:term>
<db:listitem>
<db:para>The QCache class is a template class that provides a cache.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcalendarwidget.xml" xlink:role="class">QCalendarWidget</db:link></db:term>
<db:listitem>
<db:para>The QCalendarWidget class provides a monthly based calendar widget allowing the user to select a date.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamera.xml" xlink:role="class">QCamera</db:link></db:term>
<db:listitem>
<db:para>The QCamera class provides interface for system camera devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameracapturebufferformatcontrol.xml" xlink:role="class">QCameraCaptureBufferFormatControl</db:link></db:term>
<db:listitem>
<db:para>The QCameraCaptureBufferFormatControl class provides a control for setting the capture buffer format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameracapturedestinationcontrol.xml" xlink:role="class">QCameraCaptureDestinationControl</db:link></db:term>
<db:listitem>
<db:para>The QCameraCaptureDestinationControl class provides a control for setting capture destination.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameracontrol.xml" xlink:role="class">QCameraControl</db:link></db:term>
<db:listitem>
<db:para>The QCameraControl class is an abstract base class for classes that control still cameras or video cameras.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraexposure.xml" xlink:role="class">QCameraExposure</db:link></db:term>
<db:listitem>
<db:para>The QCameraExposure class provides interface for exposure related camera settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraexposurecontrol.xml" xlink:role="class">QCameraExposureControl</db:link></db:term>
<db:listitem>
<db:para>The QCameraExposureControl class allows controlling camera exposure parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamerafeedbackcontrol.xml" xlink:role="class">QCameraFeedbackControl</db:link></db:term>
<db:listitem>
<db:para>The QCameraFeedbackControl class allows controlling feedback (sounds etc) during camera operation</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraflashcontrol.xml" xlink:role="class">QCameraFlashControl</db:link></db:term>
<db:listitem>
<db:para>The QCameraFlashControl class allows controlling a camera's flash.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamerafocus.xml" xlink:role="class">QCameraFocus</db:link></db:term>
<db:listitem>
<db:para>The QCameraFocus class provides an interface for focus and zoom related camera settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamerafocuscontrol.xml" xlink:role="class">QCameraFocusControl</db:link></db:term>
<db:listitem>
<db:para>The QCameraFocusControl class supplies control for focusing related camera parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamerafocuszone.xml" xlink:role="class">QCameraFocusZone</db:link></db:term>
<db:listitem>
<db:para>The QCameraFocusZone class provides information on zones used for autofocusing a camera.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraimagecapture.xml" xlink:role="class">QCameraImageCapture</db:link></db:term>
<db:listitem>
<db:para>The QCameraImageCapture class is used for the recording of media content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraimagecapturecontrol.xml" xlink:role="class">QCameraImageCaptureControl</db:link></db:term>
<db:listitem>
<db:para>The QCameraImageCaptureControl class provides a control interface for image capture services.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraimageprocessing.xml" xlink:role="class">QCameraImageProcessing</db:link></db:term>
<db:listitem>
<db:para>The QCameraImageProcessing class provides an interface for image processing related camera settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraimageprocessingcontrol.xml" xlink:role="class">QCameraImageProcessingControl</db:link></db:term>
<db:listitem>
<db:para>The QCameraImageProcessingControl class provides an abstract class for controlling image processing parameters, like white balance, contrast, saturation, sharpening and denoising.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamerainfo.xml" xlink:role="class">QCameraInfo</db:link></db:term>
<db:listitem>
<db:para>The QCameraInfo class provides general information about camera devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamerainfocontrol.xml" xlink:role="class">QCameraInfoControl</db:link></db:term>
<db:listitem>
<db:para>The QCameraInfoControl class provides a camera info media control.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameralockscontrol.xml" xlink:role="class">QCameraLocksControl</db:link></db:term>
<db:listitem>
<db:para>The QCameraLocksControl class is an abstract base class for classes that control still cameras or video cameras.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraviewfinder.xml" xlink:role="class">QCameraViewfinder</db:link></db:term>
<db:listitem>
<db:para>The QCameraViewfinder class provides a camera viewfinder widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraviewfindersettings.xml" xlink:role="class">QCameraViewfinderSettings</db:link></db:term>
<db:listitem>
<db:para>The QCameraViewfinderSettings class provides a set of viewfinder settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraviewfindersettingscontrol.xml" xlink:role="class">QCameraViewfinderSettingsControl</db:link></db:term>
<db:listitem>
<db:para>The QCameraViewfinderSettingsControl class provides an abstract class for controlling camera viewfinder parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraviewfindersettingscontrol2.xml" xlink:role="class">QCameraViewfinderSettingsControl2</db:link></db:term>
<db:listitem>
<db:para>The QCameraViewfinderSettingsControl2 class provides access to the viewfinder settings of a camera media service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamerazoomcontrol.xml" xlink:role="class">QCameraZoomControl</db:link></db:term>
<db:listitem>
<db:para>The QCameraZoomControl class supplies control for optical and digital camera zoom.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcanbus.xml" xlink:role="class">QCanBus</db:link></db:term>
<db:listitem>
<db:para>The QCanBus class handles registration and creation of bus backends.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcanbusdevice.xml" xlink:role="class">QCanBusDevice</db:link></db:term>
<db:listitem>
<db:para>The QCanBusDevice class is the interface class for CAN bus.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcanbusfactory.xml" xlink:role="class">QCanBusFactory</db:link></db:term>
<db:listitem>
<db:para>The QCanBusFactory class is a factory class used as the plugin interface for CAN bus plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcanbusframe.xml" xlink:role="class">QCanBusFrame</db:link></db:term>
<db:listitem>
<db:para>QCanBusFrame is a container class representing a single CAN frame.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qchar.xml" xlink:role="class">QChar</db:link></db:term>
<db:listitem>
<db:para>The QChar class provides a 16-bit Unicode character.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcheckbox.xml" xlink:role="class">QCheckBox</db:link></db:term>
<db:listitem>
<db:para>The QCheckBox widget provides a checkbox with a text label.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qchildevent.xml" xlink:role="class">QChildEvent</db:link></db:term>
<db:listitem>
<db:para>The QChildEvent class contains event parameters for child object events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qclipboard.xml" xlink:role="class">QClipboard</db:link></db:term>
<db:listitem>
<db:para>The QClipboard class provides access to the window system clipboard.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcloseevent.xml" xlink:role="class">QCloseEvent</db:link></db:term>
<db:listitem>
<db:para>The QCloseEvent class contains parameters that describe a close event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcocoanativecontext.xml" xlink:role="class">QCocoaNativeContext</db:link></db:term>
<db:listitem>
<db:para>A class encapsulating a Cocoa NSOpenGLContext.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcocoawindowfunctions.xml" xlink:role="class">QCocoaWindowFunctions</db:link></db:term>
<db:listitem>
<db:para>The QCocoaWindowFunctions class is an inline class containing miscellaneous functionality for NSWindow and NSView window specific functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcollator.xml" xlink:role="class">QCollator</db:link></db:term>
<db:listitem>
<db:para>The QCollator class compares strings according to a localized collation algorithm.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcollatorsortkey.xml" xlink:role="class">QCollatorSortKey</db:link></db:term>
<db:listitem>
<db:para>The QCollatorSortKey class can be used to speed up string collation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcolor.xml" xlink:role="class">QColor</db:link></db:term>
<db:listitem>
<db:para>The QColor class provides colors based on RGB, HSV or CMYK values.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcolordialog.xml" xlink:role="class">QColorDialog</db:link></db:term>
<db:listitem>
<db:para>The QColorDialog class provides a dialog widget for specifying colors.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcolormap.xml" xlink:role="class">QColormap</db:link></db:term>
<db:listitem>
<db:para>The QColormap class maps device independent QColors to device dependent pixel values.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcolumnview.xml" xlink:role="class">QColumnView</db:link></db:term>
<db:listitem>
<db:para>The QColumnView class provides a model/view implementation of a column view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcombobox.xml" xlink:role="class">QComboBox</db:link></db:term>
<db:listitem>
<db:para>The QComboBox widget is a combined button and popup list.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcommandlineoption.xml" xlink:role="class">QCommandLineOption</db:link></db:term>
<db:listitem>
<db:para>The QCommandLineOption class defines a possible command-line option.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcommandlineparser.xml" xlink:role="class">QCommandLineParser</db:link></db:term>
<db:listitem>
<db:para>The QCommandLineParser class provides a means for handling the command line options.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcommandlinkbutton.xml" xlink:role="class">QCommandLinkButton</db:link></db:term>
<db:listitem>
<db:para>The QCommandLinkButton widget provides a Vista style command link button.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcommonstyle.xml" xlink:role="class">QCommonStyle</db:link></db:term>
<db:listitem>
<db:para>The QCommonStyle class encapsulates the common Look and Feel of a GUI.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcompass.xml" xlink:role="class">QCompass</db:link></db:term>
<db:listitem>
<db:para>The QCompass class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcompassfilter.xml" xlink:role="class">QCompassFilter</db:link></db:term>
<db:listitem>
<db:para>The QCompassFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcompassreading.xml" xlink:role="class">QCompassReading</db:link></db:term>
<db:listitem>
<db:para>The QCompassReading class represents one reading from a compass.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcompleter.xml" xlink:role="class">QCompleter</db:link></db:term>
<db:listitem>
<db:para>The QCompleter class provides completions based on an item model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qconicalgradient.xml" xlink:role="class">QConicalGradient</db:link></db:term>
<db:listitem>
<db:para>The QConicalGradient class is used in combination with QBrush to specify a conical gradient brush.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcontextmenuevent.xml" xlink:role="class">QContextMenuEvent</db:link></db:term>
<db:listitem>
<db:para>The QContextMenuEvent class contains parameters that describe a context menu event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcontiguouscache.xml" xlink:role="class">QContiguousCache</db:link></db:term>
<db:listitem>
<db:para>The QContiguousCache class is a template class that provides a contiguous cache.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcoreapplication.xml" xlink:role="class">QCoreApplication</db:link></db:term>
<db:listitem>
<db:para>The QCoreApplication class provides an event loop for Qt applications without UI.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcryptographichash.xml" xlink:role="class">QCryptographicHash</db:link></db:term>
<db:listitem>
<db:para>The QCryptographicHash class provides a way to generate cryptographic hashes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcursor.xml" xlink:role="class">QCursor</db:link></db:term>
<db:listitem>
<db:para>The QCursor class provides a mouse cursor with an arbitrary shape.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusabstractadaptor.xml" xlink:role="class">QDBusAbstractAdaptor</db:link></db:term>
<db:listitem>
<db:para>The QDBusAbstractAdaptor class is the base class of D-Bus adaptor classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusabstractinterface.xml" xlink:role="class">QDBusAbstractInterface</db:link></db:term>
<db:listitem>
<db:para>The QDBusAbstractInterface class is the base class for all D-Bus interfaces in the Qt D-Bus binding, allowing access to remote interfaces</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusargument.xml" xlink:role="class">QDBusArgument</db:link></db:term>
<db:listitem>
<db:para>The QDBusArgument class is used to marshall and demarshall D-Bus arguments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusconnection.xml" xlink:role="class">QDBusConnection</db:link></db:term>
<db:listitem>
<db:para>The QDBusConnection class represents a connection to the D-Bus bus daemon.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusconnectioninterface.xml" xlink:role="class">QDBusConnectionInterface</db:link></db:term>
<db:listitem>
<db:para>The QDBusConnectionInterface class provides access to the D-Bus bus daemon service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbuscontext.xml" xlink:role="class">QDBusContext</db:link></db:term>
<db:listitem>
<db:para>The QDBusContext class allows slots to determine the D-Bus context of the calls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbuserror.xml" xlink:role="class">QDBusError</db:link></db:term>
<db:listitem>
<db:para>The QDBusError class represents an error received from the D-Bus bus or from remote applications found in the bus.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusinterface.xml" xlink:role="class">QDBusInterface</db:link></db:term>
<db:listitem>
<db:para>The QDBusInterface class is a proxy for interfaces on remote objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusmessage.xml" xlink:role="class">QDBusMessage</db:link></db:term>
<db:listitem>
<db:para>The QDBusMessage class represents one message sent or received over the D-Bus bus.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusobjectpath.xml" xlink:role="class">QDBusObjectPath</db:link></db:term>
<db:listitem>
<db:para>The QDBusObjectPath class enables the programmer to identify the OBJECT_PATH type provided by the D-Bus typesystem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbuspendingcall.xml" xlink:role="class">QDBusPendingCall</db:link></db:term>
<db:listitem>
<db:para>The QDBusPendingCall class refers to one pending asynchronous call</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbuspendingcallwatcher.xml" xlink:role="class">QDBusPendingCallWatcher</db:link></db:term>
<db:listitem>
<db:para>The QDBusPendingCallWatcher class provides a convenient way for waiting for asynchronous replies</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbuspendingreply.xml" xlink:role="class">QDBusPendingReply</db:link></db:term>
<db:listitem>
<db:para>The QDBusPendingReply class contains the reply to an asynchronous method call</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusreply.xml" xlink:role="class">QDBusReply</db:link></db:term>
<db:listitem>
<db:para>The QDBusReply class stores the reply for a method call to a remote object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusserver.xml" xlink:role="class">QDBusServer</db:link></db:term>
<db:listitem>
<db:para>The QDBusServer class provides peer-to-peer communication between processes on the same computer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusservicewatcher.xml" xlink:role="class">QDBusServiceWatcher</db:link></db:term>
<db:listitem>
<db:para>The QDBusServiceWatcher class allows the user to watch for a bus service change.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbussignature.xml" xlink:role="class">QDBusSignature</db:link></db:term>
<db:listitem>
<db:para>The QDBusSignature class enables the programmer to identify the SIGNATURE type provided by the D-Bus typesystem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusunixfiledescriptor.xml" xlink:role="class">QDBusUnixFileDescriptor</db:link></db:term>
<db:listitem>
<db:para>The QDBusUnixFileDescriptor class holds one Unix file descriptor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusvariant.xml" xlink:role="class">QDBusVariant</db:link></db:term>
<db:listitem>
<db:para>The QDBusVariant class enables the programmer to identify the variant type provided by the D-Bus typesystem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdbusvirtualobject.xml" xlink:role="class">QDBusVirtualObject</db:link></db:term>
<db:listitem>
<db:para>The QDBusVirtualObject class is used to handle several DBus paths with one class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdatastream.xml" xlink:role="class">QDataStream</db:link></db:term>
<db:listitem>
<db:para>The QDataStream class provides serialization of binary data to a QIODevice.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdatawidgetmapper.xml" xlink:role="class">QDataWidgetMapper</db:link></db:term>
<db:listitem>
<db:para>The QDataWidgetMapper class provides mapping between a section of a data model to widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdate.xml" xlink:role="class">QDate</db:link></db:term>
<db:listitem>
<db:para>The QDate class provides date functions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdateedit.xml" xlink:role="class">QDateEdit</db:link></db:term>
<db:listitem>
<db:para>The QDateEdit class provides a widget for editing dates based on the QDateTimeEdit widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdatetime.xml" xlink:role="class">QDateTime</db:link></db:term>
<db:listitem>
<db:para>The QDateTime class provides date and time functions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdatetimeedit.xml" xlink:role="class">QDateTimeEdit</db:link></db:term>
<db:listitem>
<db:para>The QDateTimeEdit class provides a widget for editing dates and times.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdebug.xml" xlink:role="class">QDebug</db:link></db:term>
<db:listitem>
<db:para>The QDebug class provides an output stream for debugging information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdebugstatesaver.xml" xlink:role="class">QDebugStateSaver</db:link></db:term>
<db:listitem>
<db:para>Convenience class for custom QDebug operators</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesigneractioneditorinterface.xml" xlink:role="class">QDesignerActionEditorInterface</db:link></db:term>
<db:listitem>
<db:para>The QDesignerActionEditorInterface class allows you to change the focus of Qt Designer's action editor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignercontainerextension.xml" xlink:role="class">QDesignerContainerExtension</db:link></db:term>
<db:listitem>
<db:para>The QDesignerContainerExtension class allows you to add pages to a custom multi-page container in Qt Designer's workspace.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignercustomwidgetcollectioninterface.xml" xlink:role="class">QDesignerCustomWidgetCollectionInterface</db:link></db:term>
<db:listitem>
<db:para>The QDesignerCustomWidgetCollectionInterface class allows you to include several custom widgets in one single library.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignercustomwidgetinterface.xml" xlink:role="class">QDesignerCustomWidgetInterface</db:link></db:term>
<db:listitem>
<db:para>The QDesignerCustomWidgetInterface class enables Qt Designer to access and construct custom widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignerdynamicpropertysheetextension.xml" xlink:role="class">QDesignerDynamicPropertySheetExtension</db:link></db:term>
<db:listitem>
<db:para>The QDesignerDynamicPropertySheetExtension class allows you to manipulate a widget's dynamic properties in Qt Designer's property editor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignerformeditorinterface.xml" xlink:role="class">QDesignerFormEditorInterface</db:link></db:term>
<db:listitem>
<db:para>The QDesignerFormEditorInterface class allows you to access Qt Designer's various components.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignerformwindowcursorinterface.xml" xlink:role="class">QDesignerFormWindowCursorInterface</db:link></db:term>
<db:listitem>
<db:para>The QDesignerFormWindowCursorInterface class allows you to query and modify a form window's widget selection, and in addition modify the properties of all the form's widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignerformwindowinterface.xml" xlink:role="class">QDesignerFormWindowInterface</db:link></db:term>
<db:listitem>
<db:para>The QDesignerFormWindowInterface class allows you to query and manipulate form windows appearing in Qt Designer's workspace.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignerformwindowmanagerinterface.xml" xlink:role="class">QDesignerFormWindowManagerInterface</db:link></db:term>
<db:listitem>
<db:para>The QDesignerFormWindowManagerInterface class allows you to manipulate the collection of form windows in Qt Designer, and control Qt Designer's form editing actions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignermembersheetextension.xml" xlink:role="class">QDesignerMemberSheetExtension</db:link></db:term>
<db:listitem>
<db:para>The QDesignerMemberSheetExtension class allows you to manipulate a widget's member functions which is displayed when configuring connections using Qt Designer's mode for editing signals and slots.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignerobjectinspectorinterface.xml" xlink:role="class">QDesignerObjectInspectorInterface</db:link></db:term>
<db:listitem>
<db:para>The QDesignerObjectInspectorInterface class allows you to change the focus of Qt Designer's object inspector.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignerpropertyeditorinterface.xml" xlink:role="class">QDesignerPropertyEditorInterface</db:link></db:term>
<db:listitem>
<db:para>The QDesignerPropertyEditorInterface class allows you to query and manipulate the current state of Qt Designer's property editor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignerpropertysheetextension.xml" xlink:role="class">QDesignerPropertySheetExtension</db:link></db:term>
<db:listitem>
<db:para>The QDesignerPropertySheetExtension class allows you to manipulate a widget's properties which is displayed in Qt Designer's property editor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignertaskmenuextension.xml" xlink:role="class">QDesignerTaskMenuExtension</db:link></db:term>
<db:listitem>
<db:para>The QDesignerTaskMenuExtension class allows you to add custom menu entries to Qt Designer's task menu.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignerwidgetboxinterface.xml" xlink:role="class">QDesignerWidgetBoxInterface</db:link></db:term>
<db:listitem>
<db:para>The QDesignerWidgetBoxInterface class allows you to control the contents of Qt Designer's widget box.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesktopservices.xml" xlink:role="class">QDesktopServices</db:link></db:term>
<db:listitem>
<db:para>The QDesktopServices class provides methods for accessing common desktop services.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesktopwidget.xml" xlink:role="class">QDesktopWidget</db:link></db:term>
<db:listitem>
<db:para>The QDesktopWidget class provides access to screen information on multi-head systems.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdial.xml" xlink:role="class">QDial</db:link></db:term>
<db:listitem>
<db:para>The QDial class provides a rounded range control (like a speedometer or potentiometer).</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdialog.xml" xlink:role="class">QDialog</db:link></db:term>
<db:listitem>
<db:para>The QDialog class is the base class of dialog windows.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdialogbuttonbox.xml" xlink:role="class">QDialogButtonBox</db:link></db:term>
<db:listitem>
<db:para>The QDialogButtonBox class is a widget that presents buttons in a layout that is appropriate to the current widget style.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdir.xml" xlink:role="class">QDir</db:link></db:term>
<db:listitem>
<db:para>The QDir class provides access to directory structures and their contents.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdiriterator.xml" xlink:role="class">QDirIterator</db:link></db:term>
<db:listitem>
<db:para>The QDirIterator class provides an iterator for directory entrylists.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdistancefilter.xml" xlink:role="class">QDistanceFilter</db:link></db:term>
<db:listitem>
<db:para>The QDistanceFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdistancereading.xml" xlink:role="class">QDistanceReading</db:link></db:term>
<db:listitem>
<db:para>The QDistanceReading class holds distance reading in cm from the proximity sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdistancesensor.xml" xlink:role="class">QDistanceSensor</db:link></db:term>
<db:listitem>
<db:para>The QDistanceSensor class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdnsdomainnamerecord.xml" xlink:role="class">QDnsDomainNameRecord</db:link></db:term>
<db:listitem>
<db:para>The QDnsDomainNameRecord class stores information about a domain name record.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdnshostaddressrecord.xml" xlink:role="class">QDnsHostAddressRecord</db:link></db:term>
<db:listitem>
<db:para>The QDnsHostAddressRecord class stores information about a host address record.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdnslookup.xml" xlink:role="class">QDnsLookup</db:link></db:term>
<db:listitem>
<db:para>The QDnsLookup class represents a DNS lookup.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdnsmailexchangerecord.xml" xlink:role="class">QDnsMailExchangeRecord</db:link></db:term>
<db:listitem>
<db:para>The QDnsMailExchangeRecord class stores information about a DNS MX record.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdnsservicerecord.xml" xlink:role="class">QDnsServiceRecord</db:link></db:term>
<db:listitem>
<db:para>The QDnsServiceRecord class stores information about a DNS SRV record.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdnstextrecord.xml" xlink:role="class">QDnsTextRecord</db:link></db:term>
<db:listitem>
<db:para>The QDnsTextRecord class stores information about a DNS TXT record.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdockwidget.xml" xlink:role="class">QDockWidget</db:link></db:term>
<db:listitem>
<db:para>The QDockWidget class provides a widget that can be docked inside a QMainWindow or floated as a top-level window on the desktop.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomattr.xml" xlink:role="class">QDomAttr</db:link></db:term>
<db:listitem>
<db:para>The QDomAttr class represents one attribute of a QDomElement.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomcdatasection.xml" xlink:role="class">QDomCDATASection</db:link></db:term>
<db:listitem>
<db:para>The QDomCDATASection class represents an XML CDATA section.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomcharacterdata.xml" xlink:role="class">QDomCharacterData</db:link></db:term>
<db:listitem>
<db:para>The QDomCharacterData class represents a generic string in the DOM.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomcomment.xml" xlink:role="class">QDomComment</db:link></db:term>
<db:listitem>
<db:para>The QDomComment class represents an XML comment.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomdocument.xml" xlink:role="class">QDomDocument</db:link></db:term>
<db:listitem>
<db:para>The QDomDocument class represents an XML document.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomdocumentfragment.xml" xlink:role="class">QDomDocumentFragment</db:link></db:term>
<db:listitem>
<db:para>The QDomDocumentFragment class is a tree of QDomNodes which is not usually a complete QDomDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomdocumenttype.xml" xlink:role="class">QDomDocumentType</db:link></db:term>
<db:listitem>
<db:para>The QDomDocumentType class is the representation of the DTD in the document tree.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomelement.xml" xlink:role="class">QDomElement</db:link></db:term>
<db:listitem>
<db:para>The QDomElement class represents one element in the DOM tree.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomentity.xml" xlink:role="class">QDomEntity</db:link></db:term>
<db:listitem>
<db:para>The QDomEntity class represents an XML entity.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomentityreference.xml" xlink:role="class">QDomEntityReference</db:link></db:term>
<db:listitem>
<db:para>The QDomEntityReference class represents an XML entity reference.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomimplementation.xml" xlink:role="class">QDomImplementation</db:link></db:term>
<db:listitem>
<db:para>The QDomImplementation class provides information about the features of the DOM implementation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomnamednodemap.xml" xlink:role="class">QDomNamedNodeMap</db:link></db:term>
<db:listitem>
<db:para>The QDomNamedNodeMap class contains a collection of nodes that can be accessed by name.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomnode.xml" xlink:role="class">QDomNode</db:link></db:term>
<db:listitem>
<db:para>The QDomNode class is the base class for all the nodes in a DOM tree.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomnodelist.xml" xlink:role="class">QDomNodeList</db:link></db:term>
<db:listitem>
<db:para>The QDomNodeList class is a list of QDomNode objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomnotation.xml" xlink:role="class">QDomNotation</db:link></db:term>
<db:listitem>
<db:para>The QDomNotation class represents an XML notation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomprocessinginstruction.xml" xlink:role="class">QDomProcessingInstruction</db:link></db:term>
<db:listitem>
<db:para>The QDomProcessingInstruction class represents an XML processing instruction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdomtext.xml" xlink:role="class">QDomText</db:link></db:term>
<db:listitem>
<db:para>The QDomText class represents text data in the parsed XML document.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdoublespinbox.xml" xlink:role="class">QDoubleSpinBox</db:link></db:term>
<db:listitem>
<db:para>The QDoubleSpinBox class provides a spin box widget that takes doubles.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdoublevalidator.xml" xlink:role="class">QDoubleValidator</db:link></db:term>
<db:listitem>
<db:para>The QDoubleValidator class provides range checking of floating-point numbers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdrag.xml" xlink:role="class">QDrag</db:link></db:term>
<db:listitem>
<db:para>The QDrag class provides support for MIME-based drag and drop data transfer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdragenterevent.xml" xlink:role="class">QDragEnterEvent</db:link></db:term>
<db:listitem>
<db:para>The QDragEnterEvent class provides an event which is sent to a widget when a drag and drop action enters it.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdragleaveevent.xml" xlink:role="class">QDragLeaveEvent</db:link></db:term>
<db:listitem>
<db:para>The QDragLeaveEvent class provides an event that is sent to a widget when a drag and drop action leaves it.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdragmoveevent.xml" xlink:role="class">QDragMoveEvent</db:link></db:term>
<db:listitem>
<db:para>The QDragMoveEvent class provides an event which is sent while a drag and drop action is in progress.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdropevent.xml" xlink:role="class">QDropEvent</db:link></db:term>
<db:listitem>
<db:para>The QDropEvent class provides an event which is sent when a drag and drop action is completed.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdynamicpropertychangeevent.xml" xlink:role="class">QDynamicPropertyChangeEvent</db:link></db:term>
<db:listitem>
<db:para>The QDynamicPropertyChangeEvent class contains event parameters for dynamic property change events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qeglnativecontext.xml" xlink:role="class">QEGLNativeContext</db:link></db:term>
<db:listitem>
<db:para>A class encapsulating an EGL context and display handle</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qeasingcurve.xml" xlink:role="class">QEasingCurve</db:link></db:term>
<db:listitem>
<db:para>The QEasingCurve class provides easing curves for controlling animation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qeglfsfunctions.xml" xlink:role="class">QEglFSFunctions</db:link></db:term>
<db:listitem>
<db:para>The QEglFSFunctions class is an inline class containing platform-specific functionality for the eglfs platform plugin that is typically used on systems running Embedded Linux or Android.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qelapsedtimer.xml" xlink:role="class">QElapsedTimer</db:link></db:term>
<db:listitem>
<db:para>The QElapsedTimer class provides a fast way to calculate elapsed times.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qenablesharedfromthis.xml" xlink:role="class">QEnableSharedFromThis</db:link></db:term>
<db:listitem>
<db:para>A base class that allows obtaining a QSharedPointer for an object already managed by a shared pointer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qenterevent.xml" xlink:role="class">QEnterEvent</db:link></db:term>
<db:listitem>
<db:para>The QEnterEvent class contains parameters that describe an enter event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qerrormessage.xml" xlink:role="class">QErrorMessage</db:link></db:term>
<db:listitem>
<db:para>The QErrorMessage class provides an error message display dialog.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qevent.xml" xlink:role="class">QEvent</db:link></db:term>
<db:listitem>
<db:para>The QEvent class is the base class of all event classes. Event objects contain event parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qeventloop.xml" xlink:role="class">QEventLoop</db:link></db:term>
<db:listitem>
<db:para>The QEventLoop class provides a means of entering and leaving an event loop.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qeventlooplocker.xml" xlink:role="class">QEventLoopLocker</db:link></db:term>
<db:listitem>
<db:para>The QEventLoopLocker class provides a means to quit an event loop when it is no longer needed.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qeventtransition.xml" xlink:role="class">QEventTransition</db:link></db:term>
<db:listitem>
<db:para>The QEventTransition class provides a QObject-specific transition for Qt events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qexception.xml" xlink:role="class">QException</db:link></db:term>
<db:listitem>
<db:para>The QException class provides a base class for exceptions that can transferred across threads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qexplicitlyshareddatapointer.xml" xlink:role="class">QExplicitlySharedDataPointer</db:link></db:term>
<db:listitem>
<db:para>The QExplicitlySharedDataPointer class represents a pointer to an explicitly shared object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qexposeevent.xml" xlink:role="class">QExposeEvent</db:link></db:term>
<db:listitem>
<db:para>The QExposeEvent class contains event parameters for expose events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qextensionfactory.xml" xlink:role="class">QExtensionFactory</db:link></db:term>
<db:listitem>
<db:para>The QExtensionFactory class allows you to create a factory that is able to make instances of custom extensions in Qt Designer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qextensionmanager.xml" xlink:role="class">QExtensionManager</db:link></db:term>
<db:listitem>
<db:para>The QExtensionManager class provides extension management facilities for Qt Designer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfile.xml" xlink:role="class">QFile</db:link></db:term>
<db:listitem>
<db:para>The QFile class provides an interface for reading from and writing to files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfiledevice.xml" xlink:role="class">QFileDevice</db:link></db:term>
<db:listitem>
<db:para>The QFileDevice class provides an interface for reading from and writing to open files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfiledialog.xml" xlink:role="class">QFileDialog</db:link></db:term>
<db:listitem>
<db:para>The QFileDialog class provides a dialog that allow users to select files or directories.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfileiconprovider.xml" xlink:role="class">QFileIconProvider</db:link></db:term>
<db:listitem>
<db:para>The QFileIconProvider class provides file icons for the QDirModel and the QFileSystemModel classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfileinfo.xml" xlink:role="class">QFileInfo</db:link></db:term>
<db:listitem>
<db:para>The QFileInfo class provides system-independent file information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfileopenevent.xml" xlink:role="class">QFileOpenEvent</db:link></db:term>
<db:listitem>
<db:para>The QFileOpenEvent class provides an event that will be sent when there is a request to open a file or a URL.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfileselector.xml" xlink:role="class">QFileSelector</db:link></db:term>
<db:listitem>
<db:para>QFileSelector provides a convenient way of selecting file variants.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfilesystemmodel.xml" xlink:role="class">QFileSystemModel</db:link></db:term>
<db:listitem>
<db:para>The QFileSystemModel class provides a data model for the local filesystem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfilesystemwatcher.xml" xlink:role="class">QFileSystemWatcher</db:link></db:term>
<db:listitem>
<db:para>The QFileSystemWatcher class provides an interface for monitoring files and directories for modifications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfinalstate.xml" xlink:role="class">QFinalState</db:link></db:term>
<db:listitem>
<db:para>The QFinalState class provides a final state.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qflag.xml" xlink:role="class">QFlag</db:link></db:term>
<db:listitem>
<db:para>The QFlag class is a helper data type for QFlags.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qflags.xml" xlink:role="class">QFlags</db:link></db:term>
<db:listitem>
<db:para>The QFlags class provides a type-safe way of storing OR-combinations of enum values.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfocusevent.xml" xlink:role="class">QFocusEvent</db:link></db:term>
<db:listitem>
<db:para>The QFocusEvent class contains event parameters for widget focus events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfocusframe.xml" xlink:role="class">QFocusFrame</db:link></db:term>
<db:listitem>
<db:para>The QFocusFrame widget provides a focus frame which can be outside of a widget's normal paintable area.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfont.xml" xlink:role="class">QFont</db:link></db:term>
<db:listitem>
<db:para>The QFont class specifies a font used for drawing text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfontcombobox.xml" xlink:role="class">QFontComboBox</db:link></db:term>
<db:listitem>
<db:para>The QFontComboBox widget is a combobox that lets the user select a font family.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfontdatabase.xml" xlink:role="class">QFontDatabase</db:link></db:term>
<db:listitem>
<db:para>The QFontDatabase class provides information about the fonts available in the underlying window system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfontdialog.xml" xlink:role="class">QFontDialog</db:link></db:term>
<db:listitem>
<db:para>The QFontDialog class provides a dialog widget for selecting a font.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfontinfo.xml" xlink:role="class">QFontInfo</db:link></db:term>
<db:listitem>
<db:para>The QFontInfo class provides general information about fonts.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfontmetrics.xml" xlink:role="class">QFontMetrics</db:link></db:term>
<db:listitem>
<db:para>The QFontMetrics class provides font metrics information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfontmetricsf.xml" xlink:role="class">QFontMetricsF</db:link></db:term>
<db:listitem>
<db:para>The QFontMetricsF class provides font metrics information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qformbuilder.xml" xlink:role="class">QFormBuilder</db:link></db:term>
<db:listitem>
<db:para>The QFormBuilder class is used to dynamically construct user interfaces from UI files at run-time.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qformlayout.xml" xlink:role="class">QFormLayout</db:link></db:term>
<db:listitem>
<db:para>The QFormLayout class manages forms of input widgets and their associated labels.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qframe.xml" xlink:role="class">QFrame</db:link></db:term>
<db:listitem>
<db:para>The QFrame class is the base class of widgets that can have a frame.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfuture.xml" xlink:role="class">QFuture</db:link></db:term>
<db:listitem>
<db:para>The QFuture class represents the result of an asynchronous computation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfutureiterator.xml" xlink:role="class">QFutureIterator</db:link></db:term>
<db:listitem>
<db:para>The QFutureIterator class provides a Java-style const iterator for QFuture.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfuturesynchronizer.xml" xlink:role="class">QFutureSynchronizer</db:link></db:term>
<db:listitem>
<db:para>The QFutureSynchronizer class is a convenience class that simplifies QFuture synchronization.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfuturewatcher.xml" xlink:role="class">QFutureWatcher</db:link></db:term>
<db:listitem>
<db:para>The QFutureWatcher class allows monitoring a QFuture using signals and slots.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qglxnativecontext.xml" xlink:role="class">QGLXNativeContext</db:link></db:term>
<db:listitem>
<db:para>A class encapsulating a GLXContext and related native handles.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgenericargument.xml" xlink:role="class">QGenericArgument</db:link></db:term>
<db:listitem>
<db:para>The QGenericArgument class is an internal helper class for marshalling arguments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgenericmatrix.xml" xlink:role="class">QGenericMatrix</db:link></db:term>
<db:listitem>
<db:para>The QGenericMatrix class is a template class that represents a NxM transformation matrix with N columns and M rows.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgenericplugin.xml" xlink:role="class">QGenericPlugin</db:link></db:term>
<db:listitem>
<db:para>The QGenericPlugin class is an abstract base class for plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgenericpluginfactory.xml" xlink:role="class">QGenericPluginFactory</db:link></db:term>
<db:listitem>
<db:para>The QGenericPluginFactory class creates plugin drivers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgenericreturnargument.xml" xlink:role="class">QGenericReturnArgument</db:link></db:term>
<db:listitem>
<db:para>The QGenericReturnArgument class is an internal helper class for marshalling arguments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoaddress.xml" xlink:role="class">QGeoAddress</db:link></db:term>
<db:listitem>
<db:para>The QGeoAddress class represents an address of a QGeoLocation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoareamonitorinfo.xml" xlink:role="class">QGeoAreaMonitorInfo</db:link></db:term>
<db:listitem>
<db:para>The QGeoAreaMonitorInfo class describes the parameters of an area or region to be monitored for proximity.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoareamonitorsource.xml" xlink:role="class">QGeoAreaMonitorSource</db:link></db:term>
<db:listitem>
<db:para>The QGeoAreaMonitorSource class enables the detection of proximity changes for a specified set of coordinates.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeocircle.xml" xlink:role="class">QGeoCircle</db:link></db:term>
<db:listitem>
<db:para>The QGeoCircle class defines a circular geographic area.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeocodereply.xml" xlink:role="class">QGeoCodeReply</db:link></db:term>
<db:listitem>
<db:para>The QGeoCodeReply class manages an operation started by an instance of QGeoCodingManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeocodingmanager.xml" xlink:role="class">QGeoCodingManager</db:link></db:term>
<db:listitem>
<db:para>The QGeoCodingManager class provides support for geocoding operations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeocodingmanagerengine.xml" xlink:role="class">QGeoCodingManagerEngine</db:link></db:term>
<db:listitem>
<db:para>The QGeoCodingManagerEngine class provides an interface and convenience methods to implementers of QGeoServiceProvider plugins who want to provide support for geocoding operations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeocoordinate.xml" xlink:role="class">QGeoCoordinate</db:link></db:term>
<db:listitem>
<db:para>The QGeoCoordinate class defines a geographical position on the surface of the Earth.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeolocation.xml" xlink:role="class">QGeoLocation</db:link></db:term>
<db:listitem>
<db:para>The QGeoLocation class represents basic information about a location.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeomaneuver.xml" xlink:role="class">QGeoManeuver</db:link></db:term>
<db:listitem>
<db:para>The QGeoManeuver class represents the information relevant to the point at which two QGeoRouteSegments meet.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeopositioninfo.xml" xlink:role="class">QGeoPositionInfo</db:link></db:term>
<db:listitem>
<db:para>The QGeoPositionInfo class contains information gathered on a global position, direction and velocity at a particular point in time.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeopositioninfosource.xml" xlink:role="class">QGeoPositionInfoSource</db:link></db:term>
<db:listitem>
<db:para>The QGeoPositionInfoSource class is an abstract base class for the distribution of positional updates.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeopositioninfosourcefactory.xml" xlink:role="class">QGeoPositionInfoSourceFactory</db:link></db:term>
<db:listitem>
<db:para>The QGeoPositionInfoSourceFactory class is a factory class used as the plugin interface for external providers of positioning data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeorectangle.xml" xlink:role="class">QGeoRectangle</db:link></db:term>
<db:listitem>
<db:para>The QGeoRectangle class defines a rectangular geographic area.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoroute.xml" xlink:role="class">QGeoRoute</db:link></db:term>
<db:listitem>
<db:para>The QGeoRoute class represents a route between two points.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoroutereply.xml" xlink:role="class">QGeoRouteReply</db:link></db:term>
<db:listitem>
<db:para>The QGeoRouteReply class manages an operation started by an instance of QGeoRoutingManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeorouterequest.xml" xlink:role="class">QGeoRouteRequest</db:link></db:term>
<db:listitem>
<db:para>The QGeoRouteRequest class represents the parameters and restrictions which define a request for routing information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoroutesegment.xml" xlink:role="class">QGeoRouteSegment</db:link></db:term>
<db:listitem>
<db:para>The QGeoRouteSegment class represents a segment of a route.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoroutingmanager.xml" xlink:role="class">QGeoRoutingManager</db:link></db:term>
<db:listitem>
<db:para>The QGeoRoutingManager class provides support for geographic routing operations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoroutingmanagerengine.xml" xlink:role="class">QGeoRoutingManagerEngine</db:link></db:term>
<db:listitem>
<db:para>The QGeoRoutingManagerEngine class provides an interface and convenience methods to implementers of QGeoServiceProvider plugins who want to provide access to geographic routing information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeosatelliteinfo.xml" xlink:role="class">QGeoSatelliteInfo</db:link></db:term>
<db:listitem>
<db:para>The QGeoSatelliteInfo class contains basic information about a satellite.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeosatelliteinfosource.xml" xlink:role="class">QGeoSatelliteInfoSource</db:link></db:term>
<db:listitem>
<db:para>The QGeoSatelliteInfoSource class is an abstract base class for the distribution of satellite information updates.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoserviceprovider.xml" xlink:role="class">QGeoServiceProvider</db:link></db:term>
<db:listitem>
<db:para>The QGeoServiceProvider class aggregates access to services which provide geographical information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoserviceproviderfactory.xml" xlink:role="class">QGeoServiceProviderFactory</db:link></db:term>
<db:listitem>
<db:para>The QGeoServiceProviderFactory class is a factory class used as the plugin interface for services related to geographical information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoshape.xml" xlink:role="class">QGeoShape</db:link></db:term>
<db:listitem>
<db:para>The QGeoShape class defines a geographic area.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgesture.xml" xlink:role="class">QGesture</db:link></db:term>
<db:listitem>
<db:para>The QGesture class represents a gesture, containing properties that describe the corresponding user input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgestureevent.xml" xlink:role="class">QGestureEvent</db:link></db:term>
<db:listitem>
<db:para>The QGestureEvent class provides the description of triggered gestures.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgesturerecognizer.xml" xlink:role="class">QGestureRecognizer</db:link></db:term>
<db:listitem>
<db:para>The QGestureRecognizer class provides the infrastructure for gesture recognition.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qglobalstatic.xml" xlink:role="class">QGlobalStatic</db:link></db:term>
<db:listitem>
<db:para>The QGlobalStatic class is used to implement a global static object</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qglyphrun.xml" xlink:role="class">QGlyphRun</db:link></db:term>
<db:listitem>
<db:para>The QGlyphRun class provides direct access to the internal glyphs in a font.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgradient.xml" xlink:role="class">QGradient</db:link></db:term>
<db:listitem>
<db:para>The QGradient class is used in combination with QBrush to specify gradient fills.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsanchor.xml" xlink:role="class">QGraphicsAnchor</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsAnchor class represents an anchor between two items in a QGraphicsAnchorLayout.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsanchorlayout.xml" xlink:role="class">QGraphicsAnchorLayout</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsAnchorLayout class provides a layout where one can anchor widgets together in Graphics View.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsblureffect.xml" xlink:role="class">QGraphicsBlurEffect</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsBlurEffect class provides a blur effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicscolorizeeffect.xml" xlink:role="class">QGraphicsColorizeEffect</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsColorizeEffect class provides a colorize effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsdropshadoweffect.xml" xlink:role="class">QGraphicsDropShadowEffect</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsDropShadowEffect class provides a drop shadow effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicseffect.xml" xlink:role="class">QGraphicsEffect</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsEffect class is the base class for all graphics effects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsellipseitem.xml" xlink:role="class">QGraphicsEllipseItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsEllipseItem class provides an ellipse item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsgridlayout.xml" xlink:role="class">QGraphicsGridLayout</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsGridLayout class provides a grid layout for managing widgets in Graphics View.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsitem.xml" xlink:role="class">QGraphicsItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsItem class is the base class for all graphical items in a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsitemgroup.xml" xlink:role="class">QGraphicsItemGroup</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsItemGroup class provides a container that treats a group of items as a single item.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicslayout.xml" xlink:role="class">QGraphicsLayout</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsLayout class provides the base class for all layouts in Graphics View.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicslayoutitem.xml" xlink:role="class">QGraphicsLayoutItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsLayoutItem class can be inherited to allow your custom items to be managed by layouts.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicslineitem.xml" xlink:role="class">QGraphicsLineItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsLineItem class provides a line item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicslinearlayout.xml" xlink:role="class">QGraphicsLinearLayout</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsLinearLayout class provides a horizontal or vertical layout for managing widgets in Graphics View.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsobject.xml" xlink:role="class">QGraphicsObject</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsObject class provides a base class for all graphics items that require signals, slots and properties.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsopacityeffect.xml" xlink:role="class">QGraphicsOpacityEffect</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsOpacityEffect class provides an opacity effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicspathitem.xml" xlink:role="class">QGraphicsPathItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsPathItem class provides a path item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicspixmapitem.xml" xlink:role="class">QGraphicsPixmapItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsPixmapItem class provides a pixmap item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicspolygonitem.xml" xlink:role="class">QGraphicsPolygonItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsPolygonItem class provides a polygon item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsproxywidget.xml" xlink:role="class">QGraphicsProxyWidget</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsProxyWidget class provides a proxy layer for embedding a QWidget in a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsrectitem.xml" xlink:role="class">QGraphicsRectItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsRectItem class provides a rectangle item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsrotation.xml" xlink:role="class">QGraphicsRotation</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsRotation class provides a rotation transformation around a given axis.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscale.xml" xlink:role="class">QGraphicsScale</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsScale class provides a scale transformation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscene.xml" xlink:role="class">QGraphicsScene</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsScene class provides a surface for managing a large number of 2D graphical items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenecontextmenuevent.xml" xlink:role="class">QGraphicsSceneContextMenuEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneContextMenuEvent class provides context menu events in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenedragdropevent.xml" xlink:role="class">QGraphicsSceneDragDropEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneDragDropEvent class provides events for drag and drop in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicssceneevent.xml" xlink:role="class">QGraphicsSceneEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneEvent class provides a base class for all graphics view related events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenehelpevent.xml" xlink:role="class">QGraphicsSceneHelpEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneHelpEvent class provides events when a tooltip is requested.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenehoverevent.xml" xlink:role="class">QGraphicsSceneHoverEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneHoverEvent class provides hover events in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenemouseevent.xml" xlink:role="class">QGraphicsSceneMouseEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneMouseEvent class provides mouse events in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenemoveevent.xml" xlink:role="class">QGraphicsSceneMoveEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneMoveEvent class provides events for widget moving in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicssceneresizeevent.xml" xlink:role="class">QGraphicsSceneResizeEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneResizeEvent class provides events for widget resizing in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenewheelevent.xml" xlink:role="class">QGraphicsSceneWheelEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneWheelEvent class provides wheel events in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicssimpletextitem.xml" xlink:role="class">QGraphicsSimpleTextItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSimpleTextItem class provides a simple text path item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicssvgitem.xml" xlink:role="class">QGraphicsSvgItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSvgItem class is a QGraphicsItem that can be used to render the contents of SVG files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicstextitem.xml" xlink:role="class">QGraphicsTextItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsTextItem class provides a text item that you can add to a QGraphicsScene to display formatted text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicstransform.xml" xlink:role="class">QGraphicsTransform</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsTransform class is an abstract base class for building advanced transformations on QGraphicsItems.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsvideoitem.xml" xlink:role="class">QGraphicsVideoItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsVideoItem class provides a graphics item which display video produced by a QMediaObject.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsview.xml" xlink:role="class">QGraphicsView</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsView class provides a widget for displaying the contents of a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicswidget.xml" xlink:role="class">QGraphicsWidget</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsWidget class is the base class for all widget items in a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgridlayout.xml" xlink:role="class">QGridLayout</db:link></db:term>
<db:listitem>
<db:para>The QGridLayout class lays out widgets in a grid.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgroupbox.xml" xlink:role="class">QGroupBox</db:link></db:term>
<db:listitem>
<db:para>The QGroupBox widget provides a group box frame with a title.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qguiapplication.xml" xlink:role="class">QGuiApplication</db:link></db:term>
<db:listitem>
<db:para>The QGuiApplication class manages the GUI application's control flow and main settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgyroscope.xml" xlink:role="class">QGyroscope</db:link></db:term>
<db:listitem>
<db:para>The QGyroscope class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgyroscopefilter.xml" xlink:role="class">QGyroscopeFilter</db:link></db:term>
<db:listitem>
<db:para>The QGyroscopeFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgyroscopereading.xml" xlink:role="class">QGyroscopeReading</db:link></db:term>
<db:listitem>
<db:para>The QGyroscopeReading class represents one reading from the gyroscope sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhboxlayout.xml" xlink:role="class">QHBoxLayout</db:link></db:term>
<db:listitem>
<db:para>The QHBoxLayout class lines up widgets horizontally.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhash.xml" xlink:role="class">QHash</db:link></db:term>
<db:listitem>
<db:para>The QHash class is a template class that provides a hash-table-based dictionary.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhashiterator.xml" xlink:role="class">QHashIterator</db:link></db:term>
<db:listitem>
<db:para>The QHashIterator class provides a Java-style const iterator for QHash and QMultiHash.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qheaderview.xml" xlink:role="class">QHeaderView</db:link></db:term>
<db:listitem>
<db:para>The QHeaderView class provides a header row or header column for item views.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpcontentitem.xml" xlink:role="class">QHelpContentItem</db:link></db:term>
<db:listitem>
<db:para>The QHelpContentItem class provides an item for use with QHelpContentModel.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpcontentmodel.xml" xlink:role="class">QHelpContentModel</db:link></db:term>
<db:listitem>
<db:para>The QHelpContentModel class provides a model that supplies content to views.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpcontentwidget.xml" xlink:role="class">QHelpContentWidget</db:link></db:term>
<db:listitem>
<db:para>The QHelpContentWidget class provides a tree view for displaying help content model items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpengine.xml" xlink:role="class">QHelpEngine</db:link></db:term>
<db:listitem>
<db:para>The QHelpEngine class provides access to contents and indices of the help engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpenginecore.xml" xlink:role="class">QHelpEngineCore</db:link></db:term>
<db:listitem>
<db:para>The QHelpEngineCore class provides the core functionality of the help system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpevent.xml" xlink:role="class">QHelpEvent</db:link></db:term>
<db:listitem>
<db:para>The QHelpEvent class provides an event that is used to request helpful information about a particular point in a widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpindexmodel.xml" xlink:role="class">QHelpIndexModel</db:link></db:term>
<db:listitem>
<db:para>The QHelpIndexModel class provides a model that supplies index keywords to views.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpindexwidget.xml" xlink:role="class">QHelpIndexWidget</db:link></db:term>
<db:listitem>
<db:para>The QHelpIndexWidget class provides a list view displaying the QHelpIndexModel.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpsearchengine.xml" xlink:role="class">QHelpSearchEngine</db:link></db:term>
<db:listitem>
<db:para>The QHelpSearchEngine class provides access to widgets reusable to integrate fulltext search as well as to index and search documentation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpsearchquery.xml" xlink:role="class">QHelpSearchQuery</db:link></db:term>
<db:listitem>
<db:para>The QHelpSearchQuery class contains the field name and the associated search term</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpsearchquerywidget.xml" xlink:role="class">QHelpSearchQueryWidget</db:link></db:term>
<db:listitem>
<db:para>The QHelpSearchQueryWidget class provides a simple line edit or an advanced widget to enable the user to input a search term in a standardized input mask.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpsearchresultwidget.xml" xlink:role="class">QHelpSearchResultWidget</db:link></db:term>
<db:listitem>
<db:para>The QHelpSearchResultWidget class provides either a tree widget or a text browser depending on the used search engine to display the hits found by the search.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhideevent.xml" xlink:role="class">QHideEvent</db:link></db:term>
<db:listitem>
<db:para>The QHideEvent class provides an event which is sent after a widget is hidden.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhistorystate.xml" xlink:role="class">QHistoryState</db:link></db:term>
<db:listitem>
<db:para>The QHistoryState class provides a means of returning to a previously active substate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qholsterfilter.xml" xlink:role="class">QHolsterFilter</db:link></db:term>
<db:listitem>
<db:para>The QHolsterFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qholsterreading.xml" xlink:role="class">QHolsterReading</db:link></db:term>
<db:listitem>
<db:para>The QHolsterReading class holds readings from the holster sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qholstersensor.xml" xlink:role="class">QHolsterSensor</db:link></db:term>
<db:listitem>
<db:para>The QHolsterSensor class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhostaddress.xml" xlink:role="class">QHostAddress</db:link></db:term>
<db:listitem>
<db:para>The QHostAddress class provides an IP address.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhostinfo.xml" xlink:role="class">QHostInfo</db:link></db:term>
<db:listitem>
<db:para>The QHostInfo class provides static functions for host name lookups.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhoverevent.xml" xlink:role="class">QHoverEvent</db:link></db:term>
<db:listitem>
<db:para>The QHoverEvent class contains parameters that describe a mouse event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhttpmultipart.xml" xlink:role="class">QHttpMultiPart</db:link></db:term>
<db:listitem>
<db:para>The QHttpMultiPart class resembles a MIME multipart message to be sent over HTTP.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhttppart.xml" xlink:role="class">QHttpPart</db:link></db:term>
<db:listitem>
<db:para>The QHttpPart class holds a body part to be used inside a HTTP multipart MIME message.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qiodevice.xml" xlink:role="class">QIODevice</db:link></db:term>
<db:listitem>
<db:para>The QIODevice class is the base interface class of all I/O devices in Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qirproximityfilter.xml" xlink:role="class">QIRProximityFilter</db:link></db:term>
<db:listitem>
<db:para>The QIRProximityFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qirproximityreading.xml" xlink:role="class">QIRProximityReading</db:link></db:term>
<db:listitem>
<db:para>The QIRProximityReading class holds readings from the IR proximity sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qirproximitysensor.xml" xlink:role="class">QIRProximitySensor</db:link></db:term>
<db:listitem>
<db:para>The QIRProximitySensor class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qicon.xml" xlink:role="class">QIcon</db:link></db:term>
<db:listitem>
<db:para>The QIcon class provides scalable icons in different modes and states.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qicondragevent.xml" xlink:role="class">QIconDragEvent</db:link></db:term>
<db:listitem>
<db:para>The QIconDragEvent class indicates that a main icon drag has begun.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qiconengine.xml" xlink:role="class">QIconEngine</db:link></db:term>
<db:listitem>
<db:para>The QIconEngine class provides an abstract base class for QIcon renderers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qiconengineplugin.xml" xlink:role="class">QIconEnginePlugin</db:link></db:term>
<db:listitem>
<db:para>The QIconEnginePlugin class provides an abstract base for custom QIconEngine plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qidentityproxymodel.xml" xlink:role="class">QIdentityProxyModel</db:link></db:term>
<db:listitem>
<db:para>The QIdentityProxyModel class proxies its source model unmodified</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimage.xml" xlink:role="class">QImage</db:link></db:term>
<db:listitem>
<db:para>The QImage class provides a hardware-independent image representation that allows direct access to the pixel data, and can be used as a paint device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimageencodercontrol.xml" xlink:role="class">QImageEncoderControl</db:link></db:term>
<db:listitem>
<db:para>The QImageEncoderControl class provides access to the settings of a media service that performs image encoding.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimageencodersettings.xml" xlink:role="class">QImageEncoderSettings</db:link></db:term>
<db:listitem>
<db:para>The QImageEncoderSettings class provides a set of image encoder settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimageiohandler.xml" xlink:role="class">QImageIOHandler</db:link></db:term>
<db:listitem>
<db:para>The QImageIOHandler class defines the common image I/O interface for all image formats in Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimageioplugin.xml" xlink:role="class">QImageIOPlugin</db:link></db:term>
<db:listitem>
<db:para>The QImageIOPlugin class defines an interface for writing an image format plugin.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimagereader.xml" xlink:role="class">QImageReader</db:link></db:term>
<db:listitem>
<db:para>The QImageReader class provides a format independent interface for reading images from files or other devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimagewriter.xml" xlink:role="class">QImageWriter</db:link></db:term>
<db:listitem>
<db:para>The QImageWriter class provides a format independent interface for writing images to files or other devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qinputdialog.xml" xlink:role="class">QInputDialog</db:link></db:term>
<db:listitem>
<db:para>The QInputDialog class provides a simple convenience dialog to get a single value from the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qinputevent.xml" xlink:role="class">QInputEvent</db:link></db:term>
<db:listitem>
<db:para>The QInputEvent class is the base class for events that describe user input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qinputmethod.xml" xlink:role="class">QInputMethod</db:link></db:term>
<db:listitem>
<db:para>The QInputMethod class provides access to the active text input method.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qinputmethodevent.xml" xlink:role="class">QInputMethodEvent</db:link></db:term>
<db:listitem>
<db:para>The QInputMethodEvent class provides parameters for input method events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qinputmethodqueryevent.xml" xlink:role="class">QInputMethodQueryEvent</db:link></db:term>
<db:listitem>
<db:para>The QInputMethodQueryEvent class provides an event sent by the input context to input objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qintvalidator.xml" xlink:role="class">QIntValidator</db:link></db:term>
<db:listitem>
<db:para>The QIntValidator class provides a validator that ensures a string contains a valid integer within a specified range.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemdelegate.xml" xlink:role="class">QItemDelegate</db:link></db:term>
<db:listitem>
<db:para>The QItemDelegate class provides display and editing facilities for data items from a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemeditorcreator.xml" xlink:role="class">QItemEditorCreator</db:link></db:term>
<db:listitem>
<db:para>The QItemEditorCreator class makes it possible to create item editor creator bases without subclassing QItemEditorCreatorBase.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemeditorcreatorbase.xml" xlink:role="class">QItemEditorCreatorBase</db:link></db:term>
<db:listitem>
<db:para>The QItemEditorCreatorBase class provides an abstract base class that must be subclassed when implementing new item editor creators.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemeditorfactory.xml" xlink:role="class">QItemEditorFactory</db:link></db:term>
<db:listitem>
<db:para>The QItemEditorFactory class provides widgets for editing item data in views and delegates.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemselection.xml" xlink:role="class">QItemSelection</db:link></db:term>
<db:listitem>
<db:para>The QItemSelection class manages information about selected items in a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemselectionmodel.xml" xlink:role="class">QItemSelectionModel</db:link></db:term>
<db:listitem>
<db:para>The QItemSelectionModel class keeps track of a view's selected items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemselectionrange.xml" xlink:role="class">QItemSelectionRange</db:link></db:term>
<db:listitem>
<db:para>The QItemSelectionRange class manages information about a range of selected items in a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsengine.xml" xlink:role="class">QJSEngine</db:link></db:term>
<db:listitem>
<db:para>The QJSEngine class provides an environment for evaluating JavaScript code.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsvalue.xml" xlink:role="class">QJSValue</db:link></db:term>
<db:listitem>
<db:para>The QJSValue class acts as a container for Qt/JavaScript data types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsvalueiterator.xml" xlink:role="class">QJSValueIterator</db:link></db:term>
<db:listitem>
<db:para>The QJSValueIterator class provides a Java-style iterator for QJSValue.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsonarray.xml" xlink:role="class">QJsonArray</db:link></db:term>
<db:listitem>
<db:para>The QJsonArray class encapsulates a JSON array.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsondocument.xml" xlink:role="class">QJsonDocument</db:link></db:term>
<db:listitem>
<db:para>The QJsonDocument class provides a way to read and write JSON documents.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsonobject.xml" xlink:role="class">QJsonObject</db:link></db:term>
<db:listitem>
<db:para>The QJsonObject class encapsulates a JSON object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsonparseerror.xml" xlink:role="class">QJsonParseError</db:link></db:term>
<db:listitem>
<db:para>The QJsonParseError class is used to report errors during JSON parsing.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsonvalue.xml" xlink:role="class">QJsonValue</db:link></db:term>
<db:listitem>
<db:para>The QJsonValue class encapsulates a value in JSON.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qkeyevent.xml" xlink:role="class">QKeyEvent</db:link></db:term>
<db:listitem>
<db:para>The QKeyEvent class describes a key event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qkeyeventtransition.xml" xlink:role="class">QKeyEventTransition</db:link></db:term>
<db:listitem>
<db:para>The QKeyEventTransition class provides a transition for key events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qkeysequence.xml" xlink:role="class">QKeySequence</db:link></db:term>
<db:listitem>
<db:para>The QKeySequence class encapsulates a key sequence as used by shortcuts.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qkeysequenceedit.xml" xlink:role="class">QKeySequenceEdit</db:link></db:term>
<db:listitem>
<db:para>The QKeySequenceEdit widget allows to input a QKeySequence.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlcdnumber.xml" xlink:role="class">QLCDNumber</db:link></db:term>
<db:listitem>
<db:para>The QLCDNumber widget displays a number with LCD-like digits.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlabel.xml" xlink:role="class">QLabel</db:link></db:term>
<db:listitem>
<db:para>The QLabel widget provides a text or image display.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlatin1char.xml" xlink:role="class">QLatin1Char</db:link></db:term>
<db:listitem>
<db:para>The QLatin1Char class provides an 8-bit ASCII/Latin-1 character.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlatin1string.xml" xlink:role="class">QLatin1String</db:link></db:term>
<db:listitem>
<db:para>The QLatin1String class provides a thin wrapper around an US-ASCII/Latin-1 encoded string literal.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlayout.xml" xlink:role="class">QLayout</db:link></db:term>
<db:listitem>
<db:para>The QLayout class is the base class of geometry managers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlayoutitem.xml" xlink:role="class">QLayoutItem</db:link></db:term>
<db:listitem>
<db:para>The QLayoutItem class provides an abstract item that a QLayout manipulates.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlibrary.xml" xlink:role="class">QLibrary</db:link></db:term>
<db:listitem>
<db:para>The QLibrary class loads shared libraries at runtime.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlibraryinfo.xml" xlink:role="class">QLibraryInfo</db:link></db:term>
<db:listitem>
<db:para>The QLibraryInfo class provides information about the Qt library.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlightfilter.xml" xlink:role="class">QLightFilter</db:link></db:term>
<db:listitem>
<db:para>The QLightFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlightreading.xml" xlink:role="class">QLightReading</db:link></db:term>
<db:listitem>
<db:para>The QLightReading class represents one reading from the light sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlightsensor.xml" xlink:role="class">QLightSensor</db:link></db:term>
<db:listitem>
<db:para>The QLightSensor class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qline.xml" xlink:role="class">QLine</db:link></db:term>
<db:listitem>
<db:para>The QLine class provides a two-dimensional vector using integer precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlineedit.xml" xlink:role="class">QLineEdit</db:link></db:term>
<db:listitem>
<db:para>The QLineEdit widget is a one-line text editor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlinef.xml" xlink:role="class">QLineF</db:link></db:term>
<db:listitem>
<db:para>The QLineF class provides a two-dimensional vector using floating point precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlineargradient.xml" xlink:role="class">QLinearGradient</db:link></db:term>
<db:listitem>
<db:para>The QLinearGradient class is used in combination with QBrush to specify a linear gradient brush.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlinkedlist.xml" xlink:role="class">QLinkedList</db:link></db:term>
<db:listitem>
<db:para>The QLinkedList class is a template class that provides linked lists.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlinkedlistiterator.xml" xlink:role="class">QLinkedListIterator</db:link></db:term>
<db:listitem>
<db:para>The QLinkedListIterator class provides a Java-style const iterator for QLinkedList.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlist.xml" xlink:role="class">QList</db:link></db:term>
<db:listitem>
<db:para>The QList class is a template class that provides lists.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlistiterator.xml" xlink:role="class">QListIterator</db:link></db:term>
<db:listitem>
<db:para>The QListIterator class provides a Java-style const iterator for QList and QQueue.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlistview.xml" xlink:role="class">QListView</db:link></db:term>
<db:listitem>
<db:para>The QListView class provides a list or icon view onto a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlistwidget.xml" xlink:role="class">QListWidget</db:link></db:term>
<db:listitem>
<db:para>The QListWidget class provides an item-based list widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlistwidgetitem.xml" xlink:role="class">QListWidgetItem</db:link></db:term>
<db:listitem>
<db:para>The QListWidgetItem class provides an item for use with the QListWidget item view class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlocalserver.xml" xlink:role="class">QLocalServer</db:link></db:term>
<db:listitem>
<db:para>The QLocalServer class provides a local socket based server.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlocalsocket.xml" xlink:role="class">QLocalSocket</db:link></db:term>
<db:listitem>
<db:para>The QLocalSocket class provides a local socket.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlocale.xml" xlink:role="class">QLocale</db:link></db:term>
<db:listitem>
<db:para>The QLocale class converts between numbers and their string representations in various languages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlockfile.xml" xlink:role="class">QLockFile</db:link></db:term>
<db:listitem>
<db:para>The QLockFile class provides locking between processes using a file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qloggingcategory.xml" xlink:role="class">QLoggingCategory</db:link></db:term>
<db:listitem>
<db:para>The QLoggingCategory class represents a category, or 'area' in the logging infrastructure.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlowenergycharacteristic.xml" xlink:role="class">QLowEnergyCharacteristic</db:link></db:term>
<db:listitem>
<db:para>The QLowEnergyCharacteristic class stores information about a Bluetooth Low Energy service characteristic.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlowenergycontroller.xml" xlink:role="class">QLowEnergyController</db:link></db:term>
<db:listitem>
<db:para>The QLowEnergyController class provides access to Bluetooth Low Energy Devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlowenergydescriptor.xml" xlink:role="class">QLowEnergyDescriptor</db:link></db:term>
<db:listitem>
<db:para>The QLowEnergyDescriptor class stores information about the Bluetooth Low Energy descriptor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlowenergyservice.xml" xlink:role="class">QLowEnergyService</db:link></db:term>
<db:listitem>
<db:para>The QLowEnergyService class represents an individual service on a Bluetooth Low Energy Device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmaccocoaviewcontainer.xml" xlink:role="class">QMacCocoaViewContainer</db:link></db:term>
<db:listitem>
<db:para>The QMacCocoaViewContainer class provides a widget for macOS that can be used to wrap arbitrary Cocoa views (i.e., NSView subclasses) and insert them into Qt hierarchies.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmacnativewidget.xml" xlink:role="class">QMacNativeWidget</db:link></db:term>
<db:listitem>
<db:para>The QMacNativeWidget class provides a widget for macOS that provides a way to put Qt widgets into Cocoa hierarchies.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmacpasteboardmime.xml" xlink:role="class">QMacPasteboardMime</db:link></db:term>
<db:listitem>
<db:para>The QMacPasteboardMime class converts between a MIME type and a Uniform Type Identifier (UTI) format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmactoolbar.xml" xlink:role="class">QMacToolBar</db:link></db:term>
<db:listitem>
<db:para>The QMacToolBar class wraps the native NSToolbar class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmactoolbaritem.xml" xlink:role="class">QMacToolBarItem</db:link></db:term>
<db:listitem>
<db:para>The QMacToolBarItem class provides an item for QMacToolBar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmagnetometer.xml" xlink:role="class">QMagnetometer</db:link></db:term>
<db:listitem>
<db:para>The QMagnetometer class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmagnetometerfilter.xml" xlink:role="class">QMagnetometerFilter</db:link></db:term>
<db:listitem>
<db:para>The QMagnetometerFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmagnetometerreading.xml" xlink:role="class">QMagnetometerReading</db:link></db:term>
<db:listitem>
<db:para>The QMagnetometerReading class represents one reading from the magnetometer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmainwindow.xml" xlink:role="class">QMainWindow</db:link></db:term>
<db:listitem>
<db:para>The QMainWindow class provides a main application window.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmap.xml" xlink:role="class">QMap</db:link></db:term>
<db:listitem>
<db:para>The QMap class is a template class that provides a red-black-tree-based dictionary.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmapiterator.xml" xlink:role="class">QMapIterator</db:link></db:term>
<db:listitem>
<db:para>The QMapIterator class provides a Java-style const iterator for QMap and QMultiMap.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmargins.xml" xlink:role="class">QMargins</db:link></db:term>
<db:listitem>
<db:para>The QMargins class defines the four margins of a rectangle.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmarginsf.xml" xlink:role="class">QMarginsF</db:link></db:term>
<db:listitem>
<db:para>The QMarginsF class defines the four margins of a rectangle.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmaskgenerator.xml" xlink:role="class">QMaskGenerator</db:link></db:term>
<db:listitem>
<db:para>The QMaskGenerator class provides an abstract base for custom 32-bit mask generators.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmatrix4x4.xml" xlink:role="class">QMatrix4x4</db:link></db:term>
<db:listitem>
<db:para>The QMatrix4x4 class represents a 4x4 transformation matrix in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmdiarea.xml" xlink:role="class">QMdiArea</db:link></db:term>
<db:listitem>
<db:para>The QMdiArea widget provides an area in which MDI windows are displayed.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmdisubwindow.xml" xlink:role="class">QMdiSubWindow</db:link></db:term>
<db:listitem>
<db:para>The QMdiSubWindow class provides a subwindow class for QMdiArea.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaaudioprobecontrol.xml" xlink:role="class">QMediaAudioProbeControl</db:link></db:term>
<db:listitem>
<db:para>The QMediaAudioProbeControl class allows control over probing audio data in media objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaavailabilitycontrol.xml" xlink:role="class">QMediaAvailabilityControl</db:link></db:term>
<db:listitem>
<db:para>The QMediaAvailabilityControl class supplies a control for reporting availability of a service.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediabindableinterface.xml" xlink:role="class">QMediaBindableInterface</db:link></db:term>
<db:listitem>
<db:para>The QMediaBindableInterface class is the base class for objects extending media objects functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediacontainercontrol.xml" xlink:role="class">QMediaContainerControl</db:link></db:term>
<db:listitem>
<db:para>The QMediaContainerControl class provides access to the output container format of a QMediaService</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediacontent.xml" xlink:role="class">QMediaContent</db:link></db:term>
<db:listitem>
<db:para>The QMediaContent class provides access to the resources relating to a media content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediacontrol.xml" xlink:role="class">QMediaControl</db:link></db:term>
<db:listitem>
<db:para>The QMediaControl class provides a base interface for media service controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediagaplessplaybackcontrol.xml" xlink:role="class">QMediaGaplessPlaybackControl</db:link></db:term>
<db:listitem>
<db:para>The QMediaGaplessPlaybackControl class provides access to the gapless playback related control of a QMediaService.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmedianetworkaccesscontrol.xml" xlink:role="class">QMediaNetworkAccessControl</db:link></db:term>
<db:listitem>
<db:para>The QMediaNetworkAccessControl class allows the setting of the Network Access Point for media related activities.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaobject.xml" xlink:role="class">QMediaObject</db:link></db:term>
<db:listitem>
<db:para>The QMediaObject class provides a common base for multimedia objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaplayer.xml" xlink:role="class">QMediaPlayer</db:link></db:term>
<db:listitem>
<db:para>The QMediaPlayer class allows the playing of a media source.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaplayercontrol.xml" xlink:role="class">QMediaPlayerControl</db:link></db:term>
<db:listitem>
<db:para>The QMediaPlayerControl class provides access to the media playing functionality of a QMediaService.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaplaylist.xml" xlink:role="class">QMediaPlaylist</db:link></db:term>
<db:listitem>
<db:para>The QMediaPlaylist class provides a list of media content to play.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediarecorder.xml" xlink:role="class">QMediaRecorder</db:link></db:term>
<db:listitem>
<db:para>The QMediaRecorder class is used for the recording of media content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediarecordercontrol.xml" xlink:role="class">QMediaRecorderControl</db:link></db:term>
<db:listitem>
<db:para>The QMediaRecorderControl class provides access to the recording functionality of a QMediaService.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaresource.xml" xlink:role="class">QMediaResource</db:link></db:term>
<db:listitem>
<db:para>The QMediaResource class provides a description of a media resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaservice.xml" xlink:role="class">QMediaService</db:link></db:term>
<db:listitem>
<db:para>The QMediaService class provides a common base class for media service implementations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaservicecamerainfointerface.xml" xlink:role="class">QMediaServiceCameraInfoInterface</db:link></db:term>
<db:listitem>
<db:para>The QMediaServiceCameraInfoInterface class interface provides camera-specific information about devices supported by a camera service plug-in.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaservicedefaultdeviceinterface.xml" xlink:role="class">QMediaServiceDefaultDeviceInterface</db:link></db:term>
<db:listitem>
<db:para>The QMediaServiceDefaultDeviceInterface class interface identifies the default device used by a media service plug-in.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaservicefeaturesinterface.xml" xlink:role="class">QMediaServiceFeaturesInterface</db:link></db:term>
<db:listitem>
<db:para>The QMediaServiceFeaturesInterface class interface identifies features supported by a media service plug-in.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaserviceproviderplugin.xml" xlink:role="class">QMediaServiceProviderPlugin</db:link></db:term>
<db:listitem>
<db:para>The QMediaServiceProviderPlugin class interface provides an interface for QMediaService plug-ins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaservicesupporteddevicesinterface.xml" xlink:role="class">QMediaServiceSupportedDevicesInterface</db:link></db:term>
<db:listitem>
<db:para>The QMediaServiceSupportedDevicesInterface class interface identifies the devices supported by a media service plug-in.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaservicesupportedformatsinterface.xml" xlink:role="class">QMediaServiceSupportedFormatsInterface</db:link></db:term>
<db:listitem>
<db:para>The QMediaServiceSupportedFormatsInterface class interface identifies if a media service plug-in supports a media format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediastreamscontrol.xml" xlink:role="class">QMediaStreamsControl</db:link></db:term>
<db:listitem>
<db:para>The QMediaStreamsControl class provides a media stream selection control.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediatimeinterval.xml" xlink:role="class">QMediaTimeInterval</db:link></db:term>
<db:listitem>
<db:para>The QMediaTimeInterval class represents a time interval with integer precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediatimerange.xml" xlink:role="class">QMediaTimeRange</db:link></db:term>
<db:listitem>
<db:para>The QMediaTimeRange class represents a set of zero or more disjoint time intervals.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediavideoprobecontrol.xml" xlink:role="class">QMediaVideoProbeControl</db:link></db:term>
<db:listitem>
<db:para>The QMediaVideoProbeControl class allows control over probing video frames in media objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmenu.xml" xlink:role="class">QMenu</db:link></db:term>
<db:listitem>
<db:para>The QMenu class provides a menu widget for use in menu bars, context menus, and other popup menus.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmenubar.xml" xlink:role="class">QMenuBar</db:link></db:term>
<db:listitem>
<db:para>The QMenuBar class provides a horizontal menu bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmessageauthenticationcode.xml" xlink:role="class">QMessageAuthenticationCode</db:link></db:term>
<db:listitem>
<db:para>The QMessageAuthenticationCode class provides a way to generate hash-based message authentication codes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmessagebox.xml" xlink:role="class">QMessageBox</db:link></db:term>
<db:listitem>
<db:para>The QMessageBox class provides a modal dialog for informing the user or for asking the user a question and receiving an answer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmessagelogcontext.xml" xlink:role="class">QMessageLogContext</db:link></db:term>
<db:listitem>
<db:para>The QMessageLogContext class provides additional information about a log message.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmessagelogger.xml" xlink:role="class">QMessageLogger</db:link></db:term>
<db:listitem>
<db:para>The QMessageLogger class generates log messages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetaclassinfo.xml" xlink:role="class">QMetaClassInfo</db:link></db:term>
<db:listitem>
<db:para>The QMetaClassInfo class provides additional information about a class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetadatareadercontrol.xml" xlink:role="class">QMetaDataReaderControl</db:link></db:term>
<db:listitem>
<db:para>The QMetaDataReaderControl class provides read access to the meta-data of a QMediaService's media.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetadatawritercontrol.xml" xlink:role="class">QMetaDataWriterControl</db:link></db:term>
<db:listitem>
<db:para>The QMetaDataWriterControl class provides write access to the meta-data of a QMediaService's media.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetaenum.xml" xlink:role="class">QMetaEnum</db:link></db:term>
<db:listitem>
<db:para>The QMetaEnum class provides meta-data about an enumerator.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetamethod.xml" xlink:role="class">QMetaMethod</db:link></db:term>
<db:listitem>
<db:para>The QMetaMethod class provides meta-data about a member function.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetaobject.xml" xlink:role="class">QMetaObject</db:link></db:term>
<db:listitem>
<db:para>The QMetaObject class contains meta-information about Qt objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetaproperty.xml" xlink:role="class">QMetaProperty</db:link></db:term>
<db:listitem>
<db:para>The QMetaProperty class provides meta-data about a property.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetatype.xml" xlink:role="class">QMetaType</db:link></db:term>
<db:listitem>
<db:para>The QMetaType class manages named types in the meta-object system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmimedata.xml" xlink:role="class">QMimeData</db:link></db:term>
<db:listitem>
<db:para>The QMimeData class provides a container for data that records information about its MIME type.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmimedatabase.xml" xlink:role="class">QMimeDatabase</db:link></db:term>
<db:listitem>
<db:para>The QMimeDatabase class maintains a database of MIME types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmimetype.xml" xlink:role="class">QMimeType</db:link></db:term>
<db:listitem>
<db:para>The QMimeType class describes types of file or data, represented by a MIME type string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodbusclient.xml" xlink:role="class">QModbusClient</db:link></db:term>
<db:listitem>
<db:para>The QModbusClient class is the interface to send Modbus requests.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodbusdataunit.xml" xlink:role="class">QModbusDataUnit</db:link></db:term>
<db:listitem>
<db:para>QModbusDataUnit is a container class representing single bit and &lt;@number&gt;16&lt;/@number&gt; bit word entries in the Modbus register.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodbusdevice.xml" xlink:role="class">QModbusDevice</db:link></db:term>
<db:listitem>
<db:para>The QModbusDevice class is the base class for Modbus classes, QModbusServer and QModbusClient.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodbusexceptionresponse.xml" xlink:role="class">QModbusExceptionResponse</db:link></db:term>
<db:listitem>
<db:para>QModbusExceptionResponse is a container class containing the function and error code inside a Modbus ADU.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodbuspdu.xml" xlink:role="class">QModbusPdu</db:link></db:term>
<db:listitem>
<db:para>QModbusPdu is a abstract container class containing the function code and payload that is stored inside a Modbus ADU.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodbusreply.xml" xlink:role="class">QModbusReply</db:link></db:term>
<db:listitem>
<db:para>The QModbusReply class contains the data for a request sent with a QModbusClient derived class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodbusrequest.xml" xlink:role="class">QModbusRequest</db:link></db:term>
<db:listitem>
<db:para>QModbusRequest is a container class containing the function code and payload that is stored inside a Modbus ADU.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodbusresponse.xml" xlink:role="class">QModbusResponse</db:link></db:term>
<db:listitem>
<db:para>QModbusResponse is a container class containing the function code and payload that is stored inside a Modbus ADU.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodbusrtuserialmaster.xml" xlink:role="class">QModbusRtuSerialMaster</db:link></db:term>
<db:listitem>
<db:para>The QModbusRtuSerialMaster class represents a Modbus client that uses a serial bus for its communication with the Modbus server.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodbusrtuserialslave.xml" xlink:role="class">QModbusRtuSerialSlave</db:link></db:term>
<db:listitem>
<db:para>The QModbusRtuSerialSlave class represents a Modbus server that uses a serial port for its communication with the Modbus client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodbusserver.xml" xlink:role="class">QModbusServer</db:link></db:term>
<db:listitem>
<db:para>The QModbusServer class is the interface to receive and process Modbus requests.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodbustcpclient.xml" xlink:role="class">QModbusTcpClient</db:link></db:term>
<db:listitem>
<db:para>The QModbusTcpClient class is the interface class for Modbus TCP client device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodbustcpserver.xml" xlink:role="class">QModbusTcpServer</db:link></db:term>
<db:listitem>
<db:para>The QModbusTcpServer class represents a Modbus server that uses a TCP server for its communication with the Modbus client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodelindex.xml" xlink:role="class">QModelIndex</db:link></db:term>
<db:listitem>
<db:para>The QModelIndex class is used to locate data in a data model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmouseevent.xml" xlink:role="class">QMouseEvent</db:link></db:term>
<db:listitem>
<db:para>The QMouseEvent class contains parameters that describe a mouse event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmouseeventtransition.xml" xlink:role="class">QMouseEventTransition</db:link></db:term>
<db:listitem>
<db:para>The QMouseEventTransition class provides a transition for mouse events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmoveevent.xml" xlink:role="class">QMoveEvent</db:link></db:term>
<db:listitem>
<db:para>The QMoveEvent class contains event parameters for move events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmovie.xml" xlink:role="class">QMovie</db:link></db:term>
<db:listitem>
<db:para>The QMovie class is a convenience class for playing movies with QImageReader.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmultihash.xml" xlink:role="class">QMultiHash</db:link></db:term>
<db:listitem>
<db:para>The QMultiHash class is a convenience QHash subclass that provides multi-valued hashes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmultimap.xml" xlink:role="class">QMultiMap</db:link></db:term>
<db:listitem>
<db:para>The QMultiMap class is a convenience QMap subclass that provides multi-valued maps.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablehashiterator.xml" xlink:role="class">QMutableHashIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableHashIterator class provides a Java-style non-const iterator for QHash and QMultiHash.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablelinkedlistiterator.xml" xlink:role="class">QMutableLinkedListIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableLinkedListIterator class provides a Java-style non-const iterator for QLinkedList.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablelistiterator.xml" xlink:role="class">QMutableListIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableListIterator class provides a Java-style non-const iterator for QList and QQueue.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablemapiterator.xml" xlink:role="class">QMutableMapIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableMapIterator class provides a Java-style non-const iterator for QMap and QMultiMap.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablesetiterator.xml" xlink:role="class">QMutableSetIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableSetIterator class provides a Java-style non-const iterator for QSet.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablevectoriterator.xml" xlink:role="class">QMutableVectorIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableVectorIterator class provides a Java-style non-const iterator for QVector and QStack.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutex.xml" xlink:role="class">QMutex</db:link></db:term>
<db:listitem>
<db:para>The QMutex class provides access serialization between threads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutexlocker.xml" xlink:role="class">QMutexLocker</db:link></db:term>
<db:listitem>
<db:para>The QMutexLocker class is a convenience class that simplifies locking and unlocking mutexes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnativegestureevent.xml" xlink:role="class">QNativeGestureEvent</db:link></db:term>
<db:listitem>
<db:para>The QNativeGestureEvent class contains parameters that describe a gesture event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qndeffilter.xml" xlink:role="class">QNdefFilter</db:link></db:term>
<db:listitem>
<db:para>The QNdefFilter class provides a filter for matching NDEF messages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qndefmessage.xml" xlink:role="class">QNdefMessage</db:link></db:term>
<db:listitem>
<db:para>The QNdefMessage class provides an NFC NDEF message.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qndefnfcsmartposterrecord.xml" xlink:role="class">QNdefNfcSmartPosterRecord</db:link></db:term>
<db:listitem>
<db:para>The QNdefNfcSmartPosterRecord class provides an NFC RTD-SmartPoster.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qndefnfctextrecord.xml" xlink:role="class">QNdefNfcTextRecord</db:link></db:term>
<db:listitem>
<db:para>The QNdefNfcTextRecord class provides an NFC RTD-Text</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qndefnfcurirecord.xml" xlink:role="class">QNdefNfcUriRecord</db:link></db:term>
<db:listitem>
<db:para>The QNdefNfcUriRecord class provides an NFC RTD-URI</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qndefrecord.xml" xlink:role="class">QNdefRecord</db:link></db:term>
<db:listitem>
<db:para>The QNdefRecord class provides an NFC NDEF record.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnearfieldmanager.xml" xlink:role="class">QNearFieldManager</db:link></db:term>
<db:listitem>
<db:para>The QNearFieldManager class provides access to notifications for NFC events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnearfieldsharemanager.xml" xlink:role="class">QNearFieldShareManager</db:link></db:term>
<db:listitem>
<db:para>The QNearFieldShareManager class manages all interactions related to sharing files and data over NFC.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnearfieldsharetarget.xml" xlink:role="class">QNearFieldShareTarget</db:link></db:term>
<db:listitem>
<db:para>The QNearFieldShareTarget class transfers data to remote device over NFC.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnearfieldtarget.xml" xlink:role="class">QNearFieldTarget</db:link></db:term>
<db:listitem>
<db:para>The QNearFieldTarget class provides an interface for communicating with a target device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkaccessmanager.xml" xlink:role="class">QNetworkAccessManager</db:link></db:term>
<db:listitem>
<db:para>The QNetworkAccessManager class allows the application to send network requests and receive replies</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkaddressentry.xml" xlink:role="class">QNetworkAddressEntry</db:link></db:term>
<db:listitem>
<db:para>The QNetworkAddressEntry class stores one IP address supported by a network interface, along with its associated netmask and broadcast address.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkcachemetadata.xml" xlink:role="class">QNetworkCacheMetaData</db:link></db:term>
<db:listitem>
<db:para>The QNetworkCacheMetaData class provides cache information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkconfiguration.xml" xlink:role="class">QNetworkConfiguration</db:link></db:term>
<db:listitem>
<db:para>The QNetworkConfiguration class provides an abstraction of one or more access point configurations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkconfigurationmanager.xml" xlink:role="class">QNetworkConfigurationManager</db:link></db:term>
<db:listitem>
<db:para>The QNetworkConfigurationManager class manages the network configurations provided by the system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkcookie.xml" xlink:role="class">QNetworkCookie</db:link></db:term>
<db:listitem>
<db:para>The QNetworkCookie class holds one network cookie.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkcookiejar.xml" xlink:role="class">QNetworkCookieJar</db:link></db:term>
<db:listitem>
<db:para>The QNetworkCookieJar class implements a simple jar of QNetworkCookie objects</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkdiskcache.xml" xlink:role="class">QNetworkDiskCache</db:link></db:term>
<db:listitem>
<db:para>The QNetworkDiskCache class provides a very basic disk cache.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkinterface.xml" xlink:role="class">QNetworkInterface</db:link></db:term>
<db:listitem>
<db:para>The QNetworkInterface class provides a listing of the host's IP addresses and network interfaces.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkproxy.xml" xlink:role="class">QNetworkProxy</db:link></db:term>
<db:listitem>
<db:para>The QNetworkProxy class provides a network layer proxy.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkproxyfactory.xml" xlink:role="class">QNetworkProxyFactory</db:link></db:term>
<db:listitem>
<db:para>The QNetworkProxyFactory class provides fine-grained proxy selection.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkproxyquery.xml" xlink:role="class">QNetworkProxyQuery</db:link></db:term>
<db:listitem>
<db:para>The QNetworkProxyQuery class is used to query the proxy settings for a socket.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkreply.xml" xlink:role="class">QNetworkReply</db:link></db:term>
<db:listitem>
<db:para>The QNetworkReply class contains the data and headers for a request sent with QNetworkAccessManager</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworkrequest.xml" xlink:role="class">QNetworkRequest</db:link></db:term>
<db:listitem>
<db:para>The QNetworkRequest class holds a request to be sent with QNetworkAccessManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnetworksession.xml" xlink:role="class">QNetworkSession</db:link></db:term>
<db:listitem>
<db:para>The QNetworkSession class provides control over the system's access points and enables session management for cases when multiple clients access the same access point.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnmeapositioninfosource.xml" xlink:role="class">QNmeaPositionInfoSource</db:link></db:term>
<db:listitem>
<db:para>The QNmeaPositionInfoSource class provides positional information using a NMEA data source.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:term>
<db:listitem>
<db:para>The QObject class is the base class of all Qt objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qobjectcleanuphandler.xml" xlink:role="class">QObjectCleanupHandler</db:link></db:term>
<db:listitem>
<db:para>The QObjectCleanupHandler class watches the lifetime of multiple QObjects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qoffscreensurface.xml" xlink:role="class">QOffscreenSurface</db:link></db:term>
<db:listitem>
<db:para>The QOffscreenSurface class represents an offscreen surface in the underlying platform.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglbuffer.xml" xlink:role="class">QOpenGLBuffer</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLBuffer class provides functions for creating and managing OpenGL buffer objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglcontext.xml" xlink:role="class">QOpenGLContext</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLContext class represents a native OpenGL context, enabling OpenGL rendering on a QSurface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglcontextgroup.xml" xlink:role="class">QOpenGLContextGroup</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLContextGroup class represents a group of contexts sharing OpenGL resources.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopengldebuglogger.xml" xlink:role="class">QOpenGLDebugLogger</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLDebugLogger enables logging of OpenGL debugging messages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopengldebugmessage.xml" xlink:role="class">QOpenGLDebugMessage</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLDebugMessage class wraps an OpenGL debug message.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglextrafunctions.xml" xlink:role="class">QOpenGLExtraFunctions</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLExtraFunctions class provides cross-platform access to the OpenGL ES 3.0 and 3.1 API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglframebufferobject.xml" xlink:role="class">QOpenGLFramebufferObject</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFramebufferObject class encapsulates an OpenGL framebuffer object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglframebufferobjectformat.xml" xlink:role="class">QOpenGLFramebufferObjectFormat</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFramebufferObjectFormat class specifies the format of an OpenGL framebuffer object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions.xml" xlink:role="class">QOpenGLFunctions</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions class provides cross-platform access to the OpenGL ES 2.0 API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-1-0.xml" xlink:role="class">QOpenGLFunctions_1_0</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_1_0 class provides all functions for OpenGL 1.0 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-1-1.xml" xlink:role="class">QOpenGLFunctions_1_1</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_1_1 class provides all functions for OpenGL 1.1 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-1-2.xml" xlink:role="class">QOpenGLFunctions_1_2</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_1_2 class provides all functions for OpenGL 1.2 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-1-3.xml" xlink:role="class">QOpenGLFunctions_1_3</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_1_3 class provides all functions for OpenGL 1.3 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-1-4.xml" xlink:role="class">QOpenGLFunctions_1_4</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_1_4 class provides all functions for OpenGL 1.4 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-1-5.xml" xlink:role="class">QOpenGLFunctions_1_5</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_1_5 class provides all functions for OpenGL 1.5 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-2-0.xml" xlink:role="class">QOpenGLFunctions_2_0</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_2_0 class provides all functions for OpenGL 2.0 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-2-1.xml" xlink:role="class">QOpenGLFunctions_2_1</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_2_1 class provides all functions for OpenGL 2.1 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-3-0.xml" xlink:role="class">QOpenGLFunctions_3_0</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_3_0 class provides all functions for OpenGL 3.0 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-3-1.xml" xlink:role="class">QOpenGLFunctions_3_1</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_3_1 class provides all functions for OpenGL 3.1 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-3-2-compatibility.xml" xlink:role="class">QOpenGLFunctions_3_2_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_3_2_Compatibility class provides all functions for OpenGL 3.2 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-3-2-core.xml" xlink:role="class">QOpenGLFunctions_3_2_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_3_2_Core class provides all functions for OpenGL 3.2 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-3-3-compatibility.xml" xlink:role="class">QOpenGLFunctions_3_3_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_3_3_Compatibility class provides all functions for OpenGL 3.3 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-3-3-core.xml" xlink:role="class">QOpenGLFunctions_3_3_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_3_3_Core class provides all functions for OpenGL 3.3 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-0-compatibility.xml" xlink:role="class">QOpenGLFunctions_4_0_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_0_Compatibility class provides all functions for OpenGL 4.0 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-0-core.xml" xlink:role="class">QOpenGLFunctions_4_0_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_0_Core class provides all functions for OpenGL 4.0 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-1-compatibility.xml" xlink:role="class">QOpenGLFunctions_4_1_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_1_Compatibility class provides all functions for OpenGL 4.1 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-1-core.xml" xlink:role="class">QOpenGLFunctions_4_1_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_1_Core class provides all functions for OpenGL 4.1 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-2-compatibility.xml" xlink:role="class">QOpenGLFunctions_4_2_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_2_Compatibility class provides all functions for OpenGL 4.2 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-2-core.xml" xlink:role="class">QOpenGLFunctions_4_2_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_2_Core class provides all functions for OpenGL 4.2 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-3-compatibility.xml" xlink:role="class">QOpenGLFunctions_4_3_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_3_Compatibility class provides all functions for OpenGL 4.3 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-3-core.xml" xlink:role="class">QOpenGLFunctions_4_3_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_3_Core class provides all functions for OpenGL 4.3 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-4-compatibility.xml" xlink:role="class">QOpenGLFunctions_4_4_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_4_Compatibility class provides all functions for OpenGL 4.4 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-4-core.xml" xlink:role="class">QOpenGLFunctions_4_4_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_4_Core class provides all functions for OpenGL 4.4 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-5-compatibility.xml" xlink:role="class">QOpenGLFunctions_4_5_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_5_Compatibility class provides all functions for OpenGL 4.5 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-5-core.xml" xlink:role="class">QOpenGLFunctions_4_5_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_5_Core class provides all functions for OpenGL 4.5 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-es2.xml" xlink:role="class">QOpenGLFunctions_ES2</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_ES2 class provides all functions for OpenGL ES 2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglpaintdevice.xml" xlink:role="class">QOpenGLPaintDevice</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLPaintDevice class enables painting to an OpenGL context using QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglpixeltransferoptions.xml" xlink:role="class">QOpenGLPixelTransferOptions</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLPixelTransferOptions class describes the pixel storage modes that affect the unpacking of pixels during texture upload.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglshader.xml" xlink:role="class">QOpenGLShader</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLShader class allows OpenGL shaders to be compiled.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglshaderprogram.xml" xlink:role="class">QOpenGLShaderProgram</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLShaderProgram class allows OpenGL shader programs to be linked and used.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopengltexture.xml" xlink:role="class">QOpenGLTexture</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLTexture class encapsulates an OpenGL texture object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopengltimemonitor.xml" xlink:role="class">QOpenGLTimeMonitor</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLTimeMonitor class wraps a sequence of OpenGL timer query objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopengltimerquery.xml" xlink:role="class">QOpenGLTimerQuery</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLTimerQuery class wraps an OpenGL timer query object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglversionprofile.xml" xlink:role="class">QOpenGLVersionProfile</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLVersionProfile class represents the version and if applicable the profile of an OpenGL context.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglvertexarrayobject.xml" xlink:role="class">QOpenGLVertexArrayObject</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLVertexArrayObject class wraps an OpenGL Vertex Array Object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglwidget.xml" xlink:role="class">QOpenGLWidget</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLWidget class is a widget for rendering OpenGL graphics.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglwindow.xml" xlink:role="class">QOpenGLWindow</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLWindow class is a convenience subclass of QWindow to perform OpenGL painting.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qorientationfilter.xml" xlink:role="class">QOrientationFilter</db:link></db:term>
<db:listitem>
<db:para>The QOrientationFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qorientationreading.xml" xlink:role="class">QOrientationReading</db:link></db:term>
<db:listitem>
<db:para>The QOrientationReading class represents one reading from the orientation sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qorientationsensor.xml" xlink:role="class">QOrientationSensor</db:link></db:term>
<db:listitem>
<db:para>The QOrientationSensor class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpagelayout.xml" xlink:role="class">QPageLayout</db:link></db:term>
<db:listitem>
<db:para>Describes the size, orientation and margins of a page.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpagesetupdialog.xml" xlink:role="class">QPageSetupDialog</db:link></db:term>
<db:listitem>
<db:para>The QPageSetupDialog class provides a configuration dialog for the page-related options on a printer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpagesize.xml" xlink:role="class">QPageSize</db:link></db:term>
<db:listitem>
<db:para>The QPageSize class describes the size and name of a defined page size</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpagedpaintdevice.xml" xlink:role="class">QPagedPaintDevice</db:link></db:term>
<db:listitem>
<db:para>The QPagedPaintDevice class is a represents a paintdevice that supports multiple pages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpaintdevice.xml" xlink:role="class">QPaintDevice</db:link></db:term>
<db:listitem>
<db:para>The QPaintDevice class is the base class of objects that can be painted on with QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpaintdevicewindow.xml" xlink:role="class">QPaintDeviceWindow</db:link></db:term>
<db:listitem>
<db:para>Convenience subclass of QWindow that is also a QPaintDevice.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpaintengine.xml" xlink:role="class">QPaintEngine</db:link></db:term>
<db:listitem>
<db:para>The QPaintEngine class provides an abstract definition of how QPainter draws to a given device on a given platform.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpaintenginestate.xml" xlink:role="class">QPaintEngineState</db:link></db:term>
<db:listitem>
<db:para>The QPaintEngineState class provides information about the active paint engine's current state.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpaintevent.xml" xlink:role="class">QPaintEvent</db:link></db:term>
<db:listitem>
<db:para>The QPaintEvent class contains event parameters for paint events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpainter.xml" xlink:role="class">QPainter</db:link></db:term>
<db:listitem>
<db:para>The QPainter class performs low-level painting on widgets and other paint devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpainterpath.xml" xlink:role="class">QPainterPath</db:link></db:term>
<db:listitem>
<db:para>The QPainterPath class provides a container for painting operations, enabling graphical shapes to be constructed and reused.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpainterpathstroker.xml" xlink:role="class">QPainterPathStroker</db:link></db:term>
<db:listitem>
<db:para>The QPainterPathStroker class is used to generate fillable outlines for a given painter path.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpair.xml" xlink:role="class">QPair</db:link></db:term>
<db:listitem>
<db:para>The QPair class is a template class that stores a pair of items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpalette.xml" xlink:role="class">QPalette</db:link></db:term>
<db:listitem>
<db:para>The QPalette class contains color groups for each widget state.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpangesture.xml" xlink:role="class">QPanGesture</db:link></db:term>
<db:listitem>
<db:para>The QPanGesture class describes a panning gesture made by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qparallelanimationgroup.xml" xlink:role="class">QParallelAnimationGroup</db:link></db:term>
<db:listitem>
<db:para>The QParallelAnimationGroup class provides a parallel group of animations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpauseanimation.xml" xlink:role="class">QPauseAnimation</db:link></db:term>
<db:listitem>
<db:para>The QPauseAnimation class provides a pause for QSequentialAnimationGroup.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpdfwriter.xml" xlink:role="class">QPdfWriter</db:link></db:term>
<db:listitem>
<db:para>The QPdfWriter class is a class to generate PDFs that can be used as a paint device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpen.xml" xlink:role="class">QPen</db:link></db:term>
<db:listitem>
<db:para>The QPen class defines how a QPainter should draw lines and outlines of shapes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpersistentmodelindex.xml" xlink:role="class">QPersistentModelIndex</db:link></db:term>
<db:listitem>
<db:para>The QPersistentModelIndex class is used to locate data in a data model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpicture.xml" xlink:role="class">QPicture</db:link></db:term>
<db:listitem>
<db:para>The QPicture class is a paint device that records and replays QPainter commands.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpinchgesture.xml" xlink:role="class">QPinchGesture</db:link></db:term>
<db:listitem>
<db:para>The QPinchGesture class describes a pinch gesture made by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpixelformat.xml" xlink:role="class">QPixelFormat</db:link></db:term>
<db:listitem>
<db:para>QPixelFormat is a class for describing different pixel layouts in graphics buffers</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpixmap.xml" xlink:role="class">QPixmap</db:link></db:term>
<db:listitem>
<db:para>The QPixmap class is an off-screen image representation that can be used as a paint device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpixmapcache.xml" xlink:role="class">QPixmapCache</db:link></db:term>
<db:listitem>
<db:para>The QPixmapCache class provides an application-wide cache for pixmaps.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplace.xml" xlink:role="class">QPlace</db:link></db:term>
<db:listitem>
<db:para>The QPlace class represents a set of data about a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceattribute.xml" xlink:role="class">QPlaceAttribute</db:link></db:term>
<db:listitem>
<db:para>The QPlaceAttribute class represents generic attribute information about a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacecategory.xml" xlink:role="class">QPlaceCategory</db:link></db:term>
<db:listitem>
<db:para>The QPlaceCategory class represents a category that a QPlace can be associated with.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacecontactdetail.xml" xlink:role="class">QPlaceContactDetail</db:link></db:term>
<db:listitem>
<db:para>The QPlaceContactDetail class represents a contact detail such as a phone number or website url.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacecontent.xml" xlink:role="class">QPlaceContent</db:link></db:term>
<db:listitem>
<db:para>The QPlaceContent class serves as the base class for rich content types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacecontentreply.xml" xlink:role="class">QPlaceContentReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceContentReply class manages a content retrieval operation started by an instance of QPlaceManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacecontentrequest.xml" xlink:role="class">QPlaceContentRequest</db:link></db:term>
<db:listitem>
<db:para>The QPlaceContentRequest class represents the parameters of a content request.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacedetailsreply.xml" xlink:role="class">QPlaceDetailsReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceDetailsReply class manages a place details fetch operation started by an instance of QPlaceManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceeditorial.xml" xlink:role="class">QPlaceEditorial</db:link></db:term>
<db:listitem>
<db:para>The QPlaceEditorial class represents a publisher's article describing a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceicon.xml" xlink:role="class">QPlaceIcon</db:link></db:term>
<db:listitem>
<db:para>The QPlaceIcon class represents an icon.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceidreply.xml" xlink:role="class">QPlaceIdReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceIdReply class manages operations which return an identifier such as saving and removal operations of places and categories.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceimage.xml" xlink:role="class">QPlaceImage</db:link></db:term>
<db:listitem>
<db:para>The QPlaceImage class represents a reference to an image.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacemanager.xml" xlink:role="class">QPlaceManager</db:link></db:term>
<db:listitem>
<db:para>The QPlaceManager class provides the interface which allows clients to access places stored in a particular backend.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacemanagerengine.xml" xlink:role="class">QPlaceManagerEngine</db:link></db:term>
<db:listitem>
<db:para>The QPlaceManagerEngine class provides an interface for implementers of QGeoServiceProvider plugins who want to provide access to place functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacematchreply.xml" xlink:role="class">QPlaceMatchReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceMatchReply class manages a place matching operation started by an instance of QPlaceManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacematchrequest.xml" xlink:role="class">QPlaceMatchRequest</db:link></db:term>
<db:listitem>
<db:para>The QPlaceMatchRequest class is used to find places from one manager that match those from another. It represents a set of request parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceproposedsearchresult.xml" xlink:role="class">QPlaceProposedSearchResult</db:link></db:term>
<db:listitem>
<db:para>The QPlaceProposedSearchResult class represents a search result containing a proposed search.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceratings.xml" xlink:role="class">QPlaceRatings</db:link></db:term>
<db:listitem>
<db:para>The QPlaceRatings class holds rating information about a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacereply.xml" xlink:role="class">QPlaceReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceReply class manages an operation started by an instance of QPlaceManager and serves as a base class for more specialized replies.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceresult.xml" xlink:role="class">QPlaceResult</db:link></db:term>
<db:listitem>
<db:para>The QPlaceResult class represents a search result containing a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacereview.xml" xlink:role="class">QPlaceReview</db:link></db:term>
<db:listitem>
<db:para>The QPlaceReview class represents a review of a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacesearchreply.xml" xlink:role="class">QPlaceSearchReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceSearchReply class manages a place search operation started by an instance of QPlaceManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacesearchrequest.xml" xlink:role="class">QPlaceSearchRequest</db:link></db:term>
<db:listitem>
<db:para>The QPlaceSearchRequest class represents the set of parameters for a search request.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacesearchresult.xml" xlink:role="class">QPlaceSearchResult</db:link></db:term>
<db:listitem>
<db:para>The QPlaceSearchResult class is the base class for search results.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacesearchsuggestionreply.xml" xlink:role="class">QPlaceSearchSuggestionReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceSearchSuggestionReply class manages a search suggestion operation started by an instance of QPlaceManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacesupplier.xml" xlink:role="class">QPlaceSupplier</db:link></db:term>
<db:listitem>
<db:para>The QPlaceSupplier class represents a supplier of a place or content associated with a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceuser.xml" xlink:role="class">QPlaceUser</db:link></db:term>
<db:listitem>
<db:para>The QPlaceUser class represents an individual user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaintextdocumentlayout.xml" xlink:role="class">QPlainTextDocumentLayout</db:link></db:term>
<db:listitem>
<db:para>The QPlainTextDocumentLayout class implements a plain text layout for QTextDocument</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaintextedit.xml" xlink:role="class">QPlainTextEdit</db:link></db:term>
<db:listitem>
<db:para>The QPlainTextEdit class provides a widget that is used to edit and display plain text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplatformgraphicsbuffer.xml" xlink:role="class">QPlatformGraphicsBuffer</db:link></db:term>
<db:listitem>
<db:para>The QPlatformGraphicsBuffer is a windowsystem abstraction for native graphics buffers</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplatformsurfaceevent.xml" xlink:role="class">QPlatformSurfaceEvent</db:link></db:term>
<db:listitem>
<db:para>The QPlatformSurfaceEvent class is used to notify about native platform surface events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplatformsystemtrayicon.xml" xlink:role="class">QPlatformSystemTrayIcon</db:link></db:term>
<db:listitem>
<db:para>The QPlatformSystemTrayIcon class abstracts the system tray icon and interaction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpluginloader.xml" xlink:role="class">QPluginLoader</db:link></db:term>
<db:listitem>
<db:para>The QPluginLoader class loads a plugin at run-time.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpoint.xml" xlink:role="class">QPoint</db:link></db:term>
<db:listitem>
<db:para>The QPoint class defines a point in the plane using integer precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpointf.xml" xlink:role="class">QPointF</db:link></db:term>
<db:listitem>
<db:para>The QPointF class defines a point in the plane using floating point precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpointer.xml" xlink:role="class">QPointer</db:link></db:term>
<db:listitem>
<db:para>The QPointer class is a template class that provides guarded pointers to QObject.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpolygon.xml" xlink:role="class">QPolygon</db:link></db:term>
<db:listitem>
<db:para>The QPolygon class provides a vector of points using integer precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpolygonf.xml" xlink:role="class">QPolygonF</db:link></db:term>
<db:listitem>
<db:para>The QPolygonF class provides a vector of points using floating point precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpressurefilter.xml" xlink:role="class">QPressureFilter</db:link></db:term>
<db:listitem>
<db:para>The QPressureFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpressurereading.xml" xlink:role="class">QPressureReading</db:link></db:term>
<db:listitem>
<db:para>The QPressureReading class holds readings from the pressure sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpressuresensor.xml" xlink:role="class">QPressureSensor</db:link></db:term>
<db:listitem>
<db:para>The QPressureSensor class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprintdialog.xml" xlink:role="class">QPrintDialog</db:link></db:term>
<db:listitem>
<db:para>The QPrintDialog class provides a dialog for specifying the printer's configuration.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprintengine.xml" xlink:role="class">QPrintEngine</db:link></db:term>
<db:listitem>
<db:para>The QPrintEngine class defines an interface for how QPrinter interacts with a given printing subsystem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprintpreviewdialog.xml" xlink:role="class">QPrintPreviewDialog</db:link></db:term>
<db:listitem>
<db:para>The QPrintPreviewDialog class provides a dialog for previewing and configuring page layouts for printer output.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprintpreviewwidget.xml" xlink:role="class">QPrintPreviewWidget</db:link></db:term>
<db:listitem>
<db:para>The QPrintPreviewWidget class provides a widget for previewing page layouts for printer output.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprinter.xml" xlink:role="class">QPrinter</db:link></db:term>
<db:listitem>
<db:para>The QPrinter class is a paint device that paints on a printer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprinterinfo.xml" xlink:role="class">QPrinterInfo</db:link></db:term>
<db:listitem>
<db:para>The QPrinterInfo class gives access to information about existing printers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprocess.xml" xlink:role="class">QProcess</db:link></db:term>
<db:listitem>
<db:para>The QProcess class is used to start external programs and to communicate with them.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprocessenvironment.xml" xlink:role="class">QProcessEnvironment</db:link></db:term>
<db:listitem>
<db:para>The QProcessEnvironment class holds the environment variables that can be passed to a program.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprogressbar.xml" xlink:role="class">QProgressBar</db:link></db:term>
<db:listitem>
<db:para>The QProgressBar widget provides a horizontal or vertical progress bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprogressdialog.xml" xlink:role="class">QProgressDialog</db:link></db:term>
<db:listitem>
<db:para>The QProgressDialog class provides feedback on the progress of a slow operation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpropertyanimation.xml" xlink:role="class">QPropertyAnimation</db:link></db:term>
<db:listitem>
<db:para>The QPropertyAnimation class animates Qt properties</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qproximityfilter.xml" xlink:role="class">QProximityFilter</db:link></db:term>
<db:listitem>
<db:para>The QProximityFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qproximityreading.xml" xlink:role="class">QProximityReading</db:link></db:term>
<db:listitem>
<db:para>The QProximityReading class represents one reading from the proximity sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qproximitysensor.xml" xlink:role="class">QProximitySensor</db:link></db:term>
<db:listitem>
<db:para>The QProximitySensor class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qproxystyle.xml" xlink:role="class">QProxyStyle</db:link></db:term>
<db:listitem>
<db:para>The QProxyStyle class is a convenience class that simplifies dynamically overriding QStyle elements.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpushbutton.xml" xlink:role="class">QPushButton</db:link></db:term>
<db:listitem>
<db:para>The QPushButton widget provides a command button.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlabstracturlinterceptor.xml" xlink:role="class">QQmlAbstractUrlInterceptor</db:link></db:term>
<db:listitem>
<db:para>allows you to control QML file loading.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlapplicationengine.xml" xlink:role="class">QQmlApplicationEngine</db:link></db:term>
<db:listitem>
<db:para>QQmlApplicationEngine provides a convenient way to load an application from a single QML file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlcomponent.xml" xlink:role="class">QQmlComponent</db:link></db:term>
<db:listitem>
<db:para>The QQmlComponent class encapsulates a QML component definition</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlcontext.xml" xlink:role="class">QQmlContext</db:link></db:term>
<db:listitem>
<db:para>The QQmlContext class defines a context within a QML engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlengine.xml" xlink:role="class">QQmlEngine</db:link></db:term>
<db:listitem>
<db:para>The QQmlEngine class provides an environment for instantiating QML components.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlerror.xml" xlink:role="class">QQmlError</db:link></db:term>
<db:listitem>
<db:para>The QQmlError class encapsulates a QML error.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlexpression.xml" xlink:role="class">QQmlExpression</db:link></db:term>
<db:listitem>
<db:para>The QQmlExpression class evaluates JavaScript in a QML context.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlextensionplugin.xml" xlink:role="class">QQmlExtensionPlugin</db:link></db:term>
<db:listitem>
<db:para>The QQmlExtensionPlugin class provides an abstract base for custom QML extension plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlfileselector.xml" xlink:role="class">QQmlFileSelector</db:link></db:term>
<db:listitem>
<db:para>A class for applying a QFileSelector to QML file loading</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlimageproviderbase.xml" xlink:role="class">QQmlImageProviderBase</db:link></db:term>
<db:listitem>
<db:para>The QQmlImageProviderBase class is used to register image providers in the QML engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlincubationcontroller.xml" xlink:role="class">QQmlIncubationController</db:link></db:term>
<db:listitem>
<db:para>QQmlIncubationController instances drive the progress of QQmlIncubators</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlincubator.xml" xlink:role="class">QQmlIncubator</db:link></db:term>
<db:listitem>
<db:para>The QQmlIncubator class allows QML objects to be created asynchronously.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmllistproperty.xml" xlink:role="class">QQmlListProperty</db:link></db:term>
<db:listitem>
<db:para>The QQmlListProperty class allows applications to expose list-like properties to QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmllistreference.xml" xlink:role="class">QQmlListReference</db:link></db:term>
<db:listitem>
<db:para>The QQmlListReference class allows the manipulation of QQmlListProperty properties.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlndefrecord.xml" xlink:role="class">QQmlNdefRecord</db:link></db:term>
<db:listitem>
<db:para>The QQmlNdefRecord class implements the NdefRecord type in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlnetworkaccessmanagerfactory.xml" xlink:role="class">QQmlNetworkAccessManagerFactory</db:link></db:term>
<db:listitem>
<db:para>The QQmlNetworkAccessManagerFactory class creates QNetworkAccessManager instances for a QML engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlparserstatus.xml" xlink:role="class">QQmlParserStatus</db:link></db:term>
<db:listitem>
<db:para>The QQmlParserStatus class provides updates on the QML parser state.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlproperty.xml" xlink:role="class">QQmlProperty</db:link></db:term>
<db:listitem>
<db:para>The QQmlProperty class abstracts accessing properties on objects created from QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlpropertymap.xml" xlink:role="class">QQmlPropertyMap</db:link></db:term>
<db:listitem>
<db:para>The QQmlPropertyMap class allows you to set key-value pairs that can be used in QML bindings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlpropertyvaluesource.xml" xlink:role="class">QQmlPropertyValueSource</db:link></db:term>
<db:listitem>
<db:para>The QQmlPropertyValueSource class is an interface for property value sources such as animations and bindings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlscriptstring.xml" xlink:role="class">QQmlScriptString</db:link></db:term>
<db:listitem>
<db:para>The QQmlScriptString class encapsulates a script and its context.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquaternion.xml" xlink:role="class">QQuaternion</db:link></db:term>
<db:listitem>
<db:para>The QQuaternion class represents a quaternion consisting of a vector and scalar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqueue.xml" xlink:role="class">QQueue</db:link></db:term>
<db:listitem>
<db:para>The QQueue class is a generic container that provides a queue.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickasyncimageprovider.xml" xlink:role="class">QQuickAsyncImageProvider</db:link></db:term>
<db:listitem>
<db:para>The QQuickAsyncImageProvider class provides an interface for for asynchronous control of QML image requests.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickframebufferobject.xml" xlink:role="class">QQuickFramebufferObject</db:link></db:term>
<db:listitem>
<db:para>The QQuickFramebufferObject class is a convenience class for integrating OpenGL rendering using a framebuffer object (FBO) with Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickimageprovider.xml" xlink:role="class">QQuickImageProvider</db:link></db:term>
<db:listitem>
<db:para>The QQuickImageProvider class provides an interface for supporting pixmaps and threaded image requests in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickimageresponse.xml" xlink:role="class">QQuickImageResponse</db:link></db:term>
<db:listitem>
<db:para>The QQuickImageResponse class provides an interface for asynchronous image loading in QQuickAsyncImageProvider.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickitem.xml" xlink:role="class">QQuickItem</db:link></db:term>
<db:listitem>
<db:para>The QQuickItem class provides the most basic of all visual items in Qt Quick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickitemgrabresult.xml" xlink:role="class">QQuickItemGrabResult</db:link></db:term>
<db:listitem>
<db:para>The QQuickItemGrabResult contains the result from QQuickItem::grabToImage().</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickpainteditem.xml" xlink:role="class">QQuickPaintedItem</db:link></db:term>
<db:listitem>
<db:para>The QQuickPaintedItem class provides a way to use the QPainter API in the QML Scene Graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickrendercontrol.xml" xlink:role="class">QQuickRenderControl</db:link></db:term>
<db:listitem>
<db:para>The QQuickRenderControl class provides a mechanism for rendering the Qt Quick scenegraph onto an offscreen render target in a fully application-controlled manner.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquicktextdocument.xml" xlink:role="class">QQuickTextDocument</db:link></db:term>
<db:listitem>
<db:para>The QQuickTextDocument class provides access to the QTextDocument of QQuickTextEdit</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquicktexturefactory.xml" xlink:role="class">QQuickTextureFactory</db:link></db:term>
<db:listitem>
<db:para>The QQuickTextureFactory class provides an interface for loading custom textures from QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickview.xml" xlink:role="class">QQuickView</db:link></db:term>
<db:listitem>
<db:para>The QQuickView class provides a window for displaying a Qt Quick user interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickwebengineprofile.xml" xlink:role="class">QQuickWebEngineProfile</db:link></db:term>
<db:listitem>
<db:para>The QQuickWebEngineProfile class provides a web engine profile shared by multiple pages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickwidget.xml" xlink:role="class">QQuickWidget</db:link></db:term>
<db:listitem>
<db:para>The QQuickWidget class provides a widget for displaying a Qt Quick user interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquickwindow.xml" xlink:role="class">QQuickWindow</db:link></db:term>
<db:listitem>
<db:para>The QQuickWindow class provides the window for displaying a graphical QML scene</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qradialgradient.xml" xlink:role="class">QRadialGradient</db:link></db:term>
<db:listitem>
<db:para>The QRadialGradient class is used in combination with QBrush to specify a radial gradient brush.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qradiobutton.xml" xlink:role="class">QRadioButton</db:link></db:term>
<db:listitem>
<db:para>The QRadioButton widget provides a radio button with a text label.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qradiodata.xml" xlink:role="class">QRadioData</db:link></db:term>
<db:listitem>
<db:para>The QRadioData class provides interfaces to the RDS functionality of the system radio.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qradiodatacontrol.xml" xlink:role="class">QRadioDataControl</db:link></db:term>
<db:listitem>
<db:para>The QRadioDataControl class provides access to the RDS functionality of the radio in the QMediaService.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qradiotuner.xml" xlink:role="class">QRadioTuner</db:link></db:term>
<db:listitem>
<db:para>The QRadioTuner class provides an interface to the systems analog radio device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qradiotunercontrol.xml" xlink:role="class">QRadioTunerControl</db:link></db:term>
<db:listitem>
<db:para>The QRadioTunerControl class provides access to the radio tuning functionality of a QMediaService.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrasterpaintengine.xml" xlink:role="class">QRasterPaintEngine</db:link></db:term>
<db:listitem>
<db:para>The QRasterPaintEngine class enables hardware acceleration of painting operations in Qt for Embedded Linux.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrasterwindow.xml" xlink:role="class">QRasterWindow</db:link></db:term>
<db:listitem>
<db:para>QRasterWindow is a convenience class for using QPainter on a QWindow</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrawfont.xml" xlink:role="class">QRawFont</db:link></db:term>
<db:listitem>
<db:para>The QRawFont class provides access to a single physical instance of a font.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qreadlocker.xml" xlink:role="class">QReadLocker</db:link></db:term>
<db:listitem>
<db:para>The QReadLocker class is a convenience class that simplifies locking and unlocking read-write locks for read access.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qreadwritelock.xml" xlink:role="class">QReadWriteLock</db:link></db:term>
<db:listitem>
<db:para>The QReadWriteLock class provides read-write locking.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrect.xml" xlink:role="class">QRect</db:link></db:term>
<db:listitem>
<db:para>The QRect class defines a rectangle in the plane using integer precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrectf.xml" xlink:role="class">QRectF</db:link></db:term>
<db:listitem>
<db:para>The QRectF class defines a rectangle in the plane using floating point precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qregexp.xml" xlink:role="class">QRegExp</db:link></db:term>
<db:listitem>
<db:para>The QRegExp class provides pattern matching using regular expressions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qregexpvalidator.xml" xlink:role="class">QRegExpValidator</db:link></db:term>
<db:listitem>
<db:para>The QRegExpValidator class is used to check a string against a regular expression.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qregion.xml" xlink:role="class">QRegion</db:link></db:term>
<db:listitem>
<db:para>The QRegion class specifies a clip region for a painter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qregularexpression.xml" xlink:role="class">QRegularExpression</db:link></db:term>
<db:listitem>
<db:para>The QRegularExpression class provides pattern matching using regular expressions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qregularexpressionmatch.xml" xlink:role="class">QRegularExpressionMatch</db:link></db:term>
<db:listitem>
<db:para>The QRegularExpressionMatch class provides the results of matching a QRegularExpression against a string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qregularexpressionmatchiterator.xml" xlink:role="class">QRegularExpressionMatchIterator</db:link></db:term>
<db:listitem>
<db:para>The QRegularExpressionMatchIterator class provides an iterator on the results of a global match of a QRegularExpression object against a string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qregularexpressionvalidator.xml" xlink:role="class">QRegularExpressionValidator</db:link></db:term>
<db:listitem>
<db:para>The QRegularExpressionValidator class is used to check a string against a regular expression.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qresizeevent.xml" xlink:role="class">QResizeEvent</db:link></db:term>
<db:listitem>
<db:para>The QResizeEvent class contains event parameters for resize events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qresource.xml" xlink:role="class">QResource</db:link></db:term>
<db:listitem>
<db:para>The QResource class provides an interface for reading directly from resources.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrgba64.xml" xlink:role="class">QRgba64</db:link></db:term>
<db:listitem>
<db:para>The QRgba64 struct contains a 64-bit RGB color.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrotationfilter.xml" xlink:role="class">QRotationFilter</db:link></db:term>
<db:listitem>
<db:para>The QRotationFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrotationreading.xml" xlink:role="class">QRotationReading</db:link></db:term>
<db:listitem>
<db:para>The QRotationReading class represents one reading from the rotation sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrotationsensor.xml" xlink:role="class">QRotationSensor</db:link></db:term>
<db:listitem>
<db:para>The QRotationSensor class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrubberband.xml" xlink:role="class">QRubberBand</db:link></db:term>
<db:listitem>
<db:para>The QRubberBand class provides a rectangle or line that can indicate a selection or a boundary.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrunnable.xml" xlink:role="class">QRunnable</db:link></db:term>
<db:listitem>
<db:para>The QRunnable class is the base class for all runnable objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgabstractrenderer.xml" xlink:role="class">QSGAbstractRenderer</db:link></db:term>
<db:listitem>
<db:para>QSGAbstractRenderer gives access to the scene graph nodes and rendering of a QSGEngine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgbasicgeometrynode.xml" xlink:role="class">QSGBasicGeometryNode</db:link></db:term>
<db:listitem>
<db:para>The QSGBasicGeometryNode class serves as a baseclass for geometry based nodes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgclipnode.xml" xlink:role="class">QSGClipNode</db:link></db:term>
<db:listitem>
<db:para>The QSGClipNode class implements the clipping functionality in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgdynamictexture.xml" xlink:role="class">QSGDynamicTexture</db:link></db:term>
<db:listitem>
<db:para>The QSGDynamicTexture class serves as a baseclass for dynamically changing textures, such as content that is rendered to FBO's.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgengine.xml" xlink:role="class">QSGEngine</db:link></db:term>
<db:listitem>
<db:para>The QSGEngine class allows low level rendering of a scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgflatcolormaterial.xml" xlink:role="class">QSGFlatColorMaterial</db:link></db:term>
<db:listitem>
<db:para>The QSGFlatColorMaterial class provides a convenient way of rendering solid colored geometry in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsggeometry.xml" xlink:role="class">QSGGeometry</db:link></db:term>
<db:listitem>
<db:para>The QSGGeometry class provides low-level storage for graphics primitives in the Qt Quick Scene Graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsggeometrynode.xml" xlink:role="class">QSGGeometryNode</db:link></db:term>
<db:listitem>
<db:para>The QSGGeometryNode class is used for all rendered content in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgmaterial.xml" xlink:role="class">QSGMaterial</db:link></db:term>
<db:listitem>
<db:para>The QSGMaterial class encapsulates rendering state for a shader program.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgmaterialshader.xml" xlink:role="class">QSGMaterialShader</db:link></db:term>
<db:listitem>
<db:para>The QSGMaterialShader class represents an OpenGL shader program in the renderer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgmaterialtype.xml" xlink:role="class">QSGMaterialType</db:link></db:term>
<db:listitem>
<db:para>The QSGMaterialType class is used as a unique type token in combination with QSGMaterial.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgnode.xml" xlink:role="class">QSGNode</db:link></db:term>
<db:listitem>
<db:para>The QSGNode class is the base class for all nodes in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgopacitynode.xml" xlink:role="class">QSGOpacityNode</db:link></db:term>
<db:listitem>
<db:para>The QSGOpacityNode class is used to change opacity of nodes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgopaquetexturematerial.xml" xlink:role="class">QSGOpaqueTextureMaterial</db:link></db:term>
<db:listitem>
<db:para>The QSGOpaqueTextureMaterial class provides a convenient way of rendering textured geometry in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgsimplematerial.xml" xlink:role="class">QSGSimpleMaterial</db:link></db:term>
<db:listitem>
<db:para>The QSGSimpleMaterial class is a template generated class used to store the state used with a QSGSimpleMateralShader.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgsimplematerialshader.xml" xlink:role="class">QSGSimpleMaterialShader</db:link></db:term>
<db:listitem>
<db:para>The QSGSimpleMaterialShader class provides a convenient way of building custom materials for the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgsimplerectnode.xml" xlink:role="class">QSGSimpleRectNode</db:link></db:term>
<db:listitem>
<db:para>The QSGSimpleRectNode class is a convenience class for drawing solid filled rectangles using scenegraph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgsimpletexturenode.xml" xlink:role="class">QSGSimpleTextureNode</db:link></db:term>
<db:listitem>
<db:para>The QSGSimpleTextureNode class is provided for convenience to easily draw textured content using the QML scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgtexture.xml" xlink:role="class">QSGTexture</db:link></db:term>
<db:listitem>
<db:para>The QSGTexture class is a baseclass for textures used in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgtexturematerial.xml" xlink:role="class">QSGTextureMaterial</db:link></db:term>
<db:listitem>
<db:para>The QSGTextureMaterial class provides a convenient way of rendering textured geometry in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgtextureprovider.xml" xlink:role="class">QSGTextureProvider</db:link></db:term>
<db:listitem>
<db:para>The QSGTextureProvider class encapsulates texture based entities in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgtransformnode.xml" xlink:role="class">QSGTransformNode</db:link></db:term>
<db:listitem>
<db:para>The QSGTransformNode class implements transformations in the scene graph</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsgvertexcolormaterial.xml" xlink:role="class">QSGVertexColorMaterial</db:link></db:term>
<db:listitem>
<db:para>The QSGVertexColorMaterial class provides a convenient way of rendering per-vertex colored geometry in the scene graph.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsavefile.xml" xlink:role="class">QSaveFile</db:link></db:term>
<db:listitem>
<db:para>The QSaveFile class provides an interface for safely writing to files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscopedarraypointer.xml" xlink:role="class">QScopedArrayPointer</db:link></db:term>
<db:listitem>
<db:para>The QScopedArrayPointer class stores a pointer to a dynamically allocated array of objects, and deletes it upon destruction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscopedpointer.xml" xlink:role="class">QScopedPointer</db:link></db:term>
<db:listitem>
<db:para>The QScopedPointer class stores a pointer to a dynamically allocated object, and deletes it upon destruction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscopedvaluerollback.xml" xlink:role="class">QScopedValueRollback</db:link></db:term>
<db:listitem>
<db:para>The QScopedValueRollback class resets a variable to its previous value on destruction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscreen.xml" xlink:role="class">QScreen</db:link></db:term>
<db:listitem>
<db:para>The QScreen class is used to query screen properties.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptclass.xml" xlink:role="class">QScriptClass</db:link></db:term>
<db:listitem>
<db:para>The QScriptClass class provides an interface for defining custom behavior of (a class of) Qt Script objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptclasspropertyiterator.xml" xlink:role="class">QScriptClassPropertyIterator</db:link></db:term>
<db:listitem>
<db:para>The QScriptClassPropertyIterator class provides an iterator interface for custom Qt Script objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptcontext.xml" xlink:role="class">QScriptContext</db:link></db:term>
<db:listitem>
<db:para>The QScriptContext class represents a Qt Script function invocation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptcontextinfo.xml" xlink:role="class">QScriptContextInfo</db:link></db:term>
<db:listitem>
<db:para>The QScriptContextInfo class provides additional information about a QScriptContext.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptengine.xml" xlink:role="class">QScriptEngine</db:link></db:term>
<db:listitem>
<db:para>The QScriptEngine class provides an environment for evaluating Qt Script code.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptengineagent.xml" xlink:role="class">QScriptEngineAgent</db:link></db:term>
<db:listitem>
<db:para>The QScriptEngineAgent class provides an interface to report events pertaining to QScriptEngine execution.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptenginedebugger.xml" xlink:role="class">QScriptEngineDebugger</db:link></db:term>
<db:listitem>
<db:para>The QScriptEngineDebugger class provides a QScriptEngine debugger.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptextensionplugin.xml" xlink:role="class">QScriptExtensionPlugin</db:link></db:term>
<db:listitem>
<db:para>The QScriptExtensionPlugin class provides an abstract base for custom QScript extension plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptprogram.xml" xlink:role="class">QScriptProgram</db:link></db:term>
<db:listitem>
<db:para>The QScriptProgram class encapsulates a Qt Script program.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptstring.xml" xlink:role="class">QScriptString</db:link></db:term>
<db:listitem>
<db:para>The QScriptString class acts as a handle to &quot;interned&quot; strings in a QScriptEngine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptsyntaxcheckresult.xml" xlink:role="class">QScriptSyntaxCheckResult</db:link></db:term>
<db:listitem>
<db:para>The QScriptSyntaxCheckResult class provides the result of a script syntax check.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptvalue.xml" xlink:role="class">QScriptValue</db:link></db:term>
<db:listitem>
<db:para>The QScriptValue class acts as a container for the Qt Script data types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptvalueiterator.xml" xlink:role="class">QScriptValueIterator</db:link></db:term>
<db:listitem>
<db:para>The QScriptValueIterator class provides a Java-style iterator for QScriptValue.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscriptable.xml" xlink:role="class">QScriptable</db:link></db:term>
<db:listitem>
<db:para>The QScriptable class provides access to the Qt Script environment from Qt C++ member functions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscrollarea.xml" xlink:role="class">QScrollArea</db:link></db:term>
<db:listitem>
<db:para>The QScrollArea class provides a scrolling view onto another widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscrollbar.xml" xlink:role="class">QScrollBar</db:link></db:term>
<db:listitem>
<db:para>The QScrollBar widget provides a vertical or horizontal scroll bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscrollevent.xml" xlink:role="class">QScrollEvent</db:link></db:term>
<db:listitem>
<db:para>The QScrollEvent class is sent when scrolling.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscrollprepareevent.xml" xlink:role="class">QScrollPrepareEvent</db:link></db:term>
<db:listitem>
<db:para>The QScrollPrepareEvent class is sent in preparation of scrolling.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscroller.xml" xlink:role="class">QScroller</db:link></db:term>
<db:listitem>
<db:para>The QScroller class enables kinetic scrolling for any scrolling widget or graphics item.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscrollerproperties.xml" xlink:role="class">QScrollerProperties</db:link></db:term>
<db:listitem>
<db:para>The QScrollerProperties class stores the settings for a QScroller.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsemaphore.xml" xlink:role="class">QSemaphore</db:link></db:term>
<db:listitem>
<db:para>The QSemaphore class provides a general counting semaphore.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsensor.xml" xlink:role="class">QSensor</db:link></db:term>
<db:listitem>
<db:para>The QSensor class represents a single hardware sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsensorbackend.xml" xlink:role="class">QSensorBackend</db:link></db:term>
<db:listitem>
<db:para>The QSensorBackend class is a sensor implementation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsensorbackendfactory.xml" xlink:role="class">QSensorBackendFactory</db:link></db:term>
<db:listitem>
<db:para>The QSensorBackendFactory class instantiates instances of QSensorBackend.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsensorchangesinterface.xml" xlink:role="class">QSensorChangesInterface</db:link></db:term>
<db:listitem>
<db:para>The QSensorChangesInterface class is the pure virtual interface to sensor plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsensorfilter.xml" xlink:role="class">QSensorFilter</db:link></db:term>
<db:listitem>
<db:para>The QSensorFilter class provides an efficient callback facility for asynchronous notifications of sensor changes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsensorgesture.xml" xlink:role="class">QSensorGesture</db:link></db:term>
<db:listitem>
<db:para>The QSensorGesture class represents one or more sensor gesture recognizers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsensorgesturemanager.xml" xlink:role="class">QSensorGestureManager</db:link></db:term>
<db:listitem>
<db:para>The QSensorGestureManager class manages sensor gestures, registers and creates sensor gesture plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsensorgestureplugininterface.xml" xlink:role="class">QSensorGesturePluginInterface</db:link></db:term>
<db:listitem>
<db:para>The QSensorGesturePluginInterface class is the pure virtual interface to sensor gesture plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsensorgesturerecognizer.xml" xlink:role="class">QSensorGestureRecognizer</db:link></db:term>
<db:listitem>
<db:para>The QSensorGestureRecognizer class is the base class for a sensor gesture recognizer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsensormanager.xml" xlink:role="class">QSensorManager</db:link></db:term>
<db:listitem>
<db:para>The QSensorManager class handles registration and creation of sensor backends.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsensorplugininterface.xml" xlink:role="class">QSensorPluginInterface</db:link></db:term>
<db:listitem>
<db:para>The QSensorPluginInterface class is the pure virtual interface to sensor plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsensorreading.xml" xlink:role="class">QSensorReading</db:link></db:term>
<db:listitem>
<db:para>The QSensorReading class holds the readings from the sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsequentialanimationgroup.xml" xlink:role="class">QSequentialAnimationGroup</db:link></db:term>
<db:listitem>
<db:para>The QSequentialAnimationGroup class provides a sequential group of animations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsequentialiterable.xml" xlink:role="class">QSequentialIterable</db:link></db:term>
<db:listitem>
<db:para>The QSequentialIterable class is an iterable interface for a container in a QVariant.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qserialport.xml" xlink:role="class">QSerialPort</db:link></db:term>
<db:listitem>
<db:para>Provides functions to access serial ports.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qserialportinfo.xml" xlink:role="class">QSerialPortInfo</db:link></db:term>
<db:listitem>
<db:para>Provides information about existing serial ports.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsessionmanager.xml" xlink:role="class">QSessionManager</db:link></db:term>
<db:listitem>
<db:para>The QSessionManager class provides access to the session manager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qset.xml" xlink:role="class">QSet</db:link></db:term>
<db:listitem>
<db:para>The QSet class is a template class that provides a hash-table-based set.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsetiterator.xml" xlink:role="class">QSetIterator</db:link></db:term>
<db:listitem>
<db:para>The QSetIterator class provides a Java-style const iterator for QSet.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsettings.xml" xlink:role="class">QSettings</db:link></db:term>
<db:listitem>
<db:para>The QSettings class provides persistent platform-independent application settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qshareddata.xml" xlink:role="class">QSharedData</db:link></db:term>
<db:listitem>
<db:para>The QSharedData class is a base class for shared data objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qshareddatapointer.xml" xlink:role="class">QSharedDataPointer</db:link></db:term>
<db:listitem>
<db:para>The QSharedDataPointer class represents a pointer to an implicitly shared object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsharedmemory.xml" xlink:role="class">QSharedMemory</db:link></db:term>
<db:listitem>
<db:para>The QSharedMemory class provides access to a shared memory segment.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsharedpointer.xml" xlink:role="class">QSharedPointer</db:link></db:term>
<db:listitem>
<db:para>The QSharedPointer class holds a strong reference to a shared pointer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qshortcut.xml" xlink:role="class">QShortcut</db:link></db:term>
<db:listitem>
<db:para>The QShortcut class is used to create keyboard shortcuts.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qshortcutevent.xml" xlink:role="class">QShortcutEvent</db:link></db:term>
<db:listitem>
<db:para>The QShortcutEvent class provides an event which is generated when the user presses a key combination.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qshowevent.xml" xlink:role="class">QShowEvent</db:link></db:term>
<db:listitem>
<db:para>The QShowEvent class provides an event that is sent when a widget is shown.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsignalblocker.xml" xlink:role="class">QSignalBlocker</db:link></db:term>
<db:listitem>
<db:para>Exception-safe wrapper around QObject::blockSignals()</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsignalmapper.xml" xlink:role="class">QSignalMapper</db:link></db:term>
<db:listitem>
<db:para>The QSignalMapper class bundles signals from identifiable senders.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsignalspy.xml" xlink:role="class">QSignalSpy</db:link></db:term>
<db:listitem>
<db:para>The QSignalSpy class enables introspection of signal emission.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsignaltransition.xml" xlink:role="class">QSignalTransition</db:link></db:term>
<db:listitem>
<db:para>The QSignalTransition class provides a transition based on a Qt signal.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsimplexmlnodemodel.xml" xlink:role="class">QSimpleXmlNodeModel</db:link></db:term>
<db:listitem>
<db:para>The QSimpleXmlNodeModel class is an implementation of QAbstractXmlNodeModel sufficient for many common cases.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsize.xml" xlink:role="class">QSize</db:link></db:term>
<db:listitem>
<db:para>The QSize class defines the size of a two-dimensional object using integer point precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsizef.xml" xlink:role="class">QSizeF</db:link></db:term>
<db:listitem>
<db:para>The QSizeF class defines the size of a two-dimensional object using floating point precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsizegrip.xml" xlink:role="class">QSizeGrip</db:link></db:term>
<db:listitem>
<db:para>The QSizeGrip class provides a resize handle for resizing top-level windows.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsizepolicy.xml" xlink:role="class">QSizePolicy</db:link></db:term>
<db:listitem>
<db:para>The QSizePolicy class is a layout attribute describing horizontal and vertical resizing policy.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qslider.xml" xlink:role="class">QSlider</db:link></db:term>
<db:listitem>
<db:para>The QSlider widget provides a vertical or horizontal slider.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsocketnotifier.xml" xlink:role="class">QSocketNotifier</db:link></db:term>
<db:listitem>
<db:para>The QSocketNotifier class provides support for monitoring activity on a file descriptor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsortfilterproxymodel.xml" xlink:role="class">QSortFilterProxyModel</db:link></db:term>
<db:listitem>
<db:para>The QSortFilterProxyModel class provides support for sorting and filtering data passed between another model and a view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsound.xml" xlink:role="class">QSound</db:link></db:term>
<db:listitem>
<db:para>The QSound class provides a method to play .wav sound files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsoundeffect.xml" xlink:role="class">QSoundEffect</db:link></db:term>
<db:listitem>
<db:para>The QSoundEffect class provides a way to play low latency sound effects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsourcelocation.xml" xlink:role="class">QSourceLocation</db:link></db:term>
<db:listitem>
<db:para>The QSourceLocation class identifies a location in a resource by URI, line, and column.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qspaceritem.xml" xlink:role="class">QSpacerItem</db:link></db:term>
<db:listitem>
<db:para>The QSpacerItem class provides blank space in a layout.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qspinbox.xml" xlink:role="class">QSpinBox</db:link></db:term>
<db:listitem>
<db:para>The QSpinBox class provides a spin box widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsplashscreen.xml" xlink:role="class">QSplashScreen</db:link></db:term>
<db:listitem>
<db:para>The QSplashScreen widget provides a splash screen that can be shown during application startup.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsplitter.xml" xlink:role="class">QSplitter</db:link></db:term>
<db:listitem>
<db:para>The QSplitter class implements a splitter widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsplitterhandle.xml" xlink:role="class">QSplitterHandle</db:link></db:term>
<db:listitem>
<db:para>The QSplitterHandle class provides handle functionality for the splitter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqldatabase.xml" xlink:role="class">QSqlDatabase</db:link></db:term>
<db:listitem>
<db:para>The QSqlDatabase class represents a connection to a database.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqldriver.xml" xlink:role="class">QSqlDriver</db:link></db:term>
<db:listitem>
<db:para>The QSqlDriver class is an abstract base class for accessing specific SQL databases.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqldrivercreator.xml" xlink:role="class">QSqlDriverCreator</db:link></db:term>
<db:listitem>
<db:para>The QSqlDriverCreator class is a template class that provides a SQL driver factory for a specific driver type.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqldrivercreatorbase.xml" xlink:role="class">QSqlDriverCreatorBase</db:link></db:term>
<db:listitem>
<db:para>The QSqlDriverCreatorBase class is the base class for SQL driver factories.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqldriverplugin.xml" xlink:role="class">QSqlDriverPlugin</db:link></db:term>
<db:listitem>
<db:para>The QSqlDriverPlugin class provides an abstract base for custom QSqlDriver plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqlerror.xml" xlink:role="class">QSqlError</db:link></db:term>
<db:listitem>
<db:para>The QSqlError class provides SQL database error information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqlfield.xml" xlink:role="class">QSqlField</db:link></db:term>
<db:listitem>
<db:para>The QSqlField class manipulates the fields in SQL database tables and views.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqlindex.xml" xlink:role="class">QSqlIndex</db:link></db:term>
<db:listitem>
<db:para>The QSqlIndex class provides functions to manipulate and describe database indexes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqlquery.xml" xlink:role="class">QSqlQuery</db:link></db:term>
<db:listitem>
<db:para>The QSqlQuery class provides a means of executing and manipulating SQL statements.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqlquerymodel.xml" xlink:role="class">QSqlQueryModel</db:link></db:term>
<db:listitem>
<db:para>The QSqlQueryModel class provides a read-only data model for SQL result sets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqlrecord.xml" xlink:role="class">QSqlRecord</db:link></db:term>
<db:listitem>
<db:para>The QSqlRecord class encapsulates a database record.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqlrelation.xml" xlink:role="class">QSqlRelation</db:link></db:term>
<db:listitem>
<db:para>The QSqlRelation class stores information about an SQL foreign key.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqlrelationaltablemodel.xml" xlink:role="class">QSqlRelationalTableModel</db:link></db:term>
<db:listitem>
<db:para>The QSqlRelationalTableModel class provides an editable data model for a single database table, with foreign key support.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqlresult.xml" xlink:role="class">QSqlResult</db:link></db:term>
<db:listitem>
<db:para>The QSqlResult class provides an abstract interface for accessing data from specific SQL databases.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsqltablemodel.xml" xlink:role="class">QSqlTableModel</db:link></db:term>
<db:listitem>
<db:para>The QSqlTableModel class provides an editable data model for a single database table.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslcertificate.xml" xlink:role="class">QSslCertificate</db:link></db:term>
<db:listitem>
<db:para>The QSslCertificate class provides a convenient API for an X509 certificate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslcertificateextension.xml" xlink:role="class">QSslCertificateExtension</db:link></db:term>
<db:listitem>
<db:para>The QSslCertificateExtension class provides an API for accessing the extensions of an X509 certificate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslcipher.xml" xlink:role="class">QSslCipher</db:link></db:term>
<db:listitem>
<db:para>The QSslCipher class represents an SSL cryptographic cipher.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslconfiguration.xml" xlink:role="class">QSslConfiguration</db:link></db:term>
<db:listitem>
<db:para>The QSslConfiguration class holds the configuration and state of an SSL connection</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslellipticcurve.xml" xlink:role="class">QSslEllipticCurve</db:link></db:term>
<db:listitem>
<db:para>Represents an elliptic curve for use by elliptic-curve cipher algorithms.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslerror.xml" xlink:role="class">QSslError</db:link></db:term>
<db:listitem>
<db:para>The QSslError class provides an SSL error.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslkey.xml" xlink:role="class">QSslKey</db:link></db:term>
<db:listitem>
<db:para>The QSslKey class provides an interface for private and public keys.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslpresharedkeyauthenticator.xml" xlink:role="class">QSslPreSharedKeyAuthenticator</db:link></db:term>
<db:listitem>
<db:para>The QSslPreSharedKeyAuthenticator class provides authentication data for pre shared keys (PSK) ciphersuites.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslsocket.xml" xlink:role="class">QSslSocket</db:link></db:term>
<db:listitem>
<db:para>The QSslSocket class provides an SSL encrypted socket for both clients and servers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstack.xml" xlink:role="class">QStack</db:link></db:term>
<db:listitem>
<db:para>The QStack class is a template class that provides a stack.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstackedlayout.xml" xlink:role="class">QStackedLayout</db:link></db:term>
<db:listitem>
<db:para>The QStackedLayout class provides a stack of widgets where only one widget is visible at a time.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstackedwidget.xml" xlink:role="class">QStackedWidget</db:link></db:term>
<db:listitem>
<db:para>The QStackedWidget class provides a stack of widgets where only one widget is visible at a time.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstandarditem.xml" xlink:role="class">QStandardItem</db:link></db:term>
<db:listitem>
<db:para>The QStandardItem class provides an item for use with the QStandardItemModel class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstandarditemeditorcreator.xml" xlink:role="class">QStandardItemEditorCreator</db:link></db:term>
<db:listitem>
<db:para>The QStandardItemEditorCreator class provides the possibility to register widgets without having to subclass QItemEditorCreatorBase.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstandarditemmodel.xml" xlink:role="class">QStandardItemModel</db:link></db:term>
<db:listitem>
<db:para>The QStandardItemModel class provides a generic model for storing custom data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstandardpaths.xml" xlink:role="class">QStandardPaths</db:link></db:term>
<db:listitem>
<db:para>The QStandardPaths class provides methods for accessing standard paths.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstate.xml" xlink:role="class">QState</db:link></db:term>
<db:listitem>
<db:para>The QState class provides a general-purpose state for QStateMachine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstatemachine.xml" xlink:role="class">QStateMachine</db:link></db:term>
<db:listitem>
<db:para>The QStateMachine class provides a hierarchical finite state machine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstaticplugin.xml" xlink:role="class">QStaticPlugin</db:link></db:term>
<db:listitem>
<db:para>QStaticPlugin is a struct containing a reference to a static plugin instance together with its meta data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstatictext.xml" xlink:role="class">QStaticText</db:link></db:term>
<db:listitem>
<db:para>The QStaticText class enables optimized drawing of text when the text and its layout is updated rarely.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstatusbar.xml" xlink:role="class">QStatusBar</db:link></db:term>
<db:listitem>
<db:para>The QStatusBar class provides a horizontal bar suitable for presenting status information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstatustipevent.xml" xlink:role="class">QStatusTipEvent</db:link></db:term>
<db:listitem>
<db:para>The QStatusTipEvent class provides an event that is used to show messages in a status bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstorageinfo.xml" xlink:role="class">QStorageInfo</db:link></db:term>
<db:listitem>
<db:para>Provides information about currently mounted storage and drives.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstring.xml" xlink:role="class">QString</db:link></db:term>
<db:listitem>
<db:para>The QString class provides a Unicode character string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringlist.xml" xlink:role="class">QStringList</db:link></db:term>
<db:listitem>
<db:para>The QStringList class provides a list of strings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringlistmodel.xml" xlink:role="class">QStringListModel</db:link></db:term>
<db:listitem>
<db:para>The QStringListModel class provides a model that supplies strings to views.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringmatcher.xml" xlink:role="class">QStringMatcher</db:link></db:term>
<db:listitem>
<db:para>The QStringMatcher class holds a sequence of characters that can be quickly matched in a Unicode string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringref.xml" xlink:role="class">QStringRef</db:link></db:term>
<db:listitem>
<db:para>The QStringRef class provides a thin wrapper around QString substrings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyle.xml" xlink:role="class">QStyle</db:link></db:term>
<db:listitem>
<db:para>The QStyle class is an abstract base class that encapsulates the look and feel of a GUI.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstylefactory.xml" xlink:role="class">QStyleFactory</db:link></db:term>
<db:listitem>
<db:para>The QStyleFactory class creates QStyle objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstylehintreturn.xml" xlink:role="class">QStyleHintReturn</db:link></db:term>
<db:listitem>
<db:para>The QStyleHintReturn class provides style hints that return more than basic data types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstylehintreturnmask.xml" xlink:role="class">QStyleHintReturnMask</db:link></db:term>
<db:listitem>
<db:para>The QStyleHintReturnMask class provides style hints that return a QRegion.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstylehintreturnvariant.xml" xlink:role="class">QStyleHintReturnVariant</db:link></db:term>
<db:listitem>
<db:para>The QStyleHintReturnVariant class provides style hints that return a QVariant.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstylehints.xml" xlink:role="class">QStyleHints</db:link></db:term>
<db:listitem>
<db:para>The QStyleHints class contains platform specific hints and settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoption.xml" xlink:role="class">QStyleOption</db:link></db:term>
<db:listitem>
<db:para>The QStyleOption class stores the parameters used by QStyle functions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionbutton.xml" xlink:role="class">QStyleOptionButton</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionButton class is used to describe the parameters for drawing buttons.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptioncombobox.xml" xlink:role="class">QStyleOptionComboBox</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionComboBox class is used to describe the parameter for drawing a combobox.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptioncomplex.xml" xlink:role="class">QStyleOptionComplex</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionComplex class is used to hold parameters that are common to all complex controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiondockwidget.xml" xlink:role="class">QStyleOptionDockWidget</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionDockWidget class is used to describe the parameters for drawing a dock widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionfocusrect.xml" xlink:role="class">QStyleOptionFocusRect</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionFocusRect class is used to describe the parameters for drawing a focus rectangle with QStyle.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionframe.xml" xlink:role="class">QStyleOptionFrame</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionFrame class is used to describe the parameters for drawing a frame.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiongraphicsitem.xml" xlink:role="class">QStyleOptionGraphicsItem</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionGraphicsItem class is used to describe the parameters needed to draw a QGraphicsItem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiongroupbox.xml" xlink:role="class">QStyleOptionGroupBox</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionGroupBox class describes the parameters for drawing a group box.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionheader.xml" xlink:role="class">QStyleOptionHeader</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionHeader class is used to describe the parameters for drawing a header.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionmenuitem.xml" xlink:role="class">QStyleOptionMenuItem</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionMenuItem class is used to describe the parameter necessary for drawing a menu item.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionprogressbar.xml" xlink:role="class">QStyleOptionProgressBar</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionProgressBar class is used to describe the parameters necessary for drawing a progress bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionrubberband.xml" xlink:role="class">QStyleOptionRubberBand</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionRubberBand class is used to describe the parameters needed for drawing a rubber band.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionsizegrip.xml" xlink:role="class">QStyleOptionSizeGrip</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionSizeGrip class is used to describe the parameter for drawing a size grip.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionslider.xml" xlink:role="class">QStyleOptionSlider</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionSlider class is used to describe the parameters needed for drawing a slider.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionspinbox.xml" xlink:role="class">QStyleOptionSpinBox</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionSpinBox class is used to describe the parameters necessary for drawing a spin box.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontab.xml" xlink:role="class">QStyleOptionTab</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionTab class is used to describe the parameters for drawing a tab bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontabbarbase.xml" xlink:role="class">QStyleOptionTabBarBase</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionTabBarBase class is used to describe the base of a tab bar, i.e. the part that the tab bar usually overlaps with.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontabwidgetframe.xml" xlink:role="class">QStyleOptionTabWidgetFrame</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionTabWidgetFrame class is used to describe the parameters for drawing the frame around a tab widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontitlebar.xml" xlink:role="class">QStyleOptionTitleBar</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionTitleBar class is used to describe the parameters for drawing a title bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontoolbar.xml" xlink:role="class">QStyleOptionToolBar</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionToolBar class is used to describe the parameters for drawing a toolbar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontoolbox.xml" xlink:role="class">QStyleOptionToolBox</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionToolBox class is used to describe the parameters needed for drawing a tool box.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontoolbutton.xml" xlink:role="class">QStyleOptionToolButton</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionToolButton class is used to describe the parameters for drawing a tool button.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionviewitem.xml" xlink:role="class">QStyleOptionViewItem</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionViewItem class is used to describe the parameters used to draw an item in a view widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstylepainter.xml" xlink:role="class">QStylePainter</db:link></db:term>
<db:listitem>
<db:para>The QStylePainter class is a convenience class for drawing QStyle elements inside a widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleplugin.xml" xlink:role="class">QStylePlugin</db:link></db:term>
<db:listitem>
<db:para>The QStylePlugin class provides an abstract base for custom QStyle plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleditemdelegate.xml" xlink:role="class">QStyledItemDelegate</db:link></db:term>
<db:listitem>
<db:para>The QStyledItemDelegate class provides display and editing facilities for data items from a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsupportedwritingsystems.xml" xlink:role="class">QSupportedWritingSystems</db:link></db:term>
<db:listitem>
<db:para>The QSupportedWritingSystems class is used when registering fonts with the internal Qt fontdatabase</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsurface.xml" xlink:role="class">QSurface</db:link></db:term>
<db:listitem>
<db:para>The QSurface class is an abstraction of renderable surfaces in Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsurfaceformat.xml" xlink:role="class">QSurfaceFormat</db:link></db:term>
<db:listitem>
<db:para>The QSurfaceFormat class represents the format of a QSurface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsvggenerator.xml" xlink:role="class">QSvgGenerator</db:link></db:term>
<db:listitem>
<db:para>The QSvgGenerator class provides a paint device that is used to create SVG drawings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsvgrenderer.xml" xlink:role="class">QSvgRenderer</db:link></db:term>
<db:listitem>
<db:para>The QSvgRenderer class is used to draw the contents of SVG files onto paint devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsvgwidget.xml" xlink:role="class">QSvgWidget</db:link></db:term>
<db:listitem>
<db:para>The QSvgWidget class provides a widget that is used to display the contents of Scalable Vector Graphics (SVG) files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qswipegesture.xml" xlink:role="class">QSwipeGesture</db:link></db:term>
<db:listitem>
<db:para>The QSwipeGesture class describes a swipe gesture made by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsyntaxhighlighter.xml" xlink:role="class">QSyntaxHighlighter</db:link></db:term>
<db:listitem>
<db:para>The QSyntaxHighlighter class allows you to define syntax highlighting rules, and in addition you can use the class to query a document's current formatting or user data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsysinfo.xml" xlink:role="class">QSysInfo</db:link></db:term>
<db:listitem>
<db:para>The QSysInfo class provides information about the system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsystemsemaphore.xml" xlink:role="class">QSystemSemaphore</db:link></db:term>
<db:listitem>
<db:para>The QSystemSemaphore class provides a general counting system semaphore.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsystemtrayicon.xml" xlink:role="class">QSystemTrayIcon</db:link></db:term>
<db:listitem>
<db:para>The QSystemTrayIcon class provides an icon for an application in the system tray.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtabbar.xml" xlink:role="class">QTabBar</db:link></db:term>
<db:listitem>
<db:para>The QTabBar class provides a tab bar, e.g. for use in tabbed dialogs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtabwidget.xml" xlink:role="class">QTabWidget</db:link></db:term>
<db:listitem>
<db:para>The QTabWidget class provides a stack of tabbed widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtableview.xml" xlink:role="class">QTableView</db:link></db:term>
<db:listitem>
<db:para>The QTableView class provides a default model/view implementation of a table view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtablewidget.xml" xlink:role="class">QTableWidget</db:link></db:term>
<db:listitem>
<db:para>The QTableWidget class provides an item-based table view with a default model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtablewidgetitem.xml" xlink:role="class">QTableWidgetItem</db:link></db:term>
<db:listitem>
<db:para>The QTableWidgetItem class provides an item for use with the QTableWidget class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtablewidgetselectionrange.xml" xlink:role="class">QTableWidgetSelectionRange</db:link></db:term>
<db:listitem>
<db:para>The QTableWidgetSelectionRange class provides a way to interact with selection in a model without using model indexes and a selection model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtabletevent.xml" xlink:role="class">QTabletEvent</db:link></db:term>
<db:listitem>
<db:para>The QTabletEvent class contains parameters that describe a Tablet event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtapandholdgesture.xml" xlink:role="class">QTapAndHoldGesture</db:link></db:term>
<db:listitem>
<db:para>The QTapAndHoldGesture class describes a tap-and-hold (aka LongTap) gesture made by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtapfilter.xml" xlink:role="class">QTapFilter</db:link></db:term>
<db:listitem>
<db:para>The QTapFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtapgesture.xml" xlink:role="class">QTapGesture</db:link></db:term>
<db:listitem>
<db:para>The QTapGesture class describes a tap gesture made by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtapreading.xml" xlink:role="class">QTapReading</db:link></db:term>
<db:listitem>
<db:para>The QTapReading class represents one reading from the tap sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtapsensor.xml" xlink:role="class">QTapSensor</db:link></db:term>
<db:listitem>
<db:para>The QTapSensor class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcpserver.xml" xlink:role="class">QTcpServer</db:link></db:term>
<db:listitem>
<db:para>The QTcpServer class provides a TCP-based server.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcpsocket.xml" xlink:role="class">QTcpSocket</db:link></db:term>
<db:listitem>
<db:para>The QTcpSocket class provides a TCP socket.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtemporarydir.xml" xlink:role="class">QTemporaryDir</db:link></db:term>
<db:listitem>
<db:para>The QTemporaryDir class creates a unique directory for temporary use.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtemporaryfile.xml" xlink:role="class">QTemporaryFile</db:link></db:term>
<db:listitem>
<db:para>The QTemporaryFile class is an I/O device that operates on temporary files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtest-qtoucheventsequence.xml" xlink:role="class">QTest::QTouchEventSequence</db:link></db:term>
<db:listitem>
<db:para>The QTouchEventSequence class is used to simulate a sequence of touch events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtesteventlist.xml" xlink:role="class">QTestEventList</db:link></db:term>
<db:listitem>
<db:para>The QTestEventList class provides a list of GUI events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextblock.xml" xlink:role="class">QTextBlock</db:link></db:term>
<db:listitem>
<db:para>The QTextBlock class provides a container for text fragments in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextblockformat.xml" xlink:role="class">QTextBlockFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextBlockFormat class provides formatting information for blocks of text in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextblockgroup.xml" xlink:role="class">QTextBlockGroup</db:link></db:term>
<db:listitem>
<db:para>The QTextBlockGroup class provides a container for text blocks within a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextblockuserdata.xml" xlink:role="class">QTextBlockUserData</db:link></db:term>
<db:listitem>
<db:para>The QTextBlockUserData class is used to associate custom data with blocks of text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextboundaryfinder.xml" xlink:role="class">QTextBoundaryFinder</db:link></db:term>
<db:listitem>
<db:para>The QTextBoundaryFinder class provides a way of finding Unicode text boundaries in a string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextbrowser.xml" xlink:role="class">QTextBrowser</db:link></db:term>
<db:listitem>
<db:para>The QTextBrowser class provides a rich text browser with hypertext navigation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextcharformat.xml" xlink:role="class">QTextCharFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextCharFormat class provides formatting information for characters in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextcodec.xml" xlink:role="class">QTextCodec</db:link></db:term>
<db:listitem>
<db:para>The QTextCodec class provides conversions between text encodings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextcursor.xml" xlink:role="class">QTextCursor</db:link></db:term>
<db:listitem>
<db:para>The QTextCursor class offers an API to access and modify QTextDocuments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextdecoder.xml" xlink:role="class">QTextDecoder</db:link></db:term>
<db:listitem>
<db:para>The QTextDecoder class provides a state-based decoder.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextdocument.xml" xlink:role="class">QTextDocument</db:link></db:term>
<db:listitem>
<db:para>The QTextDocument class holds formatted text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextdocumentfragment.xml" xlink:role="class">QTextDocumentFragment</db:link></db:term>
<db:listitem>
<db:para>The QTextDocumentFragment class represents a piece of formatted text from a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextdocumentwriter.xml" xlink:role="class">QTextDocumentWriter</db:link></db:term>
<db:listitem>
<db:para>The QTextDocumentWriter class provides a format-independent interface for writing a QTextDocument to files or other devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextedit.xml" xlink:role="class">QTextEdit</db:link></db:term>
<db:listitem>
<db:para>The QTextEdit class provides a widget that is used to edit and display both plain and rich text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextencoder.xml" xlink:role="class">QTextEncoder</db:link></db:term>
<db:listitem>
<db:para>The QTextEncoder class provides a state-based encoder.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextformat.xml" xlink:role="class">QTextFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextFormat class provides formatting information for a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextfragment.xml" xlink:role="class">QTextFragment</db:link></db:term>
<db:listitem>
<db:para>The QTextFragment class holds a piece of text in a QTextDocument with a single QTextCharFormat.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextframe.xml" xlink:role="class">QTextFrame</db:link></db:term>
<db:listitem>
<db:para>The QTextFrame class represents a frame in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextframeformat.xml" xlink:role="class">QTextFrameFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextFrameFormat class provides formatting information for frames in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextimageformat.xml" xlink:role="class">QTextImageFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextImageFormat class provides formatting information for images in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextinlineobject.xml" xlink:role="class">QTextInlineObject</db:link></db:term>
<db:listitem>
<db:para>The QTextInlineObject class represents an inline object in a QAbstractTextDocumentLayout and its implementations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextitem.xml" xlink:role="class">QTextItem</db:link></db:term>
<db:listitem>
<db:para>The QTextItem class provides all the information required to draw text in a custom paint engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextlayout.xml" xlink:role="class">QTextLayout</db:link></db:term>
<db:listitem>
<db:para>The QTextLayout class is used to lay out and render text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextlength.xml" xlink:role="class">QTextLength</db:link></db:term>
<db:listitem>
<db:para>The QTextLength class encapsulates the different types of length used in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextline.xml" xlink:role="class">QTextLine</db:link></db:term>
<db:listitem>
<db:para>The QTextLine class represents a line of text inside a QTextLayout.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextlist.xml" xlink:role="class">QTextList</db:link></db:term>
<db:listitem>
<db:para>The QTextList class provides a decorated list of items in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextlistformat.xml" xlink:role="class">QTextListFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextListFormat class provides formatting information for lists in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextobject.xml" xlink:role="class">QTextObject</db:link></db:term>
<db:listitem>
<db:para>The QTextObject class is a base class for different kinds of objects that can group parts of a QTextDocument together.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextobjectinterface.xml" xlink:role="class">QTextObjectInterface</db:link></db:term>
<db:listitem>
<db:para>The QTextObjectInterface class allows drawing of custom text objects in QTextDocuments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextoption.xml" xlink:role="class">QTextOption</db:link></db:term>
<db:listitem>
<db:para>The QTextOption class provides a description of general rich text properties.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextstream.xml" xlink:role="class">QTextStream</db:link></db:term>
<db:listitem>
<db:para>The QTextStream class provides a convenient interface for reading and writing text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtexttable.xml" xlink:role="class">QTextTable</db:link></db:term>
<db:listitem>
<db:para>The QTextTable class represents a table in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtexttablecell.xml" xlink:role="class">QTextTableCell</db:link></db:term>
<db:listitem>
<db:para>The QTextTableCell class represents the properties of a cell in a QTextTable.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtexttablecellformat.xml" xlink:role="class">QTextTableCellFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextTableCellFormat class provides formatting information for table cells in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtexttableformat.xml" xlink:role="class">QTextTableFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextTableFormat class provides formatting information for tables in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qthread.xml" xlink:role="class">QThread</db:link></db:term>
<db:listitem>
<db:para>The QThread class provides a platform-independent way to manage threads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qthreadpool.xml" xlink:role="class">QThreadPool</db:link></db:term>
<db:listitem>
<db:para>The QThreadPool class manages a collection of QThreads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qthreadstorage.xml" xlink:role="class">QThreadStorage</db:link></db:term>
<db:listitem>
<db:para>The QThreadStorage class provides per-thread data storage.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtilerules.xml" xlink:role="class">QTileRules</db:link></db:term>
<db:listitem>
<db:para>The QTileRules class provides the rules used to draw a pixmap or image split into nine segments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtiltfilter.xml" xlink:role="class">QTiltFilter</db:link></db:term>
<db:listitem>
<db:para>The QTiltFilter class is a convenience wrapper around QSensorFilter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtiltreading.xml" xlink:role="class">QTiltReading</db:link></db:term>
<db:listitem>
<db:para>The QTiltReading class holds readings from the tilt sensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtiltsensor.xml" xlink:role="class">QTiltSensor</db:link></db:term>
<db:listitem>
<db:para>The QTiltSensor class is a convenience wrapper around QSensor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtime.xml" xlink:role="class">QTime</db:link></db:term>
<db:listitem>
<db:para>The QTime class provides clock time functions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimeedit.xml" xlink:role="class">QTimeEdit</db:link></db:term>
<db:listitem>
<db:para>The QTimeEdit class provides a widget for editing times based on the QDateTimeEdit widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimeline.xml" xlink:role="class">QTimeLine</db:link></db:term>
<db:listitem>
<db:para>The QTimeLine class provides a timeline for controlling animations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimezone.xml" xlink:role="class">QTimeZone</db:link></db:term>
<db:listitem>
<db:para>The QTimeZone class converts between UTC and local time in a specific time zone.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimer.xml" xlink:role="class">QTimer</db:link></db:term>
<db:listitem>
<db:para>The QTimer class provides repetitive and single-shot timers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimerevent.xml" xlink:role="class">QTimerEvent</db:link></db:term>
<db:listitem>
<db:para>The QTimerEvent class contains parameters that describe a timer event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtoolbar.xml" xlink:role="class">QToolBar</db:link></db:term>
<db:listitem>
<db:para>The QToolBar class provides a movable panel that contains a set of controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtoolbox.xml" xlink:role="class">QToolBox</db:link></db:term>
<db:listitem>
<db:para>The QToolBox class provides a column of tabbed widget items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtoolbutton.xml" xlink:role="class">QToolButton</db:link></db:term>
<db:listitem>
<db:para>The QToolButton class provides a quick-access button to commands or options, usually used inside a QToolBar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtooltip.xml" xlink:role="class">QToolTip</db:link></db:term>
<db:listitem>
<db:para>The QToolTip class provides tool tips (balloon help) for any widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtouchdevice.xml" xlink:role="class">QTouchDevice</db:link></db:term>
<db:listitem>
<db:para>The QTouchDevice class describes the device from which touch events originate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtouchevent.xml" xlink:role="class">QTouchEvent</db:link></db:term>
<db:listitem>
<db:para>The QTouchEvent class contains parameters that describe a touch event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtransform.xml" xlink:role="class">QTransform</db:link></db:term>
<db:listitem>
<db:para>The QTransform class specifies 2D transformations of a coordinate system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtranslator.xml" xlink:role="class">QTranslator</db:link></db:term>
<db:listitem>
<db:para>The QTranslator class provides internationalization support for text output.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtreeview.xml" xlink:role="class">QTreeView</db:link></db:term>
<db:listitem>
<db:para>The QTreeView class provides a default model/view implementation of a tree view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtreewidget.xml" xlink:role="class">QTreeWidget</db:link></db:term>
<db:listitem>
<db:para>The QTreeWidget class provides a tree view that uses a predefined tree model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtreewidgetitem.xml" xlink:role="class">QTreeWidgetItem</db:link></db:term>
<db:listitem>
<db:para>The QTreeWidgetItem class provides an item for use with the QTreeWidget convenience class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtreewidgetitemiterator.xml" xlink:role="class">QTreeWidgetItemIterator</db:link></db:term>
<db:listitem>
<db:para>The QTreeWidgetItemIterator class provides a way to iterate over the items in a QTreeWidget instance.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qudpsocket.xml" xlink:role="class">QUdpSocket</db:link></db:term>
<db:listitem>
<db:para>The QUdpSocket class provides a UDP socket.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="quiloader.xml" xlink:role="class">QUiLoader</db:link></db:term>
<db:listitem>
<db:para>The QUiLoader class enables standalone applications to dynamically create user interfaces at run-time using the information stored in UI files or specified in plugin paths.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qundocommand.xml" xlink:role="class">QUndoCommand</db:link></db:term>
<db:listitem>
<db:para>The QUndoCommand class is the base class of all commands stored on a QUndoStack.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qundogroup.xml" xlink:role="class">QUndoGroup</db:link></db:term>
<db:listitem>
<db:para>The QUndoGroup class is a group of QUndoStack objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qundostack.xml" xlink:role="class">QUndoStack</db:link></db:term>
<db:listitem>
<db:para>The QUndoStack class is a stack of QUndoCommand objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qundoview.xml" xlink:role="class">QUndoView</db:link></db:term>
<db:listitem>
<db:para>The QUndoView class displays the contents of a QUndoStack.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qunhandledexception.xml" xlink:role="class">QUnhandledException</db:link></db:term>
<db:listitem>
<db:para>The UnhandledException class represents an unhandled exception in a worker thread.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qurl.xml" xlink:role="class">QUrl</db:link></db:term>
<db:listitem>
<db:para>The QUrl class provides a convenient interface for working with URLs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qurlquery.xml" xlink:role="class">QUrlQuery</db:link></db:term>
<db:listitem>
<db:para>The QUrlQuery class provides a way to manipulate a key-value pairs in a URL's query.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="quuid.xml" xlink:role="class">QUuid</db:link></db:term>
<db:listitem>
<db:para>The QUuid class stores a Universally Unique Identifier (UUID).</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvboxlayout.xml" xlink:role="class">QVBoxLayout</db:link></db:term>
<db:listitem>
<db:para>The QVBoxLayout class lines up widgets vertically.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvalidator.xml" xlink:role="class">QValidator</db:link></db:term>
<db:listitem>
<db:para>The QValidator class provides validation of input text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvarlengtharray.xml" xlink:role="class">QVarLengthArray</db:link></db:term>
<db:listitem>
<db:para>The QVarLengthArray class provides a low-level variable-length array.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvariant.xml" xlink:role="class">QVariant</db:link></db:term>
<db:listitem>
<db:para>The QVariant class acts like a union for the most common Qt data types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvariantanimation.xml" xlink:role="class">QVariantAnimation</db:link></db:term>
<db:listitem>
<db:para>The QVariantAnimation class provides a base class for animations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvector.xml" xlink:role="class">QVector</db:link></db:term>
<db:listitem>
<db:para>The QVector class is a template class that provides a dynamic array.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvector2d.xml" xlink:role="class">QVector2D</db:link></db:term>
<db:listitem>
<db:para>The QVector2D class represents a vector or vertex in 2D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvector3d.xml" xlink:role="class">QVector3D</db:link></db:term>
<db:listitem>
<db:para>The QVector3D class represents a vector or vertex in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvector4d.xml" xlink:role="class">QVector4D</db:link></db:term>
<db:listitem>
<db:para>The QVector4D class represents a vector or vertex in 4D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvectoriterator.xml" xlink:role="class">QVectorIterator</db:link></db:term>
<db:listitem>
<db:para>The QVectorIterator class provides a Java-style const iterator for QVector and QStack.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qversionnumber.xml" xlink:role="class">QVersionNumber</db:link></db:term>
<db:listitem>
<db:para>The QVersionNumber class contains a version number with an arbitrary number of segments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideodeviceselectorcontrol.xml" xlink:role="class">QVideoDeviceSelectorControl</db:link></db:term>
<db:listitem>
<db:para>The QVideoDeviceSelectorControl class provides an video device selector media control.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideoencodersettings.xml" xlink:role="class">QVideoEncoderSettings</db:link></db:term>
<db:listitem>
<db:para>The QVideoEncoderSettings class provides a set of video encoder settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideoencodersettingscontrol.xml" xlink:role="class">QVideoEncoderSettingsControl</db:link></db:term>
<db:listitem>
<db:para>The QVideoEncoderSettingsControl class provides access to the settings of a media service that performs video encoding.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideofilterrunnable.xml" xlink:role="class">QVideoFilterRunnable</db:link></db:term>
<db:listitem>
<db:para>The QVideoFilterRunnable class represents the implementation of a filter that owns all graphics and computational resources, and performs the actual filtering or calculations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideoframe.xml" xlink:role="class">QVideoFrame</db:link></db:term>
<db:listitem>
<db:para>The QVideoFrame class represents a frame of video data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideoprobe.xml" xlink:role="class">QVideoProbe</db:link></db:term>
<db:listitem>
<db:para>The QVideoProbe class allows you to monitor video frames being played or recorded.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideorenderercontrol.xml" xlink:role="class">QVideoRendererControl</db:link></db:term>
<db:listitem>
<db:para>The QVideoRendererControl class provides a media control for rendering video to a QAbstractVideoSurface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideosurfaceformat.xml" xlink:role="class">QVideoSurfaceFormat</db:link></db:term>
<db:listitem>
<db:para>The QVideoSurfaceFormat class specifies the stream format of a video presentation surface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideowidget.xml" xlink:role="class">QVideoWidget</db:link></db:term>
<db:listitem>
<db:para>The QVideoWidget class provides a widget which presents video produced by a media object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideowidgetcontrol.xml" xlink:role="class">QVideoWidgetControl</db:link></db:term>
<db:listitem>
<db:para>The QVideoWidgetControl class provides a media control which implements a video widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideowindowcontrol.xml" xlink:role="class">QVideoWindowControl</db:link></db:term>
<db:listitem>
<db:para>The QVideoWindowControl class provides a media control for rendering video to a window.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwglnativecontext.xml" xlink:role="class">QWGLNativeContext</db:link></db:term>
<db:listitem>
<db:para>A class encapsulating a WGL context on Windows with desktop OpenGL (opengl32.dll)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwaitcondition.xml" xlink:role="class">QWaitCondition</db:link></db:term>
<db:listitem>
<db:para>The QWaitCondition class provides a condition variable for synchronizing threads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qweakpointer.xml" xlink:role="class">QWeakPointer</db:link></db:term>
<db:listitem>
<db:para>The QWeakPointer class holds a weak reference to a shared pointer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebchannel.xml" xlink:role="class">QWebChannel</db:link></db:term>
<db:listitem>
<db:para>Exposes QObjects to remote HTML clients.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebchannelabstracttransport.xml" xlink:role="class">QWebChannelAbstractTransport</db:link></db:term>
<db:listitem>
<db:para>Communication channel between the C++ QWebChannel server and a HTML/JS client.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebenginecertificateerror.xml" xlink:role="class">QWebEngineCertificateError</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineCertificateError class provides information about a certificate error.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebenginecookiestore.xml" xlink:role="class">QWebEngineCookieStore</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineCookieStore class provides access to Chromium's cookies.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebenginedownloaditem.xml" xlink:role="class">QWebEngineDownloadItem</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineDownloadItem class provides information about a download.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebenginefullscreenrequest.xml" xlink:role="class">QWebEngineFullScreenRequest</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineFullScreenRequest class enables accepting or rejecting requests for entering and exiting the fullscreen mode.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebenginehistory.xml" xlink:role="class">QWebEngineHistory</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineHistory class represents the history of a web engine page.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebenginehistoryitem.xml" xlink:role="class">QWebEngineHistoryItem</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineHistoryItem class represents one item in the history of a web engine page.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebenginepage.xml" xlink:role="class">QWebEnginePage</db:link></db:term>
<db:listitem>
<db:para>The QWebEnginePage class provides an object to view and edit web documents.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebengineprofile.xml" xlink:role="class">QWebEngineProfile</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineProfile class provides a web engine profile shared by multiple pages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebenginescript.xml" xlink:role="class">QWebEngineScript</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineScript class encapsulates a JavaScript program.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebenginescriptcollection.xml" xlink:role="class">QWebEngineScriptCollection</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineScriptCollection class represents a collection of user scripts.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebenginesettings.xml" xlink:role="class">QWebEngineSettings</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineSettings class provides an object to store the settings used by QWebEnginePage.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebengineurlrequestinfo.xml" xlink:role="class">QWebEngineUrlRequestInfo</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineUrlRequestInfo class provides information about URL requests.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebengineurlrequestinterceptor.xml" xlink:role="class">QWebEngineUrlRequestInterceptor</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineUrlRequestInterceptor class provides an abstract base class for URL interception.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebengineurlrequestjob.xml" xlink:role="class">QWebEngineUrlRequestJob</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineUrlRequestJob class represents a custom URL request.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebengineurlschemehandler.xml" xlink:role="class">QWebEngineUrlSchemeHandler</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineUrlSchemeHandler is a base class for handling custom URL schemes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebengineview.xml" xlink:role="class">QWebEngineView</db:link></db:term>
<db:listitem>
<db:para>The QWebEngineView class provides a widget that is used to view and edit web documents.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebsocket.xml" xlink:role="class">QWebSocket</db:link></db:term>
<db:listitem>
<db:para>Implements a TCP socket that talks the WebSocket protocol.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebsocketcorsauthenticator.xml" xlink:role="class">QWebSocketCorsAuthenticator</db:link></db:term>
<db:listitem>
<db:para>The QWebSocketCorsAuthenticator class provides an authenticator object for Cross Origin Requests (CORS).</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwebsocketserver.xml" xlink:role="class">QWebSocketServer</db:link></db:term>
<db:listitem>
<db:para>Implements a WebSocket-based server.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwhatsthis.xml" xlink:role="class">QWhatsThis</db:link></db:term>
<db:listitem>
<db:para>The QWhatsThis class provides a simple description of any widget, i.e. answering the question &quot;What's This?&quot;.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwhatsthisclickedevent.xml" xlink:role="class">QWhatsThisClickedEvent</db:link></db:term>
<db:listitem>
<db:para>The QWhatsThisClickedEvent class provides an event that can be used to handle hyperlinks in a &quot;What's This?&quot; text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwheelevent.xml" xlink:role="class">QWheelEvent</db:link></db:term>
<db:listitem>
<db:para>The QWheelEvent class contains parameters that describe a wheel event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwidget.xml" xlink:role="class">QWidget</db:link></db:term>
<db:listitem>
<db:para>The QWidget class is the base class of all user interface objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwidgetaction.xml" xlink:role="class">QWidgetAction</db:link></db:term>
<db:listitem>
<db:para>The QWidgetAction class extends QAction by an interface for inserting custom widgets into action based containers, such as toolbars.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwidgetitem.xml" xlink:role="class">QWidgetItem</db:link></db:term>
<db:listitem>
<db:para>The QWidgetItem class is a layout item that represents a widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwineventnotifier.xml" xlink:role="class">QWinEventNotifier</db:link></db:term>
<db:listitem>
<db:para>The QWinEventNotifier class provides support for the Windows Wait functions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwinjumplist.xml" xlink:role="class">QWinJumpList</db:link></db:term>
<db:listitem>
<db:para>The QWinJumpList class represents a transparent wrapper around Windows Jump Lists.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwinjumplistcategory.xml" xlink:role="class">QWinJumpListCategory</db:link></db:term>
<db:listitem>
<db:para>The QWinJumpListCategory class represents a jump list category.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwinjumplistitem.xml" xlink:role="class">QWinJumpListItem</db:link></db:term>
<db:listitem>
<db:para>The QWinJumpListItem class represents a jump list item.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwinmime.xml" xlink:role="class">QWinMime</db:link></db:term>
<db:listitem>
<db:para>The QWinMime class maps open-standard MIME to Window Clipboard formats.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwintaskbarbutton.xml" xlink:role="class">QWinTaskbarButton</db:link></db:term>
<db:listitem>
<db:para>The QWinTaskbarButton class represents the Windows taskbar button for a top-level window (Windows 7 and newer).</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwintaskbarprogress.xml" xlink:role="class">QWinTaskbarProgress</db:link></db:term>
<db:listitem>
<db:para>The QWinTaskbarProgress class represents a progress indicator in the Windows taskbar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwinthumbnailtoolbar.xml" xlink:role="class">QWinThumbnailToolBar</db:link></db:term>
<db:listitem>
<db:para>The QWinThumbnailToolBar class allows manipulating the thumbnail toolbar of a window.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwinthumbnailtoolbutton.xml" xlink:role="class">QWinThumbnailToolButton</db:link></db:term>
<db:listitem>
<db:para>The QWinThumbnailToolButton class represents a button in a thumbnail toolbar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwindow.xml" xlink:role="class">QWindow</db:link></db:term>
<db:listitem>
<db:para>The QWindow class represents a window in the underlying windowing system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwindowstatechangeevent.xml" xlink:role="class">QWindowStateChangeEvent</db:link></db:term>
<db:listitem>
<db:para>The QWindowStateChangeEvent class provides the window state before a window state change.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwindowswindowfunctions.xml" xlink:role="class">QWindowsWindowFunctions</db:link></db:term>
<db:listitem>
<db:para>The QWindowsWindowFunctions class is an inline class containing miscellaneous functionality for Windows window specific functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwizard.xml" xlink:role="class">QWizard</db:link></db:term>
<db:listitem>
<db:para>The QWizard class provides a framework for wizards.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwizardpage.xml" xlink:role="class">QWizardPage</db:link></db:term>
<db:listitem>
<db:para>The QWizardPage class is the base class for wizard pages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwritelocker.xml" xlink:role="class">QWriteLocker</db:link></db:term>
<db:listitem>
<db:para>The QWriteLocker class is a convenience class that simplifies locking and unlocking read-write locks for write access.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qx11info.xml" xlink:role="class">QX11Info</db:link></db:term>
<db:listitem>
<db:para>Provides information about the X display configuration.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlattributes.xml" xlink:role="class">QXmlAttributes</db:link></db:term>
<db:listitem>
<db:para>The QXmlAttributes class provides XML attributes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlcontenthandler.xml" xlink:role="class">QXmlContentHandler</db:link></db:term>
<db:listitem>
<db:para>The QXmlContentHandler class provides an interface to report the logical content of XML data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmldtdhandler.xml" xlink:role="class">QXmlDTDHandler</db:link></db:term>
<db:listitem>
<db:para>The QXmlDTDHandler class provides an interface to report DTD content of XML data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmldeclhandler.xml" xlink:role="class">QXmlDeclHandler</db:link></db:term>
<db:listitem>
<db:para>The QXmlDeclHandler class provides an interface to report declaration content of XML data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmldefaulthandler.xml" xlink:role="class">QXmlDefaultHandler</db:link></db:term>
<db:listitem>
<db:para>The QXmlDefaultHandler class provides a default implementation of all the XML handler classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlentityresolver.xml" xlink:role="class">QXmlEntityResolver</db:link></db:term>
<db:listitem>
<db:para>The QXmlEntityResolver class provides an interface to resolve external entities contained in XML data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlerrorhandler.xml" xlink:role="class">QXmlErrorHandler</db:link></db:term>
<db:listitem>
<db:para>The QXmlErrorHandler class provides an interface to report errors in XML data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlformatter.xml" xlink:role="class">QXmlFormatter</db:link></db:term>
<db:listitem>
<db:para>The QXmlFormatter class is an implementation of QXmlSerializer for transforming XQuery output into formatted XML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlinputsource.xml" xlink:role="class">QXmlInputSource</db:link></db:term>
<db:listitem>
<db:para>The QXmlInputSource class provides the input data for the QXmlReader subclasses.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlitem.xml" xlink:role="class">QXmlItem</db:link></db:term>
<db:listitem>
<db:para>The QXmlItem class contains either an XML node or an atomic value.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmllexicalhandler.xml" xlink:role="class">QXmlLexicalHandler</db:link></db:term>
<db:listitem>
<db:para>The QXmlLexicalHandler class provides an interface to report the lexical content of XML data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmllocator.xml" xlink:role="class">QXmlLocator</db:link></db:term>
<db:listitem>
<db:para>The QXmlLocator class provides the XML handler classes with information about the parsing position within a file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlname.xml" xlink:role="class">QXmlName</db:link></db:term>
<db:listitem>
<db:para>The QXmlName class represents the name of an XML node, in an efficient, namespace-aware way. QXmlName represents the name of an XML node in a way that is both efficient and safe for comparing names. Normally, an XML node represents an XML element or attribute, but QXmlName can also represent the names of other kinds of nodes, e.g., QAbstractXmlReceiver::processingInstruction() and QAbstractXmlReceiver::namespaceBinding().</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlnamepool.xml" xlink:role="class">QXmlNamePool</db:link></db:term>
<db:listitem>
<db:para>The QXmlNamePool class is a table of shared strings referenced by instances of QXmlName.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlnamespacesupport.xml" xlink:role="class">QXmlNamespaceSupport</db:link></db:term>
<db:listitem>
<db:para>The QXmlNamespaceSupport class is a helper class for XML readers which want to include namespace support.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlnodemodelindex.xml" xlink:role="class">QXmlNodeModelIndex</db:link></db:term>
<db:listitem>
<db:para>The QXmlNodeModelIndex class identifies a node in an XML node model subclassed from QAbstractXmlNodeModel.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlparseexception.xml" xlink:role="class">QXmlParseException</db:link></db:term>
<db:listitem>
<db:para>The QXmlParseException class is used to report errors with the QXmlErrorHandler interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlquery.xml" xlink:role="class">QXmlQuery</db:link></db:term>
<db:listitem>
<db:para>The QXmlQuery class performs XQueries on XML data, or on non-XML data modeled to look like XML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlreader.xml" xlink:role="class">QXmlReader</db:link></db:term>
<db:listitem>
<db:para>The QXmlReader class provides an interface for XML readers (i.e. parsers).</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlresultitems.xml" xlink:role="class">QXmlResultItems</db:link></db:term>
<db:listitem>
<db:para>The QXmlResultItems class iterates through the results of evaluating an XQuery in QXmlQuery.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlschema.xml" xlink:role="class">QXmlSchema</db:link></db:term>
<db:listitem>
<db:para>The QXmlSchema class provides loading and validation of a W3C XML Schema.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlschemavalidator.xml" xlink:role="class">QXmlSchemaValidator</db:link></db:term>
<db:listitem>
<db:para>The QXmlSchemaValidator class validates XML instance documents against a W3C XML Schema.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlserializer.xml" xlink:role="class">QXmlSerializer</db:link></db:term>
<db:listitem>
<db:para>The QXmlSerializer class is an implementation of QAbstractXmlReceiver for transforming XQuery output into unformatted XML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlsimplereader.xml" xlink:role="class">QXmlSimpleReader</db:link></db:term>
<db:listitem>
<db:para>The QXmlSimpleReader class provides an implementation of a simple XML parser.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamattribute.xml" xlink:role="class">QXmlStreamAttribute</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamAttribute class represents a single XML attribute</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamattributes.xml" xlink:role="class">QXmlStreamAttributes</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamAttributes class represents a vector of QXmlStreamAttribute.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamentitydeclaration.xml" xlink:role="class">QXmlStreamEntityDeclaration</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamEntityDeclaration class represents a DTD entity declaration.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamentityresolver.xml" xlink:role="class">QXmlStreamEntityResolver</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamEntityResolver class provides an entity resolver for a QXmlStreamReader.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamnamespacedeclaration.xml" xlink:role="class">QXmlStreamNamespaceDeclaration</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamNamespaceDeclaration class represents a namespace declaration.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamnotationdeclaration.xml" xlink:role="class">QXmlStreamNotationDeclaration</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamNotationDeclaration class represents a DTD notation declaration.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamreader.xml" xlink:role="class">QXmlStreamReader</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamReader class provides a fast parser for reading well-formed XML via a simple streaming API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamwriter.xml" xlink:role="class">QXmlStreamWriter</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamWriter class provides an XML writer with a simple streaming API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qabstractaspect.xml" xlink:role="class">Qt3DCore::QAbstractAspect</db:link></db:term>
<db:listitem>
<db:para>QAbstractAspect is the base class for aspects that provide a vertical slice of behavior.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qbackendscenepropertychange.xml" xlink:role="class">Qt3DCore::QBackendScenePropertyChange</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qcameralens.xml" xlink:role="class">Qt3DCore::QCameraLens</db:link></db:term>
<db:listitem>
<db:para>Qt3DCore::QCameraLens specifies the projection matrix that will be used to define a Camera for a 3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qcomponent.xml" xlink:role="class">Qt3DCore::QComponent</db:link></db:term>
<db:listitem>
<db:para>The base class of scene nodes that can be aggregated by Qt3DCore::QEntity instances as a component.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qentity.xml" xlink:role="class">Qt3DCore::QEntity</db:link></db:term>
<db:listitem>
<db:para>Qt3DCore::QEntity is a Qt3DCore::QNode subclass that can aggregate several Qt3DCore::QComponent instances that will specify its behavior.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qnode.xml" xlink:role="class">Qt3DCore::QNode</db:link></db:term>
<db:listitem>
<db:para>QNode is the base class of all Qt3D node classes used to build a Qt3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qray3d.xml" xlink:role="class">Qt3DCore::QRay3D</db:link></db:term>
<db:listitem>
<db:para>The QRay3D class defines a directional line in 3D space extending through an origin point.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-qscenepropertychange.xml" xlink:role="class">Qt3DCore::QScenePropertyChange</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-quick-qqmlaspectengine.xml" xlink:role="class">Qt3DCore::Quick::QQmlAspectEngine</db:link></db:term>
<db:listitem>
<db:para>The QQmlAspectEngine provides an environment for the QAspectEngine and a method for instantiating QML components.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qabstractphysicaldevice.xml" xlink:role="class">Qt3DInput::QAbstractPhysicalDevice</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qaction.xml" xlink:role="class">Qt3DInput::QAction</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qactioninput.xml" xlink:role="class">Qt3DInput::QActionInput</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qaxis.xml" xlink:role="class">Qt3DInput::QAxis</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qaxisactionhandler.xml" xlink:role="class">Qt3DInput::QAxisActionHandler</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qaxisinput.xml" xlink:role="class">Qt3DInput::QAxisInput</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qaxissetting.xml" xlink:role="class">Qt3DInput::QAxisSetting</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qinputaspect.xml" xlink:role="class">Qt3DInput::QInputAspect</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qkeyevent.xml" xlink:role="class">Qt3DInput::QKeyEvent</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qkeyboardcontroller.xml" xlink:role="class">Qt3DInput::QKeyboardController</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qkeyboardinput.xml" xlink:role="class">Qt3DInput::QKeyboardInput</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qlogicaldevice.xml" xlink:role="class">Qt3DInput::QLogicalDevice</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qmousecontroller.xml" xlink:role="class">Qt3DInput::QMouseController</db:link></db:term>
<db:listitem>
<db:para>QMouseController is in charge of dispatching mouse events to attached QMouseInput objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qmouseevent.xml" xlink:role="class">Qt3DInput::QMouseEvent</db:link></db:term>
<db:listitem>
<db:para>The Qt3DCore::QMouseEvent contains parameters that describe a mouse event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qmouseinput.xml" xlink:role="class">Qt3DInput::QMouseInput</db:link></db:term>
<db:listitem>
<db:para>Provides a means of being notified about mouse events when attached to a QMouseController instance.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-qwheelevent.xml" xlink:role="class">Qt3DInput::QWheelEvent</db:link></db:term>
<db:listitem>
<db:para>The QWheelEvent class contains parameters that describe a mouse wheel event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dlogic-qlogiccomponent.xml" xlink:role="class">Qt3DLogic::QLogicComponent</db:link></db:term>
<db:listitem>
<db:para>Provides a way to have a synchronous function executed each frame.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-assimpparser.xml" xlink:role="class">Qt3DRender::AssimpParser</db:link></db:term>
<db:listitem>
<db:para>Provides a generic way of loading various 3D assets format into a Qt3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qabstractattribute.xml" xlink:role="class">Qt3DRender::QAbstractAttribute</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qabstractbuffer.xml" xlink:role="class">Qt3DRender::QAbstractBuffer</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qabstracttextureimage.xml" xlink:role="class">Qt3DRender::QAbstractTextureImage</db:link></db:term>
<db:listitem>
<db:para>Encapsulates the necessary information to create an OpenGL texture image.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qabstracttextureprovider.xml" xlink:role="class">Qt3DRender::QAbstractTextureProvider</db:link></db:term>
<db:listitem>
<db:para>A base class to be used to provide textures.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qannotation.xml" xlink:role="class">Qt3DRender::QAnnotation</db:link></db:term>
<db:listitem>
<db:para>The QAnnotation class provides ...</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qblendstate.xml" xlink:role="class">Qt3DRender::QBlendState</db:link></db:term>
<db:listitem>
<db:para>Encapsulates blending information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qblendstateseparate.xml" xlink:role="class">Qt3DRender::QBlendStateSeparate</db:link></db:term>
<db:listitem>
<db:para>Encapsulates blending information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qboundingvolumespecifier.xml" xlink:role="class">Qt3DRender::QBoundingVolumeSpecifier</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qbuffer.xml" xlink:role="class">Qt3DRender::QBuffer</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qcameraselector.xml" xlink:role="class">Qt3DRender::QCameraSelector</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qclipplane.xml" xlink:role="class">Qt3DRender::QClipPlane</db:link></db:term>
<db:listitem>
<db:para>Enables an additional OpenGL clipping plane that can be in shaders using gl_ClipDistance</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qcolormask.xml" xlink:role="class">Qt3DRender::QColorMask</db:link></db:term>
<db:listitem>
<db:para>Allows specifying which color components should be written to the currently bound frame buffer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qcuboidgeometry.xml" xlink:role="class">Qt3DRender::QCuboidGeometry</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qcuboidmesh.xml" xlink:role="class">Qt3DRender::QCuboidMesh</db:link></db:term>
<db:listitem>
<db:para>A cube mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qcylindergeometry.xml" xlink:role="class">Qt3DRender::QCylinderGeometry</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qcylindermesh.xml" xlink:role="class">Qt3DRender::QCylinderMesh</db:link></db:term>
<db:listitem>
<db:para>A cylindrical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qdiffusemapmaterial.xml" xlink:role="class">Qt3DRender::QDiffuseMapMaterial</db:link></db:term>
<db:listitem>
<db:para>The QDiffuseMapMaterial provides a default implementation of the phong lighting effect where the diffuse light component is read from a texture map.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qdiffusespecularmapmaterial.xml" xlink:role="class">Qt3DRender::QDiffuseSpecularMapMaterial</db:link></db:term>
<db:listitem>
<db:para>The QDiffuseSpecularMapMaterial provides a default implementation of the phong lighting and bump effect where the diffuse and specular light components are read from texture maps.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qforwardrenderer.xml" xlink:role="class">Qt3DRender::QForwardRenderer</db:link></db:term>
<db:listitem>
<db:para>The Qt3DRender::QForwardRenderer provides a default FrameGraph implementation of a forward renderer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qframegraph.xml" xlink:role="class">Qt3DRender::QFrameGraph</db:link></db:term>
<db:listitem>
<db:para>Defines the rendering method to be used by the renderer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qframegraphnode.xml" xlink:role="class">Qt3DRender::QFrameGraphNode</db:link></db:term>
<db:listitem>
<db:para>Base class of all FrameGraph configuration nodes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qframegraphselector.xml" xlink:role="class">Qt3DRender::QFrameGraphSelector</db:link></db:term>
<db:listitem>
<db:para>Qt3DRender::QFrameGraphSelector provide a way to select a one or more subtree of the FrameGraph at runtime</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qgeometry.xml" xlink:role="class">Qt3DRender::QGeometry</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qgeometryrenderer.xml" xlink:role="class">Qt3DRender::QGeometryRenderer</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qgoochmaterial.xml" xlink:role="class">Qt3DRender::QGoochMaterial</db:link></db:term>
<db:listitem>
<db:para>The QGoochMaterial provides a material that implements the Gooch shading model, popular in CAD and CAM applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qgraphicsapifilter.xml" xlink:role="class">Qt3DRender::QGraphicsApiFilter</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsApiFilter class provides ...</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qlayer.xml" xlink:role="class">Qt3DRender::QLayer</db:link></db:term>
<db:listitem>
<db:para>The QLayer class provides ...</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qlayerfilter.xml" xlink:role="class">Qt3DRender::QLayerFilter</db:link></db:term>
<db:listitem>
<db:para>The QLayerFilter class provides ...</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qlight.xml" xlink:role="class">Qt3DRender::QLight</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qmaterial.xml" xlink:role="class">Qt3DRender::QMaterial</db:link></db:term>
<db:listitem>
<db:para>Provides an abstract class that should be the base of all Material component classes in a scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qmesh.xml" xlink:role="class">Qt3DRender::QMesh</db:link></db:term>
<db:listitem>
<db:para>A custom mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qnodraw.xml" xlink:role="class">Qt3DRender::QNoDraw</db:link></db:term>
<db:listitem>
<db:para>When a QNoDraw node is present in a FrameGraph branch, this prevents the renderer from rendering any primitive.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qnormaldiffusemapalphamaterial.xml" xlink:role="class">Qt3DRender::QNormalDiffuseMapAlphaMaterial</db:link></db:term>
<db:listitem>
<db:para>The QNormalDiffuseMapAlphaMaterial provides a default implementation of the phong lighting and bump effect where the diffuse light component is read from a texture map and the normals of the mesh being rendered from a normal texture map. In addition, it defines an alpha to coverage and a depth test to be performed in the rendering pass.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qnormaldiffusemapmaterial.xml" xlink:role="class">Qt3DRender::QNormalDiffuseMapMaterial</db:link></db:term>
<db:listitem>
<db:para>The QNormalDiffuseMapMaterial provides a default implementation of the phong lighting and bump effect where the diffuse light component is read from a texture map and the normals of the mesh being rendered from a normal texture map.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qnormaldiffusespecularmapmaterial.xml" xlink:role="class">Qt3DRender::QNormalDiffuseSpecularMapMaterial</db:link></db:term>
<db:listitem>
<db:para>The QNormalDiffuseSpecularMapMaterial provides a default implementation of the phong lighting and bump effect where the diffuse and specular light components are read from texture maps and the normals of the mesh being rendered from a normal texture map.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qobjectpicker.xml" xlink:role="class">Qt3DRender::QObjectPicker</db:link></db:term>
<db:listitem>
<db:para>The QObjectPicker class instantiates a component that can be used to interact with a QEntity by a process known as picking.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qparametermapping.xml" xlink:role="class">Qt3DRender::QParameterMapping</db:link></db:term>
<db:listitem>
<db:para>The QParameterMapping class provides ...</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qpervertexcolormaterial.xml" xlink:role="class">Qt3DRender::QPerVertexColorMaterial</db:link></db:term>
<db:listitem>
<db:para>The QPerVertexColorMaterial class provides a default implementation for rendering the color properties set for each vertex.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qphongalphamaterial.xml" xlink:role="class">Qt3DRender::QPhongAlphaMaterial</db:link></db:term>
<db:listitem>
<db:para>The QPhongAlphaMaterial class provides a default implementation of the phong lighting effect with alpha.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qphongmaterial.xml" xlink:role="class">Qt3DRender::QPhongMaterial</db:link></db:term>
<db:listitem>
<db:para>The QPhongMaterial class provides a default implementation of the phong lighting effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qplanegeometry.xml" xlink:role="class">Qt3DRender::QPlaneGeometry</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qplanemesh.xml" xlink:role="class">Qt3DRender::QPlaneMesh</db:link></db:term>
<db:listitem>
<db:para>A square planar mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qpointlight.xml" xlink:role="class">Qt3DRender::QPointLight</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qpointsize.xml" xlink:role="class">Qt3DRender::QPointSize</db:link></db:term>
<db:listitem>
<db:para>Specifies the size of rasterized points. May either be set statically or by shader programs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qshaderdata.xml" xlink:role="class">Qt3DRender::QShaderData</db:link></db:term>
<db:listitem>
<db:para>Provides a way of specifying values of a Uniform Block or a shader structure.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qskyboxentity.xml" xlink:role="class">Qt3DRender::QSkyboxEntity</db:link></db:term>
<db:listitem>
<db:para>Qt3DRender::QSkyboxEntity is a convenience Qt3DCore::QEntity subclass that can be used to insert a skybox in a 3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qspheregeometry.xml" xlink:role="class">Qt3DRender::QSphereGeometry</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qspheremesh.xml" xlink:role="class">Qt3DRender::QSphereMesh</db:link></db:term>
<db:listitem>
<db:para>A spherical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qspotlight.xml" xlink:role="class">Qt3DRender::QSpotLight</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qstateset.xml" xlink:role="class">Qt3DRender::QStateSet</db:link></db:term>
<db:listitem>
<db:para>The QStateSet FrameGraph node offers a way of specifying a set of QRenderState objects to be applied during the execution of a framegraph branch.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture1d.xml" xlink:role="class">Qt3DRender::QTexture1D</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target1D target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture1darray.xml" xlink:role="class">Qt3DRender::QTexture1DArray</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target1DArray target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture2d.xml" xlink:role="class">Qt3DRender::QTexture2D</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target2D target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture2darray.xml" xlink:role="class">Qt3DRender::QTexture2DArray</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target2DArray target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture2dmultisample.xml" xlink:role="class">Qt3DRender::QTexture2DMultisample</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target2DMultisample target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture2dmultisamplearray.xml" xlink:role="class">Qt3DRender::QTexture2DMultisampleArray</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target2DMultisampleArray target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexture3d.xml" xlink:role="class">Qt3DRender::QTexture3D</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a Target3D target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexturebuffer.xml" xlink:role="class">Qt3DRender::QTextureBuffer</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a TargetBuffer target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexturecubemap.xml" xlink:role="class">Qt3DRender::QTextureCubeMap</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a TargetCubeMap target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexturecubemaparray.xml" xlink:role="class">Qt3DRender::QTextureCubeMapArray</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a TargetCubeMapArray target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtextureimage.xml" xlink:role="class">Qt3DRender::QTextureImage</db:link></db:term>
<db:listitem>
<db:para>Encapsulates the necessary information to create an OpenGL texture image from an image source.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexturerectangle.xml" xlink:role="class">Qt3DRender::QTextureRectangle</db:link></db:term>
<db:listitem>
<db:para>A QAbstractTextureProvider with a TargetRectangle target format.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtexturewrapmode.xml" xlink:role="class">Qt3DRender::QTextureWrapMode</db:link></db:term>
<db:listitem>
<db:para>Defines the wrap mode a Qt3DRender::QAbstractTextureProvider should apply to a texture.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtorusgeometry.xml" xlink:role="class">Qt3DRender::QTorusGeometry</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-qtorusmesh.xml" xlink:role="class">Qt3DRender::QTorusMesh</db:link></db:term>
<db:listitem>
<db:para>A custom mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qoutputrange.xml" xlink:role="class">qoutputrange</db:link></db:term>
<db:listitem>
<db:para>The qoutputrange class holds the specifics of an output range.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:article>
