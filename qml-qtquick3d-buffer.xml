<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Buffer QML Type</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Creates or references a color buffer to be used for a pass of an Effect.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick3D</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A Buffer can be used to create intermediate buffers to share data between <db:link xlink:href="qml-qtquick3d-pass.xml">render passes</db:link> in an <db:link xlink:href="qml-qtquick3d-effect.xml">Effect</db:link>.</db:para>
<db:note>
<db:para>If the <db:link xlink:href="qml-qtquick3d-buffer.xml#name-prop">name</db:link> property of the Buffer is empty, it will reference the default output texture of the render pass.</db:para>
</db:note>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="bufferFlags-prop">
<db:title>bufferFlags : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>bufferFlags</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the buffer allocation flags. The default is Buffer.None.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Buffer.None</db:para>
</db:td>
<db:td>
<db:para>No special behavior.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Buffer.SceneLifetime</db:para>
</db:td>
<db:td>
<db:para>The buffer is allocated for the whole lifetime of the scene.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="format-prop">
<db:title>format : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>format</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the texture format. The default value is Buffer.RGBA8.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Buffer.RGBA8</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Buffer.RGBA16F</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Buffer.RGBA32F</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Buffer.R8</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Buffer.R16</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Buffer.R16F</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Buffer.R32F</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="name-prop">
<db:title>name : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>name</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the name of the buffer.</db:para>
<db:note>
<db:para>When this property is empty, the Buffer will refer to the default output texture of the <db:link xlink:href="qml-qtquick3d-pass.xml">render pass</db:link> instead of allocating a buffer. This can be useful to override certain settings of the output, such as the texture format, without introducing a new, separate intermediate texture.</db:para>
</db:note>
</db:section>
<db:section xml:id="sizeMultiplier-prop">
<db:title>sizeMultiplier : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>sizeMultiplier</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the size multiplier of the buffer. For instance, a value of <db:code>1.0</db:code> creates a buffer with the same size as the effect's input texture while <db:code>0.5</db:code> creates buffer where both width and height is half as big. The default value is 1.0.</db:para>
</db:section>
<db:section xml:id="textureCoordOperation-prop">
<db:title>textureCoordOperation : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>textureCoordOperation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the behavior for texture coordinates when sampling outside the [0, 1] range. The default is Buffer.ClampToEdge.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Buffer.ClampToEdge</db:para>
</db:td>
<db:td>
<db:para>Clamp coordinates to the edges.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Buffer.Repeat</db:para>
</db:td>
<db:td>
<db:para>Wrap the coordinates at the edges to tile the texture.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Buffer.MirroredRepeat</db:para>
</db:td>
<db:td>
<db:para>Wrap the coordinate at the edges, but mirror the texture when tiling it.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="textureFilterOperation-prop">
<db:title>textureFilterOperation : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>textureFilterOperation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the texture filtering mode when sampling the contents of the Buffer. The default value is Buffer.Linear.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Buffer.Nearest</db:para>
</db:td>
<db:td>
<db:para>Use nearest-neighbor filtering.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Buffer.Linear</db:para>
</db:td>
<db:td>
<db:para>Use linear filtering.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
</db:article>
