<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QWebEngineHistory Class</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qwebenginehistory.xml">QWebEngineHistory</db:link> class represents the history of a web engine page.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QWebEngineHistory</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS WebEngineCore)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::WebEngineCore)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += webenginecore</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qtwebengine-webenginehistory.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Each web engine page contains a history of visited pages that can be accessed by <db:link xlink:href="qwebenginepage.xml#history">QWebEnginePage::history</db:link>().</db:para>
<db:para>The history uses the concept of a <db:emphasis>current item</db:emphasis>, dividing the pages visited into those that can be visited by navigating <db:emphasis>back</db:emphasis> and <db:emphasis>forward</db:emphasis> using the <db:link xlink:href="qwebenginehistory.xml#back">back</db:link>() and <db:link xlink:href="qwebenginehistory.xml#forward">forward</db:link>() functions. The current item can be obtained by calling <db:link xlink:href="qwebenginehistory.xml#currentItem">currentItem</db:link>(), and an arbitrary item in the history can be made the current item by passing it to <db:link xlink:href="qwebenginehistory.xml#goToItem">goToItem</db:link>().</db:para>
<db:para>A list of items describing the pages that can be visited by going back can be obtained by calling the <db:link xlink:href="qwebenginehistory.xml#backItems">backItems</db:link>() function; similarly, items describing the pages ahead of the current page can be obtained with the <db:link xlink:href="qwebenginehistory.xml#forwardItems">forwardItems</db:link>() function. The total list of items is obtained with the <db:link xlink:href="qwebenginehistory.xml#items">items</db:link>() function.</db:para>
<db:para>Also, the following <db:link xlink:href="qwebenginehistorymodel.xml">QWebEngineHistoryModel</db:link> data model objects are provided:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:code>backItemsModel()</db:code>, which contains the URLs of visited pages.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>forwardItemsModel()</db:code>, which contains the URLs of the pages that were visited after visiting the current page.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>itemsModel()</db:code>, which contains the URLs of the back and forward items, as well as the URL of the current page.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Just as with containers, functions are available to examine the history in terms of a list. Arbitrary items in the history can be obtained with <db:link xlink:href="qwebenginehistory.xml#itemAt">itemAt</db:link>(), the total number of items is given by <db:link xlink:href="qwebenginehistory.xml#count">count</db:link>(), and the history can be cleared with the <db:link xlink:href="qwebenginehistory.xml#clear">clear</db:link>() function.</db:para>
<db:para><db:link xlink:href="qwebenginehistory.xml">QWebEngineHistory</db:link>'s state can be saved to a <db:link xlink:href="qdatastream.xml">QDataStream</db:link> using the &gt;&gt; operator and loaded by using the &lt;&lt; operator.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginehistoryitem.xml">QWebEngineHistoryItem</db:link></db:member>
<db:member><db:link xlink:href="qwebenginepage.xml">QWebEnginePage</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="back">
<db:title>void QWebEngineHistory::back()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>back</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void back()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the current item to be the previous item in the history and goes to the corresponding page; that is, goes back one history item.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginehistory.xml#forward">forward</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginehistory.xml#goToItem">goToItem</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="backItem">
<db:title>QWebEngineHistoryItem QWebEngineHistory::backItem() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QWebEngineHistoryItem</db:type>
<db:methodname>backItem</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QWebEngineHistoryItem backItem() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the item before the current item in the history.</db:para>
</db:section>
<db:section xml:id="backItems">
<db:title>QList&lt;QWebEngineHistoryItem&gt; QWebEngineHistory::backItems(int <db:emphasis>maxItems</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;QWebEngineHistoryItem&gt;</db:type>
<db:methodname>backItems</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>maxItems</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QWebEngineHistoryItem&gt; backItems(int maxItems) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of items in the backwards history list. At most <db:code role="parameter">maxItems</db:code> entries are returned.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginehistory.xml#forwardItems">forwardItems</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="backItemsModel">
<db:title>QWebEngineHistoryModel *QWebEngineHistory::backItemsModel() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QWebEngineHistoryModel *</db:type>
<db:methodname>backItemsModel</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">backItems</db:synopsisinfo>
<db:synopsisinfo role="signature">QWebEngineHistoryModel * backItemsModel() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Return the data model, which represents URLs of visited pages.</db:para>
<db:note>
<db:para>Getter function for property backItems. </db:para>
</db:note>
</db:section>
<db:section xml:id="canGoBack">
<db:title>bool QWebEngineHistory::canGoBack() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>canGoBack</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool canGoBack() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if there is an item preceding the current item in the history; otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginehistory.xml#canGoForward">canGoForward</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="canGoForward">
<db:title>bool QWebEngineHistory::canGoForward() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>canGoForward</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool canGoForward() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if we have an item to go forward to; otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginehistory.xml#canGoBack">canGoBack</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clear">
<db:title>void QWebEngineHistory::clear()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>clear</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void clear()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Clears the history.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginehistory.xml#count">count</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginehistory.xml#items">items</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="count">
<db:title>int QWebEngineHistory::count() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>count</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int count() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the total number of items in the history.</db:para>
</db:section>
<db:section xml:id="currentItem">
<db:title>QWebEngineHistoryItem QWebEngineHistory::currentItem() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QWebEngineHistoryItem</db:type>
<db:methodname>currentItem</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QWebEngineHistoryItem currentItem() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the current item in the history.</db:para>
</db:section>
<db:section xml:id="currentItemIndex">
<db:title>int QWebEngineHistory::currentItemIndex() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>currentItemIndex</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int currentItemIndex() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the index of the current item in history.</db:para>
</db:section>
<db:section xml:id="forward">
<db:title>void QWebEngineHistory::forward()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>forward</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void forward()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the current item to be the next item in the history and goes to the corresponding page; that is, goes forward one history item.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginehistory.xml#back">back</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginehistory.xml#goToItem">goToItem</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="forwardItem">
<db:title>QWebEngineHistoryItem QWebEngineHistory::forwardItem() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QWebEngineHistoryItem</db:type>
<db:methodname>forwardItem</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QWebEngineHistoryItem forwardItem() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the item after the current item in the history.</db:para>
</db:section>
<db:section xml:id="forwardItems">
<db:title>QList&lt;QWebEngineHistoryItem&gt; QWebEngineHistory::forwardItems(int <db:emphasis>maxItems</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;QWebEngineHistoryItem&gt;</db:type>
<db:methodname>forwardItems</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>maxItems</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QWebEngineHistoryItem&gt; forwardItems(int maxItems) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of items in the forward history list. At most <db:code role="parameter">maxItems</db:code> entries are returned.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginehistory.xml#backItems">backItems</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="forwardItemsModel">
<db:title>QWebEngineHistoryModel *QWebEngineHistory::forwardItemsModel() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QWebEngineHistoryModel *</db:type>
<db:methodname>forwardItemsModel</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">forwardItems</db:synopsisinfo>
<db:synopsisinfo role="signature">QWebEngineHistoryModel * forwardItemsModel() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Return the data model, which represents URLs of the pages that were visited after visiting the current page.</db:para>
<db:note>
<db:para>Getter function for property forwardItems. </db:para>
</db:note>
</db:section>
<db:section xml:id="goToItem">
<db:title>void QWebEngineHistory::goToItem(const QWebEngineHistoryItem &amp;<db:emphasis>item</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>goToItem</db:methodname>
<db:methodparam>
<db:type>const QWebEngineHistoryItem &amp;</db:type>
<db:parameter>item</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void goToItem(const QWebEngineHistoryItem &amp;item)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the current item to be the specified <db:code role="parameter">item</db:code> in the history and goes to the page.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginehistory.xml#back">back</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginehistory.xml#forward">forward</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="itemAt">
<db:title>QWebEngineHistoryItem QWebEngineHistory::itemAt(int <db:emphasis>i</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QWebEngineHistoryItem</db:type>
<db:methodname>itemAt</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>i</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QWebEngineHistoryItem itemAt(int i) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the item at index <db:code role="parameter">i</db:code> in the history.</db:para>
</db:section>
<db:section xml:id="items">
<db:title>QList&lt;QWebEngineHistoryItem&gt; QWebEngineHistory::items() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;QWebEngineHistoryItem&gt;</db:type>
<db:methodname>items</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QWebEngineHistoryItem&gt; items() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of all items currently in the history.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginehistory.xml#count">count</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginehistory.xml#clear">clear</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="itemsModel">
<db:title>QWebEngineHistoryModel *QWebEngineHistory::itemsModel() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QWebEngineHistoryModel *</db:type>
<db:methodname>itemsModel</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">items</db:synopsisinfo>
<db:synopsisinfo role="signature">QWebEngineHistoryModel * itemsModel() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the data model, which represents URLs of back items, forward items, and the current item in the history.</db:para>
<db:note>
<db:para>Getter function for property items. </db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-lt-lt-1">
<db:title>QDataStream &amp;operator&lt;&lt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, const QWebEngineHistory &amp;<db:emphasis>history</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QDataStream &amp;</db:type>
<db:methodname>operator&lt;&lt;</db:methodname>
<db:methodparam>
<db:type>QDataStream &amp;</db:type>
<db:parameter>stream</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QWebEngineHistory &amp;</db:type>
<db:parameter>history</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QDataStream &amp; operator&lt;&lt;(QDataStream &amp;stream, const QWebEngineHistory &amp;history)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Saves the web engine history <db:code role="parameter">history</db:code> into <db:code role="parameter">stream</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-gt-gt-1">
<db:title>QDataStream &amp;operator&gt;&gt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, QWebEngineHistory &amp;<db:emphasis>history</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QDataStream &amp;</db:type>
<db:methodname>operator&gt;&gt;</db:methodname>
<db:methodparam>
<db:type>QDataStream &amp;</db:type>
<db:parameter>stream</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QWebEngineHistory &amp;</db:type>
<db:parameter>history</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QDataStream &amp; operator&gt;&gt;(QDataStream &amp;stream, QWebEngineHistory &amp;history)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Loads the web engine history from <db:code role="parameter">stream</db:code> into <db:code role="parameter">history</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
