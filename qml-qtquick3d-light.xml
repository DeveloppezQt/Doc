<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Light QML Type</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>An uncreatable abstract base type for all lights.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick3D</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick3d-directionallight.xml" xlink:role="">DirectionalLight</db:link>, <db:link xlink:href="qml-qtquick3d-pointlight.xml" xlink:role="">PointLight</db:link>, and <db:link xlink:href="qml-qtquick3d-spotlight.xml" xlink:role="">SpotLight</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Node</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Light itself is an uncreatable base for all of its subtypes. The subtypes provide multiple options to determine the style of the light.</db:para>
<db:para>For usage examples, see <db:link xlink:href="qtquick3d-lights-example.xml">Qt Quick 3D - Lights Example</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-directionallight.xml">DirectionalLight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-pointlight.xml">PointLight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="ambientColor-prop">
<db:title>ambientColor : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>ambientColor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The property defines the ambient color applied to materials before being lit by this light. The default value is black, rgb(0, 0, 0).</db:para>
</db:section>
<db:section xml:id="bakeMode-prop">
<db:title>bakeMode : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>bakeMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The property controls if the light is active in baked lighting, such as when generating lightmaps.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Light.BakeModeDisabled</db:para>
</db:td>
<db:td>
<db:para>The light is not used in baked lighting.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Light.BakeModeIndirect</db:para>
</db:td>
<db:td>
<db:para>Indirect lighting contribution (for global illumination) is baked for this light. Direct lighting (diffuse, specular, real-time shadow mapping) is calculated normally for the light at run time. At run time, when not in baking mode, the renderer will attempt to sample the lightmap to get the indirect lighting data and combine that with the results of the real-time calculations.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Light.BakeModeAll</db:para>
</db:td>
<db:td>
<db:para>Both direct (diffuse, shadow) and indirect lighting is baked for this light. The light will not have a specular contribution and will not generate realtime shadow maps, but it will always have baked shadows. At run time, when not in baking mode, the renderer will attempt to sample the lightmap in place of the standard, real-time calculations for diffuse lighting and shadow mapping.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The default value is <db:code>Light.BakeModeDisabled</db:code></db:para>
<db:note>
<db:para>Just as with <db:link xlink:href="qml-qtquick3d-model.xml#usedInBakedLighting-prop">Model::usedInBakedLighting</db:link>, designers and developers must always evaluate on a per-light basis if the light is suitable to take part in baked lighting.</db:para>
</db:note>
<db:warning>
<db:para>Lights with dynamically changing properties, for example, animated position, rotation, or other properties, are not suitable for participating in baked lighting.</db:para>
</db:warning>
<db:para>This property is relevant both when baking and when using lightmaps. A consistent state between the baking run and the subsequent runs that use the generated data is essential. Changing to a different value will not change the previously generated and persistently stored data in the lightmaps, the engine's rendering behavior will however follow the property's current value.</db:para>
<db:para>For more information on how to bake lightmaps, see the <db:link xlink:href="quick3d-lightmap.xml">Lightmaps and Global Illumination</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-model.xml#usedInBakedLighting-prop">Model::usedInBakedLighting</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-model.xml#bakedLightmap-prop">Model::bakedLightmap</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-lightmapper.xml">Lightmapper</db:link></db:member>
<db:member><db:link xlink:href="quick3d-lightmap.xml">Lightmaps and Global Illumination</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="brightness-prop">
<db:title>brightness : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>brightness</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines an overall multiplier for this lightâ€™s effects. The default value is 1.</db:para>
</db:section>
<db:section xml:id="castsShadow-prop">
<db:title>castsShadow : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>castsShadow</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>When this property is enabled, the light will cast (real-time) shadows. The default value is false.</db:para>
<db:note>
<db:para>When <db:link xlink:href="qml-qtquick3d-light.xml#bakeMode-prop">bakeMode</db:link> is set to Light.BakeModeAll, this property has no effect. A fully baked light always has baked shadows, but it will never participate in real-time shadow mapping.</db:para>
</db:note>
</db:section>
<db:section xml:id="color-prop">
<db:title>color : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>color</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the color applied to models illuminated by this light. The default value is white, rgb(255, 255, 255).</db:para>
</db:section>
<db:section xml:id="scope-prop">
<db:title>scope : Node</db:title>
<db:fieldsynopsis>
<db:type>Node</db:type>
<db:varname>scope</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The property allows the selection of a Node in the scene. Only that node and its children are affected by this light. By default the value is null, which indicates no scope selected.</db:para>
<db:note>
<db:para>Scoped lights cannot cast real-time shadows, meaning a Light with a scope set should not set <db:link xlink:href="qml-qtquick3d-light.xml#castsShadow-prop">castsShadow</db:link> to true. They can however generate baked shadows when <db:link xlink:href="qml-qtquick3d-light.xml#bakeMode-prop">bakeMode</db:link> is set to Light.BakeModeAll.</db:para>
</db:note>
</db:section>
<db:section xml:id="shadowBias-prop">
<db:title>shadowBias : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>shadowBias</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property is used to tweak the shadowing effect when objects are casting shadows on themselves. The value range is [-1.0, 1.0]. Generally, a value inside [-0.1, 0.1] is sufficient. The default value is 0.</db:para>
</db:section>
<db:section xml:id="shadowFactor-prop">
<db:title>shadowFactor : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>shadowFactor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property determines how dark the cast shadows should be. The value range is [0, 100], where 0 means no shadows and 100 means the light is fully shadowed. The default value is 5.</db:para>
</db:section>
<db:section xml:id="shadowFilter-prop">
<db:title>shadowFilter : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>shadowFilter</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property sets how much blur is applied to the shadows. The default value is 5.</db:para>
</db:section>
<db:section xml:id="shadowMapFar-prop">
<db:title>shadowMapFar : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>shadowMapFar</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The property determines the maximum distance for the shadow map. Smaller values improve the precision and effects of the map. The default value is 5000. Unit is points in local coordinate space.</db:para>
</db:section>
<db:section xml:id="shadowMapQuality-prop">
<db:title>shadowMapQuality : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>shadowMapQuality</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The property sets the quality of the shadow map created for shadow rendering. Lower quality uses less resources, but produces lower quality shadows while higher quality uses more resources, but produces better quality shadows.</db:para>
<db:para>Supported quality values are:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Light.ShadowMapQualityLow</db:para>
</db:td>
<db:td>
<db:para>Render shadowmap using 256x256 texture.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Light.ShadowMapQualityMedium</db:para>
</db:td>
<db:td>
<db:para>Render shadowmap using 512x512 texture.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Light.ShadowMapQualityHigh</db:para>
</db:td>
<db:td>
<db:para>Render shadowmap using 1024x1024 texture.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Light.ShadowMapQualityVeryHigh</db:para>
</db:td>
<db:td>
<db:para>Render shadowmap using 2048x2048 texture.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The default value is <db:code>Light.ShadowMapQualityLow</db:code></db:para>
</db:section>
</db:section>
</db:article>
