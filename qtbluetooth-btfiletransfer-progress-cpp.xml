<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>Bluetooth File Transfer Example</db:title>
<db:productname>QtBluetooth</db:productname>
<db:edition>Qt 5.2.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Bluetooth Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Bluetooth Reference Documentation.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the QtBluetooth module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names
**     of its contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;progress.h&quot;
#include &quot;ui_progress.h&quot;

#include &lt;qbluetoothdeviceinfo.h&gt;
#include &lt;qbluetoothaddress.h&gt;
#include &lt;qbluetoothtransferrequest.h&gt;
#include &lt;qbluetoothtransferreply.h&gt;

QT_USE_NAMESPACE

Progress::Progress(QWidget *parent) :
    QDialog(parent),
    ui(new Ui::Progress)
{
    ui-&gt;setupUi(this);
    ui-&gt;progressBar-&gt;setRange(0, 1);
    connect(ui-&gt;cancelButton, SIGNAL(clicked()), this, SLOT(close()));
}

Progress::~Progress()
{
    delete ui;
}

void Progress::setStatus(QString title, QString filename) {
    ui-&gt;titleLabel-&gt;setText(title);
    ui-&gt;statusLabel-&gt;setText(filename);
}

void Progress::finished(QBluetoothTransferReply *reply){
    if (reply-&gt;error() != QBluetoothTransferReply::NoError){
        ui-&gt;progressBar-&gt;setDisabled(true);
        ui-&gt;statusLabel-&gt;setText(tr(&quot;Failed: %1&quot;).arg(reply-&gt;errorString()));
    }
    else {
        ui-&gt;statusLabel-&gt;setText(tr(&quot;Transfer complete&quot;));
    }
    ui-&gt;cancelButton-&gt;setText(tr(&quot;Dismiss&quot;));
}

void Progress::uploadProgress(qint64 bytesSent, qint64 bytesTotal)
{
    if (bytesSent == 0){
        start.start();
    }

    ui-&gt;progressBar-&gt;setMaximum(bytesTotal);
    ui-&gt;progressBar-&gt;setValue(bytesSent);
    if (bytesSent &amp;&amp; bytesTotal &amp;&amp;
            (start.elapsed() &gt; 1000) &amp;&amp;
            (bytesSent &gt; start.elapsed()/1000)) {

        ui-&gt;statusLabel-&gt;setText(tr(&quot;Transferring...ETA: %1s&quot;)
                .arg(((bytesTotal-bytesSent)/(bytesSent/(start.elapsed()/1000)))));
    }
}

</db:programlisting>
</db:article>
