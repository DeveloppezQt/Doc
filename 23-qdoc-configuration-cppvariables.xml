<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>C++ Specific Configuration Variables</db:title>
<db:productname>QDoc</db:productname>
<db:edition>Qt 5.5.1 Reference Documentation</db:edition>
<db:titleabbrev>QDoc Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="22-creating-help-project-files.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Creating Help Project Files"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="24-qdoc-configuration-htmlvariables.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="HTML Specific Configuration Variables"/></db:extendedlink>
<db:abstract>
<db:para>QDoc Manual.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>QDoc Manual</db:para>
<db:para>The C++ specific configuration variables are provided to avoid erroneous documentation due to non-standard C++ constructs.</db:para>
<db:anchor xml:id="cpp-ignoredirectives-variable"/>
<db:section xml:id="cpp-ignoredirectives">
<db:title>Cpp.ignoredirectives</db:title>
<db:para>The Cpp.ignoredirectives variable makes QDoc ignore the specified non-standard constructs, within C++ source code.</db:para>
<db:para>If not specified by the <db:code><db:link xlink:href="23-qdoc-configuration-cppvariables.xml#cpp-ignoretokens">Cpp.ignoretokens</db:link></db:code> or <db:code><db:link xlink:href="23-qdoc-configuration-cppvariables.xml#cpp-ignoredirectives">Cpp.ignoredirectives</db:link></db:code> variables, non-standard constructs (typically macros) can result in erroneous documentation.</db:para>
<db:programlisting language="cpp">Cpp.ignoredirectives = Q_DECLARE_INTERFACE \
                       Q_DECLARE_OPERATORS_FOR_FLAGS \
                       Q_DECLARE_PRIVATE \
                       Q_DECLARE_PUBLIC \
                       Q_DISABLE_COPY \
                       Q_DUMMY_COMPARISON_OPERATOR \
                       Q_ENUMS \
                       Q_FLAGS \
                       Q_INTERFACES \
                       __attribute__
</db:programlisting>
<db:para>makes sure that when processing the code below, for example, QDoc will simply ignore the 'Q_ENUMS' and 'Q_FLAGS' expressions:</db:para>
<db:programlisting language="cpp">class Q_CORE_EXPORT Qt {
    Q_OBJECT
    Q_ENUMS(Orientation TextFormat BackgroundMode
            DateFormat ScrollBarPolicy FocusPolicy
            ContextMenuPolicy CaseSensitivity
            LayoutDirection ArrowType)
    Q_ENUMS(ToolButtonStyle)
    Q_FLAGS(Alignment)
    Q_FLAGS(Orientations)
    Q_FLAGS(DockWidgetAreas)

  public:
    ...
};
</db:programlisting>
<db:para>The <db:link xlink:href="qobject.xml#Q_OBJECT">Q_OBJECT</db:link> macro, however, is an exception: QDoc recognizes this particular non-standard construct, so there is no need specifying it using the <db:code><db:link xlink:href="23-qdoc-configuration-cppvariables.xml#cpp-ignoredirectives">Cpp.ignoredirectives</db:link></db:code> variable.</db:para>
<db:para>Regarding the Q_CORE_EXPORT macro; see the documentation of the <db:code><db:link xlink:href="23-qdoc-configuration-cppvariables.xml#cpp-ignoretokens">Cpp.ignoretokens</db:link></db:code> variable.</db:para>
<db:para>See also <db:link xlink:href="23-qdoc-configuration-cppvariables.xml#cpp-ignoretokens">Cpp.ignoretokens</db:link>.</db:para>
<db:anchor xml:id="cpp-ignoretokens-variable"/>
</db:section>
<db:section xml:id="cpp-ignoretokens">
<db:title>Cpp.ignoretokens</db:title>
<db:para>The Cpp.ignoretokens variable makes QDoc ignore the specified non-standard constructs, within C++ source code.</db:para>
<db:para>If not specified by the <db:code><db:link xlink:href="23-qdoc-configuration-cppvariables.xml#cpp-ignoretokens">Cpp.ignoretokens</db:link></db:code> or <db:code><db:link xlink:href="23-qdoc-configuration-cppvariables.xml#cpp-ignoredirectives">Cpp.ignoredirectives</db:link></db:code> variables, non-standard constructs (typically macros) can result in erroneous documentation.</db:para>
<db:para>In <db:link xlink:href="21-2-qtgui-qdocconf.xml">qtgui.qdocconf</db:link>:</db:para>
<db:programlisting language="cpp">Cpp.ignoretokens = QAXFACTORY_EXPORT \
                   QM_EXPORT_CANVAS \
                   ...
                   Q_COMPAT_EXPORT \
                   Q_CORE_EXPORT \
                   Q_EXPLICIT \
                   Q_EXPORT \
                   ...
                   Q_XML_EXPORT
</db:programlisting>
<db:para>makes sure that when processing the code below, for example, QDoc will simply ignore the 'Q_CORE_EXPORT' expression:</db:para>
<db:programlisting language="cpp">class Q_CORE_EXPORT Qt {
    Q_OBJECT
    Q_ENUMS(Orientation TextFormat BackgroundMode
            DateFormat ScrollBarPolicy FocusPolicy
            ContextMenuPolicy CaseSensitivity
            LayoutDirection ArrowType)
    Q_ENUMS(ToolButtonStyle)
    Q_FLAGS(Alignment)
    Q_FLAGS(Orientations)
    Q_FLAGS(DockWidgetAreas)
  public:
    ...
};
</db:programlisting>
<db:para>Regarding the <db:link xlink:href="qobject.xml#Q_OBJECT">Q_OBJECT</db:link>, Q_ENUMS and Q_FLAGS macros; see the documentation of the <db:code><db:link xlink:href="23-qdoc-configuration-cppvariables.xml#cpp-ignoredirectives">Cpp.ignoredirectives</db:link></db:code> variable.</db:para>
<db:para>See also <db:link xlink:href="23-qdoc-configuration-cppvariables.xml#cpp-ignoredirectives">Cpp.ignoredirectives</db:link>.</db:para>
</db:section>
</db:article>
