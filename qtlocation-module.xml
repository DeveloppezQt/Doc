<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Location C++ Classes</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides C++ interfaces to retrieve location and navigational information.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Provides C++ interfaces to retrieve location and navigational information.</db:para>
<db:section xml:id="namespaces">
<db:title>Namespaces</db:title>
<db:variablelist role="namespaces">
<db:varlistentry>
<db:term><db:link xlink:href="qlocation.xml" xlink:role="namespace">QLocation</db:link></db:term>
<db:listitem>
<db:para>The QLocation namespace contains miscellaneous identifiers used throughout the QtLocation module.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="qgeocodereply.xml" xlink:role="class">QGeoCodeReply</db:link></db:term>
<db:listitem>
<db:para>The QGeoCodeReply class manages an operation started by an instance of QGeoCodingManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeocodingmanager.xml" xlink:role="class">QGeoCodingManager</db:link></db:term>
<db:listitem>
<db:para>The QGeoCodingManager class provides support for geocoding operations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeocodingmanagerengine.xml" xlink:role="class">QGeoCodingManagerEngine</db:link></db:term>
<db:listitem>
<db:para>The QGeoCodingManagerEngine class provides an interface and convenience methods to implementers of QGeoServiceProvider plugins who want to provide support for geocoding operations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeomaneuver.xml" xlink:role="class">QGeoManeuver</db:link></db:term>
<db:listitem>
<db:para>The QGeoManeuver class represents the information relevant to the point at which two QGeoRouteSegments meet.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoroute.xml" xlink:role="class">QGeoRoute</db:link></db:term>
<db:listitem>
<db:para>The QGeoRoute class represents a route between two points.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeorouteleg.xml" xlink:role="class">QGeoRouteLeg</db:link></db:term>
<db:listitem>
<db:para>The QGeoRouteLeg class represents a leg of a route, that is the portion of a route between one waypoint and the next. This is a subclass of QGeoRoute, exposing route leg specific API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoroutereply.xml" xlink:role="class">QGeoRouteReply</db:link></db:term>
<db:listitem>
<db:para>The QGeoRouteReply class manages an operation started by an instance of QGeoRoutingManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeorouterequest.xml" xlink:role="class">QGeoRouteRequest</db:link></db:term>
<db:listitem>
<db:para>The QGeoRouteRequest class represents the parameters and restrictions which define a request for routing information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoroutesegment.xml" xlink:role="class">QGeoRouteSegment</db:link></db:term>
<db:listitem>
<db:para>The QGeoRouteSegment class represents a segment of a route.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoroutingmanager.xml" xlink:role="class">QGeoRoutingManager</db:link></db:term>
<db:listitem>
<db:para>The QGeoRoutingManager class provides support for geographic routing operations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoroutingmanagerengine.xml" xlink:role="class">QGeoRoutingManagerEngine</db:link></db:term>
<db:listitem>
<db:para>The QGeoRoutingManagerEngine class provides an interface and convenience methods to implementers of QGeoServiceProvider plugins who want to provide access to geographic routing information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoserviceprovider.xml" xlink:role="class">QGeoServiceProvider</db:link></db:term>
<db:listitem>
<db:para>The QGeoServiceProvider class aggregates access to services which provide geographical information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoserviceproviderfactoryv2.xml" xlink:role="class">QGeoServiceProviderFactoryV2</db:link></db:term>
<db:listitem>
<db:para>The QGeoServiceProviderFactoryV2 class is a factory class used as the plugin interface for services related to geographical information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplace.xml" xlink:role="class">QPlace</db:link></db:term>
<db:listitem>
<db:para>The QPlace class represents a set of data about a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceattribute.xml" xlink:role="class">QPlaceAttribute</db:link></db:term>
<db:listitem>
<db:para>The QPlaceAttribute class represents generic attribute information about a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacecategory.xml" xlink:role="class">QPlaceCategory</db:link></db:term>
<db:listitem>
<db:para>The QPlaceCategory class represents a category that a QPlace can be associated with.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacecontactdetail.xml" xlink:role="class">QPlaceContactDetail</db:link></db:term>
<db:listitem>
<db:para>The QPlaceContactDetail class represents a contact detail such as a phone number or website url.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacecontent.xml" xlink:role="class">QPlaceContent</db:link></db:term>
<db:listitem>
<db:para>The QPlaceContent class serves as the base class for rich content types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacecontentreply.xml" xlink:role="class">QPlaceContentReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceContentReply class manages a content retrieval operation started by an instance of QPlaceManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacecontentrequest.xml" xlink:role="class">QPlaceContentRequest</db:link></db:term>
<db:listitem>
<db:para>The QPlaceContentRequest class represents the parameters of a content request.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacedetailsreply.xml" xlink:role="class">QPlaceDetailsReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceDetailsReply class manages a place details fetch operation started by an instance of QPlaceManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceeditorial.xml" xlink:role="class">QPlaceEditorial</db:link></db:term>
<db:listitem>
<db:para>The QPlaceEditorial class represents a publisher's article describing a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceicon.xml" xlink:role="class">QPlaceIcon</db:link></db:term>
<db:listitem>
<db:para>The QPlaceIcon class represents an icon.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceidreply.xml" xlink:role="class">QPlaceIdReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceIdReply class manages operations which return an identifier such as saving and removal operations of places and categories.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceimage.xml" xlink:role="class">QPlaceImage</db:link></db:term>
<db:listitem>
<db:para>The QPlaceImage class represents a reference to an image.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacemanager.xml" xlink:role="class">QPlaceManager</db:link></db:term>
<db:listitem>
<db:para>The QPlaceManager class provides the interface which allows clients to access places stored in a particular backend.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacemanagerengine.xml" xlink:role="class">QPlaceManagerEngine</db:link></db:term>
<db:listitem>
<db:para>The QPlaceManagerEngine class provides an interface for implementers of QGeoServiceProvider plugins who want to provide access to place functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacematchreply.xml" xlink:role="class">QPlaceMatchReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceMatchReply class manages a place matching operation started by an instance of QPlaceManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacematchrequest.xml" xlink:role="class">QPlaceMatchRequest</db:link></db:term>
<db:listitem>
<db:para>The QPlaceMatchRequest class is used to find places from one manager that match those from another. It represents a set of request parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceproposedsearchresult.xml" xlink:role="class">QPlaceProposedSearchResult</db:link></db:term>
<db:listitem>
<db:para>The QPlaceProposedSearchResult class represents a search result containing a proposed search.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceratings.xml" xlink:role="class">QPlaceRatings</db:link></db:term>
<db:listitem>
<db:para>The QPlaceRatings class holds rating information about a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacereply.xml" xlink:role="class">QPlaceReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceReply class manages an operation started by an instance of QPlaceManager and serves as a base class for more specialized replies.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceresult.xml" xlink:role="class">QPlaceResult</db:link></db:term>
<db:listitem>
<db:para>The QPlaceResult class represents a search result containing a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacereview.xml" xlink:role="class">QPlaceReview</db:link></db:term>
<db:listitem>
<db:para>The QPlaceReview class represents a review of a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacesearchreply.xml" xlink:role="class">QPlaceSearchReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceSearchReply class manages a place search operation started by an instance of QPlaceManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacesearchrequest.xml" xlink:role="class">QPlaceSearchRequest</db:link></db:term>
<db:listitem>
<db:para>The QPlaceSearchRequest class represents the set of parameters for a search request.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacesearchresult.xml" xlink:role="class">QPlaceSearchResult</db:link></db:term>
<db:listitem>
<db:para>The QPlaceSearchResult class is the base class for search results.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacesearchsuggestionreply.xml" xlink:role="class">QPlaceSearchSuggestionReply</db:link></db:term>
<db:listitem>
<db:para>The QPlaceSearchSuggestionReply class manages a search suggestion operation started by an instance of QPlaceManager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplacesupplier.xml" xlink:role="class">QPlaceSupplier</db:link></db:term>
<db:listitem>
<db:para>The QPlaceSupplier class represents a supplier of a place or content associated with a place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaceuser.xml" xlink:role="class">QPlaceUser</db:link></db:term>
<db:listitem>
<db:para>The QPlaceUser class represents an individual user.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The C++ API provides access to geocoding and navigation information, and also place search. Use the <db:link xlink:href="location-maps-qml.xml">QML</db:link> API to render this information on an interactive map that supports touch gestures, overlays, and so on.</db:para>
<db:para>Include the appropriate header in your C++ code. For example, applications using routes can include:</db:para>
<db:programlisting language="cpp">#include &amp;lt;QGeoRoute&amp;gt;
</db:programlisting>
<db:para>Add the <db:emphasis>location</db:emphasis> keyword in the project file to link against the Qt Location library:</db:para>
<db:programlisting language="cpp" role="bad">QT += location
</db:programlisting>
<db:para>See more in the <db:link xlink:href="qtlocation-index.xml">Qt Location Overview</db:link>.</db:para>
</db:section>
</db:article>
