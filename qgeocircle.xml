<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGeoCircle Class</db:title>
<db:productname>QtPositioning</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Positioning Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgeocircle.xml">QGeoCircle</db:link> class defines a circular geographic area.</db:para>
<db:para>This class was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGeoCircle</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += positioning</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qgeoshape.xml" xlink:role="class">QGeoShape</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGeoCircle is part of <db:simplelist><db:member>QtPositioning-positioning</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The circle is defined in terms of a <db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link> which specifies the center of the circle and a qreal which specifies the radius of the circle in meters.</db:para>
<db:para>The circle is considered invalid if the center coordinate is invalid or if the radius is less than zero.</db:para>
<db:para>This class is a <db:link xlink:href="qobject.xml#Q_GADGET">Q_GADGET</db:link> since Qt 5.5. It can be <db:link xlink:href="positioning-cpp-qml.xml#direct-c-value-integration-in-qtpositioning">directly used from C++ and QML</db:link>.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="center-prop">
<db:title>[since 5.5] center : QGeoCoordinate</db:title>
<db:para>This property holds the center coordinate for the geo circle.</db:para>
<db:para>The circle is considered invalid if this property contains an invalid coordinate.</db:para>
<db:para>A default constructed <db:link xlink:href="qgeocircle.xml">QGeoCircle</db:link> uses an invalid <db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link> as center.</db:para>
<db:para>While this property is introduced in Qt 5.5, the related accessor functions exist since the first version of this class.</db:para>
<db:para>This property was introduced in Qt 5.5.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qgeocircle.xml#center">center</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgeocircle.xml#setCenter">setCenter</db:link></db:emphasis>(const <db:type><db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link></db:type> &amp;<db:emphasis>center</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="radius-prop">
<db:title>[since 5.5] radius : qreal</db:title>
<db:para>This property holds the circle radius in meters.</db:para>
<db:para>The circle is considered invalid if this property is negative.</db:para>
<db:para>By default, the radius is initialized with <db:code>-1</db:code>.</db:para>
<db:para>While this property is introduced in Qt 5.5, the related accessor functions exist since the first version of this class.</db:para>
<db:para>This property was introduced in Qt 5.5.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qtglobal.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qgeocircle.xml#radius">radius</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgeocircle.xml#setRadius">setRadius</db:link></db:emphasis>(<db:type><db:link xlink:href="qtglobal.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>radius</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGeoCircle">
<db:title>QGeoCircle::QGeoCircle()</db:title>
<db:para>Constructs a new, invalid geo circle.</db:para>
</db:section>
<db:section xml:id="QGeoCircle-2">
<db:title>QGeoCircle::QGeoCircle(const QGeoShape &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a new geo circle from the contents of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="QGeoCircle-3">
<db:title>QGeoCircle::QGeoCircle(const QGeoCoordinate &amp;<db:emphasis>center</db:emphasis>, qreal <db:emphasis>radius</db:emphasis> = -1.0)</db:title>
<db:para>Constructs a new geo circle centered at <db:code role="parameter">center</db:code> and with a radius of <db:code role="parameter">radius</db:code> meters.</db:para>
</db:section>
<db:section xml:id="QGeoCircle-1">
<db:title>QGeoCircle::QGeoCircle(const QGeoCircle &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a new geo circle from the contents of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QGeoCircle">
<db:title>[noexcept] QGeoCircle::~QGeoCircle()</db:title>
<db:para>Destroys this geo circle.</db:para>
</db:section>
<db:section xml:id="center">
<db:title>QGeoCoordinate QGeoCircle::center() const</db:title>
<db:para>Returns the center coordinate of this geo circle. Equivalent to <db:link xlink:href="qgeoshape.xml#center">QGeoShape::center</db:link>().</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qgeocircle.xml#center-prop">center</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeocircle.xml#setCenter">setCenter</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="radius">
<db:title>qreal QGeoCircle::radius() const</db:title>
<db:para>Returns the radius in meters of this geo circle.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qgeocircle.xml#radius-prop">radius</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeocircle.xml#setRadius">setRadius</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCenter">
<db:title>void QGeoCircle::setCenter(const QGeoCoordinate &amp;<db:emphasis>center</db:emphasis>)</db:title>
<db:para>Sets the center coordinate of this geo circle to <db:code role="parameter">center</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qgeocircle.xml#center-prop">center</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeocircle.xml#center">center</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setRadius">
<db:title>void QGeoCircle::setRadius(qreal <db:emphasis>radius</db:emphasis>)</db:title>
<db:para>Sets the radius in meters of this geo circle to <db:code role="parameter">radius</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qgeocircle.xml#radius-prop">radius</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeocircle.xml#radius">radius</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="toString">
<db:title>[since 5.5] QString QGeoCircle::toString() const</db:title>
<db:para>Returns the geo circle properties as a string.</db:para>
<db:para>This function was introduced in Qt 5.5.</db:para>
</db:section>
<db:section xml:id="translate">
<db:title>void QGeoCircle::translate(double <db:emphasis>degreesLatitude</db:emphasis>, double <db:emphasis>degreesLongitude</db:emphasis>)</db:title>
<db:para>Translates this geo circle by <db:code role="parameter">degreesLatitude</db:code> northwards and <db:code role="parameter">degreesLongitude</db:code> eastwards.</db:para>
<db:para>Negative values of <db:code role="parameter">degreesLatitude</db:code> and <db:code role="parameter">degreesLongitude</db:code> correspond to southward and westward translation respectively.</db:para>
</db:section>
<db:section xml:id="translated">
<db:title>QGeoCircle QGeoCircle::translated(double <db:emphasis>degreesLatitude</db:emphasis>, double <db:emphasis>degreesLongitude</db:emphasis>) const</db:title>
<db:para>Returns a copy of this geo circle translated by <db:code role="parameter">degreesLatitude</db:code> northwards and <db:code role="parameter">degreesLongitude</db:code> eastwards.</db:para>
<db:para>Negative values of <db:code role="parameter">degreesLatitude</db:code> and <db:code role="parameter">degreesLongitude</db:code> correspond to southward and westward translation respectively.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeocircle.xml#translate">translate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QGeoCircle::operator!=(const QGeoCircle &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns whether this geo circle is not equal to <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QGeoCircle &amp;QGeoCircle::operator=(const QGeoCircle &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns <db:code role="parameter">other</db:code> to this geo circle and returns a reference to this geo circle.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QGeoCircle::operator==(const QGeoCircle &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns whether this geo circle is equal to <db:code role="parameter">other</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
