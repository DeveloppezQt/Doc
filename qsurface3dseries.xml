<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSurface3DSeries Class</db:title>
<db:productname>QtDataVisualization</db:productname>
<db:edition>Qt Data Visualization | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Data Visualization Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qsurface3dseries.xml">QSurface3DSeries</db:link> class represents a data series in a 3D surface graph.</db:para>
<db:para>This class was introduced in QtDataVisualization 1.0.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSurface3DSeries</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtDataVisualization 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qtdatavisualization-surface3dseries.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstract3dseries.xml" xlink:role="class">QAbstract3DSeries</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This class manages the series specific visual elements, as well as the series data (via a data proxy).</db:para>
<db:para>If no data proxy is set explicitly for the series, the series creates a default proxy. Setting another proxy will destroy the existing proxy and all data added to it.</db:para>
<db:para>The object mesh set via the <db:link xlink:href="qabstract3dseries.xml#mesh-prop">QAbstract3DSeries::mesh</db:link> property defines the selection pointer shape in a surface series.</db:para>
<db:para><db:link xlink:href="qsurface3dseries.xml">QSurface3DSeries</db:link> supports the following format tags for <db:link xlink:href="qabstract3dseries.xml#itemLabelFormat-prop">QAbstract3DSeries::setItemLabelFormat</db:link>():</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para>@xTitle</db:para>
</db:td>
<db:td>
<db:para>Title from x-axis</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>@yTitle</db:para>
</db:td>
<db:td>
<db:para>Title from y-axis</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>@zTitle</db:para>
</db:td>
<db:td>
<db:para>Title from z-axis</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>@xLabel</db:para>
</db:td>
<db:td>
<db:para>Item value formatted using the format of the x-axis. For more information, see <db:link xlink:href="qvalue3daxis.xml#labelFormat-prop">QValue3DAxis::setLabelFormat</db:link>().</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>@yLabel</db:para>
</db:td>
<db:td>
<db:para>Item value formatted using the format of the y-axis. For more information, see <db:link xlink:href="qvalue3daxis.xml#labelFormat-prop">QValue3DAxis::setLabelFormat</db:link>().</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>@zLabel</db:para>
</db:td>
<db:td>
<db:para>Item value formatted using the format of the z-axis. For more information, see <db:link xlink:href="qvalue3daxis.xml#labelFormat-prop">QValue3DAxis::setLabelFormat</db:link>().</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>@seriesName</db:para>
</db:td>
<db:td>
<db:para>Name of the series</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>For example:</db:para>
<db:programlisting language="cpp">proxy-&amp;gt;setItemLabelFormat(QStringLiteral(&quot;@valueTitle for (@rowLabel, @colLabel): %.1f&quot;));
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtdatavisualization-data-handling.xml">Qt Data Visualization Data Handling</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="DrawFlag-enum">
<db:title>enum QSurface3DSeries::DrawFlag</db:title>
<db:bridgehead renderas="sect2">flags QSurface3DSeries::DrawFlags</db:bridgehead>
<db:enumsynopsis>
<db:enumname>DrawFlag</db:enumname>
<db:enumitem>
<db:enumidentifier>DrawWireframe</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DrawSurface</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DrawSurfaceAndWireframe</db:enumidentifier>
<db:enumvalue>DrawWireframe | DrawSurface</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:typedefsynopsis>
<db:typedefname>QSurface3DSeries::DrawFlags</db:typedefname>
</db:typedefsynopsis>
<db:para>The drawing mode of the surface. Values of this enumeration can be combined with the OR operator.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsurface3dseries.xml">QSurface3DSeries</db:link></db:emphasis>::DrawWireframe</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Only the grid is drawn.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsurface3dseries.xml">QSurface3DSeries</db:link></db:emphasis>::DrawSurface</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Only the surface is drawn.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsurface3dseries.xml">QSurface3DSeries</db:link></db:emphasis>::DrawSurfaceAndWireframe</db:code></db:para>
</db:td>
<db:td><db:code>DrawWireframe | DrawSurface</db:code></db:td>
<db:td>
<db:para>Both the surface and grid are drawn.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>DrawFlags</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;DrawFlag&gt;. </db:code>It stores an OR combination of <db:code>DrawFlag</db:code> values.</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="dataProxy-prop">
<db:title>dataProxy : QSurfaceDataProxy*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QSurfaceDataProxy*</db:type>
<db:varname>dataProxy</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">dataProxy</db:synopsisinfo>
<db:synopsisinfo role="setter">setDataProxy</db:synopsisinfo>
<db:synopsisinfo role="notifier">dataProxyChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the active data proxy.</db:para>
<db:para>The series assumes ownership of any proxy set to it and deletes any previously set proxy when a new one is added. The proxy cannot be null or set to another series.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qsurfacedataproxy.xml">QSurfaceDataProxy</db:link></db:type> *<db:emphasis role="bold">dataProxy</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setDataProxy</db:emphasis>(<db:type><db:link xlink:href="qsurfacedataproxy.xml">QSurfaceDataProxy</db:link></db:type> *<db:emphasis>proxy</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">dataProxyChanged</db:emphasis>(<db:type><db:link xlink:href="qsurfacedataproxy.xml">QSurfaceDataProxy</db:link></db:type> *<db:emphasis>proxy</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="drawMode-prop">
<db:title>drawMode : DrawFlags</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>DrawFlags</db:type>
<db:varname>drawMode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">drawMode</db:synopsisinfo>
<db:synopsisinfo role="setter">setDrawMode</db:synopsisinfo>
<db:synopsisinfo role="notifier">drawModeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The drawing mode.</db:para>
<db:para>Possible values are the values of <db:link xlink:href="qsurface3dseries.xml#DrawFlag-enum">DrawFlag</db:link>. Clearing all flags is not allowed.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qsurface3dseries.xml#DrawFlag-enum">QSurface3DSeries::DrawFlags</db:link></db:type> <db:emphasis role="bold">drawMode</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setDrawMode</db:emphasis>(<db:type><db:link xlink:href="qsurface3dseries.xml#DrawFlag-enum">QSurface3DSeries::DrawFlags</db:link></db:type> <db:emphasis>mode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">drawModeChanged</db:emphasis>(<db:type><db:link xlink:href="qsurface3dseries.xml#DrawFlag-enum">QSurface3DSeries::DrawFlags</db:link></db:type> <db:emphasis>mode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="flatShadingEnabled-prop">
<db:title>flatShadingEnabled : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>flatShadingEnabled</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isFlatShadingEnabled</db:synopsisinfo>
<db:synopsisinfo role="setter">setFlatShadingEnabled</db:synopsisinfo>
<db:synopsisinfo role="notifier">flatShadingEnabledChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether surface flat shading is enabled.</db:para>
<db:para>Preset to <db:code>true</db:code> by default.</db:para>
<db:para>When disabled, the normals on the surface are interpolated making the edges look round. When enabled, the normals are kept the same on a triangle making the color of the triangle solid. This makes the data more readable from the model.</db:para>
<db:note>
<db:para>Flat shaded surfaces require at least GLSL version 1.2 with GL_EXT_gpu_shader4 extension. The value of the <db:link xlink:href="qsurface3dseries.xml#flatShadingSupported-prop">flatShadingSupported</db:link> property indicates whether flat shading is supported at runtime.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isFlatShadingEnabled</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setFlatShadingEnabled</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">flatShadingEnabledChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enable</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="flatShadingSupported-prop">
<db:title>[read-only] flatShadingSupported : const bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>flatShadingSupported</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isFlatShadingSupported</db:synopsisinfo>
<db:synopsisinfo role="notifier">flatShadingSupportedChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether surface flat shading is supported by the current system.</db:para>
<db:para>Flat shading for surfaces requires at least GLSL version 1.2 with GL_EXT_gpu_shader4 extension. If <db:code>true</db:code>, flat shading for surfaces is supported.</db:para>
<db:note>
<db:para>This read-only property is set to its correct value after the first render pass. Until then it is always <db:code>true</db:code>.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isFlatShadingSupported</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">flatShadingSupportedChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enable</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="selectedPoint-prop">
<db:title>selectedPoint : QPoint</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QPoint</db:type>
<db:varname>selectedPoint</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">selectedPoint</db:synopsisinfo>
<db:synopsisinfo role="setter">setSelectedPoint</db:synopsisinfo>
<db:synopsisinfo role="notifier">selectedPointChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the surface grid point that is selected in the series.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpoint.xml">QPoint</db:link></db:type> <db:emphasis role="bold">selectedPoint</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qsurface3dseries.xml#setSelectedPoint">setSelectedPoint</db:link></db:emphasis>(const <db:type><db:link xlink:href="qpoint.xml">QPoint</db:link></db:type> &amp;<db:emphasis>position</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">selectedPointChanged</db:emphasis>(const <db:type><db:link xlink:href="qpoint.xml">QPoint</db:link></db:type> &amp;<db:emphasis>position</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="texture-prop">
<db:title>texture : QImage</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QImage</db:type>
<db:varname>texture</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">texture</db:synopsisinfo>
<db:synopsisinfo role="setter">setTexture</db:synopsisinfo>
<db:synopsisinfo role="notifier">textureChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the texture for the surface as a <db:link xlink:href="qimage.xml">QImage</db:link>.</db:para>
<db:para>Setting an empty <db:link xlink:href="qimage.xml">QImage</db:link> clears the texture.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qimage.xml">QImage</db:link></db:type> <db:emphasis role="bold">texture</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTexture</db:emphasis>(const <db:type><db:link xlink:href="qimage.xml">QImage</db:link></db:type> &amp;<db:emphasis>texture</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">textureChanged</db:emphasis>(const <db:type><db:link xlink:href="qimage.xml">QImage</db:link></db:type> &amp;<db:emphasis>image</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="textureFile-prop">
<db:title>textureFile : QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>textureFile</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">textureFile</db:synopsisinfo>
<db:synopsisinfo role="setter">setTextureFile</db:synopsisinfo>
<db:synopsisinfo role="notifier">textureFileChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the texture for the surface as a file.</db:para>
<db:para>Setting an empty file name clears the texture.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">textureFile</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTextureFile</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>filename</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">textureFileChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>filename</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSurface3DSeries">
<db:title>[explicit] QSurface3DSeries::QSurface3DSeries(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QSurface3DSeries</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QSurface3DSeries(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a surface 3D series with the parent <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="QSurface3DSeries-1">
<db:title>[explicit] QSurface3DSeries::QSurface3DSeries(QSurfaceDataProxy *<db:emphasis>dataProxy</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QSurface3DSeries</db:methodname>
<db:methodparam>
<db:type>QSurfaceDataProxy *</db:type>
<db:parameter>dataProxy</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QSurface3DSeries(QSurfaceDataProxy *dataProxy, QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a surface 3D series with the data proxy <db:code role="parameter">dataProxy</db:code> and the parent <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QSurface3DSeries">
<db:title>[virtual] QSurface3DSeries::~QSurface3DSeries()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QSurface3DSeries</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QSurface3DSeries()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Deletes the surface 3D series.</db:para>
</db:section>
<db:section xml:id="invalidSelectionPosition">
<db:title>[static] QPoint QSurface3DSeries::invalidSelectionPosition()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QPoint</db:type>
<db:methodname>invalidSelectionPosition</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPoint invalidSelectionPosition()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the <db:link xlink:href="qpoint.xml">QPoint</db:link> signifying an invalid selection position. This is set to the <db:link xlink:href="qsurface3dseries.xml#selectedPoint-prop">selectedPoint</db:link> property to clear the selection from this series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstract3dgraph.xml#clearSelection">QAbstract3DGraph::clearSelection</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSelectedPoint">
<db:title>void QSurface3DSeries::setSelectedPoint(const QPoint &amp;<db:emphasis>position</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setSelectedPoint</db:methodname>
<db:methodparam>
<db:type>const QPoint &amp;</db:type>
<db:parameter>position</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">selectedPoint</db:synopsisinfo>
<db:synopsisinfo role="signature">void setSelectedPoint(const QPoint &amp;position)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Selects a surface grid point at the position <db:code role="parameter">position</db:code> in the data array of the series specified by a row and a column.</db:para>
<db:para>Only one point can be selected at a time.</db:para>
<db:para>To clear selection from this series, <db:link xlink:href="qsurface3dseries.xml#invalidSelectionPosition">invalidSelectionPosition</db:link>() is set as <db:code role="parameter">position</db:code>. If this series is added to a graph, the graph can adjust the selection according to user interaction or if it becomes invalid.</db:para>
<db:para>Removing rows from or inserting rows to the series before the row of the selected point will adjust the selection so that the same point will stay selected.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qsurface3dseries.xml#selectedPoint-prop">selectedPoint</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsurface3dseries.xml#selectedPoint-prop">selectedPoint</db:link>()</db:member>
<db:member><db:link xlink:href="qabstract3dgraph.xml#clearSelection">QAbstract3DGraph::clearSelection</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
