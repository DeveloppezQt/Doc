<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>User Interface Compiler (uic)</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Reference Documentation.</db:para></db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>This page documents the <db:emphasis>User Interface Compiler</db:emphasis> for the <db:link xlink:href="qtwidgets-index.xml">Qt Widgets</db:link> module. The uic reads an XML format user interface definition (.ui) file as generated by <db:link xlink:href="qtdesigner-manual.xml">Qt Designer</db:link> and creates a corresponding C++ header file or Python source file.</db:para>
<db:para>Usage:</db:para>
<db:programlisting language="cpp">uic [options] &amp;lt;uifile&amp;gt;
</db:programlisting>
<db:section xml:id="options">
<db:title>Options</db:title>
<db:para>The following table lists the command-line options recognized by uic.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Option</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>-h, --help</db:para>
</db:td>
<db:td>
<db:para>Displays help on commandline options.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-help-all</db:para>
</db:td>
<db:td>
<db:para>Displays help including Qt specific options.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-v, --version</db:para>
</db:td>
<db:td>
<db:para>Displays version information.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-d, --dependencies</db:para>
</db:td>
<db:td>
<db:para>Display the dependencies.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-o, --output &lt;file&gt;</db:para>
</db:td>
<db:td>
<db:para>Place the output into &lt;file&gt;</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-a, --no-autoconnection</db:para>
</db:td>
<db:td>
<db:para>Do not generate a call to QObject::connectSlotsByName().</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-p, --no-protection</db:para>
</db:td>
<db:td>
<db:para>Disable header protection.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-n, --no-implicit-includes</db:para>
</db:td>
<db:td>
<db:para>Disable generation of #include-directives.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--postfix &lt;postfix&gt;</db:para>
</db:td>
<db:td>
<db:para>Postfix to add to all generated classnames.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--tr, --translate &lt;function&gt;</db:para>
</db:td>
<db:td>
<db:para>Use &lt;function&gt; for i18n.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--include &lt;include-file&gt;</db:para>
</db:td>
<db:td>
<db:para>Add #include &lt;include-file&gt; to &lt;file&gt;.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-g, --generator &lt;python|cpp&gt;</db:para>
</db:td>
<db:td>
<db:para>Select generator.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>-c, --connections &lt;pmf|string&gt;</db:para>
</db:td>
<db:td>
<db:para>Connection syntax.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--idbased</db:para>
</db:td>
<db:td>
<db:para>Use id based function for i18n</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--from-imports</db:para>
</db:td>
<db:td>
<db:para>Python: generate imports relative to '.'</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--absolute-imports</db:para>
</db:td>
<db:td>
<db:para>Python: generate absolute imports</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--rc-prefix</db:para>
</db:td>
<db:td>
<db:para>Python: Generate &quot;rc_file&quot; instead of &quot;file_rc&quot; import</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--star-imports</db:para>
</db:td>
<db:td>
<db:para>Python: Use * imports</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>--python-paths &lt;pathlist&gt;</db:para>
</db:td>
<db:td>
<db:para>Python paths for â€“absolute-imports.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="usage">
<db:title>Usage</db:title>
<db:para>See <db:link xlink:href="designer-using-a-ui-file.xml">Using a Designer UI File in Your C++ Application</db:link> or <db:link xlink:href="designer-using-a-ui-file-python.xml">Using a Designer UI File in Your Qt for Python Application</db:link>.</db:para>
</db:section>
</db:article>
