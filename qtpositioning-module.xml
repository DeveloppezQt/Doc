<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Positioning C++ Classes</db:title>
<db:productname>QtPositioning</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Positioning Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Positioning module provides positioning information via QML and C++ interfaces.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Positioning module provides positioning information via QML and C++ interfaces.</db:para>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="qgeoaddress.xml" xlink:role="class">QGeoAddress</db:link></db:term>
<db:listitem>
<db:para>The QGeoAddress class represents an address of a QGeoLocation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoareamonitorinfo.xml" xlink:role="class">QGeoAreaMonitorInfo</db:link></db:term>
<db:listitem>
<db:para>The QGeoAreaMonitorInfo class describes the parameters of an area or region to be monitored for proximity.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoareamonitorsource.xml" xlink:role="class">QGeoAreaMonitorSource</db:link></db:term>
<db:listitem>
<db:para>The QGeoAreaMonitorSource class enables the detection of proximity changes for a specified set of coordinates.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeocircle.xml" xlink:role="class">QGeoCircle</db:link></db:term>
<db:listitem>
<db:para>The QGeoCircle class defines a circular geographic area.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeocoordinate.xml" xlink:role="class">QGeoCoordinate</db:link></db:term>
<db:listitem>
<db:para>The QGeoCoordinate class defines a geographical position on the surface of the Earth.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeolocation.xml" xlink:role="class">QGeoLocation</db:link></db:term>
<db:listitem>
<db:para>The QGeoLocation class represents basic information about a location.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeopositioninfo.xml" xlink:role="class">QGeoPositionInfo</db:link></db:term>
<db:listitem>
<db:para>The QGeoPositionInfo class contains information gathered on a global position, direction and velocity at a particular point in time.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeopositioninfosource.xml" xlink:role="class">QGeoPositionInfoSource</db:link></db:term>
<db:listitem>
<db:para>The QGeoPositionInfoSource class is an abstract base class for the distribution of positional updates.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeopositioninfosourcefactory.xml" xlink:role="class">QGeoPositionInfoSourceFactory</db:link></db:term>
<db:listitem>
<db:para>The QGeoPositionInfoSourceFactory class is a factory class used as the plugin interface for external providers of positioning data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeorectangle.xml" xlink:role="class">QGeoRectangle</db:link></db:term>
<db:listitem>
<db:para>The QGeoRectangle class defines a rectangular geographic area.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeosatelliteinfo.xml" xlink:role="class">QGeoSatelliteInfo</db:link></db:term>
<db:listitem>
<db:para>The QGeoSatelliteInfo class contains basic information about a satellite.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeosatelliteinfosource.xml" xlink:role="class">QGeoSatelliteInfoSource</db:link></db:term>
<db:listitem>
<db:para>The QGeoSatelliteInfoSource class is an abstract base class for the distribution of satellite information updates.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgeoshape.xml" xlink:role="class">QGeoShape</db:link></db:term>
<db:listitem>
<db:para>The QGeoShape class defines a geographic area.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnmeapositioninfosource.xml" xlink:role="class">QNmeaPositionInfoSource</db:link></db:term>
<db:listitem>
<db:para>The QNmeaPositionInfoSource class provides positional information using a NMEA data source.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>To load the Qt Positioning module, add the following statement to your .qml files</db:para>
<db:programlisting language="qml">import QtPositioning 5.2
</db:programlisting>
<db:para>For C++ projects include the header appropriate for the current use case, for example applications using routes may use</db:para>
<db:programlisting language="cpp">The .pro file should have the \e positioning keyword added

\code QT += positioning </db:programlisting>
<db:para>See more in the <db:link xlink:href="qtpositioning-index.xml">Qt Positioning Overview</db:link>.</db:para>
</db:section>
</db:article>
