<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSGAbstractRenderer Class</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qsgabstractrenderer.xml">QSGAbstractRenderer</db:link> gives access to the scene graph nodes and rendering of a <db:link xlink:href="qsgengine.xml">QSGEngine</db:link>.</db:para>
<db:para>This class was introduced in Qt 5.4.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSGAbstractRenderer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += quick</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qsgabstractrenderer.xml">QSGAbstractRenderer</db:link> created by a <db:link xlink:href="qsgengine.xml">QSGEngine</db:link> allows you to set your <db:link xlink:href="qsgnode.xml">QSGNode</db:link> tree through <db:link xlink:href="qsgabstractrenderer.xml#setRootNode">setRootNode</db:link>() and control the rendering viewport through <db:link xlink:href="qsgabstractrenderer.xml#setDeviceRect">setDeviceRect</db:link>(), <db:link xlink:href="qsgabstractrenderer.xml#setViewportRect">setViewportRect</db:link>() and <db:link xlink:href="qsgabstractrenderer.xml#setProjectionMatrixToRect">setProjectionMatrixToRect</db:link>(). You can finally trigger the rendering to the desired framebuffer through <db:link xlink:href="qsgabstractrenderer.xml#renderScene">renderScene</db:link>().</db:para>
<db:para>The <db:link xlink:href="qsgabstractrenderer.xml">QSGAbstractRenderer</db:link> is only available when used with a <db:link xlink:href="qsgengine.xml">QSGEngine</db:link> and isn't exposed when used internally by <db:link xlink:href="qquickwindow.xml">QQuickWindow</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgengine.xml">QSGEngine</db:link></db:member>
<db:member><db:link xlink:href="qsgnode.xml">QSGNode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="ClearModeBit-enum">
<db:title>enum QSGAbstractRenderer::ClearModeBit</db:title>
<db:bridgehead renderas="sect2">flags QSGAbstractRenderer::ClearMode</db:bridgehead>
<db:para>Used with <db:link xlink:href="qsgabstractrenderer.xml#setClearMode">setClearMode</db:link>() to indicate which buffer should be cleared before the scene render.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsgabstractrenderer.xml">QSGAbstractRenderer</db:link></db:emphasis>::ClearColorBuffer</db:code></db:para>
</db:td>
<db:td><db:code>0x0001</db:code></db:td>
<db:td>
<db:para>Clear the color buffer using <db:link xlink:href="qsgabstractrenderer.xml#clearColor">clearColor</db:link>().</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsgabstractrenderer.xml">QSGAbstractRenderer</db:link></db:emphasis>::ClearDepthBuffer</db:code></db:para>
</db:td>
<db:td><db:code>0x0002</db:code></db:td>
<db:td>
<db:para>Clear the depth buffer.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsgabstractrenderer.xml">QSGAbstractRenderer</db:link></db:emphasis>::ClearStencilBuffer</db:code></db:para>
</db:td>
<db:td><db:code>0x0004</db:code></db:td>
<db:td>
<db:para>Clear the stencil buffer.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>ClearMode</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;ClearModeBit&gt;. </db:code>It stores an OR combination of <db:code>ClearModeBit</db:code> values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#setClearMode">setClearMode</db:link>()</db:member>
<db:member><db:link xlink:href="qsgabstractrenderer.xml#setClearColor">setClearColor</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="clearColor">
<db:title>QColor QSGAbstractRenderer::clearColor() const</db:title>
<db:para>Returns the color that clears the framebuffer at the beginning of the rendering.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#setClearColor">setClearColor</db:link>()</db:member>
<db:member><db:link xlink:href="qsgabstractrenderer.xml#clearMode">clearMode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clearMode">
<db:title>QSGAbstractRenderer::ClearMode QSGAbstractRenderer::clearMode() const</db:title>
<db:para>Flags defining which attachment of the framebuffer will be cleared before each scene render.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#setClearMode">setClearMode</db:link>()</db:member>
<db:member><db:link xlink:href="qsgabstractrenderer.xml#clearColor">clearColor</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="deviceRect">
<db:title>QRect QSGAbstractRenderer::deviceRect() const</db:title>
<db:para>Returns the device rect of the surface being rendered to.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#setDeviceRect">setDeviceRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="projectionMatrix">
<db:title>QMatrix4x4 QSGAbstractRenderer::projectionMatrix() const</db:title>
<db:para>Returns the projection matrix</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#setProjectionMatrix">setProjectionMatrix</db:link>()</db:member>
<db:member><db:link xlink:href="qsgabstractrenderer.xml#setProjectionMatrixToRect">setProjectionMatrixToRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="renderScene">
<db:title>[pure virtual] void QSGAbstractRenderer::renderScene(uint <db:emphasis>fboId</db:emphasis> = 0)</db:title>
<db:para>Render the scene to the specified <db:code role="parameter">fboId</db:code></db:para>
<db:para>If <db:code role="parameter">fboId</db:code> isn't specified, the scene graph will be rendered to the default framebuffer. You will have to call <db:link xlink:href="qopenglcontext.xml#swapBuffers">QOpenGLContext::swapBuffers</db:link>() yourself afterward.</db:para>
<db:para>The framebuffer specified by <db:code role="parameter">fboId</db:code> will be bound automatically.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopenglcontext.xml#swapBuffers">QOpenGLContext::swapBuffers</db:link>()</db:member>
<db:member><db:link xlink:href="qopenglframebufferobject.xml#handle">QOpenGLFramebufferObject::handle</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rootNode">
<db:title>QSGRootNode *QSGAbstractRenderer::rootNode() const</db:title>
<db:para>Returns the root of the <db:link xlink:href="qsgnode.xml">QSGNode</db:link> scene.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#setRootNode">setRootNode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sceneGraphChanged">
<db:title>void QSGAbstractRenderer::sceneGraphChanged()</db:title>
<db:para>This signal is emitted on the first modification of a node in the tree after the last scene render.</db:para>
</db:section>
<db:section xml:id="setClearColor">
<db:title>void QSGAbstractRenderer::setClearColor(const QColor &amp;<db:emphasis>color</db:emphasis>)</db:title>
<db:para>Use <db:code role="parameter">color</db:code> to clear the framebuffer when <db:link xlink:href="qsgabstractrenderer.xml#clearMode">clearMode</db:link>() is set to <db:link xlink:href="qsgabstractrenderer.xml#ClearModeBit-enum">QSGAbstractRenderer::ClearColorBuffer</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#clearColor">clearColor</db:link>()</db:member>
<db:member><db:link xlink:href="qsgabstractrenderer.xml#setClearMode">setClearMode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setClearMode">
<db:title>void QSGAbstractRenderer::setClearMode(QSGAbstractRenderer::ClearMode <db:emphasis>mode</db:emphasis>)</db:title>
<db:para>Defines which attachment of the framebuffer should be cleared before each scene render with the <db:code role="parameter">mode</db:code> flag.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#clearMode">clearMode</db:link>()</db:member>
<db:member><db:link xlink:href="qsgabstractrenderer.xml#setClearColor">setClearColor</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDeviceRect">
<db:title>void QSGAbstractRenderer::setDeviceRect(const QRect &amp;<db:emphasis>rect</db:emphasis>)</db:title>
<db:para>Sets <db:code role="parameter">rect</db:code> as the geometry of the surface being rendered to.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#deviceRect">deviceRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDeviceRect-1">
<db:title>void QSGAbstractRenderer::setDeviceRect(const QSize &amp;<db:emphasis>size</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Sets the <db:code role="parameter">size</db:code> of the surface being rendered to.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#deviceRect">deviceRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setProjectionMatrix">
<db:title>void QSGAbstractRenderer::setProjectionMatrix(const QMatrix4x4 &amp;<db:emphasis>matrix</db:emphasis>)</db:title>
<db:para>Use <db:code role="parameter">matrix</db:code> to project the <db:link xlink:href="qsgnode.xml">QSGNode</db:link> coordinates onto surface pixels.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#projectionMatrix">projectionMatrix</db:link>()</db:member>
<db:member><db:link xlink:href="qsgabstractrenderer.xml#setProjectionMatrixToRect">setProjectionMatrixToRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setProjectionMatrixToRect">
<db:title>void QSGAbstractRenderer::setProjectionMatrixToRect(const QRectF &amp;<db:emphasis>rect</db:emphasis>)</db:title>
<db:para>Convenience method that calls <db:link xlink:href="qsgabstractrenderer.xml#setProjectionMatrix">setProjectionMatrix</db:link>() with an orthographic matrix generated from <db:code role="parameter">rect</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#setProjectionMatrix">setProjectionMatrix</db:link>()</db:member>
<db:member><db:link xlink:href="qsgabstractrenderer.xml#projectionMatrix">projectionMatrix</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setRootNode">
<db:title>void QSGAbstractRenderer::setRootNode(QSGRootNode *<db:emphasis>node</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">node</db:code> as the root of the <db:link xlink:href="qsgnode.xml">QSGNode</db:link> scene that you want to render. You need to provide a <db:code role="parameter">node</db:code> before trying to render the scene.</db:para>
<db:note>
<db:para>This doesn't take ownership of <db:code role="parameter">node</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#rootNode">rootNode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setViewportRect">
<db:title>void QSGAbstractRenderer::setViewportRect(const QRect &amp;<db:emphasis>rect</db:emphasis>)</db:title>
<db:para>Sets <db:code role="parameter">rect</db:code> as the geometry of the viewport to render on the surface.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#viewportRect">viewportRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setViewportRect-1">
<db:title>void QSGAbstractRenderer::setViewportRect(const QSize &amp;<db:emphasis>size</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Sets the <db:code role="parameter">size</db:code> of the viewport to render on the surface.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#viewportRect">viewportRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="viewportRect">
<db:title>QRect QSGAbstractRenderer::viewportRect() const</db:title>
<db:para>Returns the rect of the viewport to render.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsgabstractrenderer.xml#setViewportRect">setViewportRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
