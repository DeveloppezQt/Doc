<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Core C++ Classes</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides core non-GUI functionality.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Provides core non-GUI functionality.</db:para>
<db:section xml:id="namespaces">
<db:title>Namespaces</db:title>
<db:variablelist role="namespaces">
<db:varlistentry>
<db:term><db:link xlink:href="qt.xml" xlink:role="namespace">Qt</db:link></db:term>
<db:listitem>
<db:para>The Qt namespace contains miscellaneous identifiers used throughout the Qt library.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt-literals.xml" xlink:role="namespace">Qt::Literals</db:link></db:term>
<db:listitem>
<db:para>The Literals inline namespace declares literal operators for Qt types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt-literals-stringliterals.xml" xlink:role="namespace">Qt::Literals::StringLiterals</db:link></db:term>
<db:listitem>
<db:para>The StringLiterals namespace declares string literal operators for Qt types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtfuture.xml" xlink:role="namespace">QtFuture</db:link></db:term>
<db:listitem>
<db:para>Contains miscellaneous identifiers used by the QFuture class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtliterals.xml" xlink:role="namespace">QtLiterals</db:link></db:term>
<db:listitem>
<db:para>The QtLiterals namespace declares literal operators for Qt types.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="qabstractanimation.xml" xlink:role="class">QAbstractAnimation</db:link></db:term>
<db:listitem>
<db:para>The QAbstractAnimation class is the base of all animations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstracteventdispatcher.xml" xlink:role="class">QAbstractEventDispatcher</db:link></db:term>
<db:listitem>
<db:para>The QAbstractEventDispatcher class provides an interface to manage Qt's event queue.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstracteventdispatcher-timerinfo.xml" xlink:role="class">QAbstractEventDispatcher::TimerInfo</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractitemmodel.xml" xlink:role="class">QAbstractItemModel</db:link></db:term>
<db:listitem>
<db:para>The QAbstractItemModel class provides the abstract interface for item model classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractlistmodel.xml" xlink:role="class">QAbstractListModel</db:link></db:term>
<db:listitem>
<db:para>The QAbstractListModel class provides an abstract model that can be subclassed to create one-dimensional list models.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractnativeeventfilter.xml" xlink:role="class">QAbstractNativeEventFilter</db:link></db:term>
<db:listitem>
<db:para>The QAbstractNativeEventFilter class provides an interface for receiving native events, such as MSG or XCB event structs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractproxymodel.xml" xlink:role="class">QAbstractProxyModel</db:link></db:term>
<db:listitem>
<db:para>The QAbstractProxyModel class provides a base class for proxy item models that can do sorting, filtering or other data processing tasks.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstracttablemodel.xml" xlink:role="class">QAbstractTableModel</db:link></db:term>
<db:listitem>
<db:para>The QAbstractTableModel class provides an abstract model that can be subclassed to create table models.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qadoptshareddatatag.xml" xlink:role="class">QAdoptSharedDataTag</db:link></db:term>
<db:listitem>
<db:para>The QAdoptSharedDataTag is a helper tag class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qanimationgroup.xml" xlink:role="class">QAnimationGroup</db:link></db:term>
<db:listitem>
<db:para>The QAnimationGroup class is an abstract base class for groups of animations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qanystringview.xml" xlink:role="class">QAnyStringView</db:link></db:term>
<db:listitem>
<db:para>The QAnyStringView class provides a unified view on Latin-1, UTF-8, or UTF-16 strings with a read-only subset of the QString API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qassociativeiterable.xml" xlink:role="class">QAssociativeIterable</db:link></db:term>
<db:listitem>
<db:para>The QAssociativeIterable class is an iterable interface for an associative container in a QVariant.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qatomicint.xml" xlink:role="class">QAtomicInt</db:link></db:term>
<db:listitem>
<db:para>The QAtomicInt class provides platform-independent atomic operations on int.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qatomicinteger.xml" xlink:role="class">QAtomicInteger</db:link></db:term>
<db:listitem>
<db:para>The QAtomicInteger class provides platform-independent atomic operations on integers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qatomicpointer.xml" xlink:role="class">QAtomicPointer</db:link></db:term>
<db:listitem>
<db:para>The QAtomicPointer class is a template class that provides platform-independent atomic operations on pointers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qatomicscopedvaluerollback.xml" xlink:role="class">QAtomicScopedValueRollback</db:link></db:term>
<db:listitem>
<db:para>Provides a QScopedValueRollback for atomic variables.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbeinteger.xml" xlink:role="class">QBEInteger</db:link></db:term>
<db:listitem>
<db:para>The QBEInteger class provides platform-independent big-endian integers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbaseiterator.xml" xlink:role="class">QBaseIterator</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbasictimer.xml" xlink:role="class">QBasicTimer</db:link></db:term>
<db:listitem>
<db:para>The QBasicTimer class provides timer events for objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbindable.xml" xlink:role="class">QBindable</db:link></db:term>
<db:listitem>
<db:para>QBindable is a wrapper class around binding-enabled properties. It allows type-safe operations while abstracting the differences between the various property classes away.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbitarray.xml" xlink:role="class">QBitArray</db:link></db:term>
<db:listitem>
<db:para>The QBitArray class provides an array of bits.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbluetoothpermission.xml" xlink:role="class">QBluetoothPermission</db:link></db:term>
<db:listitem>
<db:para>Access Bluetooth peripherals.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbuffer.xml" xlink:role="class">QBuffer</db:link></db:term>
<db:listitem>
<db:para>The QBuffer class provides a QIODevice interface for a QByteArray.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearray.xml" xlink:role="class">QByteArray</db:link></db:term>
<db:listitem>
<db:para>The QByteArray class provides an array of bytes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearray-frombase64result.xml" xlink:role="class">QByteArray::FromBase64Result</db:link></db:term>
<db:listitem>
<db:para>The QByteArray::FromBase64Result class holds the result of a call to QByteArray::fromBase64Encoding.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearraylist.xml" xlink:role="class">QByteArrayList</db:link></db:term>
<db:listitem>
<db:para>The QByteArrayList class provides a list of byte arrays.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearraymatcher.xml" xlink:role="class">QByteArrayMatcher</db:link></db:term>
<db:listitem>
<db:para>The QByteArrayMatcher class holds a sequence of bytes that can be quickly matched in a byte array.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearrayview.xml" xlink:role="class">QByteArrayView</db:link></db:term>
<db:listitem>
<db:para>The QByteArrayView class provides a view on an array of bytes with a read-only subset of the QByteArray API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcache.xml" xlink:role="class">QCache</db:link></db:term>
<db:listitem>
<db:para>The QCache class is a template class that provides a cache.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcalendar.xml" xlink:role="class">QCalendar</db:link></db:term>
<db:listitem>
<db:para>The QCalendar class describes calendar systems.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcalendar-systemid.xml" xlink:role="class">QCalendar::SystemId</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcalendarpermission.xml" xlink:role="class">QCalendarPermission</db:link></db:term>
<db:listitem>
<db:para>Access the user's calendar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamerapermission.xml" xlink:role="class">QCameraPermission</db:link></db:term>
<db:listitem>
<db:para>Access the camera for taking pictures or videos.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcborarray.xml" xlink:role="class">QCborArray</db:link></db:term>
<db:listitem>
<db:para>The QCborArray class is used to hold an array of CBOR elements.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcborerror.xml" xlink:role="class">QCborError</db:link></db:term>
<db:listitem>
<db:para>The QCborError class holds the error condition found while parsing or validating a CBOR stream.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcbormap.xml" xlink:role="class">QCborMap</db:link></db:term>
<db:listitem>
<db:para>The QCborMap class is used to hold an associative container representable in CBOR.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcbormap-constiterator.xml" xlink:role="class">QCborMap::ConstIterator</db:link></db:term>
<db:listitem>
<db:para>The QCborMap::ConstIterator class provides an STL-style const iterator for QCborMap.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcbormap-iterator.xml" xlink:role="class">QCborMap::Iterator</db:link></db:term>
<db:listitem>
<db:para>The QCborMap::Iterator class provides an STL-style non-const iterator for QCborMap.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcborparsererror.xml" xlink:role="class">QCborParserError</db:link></db:term>
<db:listitem>
<db:para>The QCborParserError is used by QCborValue to report a parsing error.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcborstreamreader.xml" xlink:role="class">QCborStreamReader</db:link></db:term>
<db:listitem>
<db:para>The QCborStreamReader class is a simple CBOR stream decoder, operating on either a QByteArray or QIODevice.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcborstreamreader-stringresult.xml" xlink:role="class">QCborStreamReader::StringResult</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcborstreamwriter.xml" xlink:role="class">QCborStreamWriter</db:link></db:term>
<db:listitem>
<db:para>The QCborStreamWriter class is a simple CBOR encoder operating on a one-way stream.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcborvalue.xml" xlink:role="class">QCborValue</db:link></db:term>
<db:listitem>
<db:para>The QCborValue class encapsulates a value in CBOR.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qchar.xml" xlink:role="class">QChar</db:link></db:term>
<db:listitem>
<db:para>The QChar class provides a 16-bit Unicode character.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qchildevent.xml" xlink:role="class">QChildEvent</db:link></db:term>
<db:listitem>
<db:para>The QChildEvent class contains event parameters for child object events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcollator.xml" xlink:role="class">QCollator</db:link></db:term>
<db:listitem>
<db:para>The QCollator class compares strings according to a localized collation algorithm.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcollatorsortkey.xml" xlink:role="class">QCollatorSortKey</db:link></db:term>
<db:listitem>
<db:para>The QCollatorSortKey class can be used to speed up string collation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcommandlineoption.xml" xlink:role="class">QCommandLineOption</db:link></db:term>
<db:listitem>
<db:para>The QCommandLineOption class defines a possible command-line option.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcommandlineparser.xml" xlink:role="class">QCommandLineParser</db:link></db:term>
<db:listitem>
<db:para>The QCommandLineParser class provides a means for handling the command line options.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qconcatenatetablesproxymodel.xml" xlink:role="class">QConcatenateTablesProxyModel</db:link></db:term>
<db:listitem>
<db:para>The QConcatenateTablesProxyModel class proxies multiple source models, concatenating their rows.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qconstiterator.xml" xlink:role="class">QConstIterator</db:link></db:term>
<db:listitem>
<db:para>The QConstIterator allows iteration over a container in a QVariant.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcontactspermission.xml" xlink:role="class">QContactsPermission</db:link></db:term>
<db:listitem>
<db:para>Access the user's contacts.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcontiguouscache.xml" xlink:role="class">QContiguousCache</db:link></db:term>
<db:listitem>
<db:para>The QContiguousCache class is a template class that provides a contiguous cache.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcoreapplication.xml" xlink:role="class">QCoreApplication</db:link></db:term>
<db:listitem>
<db:para>The QCoreApplication class provides an event loop for Qt applications without UI.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcryptographichash.xml" xlink:role="class">QCryptographicHash</db:link></db:term>
<db:listitem>
<db:para>The QCryptographicHash class provides a way to generate cryptographic hashes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdatastream.xml" xlink:role="class">QDataStream</db:link></db:term>
<db:listitem>
<db:para>The QDataStream class provides serialization of binary data to a QIODevice.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdate.xml" xlink:role="class">QDate</db:link></db:term>
<db:listitem>
<db:para>The QDate class provides date functions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdatetime.xml" xlink:role="class">QDateTime</db:link></db:term>
<db:listitem>
<db:para>The QDateTime class provides date and time functions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdeadlinetimer.xml" xlink:role="class">QDeadlineTimer</db:link></db:term>
<db:listitem>
<db:para>The QDeadlineTimer class marks a deadline in the future.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdebug.xml" xlink:role="class">QDebug</db:link></db:term>
<db:listitem>
<db:para>The QDebug class provides an output stream for debugging information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdebugstatesaver.xml" xlink:role="class">QDebugStateSaver</db:link></db:term>
<db:listitem>
<db:para>Convenience class for custom QDebug operators.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdir.xml" xlink:role="class">QDir</db:link></db:term>
<db:listitem>
<db:para>The QDir class provides access to directory structures and their contents.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdiriterator.xml" xlink:role="class">QDirIterator</db:link></db:term>
<db:listitem>
<db:para>The QDirIterator class provides an iterator for directory entrylists.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdynamicpropertychangeevent.xml" xlink:role="class">QDynamicPropertyChangeEvent</db:link></db:term>
<db:listitem>
<db:para>The QDynamicPropertyChangeEvent class contains event parameters for dynamic property change events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qeasingcurve.xml" xlink:role="class">QEasingCurve</db:link></db:term>
<db:listitem>
<db:para>The QEasingCurve class provides easing curves for controlling animation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qelapsedtimer.xml" xlink:role="class">QElapsedTimer</db:link></db:term>
<db:listitem>
<db:para>The QElapsedTimer class provides a fast way to calculate elapsed times.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qenablesharedfromthis.xml" xlink:role="class">QEnableSharedFromThis</db:link></db:term>
<db:listitem>
<db:para>A base class that allows obtaining a QSharedPointer for an object already managed by a shared pointer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qevent.xml" xlink:role="class">QEvent</db:link></db:term>
<db:listitem>
<db:para>The QEvent class is the base class of all event classes. Event objects contain event parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qeventloop.xml" xlink:role="class">QEventLoop</db:link></db:term>
<db:listitem>
<db:para>The QEventLoop class provides a means of entering and leaving an event loop.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qeventlooplocker.xml" xlink:role="class">QEventLoopLocker</db:link></db:term>
<db:listitem>
<db:para>The QEventLoopLocker class provides a means to quit an event loop when it is no longer needed.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qexception.xml" xlink:role="class">QException</db:link></db:term>
<db:listitem>
<db:para>The QException class provides a base class for exceptions that can be transferred across threads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qexplicitlyshareddatapointer.xml" xlink:role="class">QExplicitlySharedDataPointer</db:link></db:term>
<db:listitem>
<db:para>The QExplicitlySharedDataPointer class represents a pointer to an explicitly shared object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfile.xml" xlink:role="class">QFile</db:link></db:term>
<db:listitem>
<db:para>The QFile class provides an interface for reading from and writing to files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfiledevice.xml" xlink:role="class">QFileDevice</db:link></db:term>
<db:listitem>
<db:para>The QFileDevice class provides an interface for reading from and writing to open files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfileinfo.xml" xlink:role="class">QFileInfo</db:link></db:term>
<db:listitem>
<db:para>The QFileInfo class provides an OS-independent API to retrieve information about file system entries.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfileselector.xml" xlink:role="class">QFileSelector</db:link></db:term>
<db:listitem>
<db:para>QFileSelector provides a convenient way of selecting file variants.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfilesystemwatcher.xml" xlink:role="class">QFileSystemWatcher</db:link></db:term>
<db:listitem>
<db:para>The QFileSystemWatcher class provides an interface for monitoring files and directories for modifications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qflag.xml" xlink:role="class">QFlag</db:link></db:term>
<db:listitem>
<db:para>The QFlag class is a helper data type for QFlags.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qflags.xml" xlink:role="class">QFlags</db:link></db:term>
<db:listitem>
<db:para>The QFlags class provides a type-safe way of storing OR-combinations of enum values.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfuture.xml" xlink:role="class">QFuture</db:link></db:term>
<db:listitem>
<db:para>The QFuture class represents the result of an asynchronous computation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfutureiterator.xml" xlink:role="class">QFutureIterator</db:link></db:term>
<db:listitem>
<db:para>The QFutureIterator class provides a Java-style const iterator for QFuture.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfuturesynchronizer.xml" xlink:role="class">QFutureSynchronizer</db:link></db:term>
<db:listitem>
<db:para>The QFutureSynchronizer class is a convenience class that simplifies QFuture synchronization.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfuturewatcher.xml" xlink:role="class">QFutureWatcher</db:link></db:term>
<db:listitem>
<db:para>The QFutureWatcher class allows monitoring a QFuture using signals and slots.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgenericargument.xml" xlink:role="class">QGenericArgument</db:link></db:term>
<db:listitem>
<db:para>The QGenericArgument class is an internal helper class for marshalling arguments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgenericreturnargument.xml" xlink:role="class">QGenericReturnArgument</db:link></db:term>
<db:listitem>
<db:para>The QGenericReturnArgument class is an internal helper class for marshalling arguments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qglobalstatic.xml" xlink:role="class">QGlobalStatic</db:link></db:term>
<db:listitem>
<db:para>The QGlobalStatic class is used to implement a global static object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgregoriancalendar.xml" xlink:role="class">QGregorianCalendar</db:link></db:term>
<db:listitem>
<db:para>The QGregorianCalendar class implements the Gregorian calendar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhash.xml" xlink:role="class">QHash</db:link></db:term>
<db:listitem>
<db:para>The QHash class is a template class that provides a hash-table-based dictionary.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhashiterator.xml" xlink:role="class">QHashIterator</db:link></db:term>
<db:listitem>
<db:para>The QHashIterator class provides a Java-style const iterator for QHash and QMultiHash.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhashseed.xml" xlink:role="class">QHashSeed</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qiodevice.xml" xlink:role="class">QIODevice</db:link></db:term>
<db:listitem>
<db:para>The QIODevice class is the base interface class of all I/O devices in Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qiodevicebase.xml" xlink:role="class">QIODeviceBase</db:link></db:term>
<db:listitem>
<db:para>Base class for QIODevice that provides flags describing the mode in which a device is opened.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qidentityproxymodel.xml" xlink:role="class">QIdentityProxyModel</db:link></db:term>
<db:listitem>
<db:para>The QIdentityProxyModel class proxies its source model unmodified.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemselection.xml" xlink:role="class">QItemSelection</db:link></db:term>
<db:listitem>
<db:para>The QItemSelection class manages information about selected items in a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemselectionmodel.xml" xlink:role="class">QItemSelectionModel</db:link></db:term>
<db:listitem>
<db:para>The QItemSelectionModel class keeps track of a view's selected items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemselectionrange.xml" xlink:role="class">QItemSelectionRange</db:link></db:term>
<db:listitem>
<db:para>The QItemSelectionRange class manages information about a range of selected items in a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qiterable.xml" xlink:role="class">QIterable</db:link></db:term>
<db:listitem>
<db:para>QIterable is a template class that is the base class for QSequentialIterable and QAssociativeIterable.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qiterator.xml" xlink:role="class">QIterator</db:link></db:term>
<db:listitem>
<db:para>The QIterator is a template class that allows iteration over a container in a QVariant.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjalalicalendar.xml" xlink:role="class">QJalaliCalendar</db:link></db:term>
<db:listitem>
<db:para>The QJalaliCalendar class provides Jalali (Hijri Shamsi) calendar system implementation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjnienvironment.xml" xlink:role="class">QJniEnvironment</db:link></db:term>
<db:listitem>
<db:para>The QJniEnvironment class provides access to the JNI Environment (JNIEnv).</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjniobject.xml" xlink:role="class">QJniObject</db:link></db:term>
<db:listitem>
<db:para>A convenience wrapper around the Java Native Interface (JNI).</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsonarray.xml" xlink:role="class">QJsonArray</db:link></db:term>
<db:listitem>
<db:para>The QJsonArray class encapsulates a JSON array.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsondocument.xml" xlink:role="class">QJsonDocument</db:link></db:term>
<db:listitem>
<db:para>The QJsonDocument class provides a way to read and write JSON documents.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsonobject.xml" xlink:role="class">QJsonObject</db:link></db:term>
<db:listitem>
<db:para>The QJsonObject class encapsulates a JSON object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsonparseerror.xml" xlink:role="class">QJsonParseError</db:link></db:term>
<db:listitem>
<db:para>The QJsonParseError class is used to report errors during JSON parsing.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsonvalue.xml" xlink:role="class">QJsonValue</db:link></db:term>
<db:listitem>
<db:para>The QJsonValue class encapsulates a value in JSON.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjuliancalendar.xml" xlink:role="class">QJulianCalendar</db:link></db:term>
<db:listitem>
<db:para>The QJulianCalendar class provides Julian calendar system implementation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qkeycombination.xml" xlink:role="class">QKeyCombination</db:link></db:term>
<db:listitem>
<db:para>The QKeyCombination class stores a combination of a key with optional modifiers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qkeyvalueiterator.xml" xlink:role="class">QKeyValueIterator</db:link></db:term>
<db:listitem>
<db:para>Iterator over the key/value pairs of an associative container.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qleinteger.xml" xlink:role="class">QLEInteger</db:link></db:term>
<db:listitem>
<db:para>The QLEInteger class provides platform-independent little-endian integers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlatin1char.xml" xlink:role="class">QLatin1Char</db:link></db:term>
<db:listitem>
<db:para>The QLatin1Char class provides an 8-bit ASCII/Latin-1 character.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlatin1string.xml" xlink:role="class">QLatin1String</db:link></db:term>
<db:listitem>
<db:para>QLatin1String is the same as QLatin1StringView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlatin1stringmatcher.xml" xlink:role="class">QLatin1StringMatcher</db:link></db:term>
<db:listitem>
<db:para>Optimized search for substring in Latin-1 text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlatin1stringview.xml" xlink:role="class">QLatin1StringView</db:link></db:term>
<db:listitem>
<db:para>The QLatin1StringView class provides a thin wrapper around a US-ASCII/Latin-1 encoded string literal.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlibrary.xml" xlink:role="class">QLibrary</db:link></db:term>
<db:listitem>
<db:para>The QLibrary class loads shared libraries at runtime.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlibraryinfo.xml" xlink:role="class">QLibraryInfo</db:link></db:term>
<db:listitem>
<db:para>The QLibraryInfo class provides information about the Qt library.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qline.xml" xlink:role="class">QLine</db:link></db:term>
<db:listitem>
<db:para>The QLine class provides a two-dimensional vector using integer precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlinef.xml" xlink:role="class">QLineF</db:link></db:term>
<db:listitem>
<db:para>The QLineF class provides a two-dimensional vector using floating point precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlist.xml" xlink:role="class">QList</db:link></db:term>
<db:listitem>
<db:para>The QList class is a template class that provides a dynamic array.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlistiterator.xml" xlink:role="class">QListIterator</db:link></db:term>
<db:listitem>
<db:para>The QListIterator class provides a Java-style const iterator for QList and QQueue.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlocale.xml" xlink:role="class">QLocale</db:link></db:term>
<db:listitem>
<db:para>The QLocale class converts between numbers and their string representations in various languages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlocationpermission.xml" xlink:role="class">QLocationPermission</db:link></db:term>
<db:listitem>
<db:para>Access the user's location.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlockfile.xml" xlink:role="class">QLockFile</db:link></db:term>
<db:listitem>
<db:para>The QLockFile class provides locking between processes using a file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qloggingcategory.xml" xlink:role="class">QLoggingCategory</db:link></db:term>
<db:listitem>
<db:para>The QLoggingCategory class represents a category, or 'area' in the logging infrastructure.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmap.xml" xlink:role="class">QMap</db:link></db:term>
<db:listitem>
<db:para>The QMap class is a template class that provides an associative array.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmapiterator.xml" xlink:role="class">QMapIterator</db:link></db:term>
<db:listitem>
<db:para>The QMapIterator class provides a Java-style const iterator for QMap.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmargins.xml" xlink:role="class">QMargins</db:link></db:term>
<db:listitem>
<db:para>The QMargins class defines the four margins of a rectangle.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmarginsf.xml" xlink:role="class">QMarginsF</db:link></db:term>
<db:listitem>
<db:para>The QMarginsF class defines the four margins of a rectangle.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmessageauthenticationcode.xml" xlink:role="class">QMessageAuthenticationCode</db:link></db:term>
<db:listitem>
<db:para>The QMessageAuthenticationCode class provides a way to generate hash-based message authentication codes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmessagelogcontext.xml" xlink:role="class">QMessageLogContext</db:link></db:term>
<db:listitem>
<db:para>The QMessageLogContext class provides additional information about a log message.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmessagelogger.xml" xlink:role="class">QMessageLogger</db:link></db:term>
<db:listitem>
<db:para>The QMessageLogger class generates log messages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetaclassinfo.xml" xlink:role="class">QMetaClassInfo</db:link></db:term>
<db:listitem>
<db:para>The QMetaClassInfo class provides additional information about a class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetaenum.xml" xlink:role="class">QMetaEnum</db:link></db:term>
<db:listitem>
<db:para>The QMetaEnum class provides meta-data about an enumerator.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetamethod.xml" xlink:role="class">QMetaMethod</db:link></db:term>
<db:listitem>
<db:para>The QMetaMethod class provides meta-data about a member function.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetaobject.xml" xlink:role="class">QMetaObject</db:link></db:term>
<db:listitem>
<db:para>The QMetaObject class contains meta-information about Qt objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetaobject-connection.xml" xlink:role="class">QMetaObject::Connection</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetaproperty.xml" xlink:role="class">QMetaProperty</db:link></db:term>
<db:listitem>
<db:para>The QMetaProperty class provides meta-data about a property.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetasequence.xml" xlink:role="class">QMetaSequence</db:link></db:term>
<db:listitem>
<db:para>The QMetaSequence class allows type erased access to sequential containers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetatype.xml" xlink:role="class">QMetaType</db:link></db:term>
<db:listitem>
<db:para>The QMetaType class manages named types in the meta-object system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmicrophonepermission.xml" xlink:role="class">QMicrophonePermission</db:link></db:term>
<db:listitem>
<db:para>Access the microphone for monitoring or recording sound.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmilankoviccalendar.xml" xlink:role="class">QMilankovicCalendar</db:link></db:term>
<db:listitem>
<db:para>The QMilankovicCalendar class provides Milanković calendar system implementation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmimedata.xml" xlink:role="class">QMimeData</db:link></db:term>
<db:listitem>
<db:para>The QMimeData class provides a container for data that records information about its MIME type.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmimedatabase.xml" xlink:role="class">QMimeDatabase</db:link></db:term>
<db:listitem>
<db:para>The QMimeDatabase class maintains a database of MIME types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmimetype.xml" xlink:role="class">QMimeType</db:link></db:term>
<db:listitem>
<db:para>The QMimeType class describes types of file or data, represented by a MIME type string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodelindex.xml" xlink:role="class">QModelIndex</db:link></db:term>
<db:listitem>
<db:para>The QModelIndex class is used to locate data in a data model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodelroledata.xml" xlink:role="class">QModelRoleData</db:link></db:term>
<db:listitem>
<db:para>The QModelRoleData class holds a role and the data associated to that role.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmodelroledataspan.xml" xlink:role="class">QModelRoleDataSpan</db:link></db:term>
<db:listitem>
<db:para>The QModelRoleDataSpan class provides a span over QModelRoleData objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmultihash.xml" xlink:role="class">QMultiHash</db:link></db:term>
<db:listitem>
<db:para>The QMultiHash class is a convenience QHash subclass that provides multi-valued hashes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmultimap.xml" xlink:role="class">QMultiMap</db:link></db:term>
<db:listitem>
<db:para>The QMultiMap class is a template class that provides an associative array with multiple equivalent keys.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmultimap-key-iterator.xml" xlink:role="class">QMultiMap::key_iterator</db:link></db:term>
<db:listitem>
<db:para>The QMultiMap::key_iterator class provides an STL-style const iterator for QMultiMap keys.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmultimapiterator.xml" xlink:role="class">QMultiMapIterator</db:link></db:term>
<db:listitem>
<db:para>The QMultiMapIterator class provides a Java-style const iterator for QMultiMap. QMultiMap has both Java-style iterators and STL-style iterators. STL-style iterators are more efficient and should be preferred.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablehashiterator.xml" xlink:role="class">QMutableHashIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableHashIterator class provides a Java-style non-const iterator for QHash and QMultiHash.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablelistiterator.xml" xlink:role="class">QMutableListIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableListIterator class provides a Java-style non-const iterator for QList, QQueue and QStack.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablemapiterator.xml" xlink:role="class">QMutableMapIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableMapIterator class provides a Java-style non-const iterator for QMap.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablemultimapiterator.xml" xlink:role="class">QMutableMultiMapIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableMultiMapIterator class provides a Java-style non-const iterator for QMultiMap.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablesetiterator.xml" xlink:role="class">QMutableSetIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableSetIterator class provides a Java-style non-const iterator for QSet.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutex.xml" xlink:role="class">QMutex</db:link></db:term>
<db:listitem>
<db:para>The QMutex class provides access serialization between threads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutexlocker.xml" xlink:role="class">QMutexLocker</db:link></db:term>
<db:listitem>
<db:para>The QMutexLocker class is a convenience class that simplifies locking and unlocking mutexes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnativeinterface-qandroidapplication.xml" xlink:role="class">QNativeInterface::QAndroidApplication</db:link></db:term>
<db:listitem>
<db:para>Native interface to a core application on Android.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnativeipckey.xml" xlink:role="class">QNativeIpcKey</db:link></db:term>
<db:listitem>
<db:para>The QNativeIpcKey class holds a native key used by QSystemSemaphore and QSharedMemory.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qntfspermissioncheckguard.xml" xlink:role="class">QNtfsPermissionCheckGuard</db:link></db:term>
<db:listitem>
<db:para>The QNtfsPermissionCheckGuard class is a RAII class to manage NTFS permission checking.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:term>
<db:listitem>
<db:para>The QObject class is the base class of all Qt objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qobjectbindableproperty.xml" xlink:role="class">QObjectBindableProperty</db:link></db:term>
<db:listitem>
<db:para>The QObjectBindableProperty class is a template class that enables automatic property bindings for property data stored in QObject derived classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qobjectcleanuphandler.xml" xlink:role="class">QObjectCleanupHandler</db:link></db:term>
<db:listitem>
<db:para>The QObjectCleanupHandler class watches the lifetime of multiple QObjects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qobjectcomputedproperty.xml" xlink:role="class">QObjectComputedProperty</db:link></db:term>
<db:listitem>
<db:para>The QObjectComputedProperty class is a template class to help port old properties to the bindable property system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qoperatingsystemversion.xml" xlink:role="class">QOperatingSystemVersion</db:link></db:term>
<db:listitem>
<db:para>The QOperatingSystemVersion class provides information about the operating system version.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qparallelanimationgroup.xml" xlink:role="class">QParallelAnimationGroup</db:link></db:term>
<db:listitem>
<db:para>The QParallelAnimationGroup class provides a parallel group of animations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpartialordering.xml" xlink:role="class">QPartialOrdering</db:link></db:term>
<db:listitem>
<db:para>QPartialOrdering represents the result of a comparison that allows for unordered results.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpauseanimation.xml" xlink:role="class">QPauseAnimation</db:link></db:term>
<db:listitem>
<db:para>The QPauseAnimation class provides a pause for QSequentialAnimationGroup.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpermission.xml" xlink:role="class">QPermission</db:link></db:term>
<db:listitem>
<db:para>An opaque wrapper of a typed permission.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpersistentmodelindex.xml" xlink:role="class">QPersistentModelIndex</db:link></db:term>
<db:listitem>
<db:para>The QPersistentModelIndex class is used to locate data in a data model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpluginloader.xml" xlink:role="class">QPluginLoader</db:link></db:term>
<db:listitem>
<db:para>The QPluginLoader class loads a plugin at run-time.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpoint.xml" xlink:role="class">QPoint</db:link></db:term>
<db:listitem>
<db:para>The QPoint class defines a point in the plane using integer precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpointf.xml" xlink:role="class">QPointF</db:link></db:term>
<db:listitem>
<db:para>The QPointF class defines a point in the plane using floating point precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpointer.xml" xlink:role="class">QPointer</db:link></db:term>
<db:listitem>
<db:para>The QPointer class is a template class that provides guarded pointers to QObject.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprocess.xml" xlink:role="class">QProcess</db:link></db:term>
<db:listitem>
<db:para>The QProcess class is used to start external programs and to communicate with them.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprocess-createprocessarguments.xml" xlink:role="class">QProcess::CreateProcessArguments</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprocess-unixprocessparameters.xml" xlink:role="class">QProcess::UnixProcessParameters</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprocessenvironment.xml" xlink:role="class">QProcessEnvironment</db:link></db:term>
<db:listitem>
<db:para>The QProcessEnvironment class holds the environment variables that can be passed to a program.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpromise.xml" xlink:role="class">QPromise</db:link></db:term>
<db:listitem>
<db:para>The QPromise class provides a way to store computation results to be accessed by QFuture.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qproperty.xml" xlink:role="class">QProperty</db:link></db:term>
<db:listitem>
<db:para>The QProperty class is a template class that enables automatic property bindings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpropertyanimation.xml" xlink:role="class">QPropertyAnimation</db:link></db:term>
<db:listitem>
<db:para>The QPropertyAnimation class animates Qt properties.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpropertybindingerror.xml" xlink:role="class">QPropertyBindingError</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpropertychangehandler.xml" xlink:role="class">QPropertyChangeHandler</db:link></db:term>
<db:listitem>
<db:para>The QPropertyChangeHandler class controls the lifecycle of change callback installed on a QProperty.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpropertydata.xml" xlink:role="class">QPropertyData</db:link></db:term>
<db:listitem>
<db:para>The QPropertyData class is a helper class for properties with automatic property bindings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpropertynotifier.xml" xlink:role="class">QPropertyNotifier</db:link></db:term>
<db:listitem>
<db:para>The QPropertyNotifier class controls the lifecycle of change callback installed on a QProperty.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqueue.xml" xlink:role="class">QQueue</db:link></db:term>
<db:listitem>
<db:para>The QQueue class is a generic container that provides a queue.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrandomgenerator.xml" xlink:role="class">QRandomGenerator</db:link></db:term>
<db:listitem>
<db:para>The QRandomGenerator class allows one to obtain random values from a high-quality Random Number Generator.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrandomgenerator64.xml" xlink:role="class">QRandomGenerator64</db:link></db:term>
<db:listitem>
<db:para>The QRandomGenerator64 class allows one to obtain 64-bit random values from a high-quality, seed-less Random Number Generator.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qreadlocker.xml" xlink:role="class">QReadLocker</db:link></db:term>
<db:listitem>
<db:para>The QReadLocker class is a convenience class that simplifies locking and unlocking read-write locks for read access.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qreadwritelock.xml" xlink:role="class">QReadWriteLock</db:link></db:term>
<db:listitem>
<db:para>The QReadWriteLock class provides read-write locking.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrect.xml" xlink:role="class">QRect</db:link></db:term>
<db:listitem>
<db:para>The QRect class defines a rectangle in the plane using integer precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrectf.xml" xlink:role="class">QRectF</db:link></db:term>
<db:listitem>
<db:para>The QRectF class defines a finite rectangle in the plane using floating point precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrecursivemutex.xml" xlink:role="class">QRecursiveMutex</db:link></db:term>
<db:listitem>
<db:para>The QRecursiveMutex class provides access serialization between threads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qregularexpression.xml" xlink:role="class">QRegularExpression</db:link></db:term>
<db:listitem>
<db:para>The QRegularExpression class provides pattern matching using regular expressions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qregularexpressionmatch.xml" xlink:role="class">QRegularExpressionMatch</db:link></db:term>
<db:listitem>
<db:para>The QRegularExpressionMatch class provides the results of a matching a QRegularExpression against a string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qregularexpressionmatchiterator.xml" xlink:role="class">QRegularExpressionMatchIterator</db:link></db:term>
<db:listitem>
<db:para>The QRegularExpressionMatchIterator class provides an iterator on the results of a global match of a QRegularExpression object against a string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qresource.xml" xlink:role="class">QResource</db:link></db:term>
<db:listitem>
<db:para>The QResource class provides an interface for reading directly from resources.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qromancalendar.xml" xlink:role="class">QRomanCalendar</db:link></db:term>
<db:listitem>
<db:para>The QRomanCalendar class is a shared base for calendars based on the ancient Roman calendar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrunnable.xml" xlink:role="class">QRunnable</db:link></db:term>
<db:listitem>
<db:para>The QRunnable class is the base class for all runnable objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsavefile.xml" xlink:role="class">QSaveFile</db:link></db:term>
<db:listitem>
<db:para>The QSaveFile class provides an interface for safely writing to files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscopeguard.xml" xlink:role="class">QScopeGuard</db:link></db:term>
<db:listitem>
<db:para>Provides a scope guard for calling a function at the end of a scope.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscopedarraypointer.xml" xlink:role="class">QScopedArrayPointer</db:link></db:term>
<db:listitem>
<db:para>The QScopedArrayPointer class stores a pointer to a dynamically allocated array of objects, and deletes it upon destruction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscopedpointer.xml" xlink:role="class">QScopedPointer</db:link></db:term>
<db:listitem>
<db:para>The QScopedPointer class stores a pointer to a dynamically allocated object, and deletes it upon destruction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscopedpropertyupdategroup.xml" xlink:role="class">QScopedPropertyUpdateGroup</db:link></db:term>
<db:listitem>
<db:para>RAII class around Qt::beginPropertyUpdateGroup()/Qt::endPropertyUpdateGroup().</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscopedvaluerollback.xml" xlink:role="class">QScopedValueRollback</db:link></db:term>
<db:listitem>
<db:para>The QScopedValueRollback class resets a variable to its previous value on destruction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsemaphore.xml" xlink:role="class">QSemaphore</db:link></db:term>
<db:listitem>
<db:para>The QSemaphore class provides a general counting semaphore.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsemaphorereleaser.xml" xlink:role="class">QSemaphoreReleaser</db:link></db:term>
<db:listitem>
<db:para>The QSemaphoreReleaser class provides exception-safe deferral of a QSemaphore::release() call.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsequentialanimationgroup.xml" xlink:role="class">QSequentialAnimationGroup</db:link></db:term>
<db:listitem>
<db:para>The QSequentialAnimationGroup class provides a sequential group of animations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsequentialiterable.xml" xlink:role="class">QSequentialIterable</db:link></db:term>
<db:listitem>
<db:para>The QSequentialIterable class is an iterable interface for a container in a QVariant.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qset.xml" xlink:role="class">QSet</db:link></db:term>
<db:listitem>
<db:para>The QSet class is a template class that provides a hash-table-based set.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qset-const-iterator.xml" xlink:role="class">QSet::const_iterator</db:link></db:term>
<db:listitem>
<db:para>The QSet::const_iterator class provides an STL-style const iterator for QSet.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qset-iterator.xml" xlink:role="class">QSet::iterator</db:link></db:term>
<db:listitem>
<db:para>The QSet::iterator class provides an STL-style non-const iterator for QSet.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsetiterator.xml" xlink:role="class">QSetIterator</db:link></db:term>
<db:listitem>
<db:para>The QSetIterator class provides a Java-style const iterator for QSet.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsettings.xml" xlink:role="class">QSettings</db:link></db:term>
<db:listitem>
<db:para>The QSettings class provides persistent platform-independent application settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qshareddata.xml" xlink:role="class">QSharedData</db:link></db:term>
<db:listitem>
<db:para>The QSharedData class is a base class for shared data objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qshareddatapointer.xml" xlink:role="class">QSharedDataPointer</db:link></db:term>
<db:listitem>
<db:para>The QSharedDataPointer class represents a pointer to an implicitly shared object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsharedmemory.xml" xlink:role="class">QSharedMemory</db:link></db:term>
<db:listitem>
<db:para>The QSharedMemory class provides access to a shared memory segment.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsharedpointer.xml" xlink:role="class">QSharedPointer</db:link></db:term>
<db:listitem>
<db:para>The QSharedPointer class holds a strong reference to a shared pointer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsignalblocker.xml" xlink:role="class">QSignalBlocker</db:link></db:term>
<db:listitem>
<db:para>Exception-safe wrapper around QObject::blockSignals().</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsignalmapper.xml" xlink:role="class">QSignalMapper</db:link></db:term>
<db:listitem>
<db:para>The QSignalMapper class bundles signals from identifiable senders.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsize.xml" xlink:role="class">QSize</db:link></db:term>
<db:listitem>
<db:para>The QSize class defines the size of a two-dimensional object using integer point precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsizef.xml" xlink:role="class">QSizeF</db:link></db:term>
<db:listitem>
<db:para>The QSizeF class defines the size of a two-dimensional object using floating point precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsocketnotifier.xml" xlink:role="class">QSocketNotifier</db:link></db:term>
<db:listitem>
<db:para>The QSocketNotifier class provides support for monitoring activity on a file descriptor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsortfilterproxymodel.xml" xlink:role="class">QSortFilterProxyModel</db:link></db:term>
<db:listitem>
<db:para>The QSortFilterProxyModel class provides support for sorting and filtering data passed between another model and a view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qspan.xml" xlink:role="class">QSpan</db:link></db:term>
<db:listitem>
<db:para>A non-owning container over contiguous data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstack.xml" xlink:role="class">QStack</db:link></db:term>
<db:listitem>
<db:para>The QStack class is a template class that provides a stack.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstandardpaths.xml" xlink:role="class">QStandardPaths</db:link></db:term>
<db:listitem>
<db:para>The QStandardPaths class provides methods for accessing standard paths.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstaticbytearraymatcher.xml" xlink:role="class">QStaticByteArrayMatcher</db:link></db:term>
<db:listitem>
<db:para>The QStaticByteArrayMatcher class is a compile-time version of QByteArrayMatcher.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstaticlatin1stringmatcher.xml" xlink:role="class">QStaticLatin1StringMatcher</db:link></db:term>
<db:listitem>
<db:para>The QStaticLatin1StringMatcher class is a compile-time version of QLatin1StringMatcher.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstaticplugin.xml" xlink:role="class">QStaticPlugin</db:link></db:term>
<db:listitem>
<db:para>QStaticPlugin is a struct containing a reference to a static plugin instance together with its meta data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstorageinfo.xml" xlink:role="class">QStorageInfo</db:link></db:term>
<db:listitem>
<db:para>Provides information about currently mounted storage and drives.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstring.xml" xlink:role="class">QString</db:link></db:term>
<db:listitem>
<db:para>The QString class provides a Unicode character string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringconverter.xml" xlink:role="class">QStringConverter</db:link></db:term>
<db:listitem>
<db:para>The QStringConverter class provides a base class for encoding and decoding text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringdecoder.xml" xlink:role="class">QStringDecoder</db:link></db:term>
<db:listitem>
<db:para>The QStringDecoder class provides a state-based decoder for text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringencoder.xml" xlink:role="class">QStringEncoder</db:link></db:term>
<db:listitem>
<db:para>The QStringEncoder class provides a state-based encoder for text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringlist.xml" xlink:role="class">QStringList</db:link></db:term>
<db:listitem>
<db:para>The QStringList class provides a list of strings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringlistmodel.xml" xlink:role="class">QStringListModel</db:link></db:term>
<db:listitem>
<db:para>The QStringListModel class provides a model that supplies strings to views.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringmatcher.xml" xlink:role="class">QStringMatcher</db:link></db:term>
<db:listitem>
<db:para>The QStringMatcher class holds a sequence of characters that can be quickly matched in a Unicode string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringtokenizer.xml" xlink:role="class">QStringTokenizer</db:link></db:term>
<db:listitem>
<db:para>The QStringTokenizer class splits strings into tokens along given separators.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringview.xml" xlink:role="class">QStringView</db:link></db:term>
<db:listitem>
<db:para>The QStringView class provides a unified view on UTF-16 strings with a read-only subset of the QString API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsysinfo.xml" xlink:role="class">QSysInfo</db:link></db:term>
<db:listitem>
<db:para>The QSysInfo class provides information about the system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsystemsemaphore.xml" xlink:role="class">QSystemSemaphore</db:link></db:term>
<db:listitem>
<db:para>The QSystemSemaphore class provides a general counting system semaphore.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtaggediterator.xml" xlink:role="class">QTaggedIterator</db:link></db:term>
<db:listitem>
<db:para>QTaggedIterator is a template class that wraps an iterator and exposes standard iterator traits.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtemporarydir.xml" xlink:role="class">QTemporaryDir</db:link></db:term>
<db:listitem>
<db:para>The QTemporaryDir class creates a unique directory for temporary use.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtemporaryfile.xml" xlink:role="class">QTemporaryFile</db:link></db:term>
<db:listitem>
<db:para>The QTemporaryFile class is an I/O device that operates on temporary files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextboundaryfinder.xml" xlink:role="class">QTextBoundaryFinder</db:link></db:term>
<db:listitem>
<db:para>The QTextBoundaryFinder class provides a way of finding Unicode text boundaries in a string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextstream.xml" xlink:role="class">QTextStream</db:link></db:term>
<db:listitem>
<db:para>The QTextStream class provides a convenient interface for reading and writing text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qthread.xml" xlink:role="class">QThread</db:link></db:term>
<db:listitem>
<db:para>The QThread class provides a platform-independent way to manage threads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qthreadpool.xml" xlink:role="class">QThreadPool</db:link></db:term>
<db:listitem>
<db:para>The QThreadPool class manages a collection of QThreads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qthreadstorage.xml" xlink:role="class">QThreadStorage</db:link></db:term>
<db:listitem>
<db:para>The QThreadStorage class provides per-thread data storage.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtime.xml" xlink:role="class">QTime</db:link></db:term>
<db:listitem>
<db:para>The QTime class provides clock time functions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimeline.xml" xlink:role="class">QTimeLine</db:link></db:term>
<db:listitem>
<db:para>The QTimeLine class provides a timeline for controlling animations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimezone.xml" xlink:role="class">QTimeZone</db:link></db:term>
<db:listitem>
<db:para>QTimeZone identifies how a time representation relates to UTC.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimezone-offsetdata.xml" xlink:role="class">QTimeZone::OffsetData</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimer.xml" xlink:role="class">QTimer</db:link></db:term>
<db:listitem>
<db:para>The QTimer class provides repetitive and single-shot timers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimerevent.xml" xlink:role="class">QTimerEvent</db:link></db:term>
<db:listitem>
<db:para>The QTimerEvent class contains parameters that describe a timer event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtranslator.xml" xlink:role="class">QTranslator</db:link></db:term>
<db:listitem>
<db:para>The QTranslator class provides internationalization support for text output.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtransposeproxymodel.xml" xlink:role="class">QTransposeProxyModel</db:link></db:term>
<db:listitem>
<db:para>This proxy transposes the source model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtyperevision.xml" xlink:role="class">QTypeRevision</db:link></db:term>
<db:listitem>
<db:para>The QTypeRevision class contains a lightweight representation of a version number with two 8-bit segments, major and minor, either of which can be unknown.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qunhandledexception.xml" xlink:role="class">QUnhandledException</db:link></db:term>
<db:listitem>
<db:para>The QUnhandledException class represents an unhandled exception in a Qt Concurrent worker thread.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="quntypedbindable.xml" xlink:role="class">QUntypedBindable</db:link></db:term>
<db:listitem>
<db:para>QUntypedBindable is a uniform interface over bindable properties like &lt;@type&gt;QProperty&lt;/@type&gt;\&lt;@op&gt;&amp;lt;&lt;/@op&gt;T\&lt;@op&gt;&amp;gt;&lt;/@op&gt; and &lt;@type&gt;QObjectBindableProperty&lt;/@type&gt; of any type T.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qurl.xml" xlink:role="class">QUrl</db:link></db:term>
<db:listitem>
<db:para>The QUrl class provides a convenient interface for working with URLs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qurlquery.xml" xlink:role="class">QUrlQuery</db:link></db:term>
<db:listitem>
<db:para>The QUrlQuery class provides a way to manipulate a key-value pairs in a URL's query.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qutf8stringview.xml" xlink:role="class">QUtf8StringView</db:link></db:term>
<db:listitem>
<db:para>The QUtf8StringView class provides a unified view on UTF-8 strings with a read-only subset of the QString API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="quuid.xml" xlink:role="class">QUuid</db:link></db:term>
<db:listitem>
<db:para>The QUuid class stores a Universally Unique Identifier (UUID).</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="quuid-id128bytes.xml" xlink:role="class">QUuid::Id128Bytes</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvarlengtharray.xml" xlink:role="class">QVarLengthArray</db:link></db:term>
<db:listitem>
<db:para>The QVarLengthArray class provides a low-level variable-length array.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvariant.xml" xlink:role="class">QVariant</db:link></db:term>
<db:listitem>
<db:para>The QVariant class acts like a union for the most common Qt data types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvariantanimation.xml" xlink:role="class">QVariantAnimation</db:link></db:term>
<db:listitem>
<db:para>The QVariantAnimation class provides a base class for animations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvariantconstpointer.xml" xlink:role="class">QVariantConstPointer</db:link></db:term>
<db:listitem>
<db:para>Emulated const pointer to QVariant based on a pointer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvariantpointer.xml" xlink:role="class">QVariantPointer</db:link></db:term>
<db:listitem>
<db:para>QVariantPointer is a template class that emulates a pointer to QVariant based on a pointer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvariantref.xml" xlink:role="class">QVariantRef</db:link></db:term>
<db:listitem>
<db:para>The QVariantRef acts as a non-const reference to a QVariant.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvector.xml" xlink:role="class">QVector</db:link></db:term>
<db:listitem>
<db:para>QVector is an alias for QList.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qversionnumber.xml" xlink:role="class">QVersionNumber</db:link></db:term>
<db:listitem>
<db:para>The QVersionNumber class contains a version number with an arbitrary number of segments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwaitcondition.xml" xlink:role="class">QWaitCondition</db:link></db:term>
<db:listitem>
<db:para>The QWaitCondition class provides a condition variable for synchronizing threads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qweakpointer.xml" xlink:role="class">QWeakPointer</db:link></db:term>
<db:listitem>
<db:para>The QWeakPointer class holds a weak reference to a shared pointer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwineventnotifier.xml" xlink:role="class">QWinEventNotifier</db:link></db:term>
<db:listitem>
<db:para>The QWinEventNotifier class provides support for the Windows Wait functions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwritelocker.xml" xlink:role="class">QWriteLocker</db:link></db:term>
<db:listitem>
<db:para>The QWriteLocker class is a convenience class that simplifies locking and unlocking read-write locks for write access.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamattribute.xml" xlink:role="class">QXmlStreamAttribute</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamAttribute class represents a single XML attribute.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamattributes.xml" xlink:role="class">QXmlStreamAttributes</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamAttributes class represents a vector of QXmlStreamAttribute.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamentitydeclaration.xml" xlink:role="class">QXmlStreamEntityDeclaration</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamEntityDeclaration class represents a DTD entity declaration.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamentityresolver.xml" xlink:role="class">QXmlStreamEntityResolver</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamEntityResolver class provides an entity resolver for a QXmlStreamReader.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamnamespacedeclaration.xml" xlink:role="class">QXmlStreamNamespaceDeclaration</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamNamespaceDeclaration class represents a namespace declaration.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamnotationdeclaration.xml" xlink:role="class">QXmlStreamNotationDeclaration</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamNotationDeclaration class represents a DTD notation declaration.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamreader.xml" xlink:role="class">QXmlStreamReader</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamReader class provides a fast parser for reading well-formed XML via a simple streaming API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlstreamwriter.xml" xlink:role="class">QXmlStreamWriter</db:link></db:term>
<db:listitem>
<db:para>The QXmlStreamWriter class provides an XML writer with a simple streaming API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt-partial-ordering.xml" xlink:role="class">Qt::partial_ordering</db:link></db:term>
<db:listitem>
<db:para>Qt::partial_ordering represents the result of a comparison that allows for unordered results.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt-strong-ordering.xml" xlink:role="class">Qt::strong_ordering</db:link></db:term>
<db:listitem>
<db:para>Qt::strong_ordering represents a comparison where equivalent values are indistinguishable.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt-weak-ordering.xml" xlink:role="class">Qt::weak_ordering</db:link></db:term>
<db:listitem>
<db:para>Qt::weak_ordering represents a comparison where equivalent values are still distinguishable.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtfuture-whenanyresult.xml" xlink:role="class">QtFuture::WhenAnyResult</db:link></db:term>
<db:listitem>
<db:para>QtFuture::WhenAnyResult is used to represent the result of QtFuture::whenAny().</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfloat16.xml" xlink:role="class">qfloat16</db:link></db:term>
<db:listitem>
<db:para>Provides 16-bit floating point support.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>All other Qt modules rely on this module.</db:para>
<db:para>The <db:link xlink:href="qtcore-index.xml">Qt Core</db:link> page contains information about how to use the module.</db:para>
</db:section>
</db:article>
