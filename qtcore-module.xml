<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Core C++ Classes</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.13.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides core non-GUI functionality.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Provides core non-GUI functionality.</db:para>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="qatomicint.xml" xlink:role="class">QAtomicInt</db:link></db:term>
<db:listitem>
<db:para>The QAtomicInt class provides platform-independent atomic operations on int.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qatomicpointer.xml" xlink:role="class">QAtomicPointer</db:link></db:term>
<db:listitem>
<db:para>The QAtomicPointer class is a template class that provides platform-independent atomic operations on pointers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbeinteger.xml" xlink:role="class">QBEInteger</db:link></db:term>
<db:listitem>
<db:para>The QBEInteger class provides platform-independent big-endian integers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearraylist.xml" xlink:role="class">QByteArrayList</db:link></db:term>
<db:listitem>
<db:para>The QByteArrayList class provides a list of byte arrays.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcborparsererror.xml" xlink:role="class">QCborParserError</db:link></db:term>
<db:listitem>
<db:para>The QCborParserError is used by QCborValue to report a parsing error.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcontiguouscache.xml" xlink:role="class">QContiguousCache</db:link></db:term>
<db:listitem>
<db:para>The QContiguousCache class is a template class that provides a contiguous cache.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qelapsedtimer.xml" xlink:role="class">QElapsedTimer</db:link></db:term>
<db:listitem>
<db:para>The QElapsedTimer class provides a fast way to calculate elapsed times.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qenablesharedfromthis.xml" xlink:role="class">QEnableSharedFromThis</db:link></db:term>
<db:listitem>
<db:para>A base class that allows obtaining a QSharedPointer for an object already managed by a shared pointer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qexplicitlyshareddatapointer.xml" xlink:role="class">QExplicitlySharedDataPointer</db:link></db:term>
<db:listitem>
<db:para>The QExplicitlySharedDataPointer class represents a pointer to an explicitly shared object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qflag.xml" xlink:role="class">QFlag</db:link></db:term>
<db:listitem>
<db:para>The QFlag class is a helper data type for QFlags.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfuture.xml" xlink:role="class">QFuture</db:link></db:term>
<db:listitem>
<db:para>The QFuture class represents the result of an asynchronous computation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfuturesynchronizer.xml" xlink:role="class">QFutureSynchronizer</db:link></db:term>
<db:listitem>
<db:para>The QFutureSynchronizer class is a convenience class that simplifies QFuture synchronization.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfuturewatcher.xml" xlink:role="class">QFutureWatcher</db:link></db:term>
<db:listitem>
<db:para>The QFutureWatcher class allows monitoring a QFuture using signals and slots.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgenericargument.xml" xlink:role="class">QGenericArgument</db:link></db:term>
<db:listitem>
<db:para>The QGenericArgument class is an internal helper class for marshalling arguments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgenericreturnargument.xml" xlink:role="class">QGenericReturnArgument</db:link></db:term>
<db:listitem>
<db:para>The QGenericReturnArgument class is an internal helper class for marshalling arguments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qglobalstatic.xml" xlink:role="class">QGlobalStatic</db:link></db:term>
<db:listitem>
<db:para>The QGlobalStatic class is used to implement a global static object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhash.xml" xlink:role="class">QHash</db:link></db:term>
<db:listitem>
<db:para>The QHash class is a template class that provides a hash-table-based dictionary.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhashiterator.xml" xlink:role="class">QHashIterator</db:link></db:term>
<db:listitem>
<db:para>The QHashIterator class provides a Java-style const iterator for QHash and QMultiHash.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qkeyvalueiterator.xml" xlink:role="class">QKeyValueIterator</db:link></db:term>
<db:listitem>
<db:para>Iterator over the key/value pairs of an associative container.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qleinteger.xml" xlink:role="class">QLEInteger</db:link></db:term>
<db:listitem>
<db:para>The QLEInteger class provides platform-independent little-endian integers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlatin1char.xml" xlink:role="class">QLatin1Char</db:link></db:term>
<db:listitem>
<db:para>The QLatin1Char class provides an 8-bit ASCII/Latin-1 character.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlatin1string.xml" xlink:role="class">QLatin1String</db:link></db:term>
<db:listitem>
<db:para>The QLatin1String class provides a thin wrapper around an US-ASCII/Latin-1 encoded string literal.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlinkedlist.xml" xlink:role="class">QLinkedList</db:link></db:term>
<db:listitem>
<db:para>The QLinkedList class is a template class that provides linked lists.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlist.xml" xlink:role="class">QList</db:link></db:term>
<db:listitem>
<db:para>The QList class is a template class that provides lists.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmap.xml" xlink:role="class">QMap</db:link></db:term>
<db:listitem>
<db:para>The QMap class is a template class that provides a red-black-tree-based dictionary.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmap-key-iterator.xml" xlink:role="class">QMap::key_iterator</db:link></db:term>
<db:listitem>
<db:para>The QMap::key_iterator class provides an STL-style const iterator for QMap and QMultiMap keys.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmarginsf.xml" xlink:role="class">QMarginsF</db:link></db:term>
<db:listitem>
<db:para>The QMarginsF class defines the four margins of a rectangle.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmessagelogcontext.xml" xlink:role="class">QMessageLogContext</db:link></db:term>
<db:listitem>
<db:para>The QMessageLogContext class provides additional information about a log message.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetaobject.xml" xlink:role="class">QMetaObject</db:link></db:term>
<db:listitem>
<db:para>The QMetaObject class contains meta-information about Qt objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetaobject-connection.xml" xlink:role="class">QMetaObject::Connection</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmetatype.xml" xlink:role="class">QMetaType</db:link></db:term>
<db:listitem>
<db:para>The QMetaType class manages named types in the meta-object system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablehashiterator.xml" xlink:role="class">QMutableHashIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableHashIterator class provides a Java-style non-const iterator for QHash and QMultiHash.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablemapiterator.xml" xlink:role="class">QMutableMapIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableMapIterator class provides a Java-style non-const iterator for QMap and QMultiMap.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutablesetiterator.xml" xlink:role="class">QMutableSetIterator</db:link></db:term>
<db:listitem>
<db:para>The QMutableSetIterator class provides a Java-style non-const iterator for QSet.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutex.xml" xlink:role="class">QMutex</db:link></db:term>
<db:listitem>
<db:para>The QMutex class provides access serialization between threads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmutexlocker.xml" xlink:role="class">QMutexLocker</db:link></db:term>
<db:listitem>
<db:para>The QMutexLocker class is a convenience class that simplifies locking and unlocking mutexes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpair.xml" xlink:role="class">QPair</db:link></db:term>
<db:listitem>
<db:para>The QPair class is a template class that stores a pair of items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpointer.xml" xlink:role="class">QPointer</db:link></db:term>
<db:listitem>
<db:para>The QPointer class is a template class that provides guarded pointers to QObject.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqueue.xml" xlink:role="class">QQueue</db:link></db:term>
<db:listitem>
<db:para>The QQueue class is a generic container that provides a queue.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrandomgenerator.xml" xlink:role="class">QRandomGenerator</db:link></db:term>
<db:listitem>
<db:para>The QRandomGenerator class allows one to obtain random values from a high-quality Random Number Generator.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrandomgenerator64.xml" xlink:role="class">QRandomGenerator64</db:link></db:term>
<db:listitem>
<db:para>The QRandomGenerator64 class allows one to obtain 64-bit random values from a high-quality, seed-less Random Number Generator.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrect.xml" xlink:role="class">QRect</db:link></db:term>
<db:listitem>
<db:para>The QRect class defines a rectangle in the plane using integer precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrectf.xml" xlink:role="class">QRectF</db:link></db:term>
<db:listitem>
<db:para>The QRectF class defines a rectangle in the plane using floating point precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscopeguard.xml" xlink:role="class">QScopeGuard</db:link></db:term>
<db:listitem>
<db:para>Provides a scope guard for calling a function at the end of a scope.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscopedpointer.xml" xlink:role="class">QScopedPointer</db:link></db:term>
<db:listitem>
<db:para>The QScopedPointer class stores a pointer to a dynamically allocated object, and deletes it upon destruction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscopedvaluerollback.xml" xlink:role="class">QScopedValueRollback</db:link></db:term>
<db:listitem>
<db:para>The QScopedValueRollback class resets a variable to its previous value on destruction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsemaphorereleaser.xml" xlink:role="class">QSemaphoreReleaser</db:link></db:term>
<db:listitem>
<db:para>The QSemaphoreReleaser class provides exception-safe deferral of a QSemaphore::release() call.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qset.xml" xlink:role="class">QSet</db:link></db:term>
<db:listitem>
<db:para>The QSet class is a template class that provides a hash-table-based set.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qset-const-iterator.xml" xlink:role="class">QSet::const_iterator</db:link></db:term>
<db:listitem>
<db:para>The QSet::const_iterator class provides an STL-style const iterator for QSet.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qset-iterator.xml" xlink:role="class">QSet::iterator</db:link></db:term>
<db:listitem>
<db:para>The QSet::iterator class provides an STL-style non-const iterator for QSet.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsetiterator.xml" xlink:role="class">QSetIterator</db:link></db:term>
<db:listitem>
<db:para>The QSetIterator class provides a Java-style const iterator for QSet.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qshareddatapointer.xml" xlink:role="class">QSharedDataPointer</db:link></db:term>
<db:listitem>
<db:para>The QSharedDataPointer class represents a pointer to an implicitly shared object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsharedpointer.xml" xlink:role="class">QSharedPointer</db:link></db:term>
<db:listitem>
<db:para>The QSharedPointer class holds a strong reference to a shared pointer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsignalblocker.xml" xlink:role="class">QSignalBlocker</db:link></db:term>
<db:listitem>
<db:para>Exception-safe wrapper around QObject::blockSignals().</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstack.xml" xlink:role="class">QStack</db:link></db:term>
<db:listitem>
<db:para>The QStack class is a template class that provides a stack.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstaticbytearraymatcher.xml" xlink:role="class">QStaticByteArrayMatcher</db:link></db:term>
<db:listitem>
<db:para>The QStaticByteArrayMatcher class is a compile-time version of QByteArrayMatcher.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringlist.xml" xlink:role="class">QStringList</db:link></db:term>
<db:listitem>
<db:para>The QStringList class provides a list of strings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringview.xml" xlink:role="class">QStringView</db:link></db:term>
<db:listitem>
<db:para>The QStringView class provides a unified view on UTF-16 strings with a read-only subset of the QString API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextcodec.xml" xlink:role="class">QTextCodec</db:link></db:term>
<db:listitem>
<db:para>The QTextCodec class provides conversions between text encodings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextdecoder.xml" xlink:role="class">QTextDecoder</db:link></db:term>
<db:listitem>
<db:para>The QTextDecoder class provides a state-based decoder.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextencoder.xml" xlink:role="class">QTextEncoder</db:link></db:term>
<db:listitem>
<db:para>The QTextEncoder class provides a state-based encoder.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qthread.xml" xlink:role="class">QThread</db:link></db:term>
<db:listitem>
<db:para>The QThread class provides a platform-independent way to manage threads.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qthreadstorage.xml" xlink:role="class">QThreadStorage</db:link></db:term>
<db:listitem>
<db:para>The QThreadStorage class provides per-thread data storage.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvarlengtharray.xml" xlink:role="class">QVarLengthArray</db:link></db:term>
<db:listitem>
<db:para>The QVarLengthArray class provides a low-level variable-length array.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvector.xml" xlink:role="class">QVector</db:link></db:term>
<db:listitem>
<db:para>The QVector class is a template class that provides a dynamic array.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qversionnumber.xml" xlink:role="class">QVersionNumber</db:link></db:term>
<db:listitem>
<db:para>The QVersionNumber class contains a version number with an arbitrary number of segments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qweakpointer.xml" xlink:role="class">QWeakPointer</db:link></db:term>
<db:listitem>
<db:para>The QWeakPointer class holds a weak reference to a shared pointer.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>All other Qt modules rely on this module.</db:para>
</db:section>
</db:article>
