<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QStyleOptionSlider Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link> class is used to describe the parameters needed for drawing a slider.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QStyleOptionSlider</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qstyleoptioncomplex.xml" xlink:role="class">QStyleOptionComplex</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link> contains all the information that <db:link xlink:href="qstyle.xml">QStyle</db:link> functions need to draw <db:link xlink:href="qslider.xml">QSlider</db:link> and <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link>.</db:para>
<db:para>For performance reasons, the access to the member variables is direct (i.e., using the <db:code>.</db:code> or <db:code>-&gt;</db:code> operator). This low-level feel makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</db:para>
<db:para>For an example demonstrating how style options can be used, see the <db:link xlink:href="qtwidgets-widgets-styles-example.xml">Styles</db:link> example.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptioncomplex.xml">QStyleOptionComplex</db:link></db:member>
<db:member><db:link xlink:href="qslider.xml">QSlider</db:link></db:member>
<db:member><db:link xlink:href="qscrollbar.xml">QScrollBar</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="StyleOptionType-enum">
<db:title>enum QStyleOptionSlider::StyleOptionType</db:title>
<db:enumsynopsis>
<db:enumname>StyleOptionType</db:enumname>
<db:enumitem>
<db:enumidentifier>Type</db:enumidentifier>
<db:enumvalue>SO_Slider</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum is used to hold information about the type of the style option, and is defined for each <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link></db:emphasis>::Type</db:code></db:para>
</db:td>
<db:td><db:code>SO_Slider</db:code></db:td>
<db:td>
<db:para>The type of style option provided (<db:link xlink:href="qstyleoption.xml#OptionType-enum">SO_Slider</db:link> for this class).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The type is used internally by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link>, its subclasses, and <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>() to determine the type of style option. In general you do not need to worry about this unless you want to create your own <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass and your own styles.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionslider.xml#StyleOptionVersion-enum">StyleOptionVersion</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="StyleOptionVersion-enum">
<db:title>enum QStyleOptionSlider::StyleOptionVersion</db:title>
<db:enumsynopsis>
<db:enumname>StyleOptionVersion</db:enumname>
<db:enumitem>
<db:enumidentifier>Version</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum is used to hold information about the version of the style option, and is defined for each <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link></db:emphasis>::Version</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>1</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The version is used by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclasses to implement extensions without breaking compatibility. If you use <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>(), you normally do not need to check it.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionslider.xml#StyleOptionType-enum">StyleOptionType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QStyleOptionSlider">
<db:title>QStyleOptionSlider::QStyleOptionSlider()</db:title>
<db:constructorsynopsis>
<db:methodname>QStyleOptionSlider</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QStyleOptionSlider()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link>, initializing the members variables to their default values.</db:para>
</db:section>
<db:section xml:id="QStyleOptionSlider-1">
<db:title>QStyleOptionSlider::QStyleOptionSlider(const QStyleOptionSlider &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QStyleOptionSlider</db:methodname>
<db:methodparam>
<db:type>const QStyleOptionSlider &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QStyleOptionSlider(const QStyleOptionSlider &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a copy of the <db:code role="parameter">other</db:code> style option.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-variable-documentation">
<db:title>Member Variable Documentation</db:title>
<db:section xml:id="dialWrapping-var">
<db:title>bool QStyleOptionSlider::dialWrapping</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>dialWrapping</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds whether the dial should wrap or not</db:para>
<db:para>The default value is false, i.e. the dial is not wrapped.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdial.xml#wrapping-prop">QDial::wrapping</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="maximum-var">
<db:title>int QStyleOptionSlider::maximum</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>maximum</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the maximum value for the slider</db:para>
<db:para>The default value is 0.</db:para>
</db:section>
<db:section xml:id="minimum-var">
<db:title>int QStyleOptionSlider::minimum</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>minimum</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the minimum value for the slider</db:para>
<db:para>The default value is 0.</db:para>
</db:section>
<db:section xml:id="notchTarget-var">
<db:title>qreal QStyleOptionSlider::notchTarget</db:title>
<db:fieldsynopsis>
<db:type>qreal</db:type>
<db:varname>notchTarget</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the number of pixel between notches</db:para>
<db:para>The default value is 0.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdial.xml#notchTarget-prop">QDial::notchTarget</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="orientation-var">
<db:title>Qt::Orientation QStyleOptionSlider::orientation</db:title>
<db:fieldsynopsis>
<db:type>Qt::Orientation</db:type>
<db:varname>orientation</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the slider's orientation (horizontal or vertical)</db:para>
<db:para>The default orientation is <db:link xlink:href="qt.xml#Orientation-enum">Qt::Horizontal</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt.xml#Orientation-enum">Qt::Orientation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pageStep-var">
<db:title>int QStyleOptionSlider::pageStep</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>pageStep</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the size of the page step of the slider</db:para>
<db:para>The default value is 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractslider.xml#pageStep-prop">QAbstractSlider::pageStep</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="singleStep-var">
<db:title>int QStyleOptionSlider::singleStep</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>singleStep</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the size of the single step of the slider</db:para>
<db:para>The default value is 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractslider.xml#singleStep-prop">QAbstractSlider::singleStep</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sliderPosition-var">
<db:title>int QStyleOptionSlider::sliderPosition</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>sliderPosition</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the position of the slider handle</db:para>
<db:para>If the slider has active feedback (i.e., <db:link xlink:href="qabstractslider.xml#tracking-prop">QAbstractSlider::tracking</db:link> is true), this value will be the same as <db:link xlink:href="qstyleoptionslider.xml#sliderValue-var">sliderValue</db:link>. Otherwise, it will have the current position of the handle. The default value is 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractslider.xml#tracking-prop">QAbstractSlider::tracking</db:link></db:member>
<db:member><db:link xlink:href="qstyleoptionslider.xml#sliderValue-var">sliderValue</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sliderValue-var">
<db:title>int QStyleOptionSlider::sliderValue</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>sliderValue</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the value of the slider</db:para>
<db:para>If the slider has active feedback (i.e., <db:link xlink:href="qabstractslider.xml#tracking-prop">QAbstractSlider::tracking</db:link> is true), this value will be the same as <db:link xlink:href="qstyleoptionslider.xml#sliderPosition-var">sliderPosition</db:link>. Otherwise, it will have the value the slider had before the mouse was pressed.</db:para>
<db:para>The default value is 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractslider.xml#tracking-prop">QAbstractSlider::tracking</db:link></db:member>
<db:member><db:link xlink:href="qstyleoptionslider.xml#sliderPosition-var">sliderPosition</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="tickInterval-var">
<db:title>int QStyleOptionSlider::tickInterval</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>tickInterval</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the interval that should be drawn between tick marks</db:para>
<db:para>The default value is 0.</db:para>
</db:section>
<db:section xml:id="tickPosition-var">
<db:title>QSlider::TickPosition QStyleOptionSlider::tickPosition</db:title>
<db:fieldsynopsis>
<db:type>QSlider::TickPosition</db:type>
<db:varname>tickPosition</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the position of the slider's tick marks, if any</db:para>
<db:para>The default value is <db:link xlink:href="qslider.xml#TickPosition-enum">QSlider::NoTicks</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qslider.xml#TickPosition-enum">QSlider::TickPosition</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="upsideDown-var">
<db:title>bool QStyleOptionSlider::upsideDown</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>upsideDown</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the slider control orientation</db:para>
<db:para>Normally a slider increases as it moves up or to the right; upsideDown indicates that it should do the opposite (increase as it moves down or to the left). The default value is false, i.e. the slider increases as it moves up or to the right.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#sliderPositionFromValue">QStyle::sliderPositionFromValue</db:link>()</db:member>
<db:member><db:link xlink:href="qstyle.xml#sliderValueFromPosition">QStyle::sliderValueFromPosition</db:link>()</db:member>
<db:member><db:link xlink:href="qabstractslider.xml#invertedAppearance-prop">QAbstractSlider::invertedAppearance</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
