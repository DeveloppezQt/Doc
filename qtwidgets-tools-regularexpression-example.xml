<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QRegularExpression Example</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.14.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The QRegularExpression example shows how regular expressions in Qt are applied to text by providing an environment in which new regular expressions can be created and tested on custom text strings.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The example makes usage of the QRegularExpression class, which has been introduced in Qt 5.0. QRegularExpression implements Perl-compatible regular expressions, supporting a number of advanced matching features, such as case insensitive matching, multiline matching, Unicode properties selectors and partial/incremental matching.</db:para>
<db:para>QRegularExpression is a big improvement over QRegExp in terms of features and performance and should be used in all new code.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/regularexpression-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtbase.git/tree/examples/widgets/tools/regularexpression?h=5.14">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
