<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>SoundEffect QML Type</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link> type provides a way to play sound effects in QML.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtMultimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qsoundeffect.xml">QSoundEffect</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>SoundEffect is part of <db:simplelist><db:member>multimedia_qml</db:member><db:member>multimedia_audio_qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This type allows you to play uncompressed audio files (typically WAV files) in a generally lower latency way, and is suitable for &quot;feedback&quot; type sounds in response to user actions (e.g. virtual keyboard sounds, positive or negative feedback for popup dialogs, or game sounds). If low latency is not important, consider using the <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link> type instead, since it support a wider variety of media formats and is less resource intensive.</db:para>
<db:para>Typically the sound effect should be reused, which allows all the parsing and preparation to be done ahead of time, and only triggered when necessary. This is easy to achieve with QML, since you can declare your <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link> instance and refer to it elsewhere.</db:para>
<db:para>The following example plays a WAV file on mouse click.</db:para>
<db:programlisting language="qml">Text {
    text: &quot;Click Me!&quot;;
    font.pointSize: 24;
    width: 150; height: 50;

    SoundEffect {
        id: playSound
        source: &quot;soundeffect.wav&quot;
    }
    MouseArea {
        id: playArea
        anchors.fill: parent
        onPressed: { playSound.play() }
    }
}
</db:programlisting>
<db:para>Since <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link> requires slightly more resources to achieve lower latency playback, the platform may limit the number of simultaneously playing sound effects.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="loops-prop">
<db:title>loops : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>loops</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the number of times the sound is played. A value of 0 or 1 means the sound will be played only once; set to <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link>.Infinite to enable infinite looping.</db:para>
<db:para>The value can be changed while the sound effect is playing, in which case it will update the remaining loops to the new value.</db:para>
</db:section>
<db:section xml:id="loopsRemaining-prop">
<db:title>[read-only] loopsRemaining : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>loopsRemaining</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property contains the number of loops remaining before the sound effect stops by itself, or <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link>.Infinite if that's what has been set in <db:link xlink:href="qml-qtmultimedia-soundeffect.xml#loops-prop">loops</db:link>.</db:para>
</db:section>
<db:section xml:id="muted-prop">
<db:title>muted : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>muted</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property provides a way to control muting. A value of <db:code>true</db:code> will mute this effect. Otherwise, playback will occur with the currently specified <db:link xlink:href="qml-qtmultimedia-soundeffect.xml#volume-prop">volume</db:link>.</db:para>
</db:section>
<db:section xml:id="playing-prop">
<db:title>[read-only] playing : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>playing</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property indicates whether the sound effect is playing or not.</db:para>
</db:section>
<db:section xml:id="source-prop">
<db:title>source : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>source</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the url for the sound to play. For the <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link> to attempt to load the source, the URL must exist and the application must have read permission in the specified directory. If the desired source is a local file the URL may be specified using either absolute or relative (to the file that declared the <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link>) pathing.</db:para>
</db:section>
<db:section xml:id="status-prop">
<db:title>[read-only] status : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>status</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property indicates the current status of the <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link> as enumerated within <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link>. Possible statuses are listed below.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Value</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link>.Null</db:para>
</db:td>
<db:td>
<db:para>No source has been set or the source is null.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link>.Loading</db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link> is trying to load the source.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link>.Ready</db:para>
</db:td>
<db:td>
<db:para>The source is loaded and ready for play.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link>.Error</db:para>
</db:td>
<db:td>
<db:para>An error occurred during operation, such as failure of loading the source.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="volume-prop">
<db:title>volume : qreal</db:title>
<db:fieldsynopsis>
<db:type>qreal</db:type>
<db:varname>volume</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the volume of the sound effect playback.</db:para>
<db:para>The volume is scaled linearly from <db:code>0.0</db:code> (silence) to <db:code>1.0</db:code> (full volume). Values outside this range will be clamped.</db:para>
<db:para>The default volume is <db:code>1.0</db:code>.</db:para>
<db:para>UI volume controls should usually be scaled non-linearly. For example, using a logarithmic scale will produce linear changes in perceived loudness, which is what a user would normally expect from a volume control. See <db:link xlink:href="qaudio.xml#convertVolume">convertVolume</db:link>() for more details.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="loadedChanged-signal">
<db:title>loadedChanged()</db:title>
<db:para>The <db:code>loadedChanged</db:code> signal is emitted when the loading state has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onLoadedChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="loopCountChanged-signal">
<db:title>loopCountChanged()</db:title>
<db:para>The <db:code>loopCountChanged</db:code> signal is emitted when the initial number of loops has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onLoopCountChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="loopsRemainingChanged-signal">
<db:title>loopsRemainingChanged()</db:title>
<db:para>The <db:code>loopsRemainingChanged</db:code> signal is emitted when the remaining number of loops has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onLoopsRemainingChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="mutedChanged-signal">
<db:title>mutedChanged()</db:title>
<db:para>The <db:code>mutedChanged</db:code> signal is emitted when the mute state has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onMutedChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="playingChanged-signal">
<db:title>playingChanged()</db:title>
<db:para>The <db:code>playingChanged</db:code> signal is emitted when the playing property has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPlayingChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="sourceChanged-signal">
<db:title>sourceChanged()</db:title>
<db:para>The <db:code>sourceChanged</db:code> signal is emitted when the source has been changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onSourceChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="statusChanged-signal">
<db:title>statusChanged()</db:title>
<db:para>The <db:code>statusChanged</db:code> signal is emitted when the status property has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onStatusChanged</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="volumeChanged-signal">
<db:title>volumeChanged()</db:title>
<db:para>The <db:code>volumeChanged</db:code> signal is emitted when the volume has changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onVolumeChanged</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="isLoaded-method">
<db:title>bool isLoaded()</db:title>
<db:para>Returns whether the sound effect has finished loading the <db:link xlink:href="qml-qtmultimedia-soundeffect.xml#source-prop">source</db:link>.</db:para>
</db:section>
<db:section xml:id="play-method">
<db:title>play()</db:title>
<db:para>Start playback of the sound effect, looping the effect for the number of times as specified in the loops property.</db:para>
<db:para>This is the default method for <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link>.</db:para>
<db:programlisting language="qml">SoundEffect {
    id: playSound
    source: &quot;soundeffect.wav&quot;
}
MouseArea {
    id: playArea
    anchors.fill: parent
    onPressed: { playSound.play() }
}
</db:programlisting>
</db:section>
<db:section xml:id="stop-method">
<db:title>stop()</db:title>
<db:para>Stop current playback.</db:para>
</db:section>
</db:section>
</db:article>
