<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Scene3D QML Type</db:title>
<db:productname>QtDataVisualization</db:productname>
<db:edition>Qt Data Visualization | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Data Visualization Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qml-qtdatavisualization-scene3d.xml">Scene3D</db:link> type provides description of the 3D scene being visualized.</db:para>
<db:para>This type was introduced in QtDataVisualization 1.0.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtDataVisualization 1.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtDataVisualization 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="q3dscene.xml">Q3DScene</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Scene3D is part of <db:simplelist><db:member>datavisualization_qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The 3D scene contains a single active camera and a single active light source. Visualized data is assumed to be at a fixed location.</db:para>
<db:para>The 3D scene also keeps track of the viewport in which visualization rendering is done, the primary subviewport inside the viewport where the main 3D data visualization view resides and the secondary subviewport where the 2D sliced view of the data resides.</db:para>
<db:para>Also the scene has flag for tracking if the secondary 2D slicing view is currently active or not.</db:para>
<db:note>
<db:para>Not all visualizations support the secondary 2D slicing view.</db:para>
</db:note>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="activeCamera-prop">
<db:title>activeCamera : Camera3D</db:title>
<db:fieldsynopsis>
<db:type>Camera3D</db:type>
<db:varname>activeCamera</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The currently active camera in the 3D scene. When a <db:link xlink:href="qml-qtdatavisualization-camera3d.xml">Camera3D</db:link> is set in the property, it is automatically added as child of the scene.</db:para>
</db:section>
<db:section xml:id="activeLight-prop">
<db:title>activeLight : Light3D</db:title>
<db:fieldsynopsis>
<db:type>Light3D</db:type>
<db:varname>activeLight</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The currently active light in the 3D scene. When a <db:link xlink:href="qml-qtdatavisualization-light3d.xml">Light3D</db:link> is set in the property, it is automatically added as child of the scene.</db:para>
</db:section>
<db:section xml:id="devicePixelRatio-prop">
<db:title>devicePixelRatio : float</db:title>
<db:fieldsynopsis>
<db:type>float</db:type>
<db:varname>devicePixelRatio</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The current device pixel ratio that is used when mapping input coordinates to pixel coordinates.</db:para>
</db:section>
<db:section xml:id="graphPositionQuery-prop">
<db:title>graphPositionQuery : point</db:title>
<db:fieldsynopsis>
<db:type>point</db:type>
<db:varname>graphPositionQuery</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The coordinates for the user input that should be processed by the scene as a graph position query. If this property is set to value other than <db:link xlink:href="qml-qtdatavisualization-scene3d.xml#invalidSelectionPoint-prop">invalidSelectionPoint</db:link>, the graph tries to match a graph position to the given point within the primary viewport. After the rendering pass, this property is returned to its default state of <db:link xlink:href="qml-qtdatavisualization-scene3d.xml#invalidSelectionPoint-prop">invalidSelectionPoint</db:link>. The queried graph position can be read from the <db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#queriedGraphPosition-prop">AbstractGraph3D::queriedGraphPosition</db:link> property after the next render pass.</db:para>
<db:para>There is no single correct 3D coordinate to match a particular screen position, so to be consistent, the queries are always done against the inner sides of an invisible box surrounding the graph.</db:para>
<db:note>
<db:para>Bar graphs allow graph position queries only at the graph floor level.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#queriedGraphPosition-prop">AbstractGraph3D::queriedGraphPosition</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="invalidSelectionPoint-prop">
<db:title>invalidSelectionPoint : point</db:title>
<db:fieldsynopsis>
<db:type>point</db:type>
<db:varname>invalidSelectionPoint</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>A constant property providing an invalid point for selection.</db:para>
</db:section>
<db:section xml:id="primarySubViewport-prop">
<db:title>primarySubViewport : rect</db:title>
<db:fieldsynopsis>
<db:type>rect</db:type>
<db:varname>primarySubViewport</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The current subviewport rectangle inside the viewport where the primary view of the data visualization is targeted.</db:para>
<db:para>If <db:link xlink:href="qml-qtdatavisualization-scene3d.xml#slicingActive-prop">slicingActive</db:link> is <db:code>false</db:code>, the primary sub viewport will be equal to the viewport. If <db:link xlink:href="qml-qtdatavisualization-scene3d.xml#slicingActive-prop">slicingActive</db:link> is <db:code>true</db:code> and the primary sub viewport has not been explicitly set, it will be one fifth of the viewport.</db:para>
<db:note>
<db:para>Setting primarySubViewport larger than or outside of viewport resizes viewport accordingly.</db:para>
</db:note>
</db:section>
<db:section xml:id="secondarySubViewport-prop">
<db:title>secondarySubViewport : rect</db:title>
<db:fieldsynopsis>
<db:type>rect</db:type>
<db:varname>secondarySubViewport</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>* * * The secondary viewport rectangle inside the viewport. The secondary viewport * is used for drawing the 2D slice view in some visualizations. If it has not * been explicitly set, it will be null. If <db:link xlink:href="qml-qtdatavisualization-scene3d.xml#slicingActive-prop">slicingActive</db:link> is <db:code>true</db:code>, it will * be equal to the viewport. *</db:para>
<db:note>
<db:para>If the secondary sub viewport is larger than or outside of the * viewport, the viewport is resized accordingly.</db:para>
</db:note>
</db:section>
<db:section xml:id="secondarySubviewOnTop-prop">
<db:title>secondarySubviewOnTop : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>secondarySubviewOnTop</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Defines whether the 2D slicing view or the 3D view is drawn on top.</db:para>
</db:section>
<db:section xml:id="selectionQueryPosition-prop">
<db:title>selectionQueryPosition : point</db:title>
<db:fieldsynopsis>
<db:type>point</db:type>
<db:varname>selectionQueryPosition</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The coordinates for the user input that should be processed by the scene as a selection. If this property is set to a value other than <db:link xlink:href="qml-qtdatavisualization-scene3d.xml#invalidSelectionPoint-prop">invalidSelectionPoint</db:link>, the graph tries to select a data item at the given point within the primary viewport. After the rendering pass, the property is returned to its default state of <db:link xlink:href="qml-qtdatavisualization-scene3d.xml#invalidSelectionPoint-prop">invalidSelectionPoint</db:link>.</db:para>
</db:section>
<db:section xml:id="slicingActive-prop">
<db:title>slicingActive : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>slicingActive</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Defines whether the 2D slicing view is currently active. If <db:code>true</db:code>, <db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#selectionMode-prop">AbstractGraph3D::selectionMode</db:link> must have either the <db:link xlink:href="qabstract3dgraph.xml#SelectionFlag-enum">AbstractGraph3D.SelectionRow</db:link> or <db:link xlink:href="qabstract3dgraph.xml#SelectionFlag-enum">AbstractGraph3D.SelectionColumn</db:link> set to a valid selection.</db:para>
<db:note>
<db:para>Not all visualizations support the 2D slicing view.</db:para>
</db:note>
</db:section>
<db:section xml:id="viewport-prop">
<db:title>[read-only] viewport : rect</db:title>
<db:fieldsynopsis>
<db:type>rect</db:type>
<db:varname>viewport</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The current viewport rectangle where all 3D rendering is targeted.</db:para>
</db:section>
</db:section>
</db:article>
