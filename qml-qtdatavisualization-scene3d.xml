<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Scene3D QML Type</db:title>
<db:productname>QtDataVisualization</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Data Visualization Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qml-qtdatavisualization-scene3d.xml">Scene3D</db:link> type provides description of the 3D scene being visualized.</db:para>
<db:para>This type was introduced in QtDataVisualization 1.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtDataVisualization 1.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtDataVisualization 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Scene3D is part of <db:simplelist><db:member>datavisualization_qml</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The 3D scene contains a single active camera and a single active light source. Visualized data is assumed to be at a fixed location.</db:para>
<db:para>The 3D scene also keeps track of the viewport in which visualization rendering is done, the primary subviewport inside the viewport where the main 3D data visualization view resides and the secondary subviewport where the 2D sliced view of the data resides.</db:para>
<db:para>Also the scene has flag for tracking if the secondary 2D slicing view is currently active or not.</db:para>
<db:note>
<db:para>Not all visualizations support the secondary 2D slicing view.</db:para>
</db:note>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="activeCamera-prop">
<db:title>activeCamera : Camera3D</db:title>
<db:para>This property contains the currently active camera in the 3D scene. When a <db:link xlink:href="qml-qtdatavisualization-camera3d.xml">Camera3D</db:link> is set in the property it gets automatically added as child of the scene.</db:para>
</db:section>
<db:section xml:id="activeLight-prop">
<db:title>activeLight : Light3D</db:title>
<db:para>This property contains the currently active light in the 3D scene. When a <db:link xlink:href="qml-qtdatavisualization-light3d.xml">Light3D</db:link> is set in the property it gets automatically added as child of the scene.</db:para>
</db:section>
<db:section xml:id="devicePixelRatio-prop">
<db:title>devicePixelRatio : float</db:title>
<db:para>This property contains the current device pixel ratio that is used when mapping input coordinates to pixel coordinates.</db:para>
</db:section>
<db:section xml:id="graphPositionQuery-prop">
<db:title>graphPositionQuery : point</db:title>
<db:para>This property contains the coordinates for the user input that should be processed by the scene as a graph position query. If this is set to value other than <db:link xlink:href="qml-qtdatavisualization-scene3d.xml#invalidSelectionPoint-prop">invalidSelectionPoint</db:link>, the graph tries to match a graph position to the given <db:code role="parameter">point</db:code> within the primary viewport. After the rendering pass this property is returned to its default state of <db:link xlink:href="qml-qtdatavisualization-scene3d.xml#invalidSelectionPoint-prop">invalidSelectionPoint</db:link>. The queried graph position can be read from <db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#queriedGraphPosition-prop">AbstractGraph3D::queriedGraphPosition</db:link> property after the next render pass.</db:para>
<db:para>There isn't a single correct 3D coordinate to match to each specific screen position, so to be consistent, the queries are always done against the inner sides of an invisible box surrounding the graph.</db:para>
<db:note>
<db:para>Bar graphs allow graph position queries only at the graph floor level.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#queriedGraphPosition-prop">AbstractGraph3D::queriedGraphPosition</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="invalidSelectionPoint-prop">
<db:title>invalidSelectionPoint : point</db:title>
<db:para>A constant property providing an invalid point for selection.</db:para>
</db:section>
<db:section xml:id="primarySubViewport-prop">
<db:title>primarySubViewport : rect</db:title>
<db:para>This property contains the current subviewport rectangle inside the viewport where the primary view of the data visualization is targeted to.</db:para>
</db:section>
<db:section xml:id="secondarySubViewport-prop">
<db:title>secondarySubViewport : rect</db:title>
<db:para>This property contains the secondary viewport rectangle inside the viewport. The secondary viewport is used for drawing the 2D slice view in some visualizations.</db:para>
</db:section>
<db:section xml:id="secondarySubviewOnTop-prop">
<db:title>secondarySubviewOnTop : bool</db:title>
<db:para>This property contains whether 2D slicing view is currently drawn on top or if the 3D view is drawn on top.</db:para>
</db:section>
<db:section xml:id="selectionQueryPosition-prop">
<db:title>selectionQueryPosition : point</db:title>
<db:para>This property contains the coordinates for the user input that should be processed by the scene as selection. If this is set to value other than <db:link xlink:href="qml-qtdatavisualization-scene3d.xml#invalidSelectionPoint-prop">invalidSelectionPoint</db:link> the graph tries to select a data item at the given point within the primary viewport. After the rendering pass the property is returned to its default state of <db:link xlink:href="qml-qtdatavisualization-scene3d.xml#invalidSelectionPoint-prop">invalidSelectionPoint</db:link>.</db:para>
</db:section>
<db:section xml:id="slicingActive-prop">
<db:title>slicingActive : bool</db:title>
<db:para>This property contains whether 2D slicing view is currently active or not. If setting it, you must make sure <db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#selectionMode-prop">AbstractGraph3D::selectionMode</db:link> has either <db:link xlink:href="">AbstractGraph3D.SelectionRow</db:link> or <db:link xlink:href="">AbstractGraph3D.SelectionColumn</db:link> flag set, and there is a valid selection.</db:para>
<db:note>
<db:para>Not all visualizations support the 2D slicing view.</db:para>
</db:note>
</db:section>
<db:section xml:id="viewport-prop">
<db:title>viewport : rect</db:title>
<db:para>This property contains the current viewport rectangle where all 3D rendering is targeted.</db:para>
</db:section>
</db:section>
</db:article>
