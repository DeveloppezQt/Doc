<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QT_QML_GENERATE_ANDROID_JAVA_CLASS</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Qml Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Marks a QML file for Java code generation.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Marks a QML file for Java code generation.</db:para>
<db:para>This property was introduced in Qt 6.8.</db:para>
<db:para>When using QML as a <db:link xlink:href="https://developer.android.com/reference/android/view/View">Android: View</db:link> in Android via QtQuickView, you can choose the QML components to make available as generated Java classes usable from Android code. To mark a <db:code>.qml</db:code> file for code generation, set its <db:code>QT_QML_GENERATE_ANDROID_JAVA_CLASS</db:code> source property to <db:code>TRUE</db:code>. The source property must be set before <db:link xlink:href="qt-add-qml-module.xml">creating</db:link> the module.</db:para>
<db:note>
<db:para>The <db:code>.qml</db:code> file name must start with an uppercase letter and define a QML component. This property is valid only if <db:link xlink:href="cmake-variable-qt-android-generate-java-qml-components.xml">QT_ANDROID_GENERATE_JAVA_QTQUICKVIEW_CONTENTS</db:link> is defined.</db:para>
</db:note>
<db:para>The source file property can be set like so:</db:para>
<db:programlisting language="cpp" role="bad">set_source_files_properties(MyMainItem.qml
    PROPERTIES QT_QML_GENERATE_ANDROID_JAVA_CLASS TRUE)
</db:programlisting>
<db:para>You can pass multiple files at once to set_source_files_properties:</db:para>
<db:programlisting language="cpp" role="bad">set(plain_qml_files
    MyItem1.qml
    MyItem2.qml
    FancyButton.qml

)

set(qml_to_java_files
    MyMainItem.qml
    MyOtherMain.qml
)

set_source_files_properties(${qml_to_java_files}
    PROPERTIES QT_QML_GENERATE_ANDROID_JAVA_CLASS TRUE
)

qt_add_qml_module(myapp
    URI MyModule
    QML_FILES ${plain_qml_files} ${qml_to_java_files}
)
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtqml-documents-definetypes.xml#naming-custom-qml-object-types">Naming Custom QML Object Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
