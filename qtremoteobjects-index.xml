<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Remote Objects</db:title>
<db:productname>QtRemoteObjects</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Remote Objects Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides APIs for inter-process communication using Qt Remote Objects.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="qt-remote-objects"/>
<db:section xml:id="remote-object-concepts">
<db:title>Remote Object Concepts</db:title>
<db:para>Qt Remote Objects (QtRO) is an inter-process communication (IPC) module developed for Qt. The idea is to extend Qt's existing functionalities to enable an easy exchange of information between processes or computers.</db:para>
<db:para>One of the key features of Qt to enable this is the distinction between an object's API (defined by its properties, signals and slots) and the implementation of that API. The purpose of QtRO is to meet the expected API, even if the true <db:link xlink:href="qobject.xml">QObject</db:link> is in a different process. A slot called on a copy of an object (called a <db:link xlink:href="qtremoteobjects-replica.xml#replica">Replica</db:link> in QtRO) is forwarded to the true object (called a <db:link xlink:href="qtremoteobjects-source.xml#source">Source</db:link> in QtRO) for handling. Updates to the <db:link xlink:href="qtremoteobjects-source.xml#source">Source</db:link> (either property changes or emitted signals) are forwarded to every <db:link xlink:href="qtremoteobjects-replica.xml#replica">Replica</db:link>.</db:para>
<db:para>A <db:link xlink:href="qtremoteobjects-replica.xml#replica">Replica</db:link> is a light-weight proxy for the <db:link xlink:href="qtremoteobjects-source.xml#source">Source</db:link> object, but one that supports the same connections and behavior of QObjects, which makes it as easy to use as any other <db:link xlink:href="qobject.xml">QObject</db:link> provided by Qt. Everything needed for the <db:link xlink:href="qtremoteobjects-replica.xml#replica">Replica</db:link> to look like the <db:link xlink:href="qtremoteobjects-source.xml#source">Source</db:link> object is handled behind the scenes by QtRO.</db:para>
<db:para>Note that Remote Objects behave differently from traditional remote procedure call (RPC) implementations. In RPC, the client makes a request and waits for the response. In RPC, the server does not push anything to the client unless it is in response to a request. The design of RPC is often such that different clients are independent of each other (for instance, two clients can ask a mapping service for directions and get different results). While it is possible to implement this in QtRO (as <db:link xlink:href="qtremoteobjects-source.xml#source">Source</db:link> without properties, and slots that have return values), it is designed more to hide the fact that the processing is really remote. You let a node give you the <db:link xlink:href="qtremoteobjects-replica.xml#replica">Replica</db:link> instead of creating it yourself, possibly use the status signals (<db:link xlink:href="qremoteobjectreplica.xml#isReplicaValid">isReplicaValid</db:link>()), but then interact with the object like you would with any other <db:link xlink:href="qobject.xml">QObject</db:link>-based type.</db:para>
</db:section>
<db:section xml:id="related-information">
<db:title>Related Information</db:title>
<db:section xml:id="getting-started">
<db:title>Getting Started</db:title>
<db:para>To enable <db:emphasis>Qt Remote Objects</db:emphasis> in a project, add this directive into the C++ files:</db:para>
<db:programlisting language="cpp">#include &amp;lt;QtRemoteObjects&amp;gt;
</db:programlisting>
<db:para>To link against the <db:emphasis>Qt Remote Objects</db:emphasis> module, add this line to the project file:</db:para>
<db:programlisting language="cpp">QT += remoteobjects
</db:programlisting>
</db:section>
<db:section xml:id="licenses">
<db:title>Licenses</db:title>
<db:para>Qt Remote Objects is available under commercial licenses from <db:link xlink:href="http://www.qt.io/about-us/">The Qt Company</db:link>. In addition, it is available under the <db:link xlink:href="http://www.gnu.org/licenses/lgpl-3.0.html">GNU Lesser General Public License, version 3</db:link>, or the <db:link xlink:href="http://www.gnu.org/licenses/gpl-2.0.html">GNU General Public License, version 2</db:link>. See <db:link xlink:href="licensing.xml">Qt Licensing</db:link> for further details.</db:para>
</db:section>
<db:section xml:id="guides">
<db:title>Guides</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtremoteobjects-gettingstarted.xml">Overview Qt Remote Objects</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtremoteobjects-module.xml">Qt Remote Objects C++ Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtremoteobjects-node.xml">Qt Remote Objects Nodes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtremoteobjects-source.xml#source-objects">Qt Remote Objects Source Objects</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtremoteobjects-replica.xml#replica-objects">Qt Remote Objects Replica Objects</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtremoteobjects-registry.xml">Qt Remote Objects Registry</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtremoteobjects-external-schemas.xml">Qt Remote Objects - External QIODevices</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtremoteobjects-repc.xml">Qt Remote Objects Compiler</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtremoteobjects-interaction.xml#remote-object-interaction">Remote Object Interaction</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtremoteobjects-use.xml">Using Qt Remote Objects</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtremoteobjects-troubleshooting.xml">Troubleshooting Qt Remote Objects</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtremoteobjects-compatibility.xml">Qt Remote Objects Protocol Versioning</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="reference">
<db:title>Reference</db:title>
<db:para><db:link xlink:href="qtremoteobjects-module.xml">Qt Remote Objects C++ Classes</db:link> <db:link xlink:href="qtremoteobjects-qmlmodule.xml">Qt Remote Objects QML Types</db:link></db:para>
</db:section>
</db:section>
</db:article>
