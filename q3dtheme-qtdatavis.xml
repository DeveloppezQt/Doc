<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Q3DTheme Class</db:title>
<db:productname>QtDataVis3D</db:productname>
<db:edition>Qt Data Visualization | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Data Visualization Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml">Q3DTheme</db:link> class provides a visual style for graphs.</db:para>
<db:para>This class was introduced in QtDataVisualization 1.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Q3DTheme</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtDataVisualization 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS DataVisualization)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::DataVisualization)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += datavisualization</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtdatavisualization-theme3d.xml" xlink:role="">Theme3D</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Specifies visual properties that affect the whole graph. There are several built-in themes that can be used as is or modified freely.</db:para>
<db:para>The following properties can be overridden by using <db:link xlink:href="qabstract3dseries-qtdatavis.xml">QAbstract3DSeries</db:link> properties to set them explicitly in the series: <db:link xlink:href="q3dtheme-qtdatavis.xml#baseColors-prop">baseColors</db:link>, <db:link xlink:href="q3dtheme-qtdatavis.xml#baseGradients-prop">baseGradients</db:link>, and <db:link xlink:href="q3dtheme-qtdatavis.xml#colorStyle-prop">colorStyle</db:link>.</db:para>
<db:para>Themes can be created from scratch using the <db:link xlink:href="q3dtheme-qtdatavis.xml#Theme-enum">ThemeUserDefined</db:link> enum value. Creating a theme using the default constructor produces a new user-defined theme.</db:para>
<db:section xml:id="default-theme">
<db:title>Default Theme</db:title>
<db:para>The following table lists the properties controlled by themes and the default values for <db:link xlink:href="q3dtheme-qtdatavis.xml#Theme-enum">ThemeUserDefined</db:link>.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Property</db:para>
</db:th>
<db:th>
<db:para>Default Value</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#ambientLightStrength-prop">ambientLightStrength</db:link></db:para>
</db:td>
<db:td>
<db:para>0.25</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#backgroundColor-prop">backgroundColor</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qt.xml#GlobalColor-enum">Qt::black</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#backgroundEnabled-prop">backgroundEnabled</db:link></db:para>
</db:td>
<db:td>
<db:para><db:code>true</db:code></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#baseColors-prop">baseColors</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qt.xml#GlobalColor-enum">Qt::black</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#baseGradients-prop">baseGradients</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qlineargradient.xml">QLinearGradient</db:link>. Essentially fully black.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#colorStyle-prop">colorStyle</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#ColorStyle-enum">ColorStyleUniform</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#font-prop">font</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qfont.xml">QFont</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#gridEnabled-prop">gridEnabled</db:link></db:para>
</db:td>
<db:td>
<db:para><db:code>true</db:code></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#gridLineColor-prop">gridLineColor</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qt.xml#GlobalColor-enum">Qt::white</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#highlightLightStrength-prop">highlightLightStrength</db:link></db:para>
</db:td>
<db:td>
<db:para>7.5</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#labelBackgroundColor-prop">labelBackgroundColor</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qt.xml#GlobalColor-enum">Qt::gray</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#labelBackgroundEnabled-prop">labelBackgroundEnabled</db:link></db:para>
</db:td>
<db:td>
<db:para><db:code>true</db:code></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#labelBorderEnabled-prop">labelBorderEnabled</db:link></db:para>
</db:td>
<db:td>
<db:para><db:code>true</db:code></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#labelTextColor-prop">labelTextColor</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qt.xml#GlobalColor-enum">Qt::white</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#lightColor-prop">lightColor</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qt.xml#GlobalColor-enum">Qt::white</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#lightStrength-prop">lightStrength</db:link></db:para>
</db:td>
<db:td>
<db:para>5.0</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#multiHighlightColor-prop">multiHighlightColor</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qt.xml#GlobalColor-enum">Qt::blue</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#multiHighlightGradient-prop">multiHighlightGradient</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qlineargradient.xml">QLinearGradient</db:link>. Essentially fully black.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#singleHighlightColor-prop">singleHighlightColor</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qt.xml#GlobalColor-enum">Qt::red</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#singleHighlightGradient-prop">singleHighlightGradient</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qlineargradient.xml">QLinearGradient</db:link>. Essentially fully black.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="q3dtheme-qtdatavis.xml#windowColor-prop">windowColor</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qt.xml#GlobalColor-enum">Qt::black</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="usage-examples">
<db:title>Usage Examples</db:title>
<db:para>Creating a built-in theme without any modifications:</db:para>
<db:programlisting language="cpp">Q3DTheme *theme = new Q3DTheme(Q3DTheme::ThemeQt);
</db:programlisting>
<db:para>Creating a built-in theme and modifying some properties:</db:para>
<db:programlisting language="cpp">Q3DTheme *theme = new Q3DTheme(Q3DTheme::ThemeQt);
theme-&gt;setBackgroundEnabled(false);
theme-&gt;setLabelBackgroundEnabled(false);
</db:programlisting>
<db:para>Creating a user-defined theme:</db:para>
<db:programlisting language="cpp">Q3DTheme *theme = new Q3DTheme();
theme-&gt;setAmbientLightStrength(0.3f);
theme-&gt;setBackgroundColor(QColor(QRgb(0x99ca53)));
theme-&gt;setBackgroundEnabled(true);
theme-&gt;setBaseColor(QColor(QRgb(0x209fdf)));
theme-&gt;setColorStyle(Q3DTheme::ColorStyleUniform);
theme-&gt;setFont(QFont(QStringLiteral(&quot;Impact&quot;), 35));
theme-&gt;setGridEnabled(true);
theme-&gt;setGridLineColor(QColor(QRgb(0x99ca53)));
theme-&gt;setHighlightLightStrength(7.0f);
theme-&gt;setLabelBackgroundColor(QColor(0xf6, 0xa6, 0x25, 0xa0));
theme-&gt;setLabelBackgroundEnabled(true);
theme-&gt;setLabelBorderEnabled(true);
theme-&gt;setLabelTextColor(QColor(QRgb(0x404044)));
theme-&gt;setLightColor(Qt::white);
theme-&gt;setLightStrength(6.0f);
theme-&gt;setMultiHighlightColor(QColor(QRgb(0x6d5fd5)));
theme-&gt;setSingleHighlightColor(QColor(QRgb(0xf6a625)));
theme-&gt;setWindowColor(QColor(QRgb(0xffffff)));
</db:programlisting>
<db:para>Creating a built-in theme and modifying some properties after it has been set:</db:para>
<db:programlisting language="cpp">Q3DBars *graph = new Q3DBars();
graph-&gt;activeTheme()-&gt;setType(Q3DTheme::ThemePrimaryColors);
graph-&gt;activeTheme()-&gt;setBaseColor(Qt::red);
graph-&gt;activeTheme()-&gt;setSingleHighlightColor(Qt::yellow);
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="ColorStyle-enum">
<db:title>enum Q3DTheme::ColorStyle</db:title>
<db:para>Color styles.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dtheme-qtdatavis.xml">Q3DTheme</db:link></db:emphasis>::ColorStyleUniform</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Objects are rendered in a single color. The color used is specified in <db:link xlink:href="q3dtheme-qtdatavis.xml#baseColors-prop">baseColors</db:link>, <db:link xlink:href="q3dtheme-qtdatavis.xml#singleHighlightColor-prop">singleHighlightColor</db:link> and <db:link xlink:href="q3dtheme-qtdatavis.xml#multiHighlightColor-prop">multiHighlightColor</db:link> properties.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dtheme-qtdatavis.xml">Q3DTheme</db:link></db:emphasis>::ColorStyleObjectGradient</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Objects are colored using a full gradient for each object regardless of object height. The gradient used is specified in <db:link xlink:href="q3dtheme-qtdatavis.xml#baseGradients-prop">baseGradients</db:link>, <db:link xlink:href="q3dtheme-qtdatavis.xml#singleHighlightGradient-prop">singleHighlightGradient</db:link> and <db:link xlink:href="q3dtheme-qtdatavis.xml#multiHighlightGradient-prop">multiHighlightGradient</db:link> properties.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dtheme-qtdatavis.xml">Q3DTheme</db:link></db:emphasis>::ColorStyleRangeGradient</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Objects are colored using a portion of the full gradient determined by the object's height and its position on the Y-axis. The gradient used is specified in <db:link xlink:href="q3dtheme-qtdatavis.xml#baseGradients-prop">baseGradients</db:link>, <db:link xlink:href="q3dtheme-qtdatavis.xml#singleHighlightGradient-prop">singleHighlightGradient</db:link> and <db:link xlink:href="q3dtheme-qtdatavis.xml#multiHighlightGradient-prop">multiHighlightGradient</db:link> properties.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="Theme-enum">
<db:title>enum Q3DTheme::Theme</db:title>
<db:para>Built-in themes.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dtheme-qtdatavis.xml">Q3DTheme</db:link></db:emphasis>::ThemeQt</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>A light theme with green as the base color.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dtheme-qtdatavis.xml">Q3DTheme</db:link></db:emphasis>::ThemePrimaryColors</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>A light theme with yellow as the base color.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dtheme-qtdatavis.xml">Q3DTheme</db:link></db:emphasis>::ThemeDigia</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>A light theme with gray as the base color.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dtheme-qtdatavis.xml">Q3DTheme</db:link></db:emphasis>::ThemeStoneMoss</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>A medium dark theme with yellow as the base color.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dtheme-qtdatavis.xml">Q3DTheme</db:link></db:emphasis>::ThemeArmyBlue</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>A medium light theme with blue as the base color.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dtheme-qtdatavis.xml">Q3DTheme</db:link></db:emphasis>::ThemeRetro</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>A medium light theme with brown as the base color.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dtheme-qtdatavis.xml">Q3DTheme</db:link></db:emphasis>::ThemeEbony</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>A dark theme with white as the base color.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dtheme-qtdatavis.xml">Q3DTheme</db:link></db:emphasis>::ThemeIsabelle</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>A dark theme with yellow as the base color.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="q3dtheme-qtdatavis.xml">Q3DTheme</db:link></db:emphasis>::ThemeUserDefined</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>A user-defined theme. For more information, see <db:link xlink:href="qml-qtdatavisualization-theme3d.xml#default-theme">Default Theme</db:link>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="ambientLightStrength-prop">
<db:title>ambientLightStrength : float</db:title>
<db:para>This property holds the ambient light strength for the whole graph.</db:para>
<db:para>This value determines how evenly and brightly the colors are shown throughout the graph regardless of the light position.</db:para>
<db:para>The value must be between <db:code>0.0f</db:code> and <db:code>1.0f</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">ambientLightStrength</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setAmbientLightStrength</db:emphasis>(<db:type>float</db:type> <db:emphasis>strength</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">ambientLightStrengthChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>strength</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="backgroundColor-prop">
<db:title>backgroundColor : QColor</db:title>
<db:para>This property holds the color of the graph background.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">backgroundColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setBackgroundColor</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">backgroundColorChanged</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="backgroundEnabled-prop">
<db:title>backgroundEnabled : bool</db:title>
<db:para>This property holds whether the background is visible.</db:para>
<db:para>The background is drawn by using the value of <db:link xlink:href="q3dtheme-qtdatavis.xml#backgroundColor-prop">backgroundColor</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isBackgroundEnabled</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setBackgroundEnabled</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">backgroundEnabledChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="baseColors-prop">
<db:title>baseColors : QList&lt;QColor&gt;</db:title>
<db:para>This property holds the list of base colors to be used for all the objects in the graph, series by series.</db:para>
<db:para>If there are more series than colors, the color list wraps and starts again with the first color in the list.</db:para>
<db:para>Has no immediate effect if <db:link xlink:href="q3dtheme-qtdatavis.xml#colorStyle-prop">colorStyle</db:link> is not <db:link xlink:href="q3dtheme-qtdatavis.xml#ColorStyle-enum">ColorStyleUniform</db:link>.</db:para>
<db:para>This value can be overridden by setting the <db:link xlink:href="qabstract3dseries-qtdatavis.xml#baseColor-prop">baseColor</db:link> explicitly in the series.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qlist.xml">QList</db:link></db:type>&lt;<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type>&gt; <db:emphasis role="bold">baseColors</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setBaseColors</db:emphasis>(const <db:type><db:link xlink:href="qlist.xml">QList</db:link></db:type>&lt;<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type>&gt; &amp;<db:emphasis>colors</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">baseColorsChanged</db:emphasis>(const <db:type><db:link xlink:href="qlist.xml">QList</db:link></db:type>&lt;<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type>&gt; &amp;<db:emphasis>colors</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="baseGradients-prop">
<db:title>baseGradients : QList&lt;QLinearGradient&gt;</db:title>
<db:para>This property holds the list of base gradients to be used for all the objects in the graph, series by series.</db:para>
<db:para>If there are more series than gradients, the gradient list wraps and starts again with the first gradient in the list</db:para>
<db:para>Has no immediate effect if <db:link xlink:href="q3dtheme-qtdatavis.xml#colorStyle-prop">colorStyle</db:link> is <db:link xlink:href="q3dtheme-qtdatavis.xml#ColorStyle-enum">ColorStyleUniform</db:link>.</db:para>
<db:para>This value can be overridden by setting the <db:link xlink:href="qabstract3dseries-qtdatavis.xml#baseGradient-prop">baseGradient</db:link> explicitly in the series.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qlist.xml">QList</db:link></db:type>&lt;<db:type><db:link xlink:href="qlineargradient.xml">QLinearGradient</db:link></db:type>&gt; <db:emphasis role="bold">baseGradients</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setBaseGradients</db:emphasis>(const <db:type><db:link xlink:href="qlist.xml">QList</db:link></db:type>&lt;<db:type><db:link xlink:href="qlineargradient.xml">QLinearGradient</db:link></db:type>&gt; &amp;<db:emphasis>gradients</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">baseGradientsChanged</db:emphasis>(const <db:type><db:link xlink:href="qlist.xml">QList</db:link></db:type>&lt;<db:type><db:link xlink:href="qlineargradient.xml">QLinearGradient</db:link></db:type>&gt; &amp;<db:emphasis>gradients</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="colorStyle-prop">
<db:title>colorStyle : ColorStyle</db:title>
<db:para>This property holds the style of the graph colors.</db:para>
<db:para>One of the <db:link xlink:href="q3dtheme-qtdatavis.xml#ColorStyle-enum">ColorStyle</db:link> enum values.</db:para>
<db:para>This value can be overridden by setting <db:link xlink:href="qml-qtdatavisualization-abstract3dseries.xml#colorStyle-prop">colorStyle</db:link> explicitly in the series.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="q3dtheme-qtdatavis.xml#ColorStyle-enum">Q3DTheme::ColorStyle</db:link></db:type> <db:emphasis role="bold">colorStyle</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setColorStyle</db:emphasis>(<db:type><db:link xlink:href="q3dtheme-qtdatavis.xml#ColorStyle-enum">Q3DTheme::ColorStyle</db:link></db:type> <db:emphasis>style</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">colorStyleChanged</db:emphasis>(<db:type><db:link xlink:href="q3dtheme-qtdatavis.xml#ColorStyle-enum">Q3DTheme::ColorStyle</db:link></db:type> <db:emphasis>style</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="font-prop">
<db:title>font : QFont</db:title>
<db:para>This property holds the font to be used for labels.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> <db:emphasis role="bold">font</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setFont</db:emphasis>(const <db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> &amp;<db:emphasis>font</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">fontChanged</db:emphasis>(const <db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> &amp;<db:emphasis>font</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="gridEnabled-prop">
<db:title>gridEnabled : bool</db:title>
<db:para>This property holds whether the grid lines are drawn.</db:para>
<db:para>This value affects all grid lines.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isGridEnabled</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setGridEnabled</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">gridEnabledChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="gridLineColor-prop">
<db:title>gridLineColor : QColor</db:title>
<db:para>This property holds the color of the grid lines.</db:para>
<db:note>
<db:para>Transparency is not supported and will result in undefined behavior.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">gridLineColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setGridLineColor</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">gridLineColorChanged</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="highlightLightStrength-prop">
<db:title>highlightLightStrength : float</db:title>
<db:para>This property holds the specular light strength for selected objects.</db:para>
<db:para>The value must be between <db:code>0.0f</db:code> and <db:code>10.0f</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">highlightLightStrength</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setHighlightLightStrength</db:emphasis>(<db:type>float</db:type> <db:emphasis>strength</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">highlightLightStrengthChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>strength</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelBackgroundColor-prop">
<db:title>labelBackgroundColor : QColor</db:title>
<db:para>This property holds the color of the label backgrounds.</db:para>
<db:para>Has no effect if <db:link xlink:href="q3dtheme-qtdatavis.xml#labelBackgroundEnabled-prop">labelBackgroundEnabled</db:link> is <db:code>false</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">labelBackgroundColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLabelBackgroundColor</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">labelBackgroundColorChanged</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelBackgroundEnabled-prop">
<db:title>labelBackgroundEnabled : bool</db:title>
<db:para>This property holds whether the label is drawn with a color background or with a fully transparent background.</db:para>
<db:para>The <db:link xlink:href="q3dtheme-qtdatavis.xml#labelBackgroundColor-prop">labelBackgroundColor</db:link> value (including alpha) is used for drawing the background.</db:para>
<db:para>Labels with a background are drawn to equal sizes per axis based on the longest label, and the text is centered in them. Labels without a background are drawn as is and are left or right aligned based on their position in the graph.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isLabelBackgroundEnabled</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLabelBackgroundEnabled</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">labelBackgroundEnabledChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelBorderEnabled-prop">
<db:title>labelBorderEnabled : bool</db:title>
<db:para>This property holds whether label borders are drawn for labels that have a background.</db:para>
<db:para>Has no effect if <db:link xlink:href="q3dtheme-qtdatavis.xml#labelBackgroundEnabled-prop">labelBackgroundEnabled</db:link> is <db:code>false</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isLabelBorderEnabled</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLabelBorderEnabled</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">labelBorderEnabledChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelTextColor-prop">
<db:title>labelTextColor : QColor</db:title>
<db:para>This property holds the color of the font used for labels.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">labelTextColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLabelTextColor</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">labelTextColorChanged</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="lightColor-prop">
<db:title>lightColor : QColor</db:title>
<db:para>This property holds the color for the ambient and specular light.</db:para>
<db:para>This value affects the light specified in <db:link xlink:href="q3dscene-qtdatavis.xml">Q3DScene</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">lightColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLightColor</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">lightColorChanged</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="lightStrength-prop">
<db:title>lightStrength : float</db:title>
<db:para>This property holds the specular light strength for the whole graph.</db:para>
<db:para>The value must be between <db:code>0.0f</db:code> and <db:code>10.0f</db:code>.</db:para>
<db:para>This value affects the light specified in <db:link xlink:href="q3dscene-qtdatavis.xml">Q3DScene</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">lightStrength</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLightStrength</db:emphasis>(<db:type>float</db:type> <db:emphasis>strength</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">lightStrengthChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>strength</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="multiHighlightColor-prop">
<db:title>multiHighlightColor : QColor</db:title>
<db:para>This property holds the highlight color for selected objects.</db:para>
<db:para>Used if <db:link xlink:href="qabstract3dgraph-qtdatavis.xml#selectionMode-prop">selectionMode</db:link> has the <db:code>QAbstract3DGraph::SelectionRow</db:code> or <db:code>QAbstract3DGraph::SelectionColumn</db:code> flag set.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">multiHighlightColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMultiHighlightColor</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">multiHighlightColorChanged</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="multiHighlightGradient-prop">
<db:title>multiHighlightGradient : QLinearGradient</db:title>
<db:para>This property holds the highlight gradient for selected objects.</db:para>
<db:para>Used if <db:link xlink:href="qabstract3dgraph-qtdatavis.xml#selectionMode-prop">selectionMode</db:link> has the <db:code>QAbstract3DGraph::SelectionRow</db:code> or <db:code>QAbstract3DGraph::SelectionColumn</db:code> flag set.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qlineargradient.xml">QLinearGradient</db:link></db:type> <db:emphasis role="bold">multiHighlightGradient</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMultiHighlightGradient</db:emphasis>(const <db:type><db:link xlink:href="qlineargradient.xml">QLinearGradient</db:link></db:type> &amp;<db:emphasis>gradient</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">multiHighlightGradientChanged</db:emphasis>(const <db:type><db:link xlink:href="qlineargradient.xml">QLinearGradient</db:link></db:type> &amp;<db:emphasis>gradient</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="singleHighlightColor-prop">
<db:title>singleHighlightColor : QColor</db:title>
<db:para>This property holds the highlight color for a selected object.</db:para>
<db:para>Used if <db:link xlink:href="qabstract3dgraph-qtdatavis.xml#selectionMode-prop">selectionMode</db:link> has the <db:code>QAbstract3DGraph::SelectionItem</db:code> flag set.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">singleHighlightColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSingleHighlightColor</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">singleHighlightColorChanged</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="singleHighlightGradient-prop">
<db:title>singleHighlightGradient : QLinearGradient</db:title>
<db:para>This property holds the highlight gradient for a selected object.</db:para>
<db:para>Used if <db:link xlink:href="qabstract3dgraph-qtdatavis.xml#selectionMode-prop">selectionMode</db:link> has the <db:code>QAbstract3DGraph::SelectionItem</db:code> flag set.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qlineargradient.xml">QLinearGradient</db:link></db:type> <db:emphasis role="bold">singleHighlightGradient</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSingleHighlightGradient</db:emphasis>(const <db:type><db:link xlink:href="qlineargradient.xml">QLinearGradient</db:link></db:type> &amp;<db:emphasis>gradient</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">singleHighlightGradientChanged</db:emphasis>(const <db:type><db:link xlink:href="qlineargradient.xml">QLinearGradient</db:link></db:type> &amp;<db:emphasis>gradient</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="type-prop">
<db:title>type : Theme</db:title>
<db:para>This property holds the type of the theme.</db:para>
<db:para>The type is automatically set when constructing a theme, but can also be changed later. Changing the theme type will change all other properties of the theme to what the predefined theme specifies. Changing the theme type of the active theme of the graph will also reset all attached series to use the new theme.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="q3dtheme-qtdatavis.xml#Theme-enum">Q3DTheme::Theme</db:link></db:type> <db:emphasis role="bold">type</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setType</db:emphasis>(<db:type><db:link xlink:href="q3dtheme-qtdatavis.xml#Theme-enum">Q3DTheme::Theme</db:link></db:type> <db:emphasis>themeType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">typeChanged</db:emphasis>(<db:type><db:link xlink:href="q3dtheme-qtdatavis.xml#Theme-enum">Q3DTheme::Theme</db:link></db:type> <db:emphasis>themeType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="windowColor-prop">
<db:title>windowColor : QColor</db:title>
<db:para>This property holds the color of the application window the graph is drawn into.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">windowColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setWindowColor</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">windowColorChanged</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="Q3DTheme">
<db:title>[explicit] Q3DTheme::Q3DTheme(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a new theme of type <db:link xlink:href="q3dtheme-qtdatavis.xml#Theme-enum">ThemeUserDefined</db:link>. An optional <db:code role="parameter">parent</db:code> parameter can be given and is then passed to <db:link xlink:href="qobject.xml">QObject</db:link> constructor.</db:para>
</db:section>
<db:section xml:id="Q3DTheme-1">
<db:title>[explicit] Q3DTheme::Q3DTheme(Q3DTheme::Theme <db:emphasis>themeType</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a new theme with <db:code role="parameter">themeType</db:code>, which can be one of the built-in themes from <db:link xlink:href="q3dtheme-qtdatavis.xml#Theme-enum">Theme</db:link>. An optional <db:code role="parameter">parent</db:code> parameter can be given and is then passed to <db:link xlink:href="qobject.xml">QObject</db:link> constructor.</db:para>
</db:section>
<db:section xml:id="dtor.Q3DTheme">
<db:title>[virtual noexcept] Q3DTheme::~Q3DTheme()</db:title>
<db:para>Destroys the theme.</db:para>
</db:section>
</db:section>
</db:article>
