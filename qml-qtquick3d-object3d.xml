<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Object3D QML Type</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Abstract base type of all 3D nodes and resources.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick3D</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick3d-effect.xml" xlink:role="">Effect</db:link>, <db:link xlink:href="qml-qtquick3d-geometry.xml" xlink:role="">Geometry</db:link>, <db:link xlink:href="qml-qtquick3d-instancelistentry.xml" xlink:role="">InstanceListEntry</db:link>, <db:link xlink:href="qml-qtquick3d-helpers-instancemodel.xml" xlink:role="">InstanceModel</db:link>, <db:link xlink:href="qml-qtquick3d-helpers-instancerange.xml" xlink:role="">InstanceRange</db:link>, <db:link xlink:href="qml-qtquick3d-instancing.xml" xlink:role="">Instancing</db:link>, <db:link xlink:href="qml-qtquick3d-material.xml" xlink:role="">Material</db:link>, <db:link xlink:href="qml-qtquick3d-node.xml" xlink:role="">Node</db:link>, <db:link xlink:href="qml-qtquick3d-particles3d-particle3d.xml" xlink:role="">Particle3D</db:link>, <db:link xlink:href="qml-qtquick3d-resourceloader.xml" xlink:role="">ResourceLoader</db:link>, <db:link xlink:href="qml-qtquick3d-sceneenvironment.xml" xlink:role="">SceneEnvironment</db:link>, <db:link xlink:href="qml-qtquick3d-skin.xml" xlink:role="">Skin</db:link>, <db:link xlink:href="qml-qtquick3d-texture.xml" xlink:role="">Texture</db:link>, and <db:link xlink:href="qml-qtquick3d-texturedata.xml" xlink:role="">TextureData</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>QtObject</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qquick3dobject.xml">QQuick3DObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick3d-object3d.xml">Object3D</db:link> is the base class for all Qt Quick 3D types. This includes:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Spatial types that represent objects in the 3D scene, these will normally have a position and/or a direction. For example, <db:link xlink:href="qml-qtquick3d-model.xml">Model</db:link>, <db:link xlink:href="qml-qtquick3d-camera.xml">Camera</db:link>, or <db:link xlink:href="qml-qtquick3d-light.xml">Light</db:link>. Such types inherit from <db:link xlink:href="qml-qtquick3d-node.xml">Node</db:link>, which in turn inherits from <db:link xlink:href="qml-qtquick3d-object3d.xml">Object3D</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Resource types that do not themselves represent an object in the 3D world, but rather serve as components to <db:link xlink:href="qml-qtquick3d-node.xml">Node</db:link> subclasses, providing data of some kind. This includes, among others, <db:link xlink:href="qml-qtquick3d-material.xml">Material</db:link>, <db:link xlink:href="qml-qtquick3d-geometry.xml">Geometry</db:link>, and <db:link xlink:href="qml-qtquick3d-texture.xml">Texture</db:link>.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>In addition to the above types, <db:link xlink:href="qml-qtquick3d-object3d.xml">Object3D</db:link> can also serve as the parent for <db:link xlink:href="qml-qtquick-item.xml">Qt Quick items</db:link>, as well as arbitrary <db:link xlink:href="qobject.xml">QObject</db:link> instances. For more information on adding 2D items to the 3D scene, refer to <db:link xlink:href="qtquick3d-2d.xml">Qt Quick 3D Scenes with 2D Content</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-node.xml">Node</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="children-prop">
<db:title>children : list&lt;Object3D&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;Object3D&gt;</db:type>
<db:varname>children</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2">resources : list&lt;Object&gt;</db:bridgehead><db:fieldsynopsis>
<db:type>list&lt;Object&gt;</db:type>
<db:varname>resources</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The children property contains the list of visual children of this object. The resources property contains non-visual resources that you want to reference by name.</db:para>
<db:para>It is not generally necessary to refer to these properties when adding child objects or resources, as the default <db:link xlink:href="qml-qtquick3d-object3d.xml#data-prop">data</db:link> property will automatically assign child objects to the <db:code>children</db:code> and <db:code>resources</db:code> properties as appropriate. See the <db:link xlink:href="qml-qtquick3d-object3d.xml#data-prop">QtQuick3D::Object3D::data</db:link> documentation for details.</db:para>
<db:note>
<db:para>QtQuick3D::Object3D::resources does not return a list of 3D resources despite the name. The name comes from the semantics of <db:link xlink:href="qquickitem.xml">QQuickItem</db:link>. 3D resources are subclasses of QQuickObjec3D and thus will be returned in the list of QtQuick3D::Objec3D::children.</db:para>
</db:note>
</db:section>
<db:section xml:id="data-prop">
<db:title>[default] data : list&lt;Object&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;Object&gt;</db:type>
<db:varname>data</db:varname>
<db:modifier>writable</db:modifier>
<db:modifier>[default]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The data property allows you to freely mix <db:link xlink:href="qml-qtquick3d-object3d.xml">Object3D</db:link> children and resources in an object. If you assign a <db:link xlink:href="qml-qtquick3d-object3d.xml">Object3D</db:link> to the data list it becomes a child and if you assign any other object type, it is added as a resource.</db:para>
<db:para>So you can write:</db:para>
<db:programlisting language="qml">Object3D {
    Node {}
    DirectionalLight {}
    Timer {}
}
</db:programlisting>
<db:para>instead of:</db:para>
<db:programlisting language="qml">Item {
    children: [
        Node {},
        DirectionalLight {}
    ]
    resources: [
        Timer {}
    ]
}
</db:programlisting>
<db:para>It should not generally be necessary to refer to the <db:code>data</db:code> property, as it is the default property for <db:link xlink:href="qml-qtquick3d-object3d.xml">Object3D</db:link> and thus all child objects are automatically assigned to this property.</db:para>
</db:section>
<db:section xml:id="parent-prop">
<db:title>parent : Object3D</db:title>
<db:fieldsynopsis>
<db:type>Object3D</db:type>
<db:varname>parent</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the parent of the <db:link xlink:href="qml-qtquick3d-object3d.xml">Object3D</db:link> in a 3D scene.</db:para>
<db:note>
<db:para>An <db:link xlink:href="qml-qtquick3d-object3d.xml">Object3D</db:link>'s parent may not necessarily be the same as its object parent. This is necessary because the object parent may be an item that is not of type <db:link xlink:href="qml-qtquick3d-object3d.xml">Object3D</db:link>, for example the root object in a scene.</db:para>
</db:note>
</db:section>
<db:section xml:id="state-prop">
<db:title>state : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>state</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the name of the current state of the object.</db:para>
<db:para>If the item is in its default state, that is, no explicit state has been set, then this property holds an empty string. Likewise, you can return an item to its default state by setting this property to an empty string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-statesanimations-states.xml">Qt Quick States</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="states-prop">
<db:title>states : list&lt;State&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;State&gt;</db:type>
<db:varname>states</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the list of possible states for this object. To change the state of this object, set the <db:link xlink:href="qml-qtquick3d-object3d.xml#state-prop">state</db:link> property to one of these states, or set the <db:link xlink:href="qml-qtquick3d-object3d.xml#state-prop">state</db:link> property to an empty string to revert the object to its default state.</db:para>
<db:para>This property is specified as a list of <db:link xlink:href="qml-qtquick-state.xml">State</db:link> objects. For example, below is an QtQuick3D::Node with &quot;above_state&quot; and &quot;below_state&quot; states:</db:para>
<db:programlisting language="qml">import QtQuick
import QtQuick3D

Node {
    id: root
    y: 0

    states: [
        State {
            name: &quot;above_state&quot;
            PropertyChanges { target: root; y: 100 }
        },
        State {
            name: &quot;below_state&quot;
            PropertyChanges { target: root; y: -100 }
        }
    ]
}
</db:programlisting>
<db:para>See <db:link xlink:href="qtquick-statesanimations-states.xml">Qt Quick States</db:link> and <db:link xlink:href="qtquick-statesanimations-animations.xml">Animation and Transitions in Qt Quick</db:link> for more details on using states and transitions.</db:para>
<db:note>
<db:para>This property works the same as QtQuick::Item::states but is necessary because QtQuick3D::Object3D is not a QtQuick::Item subclass.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-object3d.xml#transitions-prop">QtQuick3D::Object3D::transitions</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="transitions-prop">
<db:title>transitions : list&lt;Transition&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;Transition&gt;</db:type>
<db:varname>transitions</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the list of transitions for this object. These define the transitions to be applied to the object whenever it changes its <db:link xlink:href="qml-qtquick3d-object3d.xml#state-prop">state</db:link>.</db:para>
<db:para>This property is specified as a list of <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link> objects. For example:</db:para>
<db:programlisting language="qml">import QtQuick
import QtQuick3D

Node {
    transitions: [
        Transition {
            //...
        },
        Transition {
            //...
        }
    ]
}
</db:programlisting>
<db:para>See <db:link xlink:href="qtquick-statesanimations-states.xml">Qt Quick States</db:link> and <db:link xlink:href="qtquick-statesanimations-animations.xml">Animation and Transitions in Qt Quick</db:link> for more details on using states and transitions.</db:para>
<db:note>
<db:para>This property works the same as QtQuick::Item::transitions but is necessary because QtQuick3D::Object3D is not a QtQuick::Item subclass.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-object3d.xml#states-prop">QtQuick3D::Object3D::states</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
