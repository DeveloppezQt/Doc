<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Controls - Wearable Demo</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates an application launcher designed for wearable devices.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

function requestNavigationRoute(rModel) {
    var xhr = new XMLHttpRequest;
    xhr.open(&quot;GET&quot;, &quot;walk_route.json&quot;);
    xhr.onreadystatechange = function () {
        if (xhr.readyState === XMLHttpRequest.DONE) {
            var a = JSON.parse(xhr.responseText);
            var steps = a.routes[0].legs[0].steps;

            for (var step in steps) {
                var maneuver = steps[step].maneuver;
                var duration = steps[step].duration;
                var distance = steps[step].distance;

                rModel.append({
                                      navInstruction: maneuver.instruction,
                                      navImage: getNavigationImage(
                                                    maneuver.type,
                                                    maneuver.modifier,
                                                    routeView.imageList),
                                      navAuxInfo: getAuxInfo(distance,
                                                             duration)
                                  });
            }
        }
    }
    xhr.send();
}

function getNavigationImage(maneuverType, maneuverModifier, imageList) {
    var imageToReturn;
    if (maneuverType === &quot;depart&quot;) {
        imageToReturn = imageList[4];
    } else if (maneuverType === &quot;arrive&quot;) {
        imageToReturn = imageList[5];
    } else if (maneuverType === &quot;turn&quot;) {
        if (maneuverModifier.search(&quot;left&quot;) &amp;gt;= 0)
            imageToReturn = imageList[1];
        else if (maneuverModifier.search(&quot;right&quot;) &amp;gt;= 0)
            imageToReturn = imageList[2];
        else
            imageToReturn = imageList[0];
    } else {
        if (maneuverModifier === &quot;uturn&quot;) {
            imageToReturn = imageList[3];
        } else {
            imageToReturn = imageList[0];
        }
    }

    return imageToReturn;
}

function getAuxInfo(distInMeters, timeInSecs) {
    var distance = convertDistance(distInMeters);
    if (distance.length &amp;gt; 0)
        return &quot;Distance: &quot; + distance + &quot;\nTime: &quot; + formatSeconds(
                    timeInSecs);
    else
        return &quot;&quot;;
}

function convertDistance(meter) {
    var dist = &quot;&quot;;
    var feet = (meter * 0.3048).toPrecision(6);
    var miles = (meter * 0.000621371).toPrecision(6);

    if (Math.floor(miles) &amp;gt; 1) {
        dist += Math.floor(miles) + &quot; mi&quot;;
        feet = ((miles - Math.floor(miles)) * 0.3048).toPrecision(6);
    }
    if (Math.floor(feet) &amp;gt; 1)
        dist += Math.floor(feet) + &quot; ft&quot;;

    return dist
}

function formatSeconds(seconds) {
    var date = new Date(1970, 0, 1);
    date.setSeconds(seconds);
    return date.toTimeString().replace(/.*(\d{2}:\d{2}:\d{2}).*/, &quot;$1&quot;);
}

</db:programlisting>
</db:article>
