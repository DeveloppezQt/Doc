<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Music Player</db:title>
<db:productname>QtWinExtras</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Windows Extras Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates managing Windows DWM features, jump lists, taskbar button overlay, and thumbnail toolbar.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;volumebutton.h&quot;

#include &amp;lt;QtWidgets&amp;gt;
#include &amp;lt;QtWinExtras&amp;gt;

VolumeButton::VolumeButton(QWidget *parent) :
    QToolButton(parent)
{
    setIcon(style()-&amp;gt;standardIcon(QStyle::SP_MediaVolume));
    setPopupMode(QToolButton::InstantPopup);

    QWidget *popup = new QWidget(this);

    slider = new QSlider(Qt::Horizontal, popup);
    slider-&amp;gt;setRange(0, 100);
    connect(slider, &amp;amp;QAbstractSlider::valueChanged, this, &amp;amp;VolumeButton::volumeChanged);

    label = new QLabel(popup);
    label-&amp;gt;setAlignment(Qt::AlignCenter);
    label-&amp;gt;setNum(100);
    label-&amp;gt;setMinimumWidth(label-&amp;gt;sizeHint().width());

    connect(slider, &amp;amp;QAbstractSlider::valueChanged, label, QOverload&amp;lt;int&amp;gt;::of(&amp;amp;QLabel::setNum));

    QBoxLayout *popupLayout = new QHBoxLayout(popup);
    popupLayout-&amp;gt;setMargin(2);
    popupLayout-&amp;gt;addWidget(slider);
    popupLayout-&amp;gt;addWidget(label);

    QWidgetAction *action = new QWidgetAction(this);
    action-&amp;gt;setDefaultWidget(popup);

    menu = new QMenu(this);
    menu-&amp;gt;addAction(action);
    setMenu(menu);

    stylize();
}

void VolumeButton::increaseVolume()
{
    slider-&amp;gt;triggerAction(QSlider::SliderPageStepAdd);
}

void VolumeButton::descreaseVolume()
{
    slider-&amp;gt;triggerAction(QSlider::SliderPageStepSub);
}

int VolumeButton::volume() const
{
    return slider-&amp;gt;value();
}

void VolumeButton::setVolume(int volume)
{
    slider-&amp;gt;setValue(volume);
}

void VolumeButton::stylize()
{
    if (QOperatingSystemVersion::current() &amp;lt; QOperatingSystemVersion::Windows8) {
        // Set styling options relevant only to Windows 7.
        if (QtWin::isCompositionEnabled()) {
            QtWin::enableBlurBehindWindow(menu);
            QString css(&quot;QMenu { border: 1px solid %1; border-radius: 2px; background: transparent; }&quot;);
            menu-&amp;gt;setStyleSheet(css.arg(QtWin::realColorizationColor().name()));
        } else {
            QtWin::disableBlurBehindWindow(menu);
            QString css(&quot;QMenu { border: 1px solid black; background: %1; }&quot;);
            menu-&amp;gt;setStyleSheet(css.arg(QtWin::realColorizationColor().name()));
        }
    }
}

</db:programlisting>
</db:article>
