<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QtObject QML Type</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A basic QML type.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQml 2.12</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-action.xml" xlink:role="">Action</db:link>, <db:link xlink:href="qml-qtquick-controls2-actiongroup.xml" xlink:role="">ActionGroup</db:link>, <db:link xlink:href="qml-qtquick-controls-styles-applicationwindowstyle.xml" xlink:role="">ApplicationWindowStyle</db:link>, <db:link xlink:href="qml-qtquick-controls2-buttongroup.xml" xlink:role="">ButtonGroup</db:link>, <db:link xlink:href="qml-qtmultimedia-camera.xml" xlink:role="">Camera</db:link>, <db:link xlink:href="qml-qt-labs-platform-dialog.xml" xlink:role="">Dialog</db:link>, <db:link xlink:href="qml-qt3d-render-graphicsapifilter.xml" xlink:role="">GraphicsApiFilter</db:link>, <db:link xlink:href="qml-qtquick-item.xml" xlink:role="">Item</db:link>, <db:link xlink:href="qml-qtquick-itemgrabresult.xml" xlink:role="">ItemGrabResult</db:link>, <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keyboardstyle.xml" xlink:role="">KeyboardStyle</db:link>, <db:link xlink:href="qml-qt-labs-platform-menu.xml" xlink:role="">Menu</db:link>, <db:link xlink:href="qml-qt-labs-platform-menubar.xml" xlink:role="">MenuBar</db:link>, <db:link xlink:href="qml-qt-labs-platform-menuitem.xml" xlink:role="">MenuItem</db:link>, <db:link xlink:href="qml-qt-labs-platform-menuitemgroup.xml" xlink:role="">MenuItemGroup</db:link>, <db:link xlink:href="qml-qt3d-animation-morphtarget.xml" xlink:role="">MorphTarget</db:link>, <db:link xlink:href="qml-qtquick-controls2-popup.xml" xlink:role="">Popup</db:link>, <db:link xlink:href="qml-qtquick-controls-stackviewdelegate.xml" xlink:role="">StackViewDelegate</db:link>, <db:link xlink:href="qml-qt-labs-platform-standardpaths.xml" xlink:role="">StandardPaths</db:link>, <db:link xlink:href="qml-qt3d-render-stenciloperationarguments.xml" xlink:role="">StencilOperationArguments</db:link>, <db:link xlink:href="qml-qt3d-render-stenciltestarguments.xml" xlink:role="">StencilTestArguments</db:link>, <db:link xlink:href="qml-qt-labs-platform-systemtrayicon.xml" xlink:role="">SystemTrayIcon</db:link>, <db:link xlink:href="qml-qtquick-controls-tableviewcolumn.xml" xlink:role="">TableViewColumn</db:link>, and <db:link xlink:href="qml-qtquick-extras-tumblercolumn.xml" xlink:role="">TumblerColumn</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QtObject is part of <db:simplelist><db:member>qml-utility-elements</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtqml-qtobject.xml">QtObject</db:link> type is a non-visual element which contains only the <db:link xlink:href="qml-qtqml-qtobject.xml#objectName-prop">objectName</db:link> property.</db:para>
<db:para>It can be useful to create a <db:link xlink:href="qml-qtqml-qtobject.xml">QtObject</db:link> if you need an extremely lightweight type to enclose a set of custom properties:</db:para>
<db:programlisting language="qml">import QtQuick 2.0

Item {
    QtObject {
        id: attributes
        property string name
        property int size
        property variant attributes
    }

    Text { text: attributes.name }
}
</db:programlisting>
<db:para>It can also be useful for C++ integration, as it is just a plain <db:link xlink:href="qobject.xml">QObject</db:link>. See the <db:link xlink:href="qobject.xml">QObject</db:link> documentation for further details.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="objectName-prop">
<db:title>objectName : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>objectName</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the <db:link xlink:href="qobject.xml#objectName-prop">QObject::objectName</db:link> for this specific object instance.</db:para>
<db:para>This allows a C++ application to locate an item within a QML component using the <db:link xlink:href="qobject.xml#findChild">QObject::findChild</db:link>() method. For example, the following C++ application locates the child <db:link xlink:href="qml-qtquick-rectangle.xml">Rectangle</db:link> item and dynamically changes its color value:</db:para>
<db:programlisting language="qml">// MyRect.qml

import QtQuick 2.0

Item {
    width: 200; height: 200

    Rectangle {
        anchors.fill: parent
        color: &quot;red&quot;
        objectName: &quot;myRect&quot;
    }
}
</db:programlisting>
<db:programlisting language="cpp">// main.cpp

QQuickView view;
view.setSource(QUrl::fromLocalFile(&quot;MyRect.qml&quot;));
view.show();

QQuickItem *item = view.rootObject()-&amp;gt;findChild&amp;lt;QQuickItem*&amp;gt;(&quot;myRect&quot;);
if (item)
    item-&amp;gt;setProperty(&quot;color&quot;, QColor(Qt::yellow));
</db:programlisting>
</db:section>
</db:section>
</db:article>
