<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>MultiSampleAntiAliasing QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Enable multisample antialiasing.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Render 2.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>RenderState</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qmultisampleantialiasing.xml">QMultiSampleAntiAliasing</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>MultiSampleAntiAliasing is part of <db:simplelist><db:member>renderstates</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qml-qt3d-render-multisampleantialiasing.xml">MultiSampleAntiAliasing</db:link> type enables multisample antialiasing.</db:para>
<db:para>It can be added to a <db:link xlink:href="qml-qt3d-render-renderpass.xml">RenderPass</db:link>:</db:para>
<db:programlisting language="qml">RenderPass {
    shaderProgram: ShaderProgram {
        // ...
    }
    renderStates: [
        MultiSampleAntiAliasing {}
    ]
}
</db:programlisting>
<db:para>Or a <db:link xlink:href="qml-qt3d-render-renderstateset.xml">RenderStateSet</db:link>:</db:para>
<db:programlisting language="qml">RenderStateSet {
    renderStates: [
        MultiSampleAntiAliasing {}
    ]
}
</db:programlisting>
<db:para>For multisampling to take effect, the render target must have been allocated with multisampling enabled:</db:para>
<db:programlisting language="qml">RenderTarget {
    attachments: [
        RenderTargetOutput {
            attachmentPoint: RenderTargetOutput.Color0
            texture: Texture2DMultisample {
                width: 1024
                height: 1024
                format: Texture.RGBA8_UNorm
            }
        },
        RenderTargetOutput {
            attachmentPoint: RenderTargetOutput.DepthStencil
            texture: Texture2DMultisample{
                width: 1024
                height: 1024
                format: Texture.D24S8
            }
        }
    ]
}
</db:programlisting>
<db:para>Further, the shader code must use multisampling sampler types and texelFetch() instead of texture().</db:para>
<db:para>Further, the shader code must use multisampling sampler types and texelFetch() instead of texture().</db:para>
<db:para>For example, if you have code like</db:para>
<db:programlisting language="cpp">#version 150

uniform sampler2D colorTexture;
in vec2 texCoord;
out vec4 fragColor;

void main()
{
    fragColor = texture(colorTexture, texCoord);
}
</db:programlisting>
<db:para>you can rewrite it as</db:para>
<db:programlisting language="cpp">#version 150

uniform sampler2DMS colorTexture;
in vec2 texCoord;
out vec4 fragColor;

void main()
{
    ivec2 tc = ivec2(floor(textureSize(colorTexture) * texCoord));
    vec4 c = texelFetch(colorTexture, tc, 0) +
                texelFetch(colorTexture, tc, 1) +
                texelFetch(colorTexture, tc, 2) +
                texelFetch(colorTexture, tc, 3);
    fragColor = c / 4.0;
}
</db:programlisting>
<db:note>
<db:para>When using OpenGL as the graphics API, glEnable(GL_MULTISAMPLE) will be called if <db:link xlink:href="qml-qt3d-render-multisampleantialiasing.xml">MultiSampleAntiAliasing</db:link> has been added to the render states.</db:para>
</db:note>
</db:section>
</db:article>
