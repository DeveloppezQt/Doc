<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QTableWidgetSelectionRange Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qtablewidgetselectionrange.xml">QTableWidgetSelectionRange</db:link> class provides a way to interact with selection in a model without using model indexes and a selection model.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QTableWidgetSelectionRange</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QTableWidgetSelectionRange is part of <db:simplelist><db:member>model-view</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qtablewidgetselectionrange.xml">QTableWidgetSelectionRange</db:link> class stores the top left and bottom right rows and columns of a selection range in a table. The selections in the table may consist of several selection ranges.</db:para>
<db:note>
<db:para>If the item within the selection range is marked as not selectable, e.g., itemFlags() &amp; Qt::ItemIsSelectable == 0 then it will not appear in the selection range.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtablewidget.xml">QTableWidget</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QTableWidgetSelectionRange">
<db:title>QTableWidgetSelectionRange::QTableWidgetSelectionRange()</db:title>
<db:constructorsynopsis>
<db:methodname>QTableWidgetSelectionRange</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QTableWidgetSelectionRange()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an empty table selection range, i.e. a range whose <db:link xlink:href="qtablewidgetselectionrange.xml#rowCount">rowCount</db:link>() and <db:link xlink:href="qtablewidgetselectionrange.xml#columnCount">columnCount</db:link>() are 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#topRow">topRow</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#leftColumn">leftColumn</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#bottomRow">bottomRow</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#rightColumn">rightColumn</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QTableWidgetSelectionRange-1">
<db:title>QTableWidgetSelectionRange::QTableWidgetSelectionRange(int <db:emphasis>top</db:emphasis>, int <db:emphasis>left</db:emphasis>, int <db:emphasis>bottom</db:emphasis>, int <db:emphasis>right</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QTableWidgetSelectionRange</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>top</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>left</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>bottom</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>right</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QTableWidgetSelectionRange(int top, int left, int bottom, int right)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs the table selection range from the given <db:code role="parameter">top</db:code>, <db:code role="parameter">left</db:code>, <db:code role="parameter">bottom</db:code> and <db:code role="parameter">right</db:code> table rows and columns.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#topRow">topRow</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#leftColumn">leftColumn</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#bottomRow">bottomRow</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#rightColumn">rightColumn</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="bottomRow">
<db:title>int QTableWidgetSelectionRange::bottomRow() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>bottomRow</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int bottomRow() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the bottom row of the range.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#topRow">topRow</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#rightColumn">rightColumn</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#rowCount">rowCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="columnCount">
<db:title>int QTableWidgetSelectionRange::columnCount() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>columnCount</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int columnCount() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the number of columns in the range.</db:para>
<db:para>This is equivalent to <db:link xlink:href="qtablewidgetselectionrange.xml#rightColumn">rightColumn</db:link>() - <db:link xlink:href="qtablewidgetselectionrange.xml#leftColumn">leftColumn</db:link>() + 1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#rowCount">rowCount</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#leftColumn">leftColumn</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#rightColumn">rightColumn</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="leftColumn">
<db:title>int QTableWidgetSelectionRange::leftColumn() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>leftColumn</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int leftColumn() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the left column of the range.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#rightColumn">rightColumn</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#topRow">topRow</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#columnCount">columnCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rightColumn">
<db:title>int QTableWidgetSelectionRange::rightColumn() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>rightColumn</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int rightColumn() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the right column of the range.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#leftColumn">leftColumn</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#bottomRow">bottomRow</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#columnCount">columnCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rowCount">
<db:title>int QTableWidgetSelectionRange::rowCount() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>rowCount</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int rowCount() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the number of rows in the range.</db:para>
<db:para>This is equivalent to <db:link xlink:href="qtablewidgetselectionrange.xml#bottomRow">bottomRow</db:link>() - <db:link xlink:href="qtablewidgetselectionrange.xml#topRow">topRow</db:link>() + 1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#columnCount">columnCount</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#topRow">topRow</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#bottomRow">bottomRow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="topRow">
<db:title>int QTableWidgetSelectionRange::topRow() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>topRow</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int topRow() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the top row of the range.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#bottomRow">bottomRow</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#leftColumn">leftColumn</db:link>()</db:member>
<db:member><db:link xlink:href="qtablewidgetselectionrange.xml#rowCount">rowCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-not-eq">
<db:title>[since 6.3] bool operator!=(const QTableWidgetSelectionRange &amp;<db:emphasis>lhs</db:emphasis>, const QTableWidgetSelectionRange &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>operator!=</db:methodname>
<db:methodparam>
<db:type>const QTableWidgetSelectionRange &amp;</db:type>
<db:parameter>lhs</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QTableWidgetSelectionRange &amp;</db:type>
<db:parameter>rhs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator!=(const QTableWidgetSelectionRange &amp;lhs, const QTableWidgetSelectionRange &amp;rhs)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if <db:code role="parameter">lhs</db:code> and <db:code role="parameter">rhs</db:code> are not equal, otherwise returns false.</db:para>
<db:para>This function was introduced in Qt 6.3.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>[since 6.3] bool operator==(const QTableWidgetSelectionRange &amp;<db:emphasis>lhs</db:emphasis>, const QTableWidgetSelectionRange &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>const QTableWidgetSelectionRange &amp;</db:type>
<db:parameter>lhs</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QTableWidgetSelectionRange &amp;</db:type>
<db:parameter>rhs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(const QTableWidgetSelectionRange &amp;lhs, const QTableWidgetSelectionRange &amp;rhs)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if <db:code role="parameter">lhs</db:code> and <db:code role="parameter">rhs</db:code> are equal, otherwise returns false.</db:para>
<db:para>This function was introduced in Qt 6.3.</db:para>
</db:section>
</db:section>
</db:article>
