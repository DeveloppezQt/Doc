<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QPlaceEditorial Class</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qplaceeditorial.xml">QPlaceEditorial</db:link> class represents a publisher's article describing a place.</db:para>
<db:para>This class was introduced in Qt 5.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPlaceEditorial</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += location</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qplacecontent.xml" xlink:role="class">QPlaceContent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QPlaceEditorial is part of <db:simplelist><db:member>QtLocation-places</db:member><db:member>QtLocation-places-data</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Each <db:link xlink:href="qplaceeditorial.xml">QPlaceEditorial</db:link> has a title, text and language; in addition to those properties inherited from <db:link xlink:href="qplacecontent.xml">QPlaceContent</db:link>.</db:para>
<db:para>Note: The Places API only supports editorials as 'retrieve-only' objects. Submitting editorials to a provider is not a supported use case.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacecontent.xml">QPlaceContent</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QPlaceEditorial">
<db:title>QPlaceEditorial::QPlaceEditorial()</db:title>
<db:para>Constructs a new editorial object.</db:para>
</db:section>
<db:section xml:id="QPlaceEditorial-1">
<db:title>QPlaceEditorial::QPlaceEditorial(const QPlaceContent &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code> if possible, otherwise constructs a default editorial object.</db:para>
</db:section>
<db:section xml:id="dtor.QPlaceEditorial">
<db:title>[virtual noexcept] QPlaceEditorial::~QPlaceEditorial()</db:title>
<db:para>Destructor.</db:para>
</db:section>
<db:section xml:id="language">
<db:title>QString QPlaceEditorial::language() const</db:title>
<db:para>Returns the language of the editorial. Typically this would be a language code in the 2 letter ISO 639-1 format.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceeditorial.xml#setLanguage">setLanguage</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLanguage">
<db:title>void QPlaceEditorial::setLanguage(const QString &amp;<db:emphasis>language</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">language</db:code> of the editorial. Typically this would be a language code in the 2 letter ISO 639-1 format.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceeditorial.xml#language">language</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setText">
<db:title>void QPlaceEditorial::setText(const QString &amp;<db:emphasis>text</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">text</db:code> of the editorial.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceeditorial.xml#text">text</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTitle">
<db:title>void QPlaceEditorial::setTitle(const QString &amp;<db:emphasis>title</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">title</db:code> of the editorial.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceeditorial.xml#title">title</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="text">
<db:title>QString QPlaceEditorial::text() const</db:title>
<db:para>Returns a textual description of the place.</db:para>
<db:para>Depending upon the provider, the editorial text could be either rich(HTML based) text or plain text.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceeditorial.xml#setText">setText</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="title">
<db:title>QString QPlaceEditorial::title() const</db:title>
<db:para>Returns the title of the editorial.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceeditorial.xml#setTitle">setTitle</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
