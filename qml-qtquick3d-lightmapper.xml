<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Lightmapper QML Type</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Specifies lightmap baking settings for a scene.</db:para>
<db:para>This type was introduced in Qt 6.4.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick3D</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.4</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Used when baking direct and indirect lighting. These settings are not relevant at other times, such as when using already generated lightmaps to render a scene.</db:para>
<db:note>
<db:para>As of Qt 6.4, lightmap baking is in an early technical preview state. Changes to features, quality, and API are likely to happen in future releases.</db:para>
</db:note>
<db:para>The Lightmapper object works in combination with:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick3d-model.xml#bakedLightmap-prop">Model::bakedLightmap</db:link> and the associated <db:link xlink:href="qml-qtquick3d-bakedlightmap.xml">BakedLightmap</db:link>,</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick3d-model.xml#usedInBakedLighting-prop">Model::usedInBakedLighting</db:link> and <db:link xlink:href="qml-qtquick3d-model.xml#lightmapBaseResolution-prop">Model::lightmapBaseResolution</db:link>,</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick3d-light.xml#bakeMode-prop">Light::bakeMode</db:link>,</db:para>
</db:listitem>
<db:listitem>
<db:para>the engine's built-in lightmap baker.</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="quick3d-lightmap.xml">Lightmaps and Global Illumination</db:link></db:member>
<db:member><db:link xlink:href="qtquick3d-bakedlightmap-example.xml">Qt Quick 3D - Baked Lightmap Example</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="adaptiveBiasEnabled-prop">
<db:title>adaptiveBiasEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>adaptiveBiasEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Enables applying an additional, dynamic bias based on the surface normal.</db:para>
<db:para>The default value is true.</db:para>
</db:section>
<db:section xml:id="bias-prop">
<db:title>bias : float</db:title>
<db:fieldsynopsis>
<db:type>float</db:type>
<db:varname>bias</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Raycasting bias used during baking. Adapt the value in case artifacts occur, for example in order to reduce undesired shadowing patterns. In many cases the default value is sufficient.</db:para>
<db:para>The default value is 0.005.</db:para>
</db:section>
<db:section xml:id="bounces-prop">
<db:title>bounces : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>bounces</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The maximum number of indirect light bounces per sample. The value should at least be 1, no point in indirect light calculation otherwise.</db:para>
<db:para>The default value is 3.</db:para>
<db:para>The value heavily affects both the performance and quality of the resulting lightmaps during lightmap baking.</db:para>
</db:section>
<db:section xml:id="indirectLightEnabled-prop">
<db:title>indirectLightEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>indirectLightEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Normally there is no need to change this value. The default value is true. Setting this property to false disables indirect light computation during lightmap baking. Thus the resulting texture maps will only contain direct light information. At run time, the engine will continue to use the maps normally, assuming they contain both direct and indirect lighting.</db:para>
</db:section>
<db:section xml:id="indirectLightFactor-prop">
<db:title>indirectLightFactor : float</db:title>
<db:fieldsynopsis>
<db:type>float</db:type>
<db:varname>indirectLightFactor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Multiplier for the indirect light amount. While it is the value of 1 (i.e., not affecting the indirect light amount calculation) that provides the strictly correct rendering results, a slightly higher value can often give better looking results when using the lightmap, even with a lower number of bounces.</db:para>
<db:para>The default value is 1.</db:para>
</db:section>
<db:section xml:id="indirectLightWorkgroupSize-prop">
<db:title>indirectLightWorkgroupSize : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>indirectLightWorkgroupSize</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The size of the sample workgroups. These workgroups are attempted to be executed in parallel. (the exact behavior depends on the number of CPU cores and the <db:link xlink:href="qthreadpool.xml">QThreadPool</db:link> configuration)</db:para>
<db:para>The default value is 32. With the default sample count of 256 this means attempting to run 8 groups in parallel per model.</db:para>
</db:section>
<db:section xml:id="opacityThreshold-prop">
<db:title>opacityThreshold : float</db:title>
<db:fieldsynopsis>
<db:type>float</db:type>
<db:varname>opacityThreshold</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The opacity (alpha) threshold below which an object is ignored in ray - mesh intersections when calculating lighting via raytracing. When the opacity falls below the threshold, the model (submesh) will not occlude lights and thus will not generate shadows either.</db:para>
<db:para>The default value is 0.5.</db:para>
<db:note>
<db:para>The lightmapper takes the <db:link xlink:href="qml-qtquick3d-principledmaterial.xml#opacity-prop">material's opacity</db:link> and the <db:link xlink:href="qml-qtquick3d-principledmaterial.xml#baseColor-prop">baseColor alpha</db:link> combined with the <db:link xlink:href="qml-qtquick3d-principledmaterial.xml#baseColorMap-prop">base color map's alpha</db:link> into account. Other sources of semi-transparency, such as the opacity map or alpha cut-off settings are ignored during the lightmap baking process.</db:para>
</db:note>
</db:section>
<db:section xml:id="samples-prop">
<db:title>samples : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>samples</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The number of samples per lightmap texel.</db:para>
<db:para>The default value is 256.</db:para>
<db:para>The value heavily affects both the performance and quality of the resulting lightmaps during lightmap baking.</db:para>
</db:section>
</db:section>
</db:article>
