<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QFocusEvent Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qfocusevent.xml">QFocusEvent</db:link> class contains event parameters for widget focus events.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QFocusEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qevent.xml" xlink:role="class">QEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QFocusEvent is part of <db:simplelist><db:member>events</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Focus events are sent to widgets when the keyboard input focus changes. Focus events occur due to mouse actions, key presses (such as <db:guilabel>Tab</db:guilabel> or <db:guilabel>Backtab</db:guilabel>), the window system, popup menus, keyboard shortcuts, or other application-specific reasons. The reason for a particular focus event is returned by <db:link xlink:href="qfocusevent.xml#reason">reason</db:link>() in the appropriate event handler.</db:para>
<db:para>The event handlers <db:link xlink:href="qwidget.xml#focusInEvent">QWidget::focusInEvent</db:link>(), <db:link xlink:href="qwidget.xml#focusOutEvent">QWidget::focusOutEvent</db:link>(), <db:link xlink:href="qgraphicsitem.xml#focusInEvent">QGraphicsItem::focusInEvent</db:link> and <db:link xlink:href="qgraphicsitem.xml#focusOutEvent">QGraphicsItem::focusOutEvent</db:link>() receive focus events.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwidget.xml#setFocus-1">QWidget::setFocus</db:link>()</db:member>
<db:member><db:link xlink:href="qwidget.xml#focusPolicy-prop">QWidget::setFocusPolicy</db:link>()</db:member>
<db:member><db:link xlink:href="focus.xml">Keyboard Focus in Widgets</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QFocusEvent">
<db:title>[explicit] QFocusEvent::QFocusEvent(QEvent::Type <db:emphasis>type</db:emphasis>, Qt::FocusReason <db:emphasis>reason</db:emphasis> = Qt::OtherFocusReason)</db:title>
<db:para>Constructs a focus event object.</db:para>
<db:para>The <db:code role="parameter">type</db:code> parameter must be either <db:link xlink:href="qevent.xml#Type-enum">QEvent::FocusIn</db:link> or <db:link xlink:href="qevent.xml#Type-enum">QEvent::FocusOut</db:link>. The <db:code role="parameter">reason</db:code> describes the cause of the change in focus.</db:para>
</db:section>
<db:section xml:id="gotFocus">
<db:title>bool QFocusEvent::gotFocus() const</db:title>
<db:para>Returns <db:code>true</db:code> if <db:link xlink:href="qevent.xml#type">type</db:link>() is <db:link xlink:href="qevent.xml#Type-enum">QEvent::FocusIn</db:link>; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="lostFocus">
<db:title>bool QFocusEvent::lostFocus() const</db:title>
<db:para>Returns <db:code>true</db:code> if <db:link xlink:href="qevent.xml#type">type</db:link>() is <db:link xlink:href="qevent.xml#Type-enum">QEvent::FocusOut</db:link>; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="reason">
<db:title>Qt::FocusReason QFocusEvent::reason() const</db:title>
<db:para>Returns the reason for this focus event.</db:para>
</db:section>
</db:section>
</db:article>
