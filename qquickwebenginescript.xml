<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QQuickWebEngineScript Class</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Enables the injection of scripts in the JavaScript engine.</db:para>
<db:para>This class was introduced in Qt 5.9.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QQuickWebEngineScript</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.9</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qtwebengine-webenginescript.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qquickwebenginescript.xml">QQuickWebEngineScript</db:link> type enables the programmatic injection of so called <db:emphasis>user scripts</db:emphasis> in the JavaScript engine at different points, determined by <db:link xlink:href="qquickwebenginescript.xml#injectionPoint-prop">injectionPoint</db:link>, during the loading of web content.</db:para>
<db:para>Scripts can be executed either in the main JavaScript <db:emphasis>world</db:emphasis>, along with the rest of the JavaScript coming from the web contents, or in their own isolated world. While the DOM of the page can be accessed from any world, JavaScript variables of a function defined in one world are not accessible from a different one. The <db:link xlink:href="qquickwebenginescript.xml#worldId-prop">worldId</db:link> property provides some predefined IDs for this purpose.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="InjectionPoint-enum">
<db:title>enum QQuickWebEngineScript::InjectionPoint</db:title>
<db:enumsynopsis>
<db:enumname>InjectionPoint</db:enumname>
<db:enumitem>
<db:enumidentifier>Deferred</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DocumentReady</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DocumentCreation</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>The point in the loading process at which the script will be executed.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qquickwebenginescript.xml">QQuickWebEngineScript</db:link></db:emphasis>::DocumentCreation</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The script will be executed as soon as the document is created. This is not suitable for any DOM operation.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qquickwebenginescript.xml">QQuickWebEngineScript</db:link></db:emphasis>::DocumentReady</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The script will run as soon as the DOM is ready. This is equivalent to the <db:code>DOMContentLoaded</db:code> event firing in JavaScript.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qquickwebenginescript.xml">QQuickWebEngineScript</db:link></db:emphasis>::Deferred</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The script will run when the page load finishes, or 500 ms after the document is ready, whichever comes first.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="ScriptWorldId-enum">
<db:title>enum QQuickWebEngineScript::ScriptWorldId</db:title>
<db:enumsynopsis>
<db:enumname>ScriptWorldId</db:enumname>
<db:enumitem>
<db:enumidentifier>MainWorld</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ApplicationWorld</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>UserWorld</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>The world ID defining which isolated world the script is executed in. Besides these predefined IDs custom IDs can be used, but must be integers between <db:code>0</db:code> and <db:code>256</db:code>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qquickwebenginescript.xml">QQuickWebEngineScript</db:link></db:emphasis>::MainWorld</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The world used by the page's web contents. It can be useful in order to expose custom functionality to web contents in certain scenarios.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qquickwebenginescript.xml">QQuickWebEngineScript</db:link></db:emphasis>::ApplicationWorld</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The default isolated world used for application level functionality implemented in JavaScript.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qquickwebenginescript.xml">QQuickWebEngineScript</db:link></db:emphasis>::UserWorld</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The first isolated world to be used by scripts set by users if the application is not making use of more worlds. As a rule of thumb, if that functionality is exposed to the application users, each individual script should probably get its own isolated world.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="injectionPoint-prop">
<db:title>injectionPoint : InjectionPoint</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>InjectionPoint</db:type>
<db:varname>injectionPoint</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">injectionPoint</db:synopsisinfo>
<db:synopsisinfo role="setter">setInjectionPoint</db:synopsisinfo>
<db:synopsisinfo role="notifier">injectionPointChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the point in the loading process at which the script will be executed.</db:para>
<db:para>The default value is <db:code>Deferred</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qquickwebenginescript.xml#InjectionPoint-enum">QQuickWebEngineScript::InjectionPoint</db:link></db:type> <db:emphasis role="bold">injectionPoint</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setInjectionPoint</db:emphasis>(<db:type><db:link xlink:href="qquickwebenginescript.xml#InjectionPoint-enum">QQuickWebEngineScript::InjectionPoint</db:link></db:type> <db:emphasis>injectionPoint</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">injectionPointChanged</db:emphasis>(<db:type><db:link xlink:href="qquickwebenginescript.xml#InjectionPoint-enum">QQuickWebEngineScript::InjectionPoint</db:link></db:type> <db:emphasis>injectionPoint</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="name-prop">
<db:title>name : QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>name</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">name</db:synopsisinfo>
<db:synopsisinfo role="setter">setName</db:synopsisinfo>
<db:synopsisinfo role="notifier">nameChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the name of the script.</db:para>
<db:para>Can be useful to retrieve a particular script from <db:link xlink:href="qquickwebengineprofile.xml#userScripts-prop">QQuickWebEngineProfile::userScripts</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">name</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setName</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>name</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">nameChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>name</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="runOnSubframes-prop">
<db:title>runOnSubframes : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>runOnSubframes</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">runOnSubframes</db:synopsisinfo>
<db:synopsisinfo role="setter">setRunOnSubframes</db:synopsisinfo>
<db:synopsisinfo role="notifier">runOnSubframesChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the script is executed on every frame or only on the main frame.</db:para>
<db:para>Set this property to <db:code>true</db:code> if the script is executed on every frame in the page, or <db:code>false</db:code> if it is only run for the main frame. The default value is <db:code>false</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">runOnSubframes</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setRunOnSubframes</db:emphasis>(<db:type>bool</db:type> <db:emphasis>on</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">runOnSubframesChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>on</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="sourceCode-prop">
<db:title>sourceCode : QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>sourceCode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">sourceCode</db:synopsisinfo>
<db:synopsisinfo role="setter">setSourceCode</db:synopsisinfo>
<db:synopsisinfo role="notifier">sourceCodeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the JavaScript source code of the user script.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">sourceCode</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSourceCode</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>code</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">sourceCodeChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>code</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qquickwebenginescript.xml#sourceUrl-prop">QQuickWebEngineScript::sourceUrl</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sourceUrl-prop">
<db:title>sourceUrl : QUrl</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QUrl</db:type>
<db:varname>sourceUrl</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">sourceUrl</db:synopsisinfo>
<db:synopsisinfo role="setter">setSourceUrl</db:synopsisinfo>
<db:synopsisinfo role="notifier">sourceUrlChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the remote source location of the user script (if any).</db:para>
<db:para>Unlike <db:link xlink:href="qquickwebenginescript.xml#sourceCode-prop">sourceCode</db:link>, this property allows referring to user scripts that are not already loaded in memory, for instance, when stored on disk.</db:para>
<db:para>Setting this property will change the <db:link xlink:href="qquickwebenginescript.xml#sourceCode-prop">sourceCode</db:link> of the script.</db:para>
<db:note>
<db:para>At present, only file-based sources are supported.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> <db:emphasis role="bold">sourceUrl</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSourceUrl</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>url</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">sourceUrlChanged</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>url</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qquickwebenginescript.xml#sourceCode-prop">QQuickWebEngineScript::sourceCode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="worldId-prop">
<db:title>worldId : ScriptWorldId</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>ScriptWorldId</db:type>
<db:varname>worldId</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">worldId</db:synopsisinfo>
<db:synopsisinfo role="setter">setWorldId</db:synopsisinfo>
<db:synopsisinfo role="notifier">worldIdChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the world ID defining which isolated world the script is executed in.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qquickwebenginescript.xml#ScriptWorldId-enum">QQuickWebEngineScript::ScriptWorldId</db:link></db:type> <db:emphasis role="bold">worldId</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setWorldId</db:emphasis>(<db:type><db:link xlink:href="qquickwebenginescript.xml#ScriptWorldId-enum">QQuickWebEngineScript::ScriptWorldId</db:link></db:type> <db:emphasis>scriptWorldId</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">worldIdChanged</db:emphasis>(<db:type><db:link xlink:href="qquickwebenginescript.xml#ScriptWorldId-enum">QQuickWebEngineScript::ScriptWorldId</db:link></db:type> <db:emphasis>scriptWorldId</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QQuickWebEngineScript">
<db:title>[explicit] QQuickWebEngineScript::QQuickWebEngineScript(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:constructorsynopsis>
<db:methodname>QQuickWebEngineScript</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>Q_NULLPTR</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QQuickWebEngineScript(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qquickwebenginescript.xml">QQuickWebEngineScript</db:link> with the parent <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="toString">
<db:title>QString QQuickWebEngineScript::toString() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>toString</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString toString() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the script object as string.</db:para>
</db:section>
</db:section>
</db:article>
