<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Concentric Circles Example</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates the improved quality that antialiasing and floating point precision gives.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;circlewidget.h&quot;
#include &quot;window.h&quot;

#include &lt;QtWidgets&gt;

Window::Window()
{
    aliasedLabel = createLabel(tr(&quot;Aliased&quot;));
    antialiasedLabel = createLabel(tr(&quot;Antialiased&quot;));
    intLabel = createLabel(tr(&quot;Int&quot;));
    floatLabel = createLabel(tr(&quot;Float&quot;));

    QGridLayout *layout = new QGridLayout;
    layout-&gt;addWidget(aliasedLabel, 0, 1);
    layout-&gt;addWidget(antialiasedLabel, 0, 2);
    layout-&gt;addWidget(intLabel, 1, 0);
    layout-&gt;addWidget(floatLabel, 2, 0);

    QTimer *timer = new QTimer(this);

    for (int i = 0; i &lt; 2; ++i) {
        for (int j = 0; j &lt; 2; ++j) {
            circleWidgets[i][j] = new CircleWidget;
            circleWidgets[i][j]-&gt;setAntialiased(j != 0);
            circleWidgets[i][j]-&gt;setFloatBased(i != 0);

            connect(timer, SIGNAL(timeout()),
                    circleWidgets[i][j], SLOT(nextAnimationFrame()));

            layout-&gt;addWidget(circleWidgets[i][j], i + 1, j + 1);
        }
    }
    timer-&gt;start(100);
    setLayout(layout);

    setWindowTitle(tr(&quot;Concentric Circles&quot;));
}

QLabel *Window::createLabel(const QString &amp;text)
{
    QLabel *label = new QLabel(text);
    label-&gt;setAlignment(Qt::AlignCenter);
    label-&gt;setMargin(2);
    label-&gt;setFrameStyle(QFrame::Box | QFrame::Sunken);
    return label;
}

</db:programlisting>
</db:article>
