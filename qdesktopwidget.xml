<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QDesktopWidget Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdesktopwidget.xml">QDesktopWidget</db:link> class provides access to screen information on multi-head systems.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDesktopWidget</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qwidget.xml" xlink:role="class">QWidget</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QDesktopWidget is part of <db:simplelist><db:member>advanced</db:member><db:member>desktop</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Systems with more than one graphics card and monitor can manage the physical screen space available either as multiple desktops, or as a large virtual desktop.</db:para>
<db:para>This class provides information about the user's desktop, such as its total size, number of screens, the geometry of each screen, and whether they are configured as separate desktops or a single virtual desktop.</db:para>
<db:para>Widgets provided by Qt use this class to place tooltips, menus and dialog boxes on the correct screen for their parent or application widgets. Applications can use this class to obtain information that can be used to save window positions, or to place child widgets and dialogs on one particular screen.</db:para>
<db:section xml:id="obtaining-a-desktop-widget">
<db:title>Obtaining a Desktop Widget</db:title>
<db:para>The <db:link xlink:href="qapplication.xml#desktop">QApplication::desktop</db:link>() function is used to get an instance of <db:link xlink:href="qdesktopwidget.xml">QDesktopWidget</db:link>.</db:para>
<db:para>The widget's <db:link xlink:href="qdesktopwidget.xml#screenGeometry">screenGeometry</db:link>() function provides information about the geometry of the available screens with. The number of screens available is returned by <db:link xlink:href="qdesktopwidget.xml#screenCount-prop">screenCount</db:link>, and the <db:link xlink:href="qdesktopwidget.xml#screenCountChanged">screenCountChanged</db:link>() signal is emitted when screens are added or removed. The screen number that a particular point or widget is located in is returned by <db:link xlink:href="qdesktopwidget.xml#screenNumber">screenNumber</db:link>().</db:para>
</db:section>
<db:section xml:id="screen-geometry">
<db:title>Screen Geometry</db:title>
<db:para>To obtain the dimensions of a particular screen, call the <db:link xlink:href="qdesktopwidget.xml#screenGeometry">screenGeometry</db:link>() function. On some desktop environments, not all of the screen is available for applications to use; for example, an application dock or menu bar may take up some space. Use the <db:link xlink:href="qdesktopwidget.xml#availableGeometry">availableGeometry</db:link>() function to obtain the available area for applications.</db:para>
<db:para><db:link xlink:href="qdesktopwidget.xml">QDesktopWidget</db:link> also inherits the <db:link xlink:href="qwidget.xml">QWidget</db:link> properties, <db:link xlink:href="qwidget.xml#width-prop">width</db:link>() and <db:link xlink:href="qwidget.xml#height-prop">height</db:link>(), which specify the size of the desktop. However, for desktops with multiple screens, the size of the desktop is the union of all the screen sizes, so <db:link xlink:href="qwidget.xml#width-prop">width</db:link>() and <db:link xlink:href="qwidget.xml#height-prop">height</db:link>() should <db:emphasis>not</db:emphasis> be used for computing the size of a widget to be placed on one of the screens.</db:para>
<db:para>On systems that are configured to use the available screens as a single, large virtual desktop, the <db:link xlink:href="qdesktopwidget.xml#virtualDesktop-prop">virtualDesktop</db:link> property will be set to true. In this case, the widget's size is usually the size of the bounding rectangle of all the screens.</db:para>
</db:section>
<db:section xml:id="use-of-the-primary-screen">
<db:title>Use of the Primary Screen</db:title>
<db:para>For an application, the screen where the main widget resides is the primary screen. This is stored in the <db:link xlink:href="qdesktopwidget.xml#primaryScreen-prop">primaryScreen</db:link> property. All windows opened in the context of the application should be constrained to the boundaries of the primary screen; for example, it would be inconvenient if a dialog box popped up on a different screen, or split over two screens.</db:para>
<db:mediaobject>
<db:alt>Managing Multiple Screens</db:alt>
<db:imageobject>
<db:imagedata fileref="images/qdesktopwidget.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>In the illustration above, Application One's primary screen is screen 0, and App Two's primary screen is screen 1.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qapplication.xml">QApplication</db:link></db:member>
<db:member><db:link xlink:href="qapplication.xml#desktop">QApplication::desktop</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="primaryScreen-prop">
<db:title>[read-only] primaryScreen : const int</db:title>
<db:para>This property holds the index of the screen that is configured to be the primary screen on the system.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">primaryScreen</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qdesktopwidget.xml#primaryScreenChanged">primaryScreenChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="screenCount-prop">
<db:title>[read-only, since 4.6] screenCount : const int</db:title>
<db:para>This property holds the number of screens currently available on the system.</db:para>
<db:para>This property was introduced in Qt 4.6.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">screenCount</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qdesktopwidget.xml#screenCountChanged">screenCountChanged</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>newCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="virtualDesktop-prop">
<db:title>[read-only] virtualDesktop : const bool</db:title>
<db:para>if the system manages the available screens in a virtual desktop.</db:para>
<db:para>For virtual desktops, <db:link xlink:href="qdesktopwidget.xml#screen">screen</db:link>() will always return the same widget. The size of the virtual desktop is the size of this desktop widget.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isVirtualDesktop</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="availableGeometry">
<db:title>const QRect QDesktopWidget::availableGeometry(int <db:emphasis>screen</db:emphasis> = -1) const</db:title>
<db:para>Returns the available geometry of the screen with index <db:code role="parameter">screen</db:code>. What is available will be subrect of <db:link xlink:href="qdesktopwidget.xml#screenGeometry">screenGeometry</db:link>() based on what the platform decides is available (for example excludes the dock and menu bar on macOS, or the task bar on Windows). The default screen is used if <db:code role="parameter">screen</db:code> is -1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesktopwidget.xml#screenNumber">screenNumber</db:link>()</db:member>
<db:member><db:link xlink:href="qdesktopwidget.xml#screenGeometry">screenGeometry</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="availableGeometry-1">
<db:title>const QRect QDesktopWidget::availableGeometry(const QPoint &amp;<db:emphasis>p</db:emphasis>) const</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns the available geometry of the screen which contains <db:code role="parameter">p</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesktopwidget.xml#screenGeometry">screenGeometry</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="availableGeometry-2">
<db:title>const QRect QDesktopWidget::availableGeometry(const QWidget *<db:emphasis>widget</db:emphasis>) const</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns the available geometry of the screen which contains <db:code role="parameter">widget</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesktopwidget.xml#screenGeometry">screenGeometry</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="primaryScreenChanged">
<db:title>[since 5.6] void QDesktopWidget::primaryScreenChanged()</db:title>
<db:para>This signal is emitted whenever the primary screen changes.</db:para>
<db:note>
<db:para>This doesn't mean the <db:link xlink:href="qdesktopwidget.xml#primaryScreen-prop">QDesktopWidget::primaryScreen</db:link> index will necessarily be different, but now it will refer to the new primary screen.</db:para>
</db:note>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qdesktopwidget.xml#primaryScreen-prop">primaryScreen</db:link>. </db:para>
</db:note>
<db:para>This function was introduced in Qt 5.6.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesktopwidget.xml#primaryScreen-prop">primaryScreen</db:link></db:member>
<db:member><db:link xlink:href="qdesktopwidget.xml#screenGeometry">screenGeometry</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="resizeEvent">
<db:title>[override virtual protected] void QDesktopWidget::resizeEvent(QResizeEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#resizeEvent" role="function">QWidget::resizeEvent(QResizeEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="resized">
<db:title>void QDesktopWidget::resized(int <db:emphasis>screen</db:emphasis>)</db:title>
<db:para>This signal is emitted when the size of <db:code role="parameter">screen</db:code> changes.</db:para>
</db:section>
<db:section xml:id="screen">
<db:title>QWidget *QDesktopWidget::screen(int <db:emphasis>screen</db:emphasis> = -1)</db:title>
<db:para>Returns a widget that represents the screen with index <db:code role="parameter">screen</db:code> (a value of -1 means the default screen).</db:para>
<db:para>If the system uses a virtual desktop, the returned widget will have the geometry of the entire virtual desktop; i.e., bounding every <db:code role="parameter">screen</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesktopwidget.xml#primaryScreen-prop">primaryScreen</db:link></db:member>
<db:member><db:link xlink:href="qdesktopwidget.xml#screenCount-prop">screenCount</db:link></db:member>
<db:member><db:link xlink:href="qdesktopwidget.xml#virtualDesktop-prop">virtualDesktop</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="screenCountChanged">
<db:title>[since 4.6] void QDesktopWidget::screenCountChanged(int <db:emphasis>newCount</db:emphasis>)</db:title>
<db:para>This signal is emitted when the number of screens changes to <db:code role="parameter">newCount</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qdesktopwidget.xml#screenCount-prop">screenCount</db:link>. </db:para>
</db:note>
<db:para>This function was introduced in Qt 4.6.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesktopwidget.xml#screenCount-prop">screenCount</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="screenGeometry">
<db:title>const QRect QDesktopWidget::screenGeometry(int <db:emphasis>screen</db:emphasis> = -1) const</db:title>
<db:para>Returns the geometry of the screen with index <db:code role="parameter">screen</db:code>. The default screen is used if <db:code role="parameter">screen</db:code> is -1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesktopwidget.xml#screenNumber">screenNumber</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="screenGeometry-1">
<db:title>const QRect QDesktopWidget::screenGeometry(const QPoint &amp;<db:emphasis>p</db:emphasis>) const</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns the geometry of the screen which contains <db:code role="parameter">p</db:code>.</db:para>
</db:section>
<db:section xml:id="screenGeometry-2">
<db:title>const QRect QDesktopWidget::screenGeometry(const QWidget *<db:emphasis>widget</db:emphasis>) const</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns the geometry of the screen which contains <db:code role="parameter">widget</db:code>.</db:para>
</db:section>
<db:section xml:id="screenNumber">
<db:title>int QDesktopWidget::screenNumber(const QWidget *<db:emphasis>widget</db:emphasis> = Q_NULLPTR) const</db:title>
<db:para>Returns the index of the screen that contains the largest part of <db:code role="parameter">widget</db:code>, or -1 if the widget not on a screen.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesktopwidget.xml#primaryScreen-prop">primaryScreen</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="screenNumber-1">
<db:title>int QDesktopWidget::screenNumber(const QPoint &amp;<db:emphasis>point</db:emphasis>) const</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns the index of the screen that contains the <db:code role="parameter">point</db:code>, or the screen which is the shortest distance from the <db:code role="parameter">point</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesktopwidget.xml#primaryScreen-prop">primaryScreen</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="workAreaResized">
<db:title>void QDesktopWidget::workAreaResized(int <db:emphasis>screen</db:emphasis>)</db:title>
<db:para>This signal is emitted when the work area available on <db:code role="parameter">screen</db:code> changes.</db:para>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for QDesktopWidget</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qdesktopwidget.xml">QDesktopWidget</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-member-function-documentation">
<db:title>Obsolete Member Function Documentation</db:title>
<db:section xml:id="numScreens">
<db:title>[deprecated] int QDesktopWidget::numScreens() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Returns the number of available screens.</db:para>
<db:para>This function is deprecated. Use <db:link xlink:href="qdesktopwidget.xml#screenCount-prop">screenCount</db:link> instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesktopwidget.xml#primaryScreen-prop">primaryScreen</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:section>
</db:article>
