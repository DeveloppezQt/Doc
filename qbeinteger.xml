<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QBEInteger Class</db:title>
<db:subtitle>template &lt;typename T&gt; class QBEInteger</db:subtitle>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> class provides platform-independent big-endian integers.</db:para>
<db:para>This class was introduced in Qt 5.10.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QBEInteger</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.10</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Core)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Core)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The template parameter T must be a C++ integer type:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>8-bit: char, signed char, unsigned char, qint8, quint8</db:para>
</db:listitem>
<db:listitem>
<db:para>16-bit: short, unsigned short, qint16, quint16, char16_t (C++11)</db:para>
</db:listitem>
<db:listitem>
<db:para>32-bit: int, unsigned int, qint32, quint32, char32_t (C++11)</db:para>
</db:listitem>
<db:listitem>
<db:para>64-bit: long long, unsigned long long, qint64, quint64</db:para>
</db:listitem>
<db:listitem>
<db:para>platform-specific size: long, unsigned long</db:para>
</db:listitem>
<db:listitem>
<db:para>pointer size: qintptr, quintptr, qptrdiff</db:para>
</db:listitem>
</db:itemizedlist>
<db:note>
<db:para>Using this class may be slower than using native integers, so only use it when an exact endianness is needed.</db:para>
</db:note>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QBEInteger">
<db:title>[explicit constexpr] QBEInteger::QBEInteger(T <db:emphasis>value</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QBEInteger</db:methodname>
<db:methodparam>
<db:type>T</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger(T value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> with the given <db:code role="parameter">value</db:code>.</db:para>
</db:section>
<db:section xml:id="max">
<db:title>[static constexpr] QBEInteger&lt;T&gt; QBEInteger::max()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QBEInteger&lt;T&gt;</db:type>
<db:methodname>max</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; max()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the maximum (finite) value representable by the numeric type T.</db:para>
</db:section>
<db:section xml:id="min">
<db:title>[static constexpr] QBEInteger&lt;T&gt; QBEInteger::min()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QBEInteger&lt;T&gt;</db:type>
<db:methodname>min</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; min()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the minimum (finite) value representable by the numeric type T.</db:para>
</db:section>
<db:section xml:id="operator-T">
<db:title>T QBEInteger::operator T() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>T</db:type>
<db:methodname>operator T</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">T operator T() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the value of this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> as a native integer.</db:para>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QBEInteger::operator!=(QBEInteger&lt;T&gt; <db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator!=</db:methodname>
<db:methodparam>
<db:type>QBEInteger&lt;T&gt;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator!=(QBEInteger&lt;T&gt; other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if the value of this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> is not equal to the value of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-25-eq">
<db:title>QBEInteger&lt;T&gt; &amp;QBEInteger::operator%=(T <db:emphasis>i</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt; &amp;</db:type>
<db:methodname>operator%=</db:methodname>
<db:methodparam>
<db:type>T</db:type>
<db:parameter>i</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; &amp; operator%=(T i)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> to the remainder of a division by <db:code role="parameter">i</db:code> and returns a reference to this object.</db:para>
</db:section>
<db:section xml:id="operator-and-eq">
<db:title>QBEInteger&lt;T&gt; &amp;QBEInteger::operator&amp;=(T <db:emphasis>i</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt; &amp;</db:type>
<db:methodname>operator&amp;=</db:methodname>
<db:methodparam>
<db:type>T</db:type>
<db:parameter>i</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; &amp; operator&amp;=(T i)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Performs a bitwise AND with <db:code role="parameter">i</db:code> onto this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> and returns a reference to this object.</db:para>
</db:section>
<db:section xml:id="operator-2a-eq">
<db:title>QBEInteger&lt;T&gt; &amp;QBEInteger::operator*=(T <db:emphasis>i</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt; &amp;</db:type>
<db:methodname>operator*=</db:methodname>
<db:methodparam>
<db:type>T</db:type>
<db:parameter>i</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; &amp; operator*=(T i)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Multiplies <db:code role="parameter">i</db:code> with this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> and returns a reference to this object.</db:para>
</db:section>
<db:section xml:id="operator-2b-2b">
<db:title>QBEInteger&lt;T&gt; &amp;QBEInteger::operator++()</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt; &amp;</db:type>
<db:methodname>operator++</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; &amp; operator++()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Performs a prefix ++ (increment) on this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> and returns a reference to this object.</db:para>
</db:section>
<db:section xml:id="operator-2b-2b-1">
<db:title>QBEInteger&lt;T&gt; QBEInteger::operator++(<db:emphasis>int</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt;</db:type>
<db:methodname>operator++</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter></db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; operator++(int)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Performs a postfix ++ (increment) on this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> and returns a reference to this object.</db:para>
</db:section>
<db:section xml:id="operator-2b-eq">
<db:title>QBEInteger&lt;T&gt; &amp;QBEInteger::operator+=(T <db:emphasis>i</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt; &amp;</db:type>
<db:methodname>operator+=</db:methodname>
<db:methodparam>
<db:type>T</db:type>
<db:parameter>i</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; &amp; operator+=(T i)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Adds <db:code role="parameter">i</db:code> to this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> and returns a reference to this object.</db:para>
</db:section>
<db:section xml:id="operator--">
<db:title>QBEInteger&lt;T&gt; &amp;QBEInteger::operator--()</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt; &amp;</db:type>
<db:methodname>operator--</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; &amp; operator--()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Performs a prefix – (decrement) on this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> and returns a reference to this object.</db:para>
</db:section>
<db:section xml:id="operator---1">
<db:title>QBEInteger&lt;T&gt; QBEInteger::operator--(<db:emphasis>int</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt;</db:type>
<db:methodname>operator--</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter></db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; operator--(int)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Performs a postfix – (decrement) on this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> and returns a reference to this object.</db:para>
</db:section>
<db:section xml:id="operator--eq">
<db:title>QBEInteger&lt;T&gt; &amp;QBEInteger::operator-=(T <db:emphasis>i</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt; &amp;</db:type>
<db:methodname>operator-=</db:methodname>
<db:methodparam>
<db:type>T</db:type>
<db:parameter>i</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; &amp; operator-=(T i)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Subtracts <db:code role="parameter">i</db:code> from this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> and returns a reference to this object.</db:para>
</db:section>
<db:section xml:id="operator-2f-eq">
<db:title>QBEInteger&lt;T&gt; &amp;QBEInteger::operator/=(T <db:emphasis>i</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt; &amp;</db:type>
<db:methodname>operator/=</db:methodname>
<db:methodparam>
<db:type>T</db:type>
<db:parameter>i</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; &amp; operator/=(T i)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Divides this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> with <db:code role="parameter">i</db:code> and returns a reference to this object.</db:para>
</db:section>
<db:section xml:id="operator-lt-lt-eq">
<db:title>QBEInteger&lt;T&gt; &amp;QBEInteger::operator&lt;&lt;=(T <db:emphasis>i</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt; &amp;</db:type>
<db:methodname>operator&lt;&lt;=</db:methodname>
<db:methodparam>
<db:type>T</db:type>
<db:parameter>i</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; &amp; operator&lt;&lt;=(T i)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Performs a right-shift by <db:code role="parameter">i</db:code> on this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> and returns a reference to this object.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QBEInteger&lt;T&gt; &amp;QBEInteger::operator=(T <db:emphasis>i</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt; &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>T</db:type>
<db:parameter>i</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; &amp; operator=(T i)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Assigns <db:code role="parameter">i</db:code> to this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> and returns a reference to this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link>.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QBEInteger::operator==(QBEInteger&lt;T&gt; <db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>QBEInteger&lt;T&gt;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(QBEInteger&lt;T&gt; other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if the value of this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> is equal to the value of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-gt-gt-eq">
<db:title>QBEInteger&lt;T&gt; &amp;QBEInteger::operator&gt;&gt;=(T <db:emphasis>i</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt; &amp;</db:type>
<db:methodname>operator&gt;&gt;=</db:methodname>
<db:methodparam>
<db:type>T</db:type>
<db:parameter>i</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; &amp; operator&gt;&gt;=(T i)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Performs a left-shift by <db:code role="parameter">i</db:code> on this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> and returns a reference to this object.</db:para>
</db:section>
<db:section xml:id="operator-5e-eq">
<db:title>QBEInteger&lt;T&gt; &amp;QBEInteger::operator^=(T <db:emphasis>i</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt; &amp;</db:type>
<db:methodname>operator^=</db:methodname>
<db:methodparam>
<db:type>T</db:type>
<db:parameter>i</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; &amp; operator^=(T i)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Performs a bitwise XOR with <db:code role="parameter">i</db:code> onto this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> and returns a reference to this object.</db:para>
</db:section>
<db:section xml:id="operator-7c-eq">
<db:title>QBEInteger&lt;T&gt; &amp;QBEInteger::operator|=(T <db:emphasis>i</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QBEInteger&lt;T&gt; &amp;</db:type>
<db:methodname>operator|=</db:methodname>
<db:methodparam>
<db:type>T</db:type>
<db:parameter>i</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBEInteger&lt;T&gt; &amp; operator|=(T i)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Performs a bitwise OR with <db:code role="parameter">i</db:code> onto this <db:link xlink:href="qbeinteger.xml">QBEInteger</db:link> and returns a reference to this object.</db:para>
</db:section>
</db:section>
</db:article>
