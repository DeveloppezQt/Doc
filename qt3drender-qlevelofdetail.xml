<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QLevelOfDetail Class</db:title>
<db:subtitle>Qt3DRender::QLevelOfDetail</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qt3drender-qlevelofdetail.xml">QLevelOfDetail</db:link> class provides a way of controlling the complexity of rendered entities based on their size on the screen.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QLevelOfDetail</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-levelofdetail.xml" xlink:role="">LevelOfDetail</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qcomponent.xml" xlink:role="class">Qt3DCore::QComponent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qlevelofdetailswitch.xml" xlink:role="class">Qt3DRender::QLevelOfDetailSwitch</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qt3drender-qlevelofdetail.xml">QLevelOfDetail</db:link> can be used to control the representation of an entity based on distance from the observer or size on the screen.</db:para>
<db:para>In order to improve rendering performance, objects that are very small can be rendered using far fewer details, in geometry or texture.</db:para>
<db:para>The component is controlled by specifying thresholds of values which are interpreted as either distances from the camera or screen size.</db:para>
<db:para>As the point of view changes, the <db:link xlink:href="qt3drender-qlevelofdetail.xml#currentIndex-prop">currentIndex</db:link> property will change to reflect matching value in the range array.</db:para>
<db:para>The <db:link xlink:href="qt3drender-qlevelofdetail.xml#currentIndex-prop">currentIndex</db:link> property can then be used, for example, to enable or disable entities, change material, etc.</db:para>
<db:para>The <db:link xlink:href="qml-qt3d-render-levelofdetail.xml">LevelOfDetail</db:link> component is not shareable between multiple <db:link xlink:href="qml-qt3d-core-entity.xml">entities</db:link>.</db:para>
<db:programlisting language="cpp"> #include &lt;Qt3DCore/QEntity&gt;
 #include &lt;Qt3DRender/QGeometryRenderer&gt;
 #include &lt;Qt3DRender/QLevelOfDetail&gt;

// Scene
Qt3DCore::QEntity *rootEntity = new Qt3DCore::Qt3DCore::QEntity;

Qt3DCore::QEntity *renderableEntity = new Qt3DCore::QEntity(rootEntity);
Qt3DRender::QGeometryRenderer *geometryRenderer = new Qt3DCore::QGeometryRenderer(renderableEntity);
renderableEntity-&gt;addComponent(geometryRenderer);
Qt3DRender::QLevelOfDetail* lod = new Qt3Render::QLevelOfDetail(renderableEntity);
QList&lt;qreal&gt; thresholds = {20, 35, 50, 65};
lod-&gt;setThresholds(thresholds);
lod-&gt;setCamera(mainCamera);
renderableEntity-&gt;addComponent(lod);

// connect to QLevelOfDetail::currentIndexChanged to toggle rendering
...
</db:programlisting>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="ThresholdType-enum">
<db:title>enum QLevelOfDetail::ThresholdType</db:title>
<db:para>Specifies how the values in the thresholds are interpreted</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qlevelofdetail.xml">QLevelOfDetail</db:link></db:emphasis>::DistanceToCameraThreshold</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Distance from the entity to the selected camera</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qlevelofdetail.xml">QLevelOfDetail</db:link></db:emphasis>::ProjectedScreenPixelSizeThreshold</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Size of the entity when projected on the screen as seen from the selected camera, expressed in number of pixels on the side of the bounding square in screen space.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="camera-prop">
<db:title>camera : Qt3DRender::QCamera*</db:title>
<db:para>Holds the id of the camera that is used to compute the actual distance or the screen size.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qcamera.xml">Qt3DRender::QCamera</db:link></db:type> *<db:emphasis role="bold">camera</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qlevelofdetail.xml#setCamera">setCamera</db:link></db:emphasis>(<db:type><db:link xlink:href="qt3drender-qcamera.xml">Qt3DRender::QCamera</db:link></db:type> *<db:emphasis>camera</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">cameraChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qcamera.xml">Qt3DRender::QCamera</db:link></db:type> *<db:emphasis>camera</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="currentIndex-prop">
<db:title>currentIndex : int</db:title>
<db:para>The index in the range array which matches the current distance to the camera or screen size.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">currentIndex</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qlevelofdetail.xml#setCurrentIndex">setCurrentIndex</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>currentIndex</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">currentIndexChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>currentIndex</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="thresholdType-prop">
<db:title>thresholdType : ThresholdType</db:title>
<db:para>Specifies how range values are interpreted.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qlevelofdetail.xml#ThresholdType-enum">Qt3DRender::QLevelOfDetail::ThresholdType</db:link></db:type> <db:emphasis role="bold">thresholdType</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qlevelofdetail.xml#setThresholdType">setThresholdType</db:link></db:emphasis>(<db:type><db:link xlink:href="qt3drender-qlevelofdetail.xml#ThresholdType-enum">Qt3DRender::QLevelOfDetail::ThresholdType</db:link></db:type> <db:emphasis>thresholdType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">thresholdTypeChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qlevelofdetail.xml#ThresholdType-enum">Qt3DRender::QLevelOfDetail::ThresholdType</db:link></db:type> <db:emphasis>thresholdType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qlevelofdetail.xml#ThresholdType-enum">Qt3DRender::QLevelOfDetail::ThresholdType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="thresholds-prop">
<db:title>thresholds : QList&lt;qreal&gt;</db:title>
<db:para>Array of range values as float point numbers. The value for the most detailed representation should be specified first.</db:para>
<db:para>If <db:link xlink:href="qt3drender-qlevelofdetail.xml#thresholdType-prop">Qt3DRender::QLevelOfDetail::thresholdType</db:link> is set to <db:link xlink:href="qt3drender-qlevelofdetail.xml#ThresholdType-enum">Qt3DRender::QLevelOfDetail::DistanceToCameraThreshold</db:link>, values should be specified in ascending order, in camera space coordinates</db:para>
<db:para>If <db:link xlink:href="qt3drender-qlevelofdetail.xml#thresholdType-prop">Qt3DRender::QLevelOfDetail::thresholdType</db:link> is set to <db:link xlink:href="qt3drender-qlevelofdetail.xml#ThresholdType-enum">Qt3DRender::QLevelOfDetail::ProjectedScreenPixelSizeThreshold</db:link>, values should be specified in descending order, in screen space pixels.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QList</db:type>&lt;<db:type>qreal</db:type>&gt; <db:emphasis role="bold">thresholds</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qlevelofdetail.xml#setThresholds">setThresholds</db:link></db:emphasis>(const <db:type>QList</db:type>&lt;<db:type>qreal</db:type>&gt; &amp;<db:emphasis>thresholds</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">thresholdsChanged</db:emphasis>(const <db:type>QList</db:type>&lt;<db:type>qreal</db:type>&gt; &amp;<db:emphasis>thresholds</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qlevelofdetail.xml#ThresholdType-enum">Qt3DRender::QLevelOfDetail::ThresholdType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="volumeOverride-prop">
<db:title>volumeOverride : Qt3DRender::QLevelOfDetailBoundingSphere</db:title>
<db:para>The default is a sphere of radius 1 and centered at the local origin of the entity. This proxy volume is used to compute the distance to the camera or the size of the screen projection.</db:para>
<db:para>If this value to nullptr, the bounding volume of the entity is used. Care must be taken that this bounding volume never becomes invalid.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qlevelofdetailboundingsphere.xml">Qt3DRender::QLevelOfDetailBoundingSphere</db:link></db:type> <db:emphasis role="bold">volumeOverride</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setVolumeOverride</db:emphasis>(const <db:type><db:link xlink:href="qt3drender-qlevelofdetailboundingsphere.xml">Qt3DRender::QLevelOfDetailBoundingSphere</db:link></db:type> &amp;<db:emphasis>volumeOverride</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">volumeOverrideChanged</db:emphasis>(const <db:type><db:link xlink:href="qt3drender-qlevelofdetailboundingsphere.xml">Qt3DRender::QLevelOfDetailBoundingSphere</db:link></db:type> &amp;<db:emphasis>volumeOverride</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qlevelofdetailboundingsphere.xml">Qt3DRender::QLevelOfDetailBoundingSphere</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QLevelOfDetail">
<db:title>[explicit] QLevelOfDetail::QLevelOfDetail(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a new <db:link xlink:href="qt3drender-qlevelofdetail.xml">QLevelOfDetail</db:link> with the specified <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="setCamera">
<db:title>void QLevelOfDetail::setCamera(Qt3DRender::QCamera *<db:emphasis>camera</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">camera</db:code> relative to which distance and size are computed.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qlevelofdetail.xml#camera-prop">camera</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qlevelofdetail.xml#camera-prop">camera</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCurrentIndex">
<db:title>void QLevelOfDetail::setCurrentIndex(int <db:emphasis>currentIndex</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">currentIndex</db:code>.</db:para>
<db:note>
<db:para>This should not normally be set by the user.</db:para>
</db:note>
<db:para>However, if the component is disabled, then changing the current index is a simple way of switching between multiple representations.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qlevelofdetail.xml#currentIndex-prop">currentIndex</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qlevelofdetail.xml#currentIndex-prop">currentIndex</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setThresholdType">
<db:title>void QLevelOfDetail::setThresholdType(Qt3DRender::QLevelOfDetail::ThresholdType <db:emphasis>thresholdType</db:emphasis>)</db:title>
<db:para>Sets the way thresholds values are interpreted with parameter <db:code role="parameter">thresholdType</db:code></db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qlevelofdetail.xml#thresholdType-prop">thresholdType</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qlevelofdetail.xml#thresholdType-prop">thresholdType</db:link>()</db:member>
<db:member><db:link xlink:href="qt3drender-qlevelofdetail.xml#ThresholdType-enum">Qt3DRender::QLevelOfDetail::ThresholdType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setThresholds">
<db:title>void QLevelOfDetail::setThresholds(const QList&lt;qreal&gt; &amp;<db:emphasis>thresholds</db:emphasis>)</db:title>
<db:para>Sets the range values in <db:code role="parameter">thresholds</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qlevelofdetail.xml#thresholds-prop">thresholds</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qlevelofdetail.xml#thresholds-prop">thresholds</db:link>()</db:member>
<db:member><db:link xlink:href="qt3drender-qlevelofdetail.xml#thresholdType-prop">Qt3DRender::QLevelOfDetail::thresholdType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
