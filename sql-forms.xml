<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Creating Data-Aware Forms</db:title>
<db:productname>QtSql</db:productname>
<db:edition>Qt 5.5.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt SQL Reference Documentation</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="sql-presenting.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Presenting Data in a Table View"/></db:extendedlink>
<db:abstract>
<db:para>Qt SQL Reference Documentation.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>SQL Programming</db:para>
<db:para>Using the SQL models described above, the contents of a database can be presented to other model/view components. For some applications, it is sufficient to present this data using a standard item view, such as QTableView. However, users of record-based applications often require a form-based user interface in which data from a specific row or column in a database table is used to populate editor widgets on a form.</db:para>
<db:para>Such data-aware forms can be created with the QDataWidgetMapper class, a generic model/view component that is used to map data from a model to specific widgets in a user interface.</db:para>
<db:para>QDataWidgetMapper operates on a specific database table, mapping items in the table on a row-by-row or column-by-column basis. As a result, using QDataWidgetMapper with a SQL model is as simple as using it with any other table model.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qdatawidgetmapper-simple.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The <db:link xlink:href="qtsql-books-example.xml">Books</db:link> example shows how information can be presented for easy access by using QDataWidgetMapper and a set of simple input widgets.</db:para>
</db:article>
