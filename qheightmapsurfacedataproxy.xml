<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QHeightMapSurfaceDataProxy Class</db:title>
<db:productname>QtGraphs</db:productname>
<db:edition>Qt Graphs | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Graphs Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Base proxy class for <db:link xlink:href="q3dsurface.xml">Q3DSurface</db:link>.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QHeightMapSurfaceDataProxy</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Graphs)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Graphs)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += graphs</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qtgraphs-heightmapsurfacedataproxy.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qsurfacedataproxy.xml" xlink:role="class">QSurfaceDataProxy</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qheightmapsurfacedataproxy.xml">QHeightMapSurfaceDataProxy</db:link> takes care of surface related height map data handling. It provides a way to give a height map to be visualized as a surface plot.</db:para>
<db:para>Since height maps do not contain values for X or Z axes, those values need to be given separately using <db:link xlink:href="qheightmapsurfacedataproxy.xml#minXValue-prop">minXValue</db:link>, <db:link xlink:href="qheightmapsurfacedataproxy.xml#maxXValue-prop">maxXValue</db:link>, <db:link xlink:href="qheightmapsurfacedataproxy.xml#minZValue-prop">minZValue</db:link>, and <db:link xlink:href="qheightmapsurfacedataproxy.xml#maxZValue-prop">maxZValue</db:link> properties. X-value corresponds to image horizontal direction and Z-value to the vertical. Setting any of these properties triggers asynchronous re-resolving of any existing height map.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsurfacedataproxy.xml">QSurfaceDataProxy</db:link></db:member>
<db:member><db:link xlink:href="qtgraphs-data-handling.xml">Qt Graphs Data Handling</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="autoScaleY-prop">
<db:title>autoScaleY : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>autoScaleY</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">autoScaleY</db:synopsisinfo>
<db:synopsisinfo role="setter">setAutoScaleY</db:synopsisinfo>
<db:synopsisinfo role="notifier">autoScaleYChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Scale height values to Y-axis.</db:para>
<db:para>Defaults to <db:code>false</db:code>.</db:para>
<db:para>When this property is set to <db:code>true</db:code>, the height values are scaled to fit on the Y-axis between <db:link xlink:href="qheightmapsurfacedataproxy.xml#minYValue-prop">minYValue</db:link> and <db:link xlink:href="qheightmapsurfacedataproxy.xml#maxYValue-prop">maxYValue</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">autoScaleY</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setAutoScaleY</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">autoScaleYChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qheightmapsurfacedataproxy.xml#minYValue-prop">minYValue</db:link></db:member>
<db:member><db:link xlink:href="qheightmapsurfacedataproxy.xml#maxYValue-prop">maxYValue</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="heightMap-prop">
<db:title>heightMap : QImage</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QImage</db:type>
<db:varname>heightMap</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">heightMap</db:synopsisinfo>
<db:synopsisinfo role="setter">setHeightMap</db:synopsisinfo>
<db:synopsisinfo role="notifier">heightMapChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the height map image to be visualized.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qimage.xml">QImage</db:link></db:type> <db:emphasis role="bold">heightMap</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qheightmapsurfacedataproxy.xml#setHeightMap">setHeightMap</db:link></db:emphasis>(const <db:type><db:link xlink:href="qimage.xml">QImage</db:link></db:type> &amp;<db:emphasis>image</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">heightMapChanged</db:emphasis>(const <db:type><db:link xlink:href="qimage.xml">QImage</db:link></db:type> &amp;<db:emphasis>image</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="heightMapFile-prop">
<db:title>heightMapFile : QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>heightMapFile</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">heightMapFile</db:synopsisinfo>
<db:synopsisinfo role="setter">setHeightMapFile</db:synopsisinfo>
<db:synopsisinfo role="notifier">heightMapFileChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the name of the file with a height map image to be visualized.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">heightMapFile</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qheightmapsurfacedataproxy.xml#setHeightMapFile">setHeightMapFile</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>filename</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">heightMapFileChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>filename</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="maxXValue-prop">
<db:title>maxXValue : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>maxXValue</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">maxXValue</db:synopsisinfo>
<db:synopsisinfo role="setter">setMaxXValue</db:synopsisinfo>
<db:synopsisinfo role="notifier">maxXValueChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the maximum X value for the generated surface points.</db:para>
<db:para>Defaults to <db:code>10.0</db:code>.</db:para>
<db:para>When setting this property the corresponding minimum value is adjusted if necessary, to ensure that the range remains valid.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">maxXValue</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMaxXValue</db:emphasis>(<db:type>float</db:type> <db:emphasis>max</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">maxXValueChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="maxYValue-prop">
<db:title>maxYValue : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>maxYValue</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">maxYValue</db:synopsisinfo>
<db:synopsisinfo role="setter">setMaxYValue</db:synopsisinfo>
<db:synopsisinfo role="notifier">maxYValueChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the maximum Y value for the generated surface points.</db:para>
<db:para>Defaults to <db:code>10.0</db:code>.</db:para>
<db:para>When setting this property the corresponding minimum value is adjusted if necessary, to ensure that the range remains valid.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">maxYValue</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMaxYValue</db:emphasis>(<db:type>float</db:type> <db:emphasis>max</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">maxYValueChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qheightmapsurfacedataproxy.xml#autoScaleY-prop">autoScaleY</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="maxZValue-prop">
<db:title>maxZValue : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>maxZValue</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">maxZValue</db:synopsisinfo>
<db:synopsisinfo role="setter">setMaxZValue</db:synopsisinfo>
<db:synopsisinfo role="notifier">maxZValueChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the maximum Z value for the generated surface points.</db:para>
<db:para>Defaults to <db:code>10.0</db:code>.</db:para>
<db:para>When setting this property the corresponding minimum value is adjusted if necessary, to ensure that the range remains valid.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">maxZValue</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMaxZValue</db:emphasis>(<db:type>float</db:type> <db:emphasis>max</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">maxZValueChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="minXValue-prop">
<db:title>minXValue : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>minXValue</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">minXValue</db:synopsisinfo>
<db:synopsisinfo role="setter">setMinXValue</db:synopsisinfo>
<db:synopsisinfo role="notifier">minXValueChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the minimum X value for the generated surface points.</db:para>
<db:para>Defaults to <db:code>0.0</db:code>.</db:para>
<db:para>When setting this property the corresponding maximum value is adjusted if necessary, to ensure that the range remains valid.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">minXValue</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinXValue</db:emphasis>(<db:type>float</db:type> <db:emphasis>min</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">minXValueChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="minYValue-prop">
<db:title>minYValue : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>minYValue</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">minYValue</db:synopsisinfo>
<db:synopsisinfo role="setter">setMinYValue</db:synopsisinfo>
<db:synopsisinfo role="notifier">minYValueChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the minimum Y value for the generated surface points.</db:para>
<db:para>Defaults to <db:code>0.0</db:code>.</db:para>
<db:para>When setting this property the corresponding maximum value is adjusted if necessary, to ensure that the range remains valid.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">minYValue</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinYValue</db:emphasis>(<db:type>float</db:type> <db:emphasis>min</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">minYValueChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qheightmapsurfacedataproxy.xml#autoScaleY-prop">autoScaleY</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="minZValue-prop">
<db:title>minZValue : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>minZValue</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">minZValue</db:synopsisinfo>
<db:synopsisinfo role="setter">setMinZValue</db:synopsisinfo>
<db:synopsisinfo role="notifier">minZValueChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the minimum Z value for the generated surface points.</db:para>
<db:para>Defaults to <db:code>0.0</db:code>.</db:para>
<db:para>When setting this property the corresponding maximum value is adjusted if necessary, to ensure that the range remains valid.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">minZValue</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinZValue</db:emphasis>(<db:type>float</db:type> <db:emphasis>min</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">minZValueChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QHeightMapSurfaceDataProxy">
<db:title>[explicit] QHeightMapSurfaceDataProxy::QHeightMapSurfaceDataProxy(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QHeightMapSurfaceDataProxy</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QHeightMapSurfaceDataProxy(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs <db:link xlink:href="qheightmapsurfacedataproxy.xml">QHeightMapSurfaceDataProxy</db:link> with the given <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="QHeightMapSurfaceDataProxy-1">
<db:title>[explicit] QHeightMapSurfaceDataProxy::QHeightMapSurfaceDataProxy(const QImage &amp;<db:emphasis>image</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QHeightMapSurfaceDataProxy</db:methodname>
<db:methodparam>
<db:type>const QImage &amp;</db:type>
<db:parameter>image</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QHeightMapSurfaceDataProxy(const QImage &amp;image, QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs <db:link xlink:href="qheightmapsurfacedataproxy.xml">QHeightMapSurfaceDataProxy</db:link> with the given <db:code role="parameter">image</db:code> and <db:code role="parameter">parent</db:code>. Height map is set by calling <db:link xlink:href="qheightmapsurfacedataproxy.xml#setHeightMap">setHeightMap</db:link>() with <db:code role="parameter">image</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qheightmapsurfacedataproxy.xml#heightMap-prop">heightMap</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QHeightMapSurfaceDataProxy-2">
<db:title>[explicit] QHeightMapSurfaceDataProxy::QHeightMapSurfaceDataProxy(const QString &amp;<db:emphasis>filename</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QHeightMapSurfaceDataProxy</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>filename</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QHeightMapSurfaceDataProxy(const QString &amp;filename, QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs <db:link xlink:href="qheightmapsurfacedataproxy.xml">QHeightMapSurfaceDataProxy</db:link> from the given image <db:code role="parameter">filename</db:code> and <db:code role="parameter">parent</db:code>. Height map is set by calling <db:link xlink:href="qheightmapsurfacedataproxy.xml#setHeightMapFile">setHeightMapFile</db:link>() with <db:code role="parameter">filename</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qheightmapsurfacedataproxy.xml#heightMapFile-prop">heightMapFile</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dtor.QHeightMapSurfaceDataProxy">
<db:title>[virtual] QHeightMapSurfaceDataProxy::~QHeightMapSurfaceDataProxy()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QHeightMapSurfaceDataProxy</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QHeightMapSurfaceDataProxy()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys <db:link xlink:href="qheightmapsurfacedataproxy.xml">QHeightMapSurfaceDataProxy</db:link>.</db:para>
</db:section>
<db:section xml:id="setHeightMap">
<db:title>void QHeightMapSurfaceDataProxy::setHeightMap(const QImage &amp;<db:emphasis>image</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setHeightMap</db:methodname>
<db:methodparam>
<db:type>const QImage &amp;</db:type>
<db:parameter>image</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">heightMap</db:synopsisinfo>
<db:synopsisinfo role="signature">void setHeightMap(const QImage &amp;image)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Replaces current data with the height map data specified by <db:code role="parameter">image</db:code>.</db:para>
<db:para>There are several formats the <db:code role="parameter">image</db:code> can be given in, but if it is not in a directly usable format, a conversion is made.</db:para>
<db:note>
<db:para>If the result seems wrong, the automatic conversion failed and you should try converting the <db:code role="parameter">image</db:code> yourself before setting it. Preferred format is <db:link xlink:href="qimage.xml#Format-enum">QImage::Format_RGB32</db:link> in grayscale.</db:para>
</db:note>
<db:para>The height of the <db:code role="parameter">image</db:code> is read from the red component of the pixels if the <db:code role="parameter">image</db:code> is in grayscale, otherwise it is an average calculated from red, green, and blue components of the pixels. Using grayscale images may improve data conversion speed for large images.</db:para>
<db:para>Not recommended formats: all mono formats (for example <db:link xlink:href="qimage.xml#Format-enum">QImage::Format_Mono</db:link>).</db:para>
<db:para>The height map is resolved asynchronously. <db:link xlink:href="qsurfacedataproxy.xml#arrayReset">QSurfaceDataProxy::arrayReset</db:link>() is emitted when the data has been resolved.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qheightmapsurfacedataproxy.xml#heightMap-prop">heightMap</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qheightmapsurfacedataproxy.xml#heightMap-prop">heightMap</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setHeightMapFile">
<db:title>void QHeightMapSurfaceDataProxy::setHeightMapFile(const QString &amp;<db:emphasis>filename</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setHeightMapFile</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>filename</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">heightMapFile</db:synopsisinfo>
<db:synopsisinfo role="signature">void setHeightMapFile(const QString &amp;filename)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Replaces current data with height map data from the file specified by <db:code role="parameter">filename</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qheightmapsurfacedataproxy.xml#heightMapFile-prop">heightMapFile</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qheightmapsurfacedataproxy.xml#heightMapFile-prop">heightMapFile</db:link>()</db:member>
<db:member><db:link xlink:href="qheightmapsurfacedataproxy.xml#heightMap-prop">heightMap</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setValueRanges">
<db:title>void QHeightMapSurfaceDataProxy::setValueRanges(float <db:emphasis>minX</db:emphasis>, float <db:emphasis>maxX</db:emphasis>, float <db:emphasis>minZ</db:emphasis>, float <db:emphasis>maxZ</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setValueRanges</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>minX</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>maxX</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>minZ</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>maxZ</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setValueRanges(float minX, float maxX, float minZ, float maxZ)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>A convenience function for setting all minimum (<db:code role="parameter">minX</db:code> and <db:code role="parameter">minZ</db:code>) and maximum (<db:code role="parameter">maxX</db:code> and <db:code role="parameter">maxZ</db:code>) values at the same time. The minimum values must be smaller than the corresponding maximum value. Otherwise the values get adjusted so that they are valid.</db:para>
</db:section>
</db:section>
</db:article>
