<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Custom Widget Plugin Example</db:title>
<db:productname>QtDesigner</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Designer Manual</db:titleabbrev>
<db:abstract>
<db:para>Creating a custom widget plugin for Qt Designer.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;analogclock.h&quot;
#include &quot;customwidgetplugin.h&quot;

#include &lt;QtPlugin&gt;

AnalogClockPlugin::AnalogClockPlugin(QObject *parent)
    : QObject(parent)
    , initialized(false)
{
}

void AnalogClockPlugin::initialize(QDesignerFormEditorInterface * /* core */)
{
    if (initialized)
        return;

    initialized = true;
}

bool AnalogClockPlugin::isInitialized() const
{
    return initialized;
}

QWidget *AnalogClockPlugin::createWidget(QWidget *parent)
{
    return new AnalogClock(parent);
}

QString AnalogClockPlugin::name() const
{
    return &quot;AnalogClock&quot;;
}

QString AnalogClockPlugin::group() const
{
    return &quot;Display Widgets [Examples]&quot;;
}

QIcon AnalogClockPlugin::icon() const
{
    return QIcon();
}

QString AnalogClockPlugin::toolTip() const
{
    return &quot;&quot;;
}

QString AnalogClockPlugin::whatsThis() const
{
    return &quot;&quot;;
}

bool AnalogClockPlugin::isContainer() const
{
    return false;
}

QString AnalogClockPlugin::domXml() const
{
    return &quot;&lt;ui language=\&quot;c++\&quot;&gt;\n&quot;
           &quot; &lt;widget class=\&quot;AnalogClock\&quot; name=\&quot;analogClock\&quot;&gt;\n&quot;
           &quot;  &lt;property name=\&quot;geometry\&quot;&gt;\n&quot;
           &quot;   &lt;rect&gt;\n&quot;
           &quot;    &lt;x&gt;0&lt;/x&gt;\n&quot;
           &quot;    &lt;y&gt;0&lt;/y&gt;\n&quot;
           &quot;    &lt;width&gt;100&lt;/width&gt;\n&quot;
           &quot;    &lt;height&gt;100&lt;/height&gt;\n&quot;
           &quot;   &lt;/rect&gt;\n&quot;
           &quot;  &lt;/property&gt;\n&quot;
           &quot;  &lt;property name=\&quot;toolTip\&quot; &gt;\n&quot;
           &quot;   &lt;string&gt;The current time&lt;/string&gt;\n&quot;
           &quot;  &lt;/property&gt;\n&quot;
           &quot;  &lt;property name=\&quot;whatsThis\&quot; &gt;\n&quot;
           &quot;   &lt;string&gt;The analog clock widget displays the current time.&lt;/string&gt;\n&quot;
           &quot;  &lt;/property&gt;\n&quot;
           &quot; &lt;/widget&gt;\n&quot;
           &quot;&lt;/ui&gt;\n&quot;;
}

QString AnalogClockPlugin::includeFile() const
{
    return &quot;analogclock.h&quot;;
}

</db:programlisting>
</db:article>
