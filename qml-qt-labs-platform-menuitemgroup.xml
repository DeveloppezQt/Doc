<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>MenuItemGroup QML Type</db:title>
<db:productname>QtLabsPlatform</db:productname>
<db:edition>Qt 5.11.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Labs Platform Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A group for managing native menu items.</db:para>
<db:para>This type was introduced in Qt 5.8.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt.labs.platform 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>QtObject</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qt-labs-platform-menuitemgroup.xml">MenuItemGroup</db:link> groups native menu items together.</db:para>
<db:para><db:link xlink:href="qml-qt-labs-platform-menuitemgroup.xml">MenuItemGroup</db:link> is exclusive by default. In an exclusive menu item group, only one item can be checked at any time; checking another item automatically unchecks the previously checked one. <db:link xlink:href="qml-qt-labs-platform-menuitemgroup.xml">MenuItemGroup</db:link> can be configured as non-exclusive, which is particularly useful for showing, hiding, enabling and disabling items together as a group.</db:para>
<db:para>The most straight-forward way to use <db:link xlink:href="qml-qt-labs-platform-menuitemgroup.xml">MenuItemGroup</db:link> is to assign a list of items.</db:para>
<db:programlisting language="cpp">Menu {
    id: verticalMenu
    title: qsTr(&quot;Vertical&quot;)

    MenuItemGroup {
        id: verticalGroup
        items: verticalMenu.items
    }

    MenuItem { text: qsTr(&quot;Top&quot;); checkable: true }
    MenuItem { text: qsTr(&quot;Center&quot;); checked: true }
    MenuItem { text: qsTr(&quot;Bottom&quot;); checkable: true }
}
</db:programlisting>
<db:para>The same menu may sometimes contain items that should not be included in the same exclusive group. Such cases are best handled using the <db:link xlink:href="qml-qt-labs-platform-menuitem.xml#group-prop">group</db:link> property.</db:para>
<db:programlisting language="cpp">Menu {
    id: horizontalMenu
    title: qsTr(&quot;Horizontal&quot;)

    MenuItemGroup {
        id: horizontalGroup
    }

    MenuItem {
        checked: true
        text: qsTr(&quot;Left&quot;)
        group: horizontalGroup
    }
    MenuItem {
        checkable: true
        text: qsTr(&quot;Center&quot;)
        group: horizontalGroup
    }
    MenuItem {
        text: qsTr(&quot;Right&quot;)
        checkable: true
        group: horizontalGroup
    }

    MenuItem { separator: true }
    MenuItem { text: qsTr(&quot;Justify&quot;); checkable: true }
    MenuItem { text: qsTr(&quot;Absolute&quot;); checkable: true }
}
</db:programlisting>
<db:para>More advanced use cases can be handled using the <db:link xlink:href="qml-qt-labs-platform-menuitemgroup.xml#addItem-method">addItem</db:link>() and <db:link xlink:href="qml-qt-labs-platform-menuitemgroup.xml#removeItem-method">removeItem</db:link>() methods.</db:para>
<db:note>
<db:para><db:emphasis>Types in Qt.labs modules are not guaranteed to remain compatible in future versions.</db:emphasis></db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-menuitem.xml">MenuItem</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="checkedItem-prop">
<db:title>checkedItem : MenuItem</db:title>
<db:fieldsynopsis>
<db:type>MenuItem</db:type>
<db:varname>checkedItem</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the currently checked item in the group, or <db:code>null</db:code> if no item is checked.</db:para>
</db:section>
<db:section xml:id="enabled-prop">
<db:title>enabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>enabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the group is enabled. The default value is <db:code>true</db:code>.</db:para>
<db:para>The enabled state of the group affects the enabled state of each item in the group, except that explicitly disabled items are not enabled even if the group is enabled.</db:para>
</db:section>
<db:section xml:id="exclusive-prop">
<db:title>exclusive : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>exclusive</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the group is exclusive. The default value is <db:code>true</db:code>.</db:para>
<db:para>In an exclusive menu item group, only one item can be checked at any time; checking another item automatically unchecks the previously checked one.</db:para>
</db:section>
<db:section xml:id="items-prop">
<db:title>[read-only] items : list&lt;MenuItem&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;MenuItem&gt;</db:type>
<db:varname>items</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the list of items in the group.</db:para>
</db:section>
<db:section xml:id="visible-prop">
<db:title>visible : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>visible</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the group is visible. The default value is <db:code>true</db:code>.</db:para>
<db:para>The visibility of the group affects the visibility of each item in the group, except that explicitly hidden items are not visible even if the group is visible.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="hovered-signal">
<db:title>hovered(MenuItem <db:emphasis>item</db:emphasis>)</db:title>
<db:para>This signal is emitted when an <db:code role="parameter">item</db:code> in the group is hovered by the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onHovered</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-menuitem.xml#hovered-signal">MenuItem::hovered</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="triggered-signal">
<db:title>triggered(MenuItem <db:emphasis>item</db:emphasis>)</db:title>
<db:para>This signal is emitted when an <db:code role="parameter">item</db:code> in the group is triggered by the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onTriggered</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-menuitem.xml#triggered-signal">MenuItem::triggered</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="addItem-method">
<db:title>void addItem(MenuItem <db:emphasis>item</db:emphasis>)</db:title>
<db:para>Adds an <db:code role="parameter">item</db:code> to the group.</db:para>
</db:section>
<db:section xml:id="clear-method">
<db:title>void clear()</db:title>
<db:para>Removes all items from the group.</db:para>
</db:section>
<db:section xml:id="removeItem-method">
<db:title>void removeItem(MenuItem <db:emphasis>item</db:emphasis>)</db:title>
<db:para>Removes an <db:code role="parameter">item</db:code> from the group.</db:para>
</db:section>
</db:section>
</db:article>
