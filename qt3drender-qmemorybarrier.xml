<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QMemoryBarrier Class</db:title>
<db:subtitle>Qt3DRender::QMemoryBarrier</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Class to emplace a memory barrier.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QMemoryBarrier</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-memorybarrier.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qframegraphnode.xml" xlink:role="class">Qt3DRender::QFrameGraphNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QMemoryBarrier is part of <db:simplelist><db:member>framegraph</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qt3drender-qmemorybarrier.xml">Qt3DRender::QMemoryBarrier</db:link> FrameGraph node is used to emplace a specific memory barrier at a specific time of the rendering. This is required to properly synchronize drawing and compute commands on the GPU.</db:para>
<db:para>The barrier defines the ordering of memory operations issued by a prior command. This means that if command1 is manipulating a buffer that is to be used as a vertex attribute buffer in a following command2, then the memory barrier should be placed after command1 and setting the appropriate barrier type for vertex attribute buffer.</db:para>
<db:para>When a <db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link> node is found in a FrameGraph branch, the barrier will be enforced prior to any draw or compute command even if these are defined deeper in the branch.</db:para>
<db:para>For OpenGL rendering, this page gives more info about the <db:link xlink:href="https://www.opengl.org/wiki/Memory_Model">Memory Model</db:link></db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Operation-enum">
<db:title>enum QMemoryBarrier::Operation</db:title>
<db:bridgehead renderas="sect2">flags QMemoryBarrier::Operations</db:bridgehead>
<db:enumsynopsis>
<db:enumname>Operation</db:enumname>
<db:enumitem>
<db:enumidentifier>None</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>VertexAttributeArray</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 0)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ElementArray</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 1)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Uniform</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 2)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>TextureFetch</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 3)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ShaderImageAccess</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 4)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Command</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 5)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PixelBuffer</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 6)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>TextureUpdate</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 7)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>BufferUpdate</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 8)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FrameBuffer</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 9)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>TransformFeedback</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 10)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AtomicCounter</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 11)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ShaderStorage</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 12)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>QueryBuffer</db:enumidentifier>
<db:enumvalue>(1 &lt;&lt; 13)</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>All</db:enumidentifier>
<db:enumvalue>0xFFFFFFFF</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:typedefsynopsis>
<db:typedefname>Qt3DRender::QMemoryBarrier::Operations</db:typedefname>
</db:typedefsynopsis>
<db:para>This enum type describes types of buffer to be cleared.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::None</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::ElementArray</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 1)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::Uniform</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 2)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::TextureFetch</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 3)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::ShaderImageAccess</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 4)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::Command</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 5)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::PixelBuffer</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 6)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::TextureUpdate</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 7)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::BufferUpdate</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 8)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::FrameBuffer</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 9)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::TransformFeedback</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 10)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::AtomicCounter</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 11)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::ShaderStorage</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 12)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::QueryBuffer</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 13)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::VertexAttributeArray</db:code></db:para>
</db:td>
<db:td><db:code>(1 &lt;&lt; 0)</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qmemorybarrier.xml">QMemoryBarrier</db:link></db:emphasis>::All</db:code></db:para>
</db:td>
<db:td><db:code>0xFFFFFFFF</db:code></db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>Operations</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;Operation&gt;. </db:code>It stores an OR combination of <db:code>Operation</db:code> values.</db:para>
</db:section>
</db:section>
</db:article>
