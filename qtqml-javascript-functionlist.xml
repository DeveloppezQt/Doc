<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>List of JavaScript Objects and Functions</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 5.4.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A list of objects, functions, and properties supported in QML.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>This reference contains a list of objects, functions and properties supported by the <db:link xlink:href="qqmlengine-qtqml-proxy.xml">QML engine</db:link>. For a detailed description, see the <db:link xlink:href="http://www.ecma-international.org/publications/standards/Ecma-262.htm">ECMA-262</db:link> specification.</db:para>
<db:section xml:id="the-global-object">
<db:title>The Global Object</db:title>
<db:section xml:id="value-properties">
<db:title>Value Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>NaN</db:para>
</db:listitem>
<db:listitem>
<db:para>Infinity</db:para>
</db:listitem>
<db:listitem>
<db:para>undefined</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="function-properties">
<db:title>Function Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>eval(x)</db:para>
</db:listitem>
<db:listitem>
<db:para>parseInt(string, radix)</db:para>
</db:listitem>
<db:listitem>
<db:para>parseFloat(string)</db:para>
</db:listitem>
<db:listitem>
<db:para>isNaN(number)</db:para>
</db:listitem>
<db:listitem>
<db:para>isFinite(number)</db:para>
</db:listitem>
<db:listitem>
<db:para>decodeURI(encodedURI)</db:para>
</db:listitem>
<db:listitem>
<db:para>decodeURIComponent(encodedURIComponent)</db:para>
</db:listitem>
<db:listitem>
<db:para>encodeURI(uri)</db:para>
</db:listitem>
<db:listitem>
<db:para>encodeURIComponent(uriComponent)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="constructor-properties">
<db:title>Constructor Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Object</db:para>
</db:listitem>
<db:listitem>
<db:para>Function</db:para>
</db:listitem>
<db:listitem>
<db:para>Array</db:para>
</db:listitem>
<db:listitem>
<db:para>String</db:para>
</db:listitem>
<db:listitem>
<db:para>Boolean</db:para>
</db:listitem>
<db:listitem>
<db:para>Number</db:para>
</db:listitem>
<db:listitem>
<db:para>Date</db:para>
</db:listitem>
<db:listitem>
<db:para>RegExp</db:para>
</db:listitem>
<db:listitem>
<db:para>Error</db:para>
</db:listitem>
<db:listitem>
<db:para>EvalError</db:para>
</db:listitem>
<db:listitem>
<db:para>RangeError</db:para>
</db:listitem>
<db:listitem>
<db:para>ReferenceError</db:para>
</db:listitem>
<db:listitem>
<db:para>SyntaxError</db:para>
</db:listitem>
<db:listitem>
<db:para>TypeError</db:para>
</db:listitem>
<db:listitem>
<db:para>URIError</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="other-properties">
<db:title>Other Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Math</db:para>
</db:listitem>
<db:listitem>
<db:para>JSON</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="the-object-object">
<db:title>The Object Object</db:title>
<db:section xml:id="object-constructor">
<db:title>Object Constructor</db:title>
<db:section xml:id="the-object-object-object-constructor-function-properties-7">
<db:title>Function Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>getPrototypeOf(O)</db:para>
</db:listitem>
<db:listitem>
<db:para>getOwnPropertyDescriptor(O, P)</db:para>
</db:listitem>
<db:listitem>
<db:para>getOwnPropertyNames(O)</db:para>
</db:listitem>
<db:listitem>
<db:para>create(O [, Properties])</db:para>
</db:listitem>
<db:listitem>
<db:para>defineProperty(O, P, Attributes)</db:para>
</db:listitem>
<db:listitem>
<db:para>defineProperties(O, Properties)</db:para>
</db:listitem>
<db:listitem>
<db:para>keys(O)</db:para>
</db:listitem>
<db:listitem>
<db:para>seal(O)</db:para>
</db:listitem>
<db:listitem>
<db:para>isSealed(O)</db:para>
</db:listitem>
<db:listitem>
<db:para>freeze(O)</db:para>
</db:listitem>
<db:listitem>
<db:para>isFrozen(O)</db:para>
</db:listitem>
<db:listitem>
<db:para>preventExtensions(O)</db:para>
</db:listitem>
<db:listitem>
<db:para>isExtensible(O)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="object-prototype">
<db:title>Object Prototype</db:title>
<db:section xml:id="the-object-object-object-prototype-function-properties-9">
<db:title>Function Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>toString()</db:para>
</db:listitem>
<db:listitem>
<db:para>toLocaleString()</db:para>
</db:listitem>
<db:listitem>
<db:para>valueOf()</db:para>
</db:listitem>
<db:listitem>
<db:para>hasOwnProperty(V)</db:para>
</db:listitem>
<db:listitem>
<db:para>isPrototypeOf(V)</db:para>
</db:listitem>
<db:listitem>
<db:para>propertyIsEnumerable(V)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:section>
<db:section xml:id="function-objects">
<db:title>Function Objects</db:title>
<db:section xml:id="function-prototype">
<db:title>Function Prototype</db:title>
<db:section xml:id="function-objects-function-prototype-function-properties-12">
<db:title>Function Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>toString()</db:para>
</db:listitem>
<db:listitem>
<db:para>apply(thisArg, argArray)</db:para>
</db:listitem>
<db:listitem>
<db:para>call(thisArg [, arg1 [, arg2, ...]])</db:para>
</db:listitem>
<db:listitem>
<db:para>bind((thisArg [, arg1 [, arg2, â€¦]])</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:section>
<db:section xml:id="array-objects">
<db:title>Array Objects</db:title>
<db:section xml:id="array-prototype-object">
<db:title>Array Prototype Object</db:title>
<db:section xml:id="array-objects-array-prototype-object-function-properties-15">
<db:title>Function Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>toString()</db:para>
</db:listitem>
<db:listitem>
<db:para>toLocaleString()</db:para>
</db:listitem>
<db:listitem>
<db:para>concat([item1 [, item2 [, ...]]])</db:para>
</db:listitem>
<db:listitem>
<db:para>join(separator)</db:para>
</db:listitem>
<db:listitem>
<db:para>pop()</db:para>
</db:listitem>
<db:listitem>
<db:para>push([item1 [, item2 [, ...]]])</db:para>
</db:listitem>
<db:listitem>
<db:para>reverse()</db:para>
</db:listitem>
<db:listitem>
<db:para>shift()</db:para>
</db:listitem>
<db:listitem>
<db:para>slice(start, end)</db:para>
</db:listitem>
<db:listitem>
<db:para>sort(comparefn)</db:para>
</db:listitem>
<db:listitem>
<db:para>splice(start, deleteCount[, item1 [, item2 [, ...]]])</db:para>
</db:listitem>
<db:listitem>
<db:para>unshift([item1 [, item2 [, ...]]])</db:para>
</db:listitem>
<db:listitem>
<db:para>indexOf(searchElement [, fromIndex])</db:para>
</db:listitem>
<db:listitem>
<db:para>lastIndexOf(searchElement [, fromIndex])</db:para>
</db:listitem>
<db:listitem>
<db:para>every(callbackfn [, thisArg])</db:para>
</db:listitem>
<db:listitem>
<db:para>some(callbackfn [, thisArg])</db:para>
</db:listitem>
<db:listitem>
<db:para>forEach(callbackfn [, thisArg])</db:para>
</db:listitem>
<db:listitem>
<db:para>map(callbackfn [, thisArg])</db:para>
</db:listitem>
<db:listitem>
<db:para>filter(callbackfn [, thisArg])</db:para>
</db:listitem>
<db:listitem>
<db:para>reduce(callbackfn [, initialValue])</db:para>
</db:listitem>
<db:listitem>
<db:para>reduceRight(callbackfn [, initialValue])</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:section>
<db:section xml:id="string-objects">
<db:title>String Objects</db:title>
<db:section xml:id="string-prototype-object">
<db:title>String Prototype Object</db:title>
<db:section xml:id="string-objects-string-prototype-object-function-properties-18">
<db:title>Function Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>toString()</db:para>
</db:listitem>
<db:listitem>
<db:para>valueOf()</db:para>
</db:listitem>
<db:listitem>
<db:para>charAt(pos)</db:para>
</db:listitem>
<db:listitem>
<db:para>charCodeAt(pos)</db:para>
</db:listitem>
<db:listitem>
<db:para>concat([string1 [, string2 [, ...]]])</db:para>
</db:listitem>
<db:listitem>
<db:para>indexOf(searchString ,position)</db:para>
</db:listitem>
<db:listitem>
<db:para>lastIndexOf(searchString, position)</db:para>
</db:listitem>
<db:listitem>
<db:para>localeCompare(that)</db:para>
</db:listitem>
<db:listitem>
<db:para>match(regexp)</db:para>
</db:listitem>
<db:listitem>
<db:para>replace(searchValue, replaceValue)</db:para>
</db:listitem>
<db:listitem>
<db:para>search(regexp)</db:para>
</db:listitem>
<db:listitem>
<db:para>slice(start, end)</db:para>
</db:listitem>
<db:listitem>
<db:para>split(separator, limit)</db:para>
</db:listitem>
<db:listitem>
<db:para>substring(start, end)</db:para>
</db:listitem>
<db:listitem>
<db:para>toLowerCase()</db:para>
</db:listitem>
<db:listitem>
<db:para>toLocaleLowerCase()</db:para>
</db:listitem>
<db:listitem>
<db:para>toUpperCase()</db:para>
</db:listitem>
<db:listitem>
<db:para>toLocaleUpperCase()</db:para>
</db:listitem>
<db:listitem>
<db:para>trim()</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Additionally, the QML engine adds the following functions to the <db:link xlink:href="qml-qtqml-string.xml">String</db:link> prototype:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-string.xml#arg-method">arg</db:link>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:section>
<db:section xml:id="boolean-objects">
<db:title>Boolean Objects</db:title>
<db:section xml:id="boolean-prototype-object">
<db:title>Boolean Prototype Object</db:title>
<db:section xml:id="boolean-objects-boolean-prototype-object-function-properties-21">
<db:title>Function Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>toString()</db:para>
</db:listitem>
<db:listitem>
<db:para>valueOf()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:section>
<db:section xml:id="number-objects">
<db:title>Number Objects</db:title>
<db:section xml:id="number-prototype-object">
<db:title>Number Prototype Object</db:title>
<db:section xml:id="number-objects-number-prototype-object-function-properties-24">
<db:title>Function Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>toString(radix)</db:para>
</db:listitem>
<db:listitem>
<db:para>toLocaleString()</db:para>
</db:listitem>
<db:listitem>
<db:para>toFixed(fractionDigits)</db:para>
</db:listitem>
<db:listitem>
<db:para>toExponential(fractionDigits)</db:para>
</db:listitem>
<db:listitem>
<db:para>toPrecision(precision)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Additionally, the QML engine adds the following functions to the <db:link xlink:href="qml-qtqml-number.xml">Number</db:link> prototype:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-number.xml#fromLocaleString-method">fromLocaleString</db:link>(locale, number)</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-number.xml#toLocaleCurrencyString-method">toLocaleCurrencyString</db:link>(locale, symbol)</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-number.xml#toLocaleString-method">toLocaleString</db:link>(locale, format, precision)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:section>
<db:section xml:id="the-math-object">
<db:title>The Math Object</db:title>
<db:section xml:id="the-math-object-value-properties-26">
<db:title>Value Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>E</db:para>
</db:listitem>
<db:listitem>
<db:para>LN10</db:para>
</db:listitem>
<db:listitem>
<db:para>LN2</db:para>
</db:listitem>
<db:listitem>
<db:para>LOG2E</db:para>
</db:listitem>
<db:listitem>
<db:para>LOG10E</db:para>
</db:listitem>
<db:listitem>
<db:para>PI</db:para>
</db:listitem>
<db:listitem>
<db:para>SQRT1_2</db:para>
</db:listitem>
<db:listitem>
<db:para>SQRT2</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="the-math-object-function-properties-27">
<db:title>Function Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>abs(x)</db:para>
</db:listitem>
<db:listitem>
<db:para>acos(x)</db:para>
</db:listitem>
<db:listitem>
<db:para>asin(x)</db:para>
</db:listitem>
<db:listitem>
<db:para>atan(x)</db:para>
</db:listitem>
<db:listitem>
<db:para>atan2(y, x)</db:para>
</db:listitem>
<db:listitem>
<db:para>ceil(x)</db:para>
</db:listitem>
<db:listitem>
<db:para>cos(x)</db:para>
</db:listitem>
<db:listitem>
<db:para>exp(x)</db:para>
</db:listitem>
<db:listitem>
<db:para>floor(x)</db:para>
</db:listitem>
<db:listitem>
<db:para>log(x)</db:para>
</db:listitem>
<db:listitem>
<db:para>max([value1 [, value2 [, ...]]])</db:para>
</db:listitem>
<db:listitem>
<db:para>min([value1 [, value2 [, ...]]])</db:para>
</db:listitem>
<db:listitem>
<db:para>pow(x, y)</db:para>
</db:listitem>
<db:listitem>
<db:para>random()</db:para>
</db:listitem>
<db:listitem>
<db:para>round(x)</db:para>
</db:listitem>
<db:listitem>
<db:para>sin(x)</db:para>
</db:listitem>
<db:listitem>
<db:para>sqrt(x)</db:para>
</db:listitem>
<db:listitem>
<db:para>tan(x)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="date-objects">
<db:title>Date Objects</db:title>
<db:section xml:id="date-prototype-object">
<db:title>Date Prototype Object</db:title>
<db:section xml:id="date-objects-date-prototype-object-function-properties-30">
<db:title>Function Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>toString()</db:para>
</db:listitem>
<db:listitem>
<db:para>toDateString()</db:para>
</db:listitem>
<db:listitem>
<db:para>toTimeString()</db:para>
</db:listitem>
<db:listitem>
<db:para>toLocaleString()</db:para>
</db:listitem>
<db:listitem>
<db:para>toLocaleDateString()</db:para>
</db:listitem>
<db:listitem>
<db:para>toLocaleTimeString()</db:para>
</db:listitem>
<db:listitem>
<db:para>valueOf()</db:para>
</db:listitem>
<db:listitem>
<db:para>getTime()</db:para>
</db:listitem>
<db:listitem>
<db:para>getFullYear()</db:para>
</db:listitem>
<db:listitem>
<db:para>getUTCFullYear()</db:para>
</db:listitem>
<db:listitem>
<db:para>getMonth()</db:para>
</db:listitem>
<db:listitem>
<db:para>getUTCMonth()</db:para>
</db:listitem>
<db:listitem>
<db:para>getDate()</db:para>
</db:listitem>
<db:listitem>
<db:para>getUTCDate()</db:para>
</db:listitem>
<db:listitem>
<db:para>getDay()</db:para>
</db:listitem>
<db:listitem>
<db:para>getUTCDay()</db:para>
</db:listitem>
<db:listitem>
<db:para>getHours()</db:para>
</db:listitem>
<db:listitem>
<db:para>getUTCHours()</db:para>
</db:listitem>
<db:listitem>
<db:para>getMinutes()</db:para>
</db:listitem>
<db:listitem>
<db:para>getUTCMinutes()</db:para>
</db:listitem>
<db:listitem>
<db:para>getSeconds()</db:para>
</db:listitem>
<db:listitem>
<db:para>getUTCSeconds()</db:para>
</db:listitem>
<db:listitem>
<db:para>getMilliseconds()</db:para>
</db:listitem>
<db:listitem>
<db:para>getUTCMilliseconds()</db:para>
</db:listitem>
<db:listitem>
<db:para>getTimeZoneOffset()</db:para>
</db:listitem>
<db:listitem>
<db:para>setTime(time)</db:para>
</db:listitem>
<db:listitem>
<db:para>setMilliseconds(ms)</db:para>
</db:listitem>
<db:listitem>
<db:para>setUTCMilliseconds(ms)</db:para>
</db:listitem>
<db:listitem>
<db:para>setSeconds(sec [, ms])</db:para>
</db:listitem>
<db:listitem>
<db:para>setUTCSeconds(sec [, ms])</db:para>
</db:listitem>
<db:listitem>
<db:para>setMinutes(min [, sec [, ms]])</db:para>
</db:listitem>
<db:listitem>
<db:para>setUTCMinutes(min [, sec [, ms]])</db:para>
</db:listitem>
<db:listitem>
<db:para>setHours(hour [, min [, sec [, ms]]])</db:para>
</db:listitem>
<db:listitem>
<db:para>setUTCHours(hour [, min [, sec [, ms]]])</db:para>
</db:listitem>
<db:listitem>
<db:para>setDate(date)</db:para>
</db:listitem>
<db:listitem>
<db:para>setUTCDate(date)</db:para>
</db:listitem>
<db:listitem>
<db:para>setMonth(month [, date])</db:para>
</db:listitem>
<db:listitem>
<db:para>setUTCMonth(month [, date])</db:para>
</db:listitem>
<db:listitem>
<db:para>setFullYear(year [, month [, date]])</db:para>
</db:listitem>
<db:listitem>
<db:para>setUTCFullYear(year [, month [, date]])</db:para>
</db:listitem>
<db:listitem>
<db:para>toUTCString()</db:para>
</db:listitem>
<db:listitem>
<db:para>toISOString()</db:para>
</db:listitem>
<db:listitem>
<db:para>toJSON()</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Additionally, the QML engine adds the following functions to the <db:link xlink:href="qml-qtqml-date.xml">Date</db:link> prototype:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-date.xml#timeZoneUpdated-method">timeZoneUpdated</db:link>()</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-date.xml#toLocaleDateString-method">toLocaleDateString</db:link>(locale, format)</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-date.xml#toLocaleString-method">toLocaleString</db:link>(locale, format)</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-date.xml#toLocaleTimeString-method">toLocaleTimeString</db:link>(locale, format)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:section>
<db:section xml:id="regexp-objects">
<db:title>RegExp Objects</db:title>
<db:section xml:id="regexp-prototype-object">
<db:title>RegExp Prototype Object</db:title>
<db:section xml:id="regexp-objects-regexp-prototype-object-function-properties-33">
<db:title>Function Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>exec(string)</db:para>
</db:listitem>
<db:listitem>
<db:para>test(string)</db:para>
</db:listitem>
<db:listitem>
<db:para>toString()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:section>
<db:section xml:id="error-objects">
<db:title>Error Objects</db:title>
<db:section xml:id="error-prototype-object">
<db:title>Error Prototype Object</db:title>
<db:section xml:id="error-objects-error-prototype-object-value-properties-36">
<db:title>Value Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>name</db:para>
</db:listitem>
<db:listitem>
<db:para>message</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="error-objects-error-prototype-object-function-properties-37">
<db:title>Function Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>toString()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:section>
<db:section xml:id="the-json-object">
<db:title>The JSON Object</db:title>
<db:section xml:id="the-json-object-function-properties-39">
<db:title>Function Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>parse(text [, reviver])</db:para>
</db:listitem>
<db:listitem>
<db:para>stringify(value [, replacer [, space]])</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:article>
