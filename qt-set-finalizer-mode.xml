<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>qt_set_finalizer_mode</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Customizes aspects of a target's finalization.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="qt6-set-finalizer-mode"/>
<db:para>Customizes aspects of a target's finalization.</db:para>
<db:para>This command was introduced in Qt 6.2.</db:para>
<db:note>
<db:para>This command is in technology preview and may change in future releases.</db:para>
</db:note>
<db:section xml:id="synopsis">
<db:title>Synopsis</db:title>
<db:programlisting language="cpp" role="bad">qt_set_finalizer_mode(target
    ENABLE | DISABLE
    MODES modes...
)
</db:programlisting>
<db:para>If <db:link xlink:href="">versionless commands</db:link> are disabled, use qt6_set_finalizer_mode() instead. It supports the same set of arguments as this command.</db:para>
</db:section>
<db:section xml:id="description">
<db:title>Description</db:title>
<db:para>This command is used to customize some aspects of the finalization of a specific target. It only has an effect if called before target is finalized, which occurs in one of the following scenarios:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>The project explicitly calls <db:link xlink:href="qt-finalize-target.xml#qt6-finalize-target">qt_finalize_target()</db:link> for the target. This usually means the MANUAL_FINALIZATION keyword was passed to <db:link xlink:href="qt-add-executable.xml#qt6-add-executable">qt_add_executable()</db:link> when the target was defined.</db:para>
</db:listitem>
<db:listitem>
<db:para>CMake 3.17 or earlier is being used, in which case finalization always occurs immediately as part of the call to <db:link xlink:href="qt-add-executable.xml#qt6-add-executable">qt_add_executable()</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>CMake 3.18 or later is being used, the MANUAL_FINALIZATION keyword was not passed to <db:link xlink:href="qt-add-executable.xml#qt6-add-executable">qt_add_executable()</db:link> when the target was defined, and deferred finalization has been completed at the end of the target's directory scope.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>qt_set_finalizer_mode() is used to enable or disable a list of <db:emphasis>modes</db:emphasis>, where a mode corresponds to a specific aspect of finalization. The currently supported finalization modes are:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Mode</db:para>
</db:th>
<db:th>
<db:para>Default</db:para>
</db:th>
<db:th>
<db:para>Finalization behavior</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>static_plugins</db:para>
</db:td>
<db:td>
<db:para>Enabled</db:para>
</db:td>
<db:td>
<db:para>When Qt is built statically, it creates initializer object libraries for its static plugins. If target is an executable and this finalization mode is enabled, any plugin initializer object libraries needed by the target will be directly linked to it. This prevents cycles between Qt-provided static libraries and may reduce link time. When this finalizer mode is disabled, each plugin initializer is instead propagated via usage requirements of its associated Qt library, which may cause cycles. If Qt is not built statically, this finalizer mode is not relevant and isn't used.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="example">
<db:title>Example</db:title>
<db:para>The following example assumes you are using CMake 3.19 or later (required for deferred finalization):</db:para>
<db:programlisting language="cpp" role="bad">qt_add_executable(my_app main.cpp)
qt_set_finalizer_mode(my_app ENABLE MODES static_plugins)
</db:programlisting>
<db:para>The same example using manual finalization might look like this:</db:para>
<db:programlisting language="cpp" role="bad">qt_add_executable(my_app MANUAL_FINALIZATION main.cpp)
qt_set_finalizer_mode(my_app ENABLE MODES static_plugins)
qt_finalize_target(my_app)
</db:programlisting>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt-finalize-target.xml#qt6-finalize-target">qt_finalize_target()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
