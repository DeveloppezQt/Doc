<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>HandwritingInputPanel QML Type</db:title>
<db:productname>QtVirtualKeyboard</db:productname>
<db:edition>Qt Virtual Keyboard | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Virtual Keyboard</db:titleabbrev>
<db:abstract>
<db:para>Provides a handwriting panel add-on for the virtual keyboard UI.</db:para>
<db:para>This type was introduced in QtQuick.VirtualKeyboard 2.0.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.VirtualKeyboard 2.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtQuick.VirtualKeyboard 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Item</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>HandwritingInputPanel is part of <db:simplelist><db:member>qtvirtualkeyboard-qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtquick-virtualkeyboard-handwritinginputpanel.xml">HandwritingInputPanel</db:link> is an add-on component for the <db:link xlink:href="qml-qtquick-virtualkeyboard-inputpanel.xml">InputPanel</db:link>, which enables full-screen handwriting input for the application.</db:para>
<db:para><db:link xlink:href="qml-qtquick-virtualkeyboard-handwritinginputpanel.xml">HandwritingInputPanel</db:link> is designed to be anchored full screen alongside the <db:link xlink:href="qml-qtquick-virtualkeyboard-inputpanel.xml">InputPanel</db:link>. The operating principle is that when the handwriting panel is &quot;available&quot;, the <db:link xlink:href="qml-qtquick-virtualkeyboard-inputpanel.xml">InputPanel</db:link> is invisible. This functionality is built-in, and requires no more than a reference to the <db:link xlink:href="qml-qtquick-virtualkeyboard-inputpanel.xml">InputPanel</db:link> instance.</db:para>
<db:para>The panel is set into operation by setting the <db:link xlink:href="qml-qtquick-virtualkeyboard-handwritinginputpanel.xml#available-prop">available</db:link> property to <db:code>true</db:code>. When the panel is in operation, the keyboard remains hidden when the input focus is set. When <db:code>available</db:code> is <db:code>true</db:code>, handwriting input is activated by setting the <db:link xlink:href="qml-qtquick-virtualkeyboard-handwritinginputpanel.xml#active-prop">active</db:link> property to <db:code>true</db:code>.</db:para>
<db:para>The user interface, which provides controls for handwriting mode and the visibility of the keyboard, is application-specific. One suggested implementation is to use a floating button on the handwriting panel, where single click toggles the handwriting mode (changes the <db:link xlink:href="qml-qtquick-virtualkeyboard-handwritinginputpanel.xml#active-prop">active</db:link> property), and double-click toggles the visibility of the keyboard (changes the <db:link xlink:href="qml-qtquick-virtualkeyboard-handwritinginputpanel.xml#available-prop">available</db:link> property).</db:para>
<db:para><db:link xlink:href="qml-qtquick-virtualkeyboard-handwritinginputpanel.xml">HandwritingInputPanel</db:link> also provides a word candidate popup which allows the user to select an alternative word candidate from the list of suggestions generated by the handwriting input method.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="active-prop">
<db:title>active : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>active</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property controls the active status of the handwriting input method.</db:para>
<db:para>Setting the property to <db:code>true</db:code> activates the handwriting input method. When the handwriting input method is active, all touch input is captured by the handwriting input panel and redirected to input engine for processing.</db:para>
</db:section>
<db:section xml:id="available-prop">
<db:title>available : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>available</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property controls the availability status of the handwriting input method.</db:para>
<db:para>Setting the property to <db:code>true</db:code> prepares the handwriting input method and inhibits the display of keyboard.</db:para>
</db:section>
<db:section xml:id="inputPanel-prop">
<db:title>inputPanel : var</db:title>
<db:fieldsynopsis>
<db:type>var</db:type>
<db:varname>inputPanel</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>A reference to the input panel instance.</db:para>
<db:para>This property must be set to the existing input panel instance.</db:para>
</db:section>
</db:section>
</db:article>
