<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Enginio C++ Examples - Todos</db:title>
<db:productname>QtEnginio</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Client library for Enginio</db:titleabbrev>
<db:abstract>
<db:para>The Todo example shows how to use the <db:link xlink:href="enginiomodel.xml">EnginioModel</db:link> with Qt Widgets.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;todosmodel.h&quot;

#include &lt;QtCore/qjsonvalue.h&gt;
#include &lt;QtCore/qjsonobject.h&gt;
#include &lt;QtGui/qcolor.h&gt;
#include &lt;QtGui/qfont.h&gt;

#include &lt;Enginio/enginioreply.h&gt;

TodosModel::TodosModel(QObject *parent)
    : EnginioModel(parent)
{}

QVariant TodosModel::headerData(int section, Qt::Orientation orientation, int role) const
{
    if (orientation == Qt::Horizontal &amp;&amp; section == 0 &amp;&amp; role == Qt::DisplayRole)
        return QStringLiteral(&quot;Todo List&quot;);
    return EnginioModel::headerData(section, orientation, role);
}

QVariant TodosModel::data(const QModelIndex &amp;index, int role) const
{
    if (role == Qt::FontRole) {
        bool completed = EnginioModel::data(index, CompletedRole).value&lt;QJsonValue&gt;().toBool();
        QFont font;
        font.setPointSize(20);
        font.setStrikeOut(completed);
        return font;
    }

    if (role == Qt::TextColorRole) {
        bool completed = EnginioModel::data(index, CompletedRole).value&lt;QJsonValue&gt;().toBool();
        return completed ? QColor(&quot;#999&quot;) : QColor(&quot;#333&quot;);
    }

    if (role == CompletedRole)
        return EnginioModel::data(index, CompletedRole).value&lt;QJsonValue&gt;().toBool();

    // fallback to base class
    return EnginioModel::data(index, role);
}
QHash&lt;int, QByteArray&gt; TodosModel::roleNames() const
{
    QHash&lt;int, QByteArray&gt; roles = EnginioModel::roleNames();
    roles.insert(TitleRole, &quot;title&quot;);
    roles.insert(Qt::DisplayRole, &quot;title&quot;);
    roles.insert(Qt::EditRole, &quot;title&quot;);
    roles.insert(CompletedRole, &quot;completed&quot;);
    return roles;
}

</db:programlisting>
</db:article>
