<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Technique QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Encapsulates a Technique.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Render 2.12</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qtechnique.xml">QTechnique</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A Technique specifies a set of <db:link xlink:href="qml-qt3d-render-renderpass.xml">RenderPass</db:link> objects, <db:link xlink:href="qml-qt3d-render-filterkey.xml">FilterKey</db:link> objects, Parameter objects and a <db:link xlink:href="qml-qt3d-render-graphicsapifilter.xml">GraphicsApiFilter</db:link>, which together define a rendering technique the given graphics API can render. The filter keys are used by <db:link xlink:href="qml-qt3d-render-techniquefilter.xml">TechniqueFilter</db:link> to select specific techniques at specific parts of the FrameGraph. If two Parameter instances with the same name are specified in a Technique and a <db:link xlink:href="qml-qt3d-render-renderpass.xml">RenderPass</db:link>, the one in Technique overrides the one used in the <db:link xlink:href="qml-qt3d-render-renderpass.xml">RenderPass</db:link>.</db:para>
<db:para>When creating an Effect that targets several versions of a graphics API, it is useful to create several Technique nodes each with a <db:link xlink:href="qml-qt3d-render-technique.xml#graphicsApiFilter-prop">graphicsApiFilter</db:link> set to match one of the targeted versions. At runtime, the Qt3D renderer will select the most appropriate Technique based on which graphics API versions are supported and (if specified) the <db:link xlink:href="qml-qt3d-render-filterkey.xml">FilterKey</db:link> nodes that satisfy a given <db:link xlink:href="qml-qt3d-render-techniquefilter.xml">TechniqueFilter</db:link> in the FrameGraph.</db:para>
<db:note>
<db:para>When using OpenGL as the graphics API for rendering, Qt3D relies on the <db:link xlink:href="qsurfaceformat.xml">QSurfaceFormat</db:link> returned by <db:link xlink:href="qsurfaceformat.xml#defaultFormat">QSurfaceFormat::defaultFormat</db:link>() at runtime to decide what is the most appropriate GL version available. If you need to customize the <db:link xlink:href="qsurfaceformat.xml">QSurfaceFormat</db:link>, do not forget to apply it with <db:link xlink:href="qsurfaceformat.xml#setDefaultFormat">QSurfaceFormat::setDefaultFormat</db:link>(). Setting the <db:link xlink:href="qsurfaceformat.xml">QSurfaceFormat</db:link> on the view will likely have no effect on Qt3D related rendering.</db:para>
</db:note>
<db:programlisting language="qml">Technique {
    id: gl3Technique
    parameters: [
        Parameter { name: &quot;color&quot;; value: &quot;orange&quot; }
    ]
    filterKeys: [
        FilterKey { name: &quot;renderingStyle&quot;; value: &quot;forward&quot; }
    ]
    graphicsApiFilter: {
        api: GraphicsApiFilter.OpenGL
        profile: GraphicsApiFilter.CoreProfile
        majorVersion: 3
        minorVersion: 1
    }
    renderPasses: [
        RenderPass {
            id: firstPass
            shaderProgram: ShaderProgram {
                // ...
            }
        },
        RenderPass {
            id: secondPass
            shaderProgram: ShaderProgram {
                // ...
            }
        }
    ]
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt3d-render-effect.xml">Effect</db:link></db:member>
<db:member><db:link xlink:href="qml-qt3d-render-renderpass.xml">RenderPass</db:link></db:member>
<db:member><db:link xlink:href="qml-qt3d-render-techniquefilter.xml">TechniqueFilter</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="filterKeys-prop">
<db:title>filterKeys : list&lt;FilterKey&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;FilterKey&gt;</db:type>
<db:varname>filterKeys</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the list of filter keys enabling this technique</db:para>
</db:section>
<db:section xml:id="graphicsApiFilter-prop">
<db:title>[read-only] graphicsApiFilter : GraphicsApiFilter</db:title>
<db:fieldsynopsis>
<db:type>GraphicsApiFilter</db:type>
<db:varname>graphicsApiFilter</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the graphics API filter being used</db:para>
</db:section>
<db:section xml:id="parameters-prop">
<db:title>parameters : list&lt;Parameter&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;Parameter&gt;</db:type>
<db:varname>parameters</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the parameters used by the technique</db:para>
</db:section>
<db:section xml:id="renderPasses-prop">
<db:title>renderPasses : list&lt;RenderPass&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;RenderPass&gt;</db:type>
<db:varname>renderPasses</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the render passes used by the tehcnique</db:para>
</db:section>
</db:section>
</db:article>
