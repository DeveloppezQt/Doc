<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QEvent Class</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.4.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qevent.xml">QEvent</db:link> class is the base class of all event classes. Event objects contain event parameters.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qchildevent.xml" xlink:role="class">QChildEvent</db:link>, <db:link xlink:href="qdynamicpropertychangeevent.xml" xlink:role="class">QDynamicPropertyChangeEvent</db:link>, <db:link xlink:href="qstatemachine-signalevent.xml" xlink:role="class">QStateMachine::SignalEvent</db:link>, <db:link xlink:href="qstatemachine-wrappedevent.xml" xlink:role="class">QStateMachine::WrappedEvent</db:link>, and <db:link xlink:href="qtimerevent.xml" xlink:role="class">QTimerEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QEvent is part of <db:simplelist><db:member><db:link xlink:href="events.xml">Event Classes</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Qt's main event loop (<db:link xlink:href="qcoreapplication.xml#exec">QCoreApplication::exec</db:link>()) fetches native window system events from the event queue, translates them into QEvents, and sends the translated events to <db:link xlink:href="qobject.xml">QObject</db:link>s.</db:para>
<db:para>In general, events come from the underlying window system (spontaneous() returns true), but it is also possible to manually send events using QCoreApplication::sendEvent() and QCoreApplication::postEvent() (spontaneous() returns false).</db:para>
<db:para><db:link xlink:href="qobject.xml">QObjects</db:link> receive events by having their <db:link xlink:href="qobject.xml#event">QObject::event</db:link>() function called. The function can be reimplemented in subclasses to customize event handling and add additional event types; QWidget::event() is a notable example. By default, events are dispatched to event handlers like <db:link xlink:href="qobject.xml#timerEvent">QObject::timerEvent</db:link>() and QWidget::mouseMoveEvent(). <db:link xlink:href="qobject.xml#installEventFilter">QObject::installEventFilter</db:link>() allows an object to intercept events destined for another object.</db:para>
<db:para>The basic <db:link xlink:href="qevent.xml">QEvent</db:link> contains only an event type parameter and an &quot;accept&quot; flag. The accept flag set with accept(), and cleared with ignore(). It is set by default, but don't rely on this as subclasses may choose to clear it in their constructor.</db:para>
<db:para>Subclasses of <db:link xlink:href="qevent.xml">QEvent</db:link> contain additional parameters that describe the particular event.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qobject.xml#event">QObject::event</db:link>()</db:member>
<db:member><db:link xlink:href="qobject.xml#installEventFilter">QObject::installEventFilter</db:link>()</db:member>
<db:member><db:link xlink:href="">QCoreApplication::sendEvent()</db:link></db:member>
<db:member><db:link xlink:href="">QCoreApplication::postEvent()</db:link></db:member>
<db:member><db:link xlink:href="">QCoreApplication::processEvents()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:article>
