<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title></db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Direct3D 11 specific initialization parameters.</db:para>
<db:para>This struct was introduced in Qt 6.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>rhi/qrhi.h</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::GuiPrivate)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui-private</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:note>
<db:para>This is a RHI API with limited compatibility guarantees, see <db:link xlink:href="qrhi.xml">QRhi</db:link> for details.</db:para>
</db:note>
<db:para>A D3D11-based <db:link xlink:href="qrhi.xml">QRhi</db:link> needs no special parameters for initialization. If desired, <db:link xlink:href="qrhid3d11initparams.xml#enableDebugLayer-var">enableDebugLayer</db:link> can be set to <db:code>true</db:code> to enable the Direct3D debug layer. This can be useful during development, but should be avoided in production builds.</db:para>
<db:programlisting language="cpp" role="bad">QRhiD3D11InitParams params;
params.enableDebugLayer = true;
rhi = QRhi::create(QRhi::D3D11, &amp;params);
</db:programlisting>
<db:note>
<db:para><db:link xlink:href="qrhiswapchain.xml">QRhiSwapChain</db:link> should only be used in combination with <db:link xlink:href="qwindow.xml">QWindow</db:link> instances that have their surface type set to <db:link xlink:href="qsurface.xml#SurfaceType-enum">QSurface::Direct3DSurface</db:link>.</db:para>
</db:note>
<db:section xml:id="working-with-existing-direct3d-11-devices">
<db:title>Working with existing Direct3D 11 devices</db:title>
<db:para>When interoperating with another graphics engine, it may be necessary to get a <db:link xlink:href="qrhi.xml">QRhi</db:link> instance that uses the same Direct3D device. This can be achieved by passing a pointer to a <db:link xlink:href="qrhid3d11nativehandles.xml">QRhiD3D11NativeHandles</db:link> to <db:link xlink:href="qrhi.xml#create">QRhi::create</db:link>(). When the device is set to a non-null value, the device context must be specified as well. <db:link xlink:href="qrhi.xml">QRhi</db:link> does not take ownership of any of the external objects.</db:para>
<db:para>Sometimes, for example when using <db:link xlink:href="qrhi.xml">QRhi</db:link> in combination with OpenXR, one will want to specify which adapter to use, and optionally, which feature level to request on the device, while leaving the device creation to <db:link xlink:href="qrhi.xml">QRhi</db:link>. This is achieved by leaving the device and context pointers set to null, while specifying the adapter LUID and feature level.</db:para>
<db:note>
<db:para><db:link xlink:href="qrhi.xml">QRhi</db:link> works with immediate contexts only. Deferred contexts are not used in any way.</db:para>
</db:note>
<db:note>
<db:para>Regardless of using an imported or a <db:link xlink:href="qrhi.xml">QRhi</db:link>-created device context, the <db:code>ID3D11DeviceContext1</db:code> interface (Direct3D 11.1) must be supported. Initialization will fail otherwise.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="member-variable-documentation">
<db:title>Member Variable Documentation</db:title>
<db:section xml:id="enableDebugLayer-var">
<db:title>bool QRhiD3D11InitParams::enableDebugLayer</db:title>
<db:para>When set to true, a debug device is created, assuming the debug layer is available. The default value is false.</db:para>
</db:section>
</db:section>
</db:article>
