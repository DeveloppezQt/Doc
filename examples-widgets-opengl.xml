<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>OpenGL Examples from the Qt OpenGL module</db:title>
<db:productname>QtOpenGL</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>QtOpenGL Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Accessing OpenGL from Qt.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="details"/>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/opengl-examples.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>These examples describe how to use the <db:link xlink:href="qtopengl-index.xml">Qt OpenGL</db:link> module. For new code, please use the OpenGL classes in the <db:link xlink:href="qtgui-index.xml">Qt GUI</db:link> module.</db:para>
<db:para>Qt provides support for integration with OpenGL implementations on all platforms, giving developers the opportunity to display hardware accelerated 3D graphics alongside a more conventional user interface.</db:para>
<db:para>These examples demonstrate the basic techniques used to take advantage of OpenGL in Qt applications.</db:para>
<db:variablelist role="members">
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-2dpainting-example.xml" xlink:role="page">2D Painting Example</db:link></db:term>
<db:listitem>
<db:para>The 2D Painting example shows how QPainter and QGLWidget can be used together to display accelerated 2D graphics on supported hardware.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-cube-example.xml" xlink:role="page">Cube OpenGL ES 2.0 example</db:link></db:term>
<db:listitem>
<db:para>The Cube OpenGL ES 2.0 example shows how to write mouse rotateable textured 3D cube using OpenGL ES 2.0 with Qt. It shows how to handle polygon geometries efficiently and how to write simple vertex and fragment shader for programmable graphics pipeline. In addition it shows how to use quaternions for representing 3D object orientation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-framebufferobject2-example.xml" xlink:role="page">Framebuffer Object 2 Example</db:link></db:term>
<db:listitem>
<db:para>The Framebuffer Object 2 example demonstrates how to use the QGLFramebufferObject class to render into an off-screen buffer and use the contents as a texture in a QGLWidget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-grabber-example.xml" xlink:role="page">Grabber Example</db:link></db:term>
<db:listitem>
<db:para>The Grabber examples shows how to retrieve the contents of an OpenGL framebuffer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-hellogl-example.xml" xlink:role="page">Hello GL Example</db:link></db:term>
<db:listitem>
<db:para>The Hello GL example demonstrates the basic use of the OpenGL-related classes provided with Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-overpainting-example.xml" xlink:role="page">Overpainting Example</db:link></db:term>
<db:listitem>
<db:para>The Overpainting example shows how QPainter can be used to overpaint a scene rendered using OpenGL in a QGLWidget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-pbuffers2-example.xml" xlink:role="page">Pixel Buffers 2 Example</db:link></db:term>
<db:listitem>
<db:para>The Pixel Buffers 2 example demonstrates how to use the QGLPixelBuffer class to render into an off-screen buffer and use the contents as a dynamic texture in a QGLWidget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-pbuffers-example.xml" xlink:role="page">Pixel Buffers Example</db:link></db:term>
<db:listitem>
<db:para>The Pixel Buffers example demonstrates how to use the QGLPixelBuffer class to render into an off-screen buffer and use the contents as a dynamic texture in a QGLWidget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-samplebuffers-example.xml" xlink:role="page">Sample Buffers Example</db:link></db:term>
<db:listitem>
<db:para>The Sample Buffers example demonstrates how to use and enable sample buffers in a QGLWidget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-textures-example.xml" xlink:role="page">Textures Example</db:link></db:term>
<db:listitem>
<db:para>The Textures example demonstrates the use of Qt's image classes as textures in applications that use both OpenGL and Qt to display graphics.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:article>
