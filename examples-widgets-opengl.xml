<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt OpenGL Examples</db:title>
<db:productname>QtOpenGL</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>QtOpenGL Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Accessing OpenGL from Qt.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="details"/>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/opengl-examples.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>These examples describe how to use the <db:link xlink:href="qtopengl-index.xml">Qt OpenGL</db:link> module.</db:para>
<db:para>Qt provides support for integration with OpenGL implementations, giving developers the opportunity to display hardware accelerated 3D graphics alongside a more conventional user interface.</db:para>
<db:para>These examples demonstrate the basic techniques used to take advantage of OpenGL in Qt applications.</db:para>
<db:variablelist role="members">
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-2dpainting-example.xml" xlink:role="page">2D Painting Example</db:link></db:term>
<db:listitem>
<db:para>The 2D Painting example shows how QPainter and QOpenGLWidget can be used together to display accelerated 2D graphics on supported hardware.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-cube-example.xml" xlink:role="page">Cube OpenGL ES 2.0 example</db:link></db:term>
<db:listitem>
<db:para>Shows how to manually rotate a textured 3D cube with user input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-hellogl2-example.xml" xlink:role="page">Hello GL2 Example</db:link></db:term>
<db:listitem>
<db:para>The Hello GL2 example demonstrates the basic use of the OpenGL-related classes provided with Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-hellogles3-example.xml" xlink:role="page">Hello GLES3 Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates OpenGL ES 3.0 functions via QOpenGLExtraFunctions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-openglwindow-example.xml" xlink:role="page">OpenGL Window Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a minimal QWindow based application for the purpose of using OpenGL.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-stereoqopenglwidget-example.xml" xlink:role="page">QOpenGLWidget Stereoscopic Rendering Example</db:link></db:term>
<db:listitem>
<db:para>This example shows how to create a minimal QOpenGLWidget based application with stereoscopic rendering support.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtopengl-textures-example.xml" xlink:role="page">Textures Example</db:link></db:term>
<db:listitem>
<db:para>The Textures example demonstrates the use of Qt's image classes as textures in applications that use both OpenGL and Qt to display graphics.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:article>
