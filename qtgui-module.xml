<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt GUI C++ Classes</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 5.11.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Qt GUI module provides the basic enablers for graphical applications written with Qt.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt GUI module provides the basic enablers for graphical applications written with Qt.</db:para>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="qabstractopenglfunctions.xml" xlink:role="class">QAbstractOpenGLFunctions</db:link></db:term>
<db:listitem>
<db:para>The QAbstractOpenGLFunctions class is the base class of a family of classes that expose all functions for each OpenGL version and profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstracttextdocumentlayout.xml" xlink:role="class">QAbstractTextDocumentLayout</db:link></db:term>
<db:listitem>
<db:para>The QAbstractTextDocumentLayout class is an abstract base class used to implement custom layouts for QTextDocuments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstracttextdocumentlayout-paintcontext.xml" xlink:role="class">QAbstractTextDocumentLayout::PaintContext</db:link></db:term>
<db:listitem>
<db:para>The QAbstractTextDocumentLayout::PaintContext class is a convenience class defining the parameters used when painting a document's layout.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstracttextdocumentlayout-selection.xml" xlink:role="class">QAbstractTextDocumentLayout::Selection</db:link></db:term>
<db:listitem>
<db:para>The QAbstractTextDocumentLayout::Selection class is a convenience class defining the parameters of a selection.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessible.xml" xlink:role="class">QAccessible</db:link></db:term>
<db:listitem>
<db:para>The QAccessible class provides enums and static functions related to accessibility.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessible-state.xml" xlink:role="class">QAccessible::State</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibleactioninterface.xml" xlink:role="class">QAccessibleActionInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleActionInterface class implements support for invocable actions in the interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibleeditabletextinterface.xml" xlink:role="class">QAccessibleEditableTextInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleEditableTextInterface class implements support for objects with editable text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibleevent.xml" xlink:role="class">QAccessibleEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleEvent class is the base class for accessibility notifications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibleinterface.xml" xlink:role="class">QAccessibleInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleInterface class defines an interface that exposes information about accessible objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibleobject.xml" xlink:role="class">QAccessibleObject</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleObject class implements parts of the QAccessibleInterface for QObjects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibleplugin.xml" xlink:role="class">QAccessiblePlugin</db:link></db:term>
<db:listitem>
<db:para>The QAccessiblePlugin class provides an abstract base class for plugins provinding accessibility information for user interface elements.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessiblestatechangeevent.xml" xlink:role="class">QAccessibleStateChangeEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleStateChangeEvent notfies the accessibility framework that the state of an object has changed.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletablecellinterface.xml" xlink:role="class">QAccessibleTableCellInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTableCellInterface class implements support for the IAccessibleTable2 Cell interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletableinterface.xml" xlink:role="class">QAccessibleTableInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTableInterface class implements support for the IAccessibleTable2 interface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletablemodelchangeevent.xml" xlink:role="class">QAccessibleTableModelChangeEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTableModelChangeEvent signifies a change in a table, list, or tree where cells are added or removed. If the change affected a number of rows, firstColumn and lastColumn will return -1. Likewise for columns, the row functions may return -1.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletextcursorevent.xml" xlink:role="class">QAccessibleTextCursorEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTextCursorEvent class notifies of cursor movements.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletextinsertevent.xml" xlink:role="class">QAccessibleTextInsertEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTextInsertEvent class notifies of text being inserted.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletextinterface.xml" xlink:role="class">QAccessibleTextInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTextInterface class implements support for text handling.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletextremoveevent.xml" xlink:role="class">QAccessibleTextRemoveEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTextRemoveEvent class notifies of text being deleted.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletextselectionevent.xml" xlink:role="class">QAccessibleTextSelectionEvent</db:link></db:term>
<db:listitem>
<db:para>QAccessibleTextSelectionEvent signals a change in the text selection of an object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessibletextupdateevent.xml" xlink:role="class">QAccessibleTextUpdateEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleTextUpdateEvent class notifies about text changes. This is for accessibles that support editable text such as line edits. This event occurs for example when a portion of selected text gets replaced by pasting a new text or in override mode of editors.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessiblevaluechangeevent.xml" xlink:role="class">QAccessibleValueChangeEvent</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleValueChangeEvent describes a change in value for an accessible object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessiblevalueinterface.xml" xlink:role="class">QAccessibleValueInterface</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleValueInterface class implements support for objects that manipulate a value.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qactionevent.xml" xlink:role="class">QActionEvent</db:link></db:term>
<db:listitem>
<db:para>The QActionEvent class provides an event that is generated when a QAction is added, removed, or changed.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbackingstore.xml" xlink:role="class">QBackingStore</db:link></db:term>
<db:listitem>
<db:para>The QBackingStore class provides a drawing area for QWindow.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbitmap.xml" xlink:role="class">QBitmap</db:link></db:term>
<db:listitem>
<db:para>The QBitmap class provides monochrome (1-bit depth) pixmaps.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbrush.xml" xlink:role="class">QBrush</db:link></db:term>
<db:listitem>
<db:para>The QBrush class defines the fill pattern of shapes drawn by QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qclipboard.xml" xlink:role="class">QClipboard</db:link></db:term>
<db:listitem>
<db:para>The QClipboard class provides access to the window system clipboard.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcloseevent.xml" xlink:role="class">QCloseEvent</db:link></db:term>
<db:listitem>
<db:para>The QCloseEvent class contains parameters that describe a close event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcolor.xml" xlink:role="class">QColor</db:link></db:term>
<db:listitem>
<db:para>The QColor class provides colors based on RGB, HSV or CMYK values.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qconicalgradient.xml" xlink:role="class">QConicalGradient</db:link></db:term>
<db:listitem>
<db:para>The QConicalGradient class is used in combination with QBrush to specify a conical gradient brush.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcontextmenuevent.xml" xlink:role="class">QContextMenuEvent</db:link></db:term>
<db:listitem>
<db:para>The QContextMenuEvent class contains parameters that describe a context menu event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcursor.xml" xlink:role="class">QCursor</db:link></db:term>
<db:listitem>
<db:para>The QCursor class provides a mouse cursor with an arbitrary shape.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesktopservices.xml" xlink:role="class">QDesktopServices</db:link></db:term>
<db:listitem>
<db:para>The QDesktopServices class provides methods for accessing common desktop services.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdoublevalidator.xml" xlink:role="class">QDoubleValidator</db:link></db:term>
<db:listitem>
<db:para>The QDoubleValidator class provides range checking of floating-point numbers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdrag.xml" xlink:role="class">QDrag</db:link></db:term>
<db:listitem>
<db:para>The QDrag class provides support for MIME-based drag and drop data transfer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdragenterevent.xml" xlink:role="class">QDragEnterEvent</db:link></db:term>
<db:listitem>
<db:para>The QDragEnterEvent class provides an event which is sent to a widget when a drag and drop action enters it.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdragleaveevent.xml" xlink:role="class">QDragLeaveEvent</db:link></db:term>
<db:listitem>
<db:para>The QDragLeaveEvent class provides an event that is sent to a widget when a drag and drop action leaves it.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdragmoveevent.xml" xlink:role="class">QDragMoveEvent</db:link></db:term>
<db:listitem>
<db:para>The QDragMoveEvent class provides an event which is sent while a drag and drop action is in progress.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdropevent.xml" xlink:role="class">QDropEvent</db:link></db:term>
<db:listitem>
<db:para>The QDropEvent class provides an event which is sent when a drag and drop action is completed.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qenterevent.xml" xlink:role="class">QEnterEvent</db:link></db:term>
<db:listitem>
<db:para>The QEnterEvent class contains parameters that describe an enter event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qexposeevent.xml" xlink:role="class">QExposeEvent</db:link></db:term>
<db:listitem>
<db:para>The QExposeEvent class contains event parameters for expose events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfileopenevent.xml" xlink:role="class">QFileOpenEvent</db:link></db:term>
<db:listitem>
<db:para>The QFileOpenEvent class provides an event that will be sent when there is a request to open a file or a URL.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfocusevent.xml" xlink:role="class">QFocusEvent</db:link></db:term>
<db:listitem>
<db:para>The QFocusEvent class contains event parameters for widget focus events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfont.xml" xlink:role="class">QFont</db:link></db:term>
<db:listitem>
<db:para>The QFont class specifies a font used for drawing text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfontdatabase.xml" xlink:role="class">QFontDatabase</db:link></db:term>
<db:listitem>
<db:para>The QFontDatabase class provides information about the fonts available in the underlying window system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfontinfo.xml" xlink:role="class">QFontInfo</db:link></db:term>
<db:listitem>
<db:para>The QFontInfo class provides general information about fonts.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfontmetrics.xml" xlink:role="class">QFontMetrics</db:link></db:term>
<db:listitem>
<db:para>The QFontMetrics class provides font metrics information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfontmetricsf.xml" xlink:role="class">QFontMetricsF</db:link></db:term>
<db:listitem>
<db:para>The QFontMetricsF class provides font metrics information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgenericmatrix.xml" xlink:role="class">QGenericMatrix</db:link></db:term>
<db:listitem>
<db:para>The QGenericMatrix class is a template class that represents a NxM transformation matrix with N columns and M rows.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgenericplugin.xml" xlink:role="class">QGenericPlugin</db:link></db:term>
<db:listitem>
<db:para>The QGenericPlugin class is an abstract base class for plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgenericpluginfactory.xml" xlink:role="class">QGenericPluginFactory</db:link></db:term>
<db:listitem>
<db:para>The QGenericPluginFactory class creates plugin drivers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qglyphrun.xml" xlink:role="class">QGlyphRun</db:link></db:term>
<db:listitem>
<db:para>The QGlyphRun class provides direct access to the internal glyphs in a font.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgradient.xml" xlink:role="class">QGradient</db:link></db:term>
<db:listitem>
<db:para>The QGradient class is used in combination with QBrush to specify gradient fills.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qguiapplication.xml" xlink:role="class">QGuiApplication</db:link></db:term>
<db:listitem>
<db:para>The QGuiApplication class manages the GUI application's control flow and main settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhelpevent.xml" xlink:role="class">QHelpEvent</db:link></db:term>
<db:listitem>
<db:para>The QHelpEvent class provides an event that is used to request helpful information about a particular point in a widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhideevent.xml" xlink:role="class">QHideEvent</db:link></db:term>
<db:listitem>
<db:para>The QHideEvent class provides an event which is sent after a widget is hidden.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhoverevent.xml" xlink:role="class">QHoverEvent</db:link></db:term>
<db:listitem>
<db:para>The QHoverEvent class contains parameters that describe a mouse event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qicon.xml" xlink:role="class">QIcon</db:link></db:term>
<db:listitem>
<db:para>The QIcon class provides scalable icons in different modes and states.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qicondragevent.xml" xlink:role="class">QIconDragEvent</db:link></db:term>
<db:listitem>
<db:para>The QIconDragEvent class indicates that a main icon drag has begun.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qiconengine.xml" xlink:role="class">QIconEngine</db:link></db:term>
<db:listitem>
<db:para>The QIconEngine class provides an abstract base class for QIcon renderers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qiconengine-availablesizesargument.xml" xlink:role="class">QIconEngine::AvailableSizesArgument</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qiconengine-scaledpixmapargument.xml" xlink:role="class">QIconEngine::ScaledPixmapArgument</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qiconengineplugin.xml" xlink:role="class">QIconEnginePlugin</db:link></db:term>
<db:listitem>
<db:para>The QIconEnginePlugin class provides an abstract base for custom QIconEngine plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimage.xml" xlink:role="class">QImage</db:link></db:term>
<db:listitem>
<db:para>The QImage class provides a hardware-independent image representation that allows direct access to the pixel data, and can be used as a paint device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimageiohandler.xml" xlink:role="class">QImageIOHandler</db:link></db:term>
<db:listitem>
<db:para>The QImageIOHandler class defines the common image I/O interface for all image formats in Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimageioplugin.xml" xlink:role="class">QImageIOPlugin</db:link></db:term>
<db:listitem>
<db:para>The QImageIOPlugin class defines an interface for writing an image format plugin.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimagereader.xml" xlink:role="class">QImageReader</db:link></db:term>
<db:listitem>
<db:para>The QImageReader class provides a format independent interface for reading images from files or other devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimagewriter.xml" xlink:role="class">QImageWriter</db:link></db:term>
<db:listitem>
<db:para>The QImageWriter class provides a format independent interface for writing images to files or other devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qinputevent.xml" xlink:role="class">QInputEvent</db:link></db:term>
<db:listitem>
<db:para>The QInputEvent class is the base class for events that describe user input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qinputmethod.xml" xlink:role="class">QInputMethod</db:link></db:term>
<db:listitem>
<db:para>The QInputMethod class provides access to the active text input method.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qinputmethodevent.xml" xlink:role="class">QInputMethodEvent</db:link></db:term>
<db:listitem>
<db:para>The QInputMethodEvent class provides parameters for input method events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qinputmethodevent-attribute.xml" xlink:role="class">QInputMethodEvent::Attribute</db:link></db:term>
<db:listitem>
<db:para>The QInputMethodEvent::Attribute class stores an input method attribute.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qinputmethodqueryevent.xml" xlink:role="class">QInputMethodQueryEvent</db:link></db:term>
<db:listitem>
<db:para>The QInputMethodQueryEvent class provides an event sent by the input context to input objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qintvalidator.xml" xlink:role="class">QIntValidator</db:link></db:term>
<db:listitem>
<db:para>The QIntValidator class provides a validator that ensures a string contains a valid integer within a specified range.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qkeyevent.xml" xlink:role="class">QKeyEvent</db:link></db:term>
<db:listitem>
<db:para>The QKeyEvent class describes a key event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qkeysequence.xml" xlink:role="class">QKeySequence</db:link></db:term>
<db:listitem>
<db:para>The QKeySequence class encapsulates a key sequence as used by shortcuts.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlineargradient.xml" xlink:role="class">QLinearGradient</db:link></db:term>
<db:listitem>
<db:para>The QLinearGradient class is used in combination with QBrush to specify a linear gradient brush.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmatrix4x4.xml" xlink:role="class">QMatrix4x4</db:link></db:term>
<db:listitem>
<db:para>The QMatrix4x4 class represents a 4x4 transformation matrix in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmouseevent.xml" xlink:role="class">QMouseEvent</db:link></db:term>
<db:listitem>
<db:para>The QMouseEvent class contains parameters that describe a mouse event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmoveevent.xml" xlink:role="class">QMoveEvent</db:link></db:term>
<db:listitem>
<db:para>The QMoveEvent class contains event parameters for move events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmovie.xml" xlink:role="class">QMovie</db:link></db:term>
<db:listitem>
<db:para>The QMovie class is a convenience class for playing movies with QImageReader.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qnativegestureevent.xml" xlink:role="class">QNativeGestureEvent</db:link></db:term>
<db:listitem>
<db:para>The QNativeGestureEvent class contains parameters that describe a gesture event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qoffscreensurface.xml" xlink:role="class">QOffscreenSurface</db:link></db:term>
<db:listitem>
<db:para>The QOffscreenSurface class represents an offscreen surface in the underlying platform.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglbuffer.xml" xlink:role="class">QOpenGLBuffer</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLBuffer class provides functions for creating and managing OpenGL buffer objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglcontext.xml" xlink:role="class">QOpenGLContext</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLContext class represents a native OpenGL context, enabling OpenGL rendering on a QSurface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglcontextgroup.xml" xlink:role="class">QOpenGLContextGroup</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLContextGroup class represents a group of contexts sharing OpenGL resources.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopengldebuglogger.xml" xlink:role="class">QOpenGLDebugLogger</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLDebugLogger enables logging of OpenGL debugging messages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopengldebugmessage.xml" xlink:role="class">QOpenGLDebugMessage</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLDebugMessage class wraps an OpenGL debug message.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglextrafunctions.xml" xlink:role="class">QOpenGLExtraFunctions</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLExtraFunctions class provides cross-platform access to the OpenGL ES 3.0, 3.1 and 3.2 API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglframebufferobject.xml" xlink:role="class">QOpenGLFramebufferObject</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFramebufferObject class encapsulates an OpenGL framebuffer object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglframebufferobjectformat.xml" xlink:role="class">QOpenGLFramebufferObjectFormat</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFramebufferObjectFormat class specifies the format of an OpenGL framebuffer object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions.xml" xlink:role="class">QOpenGLFunctions</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions class provides cross-platform access to the OpenGL ES 2.0 API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-1-0.xml" xlink:role="class">QOpenGLFunctions_1_0</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_1_0 class provides all functions for OpenGL 1.0 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-1-1.xml" xlink:role="class">QOpenGLFunctions_1_1</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_1_1 class provides all functions for OpenGL 1.1 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-1-2.xml" xlink:role="class">QOpenGLFunctions_1_2</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_1_2 class provides all functions for OpenGL 1.2 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-1-3.xml" xlink:role="class">QOpenGLFunctions_1_3</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_1_3 class provides all functions for OpenGL 1.3 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-1-4.xml" xlink:role="class">QOpenGLFunctions_1_4</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_1_4 class provides all functions for OpenGL 1.4 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-1-5.xml" xlink:role="class">QOpenGLFunctions_1_5</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_1_5 class provides all functions for OpenGL 1.5 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-2-0.xml" xlink:role="class">QOpenGLFunctions_2_0</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_2_0 class provides all functions for OpenGL 2.0 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-2-1.xml" xlink:role="class">QOpenGLFunctions_2_1</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_2_1 class provides all functions for OpenGL 2.1 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-3-0.xml" xlink:role="class">QOpenGLFunctions_3_0</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_3_0 class provides all functions for OpenGL 3.0 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-3-1.xml" xlink:role="class">QOpenGLFunctions_3_1</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_3_1 class provides all functions for OpenGL 3.1 specification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-3-2-compatibility.xml" xlink:role="class">QOpenGLFunctions_3_2_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_3_2_Compatibility class provides all functions for OpenGL 3.2 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-3-2-core.xml" xlink:role="class">QOpenGLFunctions_3_2_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_3_2_Core class provides all functions for OpenGL 3.2 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-3-3-compatibility.xml" xlink:role="class">QOpenGLFunctions_3_3_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_3_3_Compatibility class provides all functions for OpenGL 3.3 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-3-3-core.xml" xlink:role="class">QOpenGLFunctions_3_3_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_3_3_Core class provides all functions for OpenGL 3.3 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-0-compatibility.xml" xlink:role="class">QOpenGLFunctions_4_0_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_0_Compatibility class provides all functions for OpenGL 4.0 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-0-core.xml" xlink:role="class">QOpenGLFunctions_4_0_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_0_Core class provides all functions for OpenGL 4.0 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-1-compatibility.xml" xlink:role="class">QOpenGLFunctions_4_1_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_1_Compatibility class provides all functions for OpenGL 4.1 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-1-core.xml" xlink:role="class">QOpenGLFunctions_4_1_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_1_Core class provides all functions for OpenGL 4.1 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-2-compatibility.xml" xlink:role="class">QOpenGLFunctions_4_2_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_2_Compatibility class provides all functions for OpenGL 4.2 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-2-core.xml" xlink:role="class">QOpenGLFunctions_4_2_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_2_Core class provides all functions for OpenGL 4.2 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-3-compatibility.xml" xlink:role="class">QOpenGLFunctions_4_3_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_3_Compatibility class provides all functions for OpenGL 4.3 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-3-core.xml" xlink:role="class">QOpenGLFunctions_4_3_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_3_Core class provides all functions for OpenGL 4.3 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-4-compatibility.xml" xlink:role="class">QOpenGLFunctions_4_4_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_4_Compatibility class provides all functions for OpenGL 4.4 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-4-core.xml" xlink:role="class">QOpenGLFunctions_4_4_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_4_Core class provides all functions for OpenGL 4.4 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-5-compatibility.xml" xlink:role="class">QOpenGLFunctions_4_5_Compatibility</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_5_Compatibility class provides all functions for OpenGL 4.5 compatibility profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-4-5-core.xml" xlink:role="class">QOpenGLFunctions_4_5_Core</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_4_5_Core class provides all functions for OpenGL 4.5 core profile.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglfunctions-es2.xml" xlink:role="class">QOpenGLFunctions_ES2</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLFunctions_ES2 class provides all functions for OpenGL ES 2.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglpaintdevice.xml" xlink:role="class">QOpenGLPaintDevice</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLPaintDevice class enables painting to an OpenGL context using QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglpixeltransferoptions.xml" xlink:role="class">QOpenGLPixelTransferOptions</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLPixelTransferOptions class describes the pixel storage modes that affect the unpacking of pixels during texture upload.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglshader.xml" xlink:role="class">QOpenGLShader</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLShader class allows OpenGL shaders to be compiled.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglshaderprogram.xml" xlink:role="class">QOpenGLShaderProgram</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLShaderProgram class allows OpenGL shader programs to be linked and used.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopengltexture.xml" xlink:role="class">QOpenGLTexture</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLTexture class encapsulates an OpenGL texture object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopengltextureblitter.xml" xlink:role="class">QOpenGLTextureBlitter</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLTextureBlitter class provides a convenient way to draw textured quads via OpenGL.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopengltimemonitor.xml" xlink:role="class">QOpenGLTimeMonitor</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLTimeMonitor class wraps a sequence of OpenGL timer query objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopengltimerquery.xml" xlink:role="class">QOpenGLTimerQuery</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLTimerQuery class wraps an OpenGL timer query object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglversionprofile.xml" xlink:role="class">QOpenGLVersionProfile</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLVersionProfile class represents the version and if applicable the profile of an OpenGL context.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglvertexarrayobject.xml" xlink:role="class">QOpenGLVertexArrayObject</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLVertexArrayObject class wraps an OpenGL Vertex Array Object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglvertexarrayobject-binder.xml" xlink:role="class">QOpenGLVertexArrayObject::Binder</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLVertexArrayObject::Binder class is a convenience class to help with the binding and releasing of OpenGL Vertex Array Objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qopenglwindow.xml" xlink:role="class">QOpenGLWindow</db:link></db:term>
<db:listitem>
<db:para>The QOpenGLWindow class is a convenience subclass of QWindow to perform OpenGL painting.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpagelayout.xml" xlink:role="class">QPageLayout</db:link></db:term>
<db:listitem>
<db:para>Describes the size, orientation and margins of a page.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpagesize.xml" xlink:role="class">QPageSize</db:link></db:term>
<db:listitem>
<db:para>The QPageSize class describes the size and name of a defined page size.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpagedpaintdevice.xml" xlink:role="class">QPagedPaintDevice</db:link></db:term>
<db:listitem>
<db:para>The QPagedPaintDevice class is a represents a paintdevice that supports multiple pages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpaintdevice.xml" xlink:role="class">QPaintDevice</db:link></db:term>
<db:listitem>
<db:para>The QPaintDevice class is the base class of objects that can be painted on with QPainter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpaintdevicewindow.xml" xlink:role="class">QPaintDeviceWindow</db:link></db:term>
<db:listitem>
<db:para>Convenience subclass of QWindow that is also a QPaintDevice.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpaintengine.xml" xlink:role="class">QPaintEngine</db:link></db:term>
<db:listitem>
<db:para>The QPaintEngine class provides an abstract definition of how QPainter draws to a given device on a given platform.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpaintenginestate.xml" xlink:role="class">QPaintEngineState</db:link></db:term>
<db:listitem>
<db:para>The QPaintEngineState class provides information about the active paint engine's current state.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpaintevent.xml" xlink:role="class">QPaintEvent</db:link></db:term>
<db:listitem>
<db:para>The QPaintEvent class contains event parameters for paint events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpainter.xml" xlink:role="class">QPainter</db:link></db:term>
<db:listitem>
<db:para>The QPainter class performs low-level painting on widgets and other paint devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpainter-pixmapfragment.xml" xlink:role="class">QPainter::PixmapFragment</db:link></db:term>
<db:listitem>
<db:para>This class is used in conjunction with the QPainter::drawPixmapFragments() function to specify how a pixmap, or sub-rect of a pixmap, is drawn.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpainterpath.xml" xlink:role="class">QPainterPath</db:link></db:term>
<db:listitem>
<db:para>The QPainterPath class provides a container for painting operations, enabling graphical shapes to be constructed and reused.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpainterpath-element.xml" xlink:role="class">QPainterPath::Element</db:link></db:term>
<db:listitem>
<db:para>The QPainterPath::Element class specifies the position and type of a subpath.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpainterpathstroker.xml" xlink:role="class">QPainterPathStroker</db:link></db:term>
<db:listitem>
<db:para>The QPainterPathStroker class is used to generate fillable outlines for a given painter path.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpalette.xml" xlink:role="class">QPalette</db:link></db:term>
<db:listitem>
<db:para>The QPalette class contains color groups for each widget state.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpdfwriter.xml" xlink:role="class">QPdfWriter</db:link></db:term>
<db:listitem>
<db:para>The QPdfWriter class is a class to generate PDFs that can be used as a paint device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpen.xml" xlink:role="class">QPen</db:link></db:term>
<db:listitem>
<db:para>The QPen class defines how a QPainter should draw lines and outlines of shapes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpicture.xml" xlink:role="class">QPicture</db:link></db:term>
<db:listitem>
<db:para>The QPicture class is a paint device that records and replays QPainter commands.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpixelformat.xml" xlink:role="class">QPixelFormat</db:link></db:term>
<db:listitem>
<db:para>QPixelFormat is a class for describing different pixel layouts in graphics buffers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpixmap.xml" xlink:role="class">QPixmap</db:link></db:term>
<db:listitem>
<db:para>The QPixmap class is an off-screen image representation that can be used as a paint device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpixmapcache.xml" xlink:role="class">QPixmapCache</db:link></db:term>
<db:listitem>
<db:para>The QPixmapCache class provides an application-wide cache for pixmaps.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpixmapcache-key.xml" xlink:role="class">QPixmapCache::Key</db:link></db:term>
<db:listitem>
<db:para>The QPixmapCache::Key class can be used for efficient access to the QPixmapCache.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplatformsurfaceevent.xml" xlink:role="class">QPlatformSurfaceEvent</db:link></db:term>
<db:listitem>
<db:para>The QPlatformSurfaceEvent class is used to notify about native platform surface events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpointingdeviceuniqueid.xml" xlink:role="class">QPointingDeviceUniqueId</db:link></db:term>
<db:listitem>
<db:para>QPointingDeviceUniqueId identifies a unique object, such as a tagged token or stylus, which is used with a pointing device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpolygon.xml" xlink:role="class">QPolygon</db:link></db:term>
<db:listitem>
<db:para>The QPolygon class provides a vector of points using integer precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpolygonf.xml" xlink:role="class">QPolygonF</db:link></db:term>
<db:listitem>
<db:para>The QPolygonF class provides a vector of points using floating point precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qquaternion.xml" xlink:role="class">QQuaternion</db:link></db:term>
<db:listitem>
<db:para>The QQuaternion class represents a quaternion consisting of a vector and scalar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qradialgradient.xml" xlink:role="class">QRadialGradient</db:link></db:term>
<db:listitem>
<db:para>The QRadialGradient class is used in combination with QBrush to specify a radial gradient brush.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrasterpaintengine.xml" xlink:role="class">QRasterPaintEngine</db:link></db:term>
<db:listitem>
<db:para>The QRasterPaintEngine class enables hardware acceleration of painting operations in Qt for Embedded Linux.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrasterwindow.xml" xlink:role="class">QRasterWindow</db:link></db:term>
<db:listitem>
<db:para>QRasterWindow is a convenience class for using QPainter on a QWindow.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrawfont.xml" xlink:role="class">QRawFont</db:link></db:term>
<db:listitem>
<db:para>The QRawFont class provides access to a single physical instance of a font.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qregexpvalidator.xml" xlink:role="class">QRegExpValidator</db:link></db:term>
<db:listitem>
<db:para>The QRegExpValidator class is used to check a string against a regular expression.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qregion.xml" xlink:role="class">QRegion</db:link></db:term>
<db:listitem>
<db:para>The QRegion class specifies a clip region for a painter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qregularexpressionvalidator.xml" xlink:role="class">QRegularExpressionValidator</db:link></db:term>
<db:listitem>
<db:para>The QRegularExpressionValidator class is used to check a string against a regular expression.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qresizeevent.xml" xlink:role="class">QResizeEvent</db:link></db:term>
<db:listitem>
<db:para>The QResizeEvent class contains event parameters for resize events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrgba64.xml" xlink:role="class">QRgba64</db:link></db:term>
<db:listitem>
<db:para>The QRgba64 struct contains a 64-bit RGB color.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscreen.xml" xlink:role="class">QScreen</db:link></db:term>
<db:listitem>
<db:para>The QScreen class is used to query screen properties.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscrollevent.xml" xlink:role="class">QScrollEvent</db:link></db:term>
<db:listitem>
<db:para>The QScrollEvent class is sent when scrolling.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscrollprepareevent.xml" xlink:role="class">QScrollPrepareEvent</db:link></db:term>
<db:listitem>
<db:para>The QScrollPrepareEvent class is sent in preparation of scrolling.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsessionmanager.xml" xlink:role="class">QSessionManager</db:link></db:term>
<db:listitem>
<db:para>The QSessionManager class provides access to the session manager.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qshortcutevent.xml" xlink:role="class">QShortcutEvent</db:link></db:term>
<db:listitem>
<db:para>The QShortcutEvent class provides an event which is generated when the user presses a key combination.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qshowevent.xml" xlink:role="class">QShowEvent</db:link></db:term>
<db:listitem>
<db:para>The QShowEvent class provides an event that is sent when a widget is shown.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstandarditem.xml" xlink:role="class">QStandardItem</db:link></db:term>
<db:listitem>
<db:para>The QStandardItem class provides an item for use with the QStandardItemModel class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstandarditemmodel.xml" xlink:role="class">QStandardItemModel</db:link></db:term>
<db:listitem>
<db:para>The QStandardItemModel class provides a generic model for storing custom data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstatictext.xml" xlink:role="class">QStaticText</db:link></db:term>
<db:listitem>
<db:para>The QStaticText class enables optimized drawing of text when the text and its layout is updated rarely.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstatustipevent.xml" xlink:role="class">QStatusTipEvent</db:link></db:term>
<db:listitem>
<db:para>The QStatusTipEvent class provides an event that is used to show messages in a status bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstylehints.xml" xlink:role="class">QStyleHints</db:link></db:term>
<db:listitem>
<db:para>The QStyleHints class contains platform specific hints and settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsupportedwritingsystems.xml" xlink:role="class">QSupportedWritingSystems</db:link></db:term>
<db:listitem>
<db:para>The QSupportedWritingSystems class is used when registering fonts with the internal Qt fontdatabase.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsurface.xml" xlink:role="class">QSurface</db:link></db:term>
<db:listitem>
<db:para>The QSurface class is an abstraction of renderable surfaces in Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsurfaceformat.xml" xlink:role="class">QSurfaceFormat</db:link></db:term>
<db:listitem>
<db:para>The QSurfaceFormat class represents the format of a QSurface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsyntaxhighlighter.xml" xlink:role="class">QSyntaxHighlighter</db:link></db:term>
<db:listitem>
<db:para>The QSyntaxHighlighter class allows you to define syntax highlighting rules, and in addition you can use the class to query a document's current formatting or user data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtabletevent.xml" xlink:role="class">QTabletEvent</db:link></db:term>
<db:listitem>
<db:para>The QTabletEvent class contains parameters that describe a Tablet event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextblock.xml" xlink:role="class">QTextBlock</db:link></db:term>
<db:listitem>
<db:para>The QTextBlock class provides a container for text fragments in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextblock-iterator.xml" xlink:role="class">QTextBlock::iterator</db:link></db:term>
<db:listitem>
<db:para>The QTextBlock::iterator class provides an iterator for reading the contents of a QTextBlock.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextblockformat.xml" xlink:role="class">QTextBlockFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextBlockFormat class provides formatting information for blocks of text in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextblockgroup.xml" xlink:role="class">QTextBlockGroup</db:link></db:term>
<db:listitem>
<db:para>The QTextBlockGroup class provides a container for text blocks within a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextblockuserdata.xml" xlink:role="class">QTextBlockUserData</db:link></db:term>
<db:listitem>
<db:para>The QTextBlockUserData class is used to associate custom data with blocks of text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextcharformat.xml" xlink:role="class">QTextCharFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextCharFormat class provides formatting information for characters in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextcursor.xml" xlink:role="class">QTextCursor</db:link></db:term>
<db:listitem>
<db:para>The QTextCursor class offers an API to access and modify QTextDocuments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextdocument.xml" xlink:role="class">QTextDocument</db:link></db:term>
<db:listitem>
<db:para>The QTextDocument class holds formatted text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextdocumentfragment.xml" xlink:role="class">QTextDocumentFragment</db:link></db:term>
<db:listitem>
<db:para>The QTextDocumentFragment class represents a piece of formatted text from a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextdocumentwriter.xml" xlink:role="class">QTextDocumentWriter</db:link></db:term>
<db:listitem>
<db:para>The QTextDocumentWriter class provides a format-independent interface for writing a QTextDocument to files or other devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextformat.xml" xlink:role="class">QTextFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextFormat class provides formatting information for a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextfragment.xml" xlink:role="class">QTextFragment</db:link></db:term>
<db:listitem>
<db:para>The QTextFragment class holds a piece of text in a QTextDocument with a single QTextCharFormat.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextframe.xml" xlink:role="class">QTextFrame</db:link></db:term>
<db:listitem>
<db:para>The QTextFrame class represents a frame in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextframeformat.xml" xlink:role="class">QTextFrameFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextFrameFormat class provides formatting information for frames in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextimageformat.xml" xlink:role="class">QTextImageFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextImageFormat class provides formatting information for images in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextinlineobject.xml" xlink:role="class">QTextInlineObject</db:link></db:term>
<db:listitem>
<db:para>The QTextInlineObject class represents an inline object in a QAbstractTextDocumentLayout and its implementations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextitem.xml" xlink:role="class">QTextItem</db:link></db:term>
<db:listitem>
<db:para>The QTextItem class provides all the information required to draw text in a custom paint engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextlayout.xml" xlink:role="class">QTextLayout</db:link></db:term>
<db:listitem>
<db:para>The QTextLayout class is used to lay out and render text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextlayout-formatrange.xml" xlink:role="class">QTextLayout::FormatRange</db:link></db:term>
<db:listitem>
<db:para>The QTextLayout::FormatRange structure is used to apply extra formatting information for a specified area in the text layout's content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextlength.xml" xlink:role="class">QTextLength</db:link></db:term>
<db:listitem>
<db:para>The QTextLength class encapsulates the different types of length used in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextline.xml" xlink:role="class">QTextLine</db:link></db:term>
<db:listitem>
<db:para>The QTextLine class represents a line of text inside a QTextLayout.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextlist.xml" xlink:role="class">QTextList</db:link></db:term>
<db:listitem>
<db:para>The QTextList class provides a decorated list of items in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextlistformat.xml" xlink:role="class">QTextListFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextListFormat class provides formatting information for lists in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextobject.xml" xlink:role="class">QTextObject</db:link></db:term>
<db:listitem>
<db:para>The QTextObject class is a base class for different kinds of objects that can group parts of a QTextDocument together.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextobjectinterface.xml" xlink:role="class">QTextObjectInterface</db:link></db:term>
<db:listitem>
<db:para>The QTextObjectInterface class allows drawing of custom text objects in QTextDocuments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextoption.xml" xlink:role="class">QTextOption</db:link></db:term>
<db:listitem>
<db:para>The QTextOption class provides a description of general rich text properties.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextoption-tab.xml" xlink:role="class">QTextOption::Tab</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtexttable.xml" xlink:role="class">QTextTable</db:link></db:term>
<db:listitem>
<db:para>The QTextTable class represents a table in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtexttablecell.xml" xlink:role="class">QTextTableCell</db:link></db:term>
<db:listitem>
<db:para>The QTextTableCell class represents the properties of a cell in a QTextTable.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtexttablecellformat.xml" xlink:role="class">QTextTableCellFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextTableCellFormat class provides formatting information for table cells in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtexttableformat.xml" xlink:role="class">QTextTableFormat</db:link></db:term>
<db:listitem>
<db:para>The QTextTableFormat class provides formatting information for tables in a QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtouchdevice.xml" xlink:role="class">QTouchDevice</db:link></db:term>
<db:listitem>
<db:para>The QTouchDevice class describes the device from which touch events originate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtouchevent.xml" xlink:role="class">QTouchEvent</db:link></db:term>
<db:listitem>
<db:para>The QTouchEvent class contains parameters that describe a touch event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtouchevent-touchpoint.xml" xlink:role="class">QTouchEvent::TouchPoint</db:link></db:term>
<db:listitem>
<db:para>The TouchPoint class provides information about a touch point in a QTouchEvent.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtransform.xml" xlink:role="class">QTransform</db:link></db:term>
<db:listitem>
<db:para>The QTransform class specifies 2D transformations of a coordinate system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvalidator.xml" xlink:role="class">QValidator</db:link></db:term>
<db:listitem>
<db:para>The QValidator class provides validation of input text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvector2d.xml" xlink:role="class">QVector2D</db:link></db:term>
<db:listitem>
<db:para>The QVector2D class represents a vector or vertex in 2D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvector3d.xml" xlink:role="class">QVector3D</db:link></db:term>
<db:listitem>
<db:para>The QVector3D class represents a vector or vertex in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvector4d.xml" xlink:role="class">QVector4D</db:link></db:term>
<db:listitem>
<db:para>The QVector4D class represents a vector or vertex in 4D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvulkandevicefunctions.xml" xlink:role="class">QVulkanDeviceFunctions</db:link></db:term>
<db:listitem>
<db:para>The QVulkanDeviceFunctions class provides cross-platform access to the device level core Vulkan 1.0 API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvulkanextension.xml" xlink:role="class">QVulkanExtension</db:link></db:term>
<db:listitem>
<db:para>Represents information about a Vulkan extension.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvulkanfunctions.xml" xlink:role="class">QVulkanFunctions</db:link></db:term>
<db:listitem>
<db:para>The QVulkanFunctions class provides cross-platform access to the instance level core Vulkan 1.0 API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvulkaninfovector.xml" xlink:role="class">QVulkanInfoVector</db:link></db:term>
<db:listitem>
<db:para>A specialized QVector for QVulkanLayer and QVulkanExtension.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvulkaninstance.xml" xlink:role="class">QVulkanInstance</db:link></db:term>
<db:listitem>
<db:para>The QVulkanInstance class represents a native Vulkan instance, enabling Vulkan rendering onto a QSurface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvulkanlayer.xml" xlink:role="class">QVulkanLayer</db:link></db:term>
<db:listitem>
<db:para>Represents information about a Vulkan layer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvulkanwindow.xml" xlink:role="class">QVulkanWindow</db:link></db:term>
<db:listitem>
<db:para>The QVulkanWindow class is a convenience subclass of QWindow to perform Vulkan rendering.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvulkanwindowrenderer.xml" xlink:role="class">QVulkanWindowRenderer</db:link></db:term>
<db:listitem>
<db:para>The QVulkanWindowRenderer class is used to implement the application-specific rendering logic for a QVulkanWindow.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwhatsthisclickedevent.xml" xlink:role="class">QWhatsThisClickedEvent</db:link></db:term>
<db:listitem>
<db:para>The QWhatsThisClickedEvent class provides an event that can be used to handle hyperlinks in a &quot;What's This?&quot; text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwheelevent.xml" xlink:role="class">QWheelEvent</db:link></db:term>
<db:listitem>
<db:para>The QWheelEvent class contains parameters that describe a wheel event.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwindow.xml" xlink:role="class">QWindow</db:link></db:term>
<db:listitem>
<db:para>The QWindow class represents a window in the underlying windowing system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwindowstatechangeevent.xml" xlink:role="class">QWindowStateChangeEvent</db:link></db:term>
<db:listitem>
<db:para>The QWindowStateChangeEvent class provides the window state before a window state change.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The Qt GUI module provides classes for windowing system integration, event handling, OpenGL and OpenGL ES integration, Vulkan integration, 2D graphics, imaging, fonts and typography. These classes are used internally by Qt's user interface technologies and can also be used directly, for instance to write applications using low-level OpenGL ES graphics APIs.</db:para>
<db:para>To include the definitions of the module's classes, use the following directive:</db:para>
<db:programlisting language="cpp">#include &amp;lt;QtGui&amp;gt;
</db:programlisting>
<db:para>If you use <db:link xlink:href="qmake-manual.xml">qmake</db:link> to build your projects, <db:link xlink:href="qtgui-index.xml">Qt GUI</db:link> is included by default. To disable Qt GUI, add the following line to your <db:code>.pro</db:code> file:</db:para>
<db:programlisting language="cpp">QT -= gui
</db:programlisting>
</db:section>
</db:article>
