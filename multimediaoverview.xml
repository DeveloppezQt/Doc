<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Multimedia</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>A set of APIs for working with audio, video, radio and camera devices.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Multimedia support in Qt is provided by the <db:link xlink:href="qtmultimedia-index.xml">Qt Multimedia</db:link> module. The Qt Multimedia module provides a rich feature set that enables you to easily take advantage of a platform's multimedia capabilities such as media playback and the use of camera and radio devices.</db:para>
<db:section xml:id="features">
<db:title>Features</db:title>
<db:para>Here are some examples of what can be done with Qt Multimedia APIs:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Access raw audio devices for input and output</db:para>
</db:listitem>
<db:listitem>
<db:para>Play low latency sound effects</db:para>
</db:listitem>
<db:listitem>
<db:para>Play media files in playlists (such as compressed audio or video files)</db:para>
</db:listitem>
<db:listitem>
<db:para>Record audio and compress it</db:para>
</db:listitem>
<db:listitem>
<db:para>Tune and listen to radio stations</db:para>
</db:listitem>
<db:listitem>
<db:para>Use a camera, including viewfinder, image capture, and movie recording</db:para>
</db:listitem>
<db:listitem>
<db:para>Play 3D positional audio with <db:link xlink:href="qtaudioengine-qmlmodule.xml">Qt Audio Engine</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para>Decode audio media files into memory for processing</db:para>
</db:listitem>
<db:listitem>
<db:para>Accessing video frames or audio buffers as they are played or recorded</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="multimedia-components">
<db:title>Multimedia Components</db:title>
<db:para>Qt's multimedia APIs are categorized into four main components. More information (including background information and class references) is available here:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="audiooverview.xml">Audio Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="videooverview.xml">Video Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="cameraoverview.xml">Camera Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="radiooverview.xml">Radio Overview</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="multimedia-recipes">
<db:title>Multimedia Recipes</db:title>
<db:para>For some quick recipes, look at the overviews above and consult this table:</db:para>
<db:informaltable style="generic" width="70%">
<db:thead>
<db:tr>
<db:th>
<db:para>Use case</db:para>
</db:th>
<db:th>
<db:para>Examples</db:para>
</db:th>
<db:th>
<db:para>QML Types</db:para>
</db:th>
<db:th>
<db:para>C++ Classes</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>Playing a sound effect</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para><db:link xlink:href="qsoundeffect.xml">QSoundEffect</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Playing low latency audio</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtmultimedia-multimedia-audioinput-example.xml">audioinput</db:link>, <db:link xlink:href="qtmultimedia-multimedia-spectrum-example.xml">spectrum</db:link></db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para><db:link xlink:href="qaudiooutput.xml">QAudioOutput</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Playing encoded audio (MP3, AAC etc)</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtmultimedia-multimediawidgets-player-example.xml">player</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-audio.xml">Audio</db:link>, <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qmediaplayer.xml">QMediaPlayer</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Accessing raw audio input data</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtmultimedia-multimedia-spectrum-example.xml">spectrum</db:link>, <db:link xlink:href="qtmultimedia-multimedia-audioinput-example.xml">audioinput</db:link></db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para><db:link xlink:href="qaudioinput.xml">QAudioInput</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Recording encoded audio data</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtmultimedia-multimedia-audiorecorder-example.xml">audiorecorder</db:link></db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para><db:link xlink:href="qaudiorecorder.xml">QAudioRecorder</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Discovering raw audio devices</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtmultimedia-multimedia-audiodevices-example.xml">audiodevices</db:link></db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para><db:link xlink:href="qaudiodeviceinfo.xml">QAudioDeviceInfo</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Video Playback</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtmultimedia-multimediawidgets-player-example.xml">player</db:link>, <db:link xlink:href="qtmultimedia-multimedia-video-qmlvideo-example.xml">qmlvideo</db:link>, <db:link xlink:href="qtmultimedia-multimedia-video-qmlvideofx-example.xml">qmlvideofx</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>, <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link>, <db:link xlink:href="qml-qtmultimedia-video.xml">Video</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qmediaplayer.xml">QMediaPlayer</db:link>, <db:link xlink:href="qvideowidget.xml">QVideoWidget</db:link>, <db:link xlink:href="qgraphicsvideoitem.xml">QGraphicsVideoItem</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Video Processing</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtmultimedia-multimedia-video-qmlvideo-example.xml">qmlvideofx</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link>, <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qmediaplayer.xml">QMediaPlayer</db:link>, <db:link xlink:href="qabstractvideosurface.xml">QAbstractVideoSurface</db:link>, <db:link xlink:href="qvideoframe.xml">QVideoFrame</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Listening to the radio</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtmultimedia-multimedia-declarative-radio-example.xml">declarative-radio</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-radio.xml">Radio</db:link>, <db:link xlink:href="qml-qtmultimedia-radiodata.xml">RadioData</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qradiotuner.xml">QRadioTuner</db:link>, <db:link xlink:href="qradiodata.xml">QRadioData</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Accessing camera viewfinder</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtmultimedia-multimediawidgets-camera-example.xml">camera</db:link>, <db:link xlink:href="qtmultimedia-multimedia-declarative-camera-example.xml">declarative-camera</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-camera.xml">Camera</db:link>, <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qcamera.xml">QCamera</db:link>, <db:link xlink:href="qvideowidget.xml">QVideoWidget</db:link>, <db:link xlink:href="qgraphicsvideoitem.xml">QGraphicsVideoItem</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Viewfinder processing</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-camera.xml">Camera</db:link>, <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qcamera.xml">QCamera</db:link>, <db:link xlink:href="qabstractvideosurface.xml">QAbstractVideoSurface</db:link>, <db:link xlink:href="qvideoframe.xml">QVideoFrame</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Capturing photos</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtmultimedia-multimediawidgets-camera-example.xml">camera</db:link>, <db:link xlink:href="qtmultimedia-multimedia-declarative-camera-example.xml">declarative-camera</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-camera.xml">Camera</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qcamera.xml">QCamera</db:link>, <db:link xlink:href="qcameraimagecapture.xml">QCameraImageCapture</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Capturing movies</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtmultimedia-multimediawidgets-camera-example.xml">camera</db:link>, <db:link xlink:href="qtmultimedia-multimedia-declarative-camera-example.xml">declarative-camera</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtmultimedia-camera.xml">Camera</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qcamera.xml">QCamera</db:link>, <db:link xlink:href="qmediarecorder.xml">QMediaRecorder</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>3D sound sources</db:para>
</db:td>
<db:td>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtmultimedia-multimedia-audioengine-example.xml">Audio Engine</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtaudioengine-audioengine.xml">AudioEngine</db:link>, <db:link xlink:href="qml-qtaudioengine-sound.xml">Sound</db:link></db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="limitations">
<db:title>Limitations</db:title>
<db:para>The Qt Multimedia APIs build upon the multimedia framework of the underlying platform. This can mean that support for various codecs or containers can vary between machines, depending on what the end user has installed.</db:para>
</db:section>
<db:section xml:id="advanced-usage">
<db:title>Advanced Usage</db:title>
<db:para>For developers wishing to access some platform specific settings, or to port the Qt Multimedia APIs to a new platform or technology, see <db:link xlink:href="multimediabackend.xml">Multimedia Backend Development</db:link>.</db:para>
</db:section>
<db:section xml:id="changes-from-previous-versions">
<db:title>Changes from Previous Versions</db:title>
<db:para>If you previously used Qt Multimedia in Qt 4, or used Qt Multimedia Kit in Qt Mobility, please see <db:link xlink:href="changes.xml">Changes in Qt Multimedia</db:link> for more information on what changed, and what you might need to change when porting code.</db:para>
</db:section>
<db:section xml:id="reference-documentation">
<db:title>Reference Documentation</db:title>
<db:section xml:id="qml-types">
<db:title>QML Types</db:title>
<db:para>The QML types are accessed by using:</db:para>
<db:programlisting language="cpp">import QtMultimedia 5.6
</db:programlisting>
<db:variablelist role="multimedia_qml">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-audio.xml" xlink:role="">Audio</db:link></db:term>
<db:listitem>
<db:para>Add audio playback to a scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-camera.xml" xlink:role="">Camera</db:link></db:term>
<db:listitem>
<db:para>Access viewfinder frames, and take photos and movies.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-cameracapture.xml" xlink:role="">CameraCapture</db:link></db:term>
<db:listitem>
<db:para>An interface for capturing camera images</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-cameraexposure.xml" xlink:role="">CameraExposure</db:link></db:term>
<db:listitem>
<db:para>An interface for exposure related camera settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-cameraflash.xml" xlink:role="">CameraFlash</db:link></db:term>
<db:listitem>
<db:para>An interface for flash related camera settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-camerafocus.xml" xlink:role="">CameraFocus</db:link></db:term>
<db:listitem>
<db:para>An interface for focus related camera settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-cameraimageprocessing.xml" xlink:role="">CameraImageProcessing</db:link></db:term>
<db:listitem>
<db:para>An interface for camera capture related settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-camerarecorder.xml" xlink:role="">CameraRecorder</db:link></db:term>
<db:listitem>
<db:para>Controls video recording with the Camera.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml" xlink:role="">MediaPlayer</db:link></db:term>
<db:listitem>
<db:para>Add media playback to a scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-playlist.xml" xlink:role="">Playlist</db:link></db:term>
<db:listitem>
<db:para>For specifying a list of media to be played.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-playlistitem.xml" xlink:role="">PlaylistItem</db:link></db:term>
<db:listitem>
<db:para>Defines an item in a Playlist.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-qtmultimedia.xml" xlink:role="">QtMultimedia</db:link></db:term>
<db:listitem>
<db:para>Provides a global object with useful functions from Qt Multimedia.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-radio.xml" xlink:role="">Radio</db:link></db:term>
<db:listitem>
<db:para>Access radio functionality from a QML application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-radiodata.xml" xlink:role="">RadioData</db:link></db:term>
<db:listitem>
<db:para>Access RDS data from a QML application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-soundeffect.xml" xlink:role="">SoundEffect</db:link></db:term>
<db:listitem>
<db:para>The SoundEffect type provides a way to play sound effects in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-torch.xml" xlink:role="">Torch</db:link></db:term>
<db:listitem>
<db:para>Simple control over torch functionality</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-video.xml" xlink:role="">Video</db:link></db:term>
<db:listitem>
<db:para>A convenience type for showing a specified video.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-videooutput.xml" xlink:role="">VideoOutput</db:link></db:term>
<db:listitem>
<db:para>Render video or camera viewfinder.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para>The following types are accessed by using <db:link xlink:href="qtaudioengine-qmlmodule.xml">Qt Audio Engine</db:link>:</db:para>
<db:programlisting language="cpp">import QtAudioEngine 1.1
</db:programlisting>
<db:variablelist role="multimedia_audioengine">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtaudioengine-attenuationmodelinverse.xml" xlink:role="">AttenuationModelInverse</db:link></db:term>
<db:listitem>
<db:para>Defines a non-linear attenuation curve for a Sound.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtaudioengine-attenuationmodellinear.xml" xlink:role="">AttenuationModelLinear</db:link></db:term>
<db:listitem>
<db:para>Defines a linear attenuation curve for a Sound.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtaudioengine-audiocategory.xml" xlink:role="">AudioCategory</db:link></db:term>
<db:listitem>
<db:para>Control all active sound instances by group.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtaudioengine-audioengine.xml" xlink:role="">AudioEngine</db:link></db:term>
<db:listitem>
<db:para>Organize all your 3d audio content in one place.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtaudioengine-audiolistener.xml" xlink:role="">AudioListener</db:link></db:term>
<db:listitem>
<db:para>Control global listener parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtaudioengine-audiosample.xml" xlink:role="">AudioSample</db:link></db:term>
<db:listitem>
<db:para>Load audio samples, mostly .wav.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtaudioengine-playvariation.xml" xlink:role="">PlayVariation</db:link></db:term>
<db:listitem>
<db:para>Define a playback variation for sounds. So each time the playback of the same sound can be a slightly different even with the same AudioSample.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtaudioengine-sound.xml" xlink:role="">Sound</db:link></db:term>
<db:listitem>
<db:para>Define a variety of samples and parameters to be used for SoundInstance.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtaudioengine-soundinstance.xml" xlink:role="">SoundInstance</db:link></db:term>
<db:listitem>
<db:para>Play 3d audio content.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="multimedia-classes">
<db:title>Multimedia Classes</db:title>
<db:variablelist role="multimedia">
<db:varlistentry>
<db:term><db:link xlink:href="qabstractplanarvideobuffer.xml" xlink:role="class">QAbstractPlanarVideoBuffer</db:link></db:term>
<db:listitem>
<db:para>The QAbstractPlanarVideoBuffer class is an abstraction for planar video data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractvideobuffer.xml" xlink:role="class">QAbstractVideoBuffer</db:link></db:term>
<db:listitem>
<db:para>The QAbstractVideoBuffer class is an abstraction for video data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractvideofilter.xml" xlink:role="class">QAbstractVideoFilter</db:link></db:term>
<db:listitem>
<db:para>The QAbstractVideoFilter class represents a filter that is applied to the video frames received by a VideoOutput type.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractvideosurface.xml" xlink:role="class">QAbstractVideoSurface</db:link></db:term>
<db:listitem>
<db:para>The QAbstractVideoSurface class is a base class for video presentation surfaces.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudio.xml" xlink:role="namespace">QAudio</db:link></db:term>
<db:listitem>
<db:para>The QAudio namespace contains enums used by the audio classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiobuffer.xml" xlink:role="class">QAudioBuffer</db:link></db:term>
<db:listitem>
<db:para>The QAudioBuffer class represents a collection of audio samples with a specific format and sample rate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiobuffer-stereoframe.xml" xlink:role="class">QAudioBuffer::StereoFrame</db:link></db:term>
<db:listitem>
<db:para>The StereoFrame class provides a simple wrapper for a stereo audio frame.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiodecoder.xml" xlink:role="class">QAudioDecoder</db:link></db:term>
<db:listitem>
<db:para>The QAudioDecoder class allows decoding audio.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiodeviceinfo.xml" xlink:role="class">QAudioDeviceInfo</db:link></db:term>
<db:listitem>
<db:para>The QAudioDeviceInfo class provides an interface to query audio devices and their functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudioencodersettings.xml" xlink:role="class">QAudioEncoderSettings</db:link></db:term>
<db:listitem>
<db:para>The QAudioEncoderSettings class provides a set of audio encoder settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudioformat.xml" xlink:role="class">QAudioFormat</db:link></db:term>
<db:listitem>
<db:para>The QAudioFormat class stores audio stream parameter information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudioinput.xml" xlink:role="class">QAudioInput</db:link></db:term>
<db:listitem>
<db:para>The QAudioInput class provides an interface for receiving audio data from an audio input device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiooutput.xml" xlink:role="class">QAudioOutput</db:link></db:term>
<db:listitem>
<db:para>The QAudioOutput class provides an interface for sending audio data to an audio output device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudioprobe.xml" xlink:role="class">QAudioProbe</db:link></db:term>
<db:listitem>
<db:para>The QAudioProbe class allows you to monitor audio being played or recorded.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaudiorecorder.xml" xlink:role="class">QAudioRecorder</db:link></db:term>
<db:listitem>
<db:para>The QAudioRecorder class is used for the recording of audio.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamera.xml" xlink:role="class">QCamera</db:link></db:term>
<db:listitem>
<db:para>The QCamera class provides interface for system camera devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamera-frameraterange.xml" xlink:role="class">QCamera::FrameRateRange</db:link></db:term>
<db:listitem>
<db:para>A FrameRateRange represents a range of frame rates as minimum and maximum rate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraexposure.xml" xlink:role="class">QCameraExposure</db:link></db:term>
<db:listitem>
<db:para>The QCameraExposure class provides interface for exposure related camera settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamerafocus.xml" xlink:role="class">QCameraFocus</db:link></db:term>
<db:listitem>
<db:para>The QCameraFocus class provides an interface for focus and zoom related camera settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamerafocuszone.xml" xlink:role="class">QCameraFocusZone</db:link></db:term>
<db:listitem>
<db:para>The QCameraFocusZone class provides information on zones used for autofocusing a camera.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraimagecapture.xml" xlink:role="class">QCameraImageCapture</db:link></db:term>
<db:listitem>
<db:para>The QCameraImageCapture class is used for the recording of media content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraimageprocessing.xml" xlink:role="class">QCameraImageProcessing</db:link></db:term>
<db:listitem>
<db:para>The QCameraImageProcessing class provides an interface for image processing related camera settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcamerainfo.xml" xlink:role="class">QCameraInfo</db:link></db:term>
<db:listitem>
<db:para>The QCameraInfo class provides general information about camera devices.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcameraviewfindersettings.xml" xlink:role="class">QCameraViewfinderSettings</db:link></db:term>
<db:listitem>
<db:para>The QCameraViewfinderSettings class provides a set of viewfinder settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicseffect.xml" xlink:role="class">QGraphicsEffect</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsEffect class is the base class for all graphics effects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsvideoitem.xml" xlink:role="class">QGraphicsVideoItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsVideoItem class provides a graphics item which display video produced by a QMediaObject.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimageencodersettings.xml" xlink:role="class">QImageEncoderSettings</db:link></db:term>
<db:listitem>
<db:para>The QImageEncoderSettings class provides a set of image encoder settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediabindableinterface.xml" xlink:role="class">QMediaBindableInterface</db:link></db:term>
<db:listitem>
<db:para>The QMediaBindableInterface class is the base class for objects extending media objects functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediacontent.xml" xlink:role="class">QMediaContent</db:link></db:term>
<db:listitem>
<db:para>The QMediaContent class provides access to the resources relating to a media content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediacontrol.xml" xlink:role="class">QMediaControl</db:link></db:term>
<db:listitem>
<db:para>The QMediaControl class provides a base interface for media service controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediametadata.xml" xlink:role="namespace">QMediaMetaData</db:link></db:term>
<db:listitem>
<db:para>Provides identifiers for meta-data attributes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaobject.xml" xlink:role="class">QMediaObject</db:link></db:term>
<db:listitem>
<db:para>The QMediaObject class provides a common base for multimedia objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaplayer.xml" xlink:role="class">QMediaPlayer</db:link></db:term>
<db:listitem>
<db:para>The QMediaPlayer class allows the playing of a media source.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaplaylist.xml" xlink:role="class">QMediaPlaylist</db:link></db:term>
<db:listitem>
<db:para>The QMediaPlaylist class provides a list of media content to play.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediarecorder.xml" xlink:role="class">QMediaRecorder</db:link></db:term>
<db:listitem>
<db:para>The QMediaRecorder class is used for the recording of media content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaresource.xml" xlink:role="class">QMediaResource</db:link></db:term>
<db:listitem>
<db:para>The QMediaResource class provides a description of a media resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediaservice.xml" xlink:role="class">QMediaService</db:link></db:term>
<db:listitem>
<db:para>The QMediaService class provides a common base class for media service implementations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediatimeinterval.xml" xlink:role="class">QMediaTimeInterval</db:link></db:term>
<db:listitem>
<db:para>The QMediaTimeInterval class represents a time interval with integer precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmediatimerange.xml" xlink:role="class">QMediaTimeRange</db:link></db:term>
<db:listitem>
<db:para>The QMediaTimeRange class represents a set of zero or more disjoint time intervals.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmultimedia.xml" xlink:role="namespace">QMultimedia</db:link></db:term>
<db:listitem>
<db:para>The QMultimedia namespace contains miscellaneous identifiers used throughout the Qt Multimedia library.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qradiodata.xml" xlink:role="class">QRadioData</db:link></db:term>
<db:listitem>
<db:para>The QRadioData class provides interfaces to the RDS functionality of the system radio.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qradiotuner.xml" xlink:role="class">QRadioTuner</db:link></db:term>
<db:listitem>
<db:para>The QRadioTuner class provides an interface to the systems analog radio device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsound.xml" xlink:role="class">QSound</db:link></db:term>
<db:listitem>
<db:para>The QSound class provides a method to play .wav sound files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsoundeffect.xml" xlink:role="class">QSoundEffect</db:link></db:term>
<db:listitem>
<db:para>The QSoundEffect class provides a way to play low latency sound effects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstatictext.xml" xlink:role="class">QStaticText</db:link></db:term>
<db:listitem>
<db:para>The QStaticText class enables optimized drawing of text when the text and its layout is updated rarely.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideoencodersettings.xml" xlink:role="class">QVideoEncoderSettings</db:link></db:term>
<db:listitem>
<db:para>The QVideoEncoderSettings class provides a set of video encoder settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideofilterrunnable.xml" xlink:role="class">QVideoFilterRunnable</db:link></db:term>
<db:listitem>
<db:para>The QVideoFilterRunnable class represents the implementation of a filter that owns all graphics and computational resources, and performs the actual filtering or calculations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideoframe.xml" xlink:role="class">QVideoFrame</db:link></db:term>
<db:listitem>
<db:para>The QVideoFrame class represents a frame of video data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideoprobe.xml" xlink:role="class">QVideoProbe</db:link></db:term>
<db:listitem>
<db:para>The QVideoProbe class allows you to monitor video frames being played or recorded.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideosurfaceformat.xml" xlink:role="class">QVideoSurfaceFormat</db:link></db:term>
<db:listitem>
<db:para>The QVideoSurfaceFormat class specifies the stream format of a video presentation surface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvideowidget.xml" xlink:role="class">QVideoWidget</db:link></db:term>
<db:listitem>
<db:para>The QVideoWidget class provides a widget which presents video produced by a media object.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
</db:section>
</db:article>
