<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAudioRecorder Class</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qaudiorecorder.xml">QAudioRecorder</db:link> class is used for the recording of audio.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAudioRecorder</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += multimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qmediarecorder.xml" xlink:role="class">QMediaRecorder</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QAudioRecorder is part of <db:simplelist><db:member>multimedia</db:member><db:member>multimedia_recording</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qaudiorecorder.xml">QAudioRecorder</db:link> class is a high level media recording class and contains the same functionality as <db:link xlink:href="qmediarecorder.xml">QMediaRecorder</db:link>.</db:para>
<db:programlisting language="cpp">audioRecorder = new QAudioRecorder;

QAudioEncoderSettings audioSettings;
audioSettings.setCodec(&quot;audio/amr&quot;);
audioSettings.setQuality(QMultimedia::HighQuality);

audioRecorder-&gt;setEncodingSettings(audioSettings);

audioRecorder-&gt;setOutputLocation(QUrl::fromLocalFile(&quot;test.amr&quot;));
audioRecorder-&gt;record();
</db:programlisting>
<db:para>In addition <db:link xlink:href="qaudiorecorder.xml">QAudioRecorder</db:link> provides functionality for selecting the audio input.</db:para>
<db:programlisting language="cpp">QStringList inputs = audioRecorder-&gt;audioInputs();
QString selectedInput = audioRecorder-&gt;defaultAudioInput();

foreach (QString input, inputs) {
    QString description = audioRecorder-&gt;audioInputDescription(input);
    // show descriptions to user and allow selection
    selectedInput = input;
}

audioRecorder-&gt;setAudioInput(selectedInput);
</db:programlisting>
<db:para>The <db:link xlink:href="qtmultimedia-multimedia-audiorecorder-example.xml">Audio Recorder Example</db:link> shows how to use this class in more detail.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediarecorder.xml">QMediaRecorder</db:link></db:member>
<db:member><db:link xlink:href="qaudioinputselectorcontrol.xml">QAudioInputSelectorControl</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="audioInput-prop">
<db:title>audioInput : QString</db:title>
<db:para>This property holds the active audio input name.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qaudiorecorder.xml#audioInput">audioInput</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qaudiorecorder.xml#setAudioInput">setAudioInput</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>name</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qaudiorecorder.xml#audioInputChanged">audioInputChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>name</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QAudioRecorder">
<db:title>[explicit] QAudioRecorder::QAudioRecorder(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs an audio recorder. The <db:code role="parameter">parent</db:code> is passed to <db:link xlink:href="qmediaobject.xml">QMediaObject</db:link>.</db:para>
</db:section>
<db:section xml:id="dtor.QAudioRecorder">
<db:title>[virtual noexcept] QAudioRecorder::~QAudioRecorder()</db:title>
<db:para>Destroys an audio recorder object.</db:para>
</db:section>
<db:section xml:id="audioInput">
<db:title>QString QAudioRecorder::audioInput() const</db:title>
<db:para>Returns the active audio input name.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qaudiorecorder.xml#audioInput-prop">audioInput</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudiorecorder.xml#setAudioInput">setAudioInput</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="audioInputChanged">
<db:title>void QAudioRecorder::audioInputChanged(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Signal emitted when active audio input changes to <db:code role="parameter">name</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qaudiorecorder.xml#audioInput-prop">audioInput</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="audioInputDescription">
<db:title>QString QAudioRecorder::audioInputDescription(const QString &amp;<db:emphasis>name</db:emphasis>) const</db:title>
<db:para>Returns the readable translated description of the audio input device with <db:code role="parameter">name</db:code>.</db:para>
</db:section>
<db:section xml:id="audioInputs">
<db:title>QStringList QAudioRecorder::audioInputs() const</db:title>
<db:para>Returns a list of available audio inputs</db:para>
</db:section>
<db:section xml:id="availableAudioInputsChanged">
<db:title>void QAudioRecorder::availableAudioInputsChanged()</db:title>
<db:para>Signal is emitted when the available audio inputs change.</db:para>
</db:section>
<db:section xml:id="defaultAudioInput">
<db:title>QString QAudioRecorder::defaultAudioInput() const</db:title>
<db:para>Returns the default audio input name.</db:para>
</db:section>
<db:section xml:id="setAudioInput">
<db:title>void QAudioRecorder::setAudioInput(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Set the active audio input to <db:code role="parameter">name</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qaudiorecorder.xml#audioInput-prop">audioInput</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudiorecorder.xml#audioInput">audioInput</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
