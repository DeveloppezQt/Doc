<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Porting C++ Applications to Qt 5</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides instructions to migrate a Qt 4 C++ application to Qt 5.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>This topic talks about the Qt Widgets changes in Qt 5. The following step-by-step instructions take you through the changes required to port the <db:link xlink:href="qtwidgets-animation-animatedtiles-example.xml">Animated Tiles</db:link> application to Qt 5:</db:para>
<db:orderedlist numeration="arabic">
<db:listitem>
<db:para>Open the Animated Tiles project using Qt Creator.</db:para>
</db:listitem>
<db:listitem>
<db:para>Edit main.cpp and replace the #include &lt;QtGui&gt; instance with #include &lt;QtWidgets&gt;. The Perl-script fixqt4headers.pl can be used to scan the source files of a project and perform the replacements.</db:para>
</db:listitem>
<db:listitem>
<db:para>Edit the animatedtiles.pro and add QT += widgets towards the end of the file.</db:para>
<db:note>
<db:para><db:link xlink:href="qtgui-index.xml">Qt GUI</db:link> is included by default in all Qt applications unless excluded using the QT -= gui directive in the qmake project file.</db:para>
</db:note>
</db:listitem>
<db:listitem>
<db:para>Save the changes and run the application.</db:para>
</db:listitem>
</db:orderedlist>
<db:para>Once you see the application running, check whether it behaves as expected.</db:para>
<db:mediaobject>
<db:alt>&quot;A snapshot of the \c animatedtiles application running on Ubuntu v12.04&quot;</db:alt>
<db:imageobject>
<db:imagedata fileref="images/animatedtiles_snapshot.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>It is also possible to keep the project compiling with Qt 4 and Qt 5. This requires:</db:para>
<db:orderedlist numeration="arabic">
<db:listitem>
<db:para>Omitting the module name from all includes by running the fixqt4headers.pl script with the --strip-modules option.</db:para>
</db:listitem>
<db:listitem>
<db:para>Adding scopes depending on the version of Qt to the .pro files:</db:para>
<db:programlisting language="cpp">greaterThan(QT_MAJOR_VERSION, 4): QT += widgets
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>Introducing #if scopes around code using modified API:</db:para>
<db:programlisting language="cpp">#if QT_VERSION &amp;gt;= 0x050000
    headerView-&amp;gt;setSectionResizeMode(QHeaderView::ResizeToContents);
#else
    headerView-&amp;gt;setResizeMode(QHeaderView::ResizeToContents);
#endif
</db:programlisting>
</db:listitem>
</db:orderedlist>
<db:para>if you are using Qt WebKit, see <db:link xlink:href="qtwebenginewidgets-qtwebkitportingguide.xml">Qt WebKit to Qt WebEngine</db:link> porting instructions.</db:para>
<db:section xml:id="related-topics">
<db:title>Related Topics</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="sourcebreaks.xml">C++ API Changes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="portingqmlapp.xml">Porting QML Applications to Qt 5 Example</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtexamplesandtutorials.xml">Qt Examples And Tutorials</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
