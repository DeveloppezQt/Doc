<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>EnginioOAuth2Authentication Class</db:title>
<db:productname>QtEnginio</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Client library for Enginio</db:titleabbrev>
<db:abstract>
<db:para>Represents a user that is authenticated directly by the backend using OAuth2 standard.</db:para>
<db:para>This class was introduced in Qt 5.3.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>EnginioOAuth2Authentication</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.3</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-enginio-enginiooauth2authentication.xml" xlink:role="">EnginioOAuth2Authentication</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="enginioidentity.xml" xlink:role="class">EnginioIdentity</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>EnginioOAuth2Authentication is part of <db:simplelist><db:member>enginio-client</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This class can authenticate a user by verifying the user's login and password. The user has to exist in the backend already.</db:para>
<db:para>To authenticate an instance of <db:link xlink:href="qml-enginio-enginioclient.xml">EnginioClient</db:link> called <db:code role="parameter">client</db:code> such code may be used:</db:para>
<db:programlisting language="cpp">EnginioOAuth2Authentication *identity = new EnginioOAuth2Authentication(client);
identity-&gt;setUser(_user);
identity-&gt;setPassword(_password);

client-&gt;setIdentity(identity);
</db:programlisting>
<db:para>Setting the identity will trigger an asynchronous request, resulting in EnginioClient::authenticationState() changing.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="enginioclientconnection.xml#authenticationState">EnginioClientConnection::authenticationState</db:link>()</db:member>
<db:member><db:link xlink:href="enginioclientconnection.xml#identity-prop">EnginioClientConnection::identity</db:link>()</db:member>
<db:member><db:link xlink:href="qml-enginio-enginioclient.xml#sessionAuthenticated-signal">EnginioClient::sessionAuthenticated</db:link>()</db:member>
<db:member><db:link xlink:href="qml-enginio-enginioclient.xml#sessionAuthenticationError-signal">EnginioClient::sessionAuthenticationError</db:link>()</db:member>
<db:member><db:link xlink:href="qml-enginio-enginioclient.xml#sessionTerminated-signal">EnginioClient::sessionTerminated</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="password-prop">
<db:title>password : QString</db:title>
<db:para>This property contains the password used for authentication.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">password</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setPassword</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>password</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">passwordChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>password</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="user-prop">
<db:title>user : QString</db:title>
<db:para>This property contains the user name used for authentication.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">user</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setUser</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>user</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">userChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>user</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="EnginioOAuth2Authentication">
<db:title>[explicit] EnginioOAuth2Authentication::EnginioOAuth2Authentication(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a EnginioPasswordOAuth2 instance with <db:code role="parameter">parent</db:code> as <db:link xlink:href="qobject.xml">QObject</db:link> parent.</db:para>
</db:section>
<db:section xml:id="dtor.EnginioOAuth2Authentication">
<db:title>[virtual noexcept] EnginioOAuth2Authentication::~EnginioOAuth2Authentication()</db:title>
<db:para>Destructs this EnginioPasswordOAuth2 instance.</db:para>
</db:section>
</db:section>
</db:article>
