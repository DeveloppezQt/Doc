<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QImageEncoderControl Class</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qimageencodercontrol.xml">QImageEncoderControl</db:link> class provides access to the settings of a media service that performs image encoding.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QImageEncoderControl</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += multimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qmediacontrol.xml" xlink:role="class">QMediaControl</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QImageEncoderControl is part of <db:simplelist><db:member>multimedia_control</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>If a <db:link xlink:href="qmediaservice.xml">QMediaService</db:link> supports encoding image data it will implement <db:link xlink:href="qimageencodercontrol.xml">QImageEncoderControl</db:link>. This control allows to <db:link xlink:href="qimageencodercontrol.xml#setImageSettings">set image encoding settings</db:link> and provides functions for quering supported image <db:link xlink:href="qimageencodercontrol.xml#supportedImageCodecs">codecs</db:link> and <db:link xlink:href="qimageencodercontrol.xml#supportedResolutions">resolutions</db:link>.</db:para>
<db:para>The interface name of <db:link xlink:href="qimageencodercontrol.xml">QImageEncoderControl</db:link> is <db:code>org.qt-project.qt.imageencodercontrol/5.0</db:code> as defined in <db:link xlink:href="qimageencodercontrol.xml#QImageEncoderControl_iid">QImageEncoderControl_iid</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qimageencodersettings.xml">QImageEncoderSettings</db:link></db:member>
<db:member><db:link xlink:href="qmediaservice.xml#requestControl">QMediaService::requestControl</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QImageEncoderControl">
<db:title>[explicit protected] QImageEncoderControl::QImageEncoderControl(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a new image encoder control object with the given <db:code role="parameter">parent</db:code></db:para>
</db:section>
<db:section xml:id="dtor.QImageEncoderControl">
<db:title>[virtual noexcept] QImageEncoderControl::~QImageEncoderControl()</db:title>
<db:para>Destroys the image encoder control.</db:para>
</db:section>
<db:section xml:id="imageCodecDescription">
<db:title>[pure virtual] QString QImageEncoderControl::imageCodecDescription(const QString &amp;<db:emphasis>codec</db:emphasis>) const</db:title>
<db:para>Returns a description of an image <db:code role="parameter">codec</db:code>.</db:para>
</db:section>
<db:section xml:id="imageSettings">
<db:title>[pure virtual] QImageEncoderSettings QImageEncoderControl::imageSettings() const</db:title>
<db:para>Returns the currently used image encoder settings.</db:para>
<db:para>The returned value may be different tha passed to <db:link xlink:href="qimageencodercontrol.xml#setImageSettings">QImageEncoderControl::setImageSettings</db:link>() if the settings contains the default or undefined parameters. In this case if the undefined parameters are already resolved, they should be returned.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qimageencodercontrol.xml#setImageSettings">setImageSettings</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setImageSettings">
<db:title>[pure virtual] void QImageEncoderControl::setImageSettings(const QImageEncoderSettings &amp;<db:emphasis>settings</db:emphasis>)</db:title>
<db:para>Sets the selected image encoder <db:code role="parameter">settings</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qimageencodercontrol.xml#imageSettings">imageSettings</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="supportedImageCodecs">
<db:title>[pure virtual] QStringList QImageEncoderControl::supportedImageCodecs() const</db:title>
<db:para>Returns a list of supported image codecs.</db:para>
</db:section>
<db:section xml:id="supportedResolutions">
<db:title>[pure virtual] QList&lt;QSize&gt; QImageEncoderControl::supportedResolutions(const QImageEncoderSettings &amp;<db:emphasis>settings</db:emphasis> = QImageEncoderSettings(), bool *<db:emphasis>continuous</db:emphasis> = 0) const</db:title>
<db:para>Returns a list of supported resolutions.</db:para>
<db:para>If non null image <db:code role="parameter">settings</db:code> parameter is passed, the returned list is reduced to resolutions supported with partial settings applied. It can be used to query the list of resolutions, supported by specific image codec.</db:para>
<db:para>If the encoder supports arbitrary resolutions within the supported resolutions range, *<db:code role="parameter">continuous</db:code> is set to true, otherwise *<db:code role="parameter">continuous</db:code> is set to false.</db:para>
</db:section>
</db:section>
<db:section xml:id="macro-documentation">
<db:title>Macro Documentation</db:title>
<db:section xml:id="QImageEncoderControl_iid">
<db:title>QImageEncoderControl_iid</db:title>
<db:para><db:code>org.qt-project.qt.imageencodercontrol/5.0</db:code></db:para>
<db:para>Defines the interface name of the <db:link xlink:href="qimageencodercontrol.xml">QImageEncoderControl</db:link> class.</db:para>
</db:section>
</db:section>
</db:article>
