<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QPickEvent Class</db:title>
<db:subtitle>Qt3DRender::QPickEvent</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link> class holds information when an object is picked.</db:para>
<db:para>This class was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPickEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qpicklineevent.xml" xlink:role="class">Qt3DRender::QPickLineEvent</db:link>, <db:link xlink:href="qt3drender-qpickpointevent.xml" xlink:role="class">Qt3DRender::QPickPointEvent</db:link>, and <db:link xlink:href="qt3drender-qpicktriangleevent.xml" xlink:role="class">Qt3DRender::QPickTriangleEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-pickevent.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qpicklineevent.xml" xlink:role="class">Qt3DRender::QPickLineEvent</db:link>, <db:link xlink:href="qt3drender-qpickpointevent.xml" xlink:role="class">Qt3DRender::QPickPointEvent</db:link>, and <db:link xlink:href="qt3drender-qpicktriangleevent.xml" xlink:role="class">Qt3DRender::QPickTriangleEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This is received as a parameter in most of the <db:link xlink:href="qt3drender-qobjectpicker.xml">QObjectPicker</db:link> component signals when picking succeeds.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qpickingsettings.xml">QPickingSettings</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qpicktriangleevent.xml">QPickTriangleEvent</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qobjectpicker.xml">QObjectPicker</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Buttons-enum">
<db:title>enum QPickEvent::Buttons</db:title>
<db:enumsynopsis>
<db:enumname>Buttons</db:enumname>
<db:enumitem>
<db:enumidentifier>LeftButton</db:enumidentifier>
<db:enumvalue>Qt::LeftButton</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>RightButton</db:enumidentifier>
<db:enumvalue>Qt::RightButton</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MiddleButton</db:enumidentifier>
<db:enumvalue>Qt::MiddleButton</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>BackButton</db:enumidentifier>
<db:enumvalue>Qt::BackButton</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NoButton</db:enumidentifier>
<db:enumvalue>Qt::NoButton</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link></db:emphasis>::LeftButton</db:code></db:para>
</db:td>
<db:td><db:code>Qt::LeftButton</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link></db:emphasis>::RightButton</db:code></db:para>
</db:td>
<db:td><db:code>Qt::RightButton</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link></db:emphasis>::MiddleButton</db:code></db:para>
</db:td>
<db:td><db:code>Qt::MiddleButton</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link></db:emphasis>::BackButton</db:code></db:para>
</db:td>
<db:td><db:code>Qt::BackButton</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link></db:emphasis>::NoButton</db:code></db:para>
</db:td>
<db:td><db:code>Qt::NoButton</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="Modifiers-enum">
<db:title>enum QPickEvent::Modifiers</db:title>
<db:enumsynopsis>
<db:enumname>Modifiers</db:enumname>
<db:enumitem>
<db:enumidentifier>NoModifier</db:enumidentifier>
<db:enumvalue>Qt::NoModifier</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ShiftModifier</db:enumidentifier>
<db:enumvalue>Qt::ShiftModifier</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ControlModifier</db:enumidentifier>
<db:enumvalue>Qt::ControlModifier</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AltModifier</db:enumidentifier>
<db:enumvalue>Qt::AltModifier</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MetaModifier</db:enumidentifier>
<db:enumvalue>Qt::MetaModifier</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>KeypadModifier</db:enumidentifier>
<db:enumvalue>Qt::KeypadModifier</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link></db:emphasis>::NoModifier</db:code></db:para>
</db:td>
<db:td><db:code>Qt::NoModifier</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link></db:emphasis>::ShiftModifier</db:code></db:para>
</db:td>
<db:td><db:code>Qt::ShiftModifier</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link></db:emphasis>::ControlModifier</db:code></db:para>
</db:td>
<db:td><db:code>Qt::ControlModifier</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link></db:emphasis>::AltModifier</db:code></db:para>
</db:td>
<db:td><db:code>Qt::AltModifier</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link></db:emphasis>::MetaModifier</db:code></db:para>
</db:td>
<db:td><db:code>Qt::MetaModifier</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link></db:emphasis>::KeypadModifier</db:code></db:para>
</db:td>
<db:td><db:code>Qt::KeypadModifier</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="accepted-prop">
<db:title>accepted : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>accepted</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isAccepted</db:synopsisinfo>
<db:synopsisinfo role="setter">setAccepted</db:synopsisinfo>
<db:synopsisinfo role="notifier">acceptedChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies if event has been accepted</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml#isAccepted">isAccepted</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml#setAccepted">setAccepted</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>accepted</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">acceptedChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>accepted</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="button-prop">
<db:title>[read-only] button : const Qt3DRender::QPickEvent::Buttons</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DRender::QPickEvent::Buttons</db:type>
<db:varname>button</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">button</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies mouse button that caused the event</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qpickevent.xml#Buttons-enum">Qt3DRender::QPickEvent::Buttons</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml#button">button</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="buttons-prop">
<db:title>[read-only] buttons : const int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>buttons</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">buttons</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies state of the mouse buttons for the event</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml#buttons">buttons</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="distance-prop">
<db:title>[read-only] distance : const float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>distance</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">distance</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the distance of the hit to the camera</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml#distance">distance</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="localIntersection-prop">
<db:title>[read-only] localIntersection : const QVector3D</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVector3D</db:type>
<db:varname>localIntersection</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">localIntersection</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the coordinates of the hit in the local coordinate system of the picked entity</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml#localIntersection">localIntersection</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="modifiers-prop">
<db:title>[read-only] modifiers : const int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>modifiers</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">modifiers</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies state of the mouse buttons for the event</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml#modifiers">modifiers</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="position-prop">
<db:title>[read-only] position : const QPointF</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QPointF</db:type>
<db:varname>position</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">position</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the mouse position with respect to the render area (window or quick item)</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpointf.xml">QPointF</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml#position">position</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="worldIntersection-prop">
<db:title>[read-only] worldIntersection : const QVector3D</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVector3D</db:type>
<db:varname>worldIntersection</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">worldIntersection</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the coordinates of the hit in world coordinate system</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qpickevent.xml#worldIntersection">worldIntersection</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QPickEvent">
<db:title>QPickEvent::QPickEvent()</db:title>
<db:constructorsynopsis>
<db:methodname>QPickEvent</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QPickEvent()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link>.</db:para>
</db:section>
<db:section xml:id="QPickEvent-1">
<db:title>QPickEvent::QPickEvent(const QPointF &amp;<db:emphasis>position</db:emphasis>, const QVector3D &amp;<db:emphasis>intersection</db:emphasis>, const QVector3D &amp;<db:emphasis>localIntersection</db:emphasis>, float <db:emphasis>distance</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QPickEvent</db:methodname>
<db:methodparam>
<db:type>const QPointF &amp;</db:type>
<db:parameter>position</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QVector3D &amp;</db:type>
<db:parameter>intersection</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QVector3D &amp;</db:type>
<db:parameter>localIntersection</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>distance</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QPickEvent(const QPointF &amp;position, const QVector3D &amp;intersection, const QVector3D &amp;localIntersection, float distance)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link> with the given parameters: <db:code role="parameter">position</db:code>, <db:code role="parameter">intersection</db:code>, <db:code role="parameter">localIntersection</db:code> and <db:code role="parameter">distance</db:code></db:para>
</db:section>
<db:section xml:id="QPickEvent-2">
<db:title>QPickEvent::QPickEvent(const QPointF &amp;<db:emphasis>position</db:emphasis>, const QVector3D &amp;<db:emphasis>worldIntersection</db:emphasis>, const QVector3D &amp;<db:emphasis>localIntersection</db:emphasis>, float <db:emphasis>distance</db:emphasis>, Qt3DRender::QPickEvent::Buttons <db:emphasis>button</db:emphasis>, int <db:emphasis>buttons</db:emphasis>, int <db:emphasis>modifiers</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QPickEvent</db:methodname>
<db:methodparam>
<db:type>const QPointF &amp;</db:type>
<db:parameter>position</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QVector3D &amp;</db:type>
<db:parameter>worldIntersection</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QVector3D &amp;</db:type>
<db:parameter>localIntersection</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>distance</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>Qt3DRender::QPickEvent::Buttons</db:type>
<db:parameter>button</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>buttons</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>modifiers</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QPickEvent(const QPointF &amp;position, const QVector3D &amp;worldIntersection, const QVector3D &amp;localIntersection, float distance, Qt3DRender::QPickEvent::Buttons button, int buttons, int modifiers)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link> with the given parameters: <db:code role="parameter">position</db:code>, <db:code role="parameter">worldIntersection</db:code>, <db:code role="parameter">localIntersection</db:code>, <db:code role="parameter">distance</db:code>, <db:code role="parameter">button</db:code>, <db:code role="parameter">buttons</db:code> and <db:code role="parameter">modifiers</db:code></db:para>
</db:section>
<db:section xml:id="button">
<db:title>Qt3DRender::QPickEvent::Buttons QPickEvent::button() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>Qt3DRender::QPickEvent::Buttons</db:type>
<db:methodname>button</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">button</db:synopsisinfo>
<db:synopsisinfo role="signature">Qt3DRender::QPickEvent::Buttons button() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>QPickEvent::button Returns mouse button that caused the event</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qpickevent.xml#button-prop">button</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="buttons">
<db:title>int QPickEvent::buttons() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>buttons</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">buttons</db:synopsisinfo>
<db:synopsisinfo role="signature">int buttons() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>QPickEvent::buttons Returns bitfield to be used to check for mouse buttons that may be accompanying the pick event.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qpickevent.xml#buttons-prop">buttons</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="distance">
<db:title>float QPickEvent::distance() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>float</db:type>
<db:methodname>distance</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">distance</db:synopsisinfo>
<db:synopsisinfo role="signature">float distance() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>QPickEvent::distance Returns distance from camera to pick point</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qpickevent.xml#distance-prop">distance</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="isAccepted">
<db:title>bool QPickEvent::isAccepted() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isAccepted</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">accepted</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isAccepted() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>QPickEvent::isAccepted Returns true if the event has been accepted</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qpickevent.xml#accepted-prop">accepted</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="localIntersection">
<db:title>QVector3D QPickEvent::localIntersection() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QVector3D</db:type>
<db:methodname>localIntersection</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">localIntersection</db:synopsisinfo>
<db:synopsisinfo role="signature">QVector3D localIntersection() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>QPickEvent::localIntersection Returns coordinates of the hit in the local coordinate system of the picked entity</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qpickevent.xml#localIntersection-prop">localIntersection</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="modifiers">
<db:title>int QPickEvent::modifiers() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>modifiers</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">modifiers</db:synopsisinfo>
<db:synopsisinfo role="signature">int modifiers() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>QPickEvent::modifiers Returns bitfield to be used to check for keyboard modifiers that may be accompanying the pick event.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qpickevent.xml#modifiers-prop">modifiers</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="position">
<db:title>QPointF QPickEvent::position() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPointF</db:type>
<db:methodname>position</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">position</db:synopsisinfo>
<db:synopsisinfo role="signature">QPointF position() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>QPickEvent::position Returns mouse pointer coordinate of the pick query</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qpickevent.xml#position-prop">position</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="setAccepted">
<db:title>void QPickEvent::setAccepted(bool <db:emphasis>accepted</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setAccepted</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>accepted</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">accepted</db:synopsisinfo>
<db:synopsisinfo role="signature">void setAccepted(bool accepted)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>QPickEvent::setAccepted set if the event has been accepted to <db:code role="parameter">accepted</db:code></db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qpickevent.xml#accepted-prop">accepted</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qpickevent.xml#isAccepted">isAccepted</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="worldIntersection">
<db:title>QVector3D QPickEvent::worldIntersection() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QVector3D</db:type>
<db:methodname>worldIntersection</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">worldIntersection</db:synopsisinfo>
<db:synopsisinfo role="signature">QVector3D worldIntersection() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>QPickEvent::worldIntersection Returns coordinates of the hit in world coordinate system</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3drender-qpickevent.xml#worldIntersection-prop">worldIntersection</db:link>. </db:para>
</db:note>
</db:section>
</db:section>
</db:article>
