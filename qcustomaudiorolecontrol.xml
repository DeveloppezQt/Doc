<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QCustomAudioRoleControl Class</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qcustomaudiorolecontrol.xml">QCustomAudioRoleControl</db:link> class provides control over the audio role of a media object.</db:para>
<db:para>This class was introduced in Qt 5.11.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QCustomAudioRoleControl</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.11</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += multimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qmediacontrol.xml" xlink:role="class">QMediaControl</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QCustomAudioRoleControl is part of <db:simplelist><db:member>multimedia_control</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>If a <db:link xlink:href="qmediaservice.xml">QMediaService</db:link> supports audio roles it may implement <db:link xlink:href="qcustomaudiorolecontrol.xml">QCustomAudioRoleControl</db:link> in order to provide access to roles unknown to Qt.</db:para>
<db:para>The functionality provided by this control is exposed to application code through the <db:link xlink:href="qmediaplayer.xml">QMediaPlayer</db:link> class.</db:para>
<db:para>The interface name of <db:link xlink:href="qcustomaudiorolecontrol.xml">QCustomAudioRoleControl</db:link> is <db:code>org.qt-project.qt.customaudiorolecontrol/5.11</db:code> as defined in <db:link xlink:href="qcustomaudiorolecontrol.xml#QCustomAudioRoleControl_iid">QCustomAudioRoleControl_iid</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediaservice.xml#requestControl-1">QMediaService::requestControl</db:link>()</db:member>
<db:member><db:link xlink:href="qmediaplayer.xml">QMediaPlayer</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QCustomAudioRoleControl">
<db:title>[explicit protected] QCustomAudioRoleControl::QCustomAudioRoleControl(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QCustomAudioRoleControl</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QCustomAudioRoleControl(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Construct a <db:link xlink:href="qcustomaudiorolecontrol.xml">QCustomAudioRoleControl</db:link> with the given <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QCustomAudioRoleControl">
<db:title>[virtual] QCustomAudioRoleControl::~QCustomAudioRoleControl()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QCustomAudioRoleControl</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QCustomAudioRoleControl()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the audio role control.</db:para>
</db:section>
<db:section xml:id="customAudioRole">
<db:title>[pure virtual] QString QCustomAudioRoleControl::customAudioRole() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>customAudioRole</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString customAudioRole() const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the audio role of the media played by the media service.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcustomaudiorolecontrol.xml#setCustomAudioRole">setCustomAudioRole</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="customAudioRoleChanged">
<db:title>void QCustomAudioRoleControl::customAudioRoleChanged(const QString &amp;<db:emphasis>role</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>customAudioRoleChanged</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>role</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void customAudioRoleChanged(const QString &amp;role)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Signal emitted when the audio <db:code role="parameter">role</db:code> has changed.</db:para>
</db:section>
<db:section xml:id="setCustomAudioRole">
<db:title>[pure virtual] void QCustomAudioRoleControl::setCustomAudioRole(const QString &amp;<db:emphasis>role</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>setCustomAudioRole</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>role</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setCustomAudioRole(const QString &amp;role) = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the audio <db:code role="parameter">role</db:code> of the media played by the media service.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcustomaudiorolecontrol.xml#customAudioRole">customAudioRole</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="supportedCustomAudioRoles">
<db:title>[pure virtual] QStringList QCustomAudioRoleControl::supportedCustomAudioRoles() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QStringList</db:type>
<db:methodname>supportedCustomAudioRoles</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QStringList supportedCustomAudioRoles() const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of custom audio roles that the media service supports. An empty list may indicate that the supported custom audio roles aren't known. The list may not be complete.</db:para>
</db:section>
</db:section>
<db:section xml:id="macro-documentation">
<db:title>Macro Documentation</db:title>
<db:section xml:id="QCustomAudioRoleControl_iid">
<db:title>QCustomAudioRoleControl_iid</db:title>
<db:methodsynopsis>
<db:methodname>QCustomAudioRoleControl_iid</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">macrowithoutparams</db:synopsisinfo>
<db:synopsisinfo role="signature">QCustomAudioRoleControl_iid</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para><db:code>org.qt-project.qt.customaudiorolecontrol/5.11</db:code></db:para>
<db:para>Defines the interface name of the <db:link xlink:href="qcustomaudiorolecontrol.xml">QCustomAudioRoleControl</db:link> class.</db:para>
</db:section>
</db:section>
</db:article>
