<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QML Tutorial 1 - Basic Types</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.14.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="qml-tutorial.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="QML Tutorial"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="qml-tutorial2.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="QML Tutorial 2 - QML Components"/></db:extendedlink>
<db:abstract>
<db:para>Qt Quick Reference Documentation.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>QML Tutorial</db:para>
<db:para>This first program is a very simple &quot;Hello world&quot; example that introduces some basic QML concepts. The picture below is a screenshot of this program.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/declarative-tutorial1.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Here is the QML code for the application:</db:para>
<db:programlisting language="qml">import QtQuick 2.0

Rectangle {
    id: page
    width: 320; height: 480
    color: &quot;lightgray&quot;

    Text {
        id: helloText
        text: &quot;Hello world!&quot;
        y: 30
        anchors.horizontalCenter: page.horizontalCenter
        font.pointSize: 24; font.bold: true
    }
}
</db:programlisting>
<db:section xml:id="walkthrough">
<db:title>Walkthrough</db:title>
<db:section xml:id="import">
<db:title>Import</db:title>
<db:para>First, we need to import the types that we need for this example. Most QML files will import the built-in QML types (like <db:link xlink:href="qml-qtquick-rectangle.xml">Rectangle</db:link>, <db:link xlink:href="qml-qtquick-image.xml">Image</db:link>, ...) that come with Qt, using:</db:para>
<db:programlisting language="qml">import QtQuick 2.0
</db:programlisting>
</db:section>
<db:section xml:id="rectangle-type">
<db:title>Rectangle Type</db:title>
<db:programlisting language="qml">Rectangle {
    id: page
    width: 320; height: 480
    color: &quot;lightgray&quot;
</db:programlisting>
<db:para>We declare a root object of type <db:link xlink:href="qml-qtquick-rectangle.xml">Rectangle</db:link>. It is one of the basic building blocks you can use to create an application in QML. We give it an <db:code>id</db:code> to be able to refer to it later. In this case, we call it &quot;page&quot;. We also set the <db:code>width</db:code>, <db:code>height</db:code> and <db:code>color</db:code> properties. The <db:link xlink:href="qml-qtquick-rectangle.xml">Rectangle</db:link> type contains many other properties (such as <db:code>x</db:code> and <db:code>y</db:code>), but these are left at their default values.</db:para>
</db:section>
<db:section xml:id="text-type">
<db:title>Text Type</db:title>
<db:programlisting language="qml">    Text {
        id: helloText
        text: &quot;Hello world!&quot;
        y: 30
        anchors.horizontalCenter: page.horizontalCenter
        font.pointSize: 24; font.bold: true
    }
</db:programlisting>
<db:para>We add a <db:link xlink:href="qml-qtquick-text.xml">Text</db:link> type as a child of the root Rectangle type that displays the text 'Hello world!'.</db:para>
<db:para>The <db:code>y</db:code> property is used to position the text vertically at 30 pixels from the top of its parent.</db:para>
<db:para>The <db:code>anchors.horizontalCenter</db:code> property refers to the horizontal center of an type. In this case, we specify that our text type should be horizontally centered in the <db:emphasis>page</db:emphasis> element (see <db:link xlink:href="qtquick-positioning-anchors.xml">Anchor-Based Layout</db:link>).</db:para>
<db:para>The <db:code>font.pointSize</db:code> and <db:code>font.bold</db:code> properties are related to fonts and use the dot notation.</db:para>
</db:section>
<db:section xml:id="viewing-the-example">
<db:title>Viewing the Example</db:title>
<db:para>To view what you have created, run the <db:link xlink:href="qtquick-qmlscene.xml">qmlscene</db:link> tool (located in the <db:code>bin</db:code> directory) with your filename as the first argument. For example, to run the provided completed Tutorial 1 example from the install location, you would type:</db:para>
<db:programlisting language="cpp">qmlscene tutorials/helloworld/tutorial1.qml
</db:programlisting>
</db:section>
</db:section>
</db:article>
