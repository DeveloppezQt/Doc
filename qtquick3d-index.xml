<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick 3D</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides API that lets you define 3D items using QML.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt Quick 3D provides a high-level API for creating 3D content and 3D user interfaces based on <db:link xlink:href="qtquick-index.xml">Qt Quick</db:link>. Rather than using an external engine, which creates syncing issues and additional layers of abstraction, Qt Quick 3D provides extensions to the existing <db:link xlink:href="qtquick-visualcanvas-scenegraph.xml">Qt Quick Scene Graph</db:link> for spatial content and a renderer for that extended scene graph. When using the spatial scene graph, it's possible to mix Qt Quick 2D content with 3D content.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/dragon.jpg"/>
</db:imageobject>
</db:mediaobject>
<db:section xml:id="using-the-module">
<db:title>Using the Module</db:title>
<db:section xml:id="qml-api">
<db:title>QML API</db:title>
<db:para>The QML types of the module are available through the <db:code>QtQuick3D</db:code> import. To use the types, add the following import statement to your .qml file:</db:para>
<db:programlisting language="qml">import QtQuick3D
</db:programlisting>
<db:para>The following module imports provide additional functionality:</db:para>
<db:programlisting language="qml">import QtQuick3D.AssetUtils
import QtQuick3D.Helpers
import QtQuick3D.Particles3D
</db:programlisting>
</db:section>
<db:section xml:id="c-api">
<db:title>C++ API</db:title>
<db:para>Using a Qt module's C++ API requires linking against the module library, either directly or through other dependencies. Several build tools have dedicated support for this, including <db:link xlink:href="https://cmake.org/cmake/help/latest/">CMake</db:link> and <db:link xlink:href="qmake-manual.xml">qmake</db:link>.</db:para>
<db:section xml:id="building-with-cmake">
<db:title>Building with CMake</db:title>
<db:para>Use the <db:code>find_package()</db:code> command to locate the needed module component in the <db:code>Qt6</db:code> package:</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS Quick3D)
target_link_libraries(mytarget PRIVATE Qt6::Quick3D)
</db:programlisting>
<db:para>For more details, see the <db:link xlink:href="cmake-manual.xml">Build with CMake</db:link> overview.</db:para>
</db:section>
<db:section xml:id="building-with-qmake">
<db:title>Building with qmake</db:title>
<db:para>To configure the module for building with qmake, add the module as a value of the <db:code>QT</db:code> variable in the project's .pro file:</db:para>
<db:programlisting language="cpp">QT += quick3d
</db:programlisting>
</db:section>
</db:section>
</db:section>
<db:section xml:id="building-from-source">
<db:title>Building From Source</db:title>
<db:para>When building from source, ensure that the modules and tools from the <db:emphasis>qtdeclarative</db:emphasis> and <db:emphasis>qtshadertools</db:emphasis> repositories are built first, as it's not possible to use Qt Quick 3D without these. Having <db:emphasis>qtquicktimeline</db:emphasis> available is strongly recommended as well, since keyframe-based animations will not be available otherwise.</db:para>
<db:para>In addition, some of the examples rely on <db:link xlink:href="qtquickcontrols-index.xml">Qt Quick Controls</db:link>.</db:para>
</db:section>
<db:section xml:id="module-evolution">
<db:title>Module Evolution</db:title>
<db:para><db:link xlink:href="qtquick3d-changes-qt6.xml">Changes to Qt Quick 3D</db:link> lists important changes in the module API and functionality that were done for the Qt 6 series of Qt.</db:para>
</db:section>
<db:section xml:id="articles-and-guides">
<db:title>Articles and Guides</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-intro-example.xml">Qt Quick 3D Introduction Example</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quick3d-asset-intro.xml">Qt Quick 3D Introduction with glTF Assets</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-requirements.xml">Qt Quick 3D Graphics Requirements</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-architecture.xml">Qt Quick 3D Architecture</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-tool-balsam.xml">Balsam Asset Import Tool</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quick3d-asset-conditioning-3d-assets.xml">Optimizing 3D Assets</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quick3d-pbr.xml">Physically-Based Rendering</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quick3d-asset-conditioning-ibl.xml">Using Image-Based Lighting</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quick3d-asset-conditioning-anti-aliasing.xml">Anti-Aliasing Best Practices</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-2d.xml">Qt Quick 3D Scenes with 2D Content</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-custom.xml">Programmable Materials, Effects, Geometry, and Texture data</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-tool-shadergen.xml">Build-time materials</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quick3d-vertex-skinning.xml">Skeletal Animation</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quick3d-morphing.xml">Morphing Animation</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quick3d-instancing.xml">Instanced Rendering</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-lod.xml">Level of Detail</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-tool-materialeditor.xml">Custom Material Editor</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quick3d-lightmap.xml">Lightmaps and Global Illumination</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-intro-example.xml">Introduction</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-view3d-example.xml">View3D with Multiple Viewports</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-lights-example.xml">Lights and Shadows</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-dynamiccreation-example.xml">Dynamic Model Creation</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-principledmaterial-example.xml">Principled Material</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-sceneeffects-example.xml">Built-in effects and tonemapping</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-quickitems-example.xml">Qt Quick Items within the 3D Scene</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-custommaterial-example.xml">Custom Materials</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-customshaders-example.xml">Unshaded Custom Materials</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-customeffect-example.xml">Writing Custom Post-Processing Effects</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-customgeometry-example.xml">Adding Custom Geometry from C++</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-proceduraltexture-example.xml">Adding Custom Texture Data from C++</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-bakedlightmap-example.xml">Using baked lightmaps</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="quick3d-examples.xml">All examples</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="reference">
<db:title>Reference</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-qmlmodule.xml">Qt Quick 3D QML Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-module.xml">Qt Quick 3D C++ Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-helpers-qmlmodule.xml">Qt Quick 3D Helpers QML Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-qmlmodule.xml#qtquick3d-assetutils-qml-types">Qt Quick 3D Asset Utility QML Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick3d-particles3d-qmlmodule.xml">Qt Quick 3D Particles3D QML Types</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="related-modules">
<db:title>Related Modules</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquick-index.xml">Qt Quick</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qt-academy-courses">
<db:title>Qt Academy Courses</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="https://www.qt.io/academy/course-catalog#qt-quick-3d:-animations">Qt Quick 3D: Animations</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="https://www.qt.io/academy/course-catalog#qt-quick-3d:-assets-&amp;-resources">Qt Quick 3D: Assets &amp; Resources</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="https://www.qt.io/academy/course-catalog#qt-quick-3d:-custom-materials,-render-settings-&amp;-post-processing-">Qt Quick 3D: Custom Materials, Render Settings &amp; Post-Processing</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="https://www.qt.io/academy/course-catalog#qt-quick-3d:-interaction-and-managing-performance-">Qt Quick 3D: Interaction and Managing Performance</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="https://www.qt.io/academy/course-catalog#qt-quick-3d:-lighting-&amp;-cameras">Qt Quick 3D: Lighting &amp; Cameras</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="https://www.qt.io/academy/course-catalog#qt-quick-3d:-views,-scenes-&amp;-nodes">Qt Quick 3D: Views, Scenes &amp; Nodes</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="licenses-and-attributions">
<db:title>Licenses and Attributions</db:title>
<db:para>Qt Quick 3D is available under the commercial license from <db:link xlink:href="http://www.qt.io/about-us/">The Qt Company</db:link>. In addition, it is available under the <db:link xlink:href="http://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License, version 3</db:link>. See <db:link xlink:href="licensing.xml">Qt Licensing</db:link> for further details.</db:para>
<db:para>Furthermore, Qt Quick 3D potentially contains third party modules under the following permissive licenses:</db:para>
<db:variablelist role="groupsbymodule attributions-qtquick3d">
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-attribution-fog.xml" xlink:role="page">Godot Engine: Fog</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-attribution-proceduralsky.xml" xlink:role="page">Godot Engine: ProceduralSky</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-attribution-embree.xml" xlink:role="page">Intel Embree, version 3.13.3</db:link></db:term>
<db:listitem>
<db:para>Apache License 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-attribution-assimp.xml" xlink:role="page">Open Asset Import Library, version 5.4.1</db:link></db:term>
<db:listitem>
<db:para>BSD 3-clause &quot;New&quot; or &quot;Revised&quot; Licensee</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-attribution-tinyexr.xml" xlink:role="page">Tiny OpenEXR, version v1.0.8</db:link></db:term>
<db:listitem>
<db:para>BSD 3-clause &quot;New&quot; or &quot;Revised&quot; License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-attribution-meshoptimizer.xml" xlink:role="page">meshoptimizer, version v0.18</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick3d-attribution-xatlas.xml" xlink:role="page">xatlas, version 16ace528acd2cf1f16a7c0dde99c42c486488dbe</db:link></db:term>
<db:listitem>
<db:para>MIT License</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
</db:article>
