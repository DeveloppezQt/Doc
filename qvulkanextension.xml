<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title></db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Represents information about a Vulkan extension.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QVulkanExtension</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="member-variable-documentation">
<db:title>Member Variable Documentation</db:title>
<db:section xml:id="name-var">
<db:title>QByteArray QVulkanExtension::name</db:title>
<db:para>This variable holds the name of the extension.</db:para>
</db:section>
<db:section xml:id="version-var">
<db:title>uint32_t QVulkanExtension::version</db:title>
<db:para>This variable holds the version of the extension. This is an integer, increasing with each backward compatible change.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="qHash-5">
<db:title>[noexcept] size_t qHash(const QVulkanExtension &amp;<db:emphasis>key</db:emphasis>, size_t <db:emphasis>seed</db:emphasis> = 0)</db:title>
<db:para>Returns the hash value for <db:code role="parameter">key</db:code>, using <db:code role="parameter">seed</db:code> to seed the calculation.</db:para>
</db:section>
<db:section xml:id="operator-not-eq-1">
<db:title>[noexcept] bool operator!=(const QVulkanExtension &amp;<db:emphasis>lhs</db:emphasis>, const QVulkanExtension &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:para>Returns <db:code>true</db:code> if Vulkan extensions <db:code role="parameter">lhs</db:code> and <db:code role="parameter">rhs</db:code> are have different name or version.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq-12">
<db:title>[noexcept] bool operator==(const QVulkanExtension &amp;<db:emphasis>lhs</db:emphasis>, const QVulkanExtension &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:para>Returns <db:code>true</db:code> if Vulkan extensions <db:code role="parameter">lhs</db:code> and <db:code role="parameter">rhs</db:code> are have the same name and version.</db:para>
</db:section>
</db:section>
</db:article>
