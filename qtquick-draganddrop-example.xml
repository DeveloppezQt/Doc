<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>Qt Quick Examples - Drag and Drop</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.2.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This is a collection of QML drag and drop examples.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qml-draganddrop-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>This is a collection of small QML examples relating to drag and drop functionality.</db:para>
<db:section xml:id="tiles-adds-drag-and-drop-to-simple-rectangles-which-you-can-drag-into-a-specific-grid">
<db:title>Tiles adds drag and drop to simple rectangles, which you can drag into a specific grid.</db:title>
<db:para>It has a DragTile component which uses a <db:link xlink:href="qml-qtquick-mousearea.xml">MouseArea</db:link> to move an item when dragged:</db:para>
<db:programlisting language="qml">Item {
    id: root
    property string colorKey

    width: 64; height: 64

    MouseArea {
        id: mouseArea

        width: 64; height: 64
        anchors.centerIn: parent

        drag.target: tile

        onReleased: parent = tile.Drag.target !== null ? tile.Drag.target : root

        Rectangle {
            id: tile

            width: 64; height: 64
            anchors.verticalCenter: parent.verticalCenter
            anchors.horizontalCenter: parent.horizontalCenter

            color: colorKey

            Drag.keys: [ colorKey ]
            Drag.active: mouseArea.drag.active
            Drag.hotSpot.x: 32
            Drag.hotSpot.y: 32
            states: State {
                when: mouseArea.drag.active
                ParentChange { target: tile; parent: root }
                AnchorChanges { target: tile; anchors.verticalCenter: undefined; anchors.horizontalCenter: undefined }
            }

        }
    }
}
</db:programlisting>
<db:para>And a DropTile component which the dragged tiles can be dropped onto:</db:para>
<db:programlisting language="qml">DropArea {
    id: dragTarget

    property string colorKey
    property alias dropProxy: dragTarget

    width: 64; height: 64
    keys: [ colorKey ]

    Rectangle {
        id: dropRectangle

        anchors.fill: parent
        color: colorKey

        states: [
            State {
                when: dragTarget.containsDrag
                PropertyChanges {
                    target: dropRectangle
                    color: &quot;grey&quot;
                }
            }
        ]
    }
}
</db:programlisting>
<db:para>The keys property of the <db:link xlink:href="qml-qtquick-droparea.xml">DropArea</db:link> will only allow an item with matching key in it's Drag.keys property to be dropped on it.</db:para>
</db:section>
<db:section xml:id="gridview-adds-drag-and-drop-to-a-gridview-allowing-you-to-reorder-the-list">
<db:title>GridView adds drag and drop to a GridView, allowing you to reorder the list.</db:title>
<db:para>It uses a <db:link xlink:href="qml-qtqml-models-delegatemodel.xml">DelegateModel</db:link> to move a delegate item to the position of another item it is dragged over.</db:para>
<db:programlisting language="qml">    model: DelegateModel {
        delegate: MouseArea {
            id: delegateRoot

            property int visualIndex: DelegateModel.itemsIndex

            width: 80; height: 80
            drag.target: icon

            Rectangle {
                id: icon
                width: 72; height: 72
                anchors {
                    horizontalCenter: parent.horizontalCenter;
                    verticalCenter: parent.verticalCenter
                }
                color: model.color
                radius: 3

                Drag.active: delegateRoot.drag.active
                Drag.source: delegateRoot
                Drag.hotSpot.x: 36
                Drag.hotSpot.y: 36

                states: [
                    State {
                        when: icon.Drag.active
                        ParentChange {
                            target: icon
                            parent: root
                        }

                        AnchorChanges {
                            target: icon;
                            anchors.horizontalCenter: undefined;
                            anchors.verticalCenter: undefined
                        }
                    }
                ]
            }

            DropArea {
                anchors { fill: parent; margins: 15 }

                onEntered: visualModel.items.move(drag.source.visualIndex, delegateRoot.visualIndex)
            }
        }
</db:programlisting>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="draganddrop/draganddrop.pro">draganddrop/draganddrop.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="draganddrop/draganddrop.qml">draganddrop/draganddrop.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="draganddrop/draganddrop.qmlproject">draganddrop/draganddrop.qmlproject</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="draganddrop/draganddrop.qrc">draganddrop/draganddrop.qrc</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="draganddrop/main.cpp">draganddrop/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="draganddrop/tiles/DragTile.qml">draganddrop/tiles/DragTile.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="draganddrop/tiles/DropTile.qml">draganddrop/tiles/DropTile.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="draganddrop/tiles/tiles.qml">draganddrop/tiles/tiles.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="draganddrop/views/gridview.qml">draganddrop/views/gridview.qml</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
