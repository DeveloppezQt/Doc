<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Menu QML Type</db:title>
<db:productname>QtQuickControls1</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 1 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides a menu component for use as a context menu, popup menu, or as part of a menu bar.</db:para>
<db:para>This type was introduced in Qt 5.1.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 1.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Menu is part of <db:simplelist><db:member><db:link xlink:href="menus.xml">Menus</db:link></db:member><db:member><db:link xlink:href="controls.xml">Buttons and Controls</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/menu.png"/>
</db:imageobject>
</db:mediaobject>
<db:programlisting language="cpp">Menu {
    title: &quot;Edit&quot;

    MenuItem {
        text: &quot;Cut&quot;
        shortcut: &quot;Ctrl+X&quot;
        onTriggered: ...
    }

    MenuItem {
        text: &quot;Copy&quot;
        shortcut: &quot;Ctrl+C&quot;
        onTriggered: ...
    }

    MenuItem {
        text: &quot;Paste&quot;
        shortcut: &quot;Ctrl+V&quot;
        onTriggered: ...
    }

    MenuSeparator { }

    Menu {
        title: &quot;More Stuff&quot;

        MenuItem {
            text: &quot;Do Nothing&quot;
        }
    }
}
</db:programlisting>
<db:para>The main uses for menus:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>as a <db:emphasis>top-level</db:emphasis> menu in a <db:link xlink:href="qml-qtquick-controls-menubar.xml">MenuBar</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para>as a <db:emphasis>submenu</db:emphasis> inside another menu</db:para>
</db:listitem>
<db:listitem>
<db:para>as a standalone or <db:emphasis>context</db:emphasis> menu</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Note that some properties, such as <db:code>enabled</db:code>, <db:code>text</db:code>, or <db:code>iconSource</db:code>, only make sense in a particular use case of the menu.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menubar.xml">MenuBar</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml">MenuItem</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-menuseparator.xml">MenuSeparator</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="enabled-prop">
<db:title>enabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>enabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Whether the menu is enabled, and responsive to user interaction as a submenu. Its value defaults to <db:code>true</db:code>.</db:para>
</db:section>
<db:section xml:id="iconName-prop">
<db:title>iconName : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>iconName</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the icon name for the menu icon. This will pick the icon with the given name from the current theme. Only works as a submenu.</db:para>
<db:para>Its value defaults to an empty string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml#iconSource-prop">iconSource</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="iconSource-prop">
<db:title>iconSource : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>iconSource</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the icon file or resource url for the menu icon as a submenu. Defaults to an empty URL.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml#iconName-prop">iconName</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="items-prop">
<db:title>items : list&lt;Object&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;Object&gt;</db:type>
<db:varname>items</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The list of items in the menu.</db:para>
<db:para><db:link xlink:href="qml-qtquick-controls-menu.xml">Menu</db:link> only accepts objects of type <db:link xlink:href="qml-qtquick-controls-menu.xml">Menu</db:link>, <db:link xlink:href="qml-qtquick-controls-menuitem.xml">MenuItem</db:link>, and <db:link xlink:href="qml-qtquick-controls-menuseparator.xml">MenuSeparator</db:link> as children. It also supports <db:link xlink:href="qml-qtqml-instantiator.xml">Instantiator</db:link> objects as long as the insertion is being done manually using <db:link xlink:href="qml-qtquick-controls-menu.xml#insertItem-method">insertItem</db:link>().</db:para>
<db:programlisting language="qml">Menu {
    id: recentFilesMenu

    Instantiator {
        model: recentFilesModel
        MenuItem {
            text: model.fileName
        }
        onObjectAdded: recentFilesMenu.insertItem(index, object)
        onObjectRemoved: recentFilesMenu.removeItem(object)
    }

    MenuSeparator {
        visible: recentFilesModel.count &amp;gt; 0
    }

    MenuItem {
        text: &quot;Clear menu&quot;
        enabled: recentFilesModel.count &amp;gt; 0
        onTriggered: recentFilesModel.clear()
    }
}
</db:programlisting>
<db:para>Note that in this case, the <db:code>index</db:code> parameter passed to <db:link xlink:href="qml-qtquick-controls-menu.xml#insertItem-method">insertItem</db:link>() is relative to the position of the <db:link xlink:href="qml-qtqml-instantiator.xml">Instantiator</db:link> in the menu, as opposed to absolute position in the menu.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml">MenuItem</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-menuseparator.xml">MenuSeparator</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="style-prop">
<db:title>[since QtQuick.Controls.Styles 1.2] style : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>style</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The style Component for this control.</db:para>
<db:para>This property was introduced in QtQuick.Controls.Styles 1.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml">MenuStyle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="title-prop">
<db:title>title : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>title</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Title for the menu as a submenu or in a menubar.</db:para>
<db:para>Mnemonics are supported by prefixing the shortcut letter with &amp;. For instance, <db:code>&quot;\&amp;File&quot;</db:code> will bind the <db:code>Alt-F</db:code> shortcut to the <db:code>&quot;File&quot;</db:code> menu. Note that not all platforms support mnemonics.</db:para>
<db:para>Its value defaults to an empty string.</db:para>
</db:section>
<db:section xml:id="type-prop">
<db:title>type : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>type</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property is read-only and constant, and its value is <db:link xlink:href="qml-qtquick-controls-menuitem.xml#type-prop">type</db:link>.</db:para>
</db:section>
<db:section xml:id="visible-prop">
<db:title>visible : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>visible</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Whether the menu should be visible as a submenu of another Menu, or as a menu on a <db:link xlink:href="qml-qtquick-controls-menubar.xml">MenuBar</db:link>. Its value defaults to <db:code>true</db:code>.</db:para>
<db:note>
<db:para>This has nothing to do with the actual menu pop-up window being visible. Use <db:link xlink:href="qml-qtquick-controls-menu.xml#aboutToShow-signal">aboutToShow</db:link>() and <db:link xlink:href="qml-qtquick-controls-menu.xml#aboutToHide-signal">aboutToHide</db:link>() if you need to know when the pop-up window will be shown or hidden.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="aboutToHide-signal">
<db:title>[since QtQuick.Controls 1.4] aboutToHide()</db:title>
<db:para>This signal is emitted just before the menu is hidden from the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onAboutToHide</db:code>.</db:para>
</db:note>
<db:para>This signal was introduced in QtQuick.Controls 1.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml#aboutToShow-signal">aboutToShow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="aboutToShow-signal">
<db:title>[since QtQuick.Controls 1.4] aboutToShow()</db:title>
<db:para>This signal is emitted just before the menu is shown to the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onAboutToShow</db:code>.</db:para>
</db:note>
<db:para>This signal was introduced in QtQuick.Controls 1.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml#aboutToHide-signal">aboutToHide</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="addItem-method">
<db:title>MenuItem addItem(string <db:emphasis>text</db:emphasis>)</db:title>
<db:para>Adds an item to the menu. Returns the newly created <db:link xlink:href="qml-qtquick-controls-menuitem.xml">MenuItem</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml#insertItem-method">insertItem</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addMenu-method-1">
<db:title>Menu addMenu(string <db:emphasis>title</db:emphasis>)</db:title>
<db:para>Adds a submenu to the menu. Returns the newly created <db:link xlink:href="qml-qtquick-controls-menu.xml">Menu</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml#insertMenu-method-1">insertMenu</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addSeparator-method">
<db:title>void addSeparator()</db:title>
<db:para>Adds a separator to the menu.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml#insertSeparator-method">insertSeparator</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="insertItem-method">
<db:title>MenuItem insertItem(int <db:emphasis>before</db:emphasis>, string <db:emphasis>title</db:emphasis>)</db:title>
<db:para>Creates and inserts an item with title <db:code>title</db:code> at the index <db:code>before</db:code> in the current menu. Returns the newly created <db:link xlink:href="qml-qtquick-controls-menuitem.xml">MenuItem</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml#addItem-method">addItem</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="insertItem-method-1">
<db:title>void insertItem(int <db:emphasis>before</db:emphasis>, object <db:emphasis>item</db:emphasis>)</db:title>
<db:para>Inserts the <db:code>item</db:code> at the index <db:code>before</db:code> in the current menu. In this case, <db:code>item</db:code> can be either a <db:link xlink:href="qml-qtquick-controls-menuitem.xml">MenuItem</db:link>, a <db:link xlink:href="qml-qtquick-controls-menuseparator.xml">MenuSeparator</db:link>, or a <db:link xlink:href="qml-qtquick-controls-menu.xml">Menu</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml#removeItem-method">removeItem</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="insertMenu-method-1">
<db:title>MenuItem insertMenu(int <db:emphasis>before</db:emphasis>, string <db:emphasis>title</db:emphasis>)</db:title>
<db:para>Creates and inserts a submenu with title <db:code>title</db:code> at the index <db:code>before</db:code> in the current menu. Returns the newly created <db:link xlink:href="qml-qtquick-controls-menu.xml">Menu</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml#addMenu-method-1">addMenu</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="insertSeparator-method">
<db:title>void insertSeparator(int <db:emphasis>before</db:emphasis>)</db:title>
<db:para>Creates and inserts a separator at the index <db:code>before</db:code> in the current menu.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml#addSeparator-method">addSeparator</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="popup-method">
<db:title>void popup()</db:title>
<db:para>Opens this menu under the mouse cursor. It can block on some platforms, so test it accordingly.</db:para>
</db:section>
<db:section xml:id="removeItem-method">
<db:title>void removeItem(<db:emphasis>item</db:emphasis>)</db:title>
<db:para>Removes the <db:code>item</db:code> from the menu. In this case, <db:code>item</db:code> can be either a <db:link xlink:href="qml-qtquick-controls-menuitem.xml">MenuItem</db:link>, a <db:link xlink:href="qml-qtquick-controls-menuseparator.xml">MenuSeparator</db:link>, or a <db:link xlink:href="qml-qtquick-controls-menu.xml">Menu</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml#insertItem-method">insertItem</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
