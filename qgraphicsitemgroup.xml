<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGraphicsItemGroup Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgraphicsitemgroup.xml">QGraphicsItemGroup</db:link> class provides a container that treats a group of items as a single item.</db:para>
<db:para>This class was introduced in Qt 4.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGraphicsItemGroup</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qgraphicsitem.xml" xlink:role="class">QGraphicsItem</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGraphicsItemGroup is part of <db:simplelist><db:member>graphicsview-api</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qgraphicsitemgroup.xml">QGraphicsItemGroup</db:link> is a special type of compound item that treats itself and all its children as one item (i.e., all events and geometries for all children are merged together). It's common to use item groups in presentation tools, when the user wants to group several smaller items into one big item in order to simplify moving and copying of items.</db:para>
<db:para>If all you want is to store items inside other items, you can use any <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link> directly by passing a suitable parent to <db:link xlink:href="qgraphicsitem.xml#setParentItem">setParentItem</db:link>().</db:para>
<db:para>The <db:link xlink:href="qgraphicsitemgroup.xml#boundingRect">boundingRect</db:link>() function of <db:link xlink:href="qgraphicsitemgroup.xml">QGraphicsItemGroup</db:link> returns the bounding rectangle of all items in the item group. <db:link xlink:href="qgraphicsitemgroup.xml">QGraphicsItemGroup</db:link> ignores the ItemIgnoresTransformations flag on its children (i.e., with respect to the geometry of the group item, the children are treated as if they were transformable).</db:para>
<db:para>There are two ways to construct an item group. The easiest and most common approach is to pass a list of items (e.g., all selected items) to <db:link xlink:href="qgraphicsscene.xml#createItemGroup">QGraphicsScene::createItemGroup</db:link>(), which returns a new <db:link xlink:href="qgraphicsitemgroup.xml">QGraphicsItemGroup</db:link> item. The other approach is to manually construct a <db:link xlink:href="qgraphicsitemgroup.xml">QGraphicsItemGroup</db:link> item, add it to the scene calling <db:link xlink:href="qgraphicsscene.xml#addItem">QGraphicsScene::addItem</db:link>(), and then add items to the group manually, one at a time by calling <db:link xlink:href="qgraphicsitemgroup.xml#addToGroup">addToGroup</db:link>(). To dismantle (&quot;ungroup&quot;) an item group, you can either call <db:link xlink:href="qgraphicsscene.xml#destroyItemGroup">QGraphicsScene::destroyItemGroup</db:link>(), or you can manually remove all items from the group by calling <db:link xlink:href="qgraphicsitemgroup.xml#removeFromGroup">removeFromGroup</db:link>().</db:para>
<db:programlisting language="cpp">// Group all selected items together
QGraphicsItemGroup *group = scene-&gt;createItemGroup(scene-&gt;selecteditems());

// Destroy the group, and delete the group item
scene-&gt;destroyItemGroup(group);
</db:programlisting>
<db:para>The operation of adding and removing items preserves the items' scene-relative position and transformation, as opposed to calling <db:link xlink:href="qgraphicsitem.xml#setParentItem">setParentItem</db:link>(), where only the child item's parent-relative position and transformation are kept.</db:para>
<db:para>The addtoGroup() function reparents the target item to this item group, keeping the item's position and transformation intact relative to the scene. Visually, this means that items added via <db:link xlink:href="qgraphicsitemgroup.xml#addToGroup">addToGroup</db:link>() will remain completely unchanged as a result of this operation, regardless of the item or the group's current position or transformation; although the item's position and matrix are likely to change.</db:para>
<db:para>The <db:link xlink:href="qgraphicsitemgroup.xml#removeFromGroup">removeFromGroup</db:link>() function has similar semantics to <db:link xlink:href="qgraphicsitem.xml#setParentItem">setParentItem</db:link>(); it reparents the item to the parent item of the item group. As with <db:link xlink:href="qgraphicsitemgroup.xml#addToGroup">addToGroup</db:link>(), the item's scene-relative position and transformation remain intact.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link></db:member>
<db:member><db:link xlink:href="graphicsview.xml">Graphics View Framework</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGraphicsItemGroup">
<db:title>[explicit] QGraphicsItemGroup::QGraphicsItemGroup(QGraphicsItem *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a <db:link xlink:href="qgraphicsitemgroup.xml">QGraphicsItemGroup</db:link>. <db:code role="parameter">parent</db:code> is passed to <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>'s constructor.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsscene.xml#addItem">QGraphicsScene::addItem</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dtor.QGraphicsItemGroup">
<db:title>[virtual noexcept] QGraphicsItemGroup::~QGraphicsItemGroup()</db:title>
<db:para>Destroys the <db:link xlink:href="qgraphicsitemgroup.xml">QGraphicsItemGroup</db:link>.</db:para>
</db:section>
<db:section xml:id="addToGroup">
<db:title>void QGraphicsItemGroup::addToGroup(QGraphicsItem *<db:emphasis>item</db:emphasis>)</db:title>
<db:para>Adds the given <db:code role="parameter">item</db:code> and item's child items to this item group. The item and child items will be reparented to this group, but its position and transformation relative to the scene will stay intact.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemgroup.xml#removeFromGroup">removeFromGroup</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsscene.xml#createItemGroup">QGraphicsScene::createItemGroup</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="boundingRect">
<db:title>[override virtual] QRectF QGraphicsItemGroup::boundingRect() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qgraphicsitem.xml#boundingRect" role="function">QGraphicsItem::boundingRect() const</db:link>.</db:para>
<db:para>Returns the bounding rect of this group item, and all its children.</db:para>
</db:section>
<db:section xml:id="isObscuredBy">
<db:title>[override virtual] bool QGraphicsItemGroup::isObscuredBy(const QGraphicsItem *<db:emphasis>item</db:emphasis>) const</db:title>
<db:para>Reimplements: <db:link xlink:href="qgraphicsitem.xml#isObscuredBy" role="function">QGraphicsItem::isObscuredBy(const QGraphicsItem *item) const</db:link>.</db:para>
</db:section>
<db:section xml:id="opaqueArea">
<db:title>[override virtual] QPainterPath QGraphicsItemGroup::opaqueArea() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qgraphicsitem.xml#opaqueArea" role="function">QGraphicsItem::opaqueArea() const</db:link>.</db:para>
</db:section>
<db:section xml:id="paint">
<db:title>[override virtual] void QGraphicsItemGroup::paint(QPainter *<db:emphasis>painter</db:emphasis>, const QStyleOptionGraphicsItem *<db:emphasis>option</db:emphasis>, QWidget *<db:emphasis>widget</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Reimplements: <db:link xlink:href="qgraphicsitem.xml#paint" role="function">QGraphicsItem::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)</db:link>.</db:para>
</db:section>
<db:section xml:id="removeFromGroup">
<db:title>void QGraphicsItemGroup::removeFromGroup(QGraphicsItem *<db:emphasis>item</db:emphasis>)</db:title>
<db:para>Removes the specified <db:code role="parameter">item</db:code> from this group. The item will be reparented to this group's parent item, or to 0 if this group has no parent. Its position and transformation relative to the scene will stay intact.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemgroup.xml#addToGroup">addToGroup</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsscene.xml#destroyItemGroup">QGraphicsScene::destroyItemGroup</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="type">
<db:title>[override virtual] int QGraphicsItemGroup::type() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qgraphicsitem.xml#type" role="function">QGraphicsItem::type() const</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
