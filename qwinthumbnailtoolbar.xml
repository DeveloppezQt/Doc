<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QWinThumbnailToolBar Class</db:title>
<db:productname>QtWinExtras</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Windows Extras Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qwinthumbnailtoolbar.xml">QWinThumbnailToolBar</db:link> class allows manipulating the thumbnail toolbar of a window.</db:para>
<db:para>This class was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QWinThumbnailToolBar</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += winextras</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Applications can embed a toolbar in the thumbnail of a window, which is shown when hovering over its taskbar icon. A thumbnail toolbar may provide quick access to the commands of a window without requiring the user to restore or activate the window.</db:para>
<db:mediaobject>
<db:alt>Media player thumbnail toolbar</db:alt>
<db:imageobject>
<db:imagedata fileref="images/thumbbar.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The following example code illustrates how to use the functions in the <db:link xlink:href="qwinthumbnailtoolbar.xml">QWinThumbnailToolBar</db:link> and <db:link xlink:href="qwinthumbnailtoolbutton.xml">QWinThumbnailToolButton</db:link> class to implement a thumbnail toolbar:</db:para>
<db:programlisting language="cpp">    QWinThumbnailToolBar *thumbbar = new QWinThumbnailToolBar(widget);
    thumbbar-&gt;setWindow(widget-&gt;windowHandle());

    QWinThumbnailToolButton *settings = new QWinThumbnailToolButton(thumbbar);
    settings-&gt;setToolTip(&quot;Settings&quot;);
    settings-&gt;setIcon(&quot;:/settings.png&quot;);
    settings-&gt;setDismissOnClick(true);
    connect(settings, SIGNAL(clicked()), settingsPage, SLOT(show()));

    QWinThumbnailToolButton *playPause = new QWinThumbnailToolButton(thumbbar);
    playPause-&gt;setToolTip(&quot;Play/Pause&quot;);
    playPause-&gt;setIcon(&quot;:/play.png&quot;);
    connect(playPause, SIGNAL(clicked()), mediaPlayer, SLOT(play()));

    thumbbar-&gt;addButton(settings);
    thumbbar-&gt;addButton(playPause);
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwinthumbnailtoolbutton.xml">QWinThumbnailToolButton</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="count-prop">
<db:title>[read-only] count : const int</db:title>
<db:para>This property holds the number of buttons in the thumbnail toolbar</db:para>
<db:note>
<db:para>The number of buttons is limited to <db:code>7</db:code>.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">count</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="iconicLivePreviewPixmap-prop">
<db:title>[since 5.4] iconicLivePreviewPixmap : QPixmap</db:title>
<db:para>This property holds the pixmap for use as a live (peek) preview when tabbing into the application</db:para>
<db:para>This property was introduced in Qt 5.4.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpixmap.xml">QPixmap</db:link></db:type> <db:emphasis role="bold">iconicLivePreviewPixmap</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setIconicLivePreviewPixmap</db:emphasis>(<db:emphasis>const QPixmap &amp;</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="iconicPixmapNotificationsEnabled-prop">
<db:title>[since 5.4] iconicPixmapNotificationsEnabled : bool</db:title>
<db:para>This property holds whether signals <db:link xlink:href="qwinthumbnailtoolbar.xml#iconicThumbnailPixmapRequested">iconicThumbnailPixmapRequested</db:link>() and <db:link xlink:href="qwinthumbnailtoolbar.xml#iconicLivePreviewPixmapRequested">iconicLivePreviewPixmapRequested</db:link>() will be emitted</db:para>
<db:para>This property was introduced in Qt 5.4.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">iconicPixmapNotificationsEnabled</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setIconicPixmapNotificationsEnabled</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwinthumbnailtoolbar.xml#iconicThumbnailPixmap-prop">QWinThumbnailToolBar::iconicThumbnailPixmap</db:link></db:member>
<db:member><db:link xlink:href="qwinthumbnailtoolbar.xml#iconicLivePreviewPixmap-prop">QWinThumbnailToolBar::iconicLivePreviewPixmap</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="iconicThumbnailPixmap-prop">
<db:title>[since 5.4] iconicThumbnailPixmap : QPixmap</db:title>
<db:para>This property holds the pixmap for use as a thumbnail representation</db:para>
<db:para>This property was introduced in Qt 5.4.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpixmap.xml">QPixmap</db:link></db:type> <db:emphasis role="bold">iconicThumbnailPixmap</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setIconicThumbnailPixmap</db:emphasis>(<db:emphasis>const QPixmap &amp;</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwinthumbnailtoolbar.xml#iconicPixmapNotificationsEnabled-prop">QWinThumbnailToolBar::iconicPixmapNotificationsEnabled</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="window-prop">
<db:title>window : QWindow*</db:title>
<db:para>This property holds the window whose thumbnail toolbar is manipulated</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qwindow.xml">QWindow</db:link></db:type> *<db:emphasis role="bold">window</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setWindow</db:emphasis>(<db:type><db:link xlink:href="qwindow.xml">QWindow</db:link></db:type> *<db:emphasis>window</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QWinThumbnailToolBar">
<db:title>[explicit] QWinThumbnailToolBar::QWinThumbnailToolBar(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a <db:link xlink:href="qwinthumbnailtoolbar.xml">QWinThumbnailToolBar</db:link> with the specified <db:code role="parameter">parent</db:code>.</db:para>
<db:para>If <db:code role="parameter">parent</db:code> is an instance of <db:link xlink:href="qwindow.xml">QWindow</db:link>, it is automatically assigned as the thumbnail toolbar's <db:link xlink:href="qwinthumbnailtoolbar.xml#window-prop">window</db:link>.</db:para>
</db:section>
<db:section xml:id="dtor.QWinThumbnailToolBar">
<db:title>[virtual noexcept] QWinThumbnailToolBar::~QWinThumbnailToolBar()</db:title>
<db:para>Destroys and clears the <db:link xlink:href="qwinthumbnailtoolbar.xml">QWinThumbnailToolBar</db:link>.</db:para>
</db:section>
<db:section xml:id="addButton">
<db:title>void QWinThumbnailToolBar::addButton(QWinThumbnailToolButton *<db:emphasis>button</db:emphasis>)</db:title>
<db:para>Adds a <db:code role="parameter">button</db:code> to the thumbnail toolbar.</db:para>
<db:note>
<db:para>The number of buttons is limited to <db:code>7</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="buttons">
<db:title>QList&lt;QWinThumbnailToolButton *&gt; QWinThumbnailToolBar::buttons() const</db:title>
<db:para>Returns the list of buttons in the thumbnail toolbar.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwinthumbnailtoolbar.xml#setButtons">setButtons</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clear">
<db:title>void QWinThumbnailToolBar::clear()</db:title>
<db:para>Removes all buttons from the thumbnail toolbar.</db:para>
</db:section>
<db:section xml:id="iconicLivePreviewPixmapRequested">
<db:title>[since 5.4] void QWinThumbnailToolBar::iconicLivePreviewPixmapRequested()</db:title>
<db:para>This signal is emitted when the operating system requests a new iconic live preview pixmap, typically when the user ALT-tabs to the application.</db:para>
<db:para>This function was introduced in Qt 5.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwinthumbnailtoolbar.xml#iconicLivePreviewPixmap-prop">iconicLivePreviewPixmap</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="iconicThumbnailPixmapRequested">
<db:title>[since 5.4] void QWinThumbnailToolBar::iconicThumbnailPixmapRequested()</db:title>
<db:para>This signal is emitted when the operating system requests a new iconic thumbnail pixmap, typically when the thumbnail is shown.</db:para>
<db:para>This function was introduced in Qt 5.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwinthumbnailtoolbar.xml#iconicThumbnailPixmap-prop">iconicThumbnailPixmap</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="removeButton">
<db:title>void QWinThumbnailToolBar::removeButton(QWinThumbnailToolButton *<db:emphasis>button</db:emphasis>)</db:title>
<db:para>Removes the <db:code role="parameter">button</db:code> from the thumbnail toolbar.</db:para>
</db:section>
<db:section xml:id="setButtons">
<db:title>void QWinThumbnailToolBar::setButtons(const QList&lt;QWinThumbnailToolButton *&gt; &amp;<db:emphasis>buttons</db:emphasis>)</db:title>
<db:para>Sets the list of <db:code role="parameter">buttons</db:code> in the thumbnail toolbar.</db:para>
<db:note>
<db:para>Any existing buttons are replaced.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwinthumbnailtoolbar.xml#buttons">buttons</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
