<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>CandlestickSeries QML Type</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Represents a series of data as candlesticks.</db:para>
<db:para>This type was introduced in QtCharts 2.2.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtCharts 2.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtCharts 2.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>AbstractSeries</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qcandlestickseries.xml">QCandlestickSeries</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtcharts-candlestickseries.xml">CandlestickSeries</db:link> type acts as a container for single candlestick items. Each item is drawn to its own category when using <db:link xlink:href="qml-qtcharts-barcategoryaxis.xml">BarCategoryAxis</db:link>. <db:link xlink:href="qml-qtcharts-datetimeaxis.xml">DateTimeAxis</db:link> and <db:link xlink:href="qml-qtcharts-valueaxis.xml">ValueAxis</db:link> can be used as an alternative to <db:link xlink:href="qml-qtcharts-barcategoryaxis.xml">BarCategoryAxis</db:link>. In this case, each candlestick item is drawn according to its timestamp value.</db:para>
<db:note>
<db:para>The timestamps must be unique within a <db:link xlink:href="qml-qtcharts-candlestickseries.xml">CandlestickSeries</db:link>. When using <db:link xlink:href="qml-qtcharts-barcategoryaxis.xml">BarCategoryAxis</db:link>, only the first one of the candlestick items sharing a timestamp is drawn. If the chart includes multiple instances of <db:link xlink:href="qml-qtcharts-candlestickseries.xml">CandlestickSeries</db:link>, items from different series sharing a timestamp are drawn to the same category. When using <db:link xlink:href="qml-qtcharts-valueaxis.xml">ValueAxis</db:link> or <db:link xlink:href="qml-qtcharts-datetimeaxis.xml">DateTimeAxis</db:link>, candlestick items sharing a timestamp will overlap each other.</db:para>
</db:note>
<db:para>The following QML shows how to create a simple candlestick chart:</db:para>
<db:programlisting language="cpp">import QtQuick 2.5
import QtCharts 2.2

ChartView {
    title: &quot;Candlestick Series&quot;
    width: 400
    height: 300

    CandlestickSeries {
        name: &quot;Acme Ltd.&quot;
        increasingColor: &quot;green&quot;
        decreasingColor: &quot;red&quot;

        CandlestickSet { timestamp: 1435708800000; open: 690; high: 694; low: 599; close: 660 }
        CandlestickSet { timestamp: 1435795200000; open: 669; high: 669; low: 669; close: 669 }
        CandlestickSet { timestamp: 1436140800000; open: 485; high: 623; low: 485; close: 600 }
        CandlestickSet { timestamp: 1436227200000; open: 589; high: 615; low: 377; close: 569 }
        CandlestickSet { timestamp: 1436313600000; open: 464; high: 464; low: 254; close: 254 }
    }
}
</db:programlisting>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_qmlcandlestick.png"/>
</db:imageobject>
</db:mediaobject>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-candlestickset.xml">CandlestickSet</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-barcategoryaxis.xml">BarCategoryAxis</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-datetimeaxis.xml">DateTimeAxis</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-valueaxis.xml">ValueAxis</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="axisX-prop">
<db:title>axisX : AbstractAxis</db:title>
<db:fieldsynopsis>
<db:type>AbstractAxis</db:type>
<db:varname>axisX</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The x-axis used for the series. If you leave both axisX and <db:link xlink:href="qml-qtcharts-candlestickseries.xml#axisXTop-prop">axisXTop</db:link> undefined, a value axis is created for the series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-candlestickseries.xml#axisXTop-prop">axisXTop</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-valueaxis.xml">ValueAxis</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisXTop-prop">
<db:title>axisXTop : AbstractAxis</db:title>
<db:fieldsynopsis>
<db:type>AbstractAxis</db:type>
<db:varname>axisXTop</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The x-axis used for the series, drawn on top of the chart view.</db:para>
<db:note>
<db:para>You can only provide either <db:link xlink:href="qml-qtcharts-candlestickseries.xml#axisX-prop">axisX</db:link> or axisXTop, not both.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-candlestickseries.xml#axisX-prop">axisX</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisY-prop">
<db:title>axisY : AbstractAxis</db:title>
<db:fieldsynopsis>
<db:type>AbstractAxis</db:type>
<db:varname>axisY</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The y-axis used for the series. If you leave both axisY and <db:link xlink:href="qml-qtcharts-candlestickseries.xml#axisYRight-prop">axisYRight</db:link> undefined, a value axis is created for the series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-candlestickseries.xml#axisYRight-prop">axisYRight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-valueaxis.xml">ValueAxis</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisYRight-prop">
<db:title>axisYRight : AbstractAxis</db:title>
<db:fieldsynopsis>
<db:type>AbstractAxis</db:type>
<db:varname>axisYRight</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The y-axis used for the series, drawn to the right on the chart view.</db:para>
<db:note>
<db:para>You can only provide either <db:link xlink:href="qml-qtcharts-candlestickseries.xml#axisY-prop">axisY</db:link> or axisYRight, not both.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-candlestickseries.xml#axisY-prop">axisY</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="bodyOutlineVisible-prop">
<db:title>bodyOutlineVisible : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>bodyOutlineVisible</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The visibility of the candlestick body outlines.</db:para>
</db:section>
<db:section xml:id="bodyWidth-prop">
<db:title>bodyWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>bodyWidth</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The relative width of the candlestick item within its own slot, in the range from 0.0 to 1.0. Values outside this range are clamped to 0.0 or 1.0.</db:para>
</db:section>
<db:section xml:id="brushFilename-prop">
<db:title>brushFilename : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>brushFilename</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The name of the file used as a brush image for the series.</db:para>
</db:section>
<db:section xml:id="capsVisible-prop">
<db:title>capsVisible : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>capsVisible</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The visibility of the caps.</db:para>
</db:section>
<db:section xml:id="capsWidth-prop">
<db:title>capsWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>capsWidth</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The relative width of the caps within a candlestick, in the range from 0.0 to 1.0. Values outside this range are clamped to 0.0 or 1.0.</db:para>
</db:section>
<db:section xml:id="count-prop">
<db:title>[read-only] count : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>count</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The number of candlestick items in a series.</db:para>
</db:section>
<db:section xml:id="decreasingColor-prop">
<db:title>decreasingColor : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>decreasingColor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The color of the decreasing candlestick item body. A candlestick is <db:emphasis>decreasing</db:emphasis> when its open value is higher than the close value. By default, this property is set to the brush color with the alpha channel set to 128. The default color is used also when the property is set to an invalid color value.</db:para>
</db:section>
<db:section xml:id="increasingColor-prop">
<db:title>increasingColor : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>increasingColor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The color of the increasing candlestick item body. A candlestick is <db:emphasis>increasing</db:emphasis> when its close value is higher than the open value. By default, this property is set to the brush color. The default color is used also when the property is set to an invalid color value.</db:para>
</db:section>
<db:section xml:id="maximumColumnWidth-prop">
<db:title>maximumColumnWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>maximumColumnWidth</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The maximum width of the candlestick items in pixels. Setting a negative value means there is no maximum width. All negative values are converted to -1.0.</db:para>
</db:section>
<db:section xml:id="minimumColumnWidth-prop">
<db:title>minimumColumnWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>minimumColumnWidth</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The minimum width of the candlestick items in pixels. Setting a negative value means there is no minimum width. All negative values are converted to -1.0.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="candlestickSetsAdded-signal">
<db:title>candlestickSetsAdded(list&lt;CandlestickSet&gt; <db:emphasis>sets</db:emphasis>)</db:title>
<db:para>This signal is emitted when the candlestick items specified by <db:code role="parameter">sets</db:code> are added to the series.</db:para>
<db:para>The corresponding signal handler is <db:code>onCandlestickSetsAdded</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onCandlestickSetsAdded</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="candlestickSetsRemoved-signal">
<db:title>candlestickSetsRemoved(list&lt;CandlestickSet&gt; <db:emphasis>sets</db:emphasis>)</db:title>
<db:para>This signal is emitted when the candlestick items specified by <db:code role="parameter">sets</db:code> are removed from the series.</db:para>
<db:para>The corresponding signal handler is <db:code>onCandlestickSetsRemoved</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onCandlestickSetsRemoved</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="clicked-signal">
<db:title>clicked(CandlestickSet <db:emphasis>set</db:emphasis>)</db:title>
<db:para>This signal is emitted when the candlestick item specified by <db:code role="parameter">set</db:code> is clicked on the chart.</db:para>
<db:para>The corresponding signal handler is <db:code>onClicked</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="doubleClicked-signal">
<db:title>doubleClicked(CandlestickSet <db:emphasis>set</db:emphasis>)</db:title>
<db:para>This signal is emitted when the candlestick item specified by <db:code role="parameter">set</db:code> is double-clicked on the chart.</db:para>
<db:para>The corresponding signal handler is <db:code>onDoubleClicked</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onDoubleClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="hovered-signal">
<db:title>hovered(bool <db:emphasis>status</db:emphasis>, CandlestickSet <db:emphasis>set</db:emphasis>)</db:title>
<db:para>This signal is emitted when a mouse is hovered over the candlestick item specified by <db:code role="parameter">set</db:code> in a chart.</db:para>
<db:para>When the mouse moves over the item, <db:code role="parameter">status</db:code> turns <db:code>true</db:code>, and when the mouse moves away again, it turns <db:code>false</db:code>.</db:para>
<db:para>The corresponding signal handler is <db:code>onHovered</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onHovered</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="pressed-signal">
<db:title>pressed(CandlestickSet <db:emphasis>set</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user clicks the candlestick item specified by <db:code role="parameter">set</db:code> and holds down the mouse button.</db:para>
<db:para>The corresponding signal handler is <db:code>onPressed</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPressed</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="released-signal">
<db:title>released(CandlestickSet <db:emphasis>set</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user releases the mouse press on the candlestick item specified by <db:code role="parameter">set</db:code>.</db:para>
<db:para>The corresponding signal handler is <db:code>onReleased</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onReleased</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="append-method">
<db:title>append(CandlestickSet <db:emphasis>set</db:emphasis>)</db:title>
<db:para>Adds a single candlestick item specified by <db:code role="parameter">set</db:code> to the series and takes ownership of it. If the item is null or it is already in the series, it is not appended.</db:para>
<db:para>Returns <db:code>true</db:code> if appending succeeded, <db:code>false</db:code> otherwise.</db:para>
</db:section>
<db:section xml:id="at-method">
<db:title>at(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Returns the candlestick item at the position specified by <db:code role="parameter">index</db:code>. Returns null if the index is not valid.</db:para>
</db:section>
<db:section xml:id="clear-method">
<db:title>clear()</db:title>
<db:para>Removes all candlestick items from the series and permanently deletes them.</db:para>
</db:section>
<db:section xml:id="insert-method">
<db:title>insert(int <db:emphasis>index</db:emphasis>, CandlestickSet <db:emphasis>set</db:emphasis>)</db:title>
<db:para>Inserts the candlestick item specified by <db:code role="parameter">set</db:code> to the series at the position specified by <db:code role="parameter">index</db:code>. Takes ownership of the item. If the item is null or already belongs to the series, it is not inserted.</db:para>
<db:para>Returns <db:code>true</db:code> if inserting succeeded, <db:code>false</db:code> otherwise.</db:para>
</db:section>
<db:section xml:id="remove-method">
<db:title>remove(CandlestickSet <db:emphasis>set</db:emphasis>)</db:title>
<db:para>Removes a single candlestick item, specified by <db:code role="parameter">set</db:code>, from the series.</db:para>
<db:para>Returns <db:code>true</db:code> if the item is successfully deleted, <db:code>false</db:code> otherwise.</db:para>
</db:section>
</db:section>
</db:article>
