<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Examples - Views</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.5.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This is a collection of QML model-view examples.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qml-modelviews-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:emphasis>Views</db:emphasis> is a collection of small QML examples relating to model and view functionality. They demonstrate how to show data from a model using the Qt Quick view types. For more information, visit the <db:link xlink:href="qtquick-modelviewsdata-modelview.xml">Models and Views in Qt Quick</db:link> page.</db:para>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section xml:id="gridview-and-pathview">
<db:title>GridView and PathView</db:title>
<db:para><db:emphasis>GridView</db:emphasis> and <db:emphasis>PathView</db:emphasis> demonstrate usage of these types to display views.</db:para>
<db:programlisting language="qml">    GridView {
        anchors.fill: parent
        cellWidth: 100; cellHeight: 100
        focus: true
        model: appModel

        highlight: Rectangle { width: 80; height: 80; color: &quot;lightsteelblue&quot; }

        delegate: Item {
            width: 100; height: 100

            Image {
                id: myIcon
                y: 20; anchors.horizontalCenter: parent.horizontalCenter
                source: icon
            }
            Text {
                anchors { top: myIcon.bottom; horizontalCenter: parent.horizontalCenter }
                text: name
            }
            MouseArea {
                anchors.fill: parent
                onClicked: parent.GridView.view.currentIndex = index
            }
        }
    }
</db:programlisting>
</db:section>
<db:section xml:id="dynamic-list">
<db:title>Dynamic List</db:title>
<db:para><db:emphasis>Dynamic List</db:emphasis> demonstrates animation of runtime additions and removals to a <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>.</db:para>
<db:para>The <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>.onAdd signal handler runs an animation when new items are added to the view, and the <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>.onRemove another when they are removed.</db:para>
<db:programlisting language="qml">        Item {
            ListView.onAdd: SequentialAnimation {
                PropertyAction { target: delegateItem; property: &quot;height&quot;; value: 0 }
                NumberAnimation { target: delegateItem; property: &quot;height&quot;; to: 80; duration: 250; easing.type: Easing.InOutQuad }
            }

            ListView.onRemove: SequentialAnimation {
                PropertyAction { target: delegateItem; property: &quot;ListView.delayRemove&quot;; value: true }
                NumberAnimation { target: delegateItem; property: &quot;height&quot;; to: 0; duration: 250; easing.type: Easing.InOutQuad }

                // Make sure delayRemove is set back to false so that the item can be destroyed
                PropertyAction { target: delegateItem; property: &quot;ListView.delayRemove&quot;; value: false }
            }
        }
</db:programlisting>
<db:section xml:id="expanding-delegates">
<db:title>Expanding Delegates</db:title>
<db:para><db:emphasis>Expanding Delegates</db:emphasis> demonstrates delegates that expand when activated.</db:para>
<db:para>It has a complex delegate the size and appearance of which can change, displacing other items in the view.</db:para>
<db:programlisting language="qml">        Item {
            id: recipe

            // Create a property to contain the visibility of the details.
            // We can bind multiple element's opacity to this one property,
            // rather than having a &quot;PropertyChanges&quot; line for each element we
            // want to fade.
            property real detailsOpacity : 0
            MouseArea {
                anchors.fill: parent
                onClicked: recipe.state = 'Details';
            }

            // Lay out the page: picture, title and ingredients at the top, and method at the
            // bottom.  Note that elements that should not be visible in the list
            // mode have their opacity set to recipe.detailsOpacity.

            Row {
                id: topLayout
                x: 10; y: 10; height: recipeImage.height; width: parent.width
                spacing: 10

                Image {
                    id: recipeImage
                    width: 50; height: 50
                    source: picture
                }
            Item {
                id: details
                x: 10; width: parent.width - 20

                anchors { top: topLayout.bottom; topMargin: 10; bottom: parent.bottom; bottomMargin: 10 }
                opacity: recipe.detailsOpacity
            }

            // A button to close the detailed view, i.e. set the state back to default ('').
            TextButton {
                y: 10
                anchors { right: background.right; rightMargin: 10 }
                opacity: recipe.detailsOpacity
                text: &quot;Close&quot;

                onClicked: recipe.state = '';
            }

            states: State {
                name: &quot;Details&quot;

                PropertyChanges { target: background; color: &quot;white&quot; }
                PropertyChanges { target: recipeImage; width: 130; height: 130 } // Make picture bigger
                PropertyChanges { target: recipe; detailsOpacity: 1; x: 0 } // Make details visible
                PropertyChanges { target: recipe; height: listView.height } // Fill the entire list area with the detailed view

                // Move the list so that this item is at the top.
                PropertyChanges { target: recipe.ListView.view; explicit: true; contentY: recipe.y }

                // Disallow flicking while we're in detailed view
                PropertyChanges { target: recipe.ListView.view; interactive: false }
            }

            transitions: Transition {
                // Make the state changes smooth
                ParallelAnimation {
                    ColorAnimation { property: &quot;color&quot;; duration: 500 }
                    NumberAnimation { duration: 300; properties: &quot;detailsOpacity,x,contentY,height,width&quot; }
                }
            }
        }
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="highlight">
<db:title>Highlight</db:title>
<db:para><db:emphasis>Highlight</db:emphasis> demonstrates adding a custom highlight to a <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>.</db:para>
<db:programlisting language="qml">    // Define a highlight with customized movement between items.
    Component {
        id: highlightBar
        Rectangle {
            width: 200; height: 50
            color: &quot;#FFFF88&quot;
            y: listView.currentItem.y;
            Behavior on y { SpringAnimation { spring: 2; damping: 0.1 } }
        }
    }

    ListView {
        id: listView
        width: 200; height: parent.height
        x: 30

        model: PetsModel {}
        delegate: petDelegate
        focus: true

        // Set the highlight delegate. Note we must also set highlightFollowsCurrentItem
        // to false so the highlight delegate can control how the highlight is moved.
        highlight: highlightBar
        highlightFollowsCurrentItem: false
    }
</db:programlisting>
</db:section>
<db:section xml:id="highlight-ranges">
<db:title>Highlight Ranges</db:title>
<db:para><db:emphasis>Highlight Ranges</db:emphasis> shows the three different highlight range modes of <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>.</db:para>
<db:programlisting language="qml">Rectangle {
    id: root
    property int current: 0
    property bool increasing: true
    // Example index automation for convenience, disabled on click or tap
    SequentialAnimation {
        id: anim
        loops: -1
        running: true
        ScriptAction {
            script: if (increasing) {
                        current++;
                        if (current &gt;= aModel.count -1) {
                            current = aModel.count - 1;
                            increasing = !increasing;
                        }
                    } else {
                        current--;
                        if (current &lt;= 0) {
                            current = 0;
                            increasing = !increasing;
                        }
                    }
        }

        PauseAnimation { duration: 500 }
    }
    ListView {
        id: list1
        height: 50; width: parent.width
        model: PetsModel {id: aModel}
        delegate: petDelegate
        orientation: ListView.Horizontal

        highlight: Rectangle { color: &quot;lightsteelblue&quot; }
        currentIndex: root.current
        onCurrentIndexChanged: root.current = currentIndex
        focus: true
    }

    ListView {
        id: list2
        y: 160
        height: 50; width: parent.width
        model: PetsModel {}
        delegate: petDelegate
        orientation: ListView.Horizontal

        highlight: Rectangle { color: &quot;yellow&quot; }
        currentIndex: root.current
        preferredHighlightBegin: 80; preferredHighlightEnd: 220
        highlightRangeMode: ListView.ApplyRange
    }

    ListView {
        id: list3
        y: 320
        height: 50; width: parent.width
        model: PetsModel {}
        delegate: petDelegate
        orientation: ListView.Horizontal

        highlight: Rectangle { color: &quot;yellow&quot; }
        currentIndex: root.current
        onCurrentIndexChanged: root.current = currentIndex
        preferredHighlightBegin: 125; preferredHighlightEnd: 125
        highlightRangeMode: ListView.StrictlyEnforceRange
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="sections">
<db:title>Sections</db:title>
<db:para><db:emphasis>Sections</db:emphasis> demonstrates the various section headers and footers available to <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>.</db:para>
<db:programlisting language="qml">    // The delegate for each section header
    Component {
        id: sectionHeading
        Rectangle {
            width: container.width
            height: childrenRect.height
            color: &quot;lightsteelblue&quot;

            Text {
                text: section
                font.bold: true
                font.pixelSize: 20
            }
        }
    }

    ListView {
        id: view
        anchors.top: parent.top
        anchors.bottom: buttonBar.top
        width: parent.width
        model: animalsModel
        delegate: Text { text: name; font.pixelSize: 18 }

        section.property: &quot;size&quot;
        section.criteria: ViewSection.FullString
        section.delegate: sectionHeading
    }
</db:programlisting>
</db:section>
<db:section xml:id="packages">
<db:title>Packages</db:title>
<db:para><db:emphasis>Packages</db:emphasis> uses the <db:link xlink:href="qml-package.xml">Package</db:link> type to transition delegates between two views.</db:para>
<db:para>It has a Package object which defines delegate items for each view and an item that can be transferred between delegates.</db:para>
<db:programlisting language="qml">Package {
    Text { id: listDelegate; width: parent.width; height: 25; text: 'Empty'; Package.name: 'list' }
    Text { id: gridDelegate; width: parent.width / 2; height: 50; text: 'Empty'; Package.name: 'grid' }

    Rectangle {
        id: wrapper
        width: parent.width; height: 25
        color: 'lightsteelblue'

        Text { text: display; anchors.centerIn: parent }
        state: root.upTo &gt; index ? 'inGrid' : 'inList'
        states: [
            State {
                name: 'inList'
                ParentChange { target: wrapper; parent: listDelegate }
            },
            State {
                name: 'inGrid'
                ParentChange {
                    target: wrapper; parent: gridDelegate
                    x: 0; y: 0; width: gridDelegate.width; height: gridDelegate.height
                }
            }
        ]

        transitions: [
            Transition {
                ParentAnimation {
                    NumberAnimation { properties: 'x,y,width,height'; duration: 300 }
                }
            }
        ]
    }
}
</db:programlisting>
<db:para>A <db:link xlink:href="qml-qtqml-models-delegatemodel.xml">DelegateModel</db:link> allows the individual views to access their specific items from the shared package delegate.</db:para>
<db:programlisting language="qml">DelegateModel {
    id: visualModel
    delegate: Delegate {}
    model: myModel
}

ListView {
    id: lv
    height: parent.height/2
    width: parent.width

    model: visualModel.parts.list
}
GridView {
    y: parent.height/2
    height: parent.height/2
    width: parent.width
    cellWidth: width / 2
    cellHeight: 50
    model: visualModel.parts.grid
}
</db:programlisting>
</db:section>
<db:section xml:id="objectmodel">
<db:title>ObjectModel</db:title>
<db:para><db:emphasis>ObjectModel</db:emphasis> uses an <db:link xlink:href="qml-qtqml-models-objectmodel.xml">ObjectModel</db:link> for the model instead of a <db:link xlink:href="qtquick-modelviewsdata-modelview.xml#listmodel">ListModel</db:link>.</db:para>
<db:programlisting language="qml">    ObjectModel {
        id: itemModel

        Rectangle {
            width: view.width; height: view.height
            color: &quot;#FFFEF0&quot;
            Text { text: &quot;Page 1&quot;; font.bold: true; anchors.centerIn: parent }

            Component.onDestruction: if (printDestruction) print(&quot;destroyed 1&quot;)
        }
        Rectangle {
            width: view.width; height: view.height
            color: &quot;#F0FFF7&quot;
            Text { text: &quot;Page 2&quot;; font.bold: true; anchors.centerIn: parent }

            Component.onDestruction: if (printDestruction) print(&quot;destroyed 2&quot;)
        }
        Rectangle {
            width: view.width; height: view.height
            color: &quot;#F4F0FF&quot;
            Text { text: &quot;Page 3&quot;; font.bold: true; anchors.centerIn: parent }

            Component.onDestruction: if (printDestruction) print(&quot;destroyed 3&quot;)
        }
    }

    ListView {
        id: view
        anchors { fill: parent; bottomMargin: 30 }
        model: itemModel
        preferredHighlightBegin: 0; preferredHighlightEnd: 0
        highlightRangeMode: ListView.StrictlyEnforceRange
        orientation: ListView.Horizontal
        snapMode: ListView.SnapOneItem; flickDeceleration: 2000
        cacheBuffer: 200
    }
</db:programlisting>
</db:section>
<db:section xml:id="display-margins">
<db:title>Display Margins</db:title>
<db:para><db:emphasis>Display Margins</db:emphasis> uses delegates to display items and implements a simple header and footer components.</db:para>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="views/gridview/gridview-example.qml">views/gridview/gridview-example.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/PetsModel.qml">views/listview/content/PetsModel.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/PressAndHoldButton.qml">views/listview/content/PressAndHoldButton.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/RecipesModel.qml">views/listview/content/RecipesModel.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/SmallText.qml">views/listview/content/SmallText.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/TextButton.qml">views/listview/content/TextButton.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/ToggleButton.qml">views/listview/content/ToggleButton.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/displaymargin.qml">views/listview/displaymargin.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/dynamiclist.qml">views/listview/dynamiclist.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/expandingdelegates.qml">views/listview/expandingdelegates.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/highlight.qml">views/listview/highlight.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/highlightranges.qml">views/listview/highlightranges.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/sections.qml">views/listview/sections.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/main.cpp">views/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/objectmodel/objectmodel.qml">views/objectmodel/objectmodel.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/package/Delegate.qml">views/package/Delegate.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/package/view.qml">views/package/view.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/Clock.qml">views/parallax/content/Clock.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/ParallaxView.qml">views/parallax/content/ParallaxView.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/QuitButton.qml">views/parallax/content/QuitButton.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/Smiley.qml">views/parallax/content/Smiley.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/pics/home-page.svg">views/parallax/content/pics/home-page.svg</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/parallax.qml">views/parallax/parallax.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/pathview/pathview-example.qml">views/pathview/pathview-example.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/views.pro">views/views.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/views.qml">views/views.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/views.qmlproject">views/views.qmlproject</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/views.qrc">views/views.qrc</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/visualdatamodel/dragselection.qml">views/visualdatamodel/dragselection.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/visualdatamodel/slideshow.qml">views/visualdatamodel/slideshow.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/visualdatamodel/visualdatamodel.qmlproject">views/visualdatamodel/visualdatamodel.qmlproject</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Images:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="views/gridview/pics/AddressBook_48.png">views/gridview/pics/AddressBook_48.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/gridview/pics/AudioPlayer_48.png">views/gridview/pics/AudioPlayer_48.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/gridview/pics/Camera_48.png">views/gridview/pics/Camera_48.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/gridview/pics/DateBook_48.png">views/gridview/pics/DateBook_48.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/gridview/pics/EMail_48.png">views/gridview/pics/EMail_48.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/gridview/pics/TodoList_48.png">views/gridview/pics/TodoList_48.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/gridview/pics/VideoPlayer_48.png">views/gridview/pics/VideoPlayer_48.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/pics/arrow-down.png">views/listview/content/pics/arrow-down.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/pics/arrow-up.png">views/listview/content/pics/arrow-up.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/pics/fruit-salad.jpg">views/listview/content/pics/fruit-salad.jpg</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/pics/hamburger.jpg">views/listview/content/pics/hamburger.jpg</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/pics/lemonade.jpg">views/listview/content/pics/lemonade.jpg</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/pics/list-delete.png">views/listview/content/pics/list-delete.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/pics/minus-sign.png">views/listview/content/pics/minus-sign.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/pics/moreDown.png">views/listview/content/pics/moreDown.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/pics/moreUp.png">views/listview/content/pics/moreUp.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/pics/pancakes.jpg">views/listview/content/pics/pancakes.jpg</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/pics/plus-sign.png">views/listview/content/pics/plus-sign.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/listview/content/pics/vegetable-soup.jpg">views/listview/content/pics/vegetable-soup.jpg</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/background.png">views/parallax/content/background.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/center.png">views/parallax/content/center.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/clock-night.png">views/parallax/content/clock-night.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/clock.png">views/parallax/content/clock.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/hour.png">views/parallax/content/hour.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/minute.png">views/parallax/content/minute.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/pics/background.jpg">views/parallax/content/pics/background.jpg</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/pics/face-smile.png">views/parallax/content/pics/face-smile.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/pics/home-page.png">views/parallax/content/pics/home-page.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/pics/shadow.png">views/parallax/content/pics/shadow.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/pics/yast-joystick.png">views/parallax/content/pics/yast-joystick.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/pics/yast-wol.png">views/parallax/content/pics/yast-wol.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/quit.png">views/parallax/content/quit.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/parallax/content/second.png">views/parallax/content/second.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/pathview/pics/AddressBook_48.png">views/pathview/pics/AddressBook_48.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/pathview/pics/AudioPlayer_48.png">views/pathview/pics/AudioPlayer_48.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/pathview/pics/Camera_48.png">views/pathview/pics/Camera_48.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/pathview/pics/DateBook_48.png">views/pathview/pics/DateBook_48.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/pathview/pics/EMail_48.png">views/pathview/pics/EMail_48.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/pathview/pics/TodoList_48.png">views/pathview/pics/TodoList_48.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="views/pathview/pics/VideoPlayer_48.png">views/pathview/pics/VideoPlayer_48.png</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:section></db:article>
