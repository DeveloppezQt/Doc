<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QStandardItemEditorCreator Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.2.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qstandarditemeditorcreator.xml">QStandardItemEditorCreator</db:link> class provides the possibility to register widgets without having to subclass QItemEditorCreatorBase.</db:para>
<db:para>This class was introduced in Qt 4.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QStandardItemEditorCreator</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QStandardItemEditorCreator is part of <db:simplelist><db:member>model-view</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This convenience template class makes it possible to register widgets without having to subclass QItemEditorCreatorBase.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QItemEditorFactory *editorFactory = new QItemEditorFactory;
QItemEditorCreatorBase *creator = new QStandardItemEditorCreator&lt;MyFancyDateTimeEdit&gt;();
editorFactory-&gt;registerEditor(QVariant::DateType, creator);
</db:programlisting>
<db:para>Setting the <db:code>editorFactory</db:code> created above in an item delegate via QItemDelegate::setItemEditorFactory() makes sure that all values of type QVariant::DateTime will be edited in <db:code>MyFancyDateTimeEdit</db:code>.</db:para>
<db:para>The editor must provide a user property that will contain the editing data. The property is used by QItemDelegates to set and retrieve the data (using Qt's <db:link xlink:href="metaobjects.xml#meta-object-system">meta-object system</db:link>). You set the user property with the USER keyword:</db:para>
<db:programlisting language="cpp">Q_PROPERTY(QColor color READ color WRITE setColor USER true)
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member>QItemEditorCreatorBase</db:member>
<db:member><db:link xlink:href="qitemeditorcreator.xml">QItemEditorCreator</db:link></db:member>
<db:member>QItemEditorFactory</db:member>
<db:member>QItemDelegate</db:member>
<db:member><db:link xlink:href="qtwidgets-itemviews-coloreditorfactory-example.xml">Color Editor Factory Example</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:article>
