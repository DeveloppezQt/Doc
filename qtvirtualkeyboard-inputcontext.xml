<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>InputContext Class</db:title>
<db:subtitle>QtVirtualKeyboard::InputContext</db:subtitle>
<db:productname>QtVirtualKeyboard</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Virtual Keyboard</db:titleabbrev>
<db:abstract>
<db:para>Provides access to an input context.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>InputContext</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-virtualkeyboard-inputcontext.xml" xlink:role="">InputContext</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="animating-prop">
<db:title>animating : bool</db:title>
<db:para>This property holds the animating status.</db:para>
<db:para>Use this property to set the animating status, for example during UI transitioning states.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">animating</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setAnimating</db:emphasis>(<db:type>bool</db:type> <db:emphasis>animating</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">animatingChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="capsLock-prop">
<db:title>capsLock : bool</db:title>
<db:para>This property holds the caps lock status.</db:para>
<db:para>This property is changed when the caps lock status changes.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">capsLock</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setCapsLock</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enable</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">capsLockChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="cursorPosition-prop">
<db:title>[read-only] cursorPosition : const int</db:title>
<db:para>This property holds the cursor position.</db:para>
<db:para>This property is changed when the cursor position changes.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">cursorPosition</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">cursorPositionChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="cursorRectangle-prop">
<db:title>[read-only] cursorRectangle : const QRectF</db:title>
<db:para>This property holds the cursor rectangle.</db:para>
<db:para>This property is changed when the cursor rectangle changes.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qrectf.xml">QRectF</db:link></db:type> <db:emphasis role="bold">cursorRectangle</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">cursorRectangleChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="focus-prop">
<db:title>[read-only] focus : const bool</db:title>
<db:para>This property holds the focus status.</db:para>
<db:para>This property is changed when the input method receives or loses focus.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">focus</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">focusChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="inputEngine-prop">
<db:title>[read-only] inputEngine : QtVirtualKeyboard::InputEngine* const</db:title>
<db:para>This property holds the input engine.</db:para>
<db:para>This property stores the input engine.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qtvirtualkeyboard-inputengine.xml">QtVirtualKeyboard::InputEngine</db:link></db:type> *<db:emphasis role="bold">inputEngine</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="inputItem-prop">
<db:title>[read-only] inputItem : QObject* const</db:title>
<db:para>This property holds the focused input item.</db:para>
<db:para>This property is changed when the focused input item changes.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qobject.xml#QObject">QObject</db:link></db:type> *<db:emphasis role="bold">inputItem</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">inputItemChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="inputMethodHints-prop">
<db:title>[read-only] inputMethodHints : const Qt::InputMethodHints</db:title>
<db:para>This property holds the input method hints.</db:para>
<db:para>This property is changed when the input method hints changes.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt.xml#InputMethodHint-enum">Qt::InputMethodHints</db:link></db:type> <db:emphasis role="bold">inputMethodHints</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">inputMethodHintsChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="keyboardRectangle-prop">
<db:title>keyboardRectangle : QRectF</db:title>
<db:para>This property holds the keyboard rectangle.</db:para>
<db:para>Use this property to set the keyboard rectangle.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qrectf.xml">QRectF</db:link></db:type> <db:emphasis role="bold">keyboardRectangle</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setKeyboardRectangle</db:emphasis>(<db:type><db:link xlink:href="qrectf.xml">QRectF</db:link></db:type> <db:emphasis>rectangle</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">keyboardRectangleChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="locale-prop">
<db:title>locale : QString</db:title>
<db:para>This property holds the locale.</db:para>
<db:para>Sets the locale for this input context.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">locale</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLocale</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>locale</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">localeChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="preeditText-prop">
<db:title>preeditText : QString</db:title>
<db:para>This property holds the pre-edit text.</db:para>
<db:para>This property sets the pre-edit text.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">preeditText</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setPreeditText</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>text</db:emphasis>, <db:type><db:link xlink:href="qlist.xml">QList</db:link></db:type>&lt;<db:type><db:link xlink:href="qinputmethodevent-attribute.xml">QInputMethodEvent::Attribute</db:link></db:type>&gt; <db:emphasis>attributes</db:emphasis> = QList&lt;QInputMethodEvent::Attribute&gt;(), <db:type>int</db:type> <db:emphasis>replaceFrom</db:emphasis> = 0, <db:type>int</db:type> <db:emphasis>replaceLength</db:emphasis> = 0)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">preeditTextChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="previewRectangle-prop">
<db:title>previewRectangle : QRectF</db:title>
<db:para>This property holds the preview rectangle.</db:para>
<db:para>Use this property to set the preview rectangle.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qrectf.xml">QRectF</db:link></db:type> <db:emphasis role="bold">previewRectangle</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setPreviewRectangle</db:emphasis>(<db:type><db:link xlink:href="qrectf.xml">QRectF</db:link></db:type> <db:emphasis>rectangle</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">previewRectangleChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="previewVisible-prop">
<db:title>previewVisible : bool</db:title>
<db:para>This property holds the animating status.</db:para>
<db:para>Use this property to set the visibility status of the preview.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">previewVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setPreviewVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">previewVisibleChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="selectedText-prop">
<db:title>[read-only] selectedText : const QString</db:title>
<db:para>This property holds the selected text.</db:para>
<db:para>This property is changed when the selected text changes.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">selectedText</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">selectedTextChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="shift-prop">
<db:title>shift : bool</db:title>
<db:para>This property holds the shift status.</db:para>
<db:para>This property is changed when the shift status changes.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">shift</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setShift</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enable</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">shiftChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="shiftHandler-prop">
<db:title>[read-only] shiftHandler : QtVirtualKeyboard::ShiftHandler* const</db:title>
<db:para>This property holds the shift handler instance.</db:para>
<db:para>This property stores the shift handler.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qtvirtualkeyboard-shifthandler.xml">QtVirtualKeyboard::ShiftHandler</db:link></db:type> *<db:emphasis role="bold">shiftHandler</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="surroundingText-prop">
<db:title>[read-only] surroundingText : const QString</db:title>
<db:para>This property holds the surrounding text around cursor.</db:para>
<db:para>This property is changed when the surrounding text around the cursor changes.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">surroundingText</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">surroundingTextChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="clear">
<db:title>void InputContext::clear()</db:title>
<db:para>Clears the pre-edit text.</db:para>
</db:section>
<db:section xml:id="commit">
<db:title>void InputContext::commit()</db:title>
<db:para>Commits the current pre-edit text.</db:para>
</db:section>
<db:section xml:id="commit-1">
<db:title>void InputContext::commit(const QString &amp;<db:emphasis>text</db:emphasis>, int <db:emphasis>replaceFrom</db:emphasis> = 0, int <db:emphasis>replaceLength</db:emphasis> = 0)</db:title>
<db:para>Commits the final <db:code role="parameter">text</db:code> to the input item and optionally modifies the text relative to the start of the pre-edit text. If <db:code role="parameter">replaceFrom</db:code> is non-zero, the <db:code role="parameter">text</db:code> replaces the contents relative to <db:code role="parameter">replaceFrom</db:code> with a length of <db:code role="parameter">replaceLength</db:code>.</db:para>
</db:section>
<db:section xml:id="focusEditorChanged">
<db:title>void InputContext::focusEditorChanged()</db:title>
<db:para>This signal is emitted when the focus editor changes.</db:para>
</db:section>
<db:section xml:id="hideInputPanel">
<db:title>void InputContext::hideInputPanel()</db:title>
<db:para>This method hides the input panel. This method should only be called when the user initiates the hide, e.g. by pressing a dedicated button on the keyboard.</db:para>
</db:section>
<db:section xml:id="sendKeyClick">
<db:title>void InputContext::sendKeyClick(int <db:emphasis>key</db:emphasis>, const QString &amp;<db:emphasis>text</db:emphasis>, int <db:emphasis>modifiers</db:emphasis> = 0)</db:title>
<db:para>Sends a key click event with the given <db:code role="parameter">key</db:code>, <db:code role="parameter">text</db:code> and <db:code role="parameter">modifiers</db:code> to the input item that currently has focus.</db:para>
</db:section>
</db:section>
</db:article>
