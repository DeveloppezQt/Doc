<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ChartView QML Type</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Chart element.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtCharts 2.2</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link> element is the parent that is responsible for showing different chart series types.</db:para>
<db:para>The following QML shows how to create a simple chart with one pie series:</db:para>
<db:programlisting language="qml">import QtQuick 2.0
import QtCharts 2.0

ChartView {
    width: 400
    height: 300
    theme: ChartView.ChartThemeBrownSand
    antialiasing: true

    PieSeries {
        id: pieSeries
        PieSlice { label: &quot;eaten&quot;; value: 94.9 }
        PieSlice { label: &quot;not yet eaten&quot;; value: 5.1 }
    }
}
</db:programlisting>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_qmlpiechart.png"/>
</db:imageobject>
</db:mediaobject>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="animationDuration-prop">
<db:title>animationDuration : int</db:title>
<db:para>The duration of the animation for the chart.</db:para>
</db:section>
<db:section xml:id="animationEasingCurve-prop">
<db:title>animationEasingCurve : easing</db:title>
<db:para>The easing curve of the animation for the chart.</db:para>
</db:section>
<db:section xml:id="animationOptions-prop">
<db:title>animationOptions : Animation</db:title>
<db:para>Animation configuration of the chart. One of <db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link>.NoAnimation, <db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link>.GridAxisAnimations, <db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link>.SeriesAnimations or <db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link>.AllAnimations.</db:para>
</db:section>
<db:section xml:id="axes-prop">
<db:title>axes : list&lt;AbstractAxis&gt;</db:title>
<db:para>The axes of the <db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link>.</db:para>
</db:section>
<db:section xml:id="backgroundColor-prop">
<db:title>backgroundColor : color</db:title>
<db:para>The color of the chart's background. By default background color is defined by chart theme.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#theme-prop">ChartView::theme</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="backgroundRoundness-prop">
<db:title>backgroundRoundness : real</db:title>
<db:para>The diameter of the rounding circle at the corners of the chart background.</db:para>
</db:section>
<db:section xml:id="count-prop">
<db:title>count : int</db:title>
<db:para>The count of series added to the chart.</db:para>
</db:section>
<db:section xml:id="dropShadowEnabled-prop">
<db:title>dropShadowEnabled : bool</db:title>
<db:para>The chart's border drop shadow. Set to true to enable drop shadow.</db:para>
</db:section>
<db:section xml:id="legend-prop">
<db:title>legend : Legend</db:title>
<db:para>The legend of the chart. Legend lists all the series, pie slices and bar sets added on the chart.</db:para>
</db:section>
<db:section xml:id="locale-prop">
<db:title>[since QtCharts 2.0] locale : locale</db:title>
<db:para>Sets the locale used to format various chart labels when <db:link xlink:href="qml-qtcharts-chartview.xml#localizeNumbers-prop">localizeNumbers</db:link> is <db:code>true</db:code>. This also determines the locale used to format <db:link xlink:href="qml-qtcharts-datetimeaxis.xml">DateTimeAxis</db:link> labels regardless of <db:link xlink:href="qml-qtcharts-chartview.xml#localizeNumbers-prop">localizeNumbers</db:link> property. Defaults to application default locale at the time the chart is constructed.</db:para>
<db:para>This property was introduced in QtCharts 2.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#localizeNumbers-prop">localizeNumbers</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="localizeNumbers-prop">
<db:title>[since QtCharts 2.0] localizeNumbers : bool</db:title>
<db:para>When <db:code>true</db:code>, all generated numbers appearing in various series and axis labels will be localized using the default <db:link xlink:href="qlocale.xml">QLocale</db:link> of the application, which defaults to the system locale. When <db:code>false</db:code>, the &quot;C&quot; locale is always used. Defaults to <db:code>false</db:code>.</db:para>
<db:para>This property was introduced in QtCharts 2.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#locale-prop">locale</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="margins-prop">
<db:title>margins : Margins</db:title>
<db:para>The minimum margins allowed between the outer bounds and the <db:link xlink:href="qml-qtcharts-chartview.xml#plotArea-prop">plotArea</db:link> of the <db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link>. Margins area of <db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link> is used for drawing title, axes and legend.</db:para>
</db:section>
<db:section xml:id="plotArea-prop">
<db:title>plotArea : rect</db:title>
<db:para>The area on the <db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link> that is used for drawing series. This is the <db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link> rect without the margins.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#margins-prop">ChartView::margins</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="plotAreaColor-prop">
<db:title>plotAreaColor : color</db:title>
<db:para>The color of the background of the chart's plot area. By default plot area background uses chart's background color.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#backgroundColor-prop">ChartView::backgroundColor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="theme-prop">
<db:title>theme : Theme</db:title>
<db:para>Theme defines the visual appearance of the chart, including for example colors, fonts, line widths and chart background.</db:para>
</db:section>
<db:section xml:id="title-prop">
<db:title>title : string</db:title>
<db:para>The title of the chart, shown on top of the chart.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#titleColor-prop">ChartView::titleColor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="titleColor-prop">
<db:title>titleColor : color</db:title>
<db:para>The color of the title text.</db:para>
</db:section>
<db:section xml:id="titleFont-prop">
<db:title>titleFont : Font</db:title>
<db:para>The title font of the chart.</db:para>
<db:para>See the Qt documentation for more details of Font.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="seriesAdded-signal">
<db:title>seriesAdded(AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>The <db:code role="parameter">series</db:code> has been added to the chart.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onSeriesAdded</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="seriesRemoved-signal">
<db:title>seriesRemoved(AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>The <db:code role="parameter">series</db:code> has been removed from the chart. Please note that <db:code role="parameter">series</db:code> is no longer a valid object after the signal handler has completed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onSeriesRemoved</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="axisX-method">
<db:title>Axis axisX(AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>The x-axis of the series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#setAxisX-method">setAxisX</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisY-method">
<db:title>Axis axisY(AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>The y-axis of the series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#setAxisY-method">setAxisY</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="createSeries-method">
<db:title>AbstractSeries createSeries(SeriesType <db:emphasis>type</db:emphasis>, string <db:emphasis>name</db:emphasis>, AbstractAxis <db:emphasis>axisX</db:emphasis>, AbstractAxis <db:emphasis>axisY</db:emphasis>)</db:title>
<db:para>Creates a series object of <db:code role="parameter">type</db:code> to the chart with name <db:code role="parameter">name</db:code>, optional axis <db:code role="parameter">axisX</db:code> and optional axis <db:code role="parameter">axisY</db:code>. For example:</db:para>
<db:programlisting language="cpp">// lineSeries is a LineSeries object that has already been added to the ChartView; re-use it's axes
var myAxisX = chartView.axisX(lineSeries);
var myAxisY = chartView.axisY(lineSeries);
var scatter = chartView.createSeries(ChartView.SeriesTypeScatter, &quot;scatter series&quot;, myAxisX, myAxisY);
</db:programlisting>
</db:section>
<db:section xml:id="isZoomed-method">
<db:title>isZoomed()</db:title>
<db:para>Returns true if any series has a zoomed domain.</db:para>
</db:section>
<db:section xml:id="mapToPosition-method">
<db:title>point mapToPosition(point <db:emphasis>value</db:emphasis>, AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Returns the position on the chart that corresponds to the <db:code role="parameter">value</db:code> in the <db:code role="parameter">series</db:code> domain.</db:para>
</db:section>
<db:section xml:id="mapToValue-method">
<db:title>point mapToValue(point <db:emphasis>position</db:emphasis>, AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Returns the value in the <db:code role="parameter">series</db:code> domain that corresponds to the <db:code role="parameter">position</db:code> relative to the chart.</db:para>
</db:section>
<db:section xml:id="removeAllSeries-method">
<db:title>removeAllSeries()</db:title>
<db:para>Removes all series from the chart. All the series objects are also destroyed.</db:para>
</db:section>
<db:section xml:id="removeSeries-method">
<db:title>removeSeries(AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Removes the <db:code role="parameter">series</db:code> from the chart. The series object is also destroyed.</db:para>
</db:section>
<db:section xml:id="scrollDown-method">
<db:title>scrollDown(real <db:emphasis>pixels</db:emphasis>)</db:title>
<db:para>Scrolls down by <db:code role="parameter">pixels</db:code>. This is a convenience function that suits for example for key navigation.</db:para>
</db:section>
<db:section xml:id="scrollLeft-method">
<db:title>scrollLeft(real <db:emphasis>pixels</db:emphasis>)</db:title>
<db:para>Scrolls to left by <db:code role="parameter">pixels</db:code>. This is a convenience function that suits for example for key navigation.</db:para>
</db:section>
<db:section xml:id="scrollRight-method">
<db:title>scrollRight(real <db:emphasis>pixels</db:emphasis>)</db:title>
<db:para>Scrolls to right by <db:code role="parameter">pixels</db:code>. This is a convenience function that suits for example for key navigation.</db:para>
</db:section>
<db:section xml:id="scrollUp-method">
<db:title>scrollUp(real <db:emphasis>pixels</db:emphasis>)</db:title>
<db:para>Scrolls up by <db:code role="parameter">pixels</db:code>. This is a convenience function that suits for example for key navigation.</db:para>
</db:section>
<db:section xml:id="series-method">
<db:title>AbstractSeries series(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Returns the series with <db:code role="parameter">index</db:code> on the chart. This allows you to loop through the series of a chart together with the count property of the chart.</db:para>
</db:section>
<db:section xml:id="series-method-1">
<db:title>AbstractSeries series(string <db:emphasis>name</db:emphasis>)</db:title>
<db:para>Returns the first series on the chart with <db:code role="parameter">name</db:code>. If there is no series with that name, returns null.</db:para>
</db:section>
<db:section xml:id="setAxisX-method">
<db:title>setAxisX(AbstractAxis <db:emphasis>axis</db:emphasis>, AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Set the x-axis of the series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#axisX-method">axisX</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setAxisY-method">
<db:title>setAxisY(AbstractAxis <db:emphasis>axis</db:emphasis>, AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Set the y-axis of the series.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#axisY-method">axisY</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="zoom-method">
<db:title>zoom(real <db:emphasis>factor</db:emphasis>)</db:title>
<db:para>Zooms in by <db:code role="parameter">factor</db:code> on the center of the chart.</db:para>
<db:para>A factor over 1.0 zooms the view in and factor between 0.0 and 1.0 zooms out.</db:para>
</db:section>
<db:section xml:id="zoomIn-method">
<db:title>zoomIn()</db:title>
<db:para>Zooms in the view by a factor of two.</db:para>
</db:section>
<db:section xml:id="zoomIn-method-1">
<db:title>zoomIn(rect <db:emphasis>rectangle</db:emphasis>)</db:title>
<db:para>Zooms in the view to a maximum level at which <db:code role="parameter">rectangle</db:code> is still fully visible.</db:para>
<db:note>
<db:para>This is not supported for polar charts.</db:para>
</db:note>
</db:section>
<db:section xml:id="zoomOut-method">
<db:title>zoomOut()</db:title>
<db:para>Zooms out the view by a factor of two.</db:para>
</db:section>
<db:section xml:id="zoomReset-method">
<db:title>zoomReset()</db:title>
<db:para>Resets the series domains to what they were before any zoom method was called. Note that this will also reset any scrolls and explicit axis range settings done between the first zoom operation and calling this method. If no zoom operation has been done, this method does nothing.</db:para>
</db:section>
</db:section>
</db:article>
