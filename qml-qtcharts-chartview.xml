<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ChartView QML Type</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Manages the graphical representation of the chart's series, legends, and axes.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtCharts 2.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtcharts-polarchartview.xml" xlink:role="">PolarChartView</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link> type displays different series types as charts.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_qmlpiechart.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The following QML code shows how to create a simple chart with one pie series:</db:para>
<db:programlisting language="qml">import QtQuick 2.0
import QtCharts 2.0

ChartView {
    width: 400
    height: 300
    theme: ChartView.ChartThemeBrownSand
    antialiasing: true

    PieSeries {
        id: pieSeries
        PieSlice { label: &quot;eaten&quot;; value: 94.9 }
        PieSlice { label: &quot;not yet eaten&quot;; value: 5.1 }
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="animationDuration-prop">
<db:title>animationDuration : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>animationDuration</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The duration of the animation for the chart.</db:para>
</db:section>
<db:section xml:id="animationEasingCurve-prop">
<db:title>animationEasingCurve : easing</db:title>
<db:fieldsynopsis>
<db:type>easing</db:type>
<db:varname>animationEasingCurve</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The easing curve of the animation for the chart.</db:para>
</db:section>
<db:section xml:id="animationOptions-prop">
<db:title>animationOptions : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>animationOptions</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The animations enabled in the chart:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>ChartView.NoAnimation</db:para>
</db:td>
<db:td>
<db:para>Animation is disabled in the chart. This is the default value.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.GridAxisAnimations</db:para>
</db:td>
<db:td>
<db:para>Grid axis animation is enabled in the chart.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.SeriesAnimations</db:para>
</db:td>
<db:td>
<db:para>Series animation is enabled in the chart.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.AllAnimations</db:para>
</db:td>
<db:td>
<db:para>All animation types are enabled in the chart.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="axes-prop">
<db:title>axes : list&lt;AbstractAxis&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;AbstractAxis&gt;</db:type>
<db:varname>axes</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The axes of the chart.</db:para>
</db:section>
<db:section xml:id="backgroundColor-prop">
<db:title>backgroundColor : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>backgroundColor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The color of the chart's background. By default, the background color is specified by the chart theme.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#theme-prop">theme</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="backgroundRoundness-prop">
<db:title>backgroundRoundness : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>backgroundRoundness</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The diameter of the rounding circle at the corners of the chart background.</db:para>
</db:section>
<db:section xml:id="count-prop">
<db:title>count : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>count</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The number of series added to the chart.</db:para>
</db:section>
<db:section xml:id="dropShadowEnabled-prop">
<db:title>dropShadowEnabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>dropShadowEnabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Whether the background drop shadow effect is enabled.</db:para>
<db:para>If set to <db:code>true</db:code>, the background drop shadow effect is enabled. If set to <db:code>false</db:code>, it is disabled.</db:para>
</db:section>
<db:section xml:id="legend-prop">
<db:title>legend : Legend</db:title>
<db:fieldsynopsis>
<db:type>Legend</db:type>
<db:varname>legend</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The legend of the chart. The legend lists all the series, pie slices, and bar sets added to the chart.</db:para>
</db:section>
<db:section xml:id="locale-prop">
<db:title>[since QtCharts 2.0] locale : locale</db:title>
<db:fieldsynopsis>
<db:type>locale</db:type>
<db:varname>locale</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The locale used to format various chart labels.</db:para>
<db:para>Labels are localized only when <db:link xlink:href="qml-qtcharts-chartview.xml#localizeNumbers-prop">localizeNumbers</db:link> is <db:code>true</db:code>, except for <db:link xlink:href="qml-qtcharts-datetimeaxis.xml">DateTimeAxis</db:link> labels, which always use the <db:link xlink:href="qlocale.xml">QLocale</db:link> set with this property.</db:para>
<db:para>Defaults to the application default locale at the time when the chart is constructed.</db:para>
<db:para>This property was introduced in QtCharts 2.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#localizeNumbers-prop">localizeNumbers</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="localizeNumbers-prop">
<db:title>[since QtCharts 2.0] localizeNumbers : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>localizeNumbers</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Whether numbers are localized.</db:para>
<db:para>When <db:code>true</db:code>, all generated numbers appearing in various series and axis labels will be localized using the <db:link xlink:href="qlocale.xml">QLocale</db:link> set with the <db:link xlink:href="qml-qtcharts-chartview.xml#locale-prop">locale</db:link> property. When <db:code>false</db:code>, the <db:emphasis>C</db:emphasis> locale is always used. Defaults to <db:code>false</db:code>.</db:para>
<db:note>
<db:para>This property does not affect <db:link xlink:href="qml-qtcharts-datetimeaxis.xml">DateTimeAxis</db:link> labels, which always use the <db:link xlink:href="qlocale.xml">QLocale</db:link> set with the locale property.</db:para>
</db:note>
<db:para>This property was introduced in QtCharts 2.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#locale-prop">locale</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="margins-prop">
<db:title>margins : Margins</db:title>
<db:fieldsynopsis>
<db:type>Margins</db:type>
<db:varname>margins</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The minimum margins allowed between the edge of the chart rectangle and the plot area. The margins are used for drawing the title, axes, and legend.</db:para>
</db:section>
<db:section xml:id="plotArea-prop">
<db:title>plotArea : rect</db:title>
<db:fieldsynopsis>
<db:type>rect</db:type>
<db:varname>plotArea</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The rectangle within which the chart is drawn.</db:para>
<db:para>The plot area does not include the area defined by margins. By default this will resize if inside a <db:link xlink:href="qml-qtcharts-chartview.xml">ChartView</db:link>. If an explicit rectangle is set for the plot area then it will respect this, to revert back to the default behavior, then setting it to <db:code>Qt.rect(0, 0, 0, 0)</db:code> will achieve this.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#margins-prop">margins</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="plotAreaColor-prop">
<db:title>plotAreaColor : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>plotAreaColor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The color of the background of the chart's plot area. By default, the plot area background uses the chart's background color, which is specified by the chart theme.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#backgroundColor-prop">backgroundColor</db:link></db:member>
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#theme-prop">theme</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="theme-prop">
<db:title>theme : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>theme</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The theme used by the chart.</db:para>
<db:para>A theme is a built-in collection of UI style related settings applied to all the visual elements of a chart, such as colors, pens, brushes, and fonts of series, as well as axes, title, and legend. The <db:link xlink:href="qtcharts-qmloscilloscope-example.xml">Qml Oscilloscope</db:link> example illustrates how to set a theme.</db:para>
<db:note>
<db:para>Changing the theme will overwrite all customizations previously applied to the series.</db:para>
</db:note>
<db:para>The following values are supported:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>ChartView.ChartThemeLight</db:para>
</db:td>
<db:td>
<db:para>The light theme, which is the default theme.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.ChartThemeBlueCerulean</db:para>
</db:td>
<db:td>
<db:para>The cerulean blue theme.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.ChartThemeDark</db:para>
</db:td>
<db:td>
<db:para>The dark theme.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.ChartThemeBrownSand</db:para>
</db:td>
<db:td>
<db:para>The sand brown theme.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.ChartThemeBlueNcs</db:para>
</db:td>
<db:td>
<db:para>The natural color system (NCS) blue theme.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.ChartThemeHighContrast</db:para>
</db:td>
<db:td>
<db:para>The high contrast theme.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.ChartThemeBlueIcy</db:para>
</db:td>
<db:td>
<db:para>The icy blue theme.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.ChartThemeQt</db:para>
</db:td>
<db:td>
<db:para>The Qt theme.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="title-prop">
<db:title>title : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>title</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The title is shown as a headline on top of the chart. Chart titles support HTML formatting.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#titleColor-prop">titleColor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="titleColor-prop">
<db:title>titleColor : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>titleColor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The color of the title text.</db:para>
</db:section>
<db:section xml:id="titleFont-prop">
<db:title>titleFont : font</db:title>
<db:fieldsynopsis>
<db:type>font</db:type>
<db:varname>titleFont</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The title font of the chart.</db:para>
<db:para>For more information, see <db:link xlink:href="qml-font.xml">font</db:link>.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="seriesAdded-signal">
<db:title>seriesAdded(AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>This signal is emitted when the series <db:code role="parameter">series</db:code> is added to the chart.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onSeriesAdded</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="seriesRemoved-signal">
<db:title>seriesRemoved(AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>This signal is emitted when the series <db:code role="parameter">series</db:code> is removed from the chart. The series object becomes invalid when the signal handler completes.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onSeriesRemoved</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="axisX-method">
<db:title>Axis axisX(AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>The x-axis of the <db:code role="parameter">series</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#setAxisX-method">setAxisX</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axisY-method">
<db:title>Axis axisY(AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>The y-axis of the <db:code role="parameter">series</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#setAxisY-method">setAxisY</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="createSeries-method">
<db:title>AbstractSeries createSeries(enumeration <db:emphasis>type</db:emphasis>, string <db:emphasis>name</db:emphasis>, AbstractAxis <db:emphasis>axisX</db:emphasis>, AbstractAxis <db:emphasis>axisY</db:emphasis>)</db:title>
<db:para>Adds a series of the type <db:code role="parameter">type</db:code> to the chart with the name <db:code role="parameter">name</db:code> and, optionally, the axes <db:code role="parameter">axisX</db:code> and <db:code role="parameter">axisY</db:code>. For example:</db:para>
<db:programlisting language="cpp">// lineSeries is a LineSeries object that has already been added to the ChartView; re-use its axes
var myAxisX = chartView.axisX(lineSeries);
var myAxisY = chartView.axisY(lineSeries);
var scatter = chartView.createSeries(ChartView.SeriesTypeScatter, &quot;scatter series&quot;, myAxisX, myAxisY);
</db:programlisting>
<db:para>The following enumeration values can be used as values of <db:code role="parameter">type</db:code>:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>ChartView.SeriesTypeLine</db:para>
</db:td>
<db:td>
<db:para>A line series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.SeriesTypeArea</db:para>
</db:td>
<db:td>
<db:para>An area series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.SeriesTypeBar</db:para>
</db:td>
<db:td>
<db:para>A bar series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.SeriesTypeStackedBar</db:para>
</db:td>
<db:td>
<db:para>A stacked bar series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.SeriesTypePercentBar</db:para>
</db:td>
<db:td>
<db:para>A percent bar series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.SeriesTypeBoxPlot</db:para>
</db:td>
<db:td>
<db:para>A box plot series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.SeriesTypeCandlestick</db:para>
</db:td>
<db:td>
<db:para>A candlestick series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.SeriesTypePie</db:para>
</db:td>
<db:td>
<db:para>A pie series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.SeriesTypeScatter</db:para>
</db:td>
<db:td>
<db:para>A scatter series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.SeriesTypeSpline</db:para>
</db:td>
<db:td>
<db:para>A spline series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.SeriesTypeHorizontalBar</db:para>
</db:td>
<db:td>
<db:para>A horizontal bar series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.SeriesTypeHorizontalStackedBar</db:para>
</db:td>
<db:td>
<db:para>A horizontal stacked bar series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ChartView.SeriesTypeHorizontalPercentBar</db:para>
</db:td>
<db:td>
<db:para>A horizontal percent bar series.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="isZoomed-method">
<db:title>isZoomed()</db:title>
<db:para>Returns <db:code>true</db:code> if any series has a zoomed domain.</db:para>
</db:section>
<db:section xml:id="mapToPosition-method">
<db:title>point mapToPosition(point <db:emphasis>value</db:emphasis>, AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Returns the position in the chart of the value <db:code role="parameter">value</db:code> in the series <db:code role="parameter">series</db:code>.</db:para>
</db:section>
<db:section xml:id="mapToValue-method">
<db:title>point mapToValue(point <db:emphasis>position</db:emphasis>, AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Returns the value in the series <db:code role="parameter">series</db:code> located at the position <db:code role="parameter">position</db:code> in the chart.</db:para>
</db:section>
<db:section xml:id="removeAllSeries-method">
<db:title>removeAllSeries()</db:title>
<db:para>Removes all series from the chart and permanently deletes all the series objects.</db:para>
</db:section>
<db:section xml:id="removeSeries-method">
<db:title>removeSeries(AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Removes the series <db:code role="parameter">series</db:code> from the chart and permanently deletes the series object.</db:para>
</db:section>
<db:section xml:id="scrollDown-method">
<db:title>scrollDown(real <db:emphasis>pixels</db:emphasis>)</db:title>
<db:para>Scrolls down by the number of pixels specified by <db:code role="parameter">pixels</db:code>. This is a convenience method suitable for key navigation, for example.</db:para>
</db:section>
<db:section xml:id="scrollLeft-method">
<db:title>scrollLeft(real <db:emphasis>pixels</db:emphasis>)</db:title>
<db:para>Scrolls to left by the number of pixels specified by <db:code role="parameter">pixels</db:code>. This is a convenience method suitable for key navigation, for example.</db:para>
</db:section>
<db:section xml:id="scrollRight-method">
<db:title>scrollRight(real <db:emphasis>pixels</db:emphasis>)</db:title>
<db:para>Scrolls to right by by the number of pixels specified by <db:code role="parameter">pixels</db:code>. This is a convenience method suitable for key navigation, for example.</db:para>
</db:section>
<db:section xml:id="scrollUp-method">
<db:title>scrollUp(real <db:emphasis>pixels</db:emphasis>)</db:title>
<db:para>Scrolls up by the number of pixels specified by <db:code role="parameter">pixels</db:code>. This is a convenience method suitable for key navigation, for example.</db:para>
</db:section>
<db:section xml:id="series-method">
<db:title>AbstractSeries series(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Returns the series with the index <db:code role="parameter">index</db:code> on the chart. Together with the <db:link xlink:href="qml-qtcharts-chartview.xml#count-prop">count</db:link> property of the chart, this enables looping through the series of a chart.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#count-prop">count</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="series-method-1">
<db:title>AbstractSeries series(string <db:emphasis>name</db:emphasis>)</db:title>
<db:para>Returns the first series in the chart with the name <db:code role="parameter">name</db:code>. If there is no series with that name, returns null.</db:para>
</db:section>
<db:section xml:id="setAxisX-method">
<db:title>setAxisX(AbstractAxis <db:emphasis>axis</db:emphasis>, AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Sets the x-axis of the <db:code role="parameter">series</db:code> to <db:code role="parameter">axis</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#axisX-method">axisX</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setAxisY-method">
<db:title>setAxisY(AbstractAxis <db:emphasis>axis</db:emphasis>, AbstractSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Sets the y-axis of the <db:code role="parameter">series</db:code> to <db:code role="parameter">axis</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtcharts-chartview.xml#axisY-method">axisY</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="zoom-method">
<db:title>zoom(real <db:emphasis>factor</db:emphasis>)</db:title>
<db:para>Zooms into the chart by the custom factor <db:code role="parameter">factor</db:code>.</db:para>
<db:para>A factor over 1.0 zooms into the view in and a factor between 0.0 and 1.0 zooms out of it.</db:para>
</db:section>
<db:section xml:id="zoomIn-method">
<db:title>zoomIn()</db:title>
<db:para>Zooms into the view by a factor of two.</db:para>
</db:section>
<db:section xml:id="zoomIn-method-1">
<db:title>zoomIn(rect <db:emphasis>rectangle</db:emphasis>)</db:title>
<db:para>Zooms into the view to a maximum level at which the rectangle <db:code role="parameter">rectangle</db:code> is still fully visible.</db:para>
<db:note>
<db:para>This is not supported for polar charts.</db:para>
</db:note>
</db:section>
<db:section xml:id="zoomOut-method">
<db:title>zoomOut()</db:title>
<db:para>Zooms out of the view by a factor of two.</db:para>
<db:note>
<db:para>This will do nothing if the result would contain an invalid logarithmic axis range.</db:para>
</db:note>
</db:section>
<db:section xml:id="zoomReset-method">
<db:title>zoomReset()</db:title>
<db:para>Resets the series domains to what they were before any zoom method was called.</db:para>
<db:note>
<db:para>This will also reset scrolling and explicit axis range settings specified between the first zoom operation and calling this method. If no zoom operation has been performed, this method does nothing.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
