<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QNdefMessage Class</db:title>
<db:productname>QtNfc</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt NFC Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qndefmessage.xml">QNdefMessage</db:link> class provides an NFC NDEF message.</db:para>
<db:para>This class was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QNdefMessage</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Nfc)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Nfc)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += nfc</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qlist.xml" xlink:role="class">QList</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QNdefMessage is part of <db:simplelist><db:member>connectivity-nfc</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qndefmessage.xml">QNdefMessage</db:link> is a collection of 0 or more QNdefRecords. <db:link xlink:href="qndefmessage.xml">QNdefMessage</db:link> inherits from <db:link xlink:href="qlist.xml">QList</db:link>&lt;<db:link xlink:href="qndefrecord.xml">QNdefRecord</db:link>&gt; and therefore the standard <db:link xlink:href="qlist.xml">QList</db:link> functions can be used to manipulate the NDEF records in the message.</db:para>
<db:para>NDEF messages can be parsed from a byte array conforming to the NFC Data Exchange Format technical specification by using the <db:link xlink:href="qndefmessage.xml#fromByteArray">fromByteArray</db:link>() static function. Conversely QNdefMessages can be converted into a byte array with the <db:link xlink:href="qndefmessage.xml#toByteArray">toByteArray</db:link>() function.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QNdefMessage">
<db:title>[constexpr noexcept] QNdefMessage::QNdefMessage()</db:title>
<db:para>Constructs a new empty NDEF message.</db:para>
</db:section>
<db:section xml:id="QNdefMessage-1">
<db:title>QNdefMessage::QNdefMessage(const QList&lt;QNdefRecord&gt; &amp;<db:emphasis>records</db:emphasis>)</db:title>
<db:para>Constructs a new NDEF message that contains all of the records in <db:code role="parameter">records</db:code>.</db:para>
</db:section>
<db:section xml:id="QNdefMessage-3">
<db:title>[explicit] QNdefMessage::QNdefMessage(const QNdefRecord &amp;<db:emphasis>record</db:emphasis>)</db:title>
<db:para>Constructs a new NDEF message containing a single record <db:code role="parameter">record</db:code>.</db:para>
</db:section>
<db:section xml:id="QNdefMessage-2">
<db:title>[noexcept] QNdefMessage::QNdefMessage(const QNdefMessage &amp;<db:emphasis>message</db:emphasis>)</db:title>
<db:para>Constructs a new NDEF message that is a copy of <db:code role="parameter">message</db:code>.</db:para>
</db:section>
<db:section xml:id="fromByteArray">
<db:title>[static] QNdefMessage QNdefMessage::fromByteArray(const QByteArray &amp;<db:emphasis>message</db:emphasis>)</db:title>
<db:para>Returns an NDEF message parsed from the contents of <db:code role="parameter">message</db:code>.</db:para>
<db:para>The <db:code role="parameter">message</db:code> parameter is interpreted as the raw message format defined in the NFC Data Exchange Format technical specification.</db:para>
<db:para>If a parse error occurs an empty NDEF message is returned.</db:para>
</db:section>
<db:section xml:id="toByteArray">
<db:title>QByteArray QNdefMessage::toByteArray() const</db:title>
<db:para>Returns the NDEF message as a byte array.</db:para>
<db:para>The return value of this function conforms to the format defined in the NFC Data Exchange Format technical specification.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>[noexcept, since 6.2] QNdefMessage &amp;QNdefMessage::operator=(QNdefMessage &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Move assignment operator from <db:link xlink:href="qlist.xml">QList</db:link>&lt;<db:link xlink:href="qndefrecord.xml">QNdefRecord</db:link>&gt;. Moves the <db:code role="parameter">other</db:code> list of NDEF records to this NDEF record list.</db:para>
<db:para>After the operation, <db:code role="parameter">other</db:code> will be empty.</db:para>
<db:para>This function was introduced in Qt 6.2.</db:para>
</db:section>
<db:section xml:id="operator-eq-1">
<db:title>[noexcept, since 6.2] QNdefMessage &amp;QNdefMessage::operator=(const QNdefMessage &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Copy assignment operator from <db:link xlink:href="qlist.xml">QList</db:link>&lt;<db:link xlink:href="qndefrecord.xml">QNdefRecord</db:link>&gt;. Assigns the <db:code role="parameter">other</db:code> list of NDEF records to this NDEF record list.</db:para>
<db:para>After the operation, <db:code role="parameter">other</db:code> and <db:code>*this</db:code> will be equal.</db:para>
<db:para>This function was introduced in Qt 6.2.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QNdefMessage::operator==(const QNdefMessage &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns <db:code>true</db:code> if this NDEF message is equivalent to <db:code role="parameter">other</db:code>; otherwise returns <db:code>false</db:code>.</db:para>
<db:para>An empty message (i.e. <db:link xlink:href="qlist.xml#isEmpty">isEmpty</db:link>() returns <db:code>true</db:code>) is equivalent to a NDEF message containing a single record of type <db:link xlink:href="qndefrecord.xml#TypeNameFormat-enum">QNdefRecord::Empty</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
