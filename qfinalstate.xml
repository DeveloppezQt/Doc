<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QFinalState Class</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qfinalstate.xml">QFinalState</db:link> class provides a final state.</db:para>
<db:para>This class was introduced in Qt 4.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QFinalState</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstractstate.xml" xlink:role="class">QAbstractState</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QFinalState is part of <db:simplelist><db:member><db:link xlink:href="statemachine.xml">State Machine Classes</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A final state is used to communicate that (part of) a <db:link xlink:href="qstatemachine.xml">QStateMachine</db:link> has finished its work. When a final top-level state is entered, the state machine's <db:link xlink:href="qstate.xml#finished">finished</db:link>() signal is emitted. In general, when a final substate (a child of a <db:link xlink:href="qstate.xml">QState</db:link>) is entered, the parent state's <db:link xlink:href="qstate.xml#finished">finished</db:link>() signal is emitted. <db:link xlink:href="qfinalstate.xml">QFinalState</db:link> is part of <db:link xlink:href="statemachine-api.xml">The State Machine Framework</db:link>.</db:para>
<db:para>To use a final state, you create a <db:link xlink:href="qfinalstate.xml">QFinalState</db:link> object and add a transition to it from another state. Example:</db:para>
<db:programlisting language="cpp">QPushButton button;

QStateMachine machine;
QState *s1 = new QState();
QFinalState *s2 = new QFinalState();
s1-&gt;addTransition(&amp;button, SIGNAL(clicked()), s2);
machine.addState(s1);
machine.addState(s2);

QObject::connect(&amp;machine, SIGNAL(finished()), QApplication::instance(), SLOT(quit()));
machine.setInitialState(s1);
machine.start();
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstate.xml#finished">QState::finished</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QFinalState">
<db:title>QFinalState::QFinalState(QState *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a new <db:link xlink:href="qfinalstate.xml">QFinalState</db:link> object with the given <db:code role="parameter">parent</db:code> state.</db:para>
</db:section>
<db:section xml:id="dtor.QFinalState">
<db:title>[virtual noexcept] QFinalState::~QFinalState()</db:title>
<db:para>Destroys this final state.</db:para>
</db:section>
<db:section xml:id="event">
<db:title>[override virtual protected] bool QFinalState::event(QEvent *<db:emphasis>e</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractstate.xml#event" role="function">QAbstractState::event(QEvent *e)</db:link>.</db:para>
</db:section>
<db:section xml:id="onEntry">
<db:title>[override virtual protected] void QFinalState::onEntry(QEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractstate.xml#onEntry" role="function">QAbstractState::onEntry(QEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="onExit">
<db:title>[override virtual protected] void QFinalState::onExit(QEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractstate.xml#onExit" role="function">QAbstractState::onExit(QEvent *event)</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
