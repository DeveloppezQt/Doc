<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QEnvironmentLight Class</db:title>
<db:subtitle>Qt3DRender::QEnvironmentLight</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Encapsulate an environment light object in a Qt 3D scene.</db:para>
<db:para>This class was introduced in Qt 5.9.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QEnvironmentLight</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.9</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-environmentlight.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qcomponent.xml" xlink:role="class">Qt3DCore::QComponent</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qt3drender-qenvironmentlight.xml">QEnvironmentLight</db:link> uses cubemaps to implement image-based lighting (IBL), a technique often used in conjunction with physically-based rendering (PBR). The cubemaps are typically expected be based on high dynamic range (HDR) images, with a suitable OpenGL format (such as RGBA16F) that can handle the increased range of values.</db:para>
<db:para>There are a variety of tools that can be used to produce the cubemaps needed by <db:link xlink:href="qt3drender-qenvironmentlight.xml">QEnvironmentLight</db:link>. Some examples include</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="https://github.com/dariomanesku/cmftStudio">cmftStudio</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="https://github.com/derkreature/IBLBaker">IBLBaker</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="https://www.knaldtech.com/lys/">Lys</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para><db:link xlink:href="https://hdrihaven.com/hdris/">HDRI Haven</db:link> provides many CC0-licensed HDR images that can be used as source material for the above tools.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="irradiance-prop">
<db:title>irradiance : Qt3DRender::QAbstractTexture*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DRender::QAbstractTexture*</db:type>
<db:varname>irradiance</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">irradiance</db:synopsisinfo>
<db:synopsisinfo role="setter">setIrradiance</db:synopsisinfo>
<db:synopsisinfo role="notifier">irradianceChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current environment irradiance map texture.</db:para>
<db:para>By default, the environment irradiance texture is null.</db:para>
<db:note>
<db:para>The exact meaning and use of this property is up to the material implementation.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis role="bold">irradiance</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setIrradiance</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis>irradiance</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">irradianceChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis>environmentIrradiance</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="specular-prop">
<db:title>specular : Qt3DRender::QAbstractTexture*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DRender::QAbstractTexture*</db:type>
<db:varname>specular</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">specular</db:synopsisinfo>
<db:synopsisinfo role="setter">setSpecular</db:synopsisinfo>
<db:synopsisinfo role="notifier">specularChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current environment specular map texture.</db:para>
<db:para>By default, the environment specular texture is null.</db:para>
<db:note>
<db:para>The exact meaning and use of this property is up to the material implementation.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis role="bold">specular</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSpecular</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis>specular</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">specularChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis>environmentSpecular</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:article>
