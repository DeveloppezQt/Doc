<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Scene2D QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This type enables rendering qml into a texture, which then can be used as a part of 3D scene.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Scene2D 2.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In C++:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-quick-qscene2d.xml">QScene2D</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This object uses RenderControl to render the given Item into an offscreen surface, which is attached to a texture provided by the user. This allows the component to directly render into the texture without intermediate copy and the user to freely specify how the texture is used in the 3D scene.</db:para>
<db:para>The entities using the <db:link xlink:href="qml-qtquick-scene2d-scene2d.xml">Scene2D</db:link> can be associated with the type to enable interaction with the item; if an entity has an <db:link xlink:href="qml-qt3d-render-objectpicker.xml">ObjectPicker</db:link> component, the pick events from that picker are sent to the <db:link xlink:href="qml-qtquick-scene2d-scene2d.xml">Scene2D</db:link> and converted to mouse events and finally sent to the item.</db:para>
<db:note>
<db:para>Only mouse events are supported. The item does not support keyboard input.</db:para>
</db:note>
<db:para>Usage:</db:para>
<db:programlisting language="qml">Entity {
    id: sceneRoot

    // specify Scene2D inside the entity hierarchy
    Scene2D {
        // specify output
        output: RenderTargetOutput {
            attachmentPoint: RenderTargetOutput.Color0
            texture: Texture2D {
                id: textureId
                width: 1024
                height: 1024
                format: Texture.RGBA8_UNorm
            }
        }
        // specify entities
        entities: [entityId]

        // specify rendered content
        Rectangle {
            color: &quot;red&quot;
        }
    }

    Entity {
        id: entityId

        property Material material: TextureMaterial {
            texture: textureId
        }
        property ObjectPicker picker: ObjectPicker {
            hoverEnabled: true
            dragEnabled: true
        }
        ...

</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="entities-prop">
<db:title>entities : list&lt;Entity&gt;</db:title>
<db:para>Holds the list of entities which are associated with the <db:link xlink:href="qml-qtquick-scene2d-scene2d.xml">Scene2D</db:link> object. If the entities have <db:link xlink:href="qml-qt3d-render-objectpicker.xml">ObjectPicker</db:link>, the pick events from that entity are sent to <db:link xlink:href="qml-qtquick-scene2d-scene2d.xml">Scene2D</db:link> and converted to mouse events.</db:para>
</db:section>
<db:section xml:id="item-prop">
<db:title>item : Item</db:title>
<db:para>Holds the Item, which is rendered by <db:link xlink:href="qml-qtquick-scene2d-scene2d.xml">Scene2D</db:link> to the texture.</db:para>
</db:section>
<db:section xml:id="mouseEnabled-prop">
<db:title>mouseEnabled : bool</db:title>
<db:para>Holds whether mouse events are enabled for the rendered item. The mouse events are generated from object picking events of the entities added to the <db:link xlink:href="qml-qtquick-scene2d-scene2d.xml">Scene2D</db:link>. Mouse is enabled by default.</db:para>
<db:note>
<db:para>Events sent to items are delayed by one frame due to object picking happening in the backend.</db:para>
</db:note>
</db:section>
<db:section xml:id="output-prop">
<db:title>output : RenderTargetOutput</db:title>
<db:para>Holds the <db:link xlink:href="qml-qt3d-render-rendertargetoutput.xml">RenderTargetOutput</db:link>, which specifies where the <db:link xlink:href="qml-qtquick-scene2d-scene2d.xml">Scene2D</db:link> is rendering to.</db:para>
</db:section>
<db:section xml:id="renderPolicy-prop">
<db:title>renderPolicy : enumeration</db:title>
<db:para>Holds the render policy of this <db:link xlink:href="qml-qtquick-scene2d-scene2d.xml">Scene2D</db:link>.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Continuous The <db:link xlink:href="qml-qtquick-scene2d-scene2d.xml">Scene2D</db:link> is rendering continuously. This is the default render policy.</db:para>
</db:listitem>
<db:listitem>
<db:para>SingleShot The <db:link xlink:href="qml-qtquick-scene2d-scene2d.xml">Scene2D</db:link> renders to the texture only once after which the resources allocated for rendering are released.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:article>
