<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>KeyboardStyle QML Type</db:title>
<db:productname>QtVirtualKeyboard</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Virtual Keyboard</db:titleabbrev>
<db:abstract>
<db:para>Provides a styling interface for the Virtual Keyboard.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.VirtualKeyboard.Styles 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-qtobject.xml">QtObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>KeyboardStyle is part of <db:simplelist><db:member>qtvirtualkeyboard-styles-qml</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The style type provides the style definitions that are used by the <db:link xlink:href="qml-qtquick-virtualkeyboard-inputpanel.xml">InputPanel</db:link> to decorate the virtual keyboard.</db:para>
<db:para>The design size specifies the aspect ratio of the virtual keyboard. Styles are scalable according to <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keyboardstyle.xml#scaleHint-prop">scaleHint</db:link>, which is calculated from the keyboard's actual height and design height.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="alternateKeysListBackground-prop">
<db:title>alternateKeysListBackground : Component</db:title>
<db:para>Template for the alternative keys list background.</db:para>
</db:section>
<db:section xml:id="alternateKeysListBottomMargin-prop">
<db:title>alternateKeysListBottomMargin : real</db:title>
<db:para>Bottom margin for the alternate keys list panel.</db:para>
</db:section>
<db:section xml:id="alternateKeysListDelegate-prop">
<db:title>alternateKeysListDelegate : Component</db:title>
<db:para>Template for the alternative keys list item.</db:para>
<db:note>
<db:para>The delegate is used as <db:code>ListView.delegate</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="alternateKeysListHighlight-prop">
<db:title>alternateKeysListHighlight : Component</db:title>
<db:para>Template for the alternative keys list highlight.</db:para>
<db:note>
<db:para>The delegate is used as <db:code>ListView.highlight</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="alternateKeysListItemHeight-prop">
<db:title>alternateKeysListItemHeight : real</db:title>
<db:para>Height of the alternate keys list item.</db:para>
</db:section>
<db:section xml:id="alternateKeysListItemWidth-prop">
<db:title>alternateKeysListItemWidth : real</db:title>
<db:para>Width of the alternate keys list item.</db:para>
</db:section>
<db:section xml:id="alternateKeysListLeftMargin-prop">
<db:title>alternateKeysListLeftMargin : real</db:title>
<db:para>Left margin for the alternate keys list panel.</db:para>
</db:section>
<db:section xml:id="alternateKeysListRightMargin-prop">
<db:title>alternateKeysListRightMargin : real</db:title>
<db:para>Right margin for the alternate keys list panel.</db:para>
</db:section>
<db:section xml:id="alternateKeysListTopMargin-prop">
<db:title>alternateKeysListTopMargin : real</db:title>
<db:para>Top margin for the alternate keys list panel.</db:para>
</db:section>
<db:section xml:id="backspaceKeyPanel-prop">
<db:title>backspaceKeyPanel : Component</db:title>
<db:para>Template for the backspace key.</db:para>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keypanel.xml">KeyPanel</db:link> type.</db:para>
</db:note>
</db:section>
<db:section xml:id="characterPreviewDelegate-prop">
<db:title>characterPreviewDelegate : Component</db:title>
<db:para>Template for the character preview popup.</db:para>
<db:para>If the delegate contains the <db:code>text</db:code> property, the property is updated with the display text when the component becomes active.</db:para>
<db:programlisting language="cpp">property string text
</db:programlisting>
<db:para>Example:</db:para>
<db:programlisting language="cpp">characterPreviewDelegate: Item {
    property string text
    id: characterPreview
    Rectangle {
        id: characterPreviewBackground
        anchors.fill: parent
        ...
        Text {
            text: characterPreview.text
            anchors.fill: parent
            ...
        }
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="characterPreviewMargin-prop">
<db:title>characterPreviewMargin : real</db:title>
<db:para>Number of pixels between the top of each key and the bottom of the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keyboardstyle.xml#characterPreviewDelegate-prop">characterPreviewDelegate</db:link>.</db:para>
</db:section>
<db:section xml:id="enterKeyPanel-prop">
<db:title>enterKeyPanel : Component</db:title>
<db:para>Template for the enter key.</db:para>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keypanel.xml">KeyPanel</db:link> type.</db:para>
</db:note>
</db:section>
<db:section xml:id="handwritingKeyPanel-prop">
<db:title>handwritingKeyPanel : Component</db:title>
<db:para>Template for the handwriting mode key.</db:para>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keypanel.xml">KeyPanel</db:link> type.</db:para>
</db:note>
</db:section>
<db:section xml:id="hideKeyPanel-prop">
<db:title>hideKeyPanel : Component</db:title>
<db:para>Template for the hide key.</db:para>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keypanel.xml">KeyPanel</db:link> type.</db:para>
</db:note>
</db:section>
<db:section xml:id="keyPanel-prop">
<db:title>keyPanel : Component</db:title>
<db:para>Template for the regular keys.</db:para>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keypanel.xml">KeyPanel</db:link> type.</db:para>
</db:note>
<db:para>Example:</db:para>
<db:programlisting language="cpp">keyPanel: KeyPanel {
    Rectangle {
        anchors.fill: parent
        ...
        Text {
            anchors.fill: parent
            text: control.displayText
            ...
        }
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="keyboardBackground-prop">
<db:title>keyboardBackground : Component</db:title>
<db:para>Template for the keyboard background.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">keyboardBackground: Rectangle {
    color: &quot;black&quot;
}
</db:programlisting>
</db:section>
<db:section xml:id="keyboardDesignHeight-prop">
<db:title>keyboardDesignHeight : real</db:title>
<db:para>The design height of the keyboard.</db:para>
</db:section>
<db:section xml:id="keyboardDesignWidth-prop">
<db:title>keyboardDesignWidth : real</db:title>
<db:para>The design width of the keyboard.</db:para>
</db:section>
<db:section xml:id="keyboardHeight-prop">
<db:title>keyboardHeight : real</db:title>
<db:para>The current size of the keyboard.</db:para>
</db:section>
<db:section xml:id="keyboardRelativeBottomMargin-prop">
<db:title>keyboardRelativeBottomMargin : real</db:title>
<db:para>The distance between the bottom-most keys and the bottom edge of the keyboard container, expressed as a percentage (<db:code>0.0</db:code> - <db:code>1.0</db:code>) of the keyboard's height.</db:para>
</db:section>
<db:section xml:id="keyboardRelativeLeftMargin-prop">
<db:title>keyboardRelativeLeftMargin : real</db:title>
<db:para>The distance between the left-most keys and the left edge of the keyboard, expressed as a percentage (<db:code>0.0</db:code> - <db:code>1.0</db:code>) of the keyboard's width.</db:para>
</db:section>
<db:section xml:id="keyboardRelativeRightMargin-prop">
<db:title>keyboardRelativeRightMargin : real</db:title>
<db:para>The distance between the right-most keys and the right edge of the keyboard, expressed as a percentage (<db:code>0.0</db:code> - <db:code>1.0</db:code>) of the keyboard's width.</db:para>
<db:para>This value is proportional to the keyboard's width.</db:para>
</db:section>
<db:section xml:id="keyboardRelativeTopMargin-prop">
<db:title>keyboardRelativeTopMargin : real</db:title>
<db:para>The distance between the top-most keys and the top edge of the keyboard, expressed as a percentage (<db:code>0.0</db:code> - <db:code>1.0</db:code>) of the keyboard's height.</db:para>
</db:section>
<db:section xml:id="languageKeyPanel-prop">
<db:title>languageKeyPanel : Component</db:title>
<db:para>Template for the language key.</db:para>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keypanel.xml">KeyPanel</db:link> type.</db:para>
</db:note>
</db:section>
<db:section xml:id="modeKeyPanel-prop">
<db:title>modeKeyPanel : Component</db:title>
<db:para>Template for the generic mode key.</db:para>
<db:para>This template provides a visualization of the key in which the state can be on or off. This template is used in situations where the key label will remain the same regardless of status.</db:para>
<db:para>The current state is available in the <db:code>control.mode</db:code> property.</db:para>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keypanel.xml">KeyPanel</db:link> type.</db:para>
</db:note>
</db:section>
<db:section xml:id="navigationHighlight-prop">
<db:title>[since QtQuick.VirtualKeyboard.Styles 1.1] navigationHighlight : Component</db:title>
<db:para>Template for the navigation highlight item.</db:para>
<db:para>This item is used in <db:link xlink:href="qtvirtualkeyboard-build.xml#configuration-options">arrow-key-navigation</db:link> mode to highlight the navigation focus on the keyboard.</db:para>
<db:para>The item is typically a transparent rectangle with a high contrast border.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard.Styles 1.1.</db:para>
</db:section>
<db:section xml:id="popupListAdd-prop">
<db:title>[since QtQuick.VirtualKeyboard.Styles 2.1] popupListAdd : Transition</db:title>
<db:para>This property holds the transition to apply to items that are added to the popup list view.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard.Styles 2.1.</db:para>
</db:section>
<db:section xml:id="popupListBackground-prop">
<db:title>[since QtQuick.VirtualKeyboard.Styles 2.1] popupListBackground : Component</db:title>
<db:para>Template for the popup list background.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard.Styles 2.1.</db:para>
</db:section>
<db:section xml:id="popupListDelegate-prop">
<db:title>[since QtQuick.VirtualKeyboard.Styles 2.1] popupListDelegate : Component</db:title>
<db:para>Template for the popup list item.</db:para>
<db:note>
<db:para>The delegate is used as <db:code>ListView.delegate</db:code>.</db:para>
</db:note>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-selectionlistitem.xml">SelectionListItem</db:link> type.</db:para>
</db:note>
<db:para>The following properties are available to the item:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:code>display</db:code> Display text for the current item.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>wordCompletionLength</db:code> Word completion length measured from the end of the display text.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>This property was introduced in QtQuick.VirtualKeyboard.Styles 2.1.</db:para>
</db:section>
<db:section xml:id="popupListHighlight-prop">
<db:title>[since QtQuick.VirtualKeyboard.Styles 2.1] popupListHighlight : Component</db:title>
<db:para>Template for the popup list highlight.</db:para>
<db:note>
<db:para>The delegate is used as <db:code>ListView.highlight</db:code>.</db:para>
</db:note>
<db:para>This property was introduced in QtQuick.VirtualKeyboard.Styles 2.1.</db:para>
</db:section>
<db:section xml:id="popupListRemove-prop">
<db:title>[since QtQuick.VirtualKeyboard.Styles 2.1] popupListRemove : Transition</db:title>
<db:para>This property holds the transition to apply to items that are removed from the popup list view.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard.Styles 2.1.</db:para>
</db:section>
<db:section xml:id="scaleHint-prop">
<db:title>[read-only] scaleHint : real</db:title>
<db:para>The keyboard style scale hint. This value is determined by the physical size and the design size of the keyboard. All pixel dimensions must be proportional to this value.</db:para>
</db:section>
<db:section xml:id="selectionHandle-prop">
<db:title>[since QtQuick.VirtualKeyboard.Styles 2.1] selectionHandle : Component</db:title>
<db:para>This item is used to indicate where the bounds of the text selection is and to be able to interactively move the start or end of the selection. The same item is used for both start and end selection.</db:para>
<db:para>Selection handles are currently only supported for the <db:link xlink:href="qtvirtualkeyboard-deployment-guide.xml#integration-method">application-based integration method</db:link>.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard.Styles 2.1.</db:para>
</db:section>
<db:section xml:id="selectionListAdd-prop">
<db:title>[since QtQuick.VirtualKeyboard.Styles 1.3] selectionListAdd : Transition</db:title>
<db:para>This property holds the transition to apply to items that are added to the selection list view.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard.Styles 1.3.</db:para>
</db:section>
<db:section xml:id="selectionListBackground-prop">
<db:title>selectionListBackground : Component</db:title>
<db:para>Template for the selection list background.</db:para>
</db:section>
<db:section xml:id="selectionListDelegate-prop">
<db:title>selectionListDelegate : Component</db:title>
<db:para>Template for the selection list item.</db:para>
<db:note>
<db:para>The delegate is used as <db:code>ListView.delegate</db:code>.</db:para>
</db:note>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-selectionlistitem.xml">SelectionListItem</db:link> type.</db:para>
</db:note>
<db:para>The following properties are available to the item:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:code>display</db:code> Display text for the current item.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>wordCompletionLength</db:code> Word completion length measured from the end of the display text.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="selectionListHeight-prop">
<db:title>selectionListHeight : real</db:title>
<db:para>Selection list height.</db:para>
</db:section>
<db:section xml:id="selectionListHighlight-prop">
<db:title>selectionListHighlight : Component</db:title>
<db:para>Template for the selection list highlight.</db:para>
<db:note>
<db:para>The delegate is used as <db:code>ListView.highlight</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="selectionListRemove-prop">
<db:title>[since QtQuick.VirtualKeyboard.Styles 1.3] selectionListRemove : Transition</db:title>
<db:para>This property holds the transition to apply to items that are removed from the selection list view.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard.Styles 1.3.</db:para>
</db:section>
<db:section xml:id="shiftKeyPanel-prop">
<db:title>shiftKeyPanel : Component</db:title>
<db:para>Template for the shift key.</db:para>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keypanel.xml">KeyPanel</db:link> type.</db:para>
</db:note>
</db:section>
<db:section xml:id="spaceKeyPanel-prop">
<db:title>spaceKeyPanel : Component</db:title>
<db:para>Template for the space key.</db:para>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keypanel.xml">KeyPanel</db:link> type.</db:para>
</db:note>
</db:section>
<db:section xml:id="symbolKeyPanel-prop">
<db:title>symbolKeyPanel : Component</db:title>
<db:para>Template for the symbol mode key.</db:para>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keypanel.xml">KeyPanel</db:link> type.</db:para>
</db:note>
</db:section>
<db:section xml:id="traceCanvasDelegate-prop">
<db:title>[since QtQuick.VirtualKeyboard.Styles 2.1] traceCanvasDelegate : Component</db:title>
<db:para>Template for rendering a Trace object.</db:para>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-tracecanvas.xml">TraceCanvas</db:link> type.</db:para>
</db:note>
<db:para>This property was introduced in QtQuick.VirtualKeyboard.Styles 2.1.</db:para>
</db:section>
<db:section xml:id="traceInputKeyPanelDelegate-prop">
<db:title>[since QtQuick.VirtualKeyboard.Styles 2.1] traceInputKeyPanelDelegate : Component</db:title>
<db:para>Template for the trace input key.</db:para>
<db:note>
<db:para>The delegate must be based on the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-traceinputkeypanel.xml">TraceInputKeyPanel</db:link> type.</db:para>
</db:note>
<db:para>This property was introduced in QtQuick.VirtualKeyboard.Styles 2.1.</db:para>
</db:section>
</db:section>
</db:article>
