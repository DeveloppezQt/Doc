<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>WrappedEvent Class</db:title>
<db:subtitle>QStateMachine::WrappedEvent</db:subtitle>
<db:productname>QtStateMachine</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt State Machine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qstatemachine-wrappedevent.xml">WrappedEvent</db:link> class inherits <db:link xlink:href="qevent.xml">QEvent</db:link> and holds a clone of an event associated with a <db:link xlink:href="qobject.xml">QObject</db:link>.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>WrappedEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS StateMachine)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::StateMachine)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += statemachine</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qevent.xml" xlink:role="class">QEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>WrappedEvent is part of <db:simplelist><db:member>statemachine</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A wrapped event is generated by a <db:link xlink:href="qstatemachine.xml">QStateMachine</db:link> in response to a Qt event. The <db:link xlink:href="qeventtransition.xml">QEventTransition</db:link> class provides a transition associated with a such an event. <db:link xlink:href="qstatemachine-wrappedevent.xml">QStateMachine::WrappedEvent</db:link> is part of <db:link xlink:href="qtstatemachine-overview.xml">Qt State Machine Overview</db:link>.</db:para>
<db:para>The <db:link xlink:href="qstatemachine-wrappedevent.xml#object">object</db:link>() function returns the object that generated the event. The <db:link xlink:href="qstatemachine-wrappedevent.xml#event">event</db:link>() function returns a clone of the original event.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qeventtransition.xml">QEventTransition</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="dtor.WrappedEvent">
<db:title>[virtual] WrappedEvent::~WrappedEvent()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~WrappedEvent</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~WrappedEvent()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys this <db:link xlink:href="qstatemachine-wrappedevent.xml">WrappedEvent</db:link>.</db:para>
</db:section>
<db:section xml:id="event">
<db:title>QEvent *WrappedEvent::event() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QEvent *</db:type>
<db:methodname>event</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QEvent * event() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a clone of the original event.</db:para>
</db:section>
<db:section xml:id="object">
<db:title>QObject *WrappedEvent::object() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QObject *</db:type>
<db:methodname>object</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QObject * object() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the object that the event is associated with.</db:para>
</db:section>
</db:section>
</db:article>
