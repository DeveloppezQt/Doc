<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt 3D Extras C++ Classes</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Qt 3D Extras module provides a set of prebuilt elements to help you get started with Qt 3D.</db:para>
<db:para><db:emphasis role="bold">This module is under development and is subject to change.</db:emphasis></db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt 3D Extras module provides a set of prebuilt elements to help you get started with Qt 3D.</db:para>
<db:para><db:emphasis role="bold">This module is under development and is subject to change.</db:emphasis></db:para>
<db:section xml:id="namespaces">
<db:title>Namespaces</db:title>
<db:variablelist role="namespaces">
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras.xml" xlink:role="namespace">Qt3DExtras</db:link></db:term>
<db:listitem>
<db:para>Contains classes from the Qt3DExtras module.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qabstractcameracontroller.xml" xlink:role="class">Qt3DExtras::QAbstractCameraController</db:link></db:term>
<db:listitem>
<db:para>The QAbstractCameraController class provides basic functionality for camera controllers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qconegeometry.xml" xlink:role="class">Qt3DExtras::QConeGeometry</db:link></db:term>
<db:listitem>
<db:para>The QConeGeometry class allows creation of a cone in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qconegeometryview.xml" xlink:role="class">Qt3DExtras::QConeGeometryView</db:link></db:term>
<db:listitem>
<db:para>A conical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qconemesh.xml" xlink:role="class">Qt3DExtras::QConeMesh</db:link></db:term>
<db:listitem>
<db:para>A conical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qcuboidgeometry.xml" xlink:role="class">Qt3DExtras::QCuboidGeometry</db:link></db:term>
<db:listitem>
<db:para>The QCuboidGeometry class allows creation of a cuboid in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qcuboidgeometryview.xml" xlink:role="class">Qt3DExtras::QCuboidGeometryView</db:link></db:term>
<db:listitem>
<db:para>A cuboid mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qcuboidmesh.xml" xlink:role="class">Qt3DExtras::QCuboidMesh</db:link></db:term>
<db:listitem>
<db:para>A cuboid mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qcylindergeometry.xml" xlink:role="class">Qt3DExtras::QCylinderGeometry</db:link></db:term>
<db:listitem>
<db:para>The QCylinderGeometry class allows creation of a cylinder in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qcylindergeometryview.xml" xlink:role="class">Qt3DExtras::QCylinderGeometryView</db:link></db:term>
<db:listitem>
<db:para>A cylindrical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qcylindermesh.xml" xlink:role="class">Qt3DExtras::QCylinderMesh</db:link></db:term>
<db:listitem>
<db:para>A cylindrical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml" xlink:role="class">Qt3DExtras::QDiffuseSpecularMaterial</db:link></db:term>
<db:listitem>
<db:para>The QDiffuseSpecularMaterial class provides a default implementation of the phong lighting effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qextrudedtextgeometry.xml" xlink:role="class">Qt3DExtras::QExtrudedTextGeometry</db:link></db:term>
<db:listitem>
<db:para>The QExtrudedTextGeometry class allows creation of a 3D extruded text in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qextrudedtextmesh.xml" xlink:role="class">Qt3DExtras::QExtrudedTextMesh</db:link></db:term>
<db:listitem>
<db:para>A 3D extruded Text mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qfirstpersoncameracontroller.xml" xlink:role="class">Qt3DExtras::QFirstPersonCameraController</db:link></db:term>
<db:listitem>
<db:para>The QFirstPersonCameraController class allows controlling the scene camera from the first person perspective.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qforwardrenderer.xml" xlink:role="class">Qt3DExtras::QForwardRenderer</db:link></db:term>
<db:listitem>
<db:para>The QForwardRenderer provides a default FrameGraph implementation of a forward renderer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qgoochmaterial.xml" xlink:role="class">Qt3DExtras::QGoochMaterial</db:link></db:term>
<db:listitem>
<db:para>The QGoochMaterial provides a material that implements the Gooch shading model, popular in CAD and CAM applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qmetalroughmaterial.xml" xlink:role="class">Qt3DExtras::QMetalRoughMaterial</db:link></db:term>
<db:listitem>
<db:para>The QMetalRoughMaterial provides a default implementation of PBR lighting.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qmorphphongmaterial.xml" xlink:role="class">Qt3DExtras::QMorphPhongMaterial</db:link></db:term>
<db:listitem>
<db:para>The QMorphPhongMaterial class provides a default implementation of the phong lighting effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qorbitcameracontroller.xml" xlink:role="class">Qt3DExtras::QOrbitCameraController</db:link></db:term>
<db:listitem>
<db:para>The QOrbitCameraController class allows controlling the scene camera along orbital path.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qpervertexcolormaterial.xml" xlink:role="class">Qt3DExtras::QPerVertexColorMaterial</db:link></db:term>
<db:listitem>
<db:para>The QPerVertexColorMaterial class provides a default implementation for rendering the color properties set for each vertex.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qplanegeometry.xml" xlink:role="class">Qt3DExtras::QPlaneGeometry</db:link></db:term>
<db:listitem>
<db:para>The QPlaneGeometry class allows creation of a plane in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qplanegeometryview.xml" xlink:role="class">Qt3DExtras::QPlaneGeometryView</db:link></db:term>
<db:listitem>
<db:para>A square planar mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qplanemesh.xml" xlink:role="class">Qt3DExtras::QPlaneMesh</db:link></db:term>
<db:listitem>
<db:para>A square planar mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qskyboxentity.xml" xlink:role="class">Qt3DExtras::QSkyboxEntity</db:link></db:term>
<db:listitem>
<db:para>Qt3DExtras::QSkyboxEntity is a convenience Qt3DCore::QEntity subclass that can be used to insert a skybox in a 3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qspheregeometry.xml" xlink:role="class">Qt3DExtras::QSphereGeometry</db:link></db:term>
<db:listitem>
<db:para>The QSphereGeometry class allows creation of a sphere in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qspheregeometryview.xml" xlink:role="class">Qt3DExtras::QSphereGeometryView</db:link></db:term>
<db:listitem>
<db:para>A spherical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qspheremesh.xml" xlink:role="class">Qt3DExtras::QSphereMesh</db:link></db:term>
<db:listitem>
<db:para>A spherical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qtext2dentity.xml" xlink:role="class">Qt3DExtras::QText2DEntity</db:link></db:term>
<db:listitem>
<db:para>QText2DEntity allows creation of a 2D text in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qtexturematerial.xml" xlink:role="class">Qt3DExtras::QTextureMaterial</db:link></db:term>
<db:listitem>
<db:para>The QTextureMaterial provides a default implementation of a simple unlit texture material.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qtorusgeometry.xml" xlink:role="class">Qt3DExtras::QTorusGeometry</db:link></db:term>
<db:listitem>
<db:para>The QTorusGeometry class allows creation of a torus in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qtorusgeometryview.xml" xlink:role="class">Qt3DExtras::QTorusGeometryView</db:link></db:term>
<db:listitem>
<db:para>A toroidal mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qtorusmesh.xml" xlink:role="class">Qt3DExtras::QTorusMesh</db:link></db:term>
<db:listitem>
<db:para>A toroidal mesh.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This module is still in development but is available as a technology preview. This means it is unstable, likely to change and provided as a convenience only.</db:para>
<db:programlisting language="cpp">#include &amp;lt;Qt3DExtras&amp;gt;
</db:programlisting>
<db:para>To link against the corresponding C++ library, add the following to your qmake project file:</db:para>
<db:programlisting language="cpp" role="bad">QT += 3dextras
</db:programlisting>
<db:para>Classes, types, and functions are declared under the <db:link xlink:href="qt3dextras-module.xml">Qt3DExtras</db:link> namespace.</db:para>
<db:section xml:id="overview">
<db:title>Overview</db:title>
<db:section xml:id="materials">
<db:title>Materials</db:title>
<db:variablelist role="qt3d-extras-materials">
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml" xlink:role="class">Qt3DExtras::QDiffuseSpecularMaterial</db:link></db:term>
<db:listitem>
<db:para>The QDiffuseSpecularMaterial class provides a default implementation of the phong lighting effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qgoochmaterial.xml" xlink:role="class">Qt3DExtras::QGoochMaterial</db:link></db:term>
<db:listitem>
<db:para>The QGoochMaterial provides a material that implements the Gooch shading model, popular in CAD and CAM applications.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qmetalroughmaterial.xml" xlink:role="class">Qt3DExtras::QMetalRoughMaterial</db:link></db:term>
<db:listitem>
<db:para>The QMetalRoughMaterial provides a default implementation of PBR lighting.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qmorphphongmaterial.xml" xlink:role="class">Qt3DExtras::QMorphPhongMaterial</db:link></db:term>
<db:listitem>
<db:para>The QMorphPhongMaterial class provides a default implementation of the phong lighting effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qpervertexcolormaterial.xml" xlink:role="class">Qt3DExtras::QPerVertexColorMaterial</db:link></db:term>
<db:listitem>
<db:para>The QPerVertexColorMaterial class provides a default implementation for rendering the color properties set for each vertex.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qtexturematerial.xml" xlink:role="class">Qt3DExtras::QTextureMaterial</db:link></db:term>
<db:listitem>
<db:para>The QTextureMaterial provides a default implementation of a simple unlit texture material.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="meshes-and-geometries">
<db:title>Meshes and Geometries</db:title>
<db:variablelist role="qt3d-extras-geometries">
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qconegeometry.xml" xlink:role="class">Qt3DExtras::QConeGeometry</db:link></db:term>
<db:listitem>
<db:para>The QConeGeometry class allows creation of a cone in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qconegeometryview.xml" xlink:role="class">Qt3DExtras::QConeGeometryView</db:link></db:term>
<db:listitem>
<db:para>A conical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qconemesh.xml" xlink:role="class">Qt3DExtras::QConeMesh</db:link></db:term>
<db:listitem>
<db:para>A conical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qcuboidgeometry.xml" xlink:role="class">Qt3DExtras::QCuboidGeometry</db:link></db:term>
<db:listitem>
<db:para>The QCuboidGeometry class allows creation of a cuboid in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qcuboidgeometryview.xml" xlink:role="class">Qt3DExtras::QCuboidGeometryView</db:link></db:term>
<db:listitem>
<db:para>A cuboid mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qcuboidmesh.xml" xlink:role="class">Qt3DExtras::QCuboidMesh</db:link></db:term>
<db:listitem>
<db:para>A cuboid mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qcylindergeometry.xml" xlink:role="class">Qt3DExtras::QCylinderGeometry</db:link></db:term>
<db:listitem>
<db:para>The QCylinderGeometry class allows creation of a cylinder in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qcylindergeometryview.xml" xlink:role="class">Qt3DExtras::QCylinderGeometryView</db:link></db:term>
<db:listitem>
<db:para>A cylindrical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qcylindermesh.xml" xlink:role="class">Qt3DExtras::QCylinderMesh</db:link></db:term>
<db:listitem>
<db:para>A cylindrical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qplanegeometry.xml" xlink:role="class">Qt3DExtras::QPlaneGeometry</db:link></db:term>
<db:listitem>
<db:para>The QPlaneGeometry class allows creation of a plane in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qplanegeometryview.xml" xlink:role="class">Qt3DExtras::QPlaneGeometryView</db:link></db:term>
<db:listitem>
<db:para>A square planar mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qplanemesh.xml" xlink:role="class">Qt3DExtras::QPlaneMesh</db:link></db:term>
<db:listitem>
<db:para>A square planar mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qspheregeometry.xml" xlink:role="class">Qt3DExtras::QSphereGeometry</db:link></db:term>
<db:listitem>
<db:para>The QSphereGeometry class allows creation of a sphere in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qspheregeometryview.xml" xlink:role="class">Qt3DExtras::QSphereGeometryView</db:link></db:term>
<db:listitem>
<db:para>A spherical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qspheremesh.xml" xlink:role="class">Qt3DExtras::QSphereMesh</db:link></db:term>
<db:listitem>
<db:para>A spherical mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qtorusgeometry.xml" xlink:role="class">Qt3DExtras::QTorusGeometry</db:link></db:term>
<db:listitem>
<db:para>The QTorusGeometry class allows creation of a torus in 3D space.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qtorusgeometryview.xml" xlink:role="class">Qt3DExtras::QTorusGeometryView</db:link></db:term>
<db:listitem>
<db:para>A toroidal mesh.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qtorusmesh.xml" xlink:role="class">Qt3DExtras::QTorusMesh</db:link></db:term>
<db:listitem>
<db:para>A toroidal mesh.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="camera-controllers">
<db:title>Camera Controllers</db:title>
<db:variablelist role="qt3d-extras-cameracontrollers">
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qfirstpersoncameracontroller.xml" xlink:role="class">Qt3DExtras::QFirstPersonCameraController</db:link></db:term>
<db:listitem>
<db:para>The QFirstPersonCameraController class allows controlling the scene camera from the first person perspective.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-qorbitcameracontroller.xml" xlink:role="class">Qt3DExtras::QOrbitCameraController</db:link></db:term>
<db:listitem>
<db:para>The QOrbitCameraController class allows controlling the scene camera along orbital path.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="entities">
<db:title>Entities</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qt3dextras-qskyboxentity.xml">Qt3DExtras::QSkyboxEntity</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="framegraphs">
<db:title>FrameGraphs</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qt3dextras-qforwardrenderer.xml">Qt3DExtras::QForwardRenderer</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="window">
<db:title>Window</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>Qt3DExtras::Qt3DWindow</db:para>
</db:listitem>
</db:itemizedlist>
<db:note>
<db:para>The Quick3DExtras module also specifies a Qt3DExtras::Quick::Qt3DQuickWindow.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="reference">
<db:title>Reference</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qt3dextras-module.xml">Qt 3D Extras C++ Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt3d-examples.xml">Qt 3D Examples</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:article>
