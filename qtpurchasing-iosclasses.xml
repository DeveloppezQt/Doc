<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Demo iOS Classes</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>IOS classes are used in the purchasing demo to enable purchasing in iOS.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtpurchasing-iosclasses.xml#iosinapppurchaseproduct">IosInAppPurchaseProduct</db:link></db:para>
</db:td>
<db:td>
<db:para>A product registered in the store.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtpurchasing-iosclasses.xml#iosinapppurchasetransaction">IosInAppPurchaseTransaction</db:link></db:para>
</db:td>
<db:td>
<db:para>Contains information about a transaction in the external app store.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtpurchasing-iosclasses.xml#iosinapppurchasebackend">IosInAppPurchaseBackend</db:link></db:para>
</db:td>
<db:td>
<db:para>Comminucates with external store.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Check out <db:link xlink:href="qtpurchasing-baseclasses.xml">Base Classes</db:link> which include InAppProduct, InAppStore, InAppTransaction and InAppPurchaseBackend</db:para>
</db:section>
<db:section xml:id="iosinapppurchaseproduct">
<db:title>IosInAppPurchaseProduct</db:title>
<db:para>IosInAppPurchaseProduct adds purchase() for initializing purchasing process.</db:para>
</db:section>
<db:section xml:id="iosinapppurchasetransaction">
<db:title>IosInAppPurchaseTransaction</db:title>
<db:para>IosInAppPurchaseTransaction adds new parameters and return types. Transaction error handling is implemented on IosInAppPurchaseTransaction's constructor. The class has the finalize() function that finalizes the transaction.</db:para>
</db:section>
<db:section xml:id="iosinapppurchasebackend">
<db:title>IosInAppPurchaseBackend</db:title>
<db:para>IosInAppPurchaseBackend uses <db:emphasis role="bold">Objective-C</db:emphasis> language to communicate with the App Store.</db:para>
<db:section xml:id="initializing-the-products">
<db:title>Initializing the products</db:title>
<db:para>This class shows the product's information on the store page.</db:para>
<db:orderedlist numeration="arabic">
<db:listitem>
<db:para>IosInAppPurchaseBackend is called from InAppStore::setupBackend().</db:para>
</db:listitem>
<db:listitem>
<db:para>At initialization IosInAppPurchaseBackend creates InAppPurchaseManager with Objective-C.</db:para>
</db:listitem>
<db:listitem>
<db:para>InAppStore::registerProduct(productType, &amp;identifier) function is called and queryProduct() is executed in the back end.</db:para>
</db:listitem>
<db:listitem>
<db:para>Objective-C function requestProductData:() is called and will make <db:link xlink:href="https://developer.apple.com/documentation/storekit/skproductsrequest">SKProductRequest</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>After SKProductRequest is finished and product objects has been created in Objective-C productsRequest:(), products will be registered by the IosInAppPurchaseBackend::registerProduct() function.</db:para>
</db:listitem>
<db:listitem>
<db:para>Signal productQueryDone() will be emitted and the item's information will be visible on the application's store page.</db:para>
</db:listitem>
</db:orderedlist>
</db:section>
<db:section xml:id="purchasing-process">
<db:title>Purchasing process</db:title>
<db:orderedlist numeration="arabic">
<db:listitem>
<db:para>The user presses one of the products on the applications store page.</db:para>
</db:listitem>
<db:listitem>
<db:para>IosInAppPurchaseProduct::purchase() function is called and payment is added to the SKPaymentQueue in the Objective-C function paymentQueue:() in IosInAppPurchaseBackend.</db:para>
</db:listitem>
<db:listitem>
<db:para>Purchase confirmation pop-up is launched for the user.</db:para>
</db:listitem>
</db:orderedlist>
</db:section>
</db:section>
</db:article>
