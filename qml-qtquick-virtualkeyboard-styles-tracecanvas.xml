<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>TraceCanvas QML Type</db:title>
<db:productname>QtVirtualKeyboard</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Virtual Keyboard</db:titleabbrev>
<db:abstract>
<db:para>A specialized Canvas type for rendering Trace objects.</db:para>
<db:para>This type was introduced in QtQuick.VirtualKeyboard 2.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.VirtualKeyboard.Styles 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtQuick.VirtualKeyboard 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-canvas.xml">Canvas</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>TraceCanvas is part of <db:simplelist><db:member>qtvirtualkeyboard-styles-qml</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This type provides capabilities for rendering Trace objects on the screen.</db:para>
<db:para>To make the Trace rendering available in the keyboard, this type must be declared as the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keyboardstyle.xml#traceCanvasDelegate-prop">KeyboardStyle.traceCanvasDelegate</db:link> component.</db:para>
<db:programlisting language="cpp">traceCanvasDelegate: TraceCanvas {
}
</db:programlisting>
<db:para>Custom drawing attributes can be initialized in the Canvas.available signal. For example:</db:para>
<db:programlisting language="cpp">onAvailableChanged: {
    if (!available)
        return;
    var ctx = getContext(&quot;2d&quot;)
    ctx.lineWidth = 8 * scaleHint
    ctx.lineCap = &quot;round&quot;
    ctx.strokeStyle = Qt.rgba(0xFF, 0xFF, 0xFF)
    ctx.fillStyle = ctx.strokeStyle
}
</db:programlisting>
<db:para>The type offers built-in options for Trace rendering. Currently the following rendering options are available:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:code>renderSmoothedLine</db:code> Renders smoothed line with round corners (the default)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The rendering function can be changed with the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-tracecanvas.xml#renderFunction-prop">renderFunction</db:link> property.</db:para>
<db:programlisting language="cpp">renderFunction: renderSmoothedLine
</db:programlisting>
<db:para>Custom rendering function is also supported. Consider the following example:</db:para>
<db:programlisting language="cpp">renderFunction: renderCustomLine

function renderCustomLine() {
    getContext(&quot;2d&quot;)
    var points = trace.points()

    ...
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="autoDestroy-prop">
<db:title>autoDestroy : bool</db:title>
<db:para>Enables auto destruction mode.</db:para>
<db:para>If enabled, this item will be destroyed when the <db:code>trace</db:code> object is destroyed.</db:para>
<db:para>The default value is false.</db:para>
</db:section>
<db:section xml:id="autoDestroyDelay-prop">
<db:title>autoDestroyDelay : int</db:title>
<db:para>Specifies the approximate delay in milliseconds, counted from the beginning of the auto destruction, before the object is to be destroyed.</db:para>
<db:para>This delay makes it possible, for example, to animate the item before destruction.</db:para>
<db:para>The default value is 0.</db:para>
</db:section>
<db:section xml:id="renderFunction-prop">
<db:title>renderFunction : var</db:title>
<db:para>This property defines the rendering function.</db:para>
<db:para>The default value is <db:code>renderSmoothedLine</db:code></db:para>
</db:section>
<db:section xml:id="trace-prop">
<db:title>trace : var</db:title>
<db:para>Provides access to <db:link xlink:href="qml-qtquick-virtualkeyboard-trace.xml">Trace</db:link> object.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="renderSmoothedLine-method">
<db:title>renderSmoothedLine()</db:title>
<db:para>Renders smoothed line with round corners.</db:para>
<db:para>This function is incremental and renders only the new part added to the Trace.</db:para>
<db:para>This function does not alter any of the canvas attributes (i.e. they can be set elsewhere.)</db:para>
</db:section>
</db:section>
</db:article>
