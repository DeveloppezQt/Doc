<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QLatin1StringMatcher Class</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Optimized search for substring in Latin-1 text.</db:para>
<db:para>This class was introduced in Qt 6.5.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QLatin1StringMatcher</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Core)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Core)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QLatin1StringMatcher is part of <db:simplelist><db:member>tools</db:member><db:member><db:link xlink:href="string-processing.xml">Classes for string data</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qlatin1stringmatcher.xml">QLatin1StringMatcher</db:link> can search for one <db:link xlink:href="qlatin1stringview.xml">QLatin1StringView</db:link> as a substring of another, either ignoring case or taking it into account.</db:para>
<db:para>This class is useful when you have a Latin-1 encoded string that you want to repeatedly search for in some QLatin1StringViews (perhaps in a loop), or when you want to search for all instances of it in a given <db:link xlink:href="qlatin1stringview.xml">QLatin1StringView</db:link>. Using a matcher object and <db:link xlink:href="qlatin1stringmatcher.xml#indexIn">indexIn</db:link>() is faster than matching a plain <db:link xlink:href="qlatin1stringview.xml">QLatin1StringView</db:link> with <db:link xlink:href="qlatin1stringview.xml#indexOf">QLatin1StringView::indexOf</db:link>() if repeated matching takes place. This class offers no benefit if you are doing one-off matches. The string to be searched for must not be destroyed or changed before the matcher object is destroyed, as the matcher accesses the string when searching for it.</db:para>
<db:para>Create a <db:link xlink:href="qlatin1stringmatcher.xml">QLatin1StringMatcher</db:link> for the <db:link xlink:href="qlatin1stringview.xml">QLatin1StringView</db:link> you want to search for and the case sensitivity. Then call <db:link xlink:href="qlatin1stringmatcher.xml#indexIn">indexIn</db:link>() with the <db:link xlink:href="qlatin1stringview.xml">QLatin1StringView</db:link> that you want to search within.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlatin1stringview.xml">QLatin1StringView</db:link></db:member>
<db:member><db:link xlink:href="qstringmatcher.xml">QStringMatcher</db:link></db:member>
<db:member><db:link xlink:href="qbytearraymatcher.xml">QByteArrayMatcher</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QLatin1StringMatcher">
<db:title>[noexcept] QLatin1StringMatcher::QLatin1StringMatcher()</db:title>
<db:para>Construct an empty Latin-1 string matcher. This will match at each position in any string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#setPattern">setPattern</db:link>()</db:member>
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#setCaseSensitivity">setCaseSensitivity</db:link>()</db:member>
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#indexIn">indexIn</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QLatin1StringMatcher-1">
<db:title>[explicit noexcept] QLatin1StringMatcher::QLatin1StringMatcher(QLatin1StringView <db:emphasis>pattern</db:emphasis>, Qt::CaseSensitivity <db:emphasis>cs</db:emphasis> = Qt::CaseSensitive)</db:title>
<db:para>Constructs a Latin-1 string matcher that searches for the given <db:code role="parameter">pattern</db:code> with given case sensitivity <db:code role="parameter">cs</db:code>. The <db:code role="parameter">pattern</db:code> argument must not be destroyed before this matcher object. Call <db:link xlink:href="qlatin1stringmatcher.xml#indexIn">indexIn</db:link>() to find the <db:code role="parameter">pattern</db:code> in the given <db:link xlink:href="qlatin1stringview.xml">QLatin1StringView</db:link>.</db:para>
</db:section>
<db:section xml:id="dtor.QLatin1StringMatcher">
<db:title>[noexcept] QLatin1StringMatcher::~QLatin1StringMatcher()</db:title>
<db:para>Destroys the Latin-1 string matcher.</db:para>
</db:section>
<db:section xml:id="caseSensitivity">
<db:title>[noexcept] Qt::CaseSensitivity QLatin1StringMatcher::caseSensitivity() const</db:title>
<db:para>Returns the case sensitivity the matcher uses.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#setCaseSensitivity">setCaseSensitivity</db:link>()</db:member>
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#indexIn">indexIn</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="indexIn">
<db:title>[noexcept] qsizetype QLatin1StringMatcher::indexIn(QLatin1StringView <db:emphasis>haystack</db:emphasis>, qsizetype <db:emphasis>from</db:emphasis> = 0) const</db:title>
<db:para>Searches for the pattern in the given <db:code role="parameter">haystack</db:code> starting from <db:code role="parameter">from</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#caseSensitivity">caseSensitivity</db:link>()</db:member>
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#pattern">pattern</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="indexIn-1">
<db:title>[noexcept, since 6.8] qsizetype QLatin1StringMatcher::indexIn(QStringView <db:emphasis>haystack</db:emphasis>, qsizetype <db:emphasis>from</db:emphasis> = 0) const</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Searches for the pattern in the given <db:code role="parameter">haystack</db:code> starting from index position <db:code role="parameter">from</db:code>.</db:para>
<db:para>This function was introduced in Qt 6.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#caseSensitivity">caseSensitivity</db:link>()</db:member>
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#pattern">pattern</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pattern">
<db:title>[noexcept] QLatin1StringView QLatin1StringMatcher::pattern() const</db:title>
<db:para>Returns the Latin-1 pattern that the matcher searches for.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#setPattern">setPattern</db:link>()</db:member>
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#indexIn">indexIn</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCaseSensitivity">
<db:title>[noexcept] void QLatin1StringMatcher::setCaseSensitivity(Qt::CaseSensitivity <db:emphasis>cs</db:emphasis>)</db:title>
<db:para>Sets the case sensitivity to <db:code role="parameter">cs</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#caseSensitivity">caseSensitivity</db:link>()</db:member>
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#indexIn">indexIn</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPattern">
<db:title>[noexcept] void QLatin1StringMatcher::setPattern(QLatin1StringView <db:emphasis>pattern</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">pattern</db:code> to search for. The string pointed to by the <db:link xlink:href="qlatin1stringview.xml">QLatin1StringView</db:link> must not be destroyed before the matcher is destroyed, unless it is set to point to a different <db:code role="parameter">pattern</db:code> with longer lifetime first.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#pattern">pattern</db:link>()</db:member>
<db:member><db:link xlink:href="qlatin1stringmatcher.xml#indexIn">indexIn</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
