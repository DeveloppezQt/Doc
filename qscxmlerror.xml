<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QScxmlError Class</db:title>
<db:productname>QtScxml</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt SCXML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qscxmlerror.xml">QScxmlError</db:link> class describes the errors returned by the Qt SCXML state machine when parsing an SCXML file.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QScxmlError</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Scxml)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Scxml)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += scxml</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscxmlstatemachine.xml">QScxmlStateMachine</db:link></db:member>
<db:member><db:link xlink:href="qscxmlcompiler.xml">QScxmlCompiler</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="column-prop">
<db:title>[read-only] column : const int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>column</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">column</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the column number in which the SCXML error occurred.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold"><db:link xlink:href="qscxmlerror.xml#column">column</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="description-prop">
<db:title>[read-only] description : const QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>description</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">description</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a description of the SCXML error.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qscxmlerror.xml#description">description</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="fileName-prop">
<db:title>[read-only] fileName : const QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>fileName</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">fileName</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the name of the file in which the SCXML error occurred.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qscxmlerror.xml#fileName">fileName</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="line-prop">
<db:title>[read-only] line : const int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>line</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">line</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the line number on which the SCXML error occurred.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold"><db:link xlink:href="qscxmlerror.xml#line">line</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="valid-prop">
<db:title>[read-only] valid : const bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>valid</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isValid</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the SCXML error is valid.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold"><db:link xlink:href="qscxmlerror.xml#isValid">isValid</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QScxmlError">
<db:title>QScxmlError::QScxmlError()</db:title>
<db:constructorsynopsis>
<db:methodname>QScxmlError</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QScxmlError()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a new invalid SCXML error.</db:para>
</db:section>
<db:section xml:id="QScxmlError-1">
<db:title>QScxmlError::QScxmlError(const QString &amp;<db:emphasis>fileName</db:emphasis>, int <db:emphasis>line</db:emphasis>, int <db:emphasis>column</db:emphasis>, const QString &amp;<db:emphasis>description</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QScxmlError</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>fileName</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>line</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>column</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>description</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QScxmlError(const QString &amp;fileName, int line, int column, const QString &amp;description)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a new valid SCXML error that contains the error message, <db:code role="parameter">description</db:code>, as well as the <db:code role="parameter">fileName</db:code>, <db:code role="parameter">line</db:code>, and <db:code role="parameter">column</db:code> where the error occurred.</db:para>
</db:section>
<db:section xml:id="QScxmlError-2">
<db:title>QScxmlError::QScxmlError(const QScxmlError &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QScxmlError</db:methodname>
<db:methodparam>
<db:type>const QScxmlError &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QScxmlError(const QScxmlError &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QScxmlError">
<db:title>QScxmlError::~QScxmlError()</db:title>
<db:destructorsynopsis>
<db:methodname>~QScxmlError</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QScxmlError()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the SCXML error.</db:para>
</db:section>
<db:section xml:id="column">
<db:title>int QScxmlError::column() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>column</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">column</db:synopsisinfo>
<db:synopsisinfo role="signature">int column() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the column in which the error occurred.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qscxmlerror.xml#column-prop">column</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="description">
<db:title>QString QScxmlError::description() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>description</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">description</db:synopsisinfo>
<db:synopsisinfo role="signature">QString description() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the error message.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qscxmlerror.xml#description-prop">description</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="fileName">
<db:title>QString QScxmlError::fileName() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>fileName</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">fileName</db:synopsisinfo>
<db:synopsisinfo role="signature">QString fileName() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the name of the file in which the error occurred.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qscxmlerror.xml#fileName-prop">fileName</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="isValid">
<db:title>bool QScxmlError::isValid() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isValid</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">valid</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isValid() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if the error is valid, <db:code>false</db:code> otherwise. An invalid error can only be created by calling the default constructor or by assigning an invalid error.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qscxmlerror.xml#valid-prop">valid</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="line">
<db:title>int QScxmlError::line() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>line</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">line</db:synopsisinfo>
<db:synopsisinfo role="signature">int line() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the line on which the error occurred.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qscxmlerror.xml#line-prop">line</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="toString">
<db:title>QString QScxmlError::toString() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>toString</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString toString() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This convenience method converts an error to a string. Returns the error message formatted as: <db:emphasis>&quot;filename:line:column: error: description&quot;</db:emphasis></db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QScxmlError &amp;QScxmlError::operator=(const QScxmlError &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QScxmlError &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QScxmlError &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QScxmlError &amp; operator=(const QScxmlError &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Assigns <db:code role="parameter">other</db:code> to this SCXML error and returns a reference to this SCXML error.</db:para>
</db:section>
</db:section>
</db:article>
