<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>StateGroup QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides built-in state support for non-Item types.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>StateGroup is part of <db:simplelist><db:member>qtquick-states</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Item (and all derived types) provides built in support for states and transitions via its <db:link xlink:href="qml-qtquick-item.xml#state-prop">state</db:link>, <db:link xlink:href="qml-qtquick-item.xml#states-prop">states</db:link> and <db:link xlink:href="qml-qtquick-item.xml#transitions-prop">transitions</db:link> properties. <db:link xlink:href="qml-qtquick-stategroup.xml">StateGroup</db:link> provides an easy way to use this support in other (non-Item-derived) types.</db:para>
<db:programlisting language="qml">MyCustomObject {
    StateGroup {
        id: myStateGroup
        states: State {
            name: &quot;state1&quot;
            // ...
        }
        transitions: Transition {
            // ...
        }
    }

    onSomethingHappened: myStateGroup.state = &quot;state1&quot;;
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-statesanimations-states.xml">Qt Quick States</db:link></db:member>
<db:member><db:link xlink:href="qtquick-statesanimations-animations.xml">Transitions</db:link></db:member>
<db:member><db:link xlink:href="qtqml-index.xml">Qt QML</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="state-prop">
<db:title>state : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>state</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the name of the current state of the state group.</db:para>
<db:para>This property is often used in scripts to change between states. For example:</db:para>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>js</db:code></db:emphasis>function toggle() { if (button.state == 'On') button.state = 'Off'; else button.state = 'On'; } <db:emphasis role="bold">&lt;Unknown command&gt;<db:code>endjs</db:code></db:emphasis></db:para>
<db:para>If the state group is in its base state (i.e. no explicit state has been set), state will be a blank string. Likewise, you can return a state group to its base state by setting its current state to ''.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-statesanimations-states.xml">Qt Quick States</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="states-prop">
<db:title>[read-only] states : list&lt;State&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;State&gt;</db:type>
<db:varname>states</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a list of states defined by the state group.</db:para>
<db:programlisting language="qml">StateGroup {
    states: [
        State {
            // State definition...
        },
        State {
            // ...
        }
        // Other states...
    ]
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-statesanimations-states.xml">Qt Quick States</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="transitions-prop">
<db:title>[read-only] transitions : list&lt;Transition&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;Transition&gt;</db:type>
<db:varname>transitions</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a list of transitions defined by the state group.</db:para>
<db:programlisting language="qml">StateGroup {
    transitions: [
        Transition {
          // ...
        },
        Transition {
          // ...
        }
        // ...
    ]
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-statesanimations-animations.xml">Transitions</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
