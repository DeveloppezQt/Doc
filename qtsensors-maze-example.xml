<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Sensors - Maze QML Example</db:title>
<db:productname>QtSensors</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Sensors Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Maze example demonstrates the <db:link xlink:href="qml-qtsensors-tiltsensor.xml">TiltSensor</db:link> QML type.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/maze.png"/>
</db:imageobject>
</db:mediaobject>
<db:section xml:id="maze-in-qml">
<db:title>Maze in QML</db:title>
<db:para>To write a QML application that will use the <db:link xlink:href="qml-qtsensors-tiltsensor.xml">TiltSensor</db:link> QML sensors type you need to do the following steps:</db:para>
<db:para>Import the <db:link xlink:href="qtsensors-module.xml">QtSensors</db:link> 5.x declarative plugin:</db:para>
<db:programlisting language="qml">import QtSensors 5.0
</db:programlisting>
<db:para>Add the Sensor QML types into your qml file.</db:para>
<db:para>In this example we use the <db:link xlink:href="qml-qtsensors-tiltsensor.xml">TiltSensor</db:link> with values based in degrees and an accuracy of 5 degree:</db:para>
<db:programlisting language="qml">    TiltSensor {
        id: tiltSensor
        active: true
    }
</db:programlisting>
<db:para>Starting the sensor can be done by setting the 'enabled' property to true:</db:para>
<db:programlisting language="qml">        onTriggered: {
            if (!tiltSensor.enabled)
                tiltSensor.active = true;
</db:programlisting>
<db:para>The mouse should move by a factor of the tilt value:</db:para>
<db:programlisting language="qml">                var xstep = 0;
                xstep = tiltSensor.reading.yRotation * 0.1 //acceleration

                var ystep = 0;
                ystep = tiltSensor.reading.xRotation * 0.1 //acceleration
</db:programlisting>
<db:para>The walk direction of the mouse takes into account some collision detection:</db:para>
<db:programlisting language="qml">                if (xstep &lt; 1 &amp;&amp; xstep &gt; 0)
                    xstep = 0
                else if (xstep &gt; -1 &amp;&amp; xstep &lt; 0)
                    xstep = 0

                if (ystep &lt; 1 &amp;&amp; ystep &gt; 0)
                    ystep = 0;
                else if (ystep &gt; -1 &amp;&amp; ystep &lt; 0)
                    ystep = 0;

                if ((xstep &lt; 0 &amp;&amp; mouseCtrl.x &gt; 0
                     &amp;&amp; Lib.canMove(mouseCtrl.x + xstep,mouseCtrl.y))) {
                    xval = mouseCtrl.x + xstep;

                } else if (xstep &gt; 0 &amp;&amp; mouseCtrl.x &lt; (Lib.cellDimension * (Lib.dimension - 1))
                    &amp;&amp; Lib.canMove(mouseCtrl.x + xstep,mouseCtrl.y)) {
                    xval = mouseCtrl.x + xstep;
                } else
                    xval = mouseCtrl.x;

                if (ystep &lt; 0 &amp;&amp; mouseCtrl.y &gt; 0
                     &amp;&amp; Lib.canMove(mouseCtrl.x, mouseCtrl.y + ystep)) {
                    yval = mouseCtrl.y + ystep;
                } else if (ystep &gt; 0 &amp;&amp; (mouseCtrl.y &lt; (Lib.cellDimension * (Lib.dimension - 1)))
                         &amp;&amp; Lib.canMove(mouseCtrl.x, mouseCtrl.y + ystep)) {
                    yval = mouseCtrl.y + ystep;
                } else
                    yval = mouseCtrl.y

                mouseCtrl.move(xval, yval);
</db:programlisting>
<db:para>The rotation of the mouse image is determined according to the angle that the mouse is moving.</db:para>
<db:programlisting language="qml">        var a = newy - mouse.y
        var b = newx - mouse.x
        var c = distance(mouse.x, mouse.y, newx, newy)
        var radians_to_degrees = 57.2957795

        if (a &gt; 0)
            angle = -Math.acos(a / b) * radians_to_degrees
        else
            angle = -Math.asin(b / c) * radians_to_degrees
        if (b &gt; 0)
             angle = -Math.acos(a / c) * radians_to_degrees
        else
            angle = Math.acos(a / c) * radians_to_degrees

        if (angle &lt; 0)
            angle = 360 + angle

        img.rotation = angle
        mouse.x = newx;
        mouse.y = newy;
</db:programlisting>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="maze/Congratulation.qml">maze/Congratulation.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/LabyrinthSquare.qml">maze/LabyrinthSquare.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/Mouse.qml">maze/Mouse.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/android/AndroidManifest.xml">maze/android/AndroidManifest.xml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/components/ApplicationWindow.qml">maze/components/ApplicationWindow.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/components/Button.qml">maze/components/Button.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/lib.js">maze/lib.js</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/main.cpp">maze/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/maze.pro">maze/maze.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/maze.qml">maze/maze.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/maze.qrc">maze/maze.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Images:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="maze/components/images/button_background_disabled.png">maze/components/images/button_background_disabled.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/components/images/button_background_normal.png">maze/components/images/button_background_normal.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/components/images/button_background_pressed.png">maze/components/images/button_background_pressed.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/content/00.png">maze/content/00.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/content/01.png">maze/content/01.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/content/cheese.png">maze/content/cheese.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/content/cheeseeating.gif">maze/content/cheeseeating.gif</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/content/congratulations.gif">maze/content/congratulations.gif</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/content/mouse_down.gif">maze/content/mouse_down.gif</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="maze/content/start.png">maze/content/start.png</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:section></db:article>
