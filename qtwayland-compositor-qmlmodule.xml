<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Wayland Compositor QML Types</db:title>
<db:productname>QtWaylandCompositor</db:productname>
<db:edition>Qt Wayland Compositor | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Wayland Compositor Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides QML types for writing custom Wayland display servers.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="details"/>
<db:para>The Qt Wayland module provides QML types that can be used to create custom display servers supporting the Wayland protocol.</db:para>
<db:para>The QML types can be imported into your application using the following import statement:</db:para>
<db:section xml:id="using-the-module">
<db:title>Using the Module</db:title>
<db:para>Using a Qt module's C++ API requires linking against the module library, either directly or through other dependencies. Several build tools have dedicated support for this, including <db:link xlink:href="https://cmake.org/cmake/help/latest/">CMake</db:link> and <db:link xlink:href="qmake-manual.xml">qmake</db:link>.</db:para>
<db:section xml:id="building-with-cmake">
<db:title>Building with CMake</db:title>
<db:para>Use the <db:code>find_package()</db:code> command to locate the needed module component in the <db:code>Qt6</db:code> package:</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS WaylandCompositor)
target_link_libraries(mytarget PRIVATE Qt6::WaylandCompositor)
</db:programlisting>
<db:para>For more details, see the <db:link xlink:href="cmake-manual.xml">Build with CMake</db:link> overview.</db:para>
</db:section>
<db:section xml:id="building-with-qmake">
<db:title>Building with qmake</db:title>
<db:para>To configure the module for building with qmake, add the module as a value of the <db:code>QT</db:code> variable in the project's .pro file:</db:para>
<db:programlisting language="cpp">QT += waylandcompositor
</db:programlisting>
</db:section>
<db:section xml:id="qml-import">
<db:title>QML import</db:title>
<db:programlisting language="qml">import QtWayland.Compositor
</db:programlisting>
<db:para>For more information about using these types in your application, see the <db:link xlink:href="qtwaylandcompositor-index.xml">Qt Wayland Compositor</db:link> documentation.</db:para>
</db:section>
</db:section>
<db:section>
<db:title>Contents</db:title>
<db:variablelist role="members">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwayland-compositor-idleinhibitmanagerv1.xml" xlink:role="">IdleInhibitManagerV1</db:link></db:term>
<db:listitem>
<db:para>Provides an extension that allows to inhibit the idle behavior of the compositor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwayland-compositor-qttextinputmethodmanager.xml" xlink:role="">QtTextInputMethodManager</db:link></db:term>
<db:listitem>
<db:para>Provides access to input methods in the compositor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwayland-compositor-shellsurface.xml" xlink:role="">ShellSurface</db:link></db:term>
<db:listitem>
<db:para>Provides a common interface for surface roles specified by shell extensions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwayland-compositor-shellsurfaceitem.xml" xlink:role="">ShellSurfaceItem</db:link></db:term>
<db:listitem>
<db:para>A Qt Quick item type for displaying and interacting with a ShellSurface.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwayland-compositor-textinputmanager.xml" xlink:role="">TextInputManager</db:link></db:term>
<db:listitem>
<db:para>Provides access to input methods in the compositor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwayland-compositor-waylandclient.xml" xlink:role="">WaylandClient</db:link></db:term>
<db:listitem>
<db:para>Represents a client connecting to the WaylandCompositor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwayland-compositor-waylandcompositor.xml" xlink:role="">WaylandCompositor</db:link></db:term>
<db:listitem>
<db:para>Manages the Wayland display server.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwayland-compositor-waylandhardwarelayer.xml" xlink:role="">WaylandHardwareLayer</db:link></db:term>
<db:listitem>
<db:para>Makes a parent WaylandQuickItem use hardware layers for rendering.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwayland-compositor-waylandoutput.xml" xlink:role="">WaylandOutput</db:link></db:term>
<db:listitem>
<db:para>Provides access to a displayable area managed by the compositor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwayland-compositor-waylandquickitem.xml" xlink:role="">WaylandQuickItem</db:link></db:term>
<db:listitem>
<db:para>Provides a Qt Quick item that represents a WaylandView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwayland-compositor-waylandseat.xml" xlink:role="">WaylandSeat</db:link></db:term>
<db:listitem>
<db:para>Provides access to keyboard, mouse, and touch input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwayland-compositor-waylandsurface.xml" xlink:role="">WaylandSurface</db:link></db:term>
<db:listitem>
<db:para>Represents a rectangular area on an output device.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtwayland-compositor-waylandview.xml" xlink:role="">WaylandView</db:link></db:term>
<db:listitem>
<db:para>Represents a view of a surface on an output.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
</db:article>
