<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QColormap Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qcolormap.xml">QColormap</db:link> class maps device independent QColors to device dependent pixel values.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QColormap</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QColormap is part of <db:simplelist><db:member>painting</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Mode-enum">
<db:title>enum QColormap::Mode</db:title>
<db:para>This enum describes how <db:link xlink:href="qcolormap.xml">QColormap</db:link> maps device independent RGB values to device dependent pixel values.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcolormap.xml">QColormap</db:link></db:emphasis>::Direct</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Pixel values are derived directly from the RGB values, also known as &quot;True Color.&quot;</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcolormap.xml">QColormap</db:link></db:emphasis>::Indexed</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Pixel values represent indexes into a vector of available colors, i.e. <db:link xlink:href="qcolormap.xml">QColormap</db:link> uses the index of the color that most closely matches an RGB value.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcolormap.xml">QColormap</db:link></db:emphasis>::Gray</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Similar to <db:code>Indexed</db:code>, pixel values represent a vector of available gray tones. <db:link xlink:href="qcolormap.xml">QColormap</db:link> uses the index of the gray tone that most closely matches the computed gray tone of an RGB value.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QColormap">
<db:title>QColormap::QColormap(const QColormap &amp;<db:emphasis>colormap</db:emphasis>)</db:title>
<db:para>Constructs a copy of another <db:code role="parameter">colormap</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QColormap">
<db:title>[noexcept] QColormap::~QColormap()</db:title>
<db:para>Destroys the colormap.</db:para>
</db:section>
<db:section xml:id="colorAt">
<db:title>const QColor QColormap::colorAt(uint <db:emphasis>pixel</db:emphasis>) const</db:title>
<db:para>Returns a <db:link xlink:href="qcolor.xml">QColor</db:link> for the <db:code role="parameter">pixel</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcolormap.xml#pixel">pixel</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="colormap">
<db:title>const QVector&lt;QColor&gt; QColormap::colormap() const</db:title>
<db:para>Returns a vector of colors which represents the devices colormap for <db:code>Indexed</db:code> and <db:code>Gray</db:code> modes. This function returns an empty vector for <db:code>Direct</db:code> mode.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcolormap.xml#size">size</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="depth">
<db:title>int QColormap::depth() const</db:title>
<db:para>Returns the depth of the device.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcolormap.xml#size">size</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="instance">
<db:title>[static] QColormap QColormap::instance(int <db:emphasis>screen</db:emphasis> = -1)</db:title>
<db:para>Returns the colormap for the specified <db:code role="parameter">screen</db:code>. If <db:code role="parameter">screen</db:code> is -1, this function returns the colormap for the default screen.</db:para>
</db:section>
<db:section xml:id="mode">
<db:title>QColormap::Mode QColormap::mode() const</db:title>
<db:para>Returns the mode of this colormap.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcolormap.xml#Mode-enum">QColormap::Mode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pixel">
<db:title>uint QColormap::pixel(const QColor &amp;<db:emphasis>color</db:emphasis>) const</db:title>
<db:para>Returns a device dependent pixel value for the <db:code role="parameter">color</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcolormap.xml#colorAt">colorAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="size">
<db:title>int QColormap::size() const</db:title>
<db:para>Returns the size of the colormap for <db:code>Indexed</db:code> and <db:code>Gray</db:code> modes; Returns -1 for <db:code>Direct</db:code> mode.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcolormap.xml#colormap">colormap</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>[since 4.2] QColormap &amp;QColormap::operator=(const QColormap &amp;<db:emphasis>colormap</db:emphasis>)</db:title>
<db:para>Assigns the given <db:code role="parameter">colormap</db:code> to <db:emphasis>this</db:emphasis> color map and returns a reference to <db:emphasis>this</db:emphasis> color map.</db:para>
<db:para>This function was introduced in Qt 4.2.</db:para>
</db:section>
</db:section>
</db:article>
