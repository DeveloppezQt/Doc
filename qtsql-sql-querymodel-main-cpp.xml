<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Query Model Example</db:title>
<db:productname>QtSql</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt SQL Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Query Model example shows how to make customized versions of data obtained from a SQL query, using a model that encapsulates the query and table views to display the results.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;../connection.h&quot;
#include &quot;customsqlmodel.h&quot;
#include &quot;editablesqlmodel.h&quot;

#include &amp;lt;QApplication&amp;gt;
#include &amp;lt;QTableView&amp;gt;

#include &amp;lt;stdlib.h&amp;gt;

void initializeModel(QSqlQueryModel *model)
{
    model-&amp;gt;setQuery(&quot;select * from person&quot;);
    model-&amp;gt;setHeaderData(0, Qt::Horizontal, QObject::tr(&quot;ID&quot;));
    model-&amp;gt;setHeaderData(1, Qt::Horizontal, QObject::tr(&quot;First name&quot;));
    model-&amp;gt;setHeaderData(2, Qt::Horizontal, QObject::tr(&quot;Last name&quot;));
}

QTableView* createView(QSqlQueryModel *model, const QString &amp;amp;title = &quot;&quot;)
{
    QTableView *view = new QTableView;
    view-&amp;gt;setModel(model);
    static int offset = 0;

    view-&amp;gt;setWindowTitle(title);
    view-&amp;gt;move(100 + offset, 100 + offset);
    offset += 20;
    view-&amp;gt;show();

    return view;
}

int main(int argc, char *argv[])
{
    QApplication app(argc, argv);
    if (!createConnection())
        return EXIT_FAILURE;

    QSqlQueryModel plainModel;
    EditableSqlModel editableModel;
    CustomSqlModel customModel;

    initializeModel(&amp;amp;plainModel);
    initializeModel(&amp;amp;editableModel);
    initializeModel(&amp;amp;customModel);

    createView(&amp;amp;plainModel, QObject::tr(&quot;Plain Query Model&quot;));
    createView(&amp;amp;editableModel, QObject::tr(&quot;Editable Query Model&quot;));
    createView(&amp;amp;customModel, QObject::tr(&quot;Custom Query Model&quot;));

    return app.exec();
}

</db:programlisting>
</db:article>
