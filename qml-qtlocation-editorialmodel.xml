<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>EditorialModel QML Type</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qml-qtlocation-editorialmodel.xml">EditorialModel</db:link> type provides a model of place editorials.</db:para>
<db:para>This type was introduced in QtLocation 5.5.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtLocation 6.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtLocation 5.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>EditorialModel is part of <db:simplelist><db:member>qml-QtLocation5-places</db:member><db:member>qml-QtLocation5-places-models</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtlocation-editorialmodel.xml">EditorialModel</db:link> is a read-only model used to fetch editorials related to a <db:link xlink:href="qml-qtlocation-place.xml">Place</db:link>. Binding a <db:link xlink:href="qml-qtlocation-place.xml">Place</db:link> via <db:link xlink:href="qml-qtlocation-editorialmodel.xml#place-prop">EditorialModel::place</db:link> initiates an initial fetch of editorials. The model performs fetches incrementally and is intended to be used in conjunction with a View such as a <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>. When the View reaches the last of the editorials currently in the model, a fetch is performed to retrieve more if they are available. The View is automatically updated as the editorials are received. The number of editorials which are fetched at a time is specified by the <db:link xlink:href="qml-qtlocation-editorialmodel.xml#batchSize-prop">batchSize</db:link> property. The total number of editorials available can be accessed via the <db:link xlink:href="qml-qtlocation-editorialmodel.xml#totalCount-prop">totalCount</db:link> property.</db:para>
<db:para>The model returns data for the following roles:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Role</db:para>
</db:th>
<db:th>
<db:para>Type</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>supplier</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-supplier.xml">supplier</db:link></db:para>
</db:td>
<db:td>
<db:para>The supplier of the content.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>user</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-user.xml">user</db:link></db:para>
</db:td>
<db:td>
<db:para>The user who contributed the content.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>attribution</db:para>
</db:td>
<db:td>
<db:para>string</db:para>
</db:td>
<db:td>
<db:para>Attribution text which must be displayed when displaying the content.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>url</db:para>
</db:td>
<db:td>
<db:para>url</db:para>
</db:td>
<db:td>
<db:para>The URL of the image.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>imageId</db:para>
</db:td>
<db:td>
<db:para>string</db:para>
</db:td>
<db:td>
<db:para>The identifier of the image.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>mimeType</db:para>
</db:td>
<db:td>
<db:para>string</db:para>
</db:td>
<db:td>
<db:para>The MIME type of the image.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>text</db:para>
</db:td>
<db:td>
<db:para>string</db:para>
</db:td>
<db:td>
<db:para>The editorial's textual description of the place. It can be either rich (HTML based) text or plain text depending upon the provider.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>title</db:para>
</db:td>
<db:td>
<db:para>string</db:para>
</db:td>
<db:td>
<db:para>The title of the editorial.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>language</db:para>
</db:td>
<db:td>
<db:para>string</db:para>
</db:td>
<db:td>
<db:para>The language that the editorial is written in.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>dateTime</db:para>
</db:td>
<db:td>
<db:para>datetime</db:para>
</db:td>
<db:td>
<db:para>The date and time that the review was posted.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>text</db:para>
</db:td>
<db:td>
<db:para>string</db:para>
</db:td>
<db:td>
<db:para>The review's textual description of the place. It can be either rich (HTML based) text or plain text depending on the provider.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>language</db:para>
</db:td>
<db:td>
<db:para>string</db:para>
</db:td>
<db:td>
<db:para>The language that the review is written in.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>rating</db:para>
</db:td>
<db:td>
<db:para>real</db:para>
</db:td>
<db:td>
<db:para>The rating that the reviewer gave to the place.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>reviewId</db:para>
</db:td>
<db:td>
<db:para>string</db:para>
</db:td>
<db:td>
<db:para>The identifier of the review.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>title</db:para>
</db:td>
<db:td>
<db:para>string</db:para>
</db:td>
<db:td>
<db:para>The title of the review.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section xml:id="example">
<db:title>Example</db:title>
<db:para>The following example shows how to display editorials for a place:</db:para>
<db:programlisting language="qml">import QtQuick
import QtPositioning
import QtLocation

EditorialModel {
    id: editorialModel
    batchSize: 3
    place: place
}

ListView {
    model: editorialModel
    delegate: Item {
        anchors.fill: parent

        Column {
            width: parent.width
            clip: true

            Text {
                text: title
                width: parent.width
                wrapMode: Text.WordWrap
                font.pixelSize: 24
            }

            Text {
                text: text
                width: parent.width
                wrapMode: Text.WordWrap
                font.pixelSize: 20
            }

            Row {
                Image {
                    width: 16
                    height: 16

                    source: supplier.icon.url(Qt.size(width, height), Icon.List)
                }

                Text {
                    text: &quot;Provided by &quot; + supplier.name
                    font.pixelSize: 16
                }
            }

            Text {
                text: &quot;Contributed by &quot; + user.name
                font.pixelSize: 16
            }

            Text {
                text: attribution
                font.pixelSize: 8
            }
        }
    }
}
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="batchSize-prop">
<db:title>batchSize : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>batchSize</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the batch size to use when fetching more editorials items.</db:para>
</db:section>
<db:section xml:id="place-prop">
<db:title>place : Place</db:title>
<db:fieldsynopsis>
<db:type>Place</db:type>
<db:varname>place</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the Place that the editorials are for.</db:para>
</db:section>
<db:section xml:id="totalCount-prop">
<db:title>totalCount : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>totalCount</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the total number of editorial items for the place.</db:para>
</db:section>
</db:section>
</db:article>
