<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QComputeCommand Class</db:title>
<db:subtitle>Qt3DRender::QComputeCommand</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>QComponent to issue work for the compute shader on GPU.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QComputeCommand</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-computecommand.xml" xlink:role="">ComputeCommand</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qcomponent.xml" xlink:role="class">Qt3DCore::QComponent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qt3drender-qcomputecommand.xml">Qt3DRender::QComputeCommand</db:link> is used to issue work for the compute shader. The compute shader is specified in the <db:link xlink:href="qt3drender-qmaterial.xml">QMaterial</db:link> component of the same entity the <db:link xlink:href="qt3drender-qcomputecommand.xml">QComputeCommand</db:link> is added to. The <db:link xlink:href="qt3drender-qcomputecommand.xml#workGroupX-prop">workGroupX</db:link>, <db:link xlink:href="qt3drender-qcomputecommand.xml#workGroupY-prop">workGroupY</db:link> and <db:link xlink:href="qt3drender-qcomputecommand.xml#workGroupZ-prop">workGroupZ</db:link> properties specify the work group sizes for the compute shader invocation. <db:link xlink:href="qt3drender-qdispatchcompute.xml">Qt3DRender::QDispatchCompute</db:link> node needs to be present in the FrameGraph to actually issue the commands.</db:para>
<db:note>
<db:para>If the rendering policy is set to <db:link xlink:href="qt3drender-qrendersettings.xml#RenderPolicy-enum">Qt3DRender::QRenderSettings::OnDemand</db:link> and there are no changes to the scene, the <db:link xlink:href="qml-qt3d-render-computecommand.xml">ComputeCommand</db:link> will not be invoked repeatedly. The <db:link xlink:href="qt3drender-qrendersettings.xml#RenderPolicy-enum">Qt3DRender::QRenderSettings::Always</db:link> render policy must be set for the <db:link xlink:href="qml-qt3d-render-computecommand.xml">ComputeCommand</db:link> to be repeatedly invoked if there are no other changes to the scene that triggers rendering a new frame.</db:para>
</db:note>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="runType-prop">
<db:title>runType : RunType</db:title>
<db:para>Specifies whether the compute command should be performed every frame or manually triggered.</db:para>
<db:para>If set to Continuous, Compute command is executed everyframe. This is the default.</db:para>
<db:para>If set to Manual CompouteCommand is executed for a given number of frames and then the component disables itself.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>Qt3DRender::QComputeCommand::RunType</db:type> <db:emphasis role="bold">runType</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setRunType</db:emphasis>(<db:type>Qt3DRender::QComputeCommand::RunType</db:type> <db:emphasis>runType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">runTypeChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="workGroupX-prop">
<db:title>workGroupX : int</db:title>
<db:para>Specifies X workgroup size.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">workGroupX</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcomputecommand.xml#setWorkGroupX">setWorkGroupX</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>workGroupX</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">workGroupXChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="workGroupY-prop">
<db:title>workGroupY : int</db:title>
<db:para>Specifies Y workgroup size.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">workGroupY</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcomputecommand.xml#setWorkGroupY">setWorkGroupY</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>workGroupY</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">workGroupYChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="workGroupZ-prop">
<db:title>workGroupZ : int</db:title>
<db:para>Specifies Z workgroup size.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">workGroupZ</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcomputecommand.xml#setWorkGroupZ">setWorkGroupZ</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>workGroupZ</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">workGroupZChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QComputeCommand">
<db:title>[explicit] QComputeCommand::QComputeCommand(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>The constructor creates a new <db:link xlink:href="qt3drender-qcomputecommand.xml">Qt3DRender::QComputeCommand</db:link> instance with the specified <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="setWorkGroupX">
<db:title>void QComputeCommand::setWorkGroupX(int <db:emphasis>workGroupX</db:emphasis>)</db:title>
<db:para>Sets the workgroup for the first dimension to <db:code role="parameter">workGroupX</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcomputecommand.xml#workGroupX-prop">workGroupX</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcomputecommand.xml#workGroupX-prop">workGroupX</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setWorkGroupY">
<db:title>void QComputeCommand::setWorkGroupY(int <db:emphasis>workGroupY</db:emphasis>)</db:title>
<db:para>Sets the workgroup for the second dimension to <db:code role="parameter">workGroupY</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcomputecommand.xml#workGroupY-prop">workGroupY</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcomputecommand.xml#workGroupY-prop">workGroupY</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setWorkGroupZ">
<db:title>void QComputeCommand::setWorkGroupZ(int <db:emphasis>workGroupZ</db:emphasis>)</db:title>
<db:para>Sets the workgroup for the third dimension to <db:code role="parameter">workGroupZ</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcomputecommand.xml#workGroupZ-prop">workGroupZ</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcomputecommand.xml#workGroupZ-prop">workGroupZ</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="trigger">
<db:title>void QComputeCommand::trigger(int <db:emphasis>frameCount</db:emphasis> = 1)</db:title>
<db:para>When the run type is set to Manual, calling trigger will make the compute command be executed for the next <db:code role="parameter">frameCount</db:code> frames. Upon completion of the execution, the enabled property will be set to false.</db:para>
</db:section>
<db:section xml:id="trigger-1">
<db:title>void QComputeCommand::trigger(int <db:emphasis>workGroupX</db:emphasis>, int <db:emphasis>workGroupY</db:emphasis>, int <db:emphasis>workGroupZ</db:emphasis>, int <db:emphasis>frameCount</db:emphasis> = 1)</db:title>
<db:para>When the run type is set to Manual, calling trigger will make the compute command be executed for the next <db:code role="parameter">frameCount</db:code> frames. Upon completion of the execution, the enabled property will be set to false. The size of the workgroup previously set will be overridden with <db:code role="parameter">workGroupX</db:code>, <db:code role="parameter">workGroupY</db:code>, <db:code role="parameter">workGroupZ</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
