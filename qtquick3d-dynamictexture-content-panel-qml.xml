<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick 3D - Dynamic Texture Example</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates how to use a 2D layer as a 3D texture.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">// Copyright (C) 2021 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR BSD-3-Clause

import QtQuick

Image {
    id: corkPanel
    source: &quot;content/cork.jpg&quot;
    width: ListView.view.width
    height: ListView.view.height
    fillMode: Image.PreserveAspectCrop

    TapHandler {
        objectName: name
        onTapped: corkPanel.Window.activeFocusItem.focus = false
    }

    Text {
        text: name
        x: 15
        y: 8
        height: 40
        width: 370
        font.pixelSize: 18
        font.bold: true
        color: &quot;white&quot;
        style: Text.Outline
        styleColor: &quot;black&quot;
        wrapMode: Text.Wrap
    }

    Repeater {
        model: notes
        Item {
            id: fulcrum

            x: 100 + Math.random() * (corkPanel.width - 0.5 * paper.width)
            y: 50 + Math.random() * (corkPanel.height - 0.5 * paper.height)

            Item {
                id: note
                scale: 0.7

                Image {
                    id: paper
                    x: 8 + -width * 0.6 / 2
                    y: -20
                    source: &quot;note-yellow.png&quot;
                    scale: 0.6
                    transformOrigin: Item.TopLeft
                    antialiasing: true

                    DragHandler {
                        target: fulcrum
                        xAxis.minimum: 100
                        xAxis.maximum: corkPanel.width - 80
                        yAxis.minimum: 0
                        yAxis.maximum: corkPanel.height - 80
                    }
                }

                TextEdit {
                    id: text
                    x: -104
                    y: 36
                    width: 215
                    height: 24
                    font.pixelSize: 24
                    readOnly: false
                    selectByMouse: activeFocus
                    rotation: -8
                    text: noteText
                    wrapMode: Text.Wrap
                }

                rotation: -flickable.horizontalVelocity / 100
                Behavior on rotation {
                    SpringAnimation { spring: 2.0; damping: 0.15 }
                }
            }

            Image {
                x: -width / 2
                y: -height * 0.5 / 2
                source: &quot;tack.png&quot;
                scale: 0.7
                transformOrigin: Item.TopLeft
            }

            states: State {
                name: &quot;pressed&quot;
                when: text.activeFocus
                PropertyChanges { target: note; rotation: 8; scale: 1 }
                PropertyChanges { target: fulcrum; z: 8 }
            }

            transitions: Transition {
                NumberAnimation { properties: &quot;rotation,scale&quot;; duration: 200 }
            }
        }
    }
}

</db:programlisting>
</db:article>
