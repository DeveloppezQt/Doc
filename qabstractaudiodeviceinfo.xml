<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAbstractAudioDeviceInfo Class</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qabstractaudiodeviceinfo.xml">QAbstractAudioDeviceInfo</db:link> class is a base class for audio backends.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAbstractAudioDeviceInfo</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += multimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QAbstractAudioDeviceInfo is part of <db:simplelist><db:member>multimedia</db:member><db:member>multimedia_audio</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This class implements the audio functionality for <db:link xlink:href="qaudiodeviceinfo.xml">QAudioDeviceInfo</db:link>, i.e., <db:link xlink:href="qaudiodeviceinfo.xml">QAudioDeviceInfo</db:link> keeps a <db:link xlink:href="qabstractaudiodeviceinfo.xml">QAbstractAudioDeviceInfo</db:link> and routes function calls to it. For a description of the functionality that <db:link xlink:href="qabstractaudiodeviceinfo.xml">QAbstractAudioDeviceInfo</db:link> implements, you can read the class and functions documentation of <db:link xlink:href="qaudiodeviceinfo.xml">QAudioDeviceInfo</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudiodeviceinfo.xml">QAudioDeviceInfo</db:link></db:member>
<db:member><db:link xlink:href="qabstractaudiooutput.xml">QAbstractAudioOutput</db:link></db:member>
<db:member><db:link xlink:href="qabstractaudioinput.xml">QAbstractAudioInput</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="deviceName">
<db:title>[pure virtual] QString QAbstractAudioDeviceInfo::deviceName() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>deviceName</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString deviceName() const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the audio device name.</db:para>
</db:section>
<db:section xml:id="isFormatSupported">
<db:title>[pure virtual] bool QAbstractAudioDeviceInfo::isFormatSupported(const QAudioFormat &amp;<db:emphasis>format</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isFormatSupported</db:methodname>
<db:methodparam>
<db:type>const QAudioFormat &amp;</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isFormatSupported(const QAudioFormat &amp;format) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if <db:code role="parameter">format</db:code> is available from audio device.</db:para>
</db:section>
<db:section xml:id="preferredFormat">
<db:title>[pure virtual] QAudioFormat QAbstractAudioDeviceInfo::preferredFormat() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QAudioFormat</db:type>
<db:methodname>preferredFormat</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QAudioFormat preferredFormat() const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the recommended settings to use.</db:para>
</db:section>
<db:section xml:id="supportedByteOrders">
<db:title>[pure virtual] QList&lt;QAudioFormat::Endian&gt; QAbstractAudioDeviceInfo::supportedByteOrders()</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>QList&lt;QAudioFormat::Endian&gt;</db:type>
<db:methodname>supportedByteOrders</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QAudioFormat::Endian&gt; supportedByteOrders() = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of currently available byte orders.</db:para>
</db:section>
<db:section xml:id="supportedChannelCounts">
<db:title>[pure virtual] QList&lt;int&gt; QAbstractAudioDeviceInfo::supportedChannelCounts()</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>QList&lt;int&gt;</db:type>
<db:methodname>supportedChannelCounts</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;int&gt; supportedChannelCounts() = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of currently available channels.</db:para>
</db:section>
<db:section xml:id="supportedCodecs">
<db:title>[pure virtual] QStringList QAbstractAudioDeviceInfo::supportedCodecs()</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>QStringList</db:type>
<db:methodname>supportedCodecs</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QStringList supportedCodecs() = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of currently available codecs.</db:para>
</db:section>
<db:section xml:id="supportedSampleRates">
<db:title>[pure virtual] QList&lt;int&gt; QAbstractAudioDeviceInfo::supportedSampleRates()</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>QList&lt;int&gt;</db:type>
<db:methodname>supportedSampleRates</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;int&gt; supportedSampleRates() = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of currently available sample rates.</db:para>
</db:section>
<db:section xml:id="supportedSampleSizes">
<db:title>[pure virtual] QList&lt;int&gt; QAbstractAudioDeviceInfo::supportedSampleSizes()</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>QList&lt;int&gt;</db:type>
<db:methodname>supportedSampleSizes</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;int&gt; supportedSampleSizes() = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of currently available sample sizes.</db:para>
</db:section>
<db:section xml:id="supportedSampleTypes">
<db:title>[pure virtual] QList&lt;QAudioFormat::SampleType&gt; QAbstractAudioDeviceInfo::supportedSampleTypes()</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>QList&lt;QAudioFormat::SampleType&gt;</db:type>
<db:methodname>supportedSampleTypes</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QAudioFormat::SampleType&gt; supportedSampleTypes() = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of currently available sample types.</db:para>
</db:section>
</db:section>
</db:article>
