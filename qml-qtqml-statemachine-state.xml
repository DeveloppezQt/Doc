<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>State QML Type</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides a general-purpose state for <db:link xlink:href="qml-qtqml-statemachine-statemachine.xml">StateMachine</db:link>.</db:para>
<db:para>This type was introduced in Qt 5.4.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQml.StateMachine 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-statemachine-statemachine.xml" xlink:role="">StateMachine</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-statemachine-qabstractstate.xml">QAbstractState</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>State is part of <db:simplelist><db:member>statemachine-qmltypes</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>State objects can have child states as well as transitions to other states. State is part of <db:link xlink:href="qmlstatemachine.xml">The Declarative State Machine Framework</db:link>.</db:para>
<db:section xml:id="states-with-child-states">
<db:title>States with Child States</db:title>
<db:para>The <db:link xlink:href="qml-qtqml-statemachine-state.xml#childMode-prop">childMode</db:link> property determines how child states are treated. For non-parallel state groups, the <db:link xlink:href="qml-qtqml-statemachine-state.xml#initialState-prop">initialState</db:link> property must be used to set the initial state. The child states are mutually exclusive states, and the state machine needs to know which child state to enter when the parent state is the target of a transition.</db:para>
<db:para>The state emits the <db:link xlink:href="qml-qtqml-statemachine-state.xml#finished-signal">State::finished</db:link>() signal when a final child state (<db:link xlink:href="qml-qtqml-statemachine-finalstate.xml">FinalState</db:link>) is entered.</db:para>
<db:para>The <db:link xlink:href="qml-qtqml-statemachine-state.xml#errorState-prop">errorState</db:link> sets the state's error state. The error state is the state that the state machine will transition to if an error is detected when attempting to enter the state (e.g. because no initial state has been set).</db:para>
</db:section>
<db:section xml:id="example-usage">
<db:title>Example Usage</db:title>
<db:programlisting language="qml">import QtQuick 2.0
import QtQml.StateMachine 1.0 as DSM

Rectangle {
    DSM.StateMachine {
        id: stateMachine
        initialState: state
        running: true
        DSM.State {
            id: state
        }
    }
}
</db:programlisting>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtqml-statemachine-statemachine.xml">StateMachine</db:link></db:member>
<db:member><db:link xlink:href="qml-qtqml-statemachine-finalstate.xml">FinalState</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="childMode-prop">
<db:title>childMode : enumeration</db:title>
<db:para>The child mode of this state</db:para>
<db:para>The default value of this property is <db:link xlink:href="qstate.xml">QState</db:link>.ExclusiveStates.</db:para>
<db:para>This enum specifies how a state's child states are treated:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qstate.xml">QState</db:link>.ExclusiveStates The child states are mutually exclusive and an initial state must be set by setting <db:link xlink:href="qml-qtqml-statemachine-state.xml#initialState-prop">initialState</db:link> property.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qstate.xml">QState</db:link>.ParallelStates The child states are parallel. When the parent state is entered, all its child states are entered in parallel.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="errorState-prop">
<db:title>errorState : QAbstractState</db:title>
<db:para>The error state of this state.</db:para>
</db:section>
<db:section xml:id="initialState-prop">
<db:title>initialState : QAbstractState</db:title>
<db:para>The initial state of this state (one of its child states).</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="finished-signal">
<db:title>finished()</db:title>
<db:para>This signal is emitted when a final child state of this state is entered.</db:para>
<db:para>The corresponding handler is <db:code>onFinished</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onFinished</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtqml-statemachine-qabstractstate.xml#active-prop">QAbstractState::active</db:link></db:member>
<db:member><db:link xlink:href="qml-qtqml-statemachine-qabstractstate.xml#entered-signal">QAbstractState::entered</db:link></db:member>
<db:member><db:link xlink:href="qml-qtqml-statemachine-qabstractstate.xml#exited-signal">QAbstractState::exited</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
