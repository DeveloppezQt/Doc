<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Plug &amp; Paint Extra Filters Example</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A plugin providing the extra filters.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:alt>Screenshot of the Plug &amp; Paint example</db:alt>
<db:imageobject>
<db:imagedata fileref="images/plugandpaint.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The Extra Filters example is a plugin for the <db:link xlink:href="qtwidgets-tools-plugandpaint-app-example.xml">Plug &amp; Paint</db:link> example. It provides a set of filters in addition to those provided by the <db:link xlink:href="qtwidgets-tools-plugandpaint-plugins-basictools-example.xml">Basic Tools</db:link> plugin.</db:para>
<db:para>Since the approach is identical to <db:link xlink:href="qtwidgets-tools-plugandpaint-plugins-basictools-example.xml">Basic Tools</db:link>, we won't review the code here. The only part of interest is the .pro file, since Extra Filters is a dynamic plugin (<db:link xlink:href="qtwidgets-tools-plugandpaint-plugins-basictools-example.xml">Basic Tools</db:link> is linked statically into the Plug &amp; Paint executable).</db:para>
<db:para>Here's the project file for building the Extra Filters plugin:</db:para>
<db:programlisting language="cpp">TEMPLATE      = lib
CONFIG       += plugin
QT           += widgets
INCLUDEPATH  += ../../app
HEADERS       = extrafiltersplugin.h
SOURCES       = extrafiltersplugin.cpp
TARGET        = $$qtLibraryTarget(pnp_extrafilters)
DESTDIR       = ../../plugins

</db:programlisting>
<db:para>The .pro file differs from typical .pro files in many respects. First, it starts with a TEMPLATE entry specifying lib. (The default template is app.) It also adds plugin to the CONFIG variable. This is necessary on some platforms to avoid generating symbolic links with version numbers in the file name, which is appropriate for most dynamic libraries but not for plugins.</db:para>
<db:para>The INCLUDEPATH variable sets the search paths for global headers (i.e., header files included using #include &lt;...&gt;). We add ../../app to the list, so that we can include &lt;interfaces.h&gt;.</db:para>
<db:para>The TARGET variable specifies which name we want to give the target library. We use pnp_ as the prefix to show that the plugin is designed to work with Plug &amp; Paint. On Unix, lib is also prepended to that name. On all platforms, a platform-specific suffix is appended (e.g., .dll on Windows, .so on Linux).</db:para>
<db:para>The DESTDIR variable specifies where we want to install the plugin. We put it in Plug &amp; Paint's plugins subdirectory, since that's where the application looks for dynamic plugins.</db:para>
<db:para>The CONFIG() code at the end is necessary for this example because the example is part of the Qt distribution and Qt can be configured to be built simultaneously in debug and in release modes. You don't need to for your own plugins.</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="tools/plugandpaint/plugins/extrafilters/extrafilters.pro">tools/plugandpaint/plugins/extrafilters/extrafilters.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="tools/plugandpaint/plugins/extrafilters/extrafiltersplugin.cpp">tools/plugandpaint/plugins/extrafilters/extrafiltersplugin.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="tools/plugandpaint/plugins/extrafilters/extrafiltersplugin.h">tools/plugandpaint/plugins/extrafilters/extrafiltersplugin.h</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
