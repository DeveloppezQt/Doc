<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>enumeration QML Value Type</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 5.5.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>a named enumeration value.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The enumeration type refers to a named enumeration value.</db:para>
<db:para>Each named value can be referred to as &lt;Type&gt;.&lt;value&gt;. For example, the Text type has an AlignRight enumeration value:</db:para>
<db:programlisting language="qml">Text { horizontalAlignment: Text.AlignRight }
</db:programlisting>
<db:para>(For backwards compatibility, the enumeration value may also be specified as a string, e.g. &quot;AlignRight&quot;. This form is not recommended for new code.)</db:para>
<db:para>When integrating with C++, note that any enum value <db:link xlink:href="qtqml-cppintegration-data.xml">passed into QML from C++</db:link> is automatically converted into an enumeration value, and vice-versa.</db:para>
<db:para>This basic type is provided by the QML language. Some enumeration values are provided by the QtQuick import.</db:para>
<db:section xml:id="using-the-enumeration-type-in-qml">
<db:title>Using the enumeration Type in QML</db:title>
<db:para>The enumeration type is a representation of a C++ enum type. It is not possible to refer to the enumeration type in QML itself; instead, the <db:link xlink:href="qml-int.xml">int</db:link> or <db:link xlink:href="qml-var.xml">var</db:link> types can be used when referring to enumeration values from QML code.</db:para>
<db:para>For example:</db:para>
<db:programlisting language="qml">import QtQuick 2.0

Item {
    // refer to Text.AlignRight using an int type
    property int enumValue: textItem.horizontalAlignment

    signal valueEmitted(int someValue)

    Text {
        id: textItem
        horizontalAlignment: Text.AlignRight
    }

    // emit valueEmitted() signal, which expects an int, with Text.AlignRight
    Component.onCompleted: valueEmitted(Text.AlignRight)
}
</db:programlisting>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtqml-typesystem-basictypes.xml">QML Basic Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:article>
