<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>qt_generate_deploy_app_script</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Generate a deployment script for an application.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="qt6-generate-deploy-app-script"/>
<db:para>Generate a deployment script for an application.</db:para>
<db:para>The command is defined in the Core component of the Qt6 package, which can be loaded like so:</db:para>
<db:programlisting language="cpp" role="bad">find_package(Qt6 REQUIRED COMPONENTS Core)
</db:programlisting>
<db:para>This command was introduced in Qt 6.3.</db:para>
<db:note>
<db:para>This command is in technology preview and may change in future releases.</db:para>
</db:note>
<db:note>
<db:para>This command is currently only supported on Windows and macOS.</db:para>
</db:note>
<db:section xml:id="synopsis">
<db:title>Synopsis</db:title>
<db:programlisting language="cpp" role="bad">qt_generate_deploy_app_script(
    TARGET target
    FILENAME_VARIABLE var_name
    [NO_UNSUPPORTED_PLATFORM_ERROR]
)
</db:programlisting>
<db:para>If <db:link xlink:href="">versionless commands</db:link> are disabled, use qt6_generate_deploy_app_script() instead. It supports the same set of arguments as this command.</db:para>
</db:section>
<db:section xml:id="description">
<db:title>Description</db:title>
<db:para>Installing an executable target with <db:link xlink:href="https://cmake.org/cmake/help/latest/command/install.html#targets">install(TARGETS)</db:link> only installs the target's executable (except for macOS app bundles, which will copy the whole bundle). You need to explicitly install any other libraries or plugins the executable depends on yourself. qt_generate_deploy_app_script() is a convenience command intended to simplify that process. It expects the application to follow Qt's recommended install directory structure fairly closely. That structure is based on CMake's default install layout, as determined by <db:link xlink:href="https://cmake.org/cmake/help/latest/module/GNUInstallDirs.html">GNUInstallDirs</db:link> (except for macOS app bundles, which follow Apple's requirements instead).</db:para>
<db:para>The command generates a script whose name will be stored in the variable named by the FILENAME_VARIABLE option. That script is only written at CMake generation time. It is intended to be used with the <db:link xlink:href="https://cmake.org/cmake/help/latest/command/install.html#script">install(SCRIPT)</db:link> command, which should come after the application's target has been installed using <db:link xlink:href="https://cmake.org/cmake/help/latest/command/install.html#targets">install(TARGETS)</db:link>.</db:para>
<db:para>The deployment script will call <db:link xlink:href="qt-deploy-runtime-dependencies.xml#qt-deploy-runtime-dependencies">qt_deploy_runtime_dependencies()</db:link> with a suitable set of options for the standard install layout. Currently, this is only implemented for macOS app bundles built on a macOS host and Windows executables built on a Windows host. Cross-building a Windows executable on a Linux host, as well as similar scenarios, are not currently supported. Calling qt_generate_deploy_app_script() in such a case will result in a fatal error, unless the NO_UNSUPPORTED_PLATFORM_ERROR option is given.</db:para>
<db:para>For deploying a QML application, use <db:link xlink:href="">qt_generate_deploy_qml_app_script()</db:link> instead.</db:para>
</db:section>
<db:section xml:id="example">
<db:title>Example</db:title>
<db:programlisting language="cpp" role="bad">cmake_minimum_required(VERSION 3.16...3.22)
project(MyThings)

find_package(Qt6 REQUIRED COMPONENTS Core)
qt_standard_project_setup()

qt_add_executable(MyApp main.cpp)

install(TARGETS MyApp
    BUNDLE  DESTINATION .
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

qt_generate_deploy_app_script(
    TARGET MyApp
    FILENAME_VARIABLE deploy_script
    NO_UNSUPPORTED_PLATFORM_ERROR
)
install(SCRIPT ${deploy_script})
</db:programlisting>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt-standard-project-setup.xml#qt6-standard-project-setup">qt_standard_project_setup()</db:link></db:member>
<db:member><db:link xlink:href="">qt_generate_deploy_qml_app_script()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
