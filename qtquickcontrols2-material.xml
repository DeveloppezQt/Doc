<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Material Style</db:title>
<db:productname>QtQuickControls2</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 2 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Quick Controls 2 Reference Documentation.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Material Style is based on the Google Material Design Guidelines. <db:link xlink:href="qtquickcontrols2-material.xml#detailed-desc-material">More...</db:link></db:para>
<db:section xml:id="attached-properties">
<db:title>Attached Properties</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols2-material.xml#material-accent-attached-prop"><db:emphasis role="bold">accent</db:emphasis></db:link> : color</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols2-material.xml#material-background-attached-prop"><db:emphasis role="bold">background</db:emphasis></db:link> : color</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols2-material.xml#material-elevation-attached-prop"><db:emphasis role="bold">elevation</db:emphasis></db:link> : int</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols2-material.xml#material-foreground-attached-prop"><db:emphasis role="bold">foreground</db:emphasis></db:link> : color</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols2-material.xml#material-primary-attached-prop"><db:emphasis role="bold">primary</db:emphasis></db:link> : color</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols2-material.xml#material-theme-attached-prop"><db:emphasis role="bold">theme</db:emphasis></db:link> : enumeration</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="attached-methods">
<db:title>Attached Methods</db:title>
<db:itemizedlist>
<db:listitem>
<db:para>color <db:link xlink:href="qtquickcontrols2-material.xml#material-color-attached-method"><db:emphasis role="bold">color</db:emphasis></db:link>(enumeration predefined, enumeration shade)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="detailed-description">
<db:title>Detailed Description</db:title>
<db:anchor xml:id="detailed-desc-material"/>
<db:para>The Material style is based on the <db:link xlink:href="https://www.google.com/design/spec/material-design/introduction.html">Google Material Design Guidelines</db:link>. It allows for a unified experience across platforms and device sizes.</db:para>
<db:figure>
<db:title>The Material style in light and dark themes</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-material.png"/>
</db:imageobject>
</db:mediaobject>
</db:figure>
<db:para>To run an application with the Material style, see <db:link xlink:href="qtquickcontrols2-styles.xml#using-styles-in-qt-quick-controls-2">Using Styles in Qt Quick Controls 2</db:link>.</db:para>
<db:note>
<db:para>The Material style is not a native Android style. The Material style is a 100% cross-platform Qt Quick Controls 2 style implementation that follows the Google Material Design Guidelines. The style runs on any platform, and looks more or less identical everywhere. Minor differences may occur due to differences in available system fonts and font rendering engines.</db:para>
</db:note>
<db:section xml:id="customization">
<db:title>Customization</db:title>
<db:para>The Material style allows customizing five attributes, <db:link xlink:href="qtquickcontrols2-material.xml#material-theme-attached-prop">theme</db:link>, <db:link xlink:href="qtquickcontrols2-material.xml#material-primary-attached-prop">primary</db:link>, <db:link xlink:href="qtquickcontrols2-material.xml#material-accent-attached-prop">accent</db:link>, <db:link xlink:href="qtquickcontrols2-material.xml#material-foreground-attached-prop">foreground</db:link>, and <db:link xlink:href="qtquickcontrols2-material.xml#material-background-attached-prop">background</db:link>.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-material-attributes.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The following example illustrates how to create a red <db:emphasis>stop</db:emphasis> button with light text:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:programlisting language="qml">import QtQuick 2.0
import QtQuick.Controls 2.0
import QtQuick.Controls.Material 2.0

Button {
    text: &quot;Stop&quot;
    highlighted: true

    Material.accent: Material.Red
    Material.theme: Material.Dark
}
</db:programlisting>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-material-button.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
<db:para>All attributes can be specified for any window or item, and they automatically propagate to children in the same manner as <db:link xlink:href="qml-qtquick-controls2-control.xml#font-prop">fonts</db:link>. In the following example, the window and all three radio buttons appear in the dark theme using a purple accent color:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:programlisting language="qml">import QtQuick 2.0
import QtQuick.Controls 2.0
import QtQuick.Controls.Material 2.0

ApplicationWindow {
    visible: true

    Material.theme: Material.Dark
    Material.accent: Material.Purple

    Column {
        anchors.centerIn: parent

        RadioButton { text: qsTr(&quot;Small&quot;) }
        RadioButton { text: qsTr(&quot;Medium&quot;);  checked: true }
        RadioButton { text: qsTr(&quot;Large&quot;) }
    }
}
</db:programlisting>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-material-dark.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
<db:para>In addition to specifying the attributes in QML, it is also possible to specify them via environment variables or in a <db:link xlink:href="qtquickcontrols2-styles.xml#qtquickcontrols2-conf">configuration file</db:link>. Attributes specified in QML take precedence over all other methods.</db:para>
<db:section xml:id="environment-variables">
<db:title>Environment Variables</db:title>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Variable</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>QT_QUICK_CONTROLS_MATERIAL_THEME</db:code></db:para>
</db:td>
<db:td>
<db:para>The value can be one of the available <db:link xlink:href="qtquickcontrols2-material.xml#material-theme-attached-prop">themes</db:link>, for example <db:code>&quot;Dark&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>QT_QUICK_CONTROLS_MATERIAL_ACCENT</db:code></db:para>
</db:td>
<db:td>
<db:para>The value can be any <db:link xlink:href="qml-color.xml#colorbasictypedocs">color</db:link>, but it is recommended to use one of the <db:link xlink:href="qtquickcontrols2-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;Teal&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>QT_QUICK_CONTROLS_MATERIAL_PRIMARY</db:code></db:para>
</db:td>
<db:td>
<db:para>The value can be any <db:link xlink:href="qml-color.xml#colorbasictypedocs">color</db:link>, but it is recommended to use one of the <db:link xlink:href="qtquickcontrols2-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;BlueGrey&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>QT_QUICK_CONTROLS_MATERIAL_FOREGROUND</db:code></db:para>
</db:td>
<db:td>
<db:para>The value can be any <db:link xlink:href="qml-color.xml#colorbasictypedocs">color</db:link>, or one of the <db:link xlink:href="qtquickcontrols2-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>QT_QUICK_CONTROLS_MATERIAL_BACKGROUND</db:code></db:para>
</db:td>
<db:td>
<db:para>The value can be any <db:link xlink:href="qml-color.xml#colorbasictypedocs">color</db:link>, or one of the <db:link xlink:href="qtquickcontrols2-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="dependency">
<db:title>Dependency</db:title>
<db:para>The Material style must be separately imported to gain access to the attributes that are specific to the Material style. It should be noted that regardless of the references to the Material style, the same application code runs with any other style. Material-specific attributes only have an effect when the application is run with the Material style.</db:para>
<db:para>If the Material style is imported in a QML file that is always loaded, the Material style must be deployed with the application in order to be able to run the application regardless of which style the application is run with. By using <db:link xlink:href="qtquickcontrols2-fileselectors.xml">file selectors</db:link>, style-specific tweaks can be applied without creating a hard dependency to a style.</db:para>
</db:section>
<db:section xml:id="pre-defined-material-colors">
<db:title>Pre-defined Material Colors</db:title>
<db:para>Even though primary and accent can be any <db:link xlink:href="qml-color.xml#colorbasictypedocs">color</db:link>, it is recommended to use one of the pre-defined colors that have been designed to work well with the rest of the Material style palette:</db:para>
<db:para>Available pre-defined colors:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Material.Red</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Pink</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Purple</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.DeepPurple</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Indigo</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Blue</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.LightBlue</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Cyan</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Teal</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Green</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.LightGreen</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Lime</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Yellow</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Amber</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Orange</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.DeepOrange</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Brown</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Grey</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.BlueGrey</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
</db:informaltable>
<db:para>When the dark theme is in use, different <db:link xlink:href="qtquickcontrols2-material.xml#pre-defined-shades">shades</db:link> of the pre-defined colors are used by default:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Material.Red</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Pink</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Purple</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.DeepPurple</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Indigo</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Blue</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.LightBlue</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Cyan</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Teal</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Green</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.LightGreen</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Lime</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Yellow</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Amber</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Orange</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.DeepOrange</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Brown</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Grey</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.BlueGrey</db:para>
</db:td>
<db:td>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="pre-defined-shades">
<db:title>Pre-defined Shades</db:title>
<db:para>There are several different <db:link xlink:href="https://material.google.com/style/color.html#color-color-palette">shades</db:link> of each <db:link xlink:href="qtquickcontrols2-material.xml#pre-defined-material-colors">pre-defined color</db:link> that can be passed to the <db:link xlink:href="qtquickcontrols2-material.xml#material-color-attached-method">Material.color()</db:link> function:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Material.Shade50</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade100</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade200</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade300</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade400</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade500</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade600</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade700</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade800</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Shade900</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.ShadeA100</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.ShadeA200</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.ShadeA400</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.ShadeA700</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para><db:emphasis role="bold">See also</db:emphasis> <db:link xlink:href="qtquickcontrols2-default.xml">Default Style</db:link>, <db:link xlink:href="qtquickcontrols2-universal.xml">Universal Style</db:link></db:para>
</db:section>
</db:section>
<db:section xml:id="attached-property-documentation">
<db:title>Attached Property Documentation</db:title>
<db:anchor xml:id="material-accent-attached-prop"/>
<db:para>This attached property holds the accent color of the theme. The property can be attached to any window or item. The value is propagated to children.</db:para>
<db:para>The default value is <db:code>Material.Pink</db:code>.</db:para>
<db:note>
<db:para>Even though the accent can be any <db:link xlink:href="qml-color.xml#colorbasictypedocs">color</db:link>, it is recommended to use one of the <db:link xlink:href="qtquickcontrols2-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link> that have been designed to work well with the rest of the Material style palette.</db:para>
</db:note>
<db:para/>
<db:anchor xml:id="material-background-attached-prop"/>
<db:para>This attached property holds the background color of the theme. The property can be attached to any window or item. The value is propagated to children.</db:para>
<db:para>The default value is theme-specific (light or dark).</db:para>
<db:para/>
<db:anchor xml:id="material-elevation-attached-prop"/>
<db:para>This attached property holds the elevation of the control. The higher the elevation, the deeper the shadow. The property can be attached to any control, but not all controls visualize elevation.</db:para>
<db:para>The default value is control-specific.</db:para>
<db:para/>
<db:anchor xml:id="material-foreground-attached-prop"/>
<db:para>This attached property holds the foreground color of the theme. The property can be attached to any window or item. The value is propagated to children.</db:para>
<db:para>The default value is theme-specific (light or dark).</db:para>
<db:para/>
<db:anchor xml:id="material-primary-attached-prop"/>
<db:para>This attached property holds the primary color of the theme. The property can be attached to any window or item. The value is propagated to children.</db:para>
<db:para>The default value is <db:code>Material.Indigo</db:code>.</db:para>
<db:note>
<db:para>Even though the primary can be any <db:link xlink:href="qml-color.xml#colorbasictypedocs">color</db:link>, it is recommended to use one of the <db:link xlink:href="qtquickcontrols2-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link> that have been designed to work well with the rest of the Material style palette.</db:para>
</db:note>
<db:para/>
<db:anchor xml:id="material-theme-attached-prop"/>
<db:para>This attached property holds whether the theme is light or dark. The property can be attached to any window or item. The value is propagated to children.</db:para>
<db:para>Available themes:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Material.Light</db:para>
</db:td>
<db:td>
<db:para>Light theme (default)</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Material.Dark</db:para>
</db:td>
<db:td>
<db:para>Dark theme</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para/>
</db:section>
<db:section xml:id="attached-method-documentation">
<db:title>Attached Method Documentation</db:title>
<db:anchor xml:id="material-color-attached-method"/>
<db:para>This attached method returns the effective color value of the specified <db:link xlink:href="qtquickcontrols2-material.xml#pre-defined-material-colors">pre-defined Material color</db:link> combined with the given <db:link xlink:href="qtquickcontrols2-material.xml#pre-defined-shades">shade</db:link>. If omitted, the shade argument defaults to <db:code>Material.Shade500</db:code>.</db:para>
<db:programlisting language="qml">import QtQuick 2.0
import QtQuick.Controls.Material 2.0

Rectangle {
    color: Material.color(Material.Red)
}
</db:programlisting>
<db:para/>
</db:section>
<db:section xml:id="related-information">
<db:title>Related Information</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols2-styles.xml">Styling Qt Quick Controls 2</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
