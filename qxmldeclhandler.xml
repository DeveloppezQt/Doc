<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QXmlDeclHandler Class</db:title>
<db:productname>QtXml</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt XML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qxmldeclhandler.xml">QXmlDeclHandler</db:link> class provides an interface to report declaration content of XML data.</db:para>
<db:note>
<db:para>All functions in this class are reentrant.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QXmlDeclHandler</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qxmldefaulthandler.xml" xlink:role="class">QXmlDefaultHandler</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QXmlDeclHandler is part of <db:simplelist><db:member><db:link xlink:href="xml-tools.xml">XML Classes</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>You can set the declaration handler with <db:link xlink:href="qxmlreader.xml#setDeclHandler">QXmlReader::setDeclHandler</db:link>().</db:para>
<db:para>This interface is based on the SAX2 extension DeclHandler.</db:para>
<db:para>The interface provides <db:link xlink:href="qxmldeclhandler.xml#attributeDecl">attributeDecl</db:link>(), <db:link xlink:href="qxmldeclhandler.xml#internalEntityDecl">internalEntityDecl</db:link>() and <db:link xlink:href="qxmldeclhandler.xml#externalEntityDecl">externalEntityDecl</db:link>() functions.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qxmldtdhandler.xml">QXmlDTDHandler</db:link></db:member>
<db:member><db:link xlink:href="qxmlcontenthandler.xml">QXmlContentHandler</db:link></db:member>
<db:member><db:link xlink:href="qxmlentityresolver.xml">QXmlEntityResolver</db:link></db:member>
<db:member><db:link xlink:href="qxmlerrorhandler.xml">QXmlErrorHandler</db:link></db:member>
<db:member><db:link xlink:href="qxmllexicalhandler.xml">QXmlLexicalHandler</db:link></db:member>
<db:member><db:link xlink:href="xml-sax.xml#introduction-to-sax2">Introduction to SAX2</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="dtor.QXmlDeclHandler">
<db:title>[virtual noexcept] QXmlDeclHandler::~QXmlDeclHandler()</db:title>
<db:para>Destroys the declaration handler.</db:para>
</db:section>
<db:section xml:id="attributeDecl">
<db:title>[pure virtual] bool QXmlDeclHandler::attributeDecl(const QString &amp;<db:emphasis>eName</db:emphasis>, const QString &amp;<db:emphasis>aName</db:emphasis>, const QString &amp;<db:emphasis>type</db:emphasis>, const QString &amp;<db:emphasis>valueDefault</db:emphasis>, const QString &amp;<db:emphasis>value</db:emphasis>)</db:title>
<db:para>The reader calls this function to report an attribute type declaration. Only the effective (first) declaration for an attribute is reported.</db:para>
<db:para>The reader passes the name of the associated element in <db:code role="parameter">eName</db:code> and the name of the attribute in <db:code role="parameter">aName</db:code>. It passes a string that represents the attribute type in <db:code role="parameter">type</db:code> and a string that represents the attribute default in <db:code role="parameter">valueDefault</db:code>. This string is one of &quot;#IMPLIED&quot;, &quot;#REQUIRED&quot;, &quot;#FIXED&quot; or an empty string (if none of the others applies). The reader passes the attribute's default value in <db:code role="parameter">value</db:code>. If no default value is specified in the XML file, <db:code role="parameter">value</db:code> is an empty string.</db:para>
<db:para>If this function returns false the reader stops parsing and reports an error. The reader uses the function <db:link xlink:href="qxmldeclhandler.xml#errorString">errorString</db:link>() to get the error message.</db:para>
</db:section>
<db:section xml:id="errorString">
<db:title>[pure virtual] QString QXmlDeclHandler::errorString() const</db:title>
<db:para>The reader calls this function to get an error string if any of the handler functions returns false.</db:para>
</db:section>
<db:section xml:id="externalEntityDecl">
<db:title>[pure virtual] bool QXmlDeclHandler::externalEntityDecl(const QString &amp;<db:emphasis>name</db:emphasis>, const QString &amp;<db:emphasis>publicId</db:emphasis>, const QString &amp;<db:emphasis>systemId</db:emphasis>)</db:title>
<db:para>The reader calls this function to report a parsed external entity declaration. Only the effective (first) declaration for each entity is reported.</db:para>
<db:para>The reader passes the name of the entity in <db:code role="parameter">name</db:code>, the public identifier in <db:code role="parameter">publicId</db:code> and the system identifier in <db:code role="parameter">systemId</db:code>. If there is no public identifier specified, it passes an empty string in <db:code role="parameter">publicId</db:code>.</db:para>
<db:para>If this function returns false the reader stops parsing and reports an error. The reader uses the function <db:link xlink:href="qxmldeclhandler.xml#errorString">errorString</db:link>() to get the error message.</db:para>
</db:section>
<db:section xml:id="internalEntityDecl">
<db:title>[pure virtual] bool QXmlDeclHandler::internalEntityDecl(const QString &amp;<db:emphasis>name</db:emphasis>, const QString &amp;<db:emphasis>value</db:emphasis>)</db:title>
<db:para>The reader calls this function to report an internal entity declaration. Only the effective (first) declaration is reported.</db:para>
<db:para>The reader passes the name of the entity in <db:code role="parameter">name</db:code> and the value of the entity in <db:code role="parameter">value</db:code>.</db:para>
<db:para>If this function returns false the reader stops parsing and reports an error. The reader uses the function <db:link xlink:href="qxmldeclhandler.xml#errorString">errorString</db:link>() to get the error message.</db:para>
</db:section>
</db:section>
</db:article>
