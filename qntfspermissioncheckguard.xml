<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QNtfsPermissionCheckGuard Class</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qntfspermissioncheckguard.xml">QNtfsPermissionCheckGuard</db:link> class is a RAII class to manage NTFS permission checking.</db:para>
<db:para>This class was introduced in Qt 6.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QNtfsPermissionCheckGuard</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Core)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Core)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QNtfsPermissionCheckGuard is part of <db:simplelist><db:member><db:link xlink:href="io.xml">Input/Output and Networking</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>For performance reasons, <db:link xlink:href="qfile.xml">QFile</db:link>, <db:link xlink:href="qfileinfo.xml">QFileInfo</db:link>, and related classes do not perform full ownership and permission (ACL) checking on NTFS file systems by default. During the lifetime of any instance of this class, that default is overridden and advanced checking is performed. This provides a safe and easy way to manage enabling and disabling this change to the default behavior.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">void complexFunction()
{
    QNtfsPermissionCheckGuard permissionGuard;  // check is enabled

    // do complex things here that need permission check enabled

}   // as the guard goes out of scope the check is disabled
</db:programlisting>
<db:para>This class is available only on Windows.</db:para>
<db:section xml:id="qt-ntfs-permission-lookup">
<db:title>qt_ntfs_permission_lookup</db:title>
<db:para>Prior to Qt 6.6, the user had to directly manipulate the global variable qt_ntfs_permission_lookup. However, this was a non-atomic global variable and as such it was prone to data races.</db:para>
<db:para>The variable qt_ntfs_permission_lookup is therefore deprecated since Qt 6.6.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QNtfsPermissionCheckGuard">
<db:title>QNtfsPermissionCheckGuard::QNtfsPermissionCheckGuard()</db:title>
<db:para>Creates a guard and calls the function <db:link xlink:href="qntfspermissioncheckguard.xml#qEnableNtfsPermissionChecks">qEnableNtfsPermissionChecks</db:link>().</db:para>
</db:section>
<db:section xml:id="dtor.QNtfsPermissionCheckGuard">
<db:title>[noexcept] QNtfsPermissionCheckGuard::~QNtfsPermissionCheckGuard()</db:title>
<db:para>Destroys the guard and calls the function <db:link xlink:href="qntfspermissioncheckguard.xml#qDisableNtfsPermissionChecks">qDisableNtfsPermissionChecks</db:link>().</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="qAreNtfsPermissionChecksEnabled">
<db:title>[noexcept, since 6.6] bool qAreNtfsPermissionChecksEnabled()</db:title>
<db:para>Checks the status of the permission checks on NTFS file systems. Returns true if the check is enabled.</db:para>
<db:para>This function is only available on Windows and makes the direct manipulation of <db:link xlink:href="qntfspermissioncheckguard.xml#qt-ntfs-permission-lookup">qt_ntfs_permission_lookup</db:link> obsolete.</db:para>
<db:note>
<db:para>The thread-safety of this function holds only as long as there are no concurrent updates to <db:link xlink:href="qntfspermissioncheckguard.xml#qt-ntfs-permission-lookup">qt_ntfs_permission_lookup</db:link>.</db:para>
</db:note>
<db:note>
<db:para>This function is <db:link xlink:href="">thread-safe</db:link>.</db:para>
</db:note>
<db:para>This function was introduced in Qt 6.6.</db:para>
</db:section>
<db:section xml:id="qDisableNtfsPermissionChecks">
<db:title>[noexcept, since 6.6] bool qDisableNtfsPermissionChecks()</db:title>
<db:para>Disables permission checking on NTFS file systems. Returns true if the check is disabled, meaning that there are no more users.</db:para>
<db:para>This function is only available on Windows and makes the direct manipulation of <db:link xlink:href="qntfspermissioncheckguard.xml#qt-ntfs-permission-lookup">qt_ntfs_permission_lookup</db:link> obsolete.</db:para>
<db:para>This is a low-level function and must (only) be called to match one earlier call to <db:link xlink:href="qntfspermissioncheckguard.xml#qEnableNtfsPermissionChecks">qEnableNtfsPermissionChecks</db:link>(). Please consider the RAII class <db:link xlink:href="qntfspermissioncheckguard.xml">QNtfsPermissionCheckGuard</db:link> instead.</db:para>
<db:note>
<db:para>The thread-safety of this function holds only as long as there are no concurrent updates to <db:link xlink:href="qntfspermissioncheckguard.xml#qt-ntfs-permission-lookup">qt_ntfs_permission_lookup</db:link>.</db:para>
</db:note>
<db:note>
<db:para>This function is <db:link xlink:href="">thread-safe</db:link>.</db:para>
</db:note>
<db:para>This function was introduced in Qt 6.6.</db:para>
</db:section>
<db:section xml:id="qEnableNtfsPermissionChecks">
<db:title>[noexcept, since 6.6] bool qEnableNtfsPermissionChecks()</db:title>
<db:para>Enables permission checking on NTFS file systems. Returns true if the check was already enabled before the call to this function, meaning that there are other users.</db:para>
<db:para>This function is only available on Windows and makes the direct manipulation of <db:link xlink:href="qntfspermissioncheckguard.xml#qt-ntfs-permission-lookup">qt_ntfs_permission_lookup</db:link> obsolete.</db:para>
<db:para>This is a low-level function, please consider the RAII class <db:link xlink:href="qntfspermissioncheckguard.xml">QNtfsPermissionCheckGuard</db:link> instead.</db:para>
<db:note>
<db:para>The thread-safety of this function holds only as long as there are no concurrent updates to <db:link xlink:href="qntfspermissioncheckguard.xml#qt-ntfs-permission-lookup">qt_ntfs_permission_lookup</db:link>.</db:para>
</db:note>
<db:note>
<db:para>This function is <db:link xlink:href="">thread-safe</db:link>.</db:para>
</db:note>
<db:para>This function was introduced in Qt 6.6.</db:para>
</db:section>
</db:section>
</db:article>
