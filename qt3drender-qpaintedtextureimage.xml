<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QPaintedTextureImage Class</db:title>
<db:subtitle>Qt3DRender::QPaintedTextureImage</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A <db:link xlink:href="qt3drender-qabstracttextureimage.xml">QAbstractTextureImage</db:link> that can be written through a QPainter.</db:para>
<db:para>This class was introduced in Qt 5.8.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPaintedTextureImage</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qabstracttextureimage.xml" xlink:role="class">Qt3DRender::QAbstractTextureImage</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qt3drender-qpaintedtextureimage.xml">QPaintedTextureImage</db:link> provides a way to specify a texture image (and thus an OpenGL texture) through a QPainter. The width and height of the texture image can be specified through the width and height or size properties.</db:para>
<db:para>A <db:link xlink:href="qt3drender-qpaintedtextureimage.xml">QPaintedTextureImage</db:link> must be subclassed and the virtual <db:link xlink:href="qt3drender-qpaintedtextureimage.xml#paint">paint</db:link>() function implemented. Each time <db:link xlink:href="qt3drender-qpaintedtextureimage.xml#update">update</db:link>() is called on the <db:link xlink:href="qt3drender-qpaintedtextureimage.xml">QPaintedTextureImage</db:link>, the <db:link xlink:href="qt3drender-qpaintedtextureimage.xml#paint">paint</db:link>() function is invoked and the resulting image is uploaded.</db:para>
<db:para>The <db:link xlink:href="qt3drender-qpaintedtextureimage.xml">QPaintedTextureImage</db:link> must be attached to some <db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link>.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="height-prop">
<db:title>height : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>height</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">height</db:synopsisinfo>
<db:synopsisinfo role="setter">setHeight</db:synopsisinfo>
<db:synopsisinfo role="notifier">heightChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the height of the texture image. The height must be greater than or equal to 1.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">height</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qpaintedtextureimage.xml#setHeight">setHeight</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>h</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">heightChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>w</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="size-prop">
<db:title>size : QSize</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QSize</db:type>
<db:varname>size</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">size</db:synopsisinfo>
<db:synopsisinfo role="setter">setSize</db:synopsisinfo>
<db:synopsisinfo role="notifier">sizeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the size of the texture image.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QSize</db:type> <db:emphasis role="bold">size</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qpaintedtextureimage.xml#setSize">setSize</db:link></db:emphasis>(<db:type>QSize</db:type> <db:emphasis>size</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">sizeChanged</db:emphasis>(<db:type>QSize</db:type> <db:emphasis>size</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qpaintedtextureimage.xml#height-prop">height</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qpaintedtextureimage.xml#width-prop">width</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="width-prop">
<db:title>width : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>width</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">width</db:synopsisinfo>
<db:synopsisinfo role="setter">setWidth</db:synopsisinfo>
<db:synopsisinfo role="notifier">widthChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the width of the texture image. The width must be greater than or equal to 1.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">width</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qpaintedtextureimage.xml#setWidth">setWidth</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>w</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">widthChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>w</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="paint">
<db:title>[pure virtual protected] void QPaintedTextureImage::paint(QPainter *<db:emphasis>painter</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>paint</db:methodname>
<db:methodparam>
<db:type>QPainter *</db:type>
<db:parameter>painter</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void paint(QPainter *painter) = 0</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Paints the texture image with the specified QPainter object <db:code role="parameter">painter</db:code>.</db:para>
<db:para>QPainter considers the top-left corner of an image as its origin, while OpenGL considers the bottom-left corner of a texture as its origin. An easy way to account for this difference is to set a custom viewport on the painter before doing any other painting:</db:para>
<db:programlisting language="cpp">painter-&amp;gt;setViewport(0, height(), width(), -height());
...
</db:programlisting>
</db:section>
<db:section xml:id="setHeight">
<db:title>void QPaintedTextureImage::setHeight(int <db:emphasis>h</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setHeight</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>h</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">height</db:synopsisinfo>
<db:synopsisinfo role="signature">void setHeight(int h)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the height (<db:code role="parameter">h</db:code>) of the texture image. Triggers an update, if the size changes.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qpaintedtextureimage.xml#height-prop">height</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qpaintedtextureimage.xml#height-prop">height</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSize">
<db:title>void QPaintedTextureImage::setSize(QSize <db:emphasis>size</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setSize</db:methodname>
<db:methodparam>
<db:type>QSize</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">size</db:synopsisinfo>
<db:synopsisinfo role="signature">void setSize(QSize size)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the width and height of the texture image. Triggers an update, if the <db:code role="parameter">size</db:code> changes.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qpaintedtextureimage.xml#size-prop">size</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qpaintedtextureimage.xml#size-prop">size</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setWidth">
<db:title>void QPaintedTextureImage::setWidth(int <db:emphasis>w</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setWidth</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>w</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">width</db:synopsisinfo>
<db:synopsisinfo role="signature">void setWidth(int w)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the width (<db:code role="parameter">w</db:code>) of the texture image. Triggers an update, if the size changes.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qpaintedtextureimage.xml#width-prop">width</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qpaintedtextureimage.xml#width-prop">width</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="update">
<db:title>void QPaintedTextureImage::update(const QRect &amp;<db:emphasis>rect</db:emphasis> = QRect())</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>update</db:methodname>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>rect</db:parameter>
<db:initializer>QRect()</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void update(const QRect &amp;rect)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Immediately triggers the painted texture's <db:link xlink:href="qt3drender-qpaintedtextureimage.xml#paint">paint</db:link>() function, which in turn uploads the new image to the GPU. If you are making multiple changes to a painted texture, consider waiting until all changes are complete before calling update, in order to minimize the number of repaints required.</db:para>
<db:para>Parameter <db:code role="parameter">rect</db:code> is currently unused.</db:para>
</db:section>
</db:section>
</db:article>
