<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>&lt;QtMath&gt; - Generic Math Functions</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.14.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The &lt;QtMath&gt; header file provides various math functions.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QtMath</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>&lt;QtMath&gt; is part of <db:simplelist><db:member>funclists</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>These functions are partly convenience definitions for basic math operations not available in the C or Standard Template Libraries.</db:para>
<db:para>The header also ensures some constants specified in POSIX, but not present in C++ standards (so absent from &lt;math.h&gt; on some platforms), are defined:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>M_E</db:para>
</db:td>
<db:td>
<db:para>The base of the natural logarithms, e = exp(1)</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>M_LOG2E</db:para>
</db:td>
<db:td>
<db:para>The base-two logarithm of e</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>M_LOG10E</db:para>
</db:td>
<db:td>
<db:para>The base-ten logarithm of e</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>M_LN2</db:para>
</db:td>
<db:td>
<db:para>The natural logarithm of two</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>M_LN10</db:para>
</db:td>
<db:td>
<db:para>The natural logarithm of ten</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>M_PI</db:para>
</db:td>
<db:td>
<db:para>The ratio of a circle's circumference to diameter, π</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>M_PI_2</db:para>
</db:td>
<db:td>
<db:para>Half M_PI, π / 2</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>M_PI_4</db:para>
</db:td>
<db:td>
<db:para>Quarter M_PI, π / 4</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>M_1_PI</db:para>
</db:td>
<db:td>
<db:para>The inverse of M_PI, 1 / π</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>M_2_PI</db:para>
</db:td>
<db:td>
<db:para>Twice the inverse of M_PI, 2 / π</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>M_2_SQRTPI</db:para>
</db:td>
<db:td>
<db:para>Two divided by the square root of pi, 2 / √π</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>M_SQRT2</db:para>
</db:td>
<db:td>
<db:para>The square root of two, √2</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>M_SQRT1_2</db:para>
</db:td>
<db:td>
<db:para>The square roof of half, 1 / √2</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>pagekeywords</db:code></db:emphasis>math trigonometry qmath floor ceiling absolute sine cosine tangent inverse tan exponent power natural logarithm pi</db:para>
</db:section>
<db:section xml:id="function-documentation">
<db:title>Function Documentation</db:title>
<db:section xml:id="qAcos">
<db:title>qreal qAcos(qreal <db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>qreal</db:type>
<db:methodname>qAcos</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal qAcos(qreal v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the arccosine of <db:code role="parameter">v</db:code> as an angle in radians. Arccosine is the inverse operation of cosine.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qAtan">qAtan</db:link>()</db:member>
<db:member><db:link xlink:href="qtmath.xml#qAsin">qAsin</db:link>()</db:member>
<db:member><db:link xlink:href="qtmath.xml#qCos">qCos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qAsin">
<db:title>qreal qAsin(qreal <db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>qreal</db:type>
<db:methodname>qAsin</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal qAsin(qreal v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the arcsine of <db:code role="parameter">v</db:code> as an angle in radians. Arcsine is the inverse operation of sine.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qSin">qSin</db:link>()</db:member>
<db:member><db:link xlink:href="qtmath.xml#qAtan">qAtan</db:link>()</db:member>
<db:member><db:link xlink:href="qtmath.xml#qAcos">qAcos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qAtan2">
<db:title>qreal qAtan2(qreal <db:emphasis>y</db:emphasis>, qreal <db:emphasis>x</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>qreal</db:type>
<db:methodname>qAtan2</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal qAtan2(qreal y, qreal x)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the arctangent of a point specified by the coordinates <db:code role="parameter">y</db:code> and <db:code role="parameter">x</db:code>. This function will return the angle (argument) of that point.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qAtan">qAtan</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qAtan">
<db:title>qreal qAtan(qreal <db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>qreal</db:type>
<db:methodname>qAtan</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal qAtan(qreal v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the arctangent of <db:code role="parameter">v</db:code> as an angle in radians. Arctangent is the inverse operation of tangent.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qTan">qTan</db:link>()</db:member>
<db:member><db:link xlink:href="qtmath.xml#qAcos">qAcos</db:link>()</db:member>
<db:member><db:link xlink:href="qtmath.xml#qAsin">qAsin</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qCeil">
<db:title>int qCeil(qreal <db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>int</db:type>
<db:methodname>qCeil</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int qCeil(qreal v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Return the ceiling of the value <db:code role="parameter">v</db:code>.</db:para>
<db:para>The ceiling is the smallest integer that is not less than <db:code role="parameter">v</db:code>. For example, if <db:code role="parameter">v</db:code> is 41.2, then the ceiling is 42.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qFloor">qFloor</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qCos">
<db:title>qreal qCos(qreal <db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>qreal</db:type>
<db:methodname>qCos</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal qCos(qreal v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the cosine of an angle <db:code role="parameter">v</db:code> in radians.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qSin">qSin</db:link>()</db:member>
<db:member><db:link xlink:href="qtmath.xml#qTan">qTan</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qDegreesToRadians">
<db:title>[since 5.1] int qDegreesToRadians(float <db:emphasis>degrees</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>int</db:type>
<db:methodname>qDegreesToRadians</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>degrees</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int qDegreesToRadians(float degrees)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function converts the <db:code role="parameter">degrees</db:code> in float to radians.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">float degrees = 180.0f
float radians = qDegreesToRadians(degrees)
</db:programlisting>
<db:para>This function was introduced in Qt 5.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qRadiansToDegrees">qRadiansToDegrees</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qDegreesToRadians-1">
<db:title>[since 5.1] int qDegreesToRadians(double <db:emphasis>degrees</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>int</db:type>
<db:methodname>qDegreesToRadians</db:methodname>
<db:methodparam>
<db:type>double</db:type>
<db:parameter>degrees</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">int qDegreesToRadians(double degrees)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function converts the <db:code role="parameter">degrees</db:code> in double to radians.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">double degrees = 180.0
double radians = qDegreesToRadians(degrees)
</db:programlisting>
<db:para>This function was introduced in Qt 5.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qRadiansToDegrees">qRadiansToDegrees</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qExp">
<db:title>qreal qExp(qreal <db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>qreal</db:type>
<db:methodname>qExp</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal qExp(qreal v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the exponential function of e to the power of <db:code role="parameter">v</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qLn">qLn</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qFabs">
<db:title>qreal qFabs(qreal <db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>qreal</db:type>
<db:methodname>qFabs</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal qFabs(qreal v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the absolute value of <db:code role="parameter">v</db:code> as a qreal.</db:para>
</db:section>
<db:section xml:id="qFloor">
<db:title>int qFloor(qreal <db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>int</db:type>
<db:methodname>qFloor</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int qFloor(qreal v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Return the floor of the value <db:code role="parameter">v</db:code>.</db:para>
<db:para>The floor is the largest integer that is not greater than <db:code role="parameter">v</db:code>. For example, if <db:code role="parameter">v</db:code> is 41.2, then the floor is 41.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qCeil">qCeil</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qLn">
<db:title>qreal qLn(qreal <db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>qreal</db:type>
<db:methodname>qLn</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal qLn(qreal v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the natural logarithm of <db:code role="parameter">v</db:code>. Natural logarithm uses base e.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qExp">qExp</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qPow">
<db:title>qreal qPow(qreal <db:emphasis>x</db:emphasis>, qreal <db:emphasis>y</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>qreal</db:type>
<db:methodname>qPow</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal qPow(qreal x, qreal y)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the value of <db:code role="parameter">x</db:code> raised to the power of <db:code role="parameter">y</db:code>. That is, <db:code role="parameter">x</db:code> is the base and <db:code role="parameter">y</db:code> is the exponent.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qSqrt">qSqrt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qRadiansToDegrees">
<db:title>[since 5.1] int qRadiansToDegrees(float <db:emphasis>radians</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>int</db:type>
<db:methodname>qRadiansToDegrees</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>radians</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int qRadiansToDegrees(float radians)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function converts the <db:code role="parameter">radians</db:code> in float to degrees.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">float radians = float(M_PI)
float degrees = qRadiansToDegrees(radians)
</db:programlisting>
<db:para>This function was introduced in Qt 5.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qDegreesToRadians">qDegreesToRadians</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qRadiansToDegrees-1">
<db:title>[since 5.1] int qRadiansToDegrees(double <db:emphasis>radians</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>int</db:type>
<db:methodname>qRadiansToDegrees</db:methodname>
<db:methodparam>
<db:type>double</db:type>
<db:parameter>radians</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">int qRadiansToDegrees(double radians)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function converts the <db:code role="parameter">radians</db:code> in double to degrees.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">double radians = M_PI
double degrees = qRadiansToDegrees(radians)
</db:programlisting>
<db:para>This function was introduced in Qt 5.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qDegreesToRadians">qDegreesToRadians</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qSin">
<db:title>qreal qSin(qreal <db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>qreal</db:type>
<db:methodname>qSin</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal qSin(qreal v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the sine of the angle <db:code role="parameter">v</db:code> in radians.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qCos">qCos</db:link>()</db:member>
<db:member><db:link xlink:href="qtmath.xml#qTan">qTan</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qSqrt">
<db:title>qreal qSqrt(qreal <db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>qreal</db:type>
<db:methodname>qSqrt</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal qSqrt(qreal v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the square root of <db:code role="parameter">v</db:code>. This function returns a NaN if <db:code role="parameter">v</db:code> is a negative number.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qPow">qPow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qTan">
<db:title>qreal qTan(qreal <db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>qreal</db:type>
<db:methodname>qTan</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal qTan(qreal v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the tangent of an angle <db:code role="parameter">v</db:code> in radians.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmath.xml#qSin">qSin</db:link>()</db:member>
<db:member><db:link xlink:href="qtmath.xml#qCos">qCos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
