<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Map Viewer (QML)</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Map Viewer example shows how to display and interact with a map, search for an address, and find driving directions.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.5
import QtQuick.Controls 1.4

Menu {
    property int currentMarker
    property int markersCount
    signal itemClicked(string item)

    function update() {
        clear()
        addItem(qsTr(&quot;Delete&quot;)).triggered.connect(function(){itemClicked(&quot;deleteMarker&quot;)})
        addItem(qsTr(&quot;Coordinates&quot;)).triggered.connect(function(){itemClicked(&quot;getMarkerCoordinate&quot;)})
        addItem(qsTr(&quot;Move to&quot;)).triggered.connect(function(){itemClicked(&quot;moveMarkerTo&quot;)})
        if (currentMarker == markersCount-2){
            addItem(qsTr(&quot;Route to next point&quot;)).triggered.connect(function(){itemClicked(&quot;routeToNextPoint&quot;)});
            addItem(qsTr(&quot;Distance to next point&quot;)).triggered.connect(function(){itemClicked(&quot;distanceToNextPoint&quot;)});
        }
        if (currentMarker &lt; markersCount-2){
            addItem(qsTr(&quot;Route to next points&quot;)).triggered.connect(function(){itemClicked(&quot;routeToNextPoints&quot;)});
            addItem(qsTr(&quot;Distance to next point&quot;)).triggered.connect(function(){itemClicked(&quot;distanceToNextPoint&quot;)});
        }

        var menu = addMenu(qsTr(&quot;Draw...&quot;))
        menu.addItem(qsTr(&quot;Image&quot;)).triggered.connect(function(){itemClicked(&quot;drawImage&quot;)})

        if (currentMarker &lt;= markersCount-2){
            menu.addItem(qsTr(&quot;Rectangle&quot;)).triggered.connect(function(){itemClicked(&quot;drawRectangle&quot;)})
            menu.addItem(qsTr(&quot;Circle&quot;)).triggered.connect(function(){itemClicked(&quot;drawCircle&quot;)})
            menu.addItem(qsTr(&quot;Polyline&quot;)).triggered.connect(function(){itemClicked(&quot;drawPolyline&quot;)})
        }

        if (currentMarker &lt; markersCount-2){
            menu.addItem(qsTr(&quot;Polygon&quot;)).triggered.connect(function(){itemClicked(&quot;drawPolygonMenu&quot;)})
        }
    }
}

</db:programlisting>
</db:article>
