<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QML Basic Types</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 5.11.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Description of basic types provided by the Qt QML module.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>QML supports a number of basic types.</db:para>
<db:para>A <db:emphasis>basic type</db:emphasis> is one that refers to a simple value, such as an int or a string. This contrasts with a <db:link xlink:href="qtqml-typesystem-topic.xml#qml-object-types">QML Object Types</db:link>, which refers to an object with properties, signals, methods and so on. Unlike an object type, a basic type cannot be used to declare QML objects: it is not possible, for example, to declare an int{} object or a size{} object.</db:para>
<db:para>Basic types can be used to refer to:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>A single value (e.g. <db:link xlink:href="qml-int.xml">int</db:link> refers to a single number, <db:link xlink:href="qml-var.xml">var</db:link> can refer to a single list of items)</db:para>
</db:listitem>
<db:listitem>
<db:para>A value that contains a simple set of property-value pairs (e.g. <db:link xlink:href="qml-size.xml">size</db:link> refers to a value with width and height attributes)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section xml:id="supported-basic-types">
<db:title>Supported Basic Types</db:title>
<db:para>Some basic types are supported by the engine by default and do not require an <db:link xlink:href="qtqml-syntax-imports.xml">import statement</db:link> to be used, while others do require the client to import the module which provides them. All of the basic types listed below may be used as a property type in a QML document, with the following exceptions:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>list must be used in conjunction with a QML object type</db:para>
</db:listitem>
<db:listitem>
<db:para>enumeration cannot be used directly as the enumeration must be defined by a registered QML object type</db:para>
</db:listitem>
</db:itemizedlist>
<db:section xml:id="basic-types-provided-by-the-qml-language">
<db:title>Basic Types Provided By The QML Language</db:title>
<db:para>The basic types supported natively in the QML language are listed below: <db:variablelist role="qmlbasictypes">
<db:varlistentry>
<db:term><db:link xlink:href="qml-bool.xml" xlink:role="">bool</db:link></db:term>
<db:listitem>
<db:para>a binary true/false value.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-double.xml" xlink:role="">double</db:link></db:term>
<db:listitem>
<db:para>a number with a decimal point, stored in double precision.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-enumeration.xml" xlink:role="">enumeration</db:link></db:term>
<db:listitem>
<db:para>a named enumeration value.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-int.xml" xlink:role="">int</db:link></db:term>
<db:listitem>
<db:para>a whole number, e.g. 0, 10, or -20.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-list.xml" xlink:role="">list</db:link></db:term>
<db:listitem>
<db:para>a list of QML objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-real.xml" xlink:role="">real</db:link></db:term>
<db:listitem>
<db:para>a number with a decimal point.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-string.xml" xlink:role="">string</db:link></db:term>
<db:listitem>
<db:para>a free form text string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-url.xml" xlink:role="">url</db:link></db:term>
<db:listitem>
<db:para>a resource locator.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-var.xml" xlink:role="">var</db:link></db:term>
<db:listitem>
<db:para>a generic property type.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:para>
</db:section>
<db:section xml:id="basic-types-provided-by-qml-modules">
<db:title>Basic Types Provided By QML Modules</db:title>
<db:para>QML modules may extend the QML language with more basic types. For example, the basic types provided by the QtQuick module are listed below: <db:variablelist role="qtquickbasictypes">
<db:varlistentry>
<db:term><db:link xlink:href="qml-date.xml" xlink:role="">date</db:link></db:term>
<db:listitem>
<db:para>a date value.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-point.xml" xlink:role="">point</db:link></db:term>
<db:listitem>
<db:para>a value with x and y attributes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-rect.xml" xlink:role="">rect</db:link></db:term>
<db:listitem>
<db:para>a value with x, y, width and height attributes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-size.xml" xlink:role="">size</db:link></db:term>
<db:listitem>
<db:para>a value with width and height attributes</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:para>
<db:para>The <db:link xlink:href="qml-qtqml-qt.xml">Qt</db:link> global object provides useful functions for manipulating values of basic types.</db:para>
<db:para>Currently only QML modules which are provided by Qt may provide their own basic types, however this may change in future releases of Qt QML. In order to use types provided by a particular QML module, clients must import that module in their QML documents.</db:para>
</db:section>
</db:section>
<db:section xml:id="property-change-behavior-for-basic-types">
<db:title>Property Change Behavior for Basic Types</db:title>
<db:para>Some basic types have properties: for example, the <db:link xlink:href="qml-font.xml">font</db:link> type has pixelSize, family and bold properties. Unlike properties of <db:link xlink:href="qtqml-typesystem-topic.xml#qml-object-types">object types</db:link>, properties of basic types do not provide their own property change signals. It is only possible to create a property change signal handler for the basic type property itself:</db:para>
<db:programlisting language="cpp">Text {
    // invalid!
    onFont.pixelSizeChanged: doSomething()

    // also invalid!
    font {
        onPixelSizeChanged: doSomething()
    }

    // but this is ok
    onFontChanged: doSomething()
}
</db:programlisting>
<db:para>Be aware, however, that a property change signal for a basic type is emitted whenever <db:emphasis>any</db:emphasis> of its attributes have changed, as well as when the property itself changes. Take the following code, for example:</db:para>
<db:programlisting language="qml">Text {
    onFontChanged: console.log(&quot;font changed&quot;)

    Text { id: otherText }

    focus: true

    // changing any of the font attributes, or reassigning the property
    // to a different font value, will invoke the onFontChanged handler
    Keys.onDigit1Pressed: font.pixelSize += 1
    Keys.onDigit2Pressed: font.b = !font.b
    Keys.onDigit3Pressed: font = otherText.font
}
</db:programlisting>
<db:para>In contrast, properties of an <db:link xlink:href="qtqml-typesystem-topic.xml#qml-object-types">object type</db:link> emit their own property change signals, and a property change signal handler for an object-type property is only invoked when the property is reassigned to a different object value.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtqml-typesystem-topic.xml">The QML Type System</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
