<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ContactDetails QML Type</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qml-qtlocation-contactdetails.xml">ContactDetails</db:link> type holds contact details for a <db:link xlink:href="qml-qtlocation-place.xml">Place</db:link>.</db:para>
<db:para>This type was introduced in Qt Location 5.5.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtLocation 5.3</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt Location 5.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>ContactDetails is part of <db:simplelist><db:member>qml-QtLocation5-places</db:member><db:member>qml-QtLocation5-places-data</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtlocation-contactdetails.xml">ContactDetails</db:link> type is a map of <db:link xlink:href="qml-qtlocation-contactdetail.xml">ContactDetail</db:link> objects. To access contact details in the map use the <db:link xlink:href="qml-qtlocation-contactdetails.xml#keys-method">keys</db:link>() method to get the list of keys stored in the map and then use the <db:code>[]</db:code> operator to access the <db:link xlink:href="qml-qtlocation-contactdetail.xml">ContactDetail</db:link> items.</db:para>
<db:para>The following keys are defined in the API. <db:link xlink:href="qml-qtlocation-plugin.xml">Plugin</db:link> implementations are free to define additional keys.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>phone</db:para>
</db:listitem>
<db:listitem>
<db:para>fax</db:para>
</db:listitem>
<db:listitem>
<db:para>email</db:para>
</db:listitem>
<db:listitem>
<db:para>website</db:para>
</db:listitem>
</db:itemizedlist>
<db:para><db:link xlink:href="qml-qtlocation-contactdetails.xml">ContactDetails</db:link> instances are only ever used in the context of <db:link xlink:href="qml-qtlocation-place.xml">Places</db:link>. It is not possible to create a <db:link xlink:href="qml-qtlocation-contactdetails.xml">ContactDetails</db:link> instance directly or re-assign <db:link xlink:href="qml-qtlocation-contactdetails.xml">ContactDetails</db:link> instances to <db:link xlink:href="qml-qtlocation-place.xml">Places</db:link>. Modification of <db:link xlink:href="qml-qtlocation-contactdetails.xml">ContactDetails</db:link> can only be accomplished via Javascript.</db:para>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:para>The following example shows how to access all <db:link xlink:href="qml-qtlocation-contactdetail.xml">ContactDetails</db:link> and print them to the console:</db:para>
<db:programlisting language="qml">import QtPositioning 5.5
import QtLocation 5.6

function printContactDetails(contactDetails) {
    var keys = contactDetails.keys();
    for (var i = 0; i &lt; keys.length; ++i) {
        var contactList = contactDetails[keys[i]];
        for (var j = 0; j &lt; contactList.length; ++j) {
            console.log(contactList[j].label + &quot;: &quot; + contactList[j].value);
        }
    }
}
</db:programlisting>
<db:para>The returned list of contact details is an <db:link xlink:href="qtquick-modelviewsdata-cppmodels.xml#qobjectlist-based-model">object list</db:link> and so can be used directly as a data model. For example, the following demonstrates how to display a list of contact phone numbers in a list view:</db:para>
<db:programlisting language="qml">import QtQuick 2.0
import QtPositioning 5.5
import QtLocation 5.6

ListView {
    model: place.contactDetails.phone;
    delegate: Text { text: modelData.label + &quot;: &quot; + modelData.value }
}
</db:programlisting>
<db:para>The following example demonstrates how to assign a single phone number to a place in JavaScript:</db:para>
<db:programlisting language="qml">function writeSingle() {
    var phoneNumber = Qt.createQmlObject('import QtLocation 5.3; ContactDetail {}', place);
    phoneNumber.label = &quot;Phone&quot;;
    phoneNumber.value = &quot;555-5555&quot;
    place.contactDetails.phone = phoneNumber;
}
</db:programlisting>
<db:para>The following demonstrates how to assign multiple phone numbers to a place in JavaScript:</db:para>
<db:programlisting language="qml">function writeMultiple() {
    var bob = Qt.createQmlObject('import QtLocation 5.3; ContactDetail {}', place);
    bob.label = &quot;Bob&quot;;
    bob.value = &quot;555-5555&quot;

    var alice = Qt.createQmlObject('import QtLocation 5.3; ContactDetail {}', place);
    alice.label = &quot;Alice&quot;;
    alice.value = &quot;555-8745&quot;

    var numbers = new Array();
    numbers.push(bob);
    numbers.push(alice);

    place.contactDetails.phone = numbers;
}
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="keys-method">
<db:title>variant keys()</db:title>
<db:para>Returns an array of contact detail keys currently stored in the map.</db:para>
</db:section>
</db:section>
</db:article>
