<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Controls Configuration File</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Quick Controls Reference Documentation.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt Quick Controls support a special configuration file, <db:code>qtquickcontrols2.conf</db:code>, which is built into an application's resources.</db:para>
<db:para>The configuration file can specify the preferred style and certain style-specific attributes. The following example specifies that the preferred style is the <db:link xlink:href="qtquickcontrols-material.xml">Material style</db:link>. Furthermore, when the application is run with the Material style, its theme is light and the accent and primary colors are teal and blue grey, respectively. However, if the application is run with the <db:link xlink:href="qtquickcontrols-universal.xml">Universal style</db:link> instead, the accent color is red and the appropriate theme is chosen based on the system theme colors.</db:para>
<db:programlisting language="cpp">[Controls]
Style=Material

[Universal]
Theme=System
Accent=Red

[Material]
Theme=Light
Accent=Teal
Primary=BlueGrey
</db:programlisting>
<db:para>It is possible to specify a custom location for the configuration file with the <db:link xlink:href="qtquickcontrols-environment.xml">QT_QUICK_CONTROLS_CONF</db:link> environment variable.</db:para>
<db:section xml:id="controls-section">
<db:title>Controls Section</db:title>
<db:para>The following values can be specified in a <db:code>Controls</db:code> section of the configuration file:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Variable</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>Style</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the style to run the application with. The value can be the name of one of the <db:link xlink:href="qtquickcontrols-styles.xml#available-styles">built-in styles</db:link> or a <db:link xlink:href="qtquickcontrols-customize.xml#creating-a-custom-style">custom style</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>FallbackStyle</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the style to use for controls that are not implemented. The style must be one of the <db:link xlink:href="qtquickcontrols-styles.xml#available-styles">built-in styles</db:link>. By default, the <db:link xlink:href="qtquickcontrols-basic.xml">Basic</db:link> style is used.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="imagine-section">
<db:title>Imagine Section</db:title>
<db:para>The following table lists values that can be used to configure the <db:link xlink:href="qtquickcontrols-imagine.xml">Imagine style</db:link> in an <db:code>Imagine</db:code> section of the configuration file:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Variable</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>Path</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the <db:link xlink:href="qtquickcontrols-imagine.xml#imagine-path-attached-prop">path</db:link> to the directory that contains the Imagine style assets. If not specified, the built-in assets are used.</db:para>
<db:para>For example, to specify a path to a directory stored in the <db:link xlink:href="resources.xml">resource system</db:link>:</db:para>
<db:programlisting language="cpp" role="bad">[Imagine]
Path=:/imagine-assets
</db:programlisting>
<db:para>To specify a relative path to a local directory:</db:para>
<db:programlisting language="cpp" role="bad">[Imagine]
Path=imagine-assets
</db:programlisting>
<db:note>
<db:para>Due to a technical limitation, the path should not be named <db:emphasis>&quot;imagine&quot;</db:emphasis> if it is relative to the <db:code>qtquickcontrols2.conf</db:code> file.</db:para>
</db:note>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="material-section">
<db:title>Material Section</db:title>
<db:para>The following table lists values that can be used to configure the <db:link xlink:href="qtquickcontrols-material.xml">Material style</db:link> in a <db:code>Material</db:code> section of the configuration file:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Variable</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>Theme</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-theme-attached-prop">Material theme</db:link>. The value can be one of the available themes, for example <db:code>&quot;Dark&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Variant</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the Material variant. The Material Design has two variants: a normal variant designed for touch devices, and a dense variant for desktop. The dense variant uses smaller sizes for controls and their fonts.</db:para>
<db:para>The value can be <db:code>&quot;Normal&quot;</db:code> or <db:code>&quot;Dense&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Accent</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-accent-attached-prop">Material accent color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, but it is recommended to use one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;Teal&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Primary</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-primary-attached-prop">Material primary color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, but it is recommended to use one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;BlueGrey&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Foreground</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-foreground-attached-prop">Material foreground color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, or one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;Brown&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Background</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-material.xml#material-background-attached-prop">Material background color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, or one of the <db:link xlink:href="qtquickcontrols-material.xml#pre-defined-material-colors">pre-defined Material colors</db:link>, for example <db:code>&quot;Grey&quot;</db:code>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="universal-section">
<db:title>Universal Section</db:title>
<db:para>The following table lists values that can be used to configure the <db:link xlink:href="qtquickcontrols-universal.xml">Universal style</db:link> in a <db:code>Universal</db:code> section of the configuration file:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Variable</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>Theme</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-universal.xml#universal-theme-attached-prop">Universal theme</db:link>. The value can be one of the available themes, for example <db:code>&quot;Dark&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Accent</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-universal.xml#universal-accent-attached-prop">Universal accent color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, but it is recommended to use one of the <db:link xlink:href="qtquickcontrols-universal.xml#pre-defined-universal-colors">pre-defined Universal colors</db:link>, for example <db:code>&quot;Violet&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Foreground</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-universal.xml#universal-foreground-attached-prop">Universal foreground color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, or one of the <db:link xlink:href="qtquickcontrols-universal.xml#pre-defined-universal-colors">pre-defined Universal colors</db:link>, for example <db:code>&quot;Brown&quot;</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Background</db:code></db:para>
</db:td>
<db:td>
<db:para>Specifies the default <db:link xlink:href="qtquickcontrols-universal.xml#universal-background-attached-prop">Universal background color</db:link>. The value can be any <db:link xlink:href="qml-color.xml">color</db:link>, or one of the <db:link xlink:href="qtquickcontrols-universal.xml#pre-defined-universal-colors">pre-defined Universal colors</db:link>, for example <db:code>&quot;Steel&quot;</db:code>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="font-configuration">
<db:title>Font Configuration</db:title>
<db:para>The default <db:link xlink:href="qml-qtquick-controls-control.xml#font-prop">font</db:link> can be specified in a <db:code>Font</db:code> sub-group in each style's section in the configuration file:</db:para>
<db:programlisting language="cpp">[Basic]
Font\Family=Open Sans
Font\PixelSize=20
</db:programlisting>
<db:para>Supported font attributes:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Variable</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>Family</db:code></db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qfont.xml#family">font family</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>PointSize</db:code></db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qfont.xml#pointSizeF">point size</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>PixelSize</db:code></db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qfont.xml#pixelSize">pixel size</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>StyleHint</db:code></db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qfont.xml#styleHint">style hint</db:link>. Available values: <db:code>SansSerif</db:code>, <db:code>Helvetica</db:code>, <db:code>Serif</db:code>, <db:code>Times</db:code>, <db:code>TypeWriter</db:code>, <db:code>Courier</db:code>, <db:code>OldEnglish</db:code>, <db:code>Decorative</db:code>, <db:code>Monospace</db:code>, <db:code>Fantasy</db:code>, <db:code>Cursive</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Weight</db:code></db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qfont.xml#weight">weight</db:link>. Qt uses a weighting scale from <db:code>1</db:code> to <db:code>1000</db:code> compatible with OpenType. A weight of <db:code>1</db:code> will be thin, whilst <db:code>1000</db:code> will be extremely black. Available pre-defined weights: <db:code>Thin</db:code> (100), <db:code>ExtraLight</db:code> (200), <db:code>Light</db:code> (300), <db:code>Normal</db:code> (400), <db:code>Medium</db:code> (500), <db:code>DemiBold</db:code> (600), <db:code>Bold</db:code> (700), <db:code>ExtraBold</db:code> (800), <db:code>Black</db:code> (900).</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Style</db:code></db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qfont.xml#style">style</db:link>. Available values: <db:code>StyleNormal</db:code>, <db:code>StyleItalic</db:code>, <db:code>StyleOblique</db:code>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="palette-configuration">
<db:title>Palette Configuration</db:title>
<db:para>The default <db:code>palette</db:code> can be configured for each style using the <db:code>Palette</db:code> sub-group in the configuration file. The <db:code>Palette</db:code> sub-group can be defined in two alternative ways:</db:para>
<db:programlisting language="cpp">[Fusion]
Palette\Window=#dedede
Palette\WindowText=#212121
</db:programlisting>
<db:para>See <db:link xlink:href="qml-qtquick-palette.xml">Palette</db:link> QML type for more information.</db:para>
</db:section>
<db:section xml:id="using-the-configuration-file-in-a-project">
<db:title>Using the Configuration File in a Project</db:title>
<db:para>In order to make it possible for Qt Quick Controls to find the configuration file, it must be built into application's resources using the <db:link xlink:href="resources.xml">The Qt Resource System</db:link>. Here's an example <db:code>.qrc</db:code> file:</db:para>
<db:programlisting language="cpp">&amp;lt;!DOCTYPE RCC&amp;gt;&amp;lt;RCC version=&quot;1.0&quot;&amp;gt;
&amp;lt;qresource prefix=&quot;/&quot;&amp;gt;
    &amp;lt;file&amp;gt;qtquickcontrols2.conf&amp;lt;/file&amp;gt;
&amp;lt;/qresource&amp;gt;
&amp;lt;/RCC&amp;gt;
</db:programlisting>
<db:note>
<db:para>Qt Quick Controls uses a file selector to load the configuration file. It is possible to provide a different configuration file for different platforms and locales. See <db:link xlink:href="qfileselector.xml">QFileSelector</db:link> documentation for more details.</db:para>
</db:note>
<db:para>Finally, the <db:code>.qrc</db:code> file must be listed in the application's build file. For example:</db:para>
<db:section xml:id="using-cmake">
<db:title>Using CMake</db:title>
<db:programlisting language="cpp" role="bad">set(CMAKE_AUTORCC ON)
qt_add_executable(my_app
    application.qrc
    main.cpp
    ...
)
</db:programlisting>
</db:section>
<db:section xml:id="using-qmake">
<db:title>Using qmake</db:title>
<db:programlisting language="cpp" role="bad">RESOURCES = application.qrc
...
</db:programlisting>
<db:para>See also: <db:link xlink:href="resources.xml#build-system-integration">Build System Integration</db:link></db:para>
</db:section>
</db:section>
<db:section xml:id="related-information">
<db:title>Related Information</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-styles.xml">Styling Qt Quick Controls</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquickcontrols-environment.xml">Supported Environment Variables in Qt Quick Controls</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
