<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt WebEngine Features</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Summarizes Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link> features.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link> supports the following Chromium features:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtwebengine-features.xml#audio-and-video-codecs">Audio and Video Codecs</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtwebengine-features.xml#chromium-devtools">Chromium DevTools</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtwebengine-features.xml#drag-and-drop">Drag and Drop</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtwebengine-features.xml#fullscreen">Fullscreen</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtwebengine-features.xml#html5-drm">HTML5 DRM</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtwebengine-features.xml#html5-geolocation">HTML5 Geolocation</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtwebengine-features.xml#pepper-plugin-api">Pepper Plugin API</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtwebengine-3rdparty-webrtc.xml">WebRTC</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:section xml:id="audio-and-video-codecs">
<db:title>Audio and Video Codecs</db:title>
<db:para>Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link> supports the MPEG-4 Part 14 (MP4) file format only if the required proprietary audio and video codecs, such as H.264 and MPEG layer-3 (MP3), have been enabled. Proprietary codecs can be enabled by passing the following option to qmake when building Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link>:</db:para>
<db:programlisting language="cpp">qmake WEBENGINE_CONFIG+=use_proprietary_codecs
</db:programlisting>
<db:warning>
<db:para>When distributing proprietary codec libraries, you must acquire licenses for them.</db:para>
</db:warning>
<db:para><db:link xlink:href="http://ffmpeg.org/">FFmpeg</db:link> is a cross-platform solution to record, convert, and stream audio and video. It can be configured for use with several codecs, which rises licensing issues during distribution with the codec libraries. For some codecs, open source implementations, such as <db:link xlink:href="http://www.openh264.org/">OpenH264</db:link>, are available.</db:para>
</db:section>
<db:section xml:id="chromium-devtools">
<db:title>Chromium DevTools</db:title>
<db:para>The Chromium DevTools provide the ability to inspect and debug layout and performance issues of any web content.</db:para>
<db:para>This feature can be tested by launching a Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link> application with the command line option <db:code>--remote-debugging-port=[your-port]</db:code> or by setting the environment variable <db:code>QTWEBENGINE_REMOTE_DEBUGGING</db:code>, and then using a Chromium based browser (such as <db:link xlink:href="qtwebengine-webenginewidgets-demobrowser-example.xml">Demo Browser</db:link> or <db:link xlink:href="qtwebengine-webengine-quicknanobrowser-example.xml">Nano Browser</db:link>) to connect to <db:code>http://localhost:[your-port]</db:code>.</db:para>
<db:para>For more information, see <db:link xlink:href="qtwebengine-debugging.xml">Qt WebEngine Debugging and Profiling</db:link>.</db:para>
</db:section>
<db:section xml:id="drag-and-drop">
<db:title>Drag and Drop</db:title>
<db:para>Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link> supports HTML5 drag and drop.</db:para>
<db:para>This feature can be tested by opening an HTML5 drag and drop demo, such as <db:link xlink:href="http://html5demos.com/drag">HTML5 Demos - Drag and Drop</db:link>, <db:link xlink:href="http://html5demos.com/drag-anything">HTML5 Demos - Simple Drag and Drop</db:link>, or <db:link xlink:href="http://html5demos.com/dnd-upload">HTML5 Demos - Drag and Drop, Automatic Upload</db:link>, in <db:link xlink:href="qtwebengine-webenginewidgets-demobrowser-example.xml">Demo Browser</db:link> or <db:link xlink:href="qtwebengine-webengine-quicknanobrowser-example.xml">Nano Browser</db:link>.</db:para>
<db:para>Dragging files into the browser is not actually part of HTML5, but it is supported. It can be tested by opening <db:link xlink:href="http://html5demos.com/file-api">HTML5 Demos - File API</db:link>.</db:para>
<db:para>Support for this feature was added in Qt 5.6.3.</db:para>
</db:section>
<db:section xml:id="fullscreen">
<db:title>Fullscreen</db:title>
<db:para>Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link> supports viewing web content in fullscreen mode. For more information, see <db:link xlink:href="qml-qtwebengine-webenginesettings.xml#fullscreenSupportEnabled-prop">WebEngineSettings.fullscreenSupportEnabled</db:link>, <db:link xlink:href="qml-qtwebengine-webengineview.xml#fullScreenRequested-signal">WebEngineView.fullScreenRequested</db:link>, <db:link xlink:href="qwebenginesettings.xml#WebAttribute-enum">QWebEngineSettings::FullScreenSupportEnabled</db:link>, and QWebEnginePage::fullScreenRequested.</db:para>
<db:para>This feature can be tested by playing a video from YouTube in <db:link xlink:href="qtwebengine-webenginewidgets-demobrowser-example.xml">Demo Browser</db:link> or <db:link xlink:href="qtwebengine-webengine-quicknanobrowser-example.xml">Nano Browser</db:link>, and clicking the full screen icon to go into fullscreen mode.</db:para>
<db:para>Support for this feature was added in Qt 5.6.0.</db:para>
</db:section>
<db:section xml:id="html5-drm">
<db:title>HTML5 DRM</db:title>
<db:para>Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link> supports viewing DRM protected videos if the <db:link xlink:href="http://www.widevine.com/wv_drm.html">Widevine DRM</db:link> plugin has been installed.</db:para>
<db:para>The video format most commonly used by DRM services, H.264, requires proprietary audio and video codecs. For more information about enabling the codecs, see <db:link xlink:href="qtwebengine-features.xml#audio-and-video-codecs">Audio and Video Codecs</db:link>.</db:para>
<db:para>This feature can be tested by playing a video in <db:link xlink:href="qtwebengine-webenginewidgets-demobrowser-example.xml">Demo Browser</db:link> or <db:link xlink:href="qtwebengine-webengine-quicknanobrowser-example.xml">Nano Browser</db:link> from <db:link xlink:href="http://demo.castlabs.com/">castLabs</db:link>, <db:link xlink:href="http://ssdemo04.swankmp.net/">Swank Motion Pictures, Inc.</db:link>, or <db:link xlink:href="https://shaka-player-demo.appspot.com/demo/">Shaka Player</db:link>.</db:para>
<db:para>Support for this feature was added in Qt 5.6.3.</db:para>
</db:section>
<db:section xml:id="html5-geolocation">
<db:title>HTML5 Geolocation</db:title>
<db:para>Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link> supports JavaScript Geolocation API with <db:link xlink:href="qtlocation-index.xml">Qt Location</db:link> as a backend. The application has to explicitly allow the feature by using <db:link xlink:href="qwebenginepage.xml#Feature-enum">QWebEnginePage::Geolocation</db:link> or <db:link xlink:href="qml-qtwebengine-webengineview.xml#Feature-prop">WebEngineView.Feature</db:link>.</db:para>
<db:para>This feature can be tested if Qt Location has been built before Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link>. The <db:code>http://html5demos.com/geo</db:code> page can be opened in the <db:link xlink:href="qtwebengine-webenginewidgets-demobrowser-example.xml">Demo Browser</db:link> and allowed to find the current position of the user. Note that on Windows an external GPS receiver must be connected to the application. For more information, see <db:link xlink:href="qtpositioning-index.xml">Qt Positioning</db:link>.</db:para>
<db:para>Support for this feature was added in Qt 5.5.0.</db:para>
</db:section>
<db:section xml:id="pepper-plugin-api">
<db:title>Pepper Plugin API</db:title>
<db:para>Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link> supports loading Pepper Plugin API (PPAPI) plugins if <db:link xlink:href="qml-qtwebengine-webenginesettings.xml#pluginsEnabled-prop">WebEngineSettings::pluginsEnabled</db:link> or <db:link xlink:href="qwebenginesettings.xml#WebAttribute-enum">QWebEngineSettings::PluginsEnabled</db:link> is set.</db:para>
<db:para>Except for the Adobe Flash Player plugin, the plugins must be loaded manually using the Chromium command line syntax with the <db:code>--register-pepper-plugins</db:code> argument. The argument value is a list of entries, separated by commas, that contain the file path and one or several MIME types, separated by semicolons:</db:para>
<db:programlisting language="cpp">&lt;file-path-plugin1&gt;;&lt;mime-type-plugin1&gt;,&lt;file-path-plugin2&gt;;&lt;mime-type1-plugin2&gt;;&lt;mime-type2-plugin2&gt;
</db:programlisting>
<db:para>For example:</db:para>
<db:programlisting language="cpp">--register-pepper-plugins=&quot;libppapi_example.so;application/x-ppapi-example&quot;
</db:programlisting>
<db:para>The MIME type is important because it determines which embeds the plugin is used for.</db:para>
<db:para>Support for this feature was added in Qt 5.6.0.</db:para>
<db:section xml:id="pepper-flash-player-plugin-support">
<db:title>Pepper Flash Player Plugin Support</db:title>
<db:para>The Pepper Flash player plugin can be loaded automatically if it is installed in one of the following locations, depending on the platform:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Windows</db:para>
<db:programlisting language="cpp">C:\Windows\SysWOW64\Macromed\Flash\pepflashplayer*.dll
C:\Windows\System32\Macromed\Flash\pepflashplayer*.dll
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>OS X</db:para>
<db:programlisting language="cpp">/Library/Internet Plug-Ins/PepperFlashPlayer/PepperFlashPlayer.plugin
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>Linux</db:para>
<db:programlisting language="cpp">/usr/lib/pepperflashplugin-nonfree/libpepflashplayer.so
/usr/lib/adobe-flashplugin/libpepflashplayer.so
/usr/lib/PepperFlash/libpepflashplayer.so
/usr/lib64/chromium/PepperFlash/libpepflashplayer.so
</db:programlisting>
</db:listitem>
</db:itemizedlist>
<db:para>You can also load the Pepper Flash player from a specific location by using command line arguments:</db:para>
<db:programlisting language="cpp">--ppapi-flash-path=./libpepflashplayer.so
</db:programlisting>
<db:para>By default, the Flash version is set to <db:code>11.2.999.999</db:code>. You can use the <db:code>ppapi-flash-version=</db:code> argument to set another Flash version in the format <db:code>major.minor.build.revision</db:code>:</db:para>
<db:programlisting language="cpp">--ppapi-flash-version=16.0.0.235
</db:programlisting>
<db:para>This feature can be tested in <db:link xlink:href="qtwebengine-webenginewidgets-demobrowser-example.xml">Demo Browser</db:link> or <db:link xlink:href="qtwebengine-webengine-quicknanobrowser-example.xml">Nano Browser</db:link> if the Adobe Flash PPAPI plugin is installed and plugins are enabled in the browser. To test the feature, the <db:code>https://helpx.adobe.com/flash-player.html</db:code> page can be opened in the browser.</db:para>
</db:section>
</db:section>
<db:section xml:id="webrtc">
<db:title>WebRTC</db:title>
<db:para>WebRTC provides browsers with Real-Time Communications (RTC) capabilities via simple APIs. For more information, see <db:link xlink:href="qml-qtwebengine-webengineview.xml#Feature-prop">WebEngineView.Feature</db:link> and <db:link xlink:href="qwebenginepage.xml#Feature-enum">QWebEnginePage::Feature</db:link>.</db:para>
<db:para>This feature can be tested by setting up a webcam or microphone and then opening <db:code>https://test.webrtc.org/</db:code> in <db:link xlink:href="qtwebengine-webenginewidgets-simplebrowser-example.xml">Simple Browser</db:link> or <db:link xlink:href="qtwebengine-webengine-quicknanobrowser-example.xml">Nano Browser</db:link>.</db:para>
</db:section>
</db:article>
