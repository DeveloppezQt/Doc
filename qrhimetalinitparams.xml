<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title></db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Metal specific initialization parameters.</db:para>
<db:para>This struct was introduced in Qt 6.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>rhi/qrhi.h</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::GuiPrivate)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui-private</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:note>
<db:para>This is a RHI API with limited compatibility guarantees, see <db:link xlink:href="qrhi.xml">QRhi</db:link> for details.</db:para>
</db:note>
<db:para>A Metal-based <db:link xlink:href="qrhi.xml">QRhi</db:link> needs no special parameters for initialization.</db:para>
<db:programlisting language="cpp" role="bad">QRhiMetalInitParams params;
rhi = QRhi::create(QRhi::Metal, &amp;params);
</db:programlisting>
<db:note>
<db:para>Metal API validation cannot be enabled programmatically by the <db:link xlink:href="qrhi.xml">QRhi</db:link>. Instead, either run the debug build of the application in XCode, by generating a <db:code>.xcodeproj</db:code> file via <db:code>cmake -G Xcode</db:code>, or set the environment variable <db:code>METAL_DEVICE_WRAPPER_TYPE=1</db:code>. The variable needs to be set early on in the environment, perferably before starting the process; attempting to set it at <db:link xlink:href="qrhi.xml">QRhi</db:link> creation time is not functional in practice. (too late probably)</db:para>
</db:note>
<db:note>
<db:para><db:link xlink:href="qrhiswapchain.xml">QRhiSwapChain</db:link> can only target <db:link xlink:href="qwindow.xml">QWindow</db:link> instances that have their surface type set to <db:link xlink:href="qsurface.xml#SurfaceType-enum">QSurface::MetalSurface</db:link>.</db:para>
</db:note>
<db:section xml:id="working-with-existing-metal-devices">
<db:title>Working with existing Metal devices</db:title>
<db:para>When interoperating with another graphics engine, it may be necessary to get a <db:link xlink:href="qrhi.xml">QRhi</db:link> instance that uses the same Metal device. This can be achieved by passing a pointer to a <db:link xlink:href="qrhimetalnativehandles.xml">QRhiMetalNativeHandles</db:link> to <db:link xlink:href="qrhi.xml#create">QRhi::create</db:link>(). The device must be set to a non-null value then. Optionally, a command queue object can be specified as well.</db:para>
<db:para>The <db:link xlink:href="qrhi.xml">QRhi</db:link> does not take ownership of any of the external objects.</db:para>
</db:section>
</db:section>
</db:article>
