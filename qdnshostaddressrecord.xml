<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QDnsHostAddressRecord Class</db:title>
<db:productname>QtNetwork</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Network Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdnshostaddressrecord.xml">QDnsHostAddressRecord</db:link> class stores information about a host address record.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDnsHostAddressRecord</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += network</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QDnsHostAddressRecord is part of <db:simplelist><db:member><db:link xlink:href="network.xml">Network Programming API</db:link></db:member><db:member>shared</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>When performing an address lookup, zero or more records will be returned. Each record is represented by a <db:link xlink:href="qdnshostaddressrecord.xml">QDnsHostAddressRecord</db:link> instance.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdnslookup.xml">QDnsLookup</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QDnsHostAddressRecord">
<db:title>QDnsHostAddressRecord::QDnsHostAddressRecord()</db:title>
<db:para>Constructs an empty host address record object.</db:para>
</db:section>
<db:section xml:id="QDnsHostAddressRecord-1">
<db:title>QDnsHostAddressRecord::QDnsHostAddressRecord(const QDnsHostAddressRecord &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QDnsHostAddressRecord">
<db:title>[noexcept] QDnsHostAddressRecord::~QDnsHostAddressRecord()</db:title>
<db:para>Destroys a host address record.</db:para>
</db:section>
<db:section xml:id="name">
<db:title>QString QDnsHostAddressRecord::name() const</db:title>
<db:para>Returns the name for this record.</db:para>
</db:section>
<db:section xml:id="swap">
<db:title>void QDnsHostAddressRecord::swap(QDnsHostAddressRecord &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps this host address record instance with <db:code role="parameter">other</db:code>. This function is very fast and never fails.</db:para>
</db:section>
<db:section xml:id="timeToLive">
<db:title>quint32 QDnsHostAddressRecord::timeToLive() const</db:title>
<db:para>Returns the duration in seconds for which this record is valid.</db:para>
</db:section>
<db:section xml:id="value">
<db:title>QHostAddress QDnsHostAddressRecord::value() const</db:title>
<db:para>Returns the value for this host address record.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QDnsHostAddressRecord &amp;QDnsHostAddressRecord::operator=(const QDnsHostAddressRecord &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns the data of the <db:code role="parameter">other</db:code> object to this record object, and returns a reference to it.</db:para>
</db:section>
</db:section>
</db:article>
