<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Audio Recorder Example</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>Discovering the available devices and supported codecs.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis>Audio Recorder</db:emphasis> demonstrates how to identify the available devices and supported codecs, and the use of <db:link xlink:href="qaudiorecorder.xml">QAudioRecorder</db:link> class.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/audiorecorder.png"/>
</db:imageobject>
</db:mediaobject>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="http://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section xml:id="displaying-the-window-and-audio-settings">
<db:title>Displaying the Window and Audio Settings</db:title>
<db:para>We display a window for the user to select the appropriate audio input, codec, container, and sample rate. Allow a setting of either quality or bitrate. Finally, the output file can be selected and recording can be started.</db:para>
<db:para>The lists are setup using the <db:link xlink:href="qaudiorecorder.xml#audioInputs">audioInputs</db:link>(), <db:link xlink:href="qmediarecorder.xml#supportedAudioCodecs">supportedAudioCodecs</db:link>(), <db:link xlink:href="qmediarecorder.xml#supportedContainers">supportedContainers</db:link>(), <db:link xlink:href="qmediarecorder.xml#supportedContainers">supportedContainers</db:link>(), and <db:link xlink:href="qmediarecorder.xml#supportedAudioSampleRates">supportedAudioSampleRates</db:link>() methods. The quality slider is setup from 0 (zero) to <db:link xlink:href="qmultimedia.xml#EncodingQuality-enum">QMultimedia::VeryHighQuality</db:link> with a default value of <db:link xlink:href="qmultimedia.xml#EncodingQuality-enum">QMultimedia::NormalQuality</db:link>, while the bitrates are hardcoded into the list.</db:para>
</db:section>
<db:section xml:id="recording-audio">
<db:title>Recording Audio</db:title>
<db:para>To record audio we simply create a <db:link xlink:href="qaudiorecorder.xml">QAudioRecorder</db:link> object.</db:para>
<db:programlisting language="cpp">audioRecorder = new QAudioRecorder(this);
</db:programlisting>
<db:para>And setup the lists as described above. The text on the record and pause buttons are toggled depending on the <db:link xlink:href="qmediarecorder.xml#State-enum">state</db:link> of the <db:code>audioRecorder</db:code> object. This means that if the state is <db:link xlink:href="qmediarecorder.xml#State-enum">QMediaRecorder::StoppedState</db:link> then the button text will be &quot;Record&quot; and &quot;Pause&quot;. In <db:link xlink:href="qmediarecorder.xml#State-enum">QMediaRecorder::RecordingState</db:link> the record button will have the text &quot;Stop&quot;, and in <db:link xlink:href="qmediarecorder.xml#State-enum">QMediaRecorder::PausedState</db:link> the pause button will have the text &quot;Resume&quot;.</db:para>
<db:para>Pressing the buttons will also result in a toggle based on the state. If recording is stopped, then pressing the record button will setup the <db:link xlink:href="qaudioencodersettings.xml">QAudioEncoderSettings</db:link> based on the values of the selection lists, will set the encoding settings and container on the <db:code>audioRecorder</db:code> object, and start recording using the <db:link xlink:href="qmediarecorder.xml#record">record</db:link>() method.</db:para>
<db:programlisting language="cpp">QAudioEncoderSettings settings;
settings.setCodec(boxValue(ui-&gt;audioCodecBox).toString());
settings.setSampleRate(boxValue(ui-&gt;sampleRateBox).toInt());
settings.setBitRate(boxValue(ui-&gt;bitrateBox).toInt());
settings.setQuality(QMultimedia::EncodingQuality(ui-&gt;qualitySlider-&gt;value()));
settings.setEncodingMode(ui-&gt;constantQualityRadioButton-&gt;isChecked() ?
                         QMultimedia::ConstantQualityEncoding :
                         QMultimedia::ConstantBitRateEncoding);

QString container = boxValue(ui-&gt;containerBox).toString();

audioRecorder-&gt;setEncodingSettings(settings, QVideoEncoderSettings(), container);
audioRecorder-&gt;record();
</db:programlisting>
<db:para>While recording, the status bar of the application is updated with duration information from the <db:link xlink:href="qmediarecorder.xml#durationChanged">durationChanged</db:link> signal from the <db:code>audioRecorder</db:code> object.</db:para>
<db:programlisting language="cpp">ui-&gt;statusbar-&gt;showMessage(tr(&quot;Recorded %1 sec&quot;).arg(duration / 1000));
</db:programlisting>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="multimedia/audiorecorder/audiorecorder.cpp">multimedia/audiorecorder/audiorecorder.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimedia/audiorecorder/audiorecorder.h">multimedia/audiorecorder/audiorecorder.h</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimedia/audiorecorder/audiorecorder.pro">multimedia/audiorecorder/audiorecorder.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimedia/audiorecorder/audiorecorder.ui">multimedia/audiorecorder/audiorecorder.ui</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimedia/audiorecorder/main.cpp">multimedia/audiorecorder/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimedia/audiorecorder/qaudiolevel.cpp">multimedia/audiorecorder/qaudiolevel.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimedia/audiorecorder/qaudiolevel.h">multimedia/audiorecorder/qaudiolevel.h</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
