<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>40000 Chips</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Visualizes a huge graphic view scene with 40000 chip items.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the demonstration applications of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;chip.h&quot;
#include &quot;mainwindow.h&quot;
#include &quot;view.h&quot;

#include &amp;lt;QHBoxLayout&amp;gt;
#include &amp;lt;QSplitter&amp;gt;

MainWindow::MainWindow(QWidget *parent)
    : QWidget(parent)
{
    populateScene();

    h1Splitter = new QSplitter;
    h2Splitter = new QSplitter;

    QSplitter *vSplitter = new QSplitter;
    vSplitter-&amp;gt;setOrientation(Qt::Vertical);
    vSplitter-&amp;gt;addWidget(h1Splitter);
    vSplitter-&amp;gt;addWidget(h2Splitter);

    View *view = new View(&quot;Top left view&quot;);
    view-&amp;gt;view()-&amp;gt;setScene(scene);
    h1Splitter-&amp;gt;addWidget(view);

    view = new View(&quot;Top right view&quot;);
    view-&amp;gt;view()-&amp;gt;setScene(scene);
    h1Splitter-&amp;gt;addWidget(view);

    view = new View(&quot;Bottom left view&quot;);
    view-&amp;gt;view()-&amp;gt;setScene(scene);
    h2Splitter-&amp;gt;addWidget(view);

    view = new View(&quot;Bottom right view&quot;);
    view-&amp;gt;view()-&amp;gt;setScene(scene);
    h2Splitter-&amp;gt;addWidget(view);

    QHBoxLayout *layout = new QHBoxLayout;
    layout-&amp;gt;addWidget(vSplitter);
    setLayout(layout);

    setWindowTitle(tr(&quot;Chip Example&quot;));
}

void MainWindow::populateScene()
{
    scene = new QGraphicsScene(this);

    QImage image(&quot;:/qt4logo.png&quot;);

    // Populate scene
    int xx = 0;
    int nitems = 0;
    for (int i = -11000; i &amp;lt; 11000; i += 110) {
        ++xx;
        int yy = 0;
        for (int j = -7000; j &amp;lt; 7000; j += 70) {
            ++yy;
            qreal x = (i + 11000) / 22000.0;
            qreal y = (j + 7000) / 14000.0;

            QColor color(image.pixel(int(image.width() * x), int(image.height() * y)));
            QGraphicsItem *item = new Chip(color, xx, yy);
            item-&amp;gt;setPos(QPointF(i, j));
            scene-&amp;gt;addItem(item);

            ++nitems;
        }
    }
}

</db:programlisting>
</db:article>
