<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>Qt Core</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Qt Core module is part of Qt's essential modules.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="getting-started">
<db:title>Getting Started</db:title>
<db:para>All other Qt modules rely on this module. To include the definitions of the module's classes, use the following directive:</db:para>
<db:programlisting language="cpp">#include &lt;QtCore&gt;
</db:programlisting>
<db:para>If you use qmake to build your projects, Qt Core is included by default.</db:para>
</db:section>
<db:section xml:id="core-functionalities">
<db:title>Core Functionalities</db:title>
<db:para>Qt adds these features to C++:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>a very powerful mechanism for seamless object communication called signals and slots</db:para>
</db:listitem>
<db:listitem>
<db:para>queryable and designable object properties</db:para>
</db:listitem>
<db:listitem>
<db:para>hierarchical and queryable object trees that organize</db:para>
</db:listitem>
<db:listitem>
<db:para>object ownership in a natural way with guarded pointers (<db:link xlink:href="qpointer.xml">QPointer</db:link>)</db:para>
</db:listitem>
<db:listitem>
<db:para>a dynamic cast that works across library boundaries</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The following pages provide more information about Qt's core features:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="metaobjects.xml">The Meta-Object System</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="properties.xml">The Property System</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="object.xml">Object Model</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="objecttrees.xml">Object Trees &amp; Ownership</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="signalsandslots.xml">Signals &amp; Slots</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="threading-and-concurrent-programming">
<db:title>Threading and Concurrent Programming</db:title>
<db:para>Qt provides thread support in the form of platform-independent <db:link xlink:href="">threading classes</db:link>, a thread-safe way of posting events, and signal-slot connections across threads. Multithreaded programming is also a useful paradigm for performing time-consuming operations without freezing the user interface of an application.</db:para>
<db:para>The <db:link xlink:href="">Thread Support in Qt</db:link> page contains information on implementing threads in applications. Additional concurrent classes are provided by the <db:link xlink:href="qtconcurrent-index.xml">Qt Concurrent</db:link> module.</db:para>
</db:section>
<db:section xml:id="input-output-resources-and-containers">
<db:title>Input/Output, Resources, and Containers</db:title>
<db:para>Qt provides a resource system for organizing application files and assets, a set of containers, and classes for receiving input and printing output.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="containers.xml">Container Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="datastreamformat.xml">Serializing Qt Data Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="implicit-sharing.xml">Implicit Sharing</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>In addition, Qt Core provides a platform-independent mechanism for storing binary files in the application's executable.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="resources.xml">The Qt Resource System</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="additional-frameworks">
<db:title>Additional Frameworks</db:title>
<db:para>Qt Core also provides some of Qt's key frameworks.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="animation-overview.xml">The Animation Framework</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="json.xml">JSON Support in Qt</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="statemachine-api.xml">The State Machine Framework</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="plugins-howto.xml">How to Create Qt Plugins</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="eventsandfilters.xml">The Event System</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="related-information">
<db:title>Related Information</db:title>
</db:section>
<db:section xml:id="reference">
<db:title>Reference</db:title>
<db:para>These are links to the API reference materials.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtcore-module.xml">C++ Classes</db:link></db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="animation.xml">Animation Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="">Threading Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="containers.xml">Container Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="plugins.xml">Plugin Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="shared.xml">Implicitly Shared Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="statemachine.xml">State Machine Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="io.xml">Input/Output Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="events.xml">Event Classes</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
