<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>CircularGaugeStyle QML Type</db:title>
<db:productname>QtQuickControls1</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 1 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides custom styling for <db:link xlink:href="qml-qtquick-extras-circulargauge.xml">CircularGauge</db:link>.</db:para>
<db:para>This type was introduced in Qt 5.5.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls.Styles 1.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>CircularGaugeStyle is part of <db:simplelist><db:member><db:link xlink:href="controlsstyling.xml">Styling Controls</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>You can create a custom circular gauge by replacing the following delegates:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#background-prop">background</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#tickmark-prop">tickmark</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#minorTickmark-prop">minorTickmark</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#tickmarkLabel-prop">tickmarkLabel</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#needle-prop">needle</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#foreground-prop">foreground</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Below is an example that changes the needle to a basic orange <db:link xlink:href="qml-qtquick-rectangle.xml">Rectangle</db:link>:</db:para>
<db:programlisting language="cpp">CircularGauge {
    style: CircularGaugeStyle {
        needle: Rectangle {
            y: outerRadius * 0.15
            implicitWidth: outerRadius * 0.03
            implicitHeight: outerRadius * 0.9
            antialiasing: true
            color: Qt.rgba(0.66, 0.3, 0, 1)
        }
    }
}
</db:programlisting>
<db:para>The result:</db:para>
<db:mediaobject>
<db:alt>CircularGaugeStyle example</db:alt>
<db:imageobject>
<db:imagedata fileref="images/circulargauge-needle-example-2.png"/>
</db:imageobject>
</db:mediaobject>
<db:section xml:id="direction">
<db:title>Direction</db:title>
<db:para><db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#minimumValueAngle-prop">minimumValueAngle</db:link> and <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#maximumValueAngle-prop">maximumValueAngle</db:link> determine not only the position of the tickmarks, labels and needle, but the direction in which they are displayed around the gauge. For example, if <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#minimumValueAngle-prop">minimumValueAngle</db:link> is greater than <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#maximumValueAngle-prop">maximumValueAngle</db:link>, the gauge will be anti-clockwise. Below, there are two gauges: the top gauge has a <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#minimumValueAngle-prop">minimumValueAngle</db:link> of <db:code>-90</db:code> degrees and a <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#maximumValueAngle-prop">maximumValueAngle</db:link> of <db:code>90</db:code> degrees, and the bottom gauge has the opposite.</db:para>
<db:mediaobject>
<db:alt>Reversed CircularGauge</db:alt>
<db:imageobject>
<db:imagedata fileref="images/circulargauge-reversed.png"/>
</db:imageobject>
</db:mediaobject>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="styling-circulargauge.xml">Styling CircularGauge</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="angleRange-prop">
<db:title>[read-only] angleRange : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>angleRange</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The range between <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#minimumValueAngle-prop">minimumValueAngle</db:link> and <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#maximumValueAngle-prop">maximumValueAngle</db:link>, in degrees. This value will always be positive.</db:para>
</db:section>
<db:section xml:id="background-prop">
<db:title>background : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>background</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The background of the gauge.</db:para>
<db:para>If set, the background determines the implicit size of the gauge.</db:para>
<db:para>By default, there is no background defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="styling-circulargauge.xml#styling-circulargauge-background">Styling CircularGauge's background</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="control-prop">
<db:title>[read-only] control : CircularGauge</db:title>
<db:fieldsynopsis>
<db:type>CircularGauge</db:type>
<db:varname>control</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The <db:link xlink:href="qml-qtquick-extras-circulargauge.xml">CircularGauge</db:link> that this style is attached to.</db:para>
</db:section>
<db:section xml:id="foreground-prop">
<db:title>foreground : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>foreground</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The foreground of the gauge. This component is drawn above all others.</db:para>
<db:para>Like <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#background-prop">background</db:link>, the foreground component fills the entire gauge.</db:para>
<db:para>By default, the knob of the gauge is defined here.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="styling-circulargauge.xml#styling-circulargauge-foreground">Styling CircularGauge's foreground</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelCount-prop">
<db:title>[read-only] labelCount : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>labelCount</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The amount of tickmark labels displayed by the gauge, calculated from <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#labelStepSize-prop">labelStepSize</db:link> and the control's <db:link xlink:href="qml-qtquick-extras-circulargauge.xml#minimumValue-prop">minimumValue</db:link> and <db:link xlink:href="qml-qtquick-extras-circulargauge.xml#maximumValue-prop">maximumValue</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#tickmarkCount-prop">tickmarkCount</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#minorTickmarkCount-prop">minorTickmarkCount</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelInset-prop">
<db:title>labelInset : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>labelInset</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The distance in pixels from the outside of the gauge (<db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#outerRadius-prop">outerRadius</db:link>) at which the center of the value marker text is drawn.</db:para>
</db:section>
<db:section xml:id="labelStepSize-prop">
<db:title>labelStepSize : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>labelStepSize</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The interval at which tickmark labels are displayed.</db:para>
<db:para>For example, if this property is set to <db:code>10</db:code> (the default), control.minimumValue to <db:code>0</db:code>, and control.maximumValue to <db:code>100</db:code>, the tickmark labels displayed will be 0, 10, 20, etc., to 100, around the gauge.</db:para>
</db:section>
<db:section xml:id="maximumValueAngle-prop">
<db:title>maximumValueAngle : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>maximumValueAngle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property determines the angle at which the maximum value is displayed on the gauge.</db:para>
<db:para>The angle set affects the following components of the gauge:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>The angle of the needle</db:para>
</db:listitem>
<db:listitem>
<db:para>The position of the tickmarks and labels</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The angle origin points north:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/circulargauge-angles.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>There is no minimum or maximum angle for this property, but the default style only supports angles whose absolute range is less than or equal to <db:code>360</db:code> degrees. This is because ranges higher than <db:code>360</db:code> degrees will cause the tickmarks and labels to overlap each other.</db:para>
<db:para>The default value is <db:code>145</db:code>.</db:para>
</db:section>
<db:section xml:id="minimumValueAngle-prop">
<db:title>minimumValueAngle : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>minimumValueAngle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property determines the angle at which the minimum value is displayed on the gauge.</db:para>
<db:para>The angle set affects the following components of the gauge:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>The angle of the needle</db:para>
</db:listitem>
<db:listitem>
<db:para>The position of the tickmarks and labels</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The angle origin points north:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/circulargauge-angles.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>There is no minimum or maximum angle for this property, but the default style only supports angles whose absolute range is less than or equal to <db:code>360</db:code> degrees. This is because ranges higher than <db:code>360</db:code> degrees will cause the tickmarks and labels to overlap each other.</db:para>
<db:para>The default value is <db:code>-145</db:code>.</db:para>
</db:section>
<db:section xml:id="minorTickmark-prop">
<db:title>minorTickmark : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>minorTickmark</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This component defines each individual minor tickmark. The position of each minor tickmark is already set; only the <db:link xlink:href="qml-qtquick-item.xml#implicitWidth-prop">implicitWidth</db:link> and <db:link xlink:href="qml-qtquick-item.xml#implicitHeight-prop">implicitHeight</db:link> need to be specified.</db:para>
<db:para>Each instance of this component has access to the following properties:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:code>readonly property int</db:code> <db:emphasis role="bold">styleData.index</db:emphasis></db:para>
</db:td>
<db:td>
<db:para>The index of this tickmark.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>readonly property real</db:code> <db:emphasis role="bold">styleData.value</db:emphasis></db:para>
</db:td>
<db:td>
<db:para>The value that this tickmark represents.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="styling-circulargauge.xml#styling-circulargauge-minortickmark">Styling CircularGauge's minorTickmark</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="minorTickmarkCount-prop">
<db:title>minorTickmarkCount : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>minorTickmarkCount</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The amount of minor tickmarks between each tickmark.</db:para>
<db:para>The default value is <db:code>4</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#tickmarkCount-prop">tickmarkCount</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="minorTickmarkInset-prop">
<db:title>minorTickmarkInset : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>minorTickmarkInset</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The distance in pixels from the outside of the gauge (<db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#outerRadius-prop">outerRadius</db:link>) at which the outermost point of the minor tickmark line is drawn.</db:para>
</db:section>
<db:section xml:id="needle-prop">
<db:title>needle : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>needle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The needle that points to the gauge's current value.</db:para>
<db:para>This component is drawn below the <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#foreground-prop">foreground</db:link> component.</db:para>
<db:para>The style expects the needle to be pointing up at a rotation of <db:code>0</db:code>, in order for the rotation to be correct. For example:</db:para>
<db:mediaobject>
<db:alt>CircularGauge's needle</db:alt>
<db:imageobject>
<db:imagedata fileref="images/circulargauge-needle.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>When defining your own needle component, the only properties that the style requires you to set are the <db:link xlink:href="qml-qtquick-item.xml#implicitWidth-prop">implicitWidth</db:link> and <db:link xlink:href="qml-qtquick-item.xml#implicitHeight-prop">implicitHeight</db:link>.</db:para>
<db:para>Optionally, you can set <db:link xlink:href="qml-qtquick-item.xml#x-prop">x</db:link> and <db:link xlink:href="qml-qtquick-item.xml#y-prop">y</db:link> to change the needle's transform origin. Setting the <db:code>x</db:code> position can be useful for needle images where the needle is not centered exactly horizontally. Setting the <db:code>y</db:code> position allows you to make the base of the needle hang over the center of the gauge.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="styling-circulargauge.xml#styling-circulargauge-needle">Styling CircularGauge's needle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="needleRotation-prop">
<db:title>needleRotation : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>needleRotation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the rotation of the needle in degrees.</db:para>
</db:section>
<db:section xml:id="outerRadius-prop">
<db:title>[read-only] outerRadius : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>outerRadius</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The distance from the center of the gauge to the outer edge of the gauge.</db:para>
<db:para>This property is useful for determining the size of the various components of the style, in order to ensure that they are scaled proportionately when the gauge is resized.</db:para>
</db:section>
<db:section xml:id="padding-prop">
<db:title>padding group</db:title>
<db:bridgehead renderas="sect2" xml:id="padding.bottom-prop">padding.bottom : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>padding.bottom</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="padding.left-prop">padding.left : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>padding.left</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="padding.right-prop">padding.right : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>padding.right</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="padding.top-prop">padding.top : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>padding.top</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This grouped property holds the <db:code>top</db:code>, <db:code>left</db:code>, <db:code>right</db:code> and <db:code>bottom</db:code> padding.</db:para>
</db:section>
<db:section xml:id="tickmark-prop">
<db:title>tickmark : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>tickmark</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This component defines each individual tickmark. The position of each tickmark is already set; only the <db:link xlink:href="qml-qtquick-item.xml#implicitWidth-prop">implicitWidth</db:link> and <db:link xlink:href="qml-qtquick-item.xml#implicitHeight-prop">implicitHeight</db:link> need to be specified.</db:para>
<db:para>Each instance of this component has access to the following properties:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:code>readonly property int</db:code> <db:emphasis role="bold">styleData.index</db:emphasis></db:para>
</db:td>
<db:td>
<db:para>The index of this tickmark.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>readonly property real</db:code> <db:emphasis role="bold">styleData.value</db:emphasis></db:para>
</db:td>
<db:td>
<db:para>The value that this tickmark represents.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>To illustrate what these properties refer to, we can use the following example:</db:para>
<db:programlisting language="qml">import QtQuick 2.0
import QtQuick.Controls.Styles 1.4
import QtQuick.Extras 1.4

Rectangle {
    width: 400
    height: 400

    CircularGauge {
        id: gauge
        anchors.fill: parent
        style: CircularGaugeStyle {
            labelInset: outerRadius * 0.2

            tickmarkLabel: null

            tickmark: Text {
                text: styleData.value

                Text {
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.bottom
                    text: styleData.index
                    color: &quot;blue&quot;
                }
            }

            minorTickmark: Text {
                text: styleData.value
                font.pixelSize: 8

                Text {
                    anchors.horizontalCenter: parent.horizontalCenter
                    anchors.top: parent.bottom
                    text: styleData.index
                    font.pixelSize: 8
                    color: &quot;blue&quot;
                }
            }
        }

        Text {
            id: indexText
            text: &quot;Major and minor indices&quot;
            anchors.horizontalCenter: parent.horizontalCenter
            anchors.bottom: valueText.top
            color: &quot;blue&quot;
        }
        Text {
            id: valueText
            text: &quot;Major and minor values&quot;
            anchors.horizontalCenter: parent.horizontalCenter
            anchors.bottom: parent.bottom
        }
    }
}
</db:programlisting>
<db:para>We've replaced the conventional <db:emphasis>line</db:emphasis> tickmarks with <db:link xlink:href="qml-qtquick-text.xml">Text</db:link> items and have hidden the <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#tickmarkLabel-prop">tickmarkLabel</db:link> component in order to make the association clearer:</db:para>
<db:mediaobject>
<db:alt>Tickmarks</db:alt>
<db:imageobject>
<db:imagedata fileref="images/circulargauge-tickmark-indices-values.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The index property can be useful if you have another model that contains images to display for each index, for example.</db:para>
<db:para>The value property is useful for drawing lower and upper limits around the gauge to indicate the recommended value ranges. For example, speeds above 200 kilometers an hour in a car's speedometer could be indicated as dangerous using this property.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="styling-circulargauge.xml#styling-circulargauge-tickmark">Styling CircularGauge's tickmark</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="tickmarkCount-prop">
<db:title>[read-only] tickmarkCount : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>tickmarkCount</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The amount of tickmarks displayed by the gauge, calculated from <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#tickmarkStepSize-prop">tickmarkStepSize</db:link> and the control's <db:link xlink:href="qml-qtquick-extras-circulargauge.xml#minimumValue-prop">minimumValue</db:link> and <db:link xlink:href="qml-qtquick-extras-circulargauge.xml#maximumValue-prop">maximumValue</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#minorTickmarkCount-prop">minorTickmarkCount</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="tickmarkInset-prop">
<db:title>tickmarkInset : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>tickmarkInset</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The distance in pixels from the outside of the gauge (<db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#outerRadius-prop">outerRadius</db:link>) at which the outermost point of the tickmark line is drawn.</db:para>
</db:section>
<db:section xml:id="tickmarkLabel-prop">
<db:title>tickmarkLabel : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>tickmarkLabel</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This defines the text of each tickmark label on the gauge.</db:para>
<db:para>Each instance of this component has access to the following properties:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:code>readonly property int</db:code> <db:emphasis role="bold">styleData.index</db:emphasis></db:para>
</db:td>
<db:td>
<db:para>The index of this label.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>readonly property real</db:code> <db:emphasis role="bold">styleData.value</db:emphasis></db:para>
</db:td>
<db:td>
<db:para>The value that this label represents.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="styling-circulargauge.xml#styling-circulargauge-tickmarklabel">Styling CircularGauge's tickmarkLabel</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="tickmarkStepSize-prop">
<db:title>tickmarkStepSize : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>tickmarkStepSize</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The interval at which tickmarks are displayed.</db:para>
<db:para>For example, if this property is set to <db:code>10</db:code> (the default), control.minimumValue to <db:code>0</db:code>, and control.maximumValue to <db:code>100</db:code>, the tickmarks displayed will be 0, 10, 20, etc., to 100, around the gauge.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="valueToAngle-method">
<db:title>real valueToAngle(real <db:emphasis>value</db:emphasis>)</db:title>
<db:para>Returns <db:code role="parameter">value</db:code> as an angle in degrees.</db:para>
<db:para>This function is useful for custom drawing or positioning of items in the style's components. For example, it can be used to calculate the angles at which to draw an arc around the gauge indicating the safe area for the needle to be within.</db:para>
<db:para>For example, if <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#minimumValueAngle-prop">minimumValueAngle</db:link> is set to <db:code>270</db:code> and <db:link xlink:href="qml-qtquick-controls-styles-circulargaugestyle.xml#maximumValueAngle-prop">maximumValueAngle</db:link> is set to <db:code>90</db:code>, this function will return <db:code>270</db:code> when passed minimumValue and <db:code>90</db:code> when passed maximumValue.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="styling-circulargauge.xml#styling-circulargauge-background">Styling CircularGauge's background</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
