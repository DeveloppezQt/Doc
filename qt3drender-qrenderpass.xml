<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QRenderPass Class</db:title>
<db:subtitle>Qt3DRender::QRenderPass</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Encapsulates a Render Pass.</db:para>
<db:para>This class was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QRenderPass</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-renderpass.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qnode.xml" xlink:role="class">Qt3DCore::QNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qt3drender-qrenderpass.xml">Qt3DRender::QRenderPass</db:link> specifies a single rendering pass - an instance of shader program execution - used by <db:link xlink:href="qt3drender-qtechnique.xml">Qt3DRender::QTechnique</db:link>. Render pass consists of a <db:link xlink:href="qt3drender-qshaderprogram.xml">Qt3DRender::QShaderProgram</db:link> and a list of <db:link xlink:href="qt3drender-qfilterkey.xml">Qt3DRender::QFilterKey</db:link> objects, a list of <db:link xlink:href="qt3drender-qrenderstate.xml">Qt3DRender::QRenderState</db:link> objects and a list of <db:link xlink:href="qt3drender-qparameter.xml">Qt3DRender::QParameter</db:link> objects.</db:para>
<db:para><db:link xlink:href="qt3drender-qrenderpass.xml">QRenderPass</db:link> executes the <db:link xlink:href="qt3drender-qshaderprogram.xml">QShaderProgram</db:link> using the given <db:link xlink:href="qt3drender-qrenderstate.xml">QRenderState</db:link> and <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> nodes when at least one of <db:link xlink:href="qt3drender-qfilterkey.xml">QFilterKey</db:link> nodes being referenced matches any of the <db:link xlink:href="qt3drender-qfilterkey.xml">QFilterKey</db:link> nodes in <db:link xlink:href="qt3drender-qrenderpassfilter.xml">QRenderPassFilter</db:link> or when no <db:link xlink:href="qt3drender-qfilterkey.xml">QFilterKey</db:link> nodes are specified and no <db:link xlink:href="qt3drender-qrenderpassfilter.xml">QRenderPassFilter</db:link> is present in the FrameGraph.</db:para>
<db:para>If the <db:link xlink:href="qt3drender-qrenderpass.xml">QRenderPass</db:link> defines a <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link>, it will be overridden by a <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> with the same name if it exists in any of the <db:link xlink:href="qt3drender-qtechnique.xml">QTechnique</db:link>, <db:link xlink:href="qt3drender-qeffect.xml">QEffect</db:link>, <db:link xlink:href="qt3drender-qmaterial.xml">QMaterial</db:link>, <db:link xlink:href="qt3drender-qtechniquefilter.xml">QTechniqueFilter</db:link>, <db:link xlink:href="qt3drender-qrenderpassfilter.xml">QRenderPassFilter</db:link> associated with the pass at runtime. This still can be useful to define sane default values.</db:para>
<db:para>At render time, for each leaf node of the FrameGraph a base render state is recorded by accumulating states defined by all <db:link xlink:href="qt3drender-qrenderstateset.xml">QRenderStateSet</db:link> nodes in the FrameGraph branch. Each <db:link xlink:href="qt3drender-qrenderpass.xml">QRenderPass</db:link> can overload this base render state by specifying its own <db:link xlink:href="qt3drender-qrenderstate.xml">QRenderState</db:link> nodes.</db:para>
<db:programlisting language="cpp">// Create the render passes
QRenderPass *pass = new QRenderPass();

// Create shader program
QShaderProgram *glShader = new QShaderProgram();

// Set the shader on the render pass
pass-&amp;gt;setShaderProgram(glShader);

// Create a FilterKey
QFilterKey *filterKey = new QFilterKey();
filterKey-&amp;gt;setName(QStringLiteral(&quot;name&quot;));
fitlerKey-&amp;gt;setValue(QStringLiteral(&quot;zFillPass&quot;));

// Add the FilterKey to the pass
pass-&amp;gt;addFilterKey(filterKey);

// Create a QParameter
QParameter *colorParameter = new QParameter(QStringLiteral(&quot;color&quot;), QColor::fromRgbF(0.0f, 0.0f, 1.0f, 1.0f));

// Add parameter to pass
pass-&amp;gt;addParameter(colorParameter);

// Create a QRenderState
QDepthTest *depthTest = new QDepthTest();

// Add the render state to the pass
pass-&amp;gt;addRenderState(depthTest);
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qrenderpassfilter.xml">QRenderPassFilter</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qfilterkey.xml">QFilterKey</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qrenderstate.xml">QRenderState</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qeffect.xml">QEffect</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qtechnique.xml">QTechnique</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="shaderProgram-prop">
<db:title>shaderProgram : Qt3DRender::QShaderProgram*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DRender::QShaderProgram*</db:type>
<db:varname>shaderProgram</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">shaderProgram</db:synopsisinfo>
<db:synopsisinfo role="setter">setShaderProgram</db:synopsisinfo>
<db:synopsisinfo role="notifier">shaderProgramChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the shader program to be used for this render pass.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qshaderprogram.xml">Qt3DRender::QShaderProgram</db:link></db:type> *<db:emphasis role="bold">shaderProgram</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setShaderProgram</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qshaderprogram.xml">Qt3DRender::QShaderProgram</db:link></db:type> *<db:emphasis>shaderProgram</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">shaderProgramChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qshaderprogram.xml">Qt3DRender::QShaderProgram</db:link></db:type> *<db:emphasis>shaderProgram</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QRenderPass">
<db:title>[explicit] QRenderPass::QRenderPass(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QRenderPass</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QNode *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QRenderPass(Qt3DCore::QNode *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qt3drender-qrenderpass.xml">QRenderPass</db:link> with the specified <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="addFilterKey">
<db:title>void QRenderPass::addFilterKey(Qt3DRender::QFilterKey *<db:emphasis>filterKey</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addFilterKey</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QFilterKey *</db:type>
<db:parameter>filterKey</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addFilterKey(Qt3DRender::QFilterKey *filterKey)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Adds <db:code role="parameter">filterKey</db:code> to the <db:link xlink:href="qt3drender-qrenderpass.xml">Qt3DRender::QRenderPass</db:link> local filter keys.</db:para>
</db:section>
<db:section xml:id="addParameter">
<db:title>void QRenderPass::addParameter(Qt3DRender::QParameter *<db:emphasis>parameter</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addParameter</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QParameter *</db:type>
<db:parameter>parameter</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addParameter(Qt3DRender::QParameter *parameter)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Add <db:code role="parameter">parameter</db:code> to the render pass' parameters.</db:para>
</db:section>
<db:section xml:id="addRenderState">
<db:title>void QRenderPass::addRenderState(Qt3DRender::QRenderState *<db:emphasis>state</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addRenderState</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QRenderState *</db:type>
<db:parameter>state</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addRenderState(Qt3DRender::QRenderState *state)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Adds a render <db:code role="parameter">state</db:code> to the rendering pass. That implies that when the pass is executed at render time, the globally set render state will be modified by the states defined locally by the <db:link xlink:href="qt3drender-qrenderpass.xml">Qt3DRender::QRenderPass</db:link>.</db:para>
<db:note>
<db:para>not defining any <db:link xlink:href="qt3drender-qrenderstate.xml">Qt3DRender::QRenderState</db:link> in a pass will result in the pass using the globally set render state for a given FrameGraph branch execution path.</db:para>
</db:note>
</db:section>
<db:section xml:id="filterKeys">
<db:title>QList&lt;Qt3DRender::QFilterKey *&gt; QRenderPass::filterKeys() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;Qt3DRender::QFilterKey *&gt;</db:type>
<db:methodname>filterKeys</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;Qt3DRender::QFilterKey *&gt; filterKeys() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of <db:link xlink:href="qt3drender-qfilterkey.xml">Qt3DRender::QFilterKey</db:link> key objects making up the filter keys of the <db:link xlink:href="qt3drender-qrenderpass.xml">Qt3DRender::QRenderPass</db:link>.</db:para>
</db:section>
<db:section xml:id="parameters">
<db:title>QList&lt;Qt3DRender::QParameter *&gt; QRenderPass::parameters() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;Qt3DRender::QParameter *&gt;</db:type>
<db:methodname>parameters</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;Qt3DRender::QParameter *&gt; parameters() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a vector of the render pass' current parameters</db:para>
</db:section>
<db:section xml:id="removeFilterKey">
<db:title>void QRenderPass::removeFilterKey(Qt3DRender::QFilterKey *<db:emphasis>filterKey</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>removeFilterKey</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QFilterKey *</db:type>
<db:parameter>filterKey</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void removeFilterKey(Qt3DRender::QFilterKey *filterKey)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Removes <db:code role="parameter">filterKey</db:code> from the <db:link xlink:href="qt3drender-qrenderpass.xml">Qt3DRender::QRenderPass</db:link> local filter keys.</db:para>
</db:section>
<db:section xml:id="removeParameter">
<db:title>void QRenderPass::removeParameter(Qt3DRender::QParameter *<db:emphasis>parameter</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>removeParameter</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QParameter *</db:type>
<db:parameter>parameter</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void removeParameter(Qt3DRender::QParameter *parameter)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Remove <db:code role="parameter">parameter</db:code> from the render pass' parameters.</db:para>
</db:section>
<db:section xml:id="removeRenderState">
<db:title>void QRenderPass::removeRenderState(Qt3DRender::QRenderState *<db:emphasis>state</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>removeRenderState</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QRenderState *</db:type>
<db:parameter>state</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void removeRenderState(Qt3DRender::QRenderState *state)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Removes <db:code role="parameter">state</db:code> from the <db:link xlink:href="qt3drender-qrenderpass.xml">Qt3DRender::QRenderPass</db:link> local render state.</db:para>
</db:section>
<db:section xml:id="renderStates">
<db:title>QList&lt;Qt3DRender::QRenderState *&gt; QRenderPass::renderStates() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;Qt3DRender::QRenderState *&gt;</db:type>
<db:methodname>renderStates</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;Qt3DRender::QRenderState *&gt; renderStates() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of <db:link xlink:href="qt3drender-qrenderstate.xml">Qt3DRender::QRenderState</db:link> state objects making up the render state of the <db:link xlink:href="qt3drender-qrenderpass.xml">Qt3DRender::QRenderPass</db:link>.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="ParameterList-typedef">
<db:title>[alias] ParameterList</db:title>
<db:typedefsynopsis>
<db:typedefname>ParameterList</db:typedefname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:typedefsynopsis>
<db:para>A list of <db:link xlink:href="qt3drender-qparameter.xml">Qt3DRender::QParameter</db:link> parameters.</db:para>
</db:section>
</db:section>
</db:article>
