<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>WebEngine Demo Browser Example</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A demo browser based on Qt <db:link xlink:href="qml-qtwebengine-webengine.xml">WebEngine</db:link> Widgets.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the demonstration applications of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;savepagedialog.h&quot;
#include &quot;ui_savepagedialog.h&quot;

#include &lt;QtCore/QDir&gt;
#include &lt;QtWidgets/QFileDialog&gt;

const QWebEngineDownloadItem::SavePageFormat SavePageDialog::m_indexToFormatTable[] = {
    QWebEngineDownloadItem::SingleHtmlSaveFormat,
    QWebEngineDownloadItem::CompleteHtmlSaveFormat,
    QWebEngineDownloadItem::MimeHtmlSaveFormat
};

SavePageDialog::SavePageDialog(QWidget *parent, QWebEngineDownloadItem::SavePageFormat format,
                               const QString &amp;filePath)
    : QDialog(parent)
    , ui(new Ui::SavePageDialog)
{
    ui-&gt;setupUi(this);
    ui-&gt;formatComboBox-&gt;setCurrentIndex(formatToIndex(format));
    setFilePath(filePath);
}

SavePageDialog::~SavePageDialog()
{
    delete ui;
}

QWebEngineDownloadItem::SavePageFormat SavePageDialog::pageFormat() const
{
    return indexToFormat(ui-&gt;formatComboBox-&gt;currentIndex());
}

QString SavePageDialog::filePath() const
{
    return QDir::fromNativeSeparators(ui-&gt;filePathLineEdit-&gt;text());
}

void SavePageDialog::on_chooseFilePathButton_clicked()
{
    QFileInfo fi(filePath());
    QFileDialog dlg(this, tr(&quot;Save Page As&quot;), fi.absolutePath());
    dlg.setAcceptMode(QFileDialog::AcceptSave);
    dlg.setDefaultSuffix(suffixOfFormat(pageFormat()));
    dlg.selectFile(fi.absoluteFilePath());
    if (dlg.exec() != QDialog::Accepted)
        return;
    setFilePath(dlg.selectedFiles().first());
    ensureFileSuffix(pageFormat());
}

void SavePageDialog::on_formatComboBox_currentIndexChanged(int idx)
{
    ensureFileSuffix(indexToFormat(idx));
}

int SavePageDialog::formatToIndex(QWebEngineDownloadItem::SavePageFormat format)
{
    for (auto i : m_indexToFormatTable) {
        if (m_indexToFormatTable[i] == format)
            return i;
    }
    Q_UNREACHABLE();
}

QWebEngineDownloadItem::SavePageFormat SavePageDialog::indexToFormat(int idx)
{
    Q_ASSERT(idx &gt;= 0 &amp;&amp; size_t(idx) &lt; (sizeof(m_indexToFormatTable)
                                        / sizeof(QWebEngineDownloadItem::SavePageFormat)));
    return m_indexToFormatTable[idx];
}

QString SavePageDialog::suffixOfFormat(QWebEngineDownloadItem::SavePageFormat format)
{
    if (format == QWebEngineDownloadItem::MimeHtmlSaveFormat)
        return QStringLiteral(&quot;.mhtml&quot;);
    return QStringLiteral(&quot;.html&quot;);
}

void SavePageDialog::setFilePath(const QString &amp;filePath)
{
    ui-&gt;filePathLineEdit-&gt;setText(QDir::toNativeSeparators(filePath));
}

void SavePageDialog::ensureFileSuffix(QWebEngineDownloadItem::SavePageFormat format)
{
    QFileInfo fi(filePath());
    setFilePath(fi.absolutePath() + QLatin1Char('/') + fi.completeBaseName()
                + suffixOfFormat(format));
}

</db:programlisting>
</db:article>
