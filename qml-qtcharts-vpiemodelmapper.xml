<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>VPieModelMapper QML Type</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Vertical model mapper for pie series.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtCharts 2.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qvpiemodelmapper.xml">QVPieModelMapper</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Model mappers enable using a data model derived from the <db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link> class as a data source for a chart. A vertical model mapper is used to create a connection between a data model and <db:link xlink:href="qml-qtcharts-pieseries.xml">PieSeries</db:link>, so that each row in the data model defines a pie slice and each column maps to the label or the value of the pie slice.</db:para>
<db:para>Both model and pie series properties can be used to manipulate the data. The model mapper keeps the pie series and the data model in sync.</db:para>
<db:para>The following QML example creates a pie series with four slices (assuming the model has at least five rows). Each slice gets a label from column 1 and a value from column 2.</db:para>
<db:programlisting language="cpp">VPieModelMapper {
    series: pieSeries
    model: customModel
    labelsColumn: 1
    valuesColumn: 2
    firstRow: 1
    rowCount: 4
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="firstRow-prop">
<db:title>firstRow : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>firstRow</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The row of the model that contains the first slice value. The default value is 0.</db:para>
</db:section>
<db:section xml:id="labelsColumn-prop">
<db:title>labelsColumn : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>labelsColumn</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The column of the model that is kept in sync with the labels of the pie's slices. The default value is -1 (invalid mapping).</db:para>
</db:section>
<db:section xml:id="model-prop">
<db:title>model : SomeModel</db:title>
<db:fieldsynopsis>
<db:type>SomeModel</db:type>
<db:varname>model</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The <db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link> based model that is used by the mapper. You need to implement the model and expose it to QML.</db:para>
<db:note>
<db:para>The model has to support adding and removing rows or columns and modifying the data in the cells.</db:para>
</db:note>
</db:section>
<db:section xml:id="rowCount-prop">
<db:title>rowCount : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>rowCount</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The number of rows of the model that are mapped as the data for a pie series. The default value is -1 (number limited by the number of rows in the model).</db:para>
</db:section>
<db:section xml:id="series-prop">
<db:title>series : PieSeries</db:title>
<db:fieldsynopsis>
<db:type>PieSeries</db:type>
<db:varname>series</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The pie series that is used by the mapper. If you define the mapper element as a child for a <db:link xlink:href="qml-qtcharts-pieseries.xml">PieSeries</db:link>, leave this property undefined. All the data in the series is discarded when it is set to the mapper. When new series is specified the old series is disconnected (but it preserves its data).</db:para>
</db:section>
<db:section xml:id="valuesColumn-prop">
<db:title>valuesColumn : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>valuesColumn</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The column of the model that is kept in sync with the values of the pie's slices. The default value is -1 (invalid mapping).</db:para>
</db:section>
</db:section>
</db:article>
