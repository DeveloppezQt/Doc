<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Creating Area Charts</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Shows how to create a simple area chart.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:note>
<db:para>This is part of the <db:link xlink:href="qtcharts-chartsgallery-example.xml">Charts with Widgets Gallery</db:link> example.</db:para>
</db:note>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_areachart.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>To create area charts, we need two <db:link xlink:href="qlineseries.xml">QLineSeries</db:link> instances. They are going to define the upper and lower boundary of the area.</db:para>
<db:programlisting language="cpp">auto series0 = new QLineSeries;
auto series1 = new QLineSeries;
</db:programlisting>
<db:para>We add data to both series and use the stream operator.</db:para>
<db:programlisting language="cpp">*series0 &amp;lt;&amp;lt; QPointF(1, 5) &amp;lt;&amp;lt; QPointF(3, 7) &amp;lt;&amp;lt; QPointF(7, 6) &amp;lt;&amp;lt; QPointF(9, 7) &amp;lt;&amp;lt; QPointF(12, 6)
         &amp;lt;&amp;lt; QPointF(16, 7) &amp;lt;&amp;lt; QPointF(18, 5);
*series1 &amp;lt;&amp;lt; QPointF(1, 3) &amp;lt;&amp;lt; QPointF(3, 4) &amp;lt;&amp;lt; QPointF(7, 3) &amp;lt;&amp;lt; QPointF(8, 2) &amp;lt;&amp;lt; QPointF(12, 3)
         &amp;lt;&amp;lt; QPointF(16, 4) &amp;lt;&amp;lt; QPointF(18, 3);
</db:programlisting>
<db:para>Now we create a <db:link xlink:href="qareaseries.xml">QAreaSeries</db:link> instance using two line series objects. We set the custom gradient fill and width of the outline.</db:para>
<db:programlisting language="cpp">auto series = new QAreaSeries(series0, series1);
series-&amp;gt;setName(&quot;Batman&quot;);
QPen pen(0x059605);
pen.setWidth(3);
series-&amp;gt;setPen(pen);

QLinearGradient gradient(QPointF(0, 0), QPointF(0, 1));
gradient.setColorAt(0.0, 0x3cc63c);
gradient.setColorAt(1.0, 0x26f626);
gradient.setCoordinateMode(QGradient::ObjectBoundingMode);
series-&amp;gt;setBrush(gradient);
</db:programlisting>
<db:para>Last we create the <db:link xlink:href="qchartview.xml">QChartView</db:link> instance, set the title, set anti-aliasing, and add the area series. We also create the default axes and specify the ranges on them.</db:para>
<db:programlisting language="cpp">auto chart = new QChart;
chart-&amp;gt;addSeries(series);
chart-&amp;gt;setTitle(&quot;Simple Area Chart&quot;);
chart-&amp;gt;createDefaultAxes();
chart-&amp;gt;axes(Qt::Horizontal).first()-&amp;gt;setRange(0, 20);
chart-&amp;gt;axes(Qt::Vertical).first()-&amp;gt;setRange(0, 10);
</db:programlisting>
<db:para>The chart is ready to be shown.</db:para>
<db:programlisting language="cpp">createDefaultChartView(chart);
</db:programlisting>
</db:article>
