<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>WebSockets MQTT Subscription Example</db:title>
<db:productname>QtMqtt</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt MQTT Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Combining an MQTT client with a web socket connection.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">// Copyright (C) 2017 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR BSD-3-Clause

#ifndef CLIENTSUBSCRIPTION_H
#define CLIENTSUBSCRIPTION_H

#include &quot;websocketiodevice.h&quot;

#include &amp;lt;QtCore/QObject&amp;gt;
#include &amp;lt;QtMqtt/QMqttClient&amp;gt;
#include &amp;lt;QtWebSockets/QWebSocket&amp;gt;

class ClientSubscription : public QObject
{
    Q_OBJECT
public:
    ClientSubscription(QObject *parent = nullptr);

    void setUrl(const QUrl &amp;amp;url); // ie ws://broker.hivemq.com:8000/mqtt
    void setTopic(const QString &amp;amp;topic);
    void setVersion(int v);
signals:
    void messageReceived(QByteArray);
    void errorOccured();

public slots:
    void connectAndSubscribe();
    void handleMessage(const QByteArray &amp;amp;msgContent);

private:
    QMqttClient m_client;
    QMqttSubscription *m_subscription;
    QUrl m_url;
    QString m_topic;
    WebSocketIODevice m_device;
    int m_version;
};

#endif // CLIENTSUBSCRIPTION_H

</db:programlisting>
</db:article>
