<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Examples - Key Interaction</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This is a collection of QML keyboard interaction examples.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.1

FocusScope {
    onActiveFocusChanged: {
        if (activeFocus)
            mainView.state = &quot;showTabViews&quot;
    }

    Rectangle {
        anchors.fill: parent
        clip: true
        gradient: Gradient {
            GradientStop { position: 0.0; color: &quot;#193441&quot; }
            GradientStop { position: 1.0; color: Qt.darker(&quot;#193441&quot;) }
        }

        Row {
            id: tabView
            anchors.fill: parent; anchors.leftMargin: 20; anchors.rightMargin: 20
            Repeater {
                activeFocusOnTab: false
                model: 5
                Item {
                    id: container
                    width: 152; height: 152
                    activeFocusOnTab: true
                    focus: true

                    KeyNavigation.up: listMenu
                    KeyNavigation.down: gridMenu

                    Rectangle {
                        id: content
                        color: &quot;transparent&quot;
                        antialiasing: true
                        anchors.fill: parent; anchors.margins: 20; radius: 10

                        Rectangle { color: &quot;#91AA9D&quot;; anchors.fill: parent; anchors.margins: 3; radius: 8; antialiasing: true }
                        Image { source: &quot;images/qt-logo.png&quot;; anchors.centerIn: parent }
                    }

                    MouseArea {
                        id: mouseArea
                        anchors.fill: parent
                        hoverEnabled: true

                        onClicked: {
                            container.forceActiveFocus()
                        }
                    }

                    states: State {
                        name: &quot;active&quot;; when: container.activeFocus
                        PropertyChanges { target: content; color: &quot;#FCFFF5&quot;; scale: 1.1 }
                    }

                    transitions: Transition {
                        NumberAnimation { properties: &quot;scale&quot;; duration: 100 }
                    }
                }
            }
        }
    }
}

</db:programlisting>
</db:article>
