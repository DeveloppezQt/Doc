<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>qt_generate_deploy_script</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Generate a custom deployment script.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Generate a custom deployment script.</db:para>
<db:para>The command is defined in the Core component of the Qt6 package, which can be loaded like so:</db:para>
<db:programlisting language="cpp" role="bad">find_package(Qt6 REQUIRED COMPONENTS Core)
</db:programlisting>
<db:para>This command was introduced in Qt 6.5.</db:para>
<db:section xml:id="synopsis">
<db:title>Synopsis</db:title>
<db:programlisting language="cpp" role="bad">qt_generate_deploy_script(
    OUTPUT_SCRIPT &amp;lt;var&amp;gt;
    [TARGET target]
    [NAME script_name]
    [CONTENT content]
)
</db:programlisting>
<db:para>If <db:link xlink:href="cmake-qt5-and-qt6-compatibility.xml#versionless-commands">versionless commands</db:link> are disabled, use qt6_generate_deploy_script() instead. It supports the same set of arguments as this command.</db:para>
</db:section>
<db:section xml:id="description">
<db:title>Description</db:title>
<db:para>The command generates a script whose full file path will be stored in the variable named by the OUTPUT_SCRIPT option. That script is only written at CMake generation time. It is intended to be used with the <db:link xlink:href="https://cmake.org/cmake/help/latest/command/install.html#script">install(SCRIPT)</db:link> command, which should come after the application's target has been installed using <db:link xlink:href="https://cmake.org/cmake/help/latest/command/install.html#targets">install(TARGETS)</db:link>.</db:para>
<db:para>The command takes care of generating a file named suitably for multi-config generators. Necessary includes are added such that Qt's CMake deployment functions and variables are accessible.</db:para>
<db:para>The TARGET argument specifies the target that will be deployed by the script. This affects the file name of the generated script, unless NAME is specified.</db:para>
<db:para>The NAME argument controls an identifiable portion within the deployment script's automatically generated name. The NAME argument defaults to custom if neither NAME nor TARGET are given.</db:para>
<db:para>The CONTENT argument specifies the code that is written to the deployment script. The content may contain generator expressions.</db:para>
<db:para>This command is intended for generating custom deployment scripts that directly call functions of Qt's deployment API. For less complex deployment purposes, it is more convenient to use <db:link xlink:href="qt-generate-deploy-app-script.xml">qt_generate_deploy_app_script()</db:link> or <db:link xlink:href="qt-generate-deploy-qml-app-script.xml#qt6-generate-deploy-qml-app-script">qt_generate_deploy_qml_app_script()</db:link>.</db:para>
</db:section>
<db:section xml:id="example">
<db:title>Example</db:title>
<db:programlisting language="cpp">cmake_minimum_required(VERSION 3.16...3.22)
project(MyThings)

find_package(Qt6 REQUIRED COMPONENTS Core)
qt_standard_project_setup()

qt_add_executable(MyApp main.cpp)

install(TARGETS MyApp
    BUNDLE  DESTINATION .
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)

qt_generate_deploy_script(
    TARGET MyApp
    OUTPUT_SCRIPT deploy_script
    CONTENT &quot;
qt_deploy_runtime_dependencies(
    EXECUTABLE $&amp;lt;TARGET_FILE_NAME:MyApp&amp;gt;
)
&quot;)
install(SCRIPT ${deploy_script})
</db:programlisting>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt-generate-deploy-app-script.xml">qt_generate_deploy_app_script()</db:link></db:member>
<db:member><db:link xlink:href="qt-generate-deploy-qml-app-script.xml#qt6-generate-deploy-qml-app-script">qt_generate_deploy_qml_app_script()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
