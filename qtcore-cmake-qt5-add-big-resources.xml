<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>qt5_add_big_resources</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Compiles big binary resources into object code.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="synopsis">
<db:title>Synopsis</db:title>
<db:programlisting language="cpp" role="bad">qt5_add_big_resources(&amp;lt;VAR&amp;gt; file1.qrc [file2.qrc ...]
                      [OPTIONS ...])
</db:programlisting>
</db:section>
<db:section xml:id="description">
<db:title>Description</db:title>
<db:para>Creates compiled object files from Qt resource files using the <db:link xlink:href="rcc.xml">Resource Compiler (rcc)</db:link>. Paths to the generated files are added to &lt;VAR&gt;.</db:para>
<db:para>This is similar to <db:link xlink:href="qtcore-cmake-qt5-add-resources.xml">qt5_add_resources</db:link>, but directly generates object files (.o, .obj) files instead of C++ source code. This allows to embed bigger resources, where compiling to C++ sources and then to binaries would be too time consuming or memory intensive.</db:para>
<db:para>Note that this macro is only available if using CMake 3.9 or later.</db:para>
</db:section>
<db:section xml:id="arguments">
<db:title>Arguments</db:title>
<db:para>You can set additional OPTIONS that should be added to the rcc calls. You can find possible options in the <db:link xlink:href="rcc.xml">rcc documentation</db:link>.</db:para>
</db:section>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:programlisting language="cpp">set(SOURCES main.cpp)
qt5_add_big_resources(SOURCES big_resource.qrc)
add_executable(myapp ${SOURCES})
</db:programlisting>
</db:section>
</db:article>
