<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt QML</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Qt QML module defines and implements the QML language.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt QML module provides a framework for developing applications and libraries with the <db:link xlink:href="">QML language</db:link>. It defines and implements the language and engine infrastructure, and provides an API to enable application developers to extend the QML language with custom types and integrate QML code with JavaScript and C++. The Qt QML module provides both a <db:link xlink:href="qtqml-qmlmodule.xml">QML API</db:link> and a <db:link xlink:href="qtqml-module.xml">C++ API</db:link>.</db:para>
<db:para>Note that while the Qt QML module provides the language and infrastructure for QML applications, the <db:link xlink:href="">Qt Quick</db:link> module provides many visual components, model-view support, an animation framework, and much more for building user interfaces.</db:para>
<db:para>If you're new to QML and Qt Quick, see <db:link xlink:href="">QML Applications</db:link> for an introduction to writing QML applications.</db:para>
<db:section xml:id="using-the-module">
<db:title>Using the Module</db:title>
<db:section xml:id="qml-api">
<db:title>QML API</db:title>
<db:para>The QML types of the module are available through the QtQml import. To use the types, add the following import statement to your .qml file:</db:para>
<db:programlisting language="qml">import QtQml
</db:programlisting>
</db:section>
<db:section xml:id="c-api">
<db:title>C++ API</db:title>
<db:para>Using a Qt module requires linking against the module library, either directly or through other dependencies. Several build tools have dedicated support for this, including <db:link xlink:href="http://www.cmake.org/cmake/help/documentation.html">CMake</db:link> and <db:link xlink:href="qmake-manual.xml">qmake</db:link>.</db:para>
<db:section xml:id="building-with-cmake">
<db:title>Building with CMake</db:title>
<db:para>Use the find_package() command to locate the needed module component in the Qt6 package:</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS Qml)
target_link_libraries(mytarget PRIVATE Qt6::Qml)
</db:programlisting>
<db:para>For more details, see the <db:link xlink:href="">Build with CMake</db:link> overview.</db:para>
<db:para>To provide foreign QML type support for a non-QML library, locate the QmlIntegration module as follows:</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS QmlIntegration)
target_link_libraries(mytarget PRIVATE Qt6::QmlIntegration)
</db:programlisting>
<db:para>See <db:link xlink:href="qt-generate-foreign-qml-types.xml#qt6-generate-foreign-qml-types">qt6_generate_foreign_qml_types</db:link> for details.</db:para>
</db:section>
<db:section xml:id="building-with-qmake">
<db:title>Building with qmake</db:title>
<db:para>To configure the module for building with qmake, add the module as a value of the QT variable in the project's .pro file:</db:para>
<db:programlisting language="cpp">QT += qml
</db:programlisting>
</db:section>
</db:section>
</db:section>
<db:section xml:id="qml-and-qml-types">
<db:title>QML and QML Types</db:title>
<db:para>The Qt QML module contains the QML framework and important QML types used in applications. The constructs of QML are described in the <db:link xlink:href="qmlreference.xml">The QML Reference</db:link>.</db:para>
<db:para>In addition to the <db:link xlink:href="qtqml-typesystem-basictypes.xml">QML Basic Types</db:link>, the module comes with the following QML object types:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-component.xml">Component</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-qtobject.xml">QtObject</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-binding.xml">Binding</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-connections.xml">Connections</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-timer.xml">Timer</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The <db:link xlink:href="qml-qtqml-qt.xml">Qt</db:link> global object provides useful enums and functions for various QML types.</db:para>
<db:section xml:id="lists-and-models">
<db:title>Lists and Models</db:title>
<db:para>New in Qt 5.1, the model types are moved to a submodule, QtQml.Models. The <db:link xlink:href="">Qt QML Models</db:link> page has more information.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>DelegateModel</db:para>
</db:listitem>
<db:listitem>
<db:para>DelegateModelGroup</db:para>
</db:listitem>
<db:listitem>
<db:para>ListElement</db:para>
</db:listitem>
<db:listitem>
<db:para>ListModel</db:para>
</db:listitem>
<db:listitem>
<db:para>ObjectModel</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="javascript-environment-for-qml-applications">
<db:title>JavaScript Environment for QML Applications</db:title>
<db:para>JavaScript expressions allow QML code to contain application logic. Qt QML provides the framework for running JavaScript expressions in QML and from C++.</db:para>
<db:para>These sections are from <db:link xlink:href="qmlreference.xml">The QML Reference</db:link>.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtqml-javascript-topic.xml">Integrating QML and JavaScript</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-javascript-expressions.xml">Using JavaScript Expressions with QML</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-javascript-dynamicobjectcreation.xml">Dynamic QML Object Creation from JavaScript</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-javascript-resources.xml">Defining JavaScript Resources In QML</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-javascript-imports.xml">Importing JavaScript Resources In QML</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-javascript-hostenvironment.xml">JavaScript Host Environment</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="integrating-qml-with-c-applications">
<db:title>Integrating QML with C++ Applications</db:title>
<db:para>The module also provides the framework for running QML applications. The QML framework allows QML code to contain JavaScript expressions and for the QML code to interact with C++ code.</db:para>
<db:section xml:id="articles-and-guides">
<db:title>Articles and Guides</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtqml-cppintegration-overview.xml">Overview - QML and C++ Integration</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-cppintegration-data.xml">Data Type Conversion Between QML and C++</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-integrating-with-js-values-from-cpp.xml">Integrating with JavaScript values from C++</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-cppintegration-exposecppattributes.xml">Exposing Attributes of C++ Types to QML</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-cppintegration-definetypes.xml">Defining QML Types from C++</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-writing-a-module.xml">Writing QML Modules</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-cppclasses-topic.xml">Important C++ Classes Provided By The Qt QML Module</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtqml-tutorials-extending-qml-example.xml">Writing QML Extensions with C++</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-cppintegration-topic.xml">Simple QML and C++ Integration Example</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="related-articles-and-guides">
<db:title>Related Articles and Guides</db:title>
<db:para>Further information for writing QML applications:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qmlreference.xml">The QML Reference</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-qtquick-compiler-tech.xml">Qt Quick Compiler</db:link> - overview of Qt Quick Compiler components</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="">QML Applications</db:link> - essential information for application development with QML and Qt Quick</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="">Qt Quick</db:link> - a module which provides a set of QML types and C++ classes for building user interfaces and applications with QML</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmldiskcache.xml">The QML Disk Cache</db:link> - how to fine tune if and where the QML engine caches compilation results</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qmlextendingexamples.xml">Examples</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:section xml:id="reference">
<db:title>Reference</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtqml-module.xml">C++ Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-qmlmodule.xml">QML Types</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="licenses-and-attributions">
<db:title>Licenses and Attributions</db:title>
<db:para>Qt QML is available under commercial licenses from <db:link xlink:href="http://www.qt.io/about-us/">The Qt Company</db:link>. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are <db:link xlink:href="">GNU Lesser General Public License, version 3</db:link>, or the <db:link xlink:href="">GNU General Public License, version 2</db:link>. See <db:link xlink:href="">Qt Licensing</db:link> for further details.</db:para>
<db:para>Furthermore Qt QML in Qt 6.3.2 may contain third party modules under following permissive licenses:</db:para>
<db:para/>
</db:section>
</db:article>
