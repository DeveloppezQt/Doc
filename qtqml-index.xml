<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Qml</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Qml Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Qt Qml module implements the QML language and offers APIs to register types for it.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt Qml module provides a framework for developing applications and libraries with the <db:link xlink:href="qmlreference.xml">QML language</db:link>. It defines and implements the language and engine infrastructure, and provides an API to enable application developers to <db:link xlink:href="qtqml-index.xml#registering-qml-types-and-qml-modules">register</db:link> custom QML types and modules and integrate QML code with JavaScript and C++. The Qt Qml module provides both a <db:link xlink:href="qtqml-qmlmodule.xml">QML API</db:link> and a <db:link xlink:href="qtqml-module.xml">C++ API</db:link>.</db:para>
<db:section xml:id="using-the-module">
<db:title>Using the Module</db:title>
<db:section xml:id="qml-api">
<db:title>QML API</db:title>
<db:para>The QML types of the module are available through the QtQml import. To use the types, add the following import statement to your .qml file:</db:para>
<db:programlisting language="qml">import QtQml
</db:programlisting>
<db:para>The Qt Qml module contains the QML framework and important QML types used in applications. The constructs of QML are described in the <db:link xlink:href="qmlreference.xml">The QML Reference</db:link>.</db:para>
<db:para>The <db:link xlink:href="qtqml-qmlmodule.xml">QML API</db:link> of the Qt Qml module provides a number of <db:link xlink:href="qtqml-typesystem-objecttypes.xml">QML Object Types</db:link>, <db:link xlink:href="qtqml-typesystem-valuetypes.xml">QML Value Types</db:link> and namespaces.</db:para>
</db:section>
<db:section xml:id="c-api">
<db:title>C++ API</db:title>
<db:para>Using a Qt module's C++ API requires linking against the module library, either directly or through other dependencies. Several build tools have dedicated support for this, including <db:link xlink:href="https://cmake.org/cmake/help/latest/">CMake</db:link> and <db:link xlink:href="qmake-manual.xml">qmake</db:link>.</db:para>
<db:para>The C++ API contains some <db:link xlink:href="qtqml-cppclasses-topic.xml">important classes</db:link> you should get familiar with. It also provides <db:link xlink:href="qtqml-integrating-with-js-values-from-cpp.xml">types</db:link> to hold JavaScript values.</db:para>
<db:section xml:id="building-with-cmake">
<db:title>Building with CMake</db:title>
<db:para>Use the find_package() command to locate the needed module component in the Qt6 package:</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS Qml)
target_link_libraries(mytarget PRIVATE Qt6::Qml)
</db:programlisting>
<db:para>For more details, see the <db:link xlink:href="">Build with CMake</db:link> overview.</db:para>
<db:para>To provide foreign QML type support for a non-QML library, locate the QmlIntegration module as follows:</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS QmlIntegration)
target_link_libraries(mytarget PRIVATE Qt6::QmlIntegration)
</db:programlisting>
<db:para>See <db:link xlink:href="qt-generate-foreign-qml-types.xml">qt6_generate_foreign_qml_types</db:link> for details.</db:para>
</db:section>
<db:section xml:id="building-with-qmake">
<db:title>Building with qmake</db:title>
<db:para>To configure the module for building with qmake, add the module as a value of the QT variable in the project's .pro file:</db:para>
<db:programlisting language="cpp">QT += qml
</db:programlisting>
</db:section>
</db:section>
</db:section>
<db:section xml:id="registering-qml-types-and-qml-modules">
<db:title>Registering QML Types and QML Modules</db:title>
<db:para>In order to register types for usage with QML you first need to define a <db:link xlink:href="qtqml-writing-a-module.xml">QML module</db:link>, preferably using <db:link xlink:href="qt-add-qml-module.xml">qt_add_qml_module</db:link> in CMake. Then, you can add C++ headers to your new module, and <db:link xlink:href="qtqml-cppintegration-definetypes.xml">define types</db:link> to be <db:link xlink:href="qtqml-cppintegration-exposecppattributes.xml">exposed to QML</db:link> in them.</db:para>
</db:section>
<db:section xml:id="tweaking-the-engine">
<db:title>Tweaking the engine</db:title>
<db:para>There are a number of knobs you can turn to customize the behavior of the QML engine. The page on <db:link xlink:href="qtqml-javascript-finetuning.xml">configuring the JavaScript engine</db:link> lists the environment variables you may use to this effect. The description of the <db:link xlink:href="qmldiskcache.xml">QML Disk Cache</db:link> describes the options related to how your QML components are compiled and loaded.</db:para>
</db:section>
<db:section xml:id="articles-and-guides">
<db:title>Articles and Guides</db:title>
<db:para>These articles contain information about Qt Qml.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qmlreference.xml">The QML Reference</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-tooling.xml">Qt Qml Tooling</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-writing-a-module.xml">Writing QML Modules</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-singleton.xml">Singletons in QML</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="reference">
<db:title>Reference</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtqml-module.xml">C++ Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtqml-qmlmodule.xml">QML Types</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="licenses-and-attributions">
<db:title>Licenses and Attributions</db:title>
<db:para>Qt Qml is available under commercial licenses from <db:link xlink:href="http://www.qt.io/about-us/">The Qt Company</db:link>. In addition, it is available under free software licenses. Since Qt 5.4, these free software licenses are <db:link xlink:href="">GNU Lesser General Public License, version 3</db:link>, or the <db:link xlink:href="">GNU General Public License, version 2</db:link>. See <db:link xlink:href="">Qt Licensing</db:link> for further details.</db:para>
<db:para>Furthermore Qt Qml in Qt 6.9.1 may contain third party modules under following permissive licenses:</db:para>
<db:variablelist role="groupsbymodule attributions-qtqml">
<db:varlistentry>
<db:term><db:link xlink:href="qtqml-attribution-masm.xml" xlink:role="page">JavaScriptCore Macro Assembler</db:link></db:term>
<db:listitem>
<db:para>BSD 2-clause &quot;Simplified&quot; License</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
</db:article>
