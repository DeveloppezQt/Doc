<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSourceLocation Class</db:title>
<db:productname>QtXmlPatterns</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt XML Patterns Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link> class identifies a location in a resource by URI, line, and column.</db:para>
<db:para>This class was introduced in Qt 4.4.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSourceLocation</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += xmlpatterns</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSourceLocation is part of <db:simplelist><db:member>xml-tools</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link> is a simple value based class that has three properties, <db:link xlink:href="qsourcelocation.xml#uri">uri</db:link>(), <db:link xlink:href="qsourcelocation.xml#line">line</db:link>(), and <db:link xlink:href="qsourcelocation.xml#column">column</db:link>(), that, taken together, identify a certain point in a resource, e.g., a file or an in-memory document.</db:para>
<db:para><db:link xlink:href="qsourcelocation.xml#line">line</db:link>() and <db:link xlink:href="qsourcelocation.xml#column">column</db:link>() refer to character counts (not byte counts), and they both start from 1, as opposed to 0.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSourceLocation">
<db:title>QSourceLocation::QSourceLocation()</db:title>
<db:para>Construct a <db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link> that doesn't identify anything at all.</db:para>
<db:para>For a default constructed QSourceLocation(), <db:link xlink:href="qsourcelocation.xml#isNull">isNull</db:link>() returns <db:code>true</db:code>.</db:para>
</db:section>
<db:section xml:id="QSourceLocation-2">
<db:title>QSourceLocation::QSourceLocation(const QUrl &amp;<db:emphasis>u</db:emphasis>, int <db:emphasis>l</db:emphasis> = -1, int <db:emphasis>c</db:emphasis> = -1)</db:title>
<db:para>Constructs a <db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link> with URI <db:code role="parameter">u</db:code>, line <db:code role="parameter">l</db:code> and column <db:code role="parameter">c</db:code>.</db:para>
</db:section>
<db:section xml:id="QSourceLocation-1">
<db:title>QSourceLocation::QSourceLocation(const QSourceLocation &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a <db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link> that is a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QSourceLocation">
<db:title>[noexcept] QSourceLocation::~QSourceLocation()</db:title>
<db:para>Destructor.</db:para>
</db:section>
<db:section xml:id="column">
<db:title>qint64 QSourceLocation::column() const</db:title>
<db:para>Returns the current column number. The column number refers to the count of characters, not bytes. The first column is column 1, not 0. The default value is -1, indicating the column number is unknown.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsourcelocation.xml#setColumn">setColumn</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isNull">
<db:title>bool QSourceLocation::isNull() const</db:title>
<db:para>Returns <db:code>true</db:code> if this <db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link> doesn't identify anything.</db:para>
<db:para>For a default constructed <db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link>, this function returns <db:code>true</db:code>. The same applies for any other <db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link> whose <db:link xlink:href="qsourcelocation.xml#uri">uri</db:link>() is invalid.</db:para>
</db:section>
<db:section xml:id="line">
<db:title>qint64 QSourceLocation::line() const</db:title>
<db:para>Returns the current line number. The first line number is 1, not 0. The default value is -1, indicating the line number is unknown.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsourcelocation.xml#setLine">setLine</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setColumn">
<db:title>void QSourceLocation::setColumn(qint64 <db:emphasis>newColumn</db:emphasis>)</db:title>
<db:para>Sets the column number to <db:code role="parameter">newColumn</db:code>. 0 is an invalid column number. The first column number is 1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsourcelocation.xml#column">column</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLine">
<db:title>void QSourceLocation::setLine(qint64 <db:emphasis>newLine</db:emphasis>)</db:title>
<db:para>Sets the line number to <db:code role="parameter">newLine</db:code>. 0 is an invalid line number. The first line number is 1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsourcelocation.xml#line">line</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setUri">
<db:title>void QSourceLocation::setUri(const QUrl &amp;<db:emphasis>newUri</db:emphasis>)</db:title>
<db:para>Sets the URI to <db:code role="parameter">newUri</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsourcelocation.xml#uri">uri</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="uri">
<db:title>QUrl QSourceLocation::uri() const</db:title>
<db:para>Returns the resource that this <db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link> refers to. For example, the resource could be a file in the local file system, if the URI scheme is <db:code>file</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsourcelocation.xml#setUri">setUri</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QSourceLocation::operator!=(const QSourceLocation &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns the opposite of applying operator==() for this <db:link xlink:href="qxmlname.xml">QXmlName</db:link> and <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QSourceLocation &amp;QSourceLocation::operator=(const QSourceLocation &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns this <db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link> instance to <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QSourceLocation::operator==(const QSourceLocation &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if this <db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link> is identical to <db:code role="parameter">other</db:code>.</db:para>
<db:para>Two <db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link> instances are equal if their <db:link xlink:href="qsourcelocation.xml#uri">uri</db:link>(), <db:link xlink:href="qsourcelocation.xml#line">line</db:link>() and <db:link xlink:href="qsourcelocation.xml#column">column</db:link>() are equal.</db:para>
<db:para><db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link> instances for which <db:link xlink:href="qsourcelocation.xml#isNull">isNull</db:link>() returns true are considered equal.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="qHash">
<db:title>[since 4.4] uint qHash(const QSourceLocation &amp;<db:emphasis>location</db:emphasis>)</db:title>
<db:para>Computes a hash key for the <db:link xlink:href="qsourcelocation.xml">QSourceLocation</db:link> <db:code role="parameter">location</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
</db:section>
<db:section xml:id="operator-lt-lt">
<db:title>[since 4.4] QDebug operator&lt;&lt;(QDebug <db:emphasis>debug</db:emphasis>, const QSourceLocation &amp;<db:emphasis>sourceLocation</db:emphasis>)</db:title>
<db:para>Prints <db:code role="parameter">sourceLocation</db:code> to the debug stream <db:code role="parameter">debug</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
</db:section>
</db:section>
</db:article>
