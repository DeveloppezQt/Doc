<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QMacToolBar Class</db:title>
<db:productname>QtMacExtras</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Mac Extras Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qmactoolbar.xml">QMacToolBar</db:link> class wraps the native NSToolbar class.</db:para>
<db:para>This class was introduced in Qt 5.3.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QMacToolBar</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.3</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += macextras</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qmactoolbar.xml">QMacToolBar</db:link> provides a Qt-based API for NSToolBar. The toolbar displays one or more <db:emphasis>items</db:emphasis>. Each toolbar item has an icon and a text label.</db:para>
<db:para>The toolbar must be attached to a <db:link xlink:href="qwindow.xml">QWindow</db:link> using the <db:link xlink:href="qmactoolbar.xml#attachToWindow">attachToWindow</db:link>() method in order to be visible. The toolbar is attached to the native NSWindow and is displayed above the <db:link xlink:href="qwindow.xml">QWindow</db:link>. <db:link xlink:href="qmactoolbar.xml">QMacToolBar</db:link> visibility follows window visibility.</db:para>
<db:para>Add items by calling <db:link xlink:href="qmactoolbar.xml#addItem">addItem</db:link>(). The toolbar has a customization menu which is available to the user from the toolbar context menu. Use <db:link xlink:href="qmactoolbar.xml#addAllowedItem">addAllowedItem</db:link>() to add items to the customization menu.</db:para>
<db:para>Usage: (<db:link xlink:href="qtwidgets-module.xml">QtWidgets</db:link>)</db:para>
<db:programlisting language="cpp">QMacToolBar *toolBar = new QMacToolBar(this);
QMacToolBarItem *toolBarItem = toolBar-&amp;gt;addItem(QIcon(), QStringLiteral(&quot;foo&quot;));
connect(toolBarItem, SIGNAL(activated()), this, SLOT(fooClicked()));

this-&amp;gt;window()-&amp;gt;winId(); // create window-&amp;gt;windowhandle()
toolBar-&amp;gt;attachToWindow(this-&amp;gt;window()-&amp;gt;windowHandle());
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmactoolbaritem.xml">QMacToolBarItem</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QMacToolBar">
<db:title>[explicit] QMacToolBar::QMacToolBar(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QMacToolBar</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QMacToolBar(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qmactoolbar.xml">QMacToolBar</db:link> with the given <db:code role="parameter">parent</db:code></db:para>
</db:section>
<db:section xml:id="QMacToolBar-1">
<db:title>[explicit] QMacToolBar::QMacToolBar(const QString &amp;<db:emphasis>identifier</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QMacToolBar</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>identifier</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QMacToolBar(const QString &amp;identifier, QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qmactoolbar.xml">QMacToolBar</db:link> with the given <db:code role="parameter">identifier</db:code> and <db:code role="parameter">parent</db:code>. The identifier is used to uniquely identify the toolbar within the appliation, for example when autosaving the toolbar configuration.</db:para>
</db:section>
<db:section xml:id="dtor.QMacToolBar">
<db:title>[virtual] QMacToolBar::~QMacToolBar()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QMacToolBar</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QMacToolBar()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the toolbar.</db:para>
</db:section>
<db:section xml:id="addAllowedItem">
<db:title>QMacToolBarItem *QMacToolBar::addAllowedItem(const QIcon &amp;<db:emphasis>icon</db:emphasis>, const QString &amp;<db:emphasis>text</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QMacToolBarItem *</db:type>
<db:methodname>addAllowedItem</db:methodname>
<db:methodparam>
<db:type>const QIcon &amp;</db:type>
<db:parameter>icon</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>text</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QMacToolBarItem * addAllowedItem(const QIcon &amp;icon, const QString &amp;text)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Add atoolbar item with <db:code role="parameter">icon</db:code> and <db:code role="parameter">text</db:code> to the toolbar customization menu.</db:para>
</db:section>
<db:section xml:id="addItem">
<db:title>QMacToolBarItem *QMacToolBar::addItem(const QIcon &amp;<db:emphasis>icon</db:emphasis>, const QString &amp;<db:emphasis>text</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QMacToolBarItem *</db:type>
<db:methodname>addItem</db:methodname>
<db:methodparam>
<db:type>const QIcon &amp;</db:type>
<db:parameter>icon</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>text</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QMacToolBarItem * addItem(const QIcon &amp;icon, const QString &amp;text)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Add a toolbar item with <db:code role="parameter">icon</db:code> and <db:code role="parameter">text</db:code>.</db:para>
</db:section>
<db:section xml:id="addSeparator">
<db:title>void QMacToolBar::addSeparator()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addSeparator</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addSeparator()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Add a toolbar separator item.</db:para>
</db:section>
<db:section xml:id="allowedItems">
<db:title>QList&lt;QMacToolBarItem *&gt; QMacToolBar::allowedItems()</db:title>
<db:methodsynopsis>
<db:type>QList&lt;QMacToolBarItem *&gt;</db:type>
<db:methodname>allowedItems</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QMacToolBarItem *&gt; allowedItems()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list oftoolbar items shown on the the toolbar customization menu.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmactoolbar.xml#setAllowedItems">setAllowedItems</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="attachToWindow">
<db:title>void QMacToolBar::attachToWindow(QWindow *<db:emphasis>window</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>attachToWindow</db:methodname>
<db:methodparam>
<db:type>QWindow *</db:type>
<db:parameter>window</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void attachToWindow(QWindow *window)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Attaches the toolbar to <db:code role="parameter">window</db:code>. The toolbar will be displayed at the top of the native window, under and attached to the title bar above the <db:link xlink:href="qwindow.xml">QWindow</db:link>. The toolbar is displayed outside the QWidnow area.</db:para>
<db:para>Use <db:link xlink:href="qwidget.xml#windowHandle">QWidget::windowHandle</db:link>() to get a <db:link xlink:href="qwindow.xml">QWindow</db:link> pointer from a <db:link xlink:href="qwidget.xml">QWidget</db:link> instance. At app startup the <db:link xlink:href="qwindow.xml">QWindow</db:link> might not have been created yet, call <db:link xlink:href="qwidget.xml#winId">QWidget::winId</db:link>() to make sure it is.</db:para>
</db:section>
<db:section xml:id="detachFromWindow">
<db:title>void QMacToolBar::detachFromWindow()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>detachFromWindow</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void detachFromWindow()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Detatches the toolbar from the current window.</db:para>
</db:section>
<db:section xml:id="items">
<db:title>QList&lt;QMacToolBarItem *&gt; QMacToolBar::items()</db:title>
<db:methodsynopsis>
<db:type>QList&lt;QMacToolBarItem *&gt;</db:type>
<db:methodname>items</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QMacToolBarItem *&gt; items()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of the default toolbar items.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmactoolbar.xml#setItems">setItems</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="nativeToolbar">
<db:title>NSToolbar *QMacToolBar::nativeToolbar() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>NSToolbar *</db:type>
<db:methodname>nativeToolbar</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">NSToolbar * nativeToolbar() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the naitve NSTooolbar object.</db:para>
</db:section>
<db:section xml:id="setAllowedItems">
<db:title>void QMacToolBar::setAllowedItems(QList&lt;QMacToolBarItem *&gt; &amp;<db:emphasis>allowedItems</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setAllowedItems</db:methodname>
<db:methodparam>
<db:type>QList&lt;QMacToolBarItem *&gt; &amp;</db:type>
<db:parameter>allowedItems</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setAllowedItems(QList&lt;QMacToolBarItem *&gt; &amp;allowedItems)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the list of toolbar items shown on the toolbar customization menu to <db:code role="parameter">allowedItems</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmactoolbar.xml#allowedItems">allowedItems</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setItems">
<db:title>void QMacToolBar::setItems(QList&lt;QMacToolBarItem *&gt; &amp;<db:emphasis>items</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setItems</db:methodname>
<db:methodparam>
<db:type>QList&lt;QMacToolBarItem *&gt; &amp;</db:type>
<db:parameter>items</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setItems(QList&lt;QMacToolBarItem *&gt; &amp;items)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the list of the default toolbar <db:code role="parameter">items</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmactoolbar.xml#items">items</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
