<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QLowEnergyServiceData Class</db:title>
<db:productname>QtBluetooth</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Bluetooth Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qlowenergyservicedata.xml">QLowEnergyServiceData</db:link> class is used to set up GATT service data.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QLowEnergyServiceData</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += bluetooth</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QLowEnergyServiceData is part of <db:simplelist><db:member>shared</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>An Object of this class provides a service to be added to a GATT server via <db:link xlink:href="qlowenergycontroller.xml#addService">QLowEnergyController::addService</db:link>().</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="ServiceType-enum">
<db:title>enum QLowEnergyServiceData::ServiceType</db:title>
<db:enumsynopsis>
<db:enumname>ServiceType</db:enumname>
<db:enumitem>
<db:enumidentifier>ServiceTypePrimary</db:enumidentifier>
<db:enumvalue>0x2800</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ServiceTypeSecondary</db:enumidentifier>
<db:enumvalue>0x2801</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>The type of GATT service.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlowenergyservicedata.xml">QLowEnergyServiceData</db:link></db:emphasis>::ServiceTypePrimary</db:code></db:para>
</db:td>
<db:td><db:code>0x2800</db:code></db:td>
<db:td>
<db:para>The service is a primary service.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlowenergyservicedata.xml">QLowEnergyServiceData</db:link></db:emphasis>::ServiceTypeSecondary</db:code></db:para>
</db:td>
<db:td><db:code>0x2801</db:code></db:td>
<db:td>
<db:para>The service is a secondary service. Secondary services are included by other services to implement some higher-level functionality.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QLowEnergyServiceData">
<db:title>QLowEnergyServiceData::QLowEnergyServiceData()</db:title>
<db:constructorsynopsis>
<db:methodname>QLowEnergyServiceData</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QLowEnergyServiceData()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a new invalid object of this class.</db:para>
</db:section>
<db:section xml:id="QLowEnergyServiceData-1">
<db:title>QLowEnergyServiceData::QLowEnergyServiceData(const QLowEnergyServiceData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QLowEnergyServiceData</db:methodname>
<db:methodparam>
<db:type>const QLowEnergyServiceData &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QLowEnergyServiceData(const QLowEnergyServiceData &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new object of this class that is a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QLowEnergyServiceData">
<db:title>QLowEnergyServiceData::~QLowEnergyServiceData()</db:title>
<db:destructorsynopsis>
<db:methodname>~QLowEnergyServiceData</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QLowEnergyServiceData()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys this object.</db:para>
</db:section>
<db:section xml:id="addCharacteristic">
<db:title>void QLowEnergyServiceData::addCharacteristic(const QLowEnergyCharacteristicData &amp;<db:emphasis>characteristic</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addCharacteristic</db:methodname>
<db:methodparam>
<db:type>const QLowEnergyCharacteristicData &amp;</db:type>
<db:parameter>characteristic</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addCharacteristic(const QLowEnergyCharacteristicData &amp;characteristic)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Adds <db:code role="parameter">characteristic</db:code> to the list of characteristics, if it is valid.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyservicedata.xml#setCharacteristics">setCharacteristics</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addIncludedService">
<db:title>void QLowEnergyServiceData::addIncludedService(QLowEnergyService *<db:emphasis>service</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addIncludedService</db:methodname>
<db:methodparam>
<db:type>QLowEnergyService *</db:type>
<db:parameter>service</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addIncludedService(QLowEnergyService *service)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Adds <db:code role="parameter">service</db:code> to the list of included services. The <db:code role="parameter">service</db:code> object must have been returned from a call to <db:link xlink:href="qlowenergycontroller.xml#addService">QLowEnergyController::addService</db:link>. This requirement prevents circular includes (which are forbidden by the Bluetooth specification), and also helps to support the use case of including more than one service of the same type.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyservicedata.xml#setIncludedServices">setIncludedServices</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="characteristics">
<db:title>QList&lt;QLowEnergyCharacteristicData&gt; QLowEnergyServiceData::characteristics() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;QLowEnergyCharacteristicData&gt;</db:type>
<db:methodname>characteristics</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QLowEnergyCharacteristicData&gt; characteristics() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of characteristics.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyservicedata.xml#setCharacteristics">setCharacteristics</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="includedServices">
<db:title>QList&lt;QLowEnergyService *&gt; QLowEnergyServiceData::includedServices() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;QLowEnergyService *&gt;</db:type>
<db:methodname>includedServices</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QLowEnergyService *&gt; includedServices() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of included services.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyservicedata.xml#setIncludedServices">setIncludedServices</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isValid">
<db:title>bool QLowEnergyServiceData::isValid() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isValid</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isValid() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if this service is has a non-null UUID.</db:para>
</db:section>
<db:section xml:id="setCharacteristics">
<db:title>void QLowEnergyServiceData::setCharacteristics(const QList&lt;QLowEnergyCharacteristicData&gt; &amp;<db:emphasis>characteristics</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setCharacteristics</db:methodname>
<db:methodparam>
<db:type>const QList&lt;QLowEnergyCharacteristicData&gt; &amp;</db:type>
<db:parameter>characteristics</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setCharacteristics(const QList&lt;QLowEnergyCharacteristicData&gt; &amp;characteristics)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the list of characteristics to <db:code role="parameter">characteristics</db:code>. Only valid characteristics are considered.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyservicedata.xml#characteristics">characteristics</db:link>()</db:member>
<db:member><db:link xlink:href="qlowenergyservicedata.xml#addCharacteristic">addCharacteristic</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setIncludedServices">
<db:title>void QLowEnergyServiceData::setIncludedServices(const QList&lt;QLowEnergyService *&gt; &amp;<db:emphasis>services</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setIncludedServices</db:methodname>
<db:methodparam>
<db:type>const QList&lt;QLowEnergyService *&gt; &amp;</db:type>
<db:parameter>services</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setIncludedServices(const QList&lt;QLowEnergyService *&gt; &amp;services)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the list of included services to <db:code role="parameter">services</db:code>. All objects in this list must have been returned from a call to <db:link xlink:href="qlowenergycontroller.xml#addService">QLowEnergyController::addService</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyservicedata.xml#includedServices">includedServices</db:link>()</db:member>
<db:member><db:link xlink:href="qlowenergyservicedata.xml#addIncludedService">addIncludedService</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setType">
<db:title>void QLowEnergyServiceData::setType(QLowEnergyServiceData::ServiceType <db:emphasis>type</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setType</db:methodname>
<db:methodparam>
<db:type>QLowEnergyServiceData::ServiceType</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setType(QLowEnergyServiceData::ServiceType type)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the type of this service to <db:code role="parameter">type</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyservicedata.xml#type">type</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setUuid">
<db:title>void QLowEnergyServiceData::setUuid(const QBluetoothUuid &amp;<db:emphasis>uuid</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setUuid</db:methodname>
<db:methodparam>
<db:type>const QBluetoothUuid &amp;</db:type>
<db:parameter>uuid</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setUuid(const QBluetoothUuid &amp;uuid)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the UUID of this service to <db:code role="parameter">uuid</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyservicedata.xml#uuid">uuid</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="swap">
<db:title>void QLowEnergyServiceData::swap(QLowEnergyServiceData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>swap</db:methodname>
<db:methodparam>
<db:type>QLowEnergyServiceData &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void swap(QLowEnergyServiceData &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Swaps this object with <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="type">
<db:title>QLowEnergyServiceData::ServiceType QLowEnergyServiceData::type() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QLowEnergyServiceData::ServiceType</db:type>
<db:methodname>type</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QLowEnergyServiceData::ServiceType type() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the type of this service.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyservicedata.xml#setType">setType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="uuid">
<db:title>QBluetoothUuid QLowEnergyServiceData::uuid() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QBluetoothUuid</db:type>
<db:methodname>uuid</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QBluetoothUuid uuid() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the UUID of this service.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergyservicedata.xml#setUuid">setUuid</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QLowEnergyServiceData &amp;QLowEnergyServiceData::operator=(const QLowEnergyServiceData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QLowEnergyServiceData &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QLowEnergyServiceData &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QLowEnergyServiceData &amp; operator=(const QLowEnergyServiceData &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Makes this object a copy of <db:code role="parameter">other</db:code> and returns the new value of this object.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-not-eq">
<db:title>bool operator!=(const QLowEnergyServiceData &amp;<db:emphasis>a</db:emphasis>, const QLowEnergyServiceData &amp;<db:emphasis>b</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>operator!=</db:methodname>
<db:methodparam>
<db:type>const QLowEnergyServiceData &amp;</db:type>
<db:parameter>a</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QLowEnergyServiceData &amp;</db:type>
<db:parameter>b</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator!=(const QLowEnergyServiceData &amp;a, const QLowEnergyServiceData &amp;b)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if <db:code role="parameter">a</db:code> and <db:code role="parameter">b</db:code> are unequal with respect to their public state, otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool operator==(const QLowEnergyServiceData &amp;<db:emphasis>a</db:emphasis>, const QLowEnergyServiceData &amp;<db:emphasis>b</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>const QLowEnergyServiceData &amp;</db:type>
<db:parameter>a</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QLowEnergyServiceData &amp;</db:type>
<db:parameter>b</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(const QLowEnergyServiceData &amp;a, const QLowEnergyServiceData &amp;b)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if <db:code role="parameter">a</db:code> and <db:code role="parameter">b</db:code> are equal with respect to their public state, otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
