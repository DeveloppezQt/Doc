<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>VideoOutput QML Type</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>Render video or camera viewfinder.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtMultimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>VideoOutput is part of <db:simplelist><db:member>multimedia_qml</db:member><db:member>multimedia_video_qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:programlisting language="qml">Rectangle {
    width: 800
    height: 600
    color: &quot;black&quot;

    MediaPlayer {
        id: player
        source: &quot;file://video.webm&quot;
        videoOutput: videoOutput
    }

    VideoOutput {
        id: videoOutput
        anchors.fill: parent
    }
}

</db:programlisting>
<db:para>The <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link> item supports untransformed, stretched, and uniformly scaled video presentation. For a description of stretched uniformly scaled presentation, see the <db:link xlink:href="qml-qtmultimedia-videooutput.xml#fillMode-prop">fillMode</db:link> property description.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-camera.xml">Camera</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="contentRect-prop">
<db:title>contentRect : rectangle</db:title>
<db:fieldsynopsis>
<db:type>rectangle</db:type>
<db:varname>contentRect</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the item coordinates of the area that would contain video to render. With certain fill modes, this rectangle will be larger than the visible area of the <db:code>VideoOutput</db:code>.</db:para>
<db:para>This property is useful when other coordinates are specified in terms of the source dimensions - this applied for relative (normalized) frame coordinates in the range of 0 to 1.0.</db:para>
<db:para>Areas outside this will be transparent.</db:para>
</db:section>
<db:section xml:id="fillMode-prop">
<db:title>fillMode : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>fillMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Set this property to define how the video is scaled to fit the target area.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Stretch - the video is scaled to fit.</db:para>
</db:listitem>
<db:listitem>
<db:para>PreserveAspectFit - the video is scaled uniformly to fit without cropping</db:para>
</db:listitem>
<db:listitem>
<db:para>PreserveAspectCrop - the video is scaled uniformly to fill, cropping if necessary</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The default fill mode is PreserveAspectFit.</db:para>
</db:section>
<db:section xml:id="orientation-prop">
<db:title>orientation : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>orientation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>In some cases the source video stream requires a certain orientation to be correct. This includes sources like a camera viewfinder, where the displayed viewfinder should match reality, no matter what rotation the rest of the user interface has.</db:para>
<db:para>This property allows you to apply a rotation (in steps of 90 degrees) to compensate for any user interface rotation, with positive values in the anti-clockwise direction.</db:para>
<db:para>The orientation change will also affect the mapping of coordinates from source to viewport.</db:para>
</db:section>
<db:section xml:id="sourceRect-prop">
<db:title>sourceRect : rectangle</db:title>
<db:fieldsynopsis>
<db:type>rectangle</db:type>
<db:varname>sourceRect</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the area of the source video content that is considered for rendering. The values are in source pixel coordinates, adjusted for the source's pixel aspect ratio.</db:para>
<db:para>Note that typically the top left corner of this rectangle will be <db:code>0,0</db:code> while the width and height will be the width and height of the input content. Only when the video source has a viewport set, these values will differ.</db:para>
<db:para>The orientation setting does not affect this rectangle.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qvideoframeformat.xml#viewport">QVideoFrameFormat::viewport</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="videoSink-prop">
<db:title>videoSink : object</db:title>
<db:fieldsynopsis>
<db:type>object</db:type>
<db:varname>videoSink</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the underlaying C++ <db:link xlink:href="qvideosink.xml">QVideoSink</db:link> object that is used to render the video frames to this <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link> element.</db:para>
<db:para>Normal usage of <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link> from QML should not require using this property.</db:para>
</db:section>
</db:section>
</db:article>
