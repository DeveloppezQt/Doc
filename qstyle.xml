<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QStyle Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qstyle.xml">QStyle</db:link> class is an abstract base class that encapsulates the look and feel of a GUI.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QStyle</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qcommonstyle.xml" xlink:role="class">QCommonStyle</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QStyle is part of <db:simplelist><db:member>appearance</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Qt contains a set of <db:link xlink:href="qstyle.xml">QStyle</db:link> subclasses that emulate the styles of the different platforms supported by Qt (QWindowsStyle, QMacStyle etc.). By default, these styles are built into the Qt GUI module. Styles can also be made available as plugins.</db:para>
<db:para>Qt's built-in widgets use <db:link xlink:href="qstyle.xml">QStyle</db:link> to perform nearly all of their drawing, ensuring that they look exactly like the equivalent native widgets. The diagram below shows a <db:link xlink:href="qcombobox.xml">QComboBox</db:link> in nine different styles.</db:para>
<db:mediaobject>
<db:alt>Nine combo boxes</db:alt>
<db:imageobject>
<db:imagedata fileref="images/qstyle-comboboxes.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Topics:</db:para>
<db:section xml:id="setting-a-style">
<db:title>Setting a Style</db:title>
<db:para>The style of the entire application can be set using the <db:link xlink:href="qapplication.xml#setStyle">QApplication::setStyle</db:link>() function. It can also be specified by the user of the application, using the <db:code>-style</db:code> command-line option:</db:para>
<db:programlisting language="cpp">./myapplication -style windows
</db:programlisting>
<db:para>If no style is specified, Qt will choose the most appropriate style for the user's platform or desktop environment.</db:para>
<db:para>A style can also be set on an individual widget using the <db:link xlink:href="qwidget.xml#setStyle">QWidget::setStyle</db:link>() function.</db:para>
</db:section>
<db:section xml:id="developing-style-aware-custom-widgets">
<db:title>Developing Style-Aware Custom Widgets</db:title>
<db:para>If you are developing custom widgets and want them to look good on all platforms, you can use <db:link xlink:href="qstyle.xml">QStyle</db:link> functions to perform parts of the widget drawing, such as <db:link xlink:href="qstyle.xml#drawItemText">drawItemText</db:link>(), <db:link xlink:href="qstyle.xml#drawItemPixmap">drawItemPixmap</db:link>(), <db:link xlink:href="qstyle.xml#drawPrimitive">drawPrimitive</db:link>(), <db:link xlink:href="qstyle.xml#drawControl">drawControl</db:link>(), and <db:link xlink:href="qstyle.xml#drawComplexControl">drawComplexControl</db:link>().</db:para>
<db:para>Most <db:link xlink:href="qstyle.xml">QStyle</db:link> draw functions take four arguments:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>an enum value specifying which graphical element to draw</db:para>
</db:listitem>
<db:listitem>
<db:para>a <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> specifying how and where to render that element</db:para>
</db:listitem>
<db:listitem>
<db:para>a <db:link xlink:href="qpainter.xml">QPainter</db:link> that should be used to draw the element</db:para>
</db:listitem>
<db:listitem>
<db:para>a <db:link xlink:href="qwidget.xml">QWidget</db:link> on which the drawing is performed (optional)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>For example, if you want to draw a focus rectangle on your widget, you can write:</db:para>
<db:programlisting language="cpp">void MyWidget::paintEvent(QPaintEvent * /* event */)
{
    QPainter painter(this);

    QStyleOptionFocusRect option;
    option.initFrom(this);
    option.backgroundColor = palette().color(QPalette::Background);

    style()-&amp;gt;drawPrimitive(QStyle::PE_FrameFocusRect, &amp;amp;option, &amp;amp;painter, this);
}
</db:programlisting>
<db:para><db:link xlink:href="qstyle.xml">QStyle</db:link> gets all the information it needs to render the graphical element from <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link>. The widget is passed as the last argument in case the style needs it to perform special effects (such as animated default buttons on macOS), but it isn't mandatory. In fact, you can use <db:link xlink:href="qstyle.xml">QStyle</db:link> to draw on any paint device, not just widgets, by setting the <db:link xlink:href="qpainter.xml">QPainter</db:link> properly.</db:para>
<db:para><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> has various subclasses for the various types of graphical elements that can be drawn. For example, <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_FrameFocusRect</db:link> expects a <db:link xlink:href="qstyleoptionfocusrect.xml">QStyleOptionFocusRect</db:link> argument.</db:para>
<db:para>To ensure that drawing operations are as fast as possible, <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> and its subclasses have public data members. See the <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> class documentation for details on how to use it.</db:para>
<db:para>For convenience, Qt provides the <db:link xlink:href="qstylepainter.xml">QStylePainter</db:link> class, which combines a <db:link xlink:href="qstyle.xml">QStyle</db:link>, a <db:link xlink:href="qpainter.xml">QPainter</db:link>, and a <db:link xlink:href="qwidget.xml">QWidget</db:link>. This makes it possible to write</db:para>
<db:programlisting language="cpp">    QStylePainter painter(this);
    ...
    painter.drawPrimitive(QStyle::PE_FrameFocusRect, option);
</db:programlisting>
<db:para>instead of</db:para>
<db:programlisting language="cpp">    QPainter painter(this);
    ...
    style()-&amp;gt;drawPrimitive(QStyle::PE_FrameFocusRect, &amp;amp;option, &amp;amp;painter, this);
</db:programlisting>
</db:section>
<db:section xml:id="creating-a-custom-style">
<db:title>Creating a Custom Style</db:title>
<db:para>You can create a custom look and feel for your application by creating a custom style. There are two approaches to creating a custom style. In the static approach, you either choose an existing <db:link xlink:href="qstyle.xml">QStyle</db:link> class, subclass it, and reimplement virtual functions to provide the custom behavior, or you create an entire <db:link xlink:href="qstyle.xml">QStyle</db:link> class from scratch. In the dynamic approach, you modify the behavior of your system style at runtime. The static approach is described below. The dynamic approach is described in <db:link xlink:href="qproxystyle.xml">QProxyStyle</db:link>.</db:para>
<db:para>The first step in the static approach is to pick one of the styles provided by Qt from which you will build your custom style. Your choice of <db:link xlink:href="qstyle.xml">QStyle</db:link> class will depend on which style resembles your desired style the most. The most general class that you can use as a base is <db:link xlink:href="qcommonstyle.xml">QCommonStyle</db:link> (not <db:link xlink:href="qstyle.xml">QStyle</db:link>). This is because Qt requires its styles to be <db:link xlink:href="qcommonstyle.xml">QCommonStyle</db:link>s.</db:para>
<db:para>Depending on which parts of the base style you want to change, you must reimplement the functions that are used to draw those parts of the interface. To illustrate this, we will modify the look of the spin box arrows drawn by QWindowsStyle. The arrows are <db:emphasis>primitive elements</db:emphasis> that are drawn by the <db:link xlink:href="qstyle.xml#drawPrimitive">drawPrimitive</db:link>() function, so we need to reimplement that function. We need the following class declaration:</db:para>
<db:programlisting language="cpp">class CustomStyle : public QProxyStyle
{
    Q_OBJECT

public:
    CustomStyle(const QWidget *widget);
    ~CustomStyle() {}

    void drawPrimitive(PrimitiveElement element, const QStyleOption *option,
                       QPainter *painter, const QWidget *widget) const override;
};
</db:programlisting>
<db:para>To draw its up and down arrows, <db:link xlink:href="qspinbox.xml">QSpinBox</db:link> uses the <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorSpinUp</db:link> and <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorSpinDown</db:link> primitive elements. Here's how to reimplement the <db:link xlink:href="qstyle.xml#drawPrimitive">drawPrimitive</db:link>() function to draw them differently:</db:para>
<db:programlisting language="cpp">void CustomStyle::drawPrimitive(PrimitiveElement element, const QStyleOption *option,
                                QPainter *painter, const QWidget *widget) const
{
    if (element == PE_IndicatorSpinUp || element == PE_IndicatorSpinDown) {
        QPolygon points(3);
        int x = option-&amp;gt;rect.x();
        int y = option-&amp;gt;rect.y();
        int w = option-&amp;gt;rect.width() / 2;
        int h = option-&amp;gt;rect.height() / 2;
        x += (option-&amp;gt;rect.width() - w) / 2;
        y += (option-&amp;gt;rect.height() - h) / 2;

        if (element == PE_IndicatorSpinUp) {
            points[0] = QPoint(x, y + h);
            points[1] = QPoint(x + w, y + h);
            points[2] = QPoint(x + w / 2, y);
        } else { // PE_SpinBoxDown
            points[0] = QPoint(x, y);
            points[1] = QPoint(x + w, y);
            points[2] = QPoint(x + w / 2, y + h);
        }

        if (option-&amp;gt;state &amp;amp; State_Enabled) {
            painter-&amp;gt;setPen(option-&amp;gt;palette.mid().color());
            painter-&amp;gt;setBrush(option-&amp;gt;palette.buttonText());
        } else {
            painter-&amp;gt;setPen(option-&amp;gt;palette.buttonText().color());
            painter-&amp;gt;setBrush(option-&amp;gt;palette.mid());
        }
        painter-&amp;gt;drawPolygon(points);
    } else {
    QProxyStyle::drawPrimitive(element, option, painter, widget);
    }
}
</db:programlisting>
<db:para>Notice that we don't use the <db:code>widget</db:code> argument, except to pass it on to the QWindowStyle::drawPrimitive() function. As mentioned earlier, the information about what is to be drawn and how it should be drawn is specified by a <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> object, so there is no need to ask the widget.</db:para>
<db:para>If you need to use the <db:code>widget</db:code> argument to obtain additional information, be careful to ensure that it isn't 0 and that it is of the correct type before using it. For example:</db:para>
<db:programlisting language="cpp">    const QSpinBox *spinBox = qobject_cast&amp;lt;const QSpinBox *&amp;gt;(widget);
    if (spinBox) {
    ...
    }
</db:programlisting>
<db:para>When implementing a custom style, you cannot assume that the widget is a <db:link xlink:href="qspinbox.xml">QSpinBox</db:link> just because the enum value is called <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorSpinUp</db:link> or <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorSpinDown</db:link>.</db:para>
<db:para>The documentation for the <db:link xlink:href="qtwidgets-widgets-styles-example.xml">Styles</db:link> example covers this topic in more detail.</db:para>
<db:warning>
<db:para>Qt style sheets are currently not supported for custom <db:link xlink:href="qstyle.xml">QStyle</db:link> subclasses. We plan to address this in some future release.</db:para>
</db:warning>
</db:section>
<db:section xml:id="using-a-custom-style">
<db:title>Using a Custom Style</db:title>
<db:para>There are several ways of using a custom style in a Qt application. The simplest way is to pass the custom style to the <db:link xlink:href="qapplication.xml#setStyle">QApplication::setStyle</db:link>() static function before creating the <db:link xlink:href="qapplication.xml">QApplication</db:link> object:</db:para>
<db:programlisting language="cpp">#include &amp;lt;QtWidgets&amp;gt;

#include &quot;customstyle.h&quot;

int main(int argc, char *argv[])
{
    QApplication::setStyle(new CustomStyle);
    QApplication app(argc, argv);
    QSpinBox spinBox;
    spinBox.show();
    return app.exec();
}
</db:programlisting>
<db:para>You can call <db:link xlink:href="qapplication.xml#setStyle">QApplication::setStyle</db:link>() at any time, but by calling it before the constructor, you ensure that the user's preference, set using the <db:code>-style</db:code> command-line option, is respected.</db:para>
<db:para>You may want to make your custom style available for use in other applications, which may not be yours and hence not available for you to recompile. The Qt Plugin system makes it possible to create styles as plugins. Styles created as plugins are loaded as shared objects at runtime by Qt itself. Please refer to the <db:link xlink:href="">Qt Plugin</db:link> documentation for more information on how to go about creating a style plugin.</db:para>
<db:para>Compile your plugin and put it into Qt's <db:code>plugins/styles</db:code> directory. We now have a pluggable style that Qt can load automatically. To use your new style with existing applications, simply start the application with the following argument:</db:para>
<db:programlisting language="cpp">./myapplication -style custom
</db:programlisting>
<db:para>The application will use the look and feel from the custom style you implemented.</db:para>
</db:section>
<db:section xml:id="right-to-left-desktops">
<db:title>Right-to-Left Desktops</db:title>
<db:para>Languages written from right to left (such as Arabic and Hebrew) usually also mirror the whole layout of widgets, and require the light to come from the screen's top-right corner instead of top-left.</db:para>
<db:para>If you create a custom style, you should take special care when drawing asymmetric elements to make sure that they also look correct in a mirrored layout. An easy way to test your styles is to run applications with the <db:code>-reverse</db:code> command-line option or to call <db:link xlink:href="qguiapplication.xml#layoutDirection-prop">QApplication::setLayoutDirection</db:link>() in your <db:code>main()</db:code> function.</db:para>
<db:para>Here are some things to keep in mind when making a style work well in a right-to-left environment:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qstyle.xml#subControlRect">subControlRect</db:link>() and <db:link xlink:href="qstyle.xml#subElementRect">subElementRect</db:link>() return rectangles in screen coordinates</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qstyleoption.xml#direction-var">QStyleOption::direction</db:link> indicates in which direction the item should be drawn in</db:para>
</db:listitem>
<db:listitem>
<db:para>If a style is not right-to-left aware it will display items as if it were left-to-right</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qstyle.xml#visualRect">visualRect</db:link>(), <db:link xlink:href="qstyle.xml#visualPos">visualPos</db:link>(), and <db:link xlink:href="qstyle.xml#visualAlignment">visualAlignment</db:link>() are helpful functions that will translate from logical to screen representations.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qstyle.xml#alignedRect">alignedRect</db:link>() will return a logical rect aligned for the current direction</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="styles-in-item-views">
<db:title>Styles in Item Views</db:title>
<db:para>The painting of items in views is performed by a delegate. Qt's default delegate, <db:link xlink:href="qstyleditemdelegate.xml">QStyledItemDelegate</db:link>, is also used for calculating bounding rectangles of items, and their sub-elements for the various kind of item <db:link xlink:href="qt.xml#ItemDataRole-enum">data roles</db:link> <db:link xlink:href="qstyleditemdelegate.xml">QStyledItemDelegate</db:link> supports. See the <db:link xlink:href="qstyleditemdelegate.xml">QStyledItemDelegate</db:link> class description to find out which datatypes and roles are supported. You can read more about item data roles in <db:link xlink:href="model-view-programming.xml">Model/View Programming</db:link>.</db:para>
<db:para>When <db:link xlink:href="qstyleditemdelegate.xml">QStyledItemDelegate</db:link> paints its items, it draws <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_ItemViewItem</db:link>, and calculates their size with <db:link xlink:href="qstyle.xml#ContentsType-enum">CT_ItemViewItem</db:link>. Note also that it uses <db:link xlink:href="qstyle.xml#SubElement-enum">SE_ItemViewItemText</db:link> to set the size of editors. When implementing a style to customize drawing of item views, you need to check the implementation of <db:link xlink:href="qcommonstyle.xml">QCommonStyle</db:link> (and any other subclasses from which your style inherits). This way, you find out which and how other style elements are painted, and you can then reimplement the painting of elements that should be drawn differently.</db:para>
<db:para>We include a small example where we customize the drawing of item backgrounds.</db:para>
<db:programlisting language="cpp">    switch (element) {
        case (PE_PanelItemViewItem): {
            painter-&amp;gt;save();

            QPoint topLeft = option-&amp;gt;rect.topLeft();
            QPoint bottomRight = option-&amp;gt;rect.topRight();
            QLinearGradient backgroundGradient(topLeft, bottomRight);
            backgroundGradient.setColorAt(0.0, QColor(Qt::yellow).lighter(190));
            backgroundGradient.setColorAt(1.0, Qt::white);
            painter-&amp;gt;fillRect(option-&amp;gt;rect, QBrush(backgroundGradient));

            painter-&amp;gt;restore();
        break;
        }
        default:
            QProxyStyle::drawPrimitive(element, option, painter, widget);
    }
</db:programlisting>
<db:para>The primitive element <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_PanelItemViewItem</db:link> is responsible for painting the background of items, and is called from <db:link xlink:href="qcommonstyle.xml">QCommonStyle</db:link>'s implementation of <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_ItemViewItem</db:link>.</db:para>
<db:para>To add support for drawing of new datatypes and item data roles, it is necessary to create a custom delegate. But if you only need to support the datatypes implemented by the default delegate, a custom style does not need an accompanying delegate. The <db:link xlink:href="qstyleditemdelegate.xml">QStyledItemDelegate</db:link> class description gives more information on custom delegates.</db:para>
<db:para>The drawing of item view headers is also done by the style, giving control over size of header items and row and column sizes.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:member>
<db:member><db:link xlink:href="qstylepainter.xml">QStylePainter</db:link></db:member>
<db:member><db:link xlink:href="qtwidgets-widgets-styles-example.xml">Styles Example</db:link></db:member>
<db:member><db:link xlink:href="style-reference.xml">Styles and Style Aware Widgets</db:link></db:member>
<db:member><db:link xlink:href="qstyleditemdelegate.xml">QStyledItemDelegate</db:link></db:member>
<db:member><db:link xlink:href="qwidget-styling.xml">Styling</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="ComplexControl-enum">
<db:title>enum QStyle::ComplexControl</db:title>
<db:enumsynopsis>
<db:enumname>ComplexControl</db:enumname>
<db:enumitem>
<db:enumidentifier>CC_SpinBox</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CC_ComboBox</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CC_ScrollBar</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CC_Slider</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CC_ToolButton</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CC_TitleBar</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CC_Dial</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CC_GroupBox</db:enumidentifier>
<db:enumvalue>7</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CC_MdiControls</db:enumidentifier>
<db:enumvalue>8</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CC_CustomBase</db:enumidentifier>
<db:enumvalue>0xf0000000</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the available complex controls. Complex controls have different behavior depending upon where the user clicks on them or which keys are pressed.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CC_SpinBox</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>A spinbox, like <db:link xlink:href="qspinbox.xml">QSpinBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CC_ComboBox</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>A combobox, like <db:link xlink:href="qcombobox.xml">QComboBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CC_ScrollBar</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>A scroll bar, like <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CC_Slider</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>A slider, like <db:link xlink:href="qslider.xml">QSlider</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CC_ToolButton</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>A tool button, like <db:link xlink:href="qtoolbutton.xml">QToolButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CC_TitleBar</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>A Title bar, like those used in <db:link xlink:href="qmdisubwindow.xml">QMdiSubWindow</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CC_GroupBox</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>A group box, like <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CC_Dial</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>A dial, like <db:link xlink:href="qdial.xml">QDial</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CC_MdiControls</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>The minimize, close, and normal button in the menu bar for a maximized MDI subwindow.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CC_CustomBase</db:code></db:para>
</db:td>
<db:td><db:code>0xf0000000</db:code></db:td>
<db:td>
<db:para>Base value for custom complex controls. Custom values must be greater than this value.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#SubControl-enum">SubControl</db:link></db:member>
<db:member><db:link xlink:href="qstyle.xml#drawComplexControl">drawComplexControl</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="ContentsType-enum">
<db:title>enum QStyle::ContentsType</db:title>
<db:enumsynopsis>
<db:enumname>ContentsType</db:enumname>
<db:enumitem>
<db:enumidentifier>CT_PushButton</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_CheckBox</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_RadioButton</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_ToolButton</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_ComboBox</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_Splitter</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_ProgressBar</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_MenuItem</db:enumidentifier>
<db:enumvalue>7</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_MenuBarItem</db:enumidentifier>
<db:enumvalue>8</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_MenuBar</db:enumidentifier>
<db:enumvalue>9</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_Menu</db:enumidentifier>
<db:enumvalue>10</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_TabBarTab</db:enumidentifier>
<db:enumvalue>11</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_Slider</db:enumidentifier>
<db:enumvalue>12</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_ScrollBar</db:enumidentifier>
<db:enumvalue>13</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_LineEdit</db:enumidentifier>
<db:enumvalue>14</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_SpinBox</db:enumidentifier>
<db:enumvalue>15</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_SizeGrip</db:enumidentifier>
<db:enumvalue>16</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_TabWidget</db:enumidentifier>
<db:enumvalue>17</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_DialogButtons</db:enumidentifier>
<db:enumvalue>18</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_HeaderSection</db:enumidentifier>
<db:enumvalue>19</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_GroupBox</db:enumidentifier>
<db:enumvalue>20</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_MdiControls</db:enumidentifier>
<db:enumvalue>21</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_ItemViewItem</db:enumidentifier>
<db:enumvalue>22</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CT_CustomBase</db:enumidentifier>
<db:enumvalue>0xf0000000</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the available contents types. These are used to calculate sizes for the contents of various widgets.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_CheckBox</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>A check box, like <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_ComboBox</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>A combo box, like <db:link xlink:href="qcombobox.xml">QComboBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_HeaderSection</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>A header section, like QHeader.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_LineEdit</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>A line edit, like <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_Menu</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>A menu, like <db:link xlink:href="qmenu.xml">QMenu</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_MenuBar</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>A menu bar, like <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_MenuBarItem</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>A menu bar item, like the buttons in a <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_MenuItem</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>A menu item, like QMenuItem.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_ProgressBar</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>A progress bar, like <db:link xlink:href="qprogressbar.xml">QProgressBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_PushButton</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>A push button, like <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_RadioButton</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>A radio button, like <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_SizeGrip</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>A size grip, like <db:link xlink:href="qsizegrip.xml">QSizeGrip</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_Slider</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>A slider, like <db:link xlink:href="qslider.xml">QSlider</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_ScrollBar</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>A scroll bar, like <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_SpinBox</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>A spin box, like <db:link xlink:href="qspinbox.xml">QSpinBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_Splitter</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>A splitter, like <db:link xlink:href="qsplitter.xml">QSplitter</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_TabBarTab</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>A tab on a tab bar, like <db:link xlink:href="qtabbar.xml">QTabBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_TabWidget</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>A tab widget, like <db:link xlink:href="qtabwidget.xml">QTabWidget</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_ToolButton</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>A tool button, like <db:link xlink:href="qtoolbutton.xml">QToolButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_GroupBox</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>A group box, like <db:link xlink:href="qgroupbox.xml">QGroupBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_ItemViewItem</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>An item inside an item view.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_CustomBase</db:code></db:para>
</db:td>
<db:td><db:code>0xf0000000</db:code></db:td>
<db:td>
<db:para>Base value for custom contents types. Custom values must be greater than this value.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CT_MdiControls</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>The minimize, normal, and close button in the menu bar for a maximized MDI subwindow.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#sizeFromContents">sizeFromContents</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="ControlElement-enum">
<db:title>enum QStyle::ControlElement</db:title>
<db:enumsynopsis>
<db:enumname>ControlElement</db:enumname>
<db:enumitem>
<db:enumidentifier>CE_PushButton</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_PushButtonBevel</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_PushButtonLabel</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_CheckBox</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_CheckBoxLabel</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_RadioButton</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_RadioButtonLabel</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_TabBarTab</db:enumidentifier>
<db:enumvalue>7</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_TabBarTabShape</db:enumidentifier>
<db:enumvalue>8</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_TabBarTabLabel</db:enumidentifier>
<db:enumvalue>9</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ProgressBar</db:enumidentifier>
<db:enumvalue>10</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ProgressBarGroove</db:enumidentifier>
<db:enumvalue>11</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ProgressBarContents</db:enumidentifier>
<db:enumvalue>12</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ProgressBarLabel</db:enumidentifier>
<db:enumvalue>13</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_MenuItem</db:enumidentifier>
<db:enumvalue>14</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_MenuScroller</db:enumidentifier>
<db:enumvalue>15</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_MenuVMargin</db:enumidentifier>
<db:enumvalue>16</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_MenuHMargin</db:enumidentifier>
<db:enumvalue>17</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_MenuTearoff</db:enumidentifier>
<db:enumvalue>18</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_MenuEmptyArea</db:enumidentifier>
<db:enumvalue>19</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_MenuBarItem</db:enumidentifier>
<db:enumvalue>20</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_MenuBarEmptyArea</db:enumidentifier>
<db:enumvalue>21</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ToolButtonLabel</db:enumidentifier>
<db:enumvalue>22</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_Header</db:enumidentifier>
<db:enumvalue>23</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_HeaderSection</db:enumidentifier>
<db:enumvalue>24</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_HeaderLabel</db:enumidentifier>
<db:enumvalue>25</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ToolBoxTab</db:enumidentifier>
<db:enumvalue>26</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_SizeGrip</db:enumidentifier>
<db:enumvalue>27</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_Splitter</db:enumidentifier>
<db:enumvalue>28</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_RubberBand</db:enumidentifier>
<db:enumvalue>29</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_DockWidgetTitle</db:enumidentifier>
<db:enumvalue>30</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ScrollBarAddLine</db:enumidentifier>
<db:enumvalue>31</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ScrollBarSubLine</db:enumidentifier>
<db:enumvalue>32</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ScrollBarAddPage</db:enumidentifier>
<db:enumvalue>33</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ScrollBarSubPage</db:enumidentifier>
<db:enumvalue>34</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ScrollBarSlider</db:enumidentifier>
<db:enumvalue>35</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ScrollBarFirst</db:enumidentifier>
<db:enumvalue>36</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ScrollBarLast</db:enumidentifier>
<db:enumvalue>37</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_FocusFrame</db:enumidentifier>
<db:enumvalue>38</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ComboBoxLabel</db:enumidentifier>
<db:enumvalue>39</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ToolBar</db:enumidentifier>
<db:enumvalue>40</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ToolBoxTabShape</db:enumidentifier>
<db:enumvalue>41</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ToolBoxTabLabel</db:enumidentifier>
<db:enumvalue>42</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_HeaderEmptyArea</db:enumidentifier>
<db:enumvalue>43</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ColumnViewGrip</db:enumidentifier>
<db:enumvalue>44</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ItemViewItem</db:enumidentifier>
<db:enumvalue>45</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_ShapedFrame</db:enumidentifier>
<db:enumvalue>46</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CE_CustomBase</db:enumidentifier>
<db:enumvalue>0xf0000000</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum represents a control element. A control element is a part of a widget that performs some action or displays information to the user.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_PushButton</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>A <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>, draws CE_PushButtonBevel, CE_PushButtonLabel and <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_FrameFocusRect</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_PushButtonBevel</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The bevel and default indicator of a <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_PushButtonLabel</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The label (an icon with text or pixmap) of a <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_DockWidgetTitle</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
<db:td>
<db:para>Dock window title.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_Splitter</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
<db:td>
<db:para>Splitter handle; see also <db:link xlink:href="qsplitter.xml">QSplitter</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_CheckBox</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>A <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>, draws a <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorCheckBox</db:link>, a CE_CheckBoxLabel and a <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_FrameFocusRect</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_CheckBoxLabel</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>The label (text or pixmap) of a <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_RadioButton</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>A <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>, draws a <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorRadioButton</db:link>, a CE_RadioButtonLabel and a <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_FrameFocusRect</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_RadioButtonLabel</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>The label (text or pixmap) of a <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_TabBarTab</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>The tab and label within a <db:link xlink:href="qtabbar.xml">QTabBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_TabBarTabShape</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>The tab shape within a tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_TabBarTabLabel</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>The label within a tab.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ProgressBar</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>A <db:link xlink:href="qprogressbar.xml">QProgressBar</db:link>, draws CE_ProgressBarGroove, CE_ProgressBarContents and CE_ProgressBarLabel.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ProgressBarGroove</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>The groove where the progress indicator is drawn in a <db:link xlink:href="qprogressbar.xml">QProgressBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ProgressBarContents</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>The progress indicator of a <db:link xlink:href="qprogressbar.xml">QProgressBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ProgressBarLabel</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>The text label of a <db:link xlink:href="qprogressbar.xml">QProgressBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ToolButtonLabel</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>A tool button's label.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_MenuBarItem</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>A menu item in a <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_MenuBarEmptyArea</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>The empty area of a <db:link xlink:href="qmenubar.xml">QMenuBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_MenuItem</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>A menu item in a <db:link xlink:href="qmenu.xml">QMenu</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_MenuScroller</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>Scrolling areas in a <db:link xlink:href="qmenu.xml">QMenu</db:link> when the style supports scrolling.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_MenuTearoff</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td>
<db:para>A menu item representing the tear off section of a <db:link xlink:href="qmenu.xml">QMenu</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_MenuEmptyArea</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>The area in a menu without menu items.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_MenuHMargin</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>The horizontal extra space on the left/right of a menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_MenuVMargin</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>The vertical extra space on the top/bottom of a menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ToolBoxTab</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
<db:td>
<db:para>The toolbox's tab and label within a <db:link xlink:href="qtoolbox.xml">QToolBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_SizeGrip</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
<db:td>
<db:para>Window resize handle; see also <db:link xlink:href="qsizegrip.xml">QSizeGrip</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_Header</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>A header.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_HeaderSection</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td>
<db:para>A header section.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_HeaderLabel</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
<db:td>
<db:para>The header's label.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ScrollBarAddLine</db:code></db:para>
</db:td>
<db:td><db:code>31</db:code></db:td>
<db:td>
<db:para>Scroll bar line increase indicator. (i.e., scroll down); see also <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ScrollBarSubLine</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
<db:td>
<db:para>Scroll bar line decrease indicator (i.e., scroll up).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ScrollBarAddPage</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td>
<db:para>Scolllbar page increase indicator (i.e., page down).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ScrollBarSubPage</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
<db:td>
<db:para>Scroll bar page decrease indicator (i.e., page up).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ScrollBarSlider</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
<db:td>
<db:para>Scroll bar slider.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ScrollBarFirst</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
<db:td>
<db:para>Scroll bar first line indicator (i.e., home).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ScrollBarLast</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td>
<db:para>Scroll bar last line indicator (i.e., end).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_RubberBand</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
<db:td>
<db:para>Rubber band used in for example an icon view.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_FocusFrame</db:code></db:para>
</db:td>
<db:td><db:code>38</db:code></db:td>
<db:td>
<db:para>Focus frame that is style controlled.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ItemViewItem</db:code></db:para>
</db:td>
<db:td><db:code>45</db:code></db:td>
<db:td>
<db:para>An item inside an item view.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_CustomBase</db:code></db:para>
</db:td>
<db:td><db:code>0xf0000000</db:code></db:td>
<db:td>
<db:para>Base value for custom control elements; custom values must be greater than this value.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ComboBoxLabel</db:code></db:para>
</db:td>
<db:td><db:code>39</db:code></db:td>
<db:td>
<db:para>The label of a non-editable <db:link xlink:href="qcombobox.xml">QComboBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ToolBar</db:code></db:para>
</db:td>
<db:td><db:code>40</db:code></db:td>
<db:td>
<db:para>A toolbar like <db:link xlink:href="qtoolbar.xml">QToolBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ToolBoxTabShape</db:code></db:para>
</db:td>
<db:td><db:code>41</db:code></db:td>
<db:td>
<db:para>The toolbox's tab shape.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ToolBoxTabLabel</db:code></db:para>
</db:td>
<db:td><db:code>42</db:code></db:td>
<db:td>
<db:para>The toolbox's tab label.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_HeaderEmptyArea</db:code></db:para>
</db:td>
<db:td><db:code>43</db:code></db:td>
<db:td>
<db:para>The area of a header view where there are no header sections.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::CE_ShapedFrame</db:code></db:para>
</db:td>
<db:td><db:code>46</db:code></db:td>
<db:td>
<db:para>The frame with the shape specified in the <db:link xlink:href="qstyleoptionframe.xml">QStyleOptionFrame</db:link>; see <db:link xlink:href="qframe.xml">QFrame</db:link>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#drawControl">drawControl</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="PixelMetric-enum">
<db:title>enum QStyle::PixelMetric</db:title>
<db:enumsynopsis>
<db:enumname>PixelMetric</db:enumname>
<db:enumitem>
<db:enumidentifier>PM_ButtonMargin</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ButtonDefaultIndicator</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MenuButtonIndicator</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ButtonShiftHorizontal</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ButtonShiftVertical</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_DefaultFrameWidth</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_SpinBoxFrameWidth</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ComboBoxFrameWidth</db:enumidentifier>
<db:enumvalue>7</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MaximumDragDistance</db:enumidentifier>
<db:enumvalue>8</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ScrollBarExtent</db:enumidentifier>
<db:enumvalue>9</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ScrollBarSliderMin</db:enumidentifier>
<db:enumvalue>10</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_SliderThickness</db:enumidentifier>
<db:enumvalue>11</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_SliderControlThickness</db:enumidentifier>
<db:enumvalue>12</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_SliderLength</db:enumidentifier>
<db:enumvalue>13</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_SliderTickmarkOffset</db:enumidentifier>
<db:enumvalue>14</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_SliderSpaceAvailable</db:enumidentifier>
<db:enumvalue>15</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_DockWidgetSeparatorExtent</db:enumidentifier>
<db:enumvalue>16</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_DockWidgetHandleExtent</db:enumidentifier>
<db:enumvalue>17</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_DockWidgetFrameWidth</db:enumidentifier>
<db:enumvalue>18</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TabBarTabOverlap</db:enumidentifier>
<db:enumvalue>19</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TabBarTabHSpace</db:enumidentifier>
<db:enumvalue>20</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TabBarTabVSpace</db:enumidentifier>
<db:enumvalue>21</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TabBarBaseHeight</db:enumidentifier>
<db:enumvalue>22</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TabBarBaseOverlap</db:enumidentifier>
<db:enumvalue>23</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ProgressBarChunkWidth</db:enumidentifier>
<db:enumvalue>24</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_SplitterWidth</db:enumidentifier>
<db:enumvalue>25</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TitleBarHeight</db:enumidentifier>
<db:enumvalue>26</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MenuScrollerHeight</db:enumidentifier>
<db:enumvalue>27</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MenuHMargin</db:enumidentifier>
<db:enumvalue>28</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MenuVMargin</db:enumidentifier>
<db:enumvalue>29</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MenuPanelWidth</db:enumidentifier>
<db:enumvalue>30</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MenuTearoffHeight</db:enumidentifier>
<db:enumvalue>31</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MenuDesktopFrameWidth</db:enumidentifier>
<db:enumvalue>32</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MenuBarPanelWidth</db:enumidentifier>
<db:enumvalue>33</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MenuBarItemSpacing</db:enumidentifier>
<db:enumvalue>34</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MenuBarVMargin</db:enumidentifier>
<db:enumvalue>35</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MenuBarHMargin</db:enumidentifier>
<db:enumvalue>36</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_IndicatorWidth</db:enumidentifier>
<db:enumvalue>37</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_IndicatorHeight</db:enumidentifier>
<db:enumvalue>38</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ExclusiveIndicatorWidth</db:enumidentifier>
<db:enumvalue>39</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ExclusiveIndicatorHeight</db:enumidentifier>
<db:enumvalue>40</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_DialogButtonsSeparator</db:enumidentifier>
<db:enumvalue>41</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_DialogButtonsButtonWidth</db:enumidentifier>
<db:enumvalue>42</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_DialogButtonsButtonHeight</db:enumidentifier>
<db:enumvalue>43</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MdiSubWindowFrameWidth</db:enumidentifier>
<db:enumvalue>44</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MdiSubWindowMinimizedWidth</db:enumidentifier>
<db:enumvalue>45</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_HeaderMargin</db:enumidentifier>
<db:enumvalue>46</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_HeaderMarkSize</db:enumidentifier>
<db:enumvalue>47</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_HeaderGripMargin</db:enumidentifier>
<db:enumvalue>48</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TabBarTabShiftHorizontal</db:enumidentifier>
<db:enumvalue>49</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TabBarTabShiftVertical</db:enumidentifier>
<db:enumvalue>50</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TabBarScrollButtonWidth</db:enumidentifier>
<db:enumvalue>51</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ToolBarFrameWidth</db:enumidentifier>
<db:enumvalue>52</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ToolBarHandleExtent</db:enumidentifier>
<db:enumvalue>53</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ToolBarItemSpacing</db:enumidentifier>
<db:enumvalue>54</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ToolBarItemMargin</db:enumidentifier>
<db:enumvalue>55</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ToolBarSeparatorExtent</db:enumidentifier>
<db:enumvalue>56</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ToolBarExtensionExtent</db:enumidentifier>
<db:enumvalue>57</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_SpinBoxSliderHeight</db:enumidentifier>
<db:enumvalue>58</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ToolBarIconSize</db:enumidentifier>
<db:enumvalue>59</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ListViewIconSize</db:enumidentifier>
<db:enumvalue>60</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_IconViewIconSize</db:enumidentifier>
<db:enumvalue>61</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_SmallIconSize</db:enumidentifier>
<db:enumvalue>62</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_LargeIconSize</db:enumidentifier>
<db:enumvalue>63</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_FocusFrameVMargin</db:enumidentifier>
<db:enumvalue>64</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_FocusFrameHMargin</db:enumidentifier>
<db:enumvalue>65</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ToolTipLabelFrameWidth</db:enumidentifier>
<db:enumvalue>66</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_CheckBoxLabelSpacing</db:enumidentifier>
<db:enumvalue>67</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TabBarIconSize</db:enumidentifier>
<db:enumvalue>68</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_SizeGripSize</db:enumidentifier>
<db:enumvalue>69</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_DockWidgetTitleMargin</db:enumidentifier>
<db:enumvalue>70</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_MessageBoxIconSize</db:enumidentifier>
<db:enumvalue>71</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ButtonIconSize</db:enumidentifier>
<db:enumvalue>72</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_DockWidgetTitleBarButtonMargin</db:enumidentifier>
<db:enumvalue>73</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_RadioButtonLabelSpacing</db:enumidentifier>
<db:enumvalue>74</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_LayoutLeftMargin</db:enumidentifier>
<db:enumvalue>75</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_LayoutTopMargin</db:enumidentifier>
<db:enumvalue>76</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_LayoutRightMargin</db:enumidentifier>
<db:enumvalue>77</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_LayoutBottomMargin</db:enumidentifier>
<db:enumvalue>78</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_LayoutHorizontalSpacing</db:enumidentifier>
<db:enumvalue>79</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_LayoutVerticalSpacing</db:enumidentifier>
<db:enumvalue>80</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TabBar_ScrollButtonOverlap</db:enumidentifier>
<db:enumvalue>81</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TextCursorWidth</db:enumidentifier>
<db:enumvalue>82</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TabCloseIndicatorWidth</db:enumidentifier>
<db:enumvalue>83</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TabCloseIndicatorHeight</db:enumidentifier>
<db:enumvalue>84</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ScrollView_ScrollBarSpacing</db:enumidentifier>
<db:enumvalue>85</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_ScrollView_ScrollBarOverlap</db:enumidentifier>
<db:enumvalue>86</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_SubMenuOverlap</db:enumidentifier>
<db:enumvalue>87</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TreeViewIndentation</db:enumidentifier>
<db:enumvalue>88</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_HeaderDefaultSectionSizeHorizontal</db:enumidentifier>
<db:enumvalue>89</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_HeaderDefaultSectionSizeVertical</db:enumidentifier>
<db:enumvalue>90</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TitleBarButtonIconSize</db:enumidentifier>
<db:enumvalue>91</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_TitleBarButtonSize</db:enumidentifier>
<db:enumvalue>92</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_LineEditIconSize</db:enumidentifier>
<db:enumvalue>93</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_LineEditIconMargin</db:enumidentifier>
<db:enumvalue>94</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PM_CustomBase</db:enumidentifier>
<db:enumvalue>0xf0000000</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the various available pixel metrics. A pixel metric is a style dependent size represented by a single pixel value.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ButtonMargin</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Amount of whitespace between push button labels and the frame.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_DockWidgetTitleBarButtonMargin</db:code></db:para>
</db:td>
<db:td><db:code>73</db:code></db:td>
<db:td>
<db:para>Amount of whitespace between dock widget's title bar button labels and the frame.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ButtonDefaultIndicator</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Width of the default-button indicator frame.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MenuButtonIndicator</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Width of the menu button indicator proportional to the widget height.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ButtonShiftHorizontal</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Horizontal contents shift of a button when the button is down.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ButtonShiftVertical</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>Vertical contents shift of a button when the button is down.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_DefaultFrameWidth</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>Default frame width (usually 2).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_SpinBoxFrameWidth</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>Frame width of a spin box, defaults to PM_DefaultFrameWidth.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ComboBoxFrameWidth</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>Frame width of a combo box, defaults to PM_DefaultFrameWidth.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MdiSubWindowFrameWidth</db:code></db:para>
</db:td>
<db:td><db:code>44</db:code></db:td>
<db:td>
<db:para>Frame width of an MDI window.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MdiSubWindowMinimizedWidth</db:code></db:para>
</db:td>
<db:td><db:code>45</db:code></db:td>
<db:td>
<db:para>Width of a minimized MDI window.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_LayoutLeftMargin</db:code></db:para>
</db:td>
<db:td><db:code>75</db:code></db:td>
<db:td>
<db:para>Default <db:link xlink:href="qlayout.xml#setContentsMargins">left margin</db:link> for a <db:link xlink:href="qlayout.xml">QLayout</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_LayoutTopMargin</db:code></db:para>
</db:td>
<db:td><db:code>76</db:code></db:td>
<db:td>
<db:para>Default <db:link xlink:href="qlayout.xml#setContentsMargins">top margin</db:link> for a <db:link xlink:href="qlayout.xml">QLayout</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_LayoutRightMargin</db:code></db:para>
</db:td>
<db:td><db:code>77</db:code></db:td>
<db:td>
<db:para>Default <db:link xlink:href="qlayout.xml#setContentsMargins">right margin</db:link> for a <db:link xlink:href="qlayout.xml">QLayout</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_LayoutBottomMargin</db:code></db:para>
</db:td>
<db:td><db:code>78</db:code></db:td>
<db:td>
<db:para>Default <db:link xlink:href="qlayout.xml#setContentsMargins">bottom margin</db:link> for a <db:link xlink:href="qlayout.xml">QLayout</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_LayoutHorizontalSpacing</db:code></db:para>
</db:td>
<db:td><db:code>79</db:code></db:td>
<db:td>
<db:para>Default <db:link xlink:href="qlayout.xml#spacing-prop">horizontal spacing</db:link> for a <db:link xlink:href="qlayout.xml">QLayout</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_LayoutVerticalSpacing</db:code></db:para>
</db:td>
<db:td><db:code>80</db:code></db:td>
<db:td>
<db:para>Default <db:link xlink:href="qlayout.xml#spacing-prop">vertical spacing</db:link> for a <db:link xlink:href="qlayout.xml">QLayout</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MaximumDragDistance</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>The maximum allowed distance between the mouse and a scrollbar when dragging. Exceeding the specified distance will cause the slider to jump back to the original position; a value of -1 disables this behavior.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ScrollBarExtent</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>Width of a vertical scroll bar and the height of a horizontal scroll bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ScrollBarSliderMin</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>The minimum height of a vertical scroll bar's slider and the minimum width of a horizontal scroll bar's slider.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_SliderThickness</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>Total slider thickness.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_SliderControlThickness</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>Thickness of the slider handle.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_SliderLength</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>Length of the slider.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_SliderTickmarkOffset</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>The offset between the tickmarks and the slider.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_SliderSpaceAvailable</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>The available space for the slider to move.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_DockWidgetSeparatorExtent</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>Width of a separator in a horizontal dock window and the height of a separator in a vertical dock window.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_DockWidgetHandleExtent</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>Width of the handle in a horizontal dock window and the height of the handle in a vertical dock window.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_DockWidgetFrameWidth</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td>
<db:para>Frame width of a dock window.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_DockWidgetTitleMargin</db:code></db:para>
</db:td>
<db:td><db:code>70</db:code></db:td>
<db:td>
<db:para>Margin of the dock window title.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MenuBarPanelWidth</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td>
<db:para>Frame width of a menu bar, defaults to PM_DefaultFrameWidth.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MenuBarItemSpacing</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
<db:td>
<db:para>Spacing between menu bar items.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MenuBarHMargin</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
<db:td>
<db:para>Spacing between menu bar items and left/right of bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MenuBarVMargin</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
<db:td>
<db:para>Spacing between menu bar items and top/bottom of bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ToolBarFrameWidth</db:code></db:para>
</db:td>
<db:td><db:code>52</db:code></db:td>
<db:td>
<db:para>Width of the frame around toolbars.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ToolBarHandleExtent</db:code></db:para>
</db:td>
<db:td><db:code>53</db:code></db:td>
<db:td>
<db:para>Width of a toolbar handle in a horizontal toolbar and the height of the handle in a vertical toolbar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ToolBarItemMargin</db:code></db:para>
</db:td>
<db:td><db:code>55</db:code></db:td>
<db:td>
<db:para>Spacing between the toolbar frame and the items.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ToolBarItemSpacing</db:code></db:para>
</db:td>
<db:td><db:code>54</db:code></db:td>
<db:td>
<db:para>Spacing between toolbar items.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ToolBarSeparatorExtent</db:code></db:para>
</db:td>
<db:td><db:code>56</db:code></db:td>
<db:td>
<db:para>Width of a toolbar separator in a horizontal toolbar and the height of a separator in a vertical toolbar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ToolBarExtensionExtent</db:code></db:para>
</db:td>
<db:td><db:code>57</db:code></db:td>
<db:td>
<db:para>Width of a toolbar extension button in a horizontal toolbar and the height of the button in a vertical toolbar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TabBarTabOverlap</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>Number of pixels the tabs should overlap. (Currently only used in styles, not inside of <db:link xlink:href="qtabbar.xml">QTabBar</db:link>)</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TabBarTabHSpace</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>Extra space added to the tab width.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TabBarTabVSpace</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>Extra space added to the tab height.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TabBarBaseHeight</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>Height of the area between the tab bar and the tab pages.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TabBarBaseOverlap</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>Number of pixels the tab bar overlaps the tab bar base.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TabBarScrollButtonWidth</db:code></db:para>
</db:td>
<db:td><db:code>51</db:code></db:td>
<db:td/>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TabBarTabShiftHorizontal</db:code></db:para>
</db:td>
<db:td><db:code>49</db:code></db:td>
<db:td>
<db:para>Horizontal pixel shift when a tab is selected.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TabBarTabShiftVertical</db:code></db:para>
</db:td>
<db:td><db:code>50</db:code></db:td>
<db:td>
<db:para>Vertical pixel shift when a tab is selected.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ProgressBarChunkWidth</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td>
<db:para>Width of a chunk in a progress bar indicator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_SplitterWidth</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
<db:td>
<db:para>Width of a splitter.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TitleBarHeight</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
<db:td>
<db:para>Height of the title bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_IndicatorWidth</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td>
<db:para>Width of a check box indicator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_IndicatorHeight</db:code></db:para>
</db:td>
<db:td><db:code>38</db:code></db:td>
<db:td>
<db:para>Height of a checkbox indicator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ExclusiveIndicatorWidth</db:code></db:para>
</db:td>
<db:td><db:code>39</db:code></db:td>
<db:td>
<db:para>Width of a radio button indicator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ExclusiveIndicatorHeight</db:code></db:para>
</db:td>
<db:td><db:code>40</db:code></db:td>
<db:td>
<db:para>Height of a radio button indicator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MenuPanelWidth</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
<db:td>
<db:para>Border width (applied on all sides) for a <db:link xlink:href="qmenu.xml">QMenu</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MenuHMargin</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
<db:td>
<db:para>Additional border (used on left and right) for a <db:link xlink:href="qmenu.xml">QMenu</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MenuVMargin</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
<db:td>
<db:para>Additional border (used for bottom and top) for a <db:link xlink:href="qmenu.xml">QMenu</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MenuScrollerHeight</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
<db:td>
<db:para>Height of the scroller area in a <db:link xlink:href="qmenu.xml">QMenu</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MenuTearoffHeight</db:code></db:para>
</db:td>
<db:td><db:code>31</db:code></db:td>
<db:td>
<db:para>Height of a tear off area in a <db:link xlink:href="qmenu.xml">QMenu</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MenuDesktopFrameWidth</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
<db:td>
<db:para>The frame width for the menu on the desktop.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_HeaderMarkSize</db:code></db:para>
</db:td>
<db:td><db:code>47</db:code></db:td>
<db:td>
<db:para>The size of the sort indicator in a header.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_HeaderGripMargin</db:code></db:para>
</db:td>
<db:td><db:code>48</db:code></db:td>
<db:td>
<db:para>The size of the resize grip in a header.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_HeaderMargin</db:code></db:para>
</db:td>
<db:td><db:code>46</db:code></db:td>
<db:td>
<db:para>The size of the margin between the sort indicator and the text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_SpinBoxSliderHeight</db:code></db:para>
</db:td>
<db:td><db:code>58</db:code></db:td>
<db:td>
<db:para>The height of the optional spin box slider.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ToolBarIconSize</db:code></db:para>
</db:td>
<db:td><db:code>59</db:code></db:td>
<db:td>
<db:para>Default tool bar icon size</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_SmallIconSize</db:code></db:para>
</db:td>
<db:td><db:code>62</db:code></db:td>
<db:td>
<db:para>Default small icon size</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_LargeIconSize</db:code></db:para>
</db:td>
<db:td><db:code>63</db:code></db:td>
<db:td>
<db:para>Default large icon size</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_FocusFrameHMargin</db:code></db:para>
</db:td>
<db:td><db:code>65</db:code></db:td>
<db:td>
<db:para>Horizontal margin that the focus frame will outset the widget by.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_FocusFrameVMargin</db:code></db:para>
</db:td>
<db:td><db:code>64</db:code></db:td>
<db:td>
<db:para>Vertical margin that the focus frame will outset the widget by.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_IconViewIconSize</db:code></db:para>
</db:td>
<db:td><db:code>61</db:code></db:td>
<db:td>
<db:para>The default size for icons in an icon view.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ListViewIconSize</db:code></db:para>
</db:td>
<db:td><db:code>60</db:code></db:td>
<db:td>
<db:para>The default size for icons in a list view.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ToolTipLabelFrameWidth</db:code></db:para>
</db:td>
<db:td><db:code>66</db:code></db:td>
<db:td>
<db:para>The frame width for a tool tip label.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_CheckBoxLabelSpacing</db:code></db:para>
</db:td>
<db:td><db:code>67</db:code></db:td>
<db:td>
<db:para>The spacing between a check box indicator and its label.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_RadioButtonLabelSpacing</db:code></db:para>
</db:td>
<db:td><db:code>74</db:code></db:td>
<db:td>
<db:para>The spacing between a radio button indicator and its label.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TabBarIconSize</db:code></db:para>
</db:td>
<db:td><db:code>68</db:code></db:td>
<db:td>
<db:para>The default icon size for a tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_SizeGripSize</db:code></db:para>
</db:td>
<db:td><db:code>69</db:code></db:td>
<db:td>
<db:para>The size of a size grip.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_MessageBoxIconSize</db:code></db:para>
</db:td>
<db:td><db:code>71</db:code></db:td>
<db:td>
<db:para>The size of the standard icons in a message box</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ButtonIconSize</db:code></db:para>
</db:td>
<db:td><db:code>72</db:code></db:td>
<db:td>
<db:para>The default size of button icons</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TextCursorWidth</db:code></db:para>
</db:td>
<db:td><db:code>82</db:code></db:td>
<db:td>
<db:para>The width of the cursor in a line edit or text edit</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TabBar_ScrollButtonOverlap</db:code></db:para>
</db:td>
<db:td><db:code>81</db:code></db:td>
<db:td>
<db:para>The distance between the left and right buttons in a tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TabCloseIndicatorWidth</db:code></db:para>
</db:td>
<db:td><db:code>83</db:code></db:td>
<db:td>
<db:para>The default width of a close button on a tab in a tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TabCloseIndicatorHeight</db:code></db:para>
</db:td>
<db:td><db:code>84</db:code></db:td>
<db:td>
<db:para>The default height of a close button on a tab in a tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ScrollView_ScrollBarSpacing</db:code></db:para>
</db:td>
<db:td><db:code>85</db:code></db:td>
<db:td>
<db:para>Distance between frame and scrollbar with <db:link xlink:href="qstyle.xml#StyleHint-enum">SH_ScrollView_FrameOnlyAroundContents</db:link> set.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_ScrollView_ScrollBarOverlap</db:code></db:para>
</db:td>
<db:td><db:code>86</db:code></db:td>
<db:td>
<db:para>Overlap between scroll bars and scroll content</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_SubMenuOverlap</db:code></db:para>
</db:td>
<db:td><db:code>87</db:code></db:td>
<db:td>
<db:para>The horizontal overlap between a submenu and its parent.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TreeViewIndentation (since Qt 5.4)</db:code></db:para>
</db:td>
<db:td><db:code>88</db:code></db:td>
<db:td>
<db:para>The indentation of items in a tree view.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_HeaderDefaultSectionSizeHorizontal</db:code></db:para>
</db:td>
<db:td><db:code>89</db:code></db:td>
<db:td>
<db:para>The default size of sections in a horizontal header. This enum value has been introduced in Qt 5.5.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_HeaderDefaultSectionSizeVertical</db:code></db:para>
</db:td>
<db:td><db:code>90</db:code></db:td>
<db:td>
<db:para>The default size of sections in a vertical header. This enum value has been introduced in Qt 5.5.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TitleBarButtonIconSize (since Qt 5.8)</db:code></db:para>
</db:td>
<db:td><db:code>91</db:code></db:td>
<db:td>
<db:para>The size of button icons on a title bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_TitleBarButtonSize (since Qt 5.8)</db:code></db:para>
</db:td>
<db:td><db:code>92</db:code></db:td>
<db:td>
<db:para>The size of buttons on a title bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_LineEditIconSize (since Qt 6.2)</db:code></db:para>
</db:td>
<db:td><db:code>93</db:code></db:td>
<db:td>
<db:para>The default size for icons in a line edit.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_LineEditIconMargin (since Qt 6.3)</db:code></db:para>
</db:td>
<db:td><db:code>94</db:code></db:td>
<db:td>
<db:para>The margin around icons in a line edit.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PM_CustomBase</db:code></db:para>
</db:td>
<db:td><db:code>0xf0000000</db:code></db:td>
<db:td>
<db:para>Base value for custom pixel metrics. Custom values must be greater than this value.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#pixelMetric">pixelMetric</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="PrimitiveElement-enum">
<db:title>enum QStyle::PrimitiveElement</db:title>
<db:enumsynopsis>
<db:enumname>PrimitiveElement</db:enumname>
<db:enumitem>
<db:enumidentifier>PE_Frame</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_FrameDefaultButton</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_FrameDockWidget</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_FrameFocusRect</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_FrameGroupBox</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_FrameLineEdit</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_FrameMenu</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_FrameStatusBarItem</db:enumidentifier>
<db:enumvalue>7</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_FrameTabWidget</db:enumidentifier>
<db:enumvalue>8</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_FrameWindow</db:enumidentifier>
<db:enumvalue>9</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_FrameButtonBevel</db:enumidentifier>
<db:enumvalue>10</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_FrameButtonTool</db:enumidentifier>
<db:enumvalue>11</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_FrameTabBarBase</db:enumidentifier>
<db:enumvalue>12</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_PanelButtonCommand</db:enumidentifier>
<db:enumvalue>13</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_PanelButtonBevel</db:enumidentifier>
<db:enumvalue>14</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_PanelButtonTool</db:enumidentifier>
<db:enumvalue>15</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_PanelMenuBar</db:enumidentifier>
<db:enumvalue>16</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_PanelToolBar</db:enumidentifier>
<db:enumvalue>17</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_PanelLineEdit</db:enumidentifier>
<db:enumvalue>18</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorArrowDown</db:enumidentifier>
<db:enumvalue>19</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorArrowLeft</db:enumidentifier>
<db:enumvalue>20</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorArrowRight</db:enumidentifier>
<db:enumvalue>21</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorArrowUp</db:enumidentifier>
<db:enumvalue>22</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorBranch</db:enumidentifier>
<db:enumvalue>23</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorButtonDropDown</db:enumidentifier>
<db:enumvalue>24</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorItemViewItemCheck</db:enumidentifier>
<db:enumvalue>25</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorCheckBox</db:enumidentifier>
<db:enumvalue>26</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorDockWidgetResizeHandle</db:enumidentifier>
<db:enumvalue>27</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorHeaderArrow</db:enumidentifier>
<db:enumvalue>28</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorMenuCheckMark</db:enumidentifier>
<db:enumvalue>29</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorProgressChunk</db:enumidentifier>
<db:enumvalue>30</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorRadioButton</db:enumidentifier>
<db:enumvalue>31</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorSpinDown</db:enumidentifier>
<db:enumvalue>32</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorSpinMinus</db:enumidentifier>
<db:enumvalue>33</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorSpinPlus</db:enumidentifier>
<db:enumvalue>34</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorSpinUp</db:enumidentifier>
<db:enumvalue>35</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorToolBarHandle</db:enumidentifier>
<db:enumvalue>36</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorToolBarSeparator</db:enumidentifier>
<db:enumvalue>37</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_PanelTipLabel</db:enumidentifier>
<db:enumvalue>38</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorTabTear</db:enumidentifier>
<db:enumvalue>39</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorTabTearLeft</db:enumidentifier>
<db:enumvalue>PE_IndicatorTabTear</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_PanelScrollAreaCorner</db:enumidentifier>
<db:enumvalue>40</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_Widget</db:enumidentifier>
<db:enumvalue>41</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorColumnViewArrow</db:enumidentifier>
<db:enumvalue>42</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorItemViewItemDrop</db:enumidentifier>
<db:enumvalue>43</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_PanelItemViewItem</db:enumidentifier>
<db:enumvalue>44</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_PanelItemViewRow</db:enumidentifier>
<db:enumvalue>45</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_PanelStatusBar</db:enumidentifier>
<db:enumvalue>46</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorTabClose</db:enumidentifier>
<db:enumvalue>47</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_PanelMenu</db:enumidentifier>
<db:enumvalue>48</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_IndicatorTabTearRight</db:enumidentifier>
<db:enumvalue>49</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PE_CustomBase</db:enumidentifier>
<db:enumvalue>0xf000000</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the various primitive elements. A primitive element is a common GUI element, such as a checkbox indicator or button bevel.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_PanelButtonCommand</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>Button used to initiate an action, for example, a <db:link xlink:href="qpushbutton.xml">QPushButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_FrameDefaultButton</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>This frame around a default button, e.g. in a dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_PanelButtonBevel</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>Generic panel with a button bevel.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_PanelButtonTool</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>Panel for a Tool button, used with <db:link xlink:href="qtoolbutton.xml">QToolButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_PanelLineEdit</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td>
<db:para>Panel for a <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorButtonDropDown</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td>
<db:para>Indicator for a drop down button, for example, a tool button that displays a menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_FrameFocusRect</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Generic focus indicator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorArrowUp</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>Generic Up arrow.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorArrowDown</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>Generic Down arrow.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorArrowRight</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>Generic Right arrow.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorArrowLeft</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>Generic Left arrow.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorSpinUp</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
<db:td>
<db:para>Up symbol for a spin widget, for example a <db:link xlink:href="qspinbox.xml">QSpinBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorSpinDown</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
<db:td>
<db:para>Down symbol for a spin widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorSpinPlus</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
<db:td>
<db:para>Increase symbol for a spin widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorSpinMinus</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td>
<db:para>Decrease symbol for a spin widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorItemViewItemCheck</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
<db:td>
<db:para>On/off indicator for a view item.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorCheckBox</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
<db:td>
<db:para>On/off indicator, for example, a <db:link xlink:href="qcheckbox.xml">QCheckBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorRadioButton</db:code></db:para>
</db:td>
<db:td><db:code>31</db:code></db:td>
<db:td>
<db:para>Exclusive on/off indicator, for example, a <db:link xlink:href="qradiobutton.xml">QRadioButton</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorDockWidgetResizeHandle</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
<db:td>
<db:para>Resize handle for dock windows.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_Frame</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Generic frame</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_FrameMenu</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>Frame for popup windows/menus; see also <db:link xlink:href="qmenu.xml">QMenu</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_PanelMenuBar</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>Panel for menu bars.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_PanelScrollAreaCorner</db:code></db:para>
</db:td>
<db:td><db:code>40</db:code></db:td>
<db:td>
<db:para>Panel at the bottom-right (or bottom-left) corner of a scroll area.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_FrameDockWidget</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Panel frame for dock windows and toolbars.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_FrameTabWidget</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>Frame for tab widgets.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_FrameLineEdit</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>Panel frame for line edits.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_FrameGroupBox</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>Panel frame around group boxes.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_FrameButtonBevel</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>Panel frame for a button bevel.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_FrameButtonTool</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>Panel frame for a tool button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorHeaderArrow</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
<db:td>
<db:para>Arrow used to indicate sorting on a list or table header.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_FrameStatusBarItem</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>Frame for an item of a status bar; see also <db:link xlink:href="qstatusbar.xml">QStatusBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_FrameWindow</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>Frame around a MDI window or a docking window.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorMenuCheckMark</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
<db:td>
<db:para>Check mark used in a menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorProgressChunk</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
<db:td>
<db:para>Section of a progress bar indicator; see also <db:link xlink:href="qprogressbar.xml">QProgressBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorBranch</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>Lines used to represent the branch of a tree in a tree view.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorToolBarHandle</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
<db:td>
<db:para>The handle of a toolbar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorToolBarSeparator</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td>
<db:para>The separator in a toolbar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_PanelToolBar</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>The panel for a toolbar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_PanelTipLabel</db:code></db:para>
</db:td>
<db:td><db:code>38</db:code></db:td>
<db:td>
<db:para>The panel for a tip label.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_FrameTabBarBase</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>The frame that is drawn for a tab bar, usually drawn for a tab bar that isn't part of a tab widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorTabTear</db:code></db:para>
</db:td>
<db:td><db:code>39</db:code></db:td>
<db:td>
<db:para>Deprecated. Use <db:link xlink:href="">PE_IndicatorTabTearLeft</db:link> instead.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorTabTearLeft</db:code></db:para>
</db:td>
<db:td><db:code>PE_IndicatorTabTear</db:code></db:td>
<db:td>
<db:para>An indicator that a tab is partially scrolled out on the left side of the visible tab bar when there are many tabs.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorTabTearRight</db:code></db:para>
</db:td>
<db:td><db:code>49</db:code></db:td>
<db:td>
<db:para>An indicator that a tab is partially scrolled out on the right side of the visible tab bar when there are many tabs.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorColumnViewArrow</db:code></db:para>
</db:td>
<db:td><db:code>42</db:code></db:td>
<db:td>
<db:para>An arrow in a <db:link xlink:href="qcolumnview.xml">QColumnView</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_Widget</db:code></db:para>
</db:td>
<db:td><db:code>41</db:code></db:td>
<db:td>
<db:para>A plain <db:link xlink:href="qwidget.xml">QWidget</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_CustomBase</db:code></db:para>
</db:td>
<db:td><db:code>0xf000000</db:code></db:td>
<db:td>
<db:para>Base value for custom primitive elements. All values above this are reserved for custom use. Custom values must be greater than this value.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorItemViewItemDrop</db:code></db:para>
</db:td>
<db:td><db:code>43</db:code></db:td>
<db:td>
<db:para>An indicator that is drawn to show where an item in an item view is about to be dropped during a drag-and-drop operation in an item view.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_PanelItemViewItem</db:code></db:para>
</db:td>
<db:td><db:code>44</db:code></db:td>
<db:td>
<db:para>The background for an item in an item view.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_PanelItemViewRow</db:code></db:para>
</db:td>
<db:td><db:code>45</db:code></db:td>
<db:td>
<db:para>The background of a row in an item view.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_PanelStatusBar</db:code></db:para>
</db:td>
<db:td><db:code>46</db:code></db:td>
<db:td>
<db:para>The panel for a status bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_IndicatorTabClose</db:code></db:para>
</db:td>
<db:td><db:code>47</db:code></db:td>
<db:td>
<db:para>The close button on a tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::PE_PanelMenu</db:code></db:para>
</db:td>
<db:td><db:code>48</db:code></db:td>
<db:td>
<db:para>The panel for a menu.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#drawPrimitive">drawPrimitive</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="RequestSoftwareInputPanel-enum">
<db:title>enum QStyle::RequestSoftwareInputPanel</db:title>
<db:enumsynopsis>
<db:enumname>RequestSoftwareInputPanel</db:enumname>
<db:enumitem>
<db:enumidentifier>RSIP_OnMouseClickAndAlreadyFocused</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>RSIP_OnMouseClick</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes under what circumstances a software input panel will be requested by input capable widgets.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::RSIP_OnMouseClickAndAlreadyFocused</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Requests an input panel if the user clicks on the widget, but only if it is already focused.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::RSIP_OnMouseClick</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Requests an input panel if the user clicks on the widget.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qinputmethod.xml">QInputMethod</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="StandardPixmap-enum">
<db:title>enum QStyle::StandardPixmap</db:title>
<db:enumsynopsis>
<db:enumname>StandardPixmap</db:enumname>
<db:enumitem>
<db:enumidentifier>SP_TitleBarMenuButton</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_TitleBarMinButton</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_TitleBarMaxButton</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_TitleBarCloseButton</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_TitleBarNormalButton</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_TitleBarShadeButton</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_TitleBarUnshadeButton</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_TitleBarContextHelpButton</db:enumidentifier>
<db:enumvalue>7</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DockWidgetCloseButton</db:enumidentifier>
<db:enumvalue>8</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_MessageBoxInformation</db:enumidentifier>
<db:enumvalue>9</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_MessageBoxWarning</db:enumidentifier>
<db:enumvalue>10</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_MessageBoxCritical</db:enumidentifier>
<db:enumvalue>11</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_MessageBoxQuestion</db:enumidentifier>
<db:enumvalue>12</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DesktopIcon</db:enumidentifier>
<db:enumvalue>13</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_TrashIcon</db:enumidentifier>
<db:enumvalue>14</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_ComputerIcon</db:enumidentifier>
<db:enumvalue>15</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DriveFDIcon</db:enumidentifier>
<db:enumvalue>16</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DriveHDIcon</db:enumidentifier>
<db:enumvalue>17</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DriveCDIcon</db:enumidentifier>
<db:enumvalue>18</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DriveDVDIcon</db:enumidentifier>
<db:enumvalue>19</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DriveNetIcon</db:enumidentifier>
<db:enumvalue>20</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DirOpenIcon</db:enumidentifier>
<db:enumvalue>21</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DirClosedIcon</db:enumidentifier>
<db:enumvalue>22</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DirLinkIcon</db:enumidentifier>
<db:enumvalue>23</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DirLinkOpenIcon</db:enumidentifier>
<db:enumvalue>24</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_FileIcon</db:enumidentifier>
<db:enumvalue>25</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_FileLinkIcon</db:enumidentifier>
<db:enumvalue>26</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_ToolBarHorizontalExtensionButton</db:enumidentifier>
<db:enumvalue>27</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_ToolBarVerticalExtensionButton</db:enumidentifier>
<db:enumvalue>28</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_FileDialogStart</db:enumidentifier>
<db:enumvalue>29</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_FileDialogEnd</db:enumidentifier>
<db:enumvalue>30</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_FileDialogToParent</db:enumidentifier>
<db:enumvalue>31</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_FileDialogNewFolder</db:enumidentifier>
<db:enumvalue>32</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_FileDialogDetailedView</db:enumidentifier>
<db:enumvalue>33</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_FileDialogInfoView</db:enumidentifier>
<db:enumvalue>34</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_FileDialogContentsView</db:enumidentifier>
<db:enumvalue>35</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_FileDialogListView</db:enumidentifier>
<db:enumvalue>36</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_FileDialogBack</db:enumidentifier>
<db:enumvalue>37</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DirIcon</db:enumidentifier>
<db:enumvalue>38</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogOkButton</db:enumidentifier>
<db:enumvalue>39</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogCancelButton</db:enumidentifier>
<db:enumvalue>40</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogHelpButton</db:enumidentifier>
<db:enumvalue>41</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogOpenButton</db:enumidentifier>
<db:enumvalue>42</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogSaveButton</db:enumidentifier>
<db:enumvalue>43</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogCloseButton</db:enumidentifier>
<db:enumvalue>44</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogApplyButton</db:enumidentifier>
<db:enumvalue>45</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogResetButton</db:enumidentifier>
<db:enumvalue>46</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogDiscardButton</db:enumidentifier>
<db:enumvalue>47</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogYesButton</db:enumidentifier>
<db:enumvalue>48</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogNoButton</db:enumidentifier>
<db:enumvalue>49</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_ArrowUp</db:enumidentifier>
<db:enumvalue>50</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_ArrowDown</db:enumidentifier>
<db:enumvalue>51</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_ArrowLeft</db:enumidentifier>
<db:enumvalue>52</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_ArrowRight</db:enumidentifier>
<db:enumvalue>53</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_ArrowBack</db:enumidentifier>
<db:enumvalue>54</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_ArrowForward</db:enumidentifier>
<db:enumvalue>55</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DirHomeIcon</db:enumidentifier>
<db:enumvalue>56</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_CommandLink</db:enumidentifier>
<db:enumvalue>57</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_VistaShield</db:enumidentifier>
<db:enumvalue>58</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_BrowserReload</db:enumidentifier>
<db:enumvalue>59</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_BrowserStop</db:enumidentifier>
<db:enumvalue>60</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_MediaPlay</db:enumidentifier>
<db:enumvalue>61</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_MediaStop</db:enumidentifier>
<db:enumvalue>62</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_MediaPause</db:enumidentifier>
<db:enumvalue>63</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_MediaSkipForward</db:enumidentifier>
<db:enumvalue>64</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_MediaSkipBackward</db:enumidentifier>
<db:enumvalue>65</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_MediaSeekForward</db:enumidentifier>
<db:enumvalue>66</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_MediaSeekBackward</db:enumidentifier>
<db:enumvalue>67</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_MediaVolume</db:enumidentifier>
<db:enumvalue>68</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_MediaVolumeMuted</db:enumidentifier>
<db:enumvalue>69</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_LineEditClearButton</db:enumidentifier>
<db:enumvalue>70</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogYesToAllButton</db:enumidentifier>
<db:enumvalue>71</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogNoToAllButton</db:enumidentifier>
<db:enumvalue>72</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogSaveAllButton</db:enumidentifier>
<db:enumvalue>73</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogAbortButton</db:enumidentifier>
<db:enumvalue>74</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogRetryButton</db:enumidentifier>
<db:enumvalue>75</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_DialogIgnoreButton</db:enumidentifier>
<db:enumvalue>76</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_RestoreDefaultsButton</db:enumidentifier>
<db:enumvalue>77</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_TabCloseButton</db:enumidentifier>
<db:enumvalue>78</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SP_CustomBase</db:enumidentifier>
<db:enumvalue>0xf0000000</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the available standard pixmaps. A standard pixmap is a pixmap that can follow some existing GUI style or guideline.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_TitleBarMinButton</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Minimize button on title bars (e.g., in <db:link xlink:href="qmdisubwindow.xml">QMdiSubWindow</db:link>).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_TitleBarMenuButton</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Menu button on a title bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_TitleBarMaxButton</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Maximize button on title bars.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_TitleBarCloseButton</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Close button on title bars.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_TitleBarNormalButton</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>Normal (restore) button on title bars.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_TitleBarShadeButton</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>Shade button on title bars.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_TitleBarUnshadeButton</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>Unshade button on title bars.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_TitleBarContextHelpButton</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>The Context help button on title bars.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_MessageBoxInformation</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>The &quot;information&quot; icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_MessageBoxWarning</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>The &quot;warning&quot; icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_MessageBoxCritical</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>The &quot;critical&quot; icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_MessageBoxQuestion</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>The &quot;question&quot; icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DesktopIcon</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>The &quot;desktop&quot; icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_TrashIcon</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>The &quot;trash&quot; icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_ComputerIcon</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>The &quot;My computer&quot; icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DriveFDIcon</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>The floppy icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DriveHDIcon</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>The harddrive icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DriveCDIcon</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td>
<db:para>The CD icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DriveDVDIcon</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>The DVD icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DriveNetIcon</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>The network icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DirHomeIcon</db:code></db:para>
</db:td>
<db:td><db:code>56</db:code></db:td>
<db:td>
<db:para>The home directory icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DirOpenIcon</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>The open directory icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DirClosedIcon</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>The closed directory icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DirIcon</db:code></db:para>
</db:td>
<db:td><db:code>38</db:code></db:td>
<db:td>
<db:para>The directory icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DirLinkIcon</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>The link to directory icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DirLinkOpenIcon</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td>
<db:para>The link to open directory icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_FileIcon</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
<db:td>
<db:para>The file icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_FileLinkIcon</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
<db:td>
<db:para>The link to file icon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_FileDialogStart</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
<db:td>
<db:para>The &quot;start&quot; icon in a file dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_FileDialogEnd</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
<db:td>
<db:para>The &quot;end&quot; icon in a file dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_FileDialogToParent</db:code></db:para>
</db:td>
<db:td><db:code>31</db:code></db:td>
<db:td>
<db:para>The &quot;parent directory&quot; icon in a file dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_FileDialogNewFolder</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
<db:td>
<db:para>The &quot;create new folder&quot; icon in a file dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_FileDialogDetailedView</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td>
<db:para>The detailed view icon in a file dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_FileDialogInfoView</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
<db:td>
<db:para>The file info icon in a file dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_FileDialogContentsView</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
<db:td>
<db:para>The contents view icon in a file dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_FileDialogListView</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
<db:td>
<db:para>The list view icon in a file dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_FileDialogBack</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td>
<db:para>The back arrow in a file dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DockWidgetCloseButton</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>Close button on dock windows (see also <db:link xlink:href="qdockwidget.xml">QDockWidget</db:link>).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_ToolBarHorizontalExtensionButton</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
<db:td>
<db:para>Extension button for horizontal toolbars.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_ToolBarVerticalExtensionButton</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
<db:td>
<db:para>Extension button for vertical toolbars.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogOkButton</db:code></db:para>
</db:td>
<db:td><db:code>39</db:code></db:td>
<db:td>
<db:para>Icon for a standard OK button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogCancelButton</db:code></db:para>
</db:td>
<db:td><db:code>40</db:code></db:td>
<db:td>
<db:para>Icon for a standard Cancel button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogHelpButton</db:code></db:para>
</db:td>
<db:td><db:code>41</db:code></db:td>
<db:td>
<db:para>Icon for a standard Help button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogOpenButton</db:code></db:para>
</db:td>
<db:td><db:code>42</db:code></db:td>
<db:td>
<db:para>Icon for a standard Open button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogSaveButton</db:code></db:para>
</db:td>
<db:td><db:code>43</db:code></db:td>
<db:td>
<db:para>Icon for a standard Save button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogCloseButton</db:code></db:para>
</db:td>
<db:td><db:code>44</db:code></db:td>
<db:td>
<db:para>Icon for a standard Close button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogApplyButton</db:code></db:para>
</db:td>
<db:td><db:code>45</db:code></db:td>
<db:td>
<db:para>Icon for a standard Apply button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogResetButton</db:code></db:para>
</db:td>
<db:td><db:code>46</db:code></db:td>
<db:td>
<db:para>Icon for a standard Reset button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogDiscardButton</db:code></db:para>
</db:td>
<db:td><db:code>47</db:code></db:td>
<db:td>
<db:para>Icon for a standard Discard button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogYesButton</db:code></db:para>
</db:td>
<db:td><db:code>48</db:code></db:td>
<db:td>
<db:para>Icon for a standard Yes button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogNoButton</db:code></db:para>
</db:td>
<db:td><db:code>49</db:code></db:td>
<db:td>
<db:para>Icon for a standard No button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_ArrowUp</db:code></db:para>
</db:td>
<db:td><db:code>50</db:code></db:td>
<db:td>
<db:para>Icon arrow pointing up.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_ArrowDown</db:code></db:para>
</db:td>
<db:td><db:code>51</db:code></db:td>
<db:td>
<db:para>Icon arrow pointing down.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_ArrowLeft</db:code></db:para>
</db:td>
<db:td><db:code>52</db:code></db:td>
<db:td>
<db:para>Icon arrow pointing left.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_ArrowRight</db:code></db:para>
</db:td>
<db:td><db:code>53</db:code></db:td>
<db:td>
<db:para>Icon arrow pointing right.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_ArrowBack</db:code></db:para>
</db:td>
<db:td><db:code>54</db:code></db:td>
<db:td>
<db:para>Equivalent to SP_ArrowLeft when the current layout direction is <db:link xlink:href="qt.xml#LayoutDirection-enum">Qt::LeftToRight</db:link>, otherwise SP_ArrowRight.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_ArrowForward</db:code></db:para>
</db:td>
<db:td><db:code>55</db:code></db:td>
<db:td>
<db:para>Equivalent to SP_ArrowRight when the current layout direction is <db:link xlink:href="qt.xml#LayoutDirection-enum">Qt::LeftToRight</db:link>, otherwise SP_ArrowLeft.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_CommandLink</db:code></db:para>
</db:td>
<db:td><db:code>57</db:code></db:td>
<db:td>
<db:para>Icon used to indicate a Vista style command link glyph.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_VistaShield</db:code></db:para>
</db:td>
<db:td><db:code>58</db:code></db:td>
<db:td>
<db:para>Icon used to indicate UAC prompts on Windows Vista. This will return a null pixmap or icon on all other platforms.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_BrowserReload</db:code></db:para>
</db:td>
<db:td><db:code>59</db:code></db:td>
<db:td>
<db:para>Icon indicating that the current page should be reloaded.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_BrowserStop</db:code></db:para>
</db:td>
<db:td><db:code>60</db:code></db:td>
<db:td>
<db:para>Icon indicating that the page loading should stop.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_MediaPlay</db:code></db:para>
</db:td>
<db:td><db:code>61</db:code></db:td>
<db:td>
<db:para>Icon indicating that media should begin playback.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_MediaStop</db:code></db:para>
</db:td>
<db:td><db:code>62</db:code></db:td>
<db:td>
<db:para>Icon indicating that media should stop playback.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_MediaPause</db:code></db:para>
</db:td>
<db:td><db:code>63</db:code></db:td>
<db:td>
<db:para>Icon indicating that media should pause playback.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_MediaSkipForward</db:code></db:para>
</db:td>
<db:td><db:code>64</db:code></db:td>
<db:td>
<db:para>Icon indicating that media should skip forward.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_MediaSkipBackward</db:code></db:para>
</db:td>
<db:td><db:code>65</db:code></db:td>
<db:td>
<db:para>Icon indicating that media should skip backward.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_MediaSeekForward</db:code></db:para>
</db:td>
<db:td><db:code>66</db:code></db:td>
<db:td>
<db:para>Icon indicating that media should seek forward.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_MediaSeekBackward</db:code></db:para>
</db:td>
<db:td><db:code>67</db:code></db:td>
<db:td>
<db:para>Icon indicating that media should seek backward.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_MediaVolume</db:code></db:para>
</db:td>
<db:td><db:code>68</db:code></db:td>
<db:td>
<db:para>Icon indicating a volume control.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_MediaVolumeMuted</db:code></db:para>
</db:td>
<db:td><db:code>69</db:code></db:td>
<db:td>
<db:para>Icon indicating a muted volume control.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_LineEditClearButton (since Qt 5.2)</db:code></db:para>
</db:td>
<db:td><db:code>70</db:code></db:td>
<db:td>
<db:para>Icon for a standard clear button in a <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogYesToAllButton (since Qt 5.14)</db:code></db:para>
</db:td>
<db:td><db:code>71</db:code></db:td>
<db:td>
<db:para>Icon for a standard YesToAll button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogNoToAllButton (since Qt 5.14)</db:code></db:para>
</db:td>
<db:td><db:code>72</db:code></db:td>
<db:td>
<db:para>Icon for a standard NoToAll button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogSaveAllButton (since Qt 5.14)</db:code></db:para>
</db:td>
<db:td><db:code>73</db:code></db:td>
<db:td>
<db:para>Icon for a standard SaveAll button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogAbortButton (since Qt 5.14)</db:code></db:para>
</db:td>
<db:td><db:code>74</db:code></db:td>
<db:td>
<db:para>Icon for a standard Abort button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogRetryButton (since Qt 5.14)</db:code></db:para>
</db:td>
<db:td><db:code>75</db:code></db:td>
<db:td>
<db:para>Icon for a standard Retry button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_DialogIgnoreButton (since Qt 5.14)</db:code></db:para>
</db:td>
<db:td><db:code>76</db:code></db:td>
<db:td>
<db:para>Icon for a standard Ignore button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_RestoreDefaultsButton (since Qt 5.14)</db:code></db:para>
</db:td>
<db:td><db:code>77</db:code></db:td>
<db:td>
<db:para>Icon for a standard RestoreDefaults button in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_TabCloseButton (since Qt 6.3)</db:code></db:para>
</db:td>
<db:td><db:code>78</db:code></db:td>
<db:td>
<db:para>Icon for the close button in the tab of a <db:link xlink:href="qtabbar.xml">QTabBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SP_CustomBase</db:code></db:para>
</db:td>
<db:td><db:code>0xf0000000</db:code></db:td>
<db:td>
<db:para>Base value for custom standard pixmaps; custom values must be greater than this value.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#standardIcon">standardIcon</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="StateFlag-enum">
<db:title>enum QStyle::StateFlag</db:title>
<db:bridgehead renderas="sect2">flags QStyle::State</db:bridgehead>
<db:enumsynopsis>
<db:enumname>StateFlag</db:enumname>
<db:enumitem>
<db:enumidentifier>State_None</db:enumidentifier>
<db:enumvalue>0x00000000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Enabled</db:enumidentifier>
<db:enumvalue>0x00000001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Raised</db:enumidentifier>
<db:enumvalue>0x00000002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Sunken</db:enumidentifier>
<db:enumvalue>0x00000004</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Off</db:enumidentifier>
<db:enumvalue>0x00000008</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_NoChange</db:enumidentifier>
<db:enumvalue>0x00000010</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_On</db:enumidentifier>
<db:enumvalue>0x00000020</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_DownArrow</db:enumidentifier>
<db:enumvalue>0x00000040</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Horizontal</db:enumidentifier>
<db:enumvalue>0x00000080</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_HasFocus</db:enumidentifier>
<db:enumvalue>0x00000100</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Top</db:enumidentifier>
<db:enumvalue>0x00000200</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Bottom</db:enumidentifier>
<db:enumvalue>0x00000400</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_FocusAtBorder</db:enumidentifier>
<db:enumvalue>0x00000800</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_AutoRaise</db:enumidentifier>
<db:enumvalue>0x00001000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_MouseOver</db:enumidentifier>
<db:enumvalue>0x00002000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_UpArrow</db:enumidentifier>
<db:enumvalue>0x00004000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Selected</db:enumidentifier>
<db:enumvalue>0x00008000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Active</db:enumidentifier>
<db:enumvalue>0x00010000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Window</db:enumidentifier>
<db:enumvalue>0x00020000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Open</db:enumidentifier>
<db:enumvalue>0x00040000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Children</db:enumidentifier>
<db:enumvalue>0x00080000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Item</db:enumidentifier>
<db:enumvalue>0x00100000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Sibling</db:enumidentifier>
<db:enumvalue>0x00200000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Editing</db:enumidentifier>
<db:enumvalue>0x00400000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_KeyboardFocusChange</db:enumidentifier>
<db:enumvalue>0x00800000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_HasEditFocus</db:enumidentifier>
<db:enumvalue>0x01000000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_ReadOnly</db:enumidentifier>
<db:enumvalue>0x02000000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Small</db:enumidentifier>
<db:enumvalue>0x04000000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>State_Mini</db:enumidentifier>
<db:enumvalue>0x08000000</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:typedefsynopsis>
<db:typedefname>QStyle::State</db:typedefname>
</db:typedefsynopsis>
<db:para>This enum describes flags that are used when drawing primitive elements.</db:para>
<db:para>Note that not all primitives use all of these flags, and that the flags may mean different things to different items.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_None</db:code></db:para>
</db:td>
<db:td><db:code>0x00000000</db:code></db:td>
<db:td>
<db:para>Indicates that the widget does not have a state.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Active</db:code></db:para>
</db:td>
<db:td><db:code>0x00010000</db:code></db:td>
<db:td>
<db:para>Indicates that the widget is active.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_AutoRaise</db:code></db:para>
</db:td>
<db:td><db:code>0x00001000</db:code></db:td>
<db:td>
<db:para>Used to indicate if auto-raise appearance should be used on a tool button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Children</db:code></db:para>
</db:td>
<db:td><db:code>0x00080000</db:code></db:td>
<db:td>
<db:para>Used to indicate if an item view branch has children.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_DownArrow</db:code></db:para>
</db:td>
<db:td><db:code>0x00000040</db:code></db:td>
<db:td>
<db:para>Used to indicate if a down arrow should be visible on the widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Editing</db:code></db:para>
</db:td>
<db:td><db:code>0x00400000</db:code></db:td>
<db:td>
<db:para>Used to indicate if an editor is opened on the widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Enabled</db:code></db:para>
</db:td>
<db:td><db:code>0x00000001</db:code></db:td>
<db:td>
<db:para>Used to indicate if the widget is enabled.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_HasEditFocus</db:code></db:para>
</db:td>
<db:td><db:code>0x01000000</db:code></db:td>
<db:td>
<db:para>Used to indicate if the widget currently has edit focus.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_HasFocus</db:code></db:para>
</db:td>
<db:td><db:code>0x00000100</db:code></db:td>
<db:td>
<db:para>Used to indicate if the widget has focus.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Horizontal</db:code></db:para>
</db:td>
<db:td><db:code>0x00000080</db:code></db:td>
<db:td>
<db:para>Used to indicate if the widget is laid out horizontally, for example. a tool bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_KeyboardFocusChange</db:code></db:para>
</db:td>
<db:td><db:code>0x00800000</db:code></db:td>
<db:td>
<db:para>Used to indicate if the focus was changed with the keyboard, e.g., tab, backtab or shortcut.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_MouseOver</db:code></db:para>
</db:td>
<db:td><db:code>0x00002000</db:code></db:td>
<db:td>
<db:para>Used to indicate if the widget is under the mouse.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_NoChange</db:code></db:para>
</db:td>
<db:td><db:code>0x00000010</db:code></db:td>
<db:td>
<db:para>Used to indicate a tri-state checkbox.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Off</db:code></db:para>
</db:td>
<db:td><db:code>0x00000008</db:code></db:td>
<db:td>
<db:para>Used to indicate if the widget is not checked.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_On</db:code></db:para>
</db:td>
<db:td><db:code>0x00000020</db:code></db:td>
<db:td>
<db:para>Used to indicate if the widget is checked.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Raised</db:code></db:para>
</db:td>
<db:td><db:code>0x00000002</db:code></db:td>
<db:td>
<db:para>Used to indicate if a button is raised.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_ReadOnly</db:code></db:para>
</db:td>
<db:td><db:code>0x02000000</db:code></db:td>
<db:td>
<db:para>Used to indicate if a widget is read-only.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Selected</db:code></db:para>
</db:td>
<db:td><db:code>0x00008000</db:code></db:td>
<db:td>
<db:para>Used to indicate if a widget is selected.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Item</db:code></db:para>
</db:td>
<db:td><db:code>0x00100000</db:code></db:td>
<db:td>
<db:para>Used by item views to indicate if a horizontal branch should be drawn.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Open</db:code></db:para>
</db:td>
<db:td><db:code>0x00040000</db:code></db:td>
<db:td>
<db:para>Used by item views to indicate if the tree branch is open.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Sibling</db:code></db:para>
</db:td>
<db:td><db:code>0x00200000</db:code></db:td>
<db:td>
<db:para>Used by item views to indicate if a vertical line needs to be drawn (for siblings).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Sunken</db:code></db:para>
</db:td>
<db:td><db:code>0x00000004</db:code></db:td>
<db:td>
<db:para>Used to indicate if the widget is sunken or pressed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_UpArrow</db:code></db:para>
</db:td>
<db:td><db:code>0x00004000</db:code></db:td>
<db:td>
<db:para>Used to indicate if an up arrow should be visible on the widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Mini</db:code></db:para>
</db:td>
<db:td><db:code>0x08000000</db:code></db:td>
<db:td>
<db:para>Used to indicate a mini style Mac widget or button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::State_Small</db:code></db:para>
</db:td>
<db:td><db:code>0x04000000</db:code></db:td>
<db:td>
<db:para>Used to indicate a small style Mac widget or button.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>State</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;StateFlag&gt;. </db:code>It stores an OR combination of <db:code>StateFlag</db:code> values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#drawPrimitive">drawPrimitive</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="StyleHint-enum">
<db:title>enum QStyle::StyleHint</db:title>
<db:enumsynopsis>
<db:enumname>StyleHint</db:enumname>
<db:enumitem>
<db:enumidentifier>SH_EtchDisabledText</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_DitherDisabledText</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ScrollBar_MiddleClickAbsolutePosition</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ScrollBar_ScrollWhenPointerLeavesControl</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_TabBar_SelectMouseType</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_TabBar_Alignment</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Header_ArrowAlignment</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Slider_SnapToValue</db:enumidentifier>
<db:enumvalue>7</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Slider_SloppyKeyEvents</db:enumidentifier>
<db:enumvalue>8</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ProgressDialog_CenterCancelButton</db:enumidentifier>
<db:enumvalue>9</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ProgressDialog_TextLabelAlignment</db:enumidentifier>
<db:enumvalue>10</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_PrintDialog_RightAlignButtons</db:enumidentifier>
<db:enumvalue>11</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_MainWindow_SpaceBelowMenuBar</db:enumidentifier>
<db:enumvalue>12</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_FontDialog_SelectAssociatedText</db:enumidentifier>
<db:enumvalue>13</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_AllowActiveAndDisabled</db:enumidentifier>
<db:enumvalue>14</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_SpaceActivatesItem</db:enumidentifier>
<db:enumvalue>15</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_SubMenuPopupDelay</db:enumidentifier>
<db:enumvalue>16</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ScrollView_FrameOnlyAroundContents</db:enumidentifier>
<db:enumvalue>17</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_MenuBar_AltKeyNavigation</db:enumidentifier>
<db:enumvalue>18</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ComboBox_ListMouseTracking</db:enumidentifier>
<db:enumvalue>19</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_MouseTracking</db:enumidentifier>
<db:enumvalue>20</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_MenuBar_MouseTracking</db:enumidentifier>
<db:enumvalue>21</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ItemView_ChangeHighlightOnFocus</db:enumidentifier>
<db:enumvalue>22</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Widget_ShareActivation</db:enumidentifier>
<db:enumvalue>23</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Workspace_FillSpaceOnMaximize</db:enumidentifier>
<db:enumvalue>24</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ComboBox_Popup</db:enumidentifier>
<db:enumvalue>25</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_TitleBar_NoBorder</db:enumidentifier>
<db:enumvalue>26</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Slider_StopMouseOverSlider</db:enumidentifier>
<db:enumvalue>27</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_BlinkCursorWhenTextSelected</db:enumidentifier>
<db:enumvalue>28</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_RichText_FullWidthSelection</db:enumidentifier>
<db:enumvalue>29</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_Scrollable</db:enumidentifier>
<db:enumvalue>30</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_GroupBox_TextLabelVerticalAlignment</db:enumidentifier>
<db:enumvalue>31</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_GroupBox_TextLabelColor</db:enumidentifier>
<db:enumvalue>32</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_SloppySubMenus</db:enumidentifier>
<db:enumvalue>33</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Table_GridLineColor</db:enumidentifier>
<db:enumvalue>34</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_LineEdit_PasswordCharacter</db:enumidentifier>
<db:enumvalue>35</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_DialogButtons_DefaultButton</db:enumidentifier>
<db:enumvalue>36</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ToolBox_SelectedPageTitleBold</db:enumidentifier>
<db:enumvalue>37</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_TabBar_PreferNoArrows</db:enumidentifier>
<db:enumvalue>38</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ScrollBar_LeftClickAbsolutePosition</db:enumidentifier>
<db:enumvalue>39</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ListViewExpand_SelectMouseType</db:enumidentifier>
<db:enumvalue>40</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_UnderlineShortcut</db:enumidentifier>
<db:enumvalue>41</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_SpinBox_AnimateButton</db:enumidentifier>
<db:enumvalue>42</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_SpinBox_KeyPressAutoRepeatRate</db:enumidentifier>
<db:enumvalue>43</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_SpinBox_ClickAutoRepeatRate</db:enumidentifier>
<db:enumvalue>44</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_FillScreenWithScroll</db:enumidentifier>
<db:enumvalue>45</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ToolTipLabel_Opacity</db:enumidentifier>
<db:enumvalue>46</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_DrawMenuBarSeparator</db:enumidentifier>
<db:enumvalue>47</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_TitleBar_ModifyNotification</db:enumidentifier>
<db:enumvalue>48</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Button_FocusPolicy</db:enumidentifier>
<db:enumvalue>49</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_MessageBox_UseBorderForButtonSpacing</db:enumidentifier>
<db:enumvalue>50</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_TitleBar_AutoRaise</db:enumidentifier>
<db:enumvalue>51</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ToolButton_PopupDelay</db:enumidentifier>
<db:enumvalue>52</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_FocusFrame_Mask</db:enumidentifier>
<db:enumvalue>53</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_RubberBand_Mask</db:enumidentifier>
<db:enumvalue>54</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_WindowFrame_Mask</db:enumidentifier>
<db:enumvalue>55</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_SpinControls_DisableOnBounds</db:enumidentifier>
<db:enumvalue>56</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Dial_BackgroundRole</db:enumidentifier>
<db:enumvalue>57</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ComboBox_LayoutDirection</db:enumidentifier>
<db:enumvalue>58</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ItemView_EllipsisLocation</db:enumidentifier>
<db:enumvalue>59</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ItemView_ShowDecorationSelected</db:enumidentifier>
<db:enumvalue>60</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ItemView_ActivateItemOnSingleClick</db:enumidentifier>
<db:enumvalue>61</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ScrollBar_ContextMenu</db:enumidentifier>
<db:enumvalue>62</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ScrollBar_RollBetweenButtons</db:enumidentifier>
<db:enumvalue>63</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Slider_AbsoluteSetButtons</db:enumidentifier>
<db:enumvalue>64</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Slider_PageSetButtons</db:enumidentifier>
<db:enumvalue>65</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_KeyboardSearch</db:enumidentifier>
<db:enumvalue>66</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_TabBar_ElideMode</db:enumidentifier>
<db:enumvalue>67</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_DialogButtonLayout</db:enumidentifier>
<db:enumvalue>68</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ComboBox_PopupFrameStyle</db:enumidentifier>
<db:enumvalue>69</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_MessageBox_TextInteractionFlags</db:enumidentifier>
<db:enumvalue>70</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_DialogButtonBox_ButtonsHaveIcons</db:enumidentifier>
<db:enumvalue>71</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_MessageBox_CenterButtons</db:enumidentifier>
<db:enumvalue>72</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_SelectionWrap</db:enumidentifier>
<db:enumvalue>73</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ItemView_MovementWithoutUpdatingSelection</db:enumidentifier>
<db:enumvalue>74</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ToolTip_Mask</db:enumidentifier>
<db:enumvalue>75</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_FocusFrame_AboveWidget</db:enumidentifier>
<db:enumvalue>76</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_TextControl_FocusIndicatorTextCharFormat</db:enumidentifier>
<db:enumvalue>77</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_WizardStyle</db:enumidentifier>
<db:enumvalue>78</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ItemView_ArrowKeysNavigateIntoChildren</db:enumidentifier>
<db:enumvalue>79</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_Mask</db:enumidentifier>
<db:enumvalue>80</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_FlashTriggeredItem</db:enumidentifier>
<db:enumvalue>81</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_FadeOutOnHide</db:enumidentifier>
<db:enumvalue>82</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_SpinBox_ClickAutoRepeatThreshold</db:enumidentifier>
<db:enumvalue>83</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ItemView_PaintAlternatingRowColorsForEmptyArea</db:enumidentifier>
<db:enumvalue>84</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_FormLayoutWrapPolicy</db:enumidentifier>
<db:enumvalue>85</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_TabWidget_DefaultTabPosition</db:enumidentifier>
<db:enumvalue>86</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ToolBar_Movable</db:enumidentifier>
<db:enumvalue>87</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_FormLayoutFieldGrowthPolicy</db:enumidentifier>
<db:enumvalue>88</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_FormLayoutFormAlignment</db:enumidentifier>
<db:enumvalue>89</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_FormLayoutLabelAlignment</db:enumidentifier>
<db:enumvalue>90</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ItemView_DrawDelegateFrame</db:enumidentifier>
<db:enumvalue>91</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_TabBar_CloseButtonPosition</db:enumidentifier>
<db:enumvalue>92</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_DockWidget_ButtonsHaveFrame</db:enumidentifier>
<db:enumvalue>93</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ToolButtonStyle</db:enumidentifier>
<db:enumvalue>94</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_RequestSoftwareInputPanel</db:enumidentifier>
<db:enumvalue>95</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ScrollBar_Transient</db:enumidentifier>
<db:enumvalue>96</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_SupportsSections</db:enumidentifier>
<db:enumvalue>97</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ToolTip_WakeUpDelay</db:enumidentifier>
<db:enumvalue>98</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ToolTip_FallAsleepDelay</db:enumidentifier>
<db:enumvalue>99</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Widget_Animate</db:enumidentifier>
<db:enumvalue>100</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Splitter_OpaqueResize</db:enumidentifier>
<db:enumvalue>101</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ComboBox_UseNativePopup</db:enumidentifier>
<db:enumvalue>102</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_LineEdit_PasswordMaskDelay</db:enumidentifier>
<db:enumvalue>103</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_TabBar_ChangeCurrentDelay</db:enumidentifier>
<db:enumvalue>104</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_SubMenuUniDirection</db:enumidentifier>
<db:enumvalue>105</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_SubMenuUniDirectionFailCount</db:enumidentifier>
<db:enumvalue>106</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_SubMenuSloppySelectOtherActions</db:enumidentifier>
<db:enumvalue>107</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_SubMenuSloppyCloseTimeout</db:enumidentifier>
<db:enumvalue>108</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_SubMenuResetWhenReenteringParent</db:enumidentifier>
<db:enumvalue>109</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Menu_SubMenuDontStartSloppyOnLeave</db:enumidentifier>
<db:enumvalue>110</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ItemView_ScrollMode</db:enumidentifier>
<db:enumvalue>111</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_TitleBar_ShowToolTipsOnButtons</db:enumidentifier>
<db:enumvalue>112</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Widget_Animation_Duration</db:enumidentifier>
<db:enumvalue>113</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_ComboBox_AllowWheelScrolling</db:enumidentifier>
<db:enumvalue>114</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_SpinBox_ButtonsInsideFrame</db:enumidentifier>
<db:enumvalue>115</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_SpinBox_StepModifier</db:enumidentifier>
<db:enumvalue>116</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_TabBar_AllowWheelScrolling</db:enumidentifier>
<db:enumvalue>117</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_Table_AlwaysDrawLeftTopGridLines</db:enumidentifier>
<db:enumvalue>118</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_SpinBox_SelectOnStep</db:enumidentifier>
<db:enumvalue>119</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SH_CustomBase</db:enumidentifier>
<db:enumvalue>0xf0000000</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the available style hints. A style hint is a general look and/or feel hint.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_EtchDisabledText</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Disabled text is &quot;etched&quot; as it is on Windows.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_DitherDisabledText</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Disabled text is dithered as it is on Motif.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ScrollBar_ContextMenu</db:code></db:para>
</db:td>
<db:td><db:code>62</db:code></db:td>
<db:td>
<db:para>Whether or not a scroll bar has a context menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ScrollBar_MiddleClickAbsolutePosition</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>A boolean value. If true, middle clicking on a scroll bar causes the slider to jump to that position. If false, middle clicking is ignored.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ScrollBar_LeftClickAbsolutePosition</db:code></db:para>
</db:td>
<db:td><db:code>39</db:code></db:td>
<db:td>
<db:para>A boolean value. If true, left clicking on a scroll bar causes the slider to jump to that position. If false, left clicking will behave as appropriate for each control.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ScrollBar_ScrollWhenPointerLeavesControl</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>A boolean value. If true, when clicking a scroll bar <db:link xlink:href="qstyle.xml#SubControl-enum">SubControl</db:link>, holding the mouse button down and moving the pointer outside the <db:link xlink:href="qstyle.xml#SubControl-enum">SubControl</db:link>, the scroll bar continues to scroll. If false, the scollbar stops scrolling when the pointer leaves the <db:link xlink:href="qstyle.xml#SubControl-enum">SubControl</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ScrollBar_RollBetweenButtons</db:code></db:para>
</db:td>
<db:td><db:code>63</db:code></db:td>
<db:td>
<db:para>A boolean value. If true, when clicking a scroll bar button (<db:link xlink:href="qstyle.xml#SubControl-enum">SC_ScrollBarAddLine</db:link> or <db:link xlink:href="qstyle.xml#SubControl-enum">SC_ScrollBarSubLine</db:link>) and dragging over to the opposite button (rolling) will press the new button and release the old one. When it is false, the original button is released and nothing happens (like a push button).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_TabBar_Alignment</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>The alignment for tabs in a <db:link xlink:href="qtabwidget.xml">QTabWidget</db:link>. Possible values are <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignLeft</db:link>, <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignCenter</db:link> and <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignRight</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Header_ArrowAlignment</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>The placement of the sorting indicator may appear in list or table headers. Possible values are <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::Alignment</db:link> values (that is, an OR combination of <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignmentFlag</db:link> flags).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Slider_SnapToValue</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>Sliders snap to values while moving, as they do on Windows.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Slider_SloppyKeyEvents</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>Key presses handled in a sloppy manner, i.e., left on a vertical slider subtracts a line.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ProgressDialog_CenterCancelButton</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>Center button on progress dialogs, otherwise right aligned.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ProgressDialog_TextLabelAlignment</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>The alignment for text labels in progress dialogs; <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignCenter</db:link> on Windows, <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignVCenter</db:link> otherwise.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_PrintDialog_RightAlignButtons</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>Right align buttons in the print dialog, as done on Windows.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_MainWindow_SpaceBelowMenuBar</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>One or two pixel space between the menu bar and the dockarea, as done on Windows.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_FontDialog_SelectAssociatedText</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>Select the text in the line edit, or when selecting an item from the listbox, or when the line edit receives focus, as done on Windows.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_KeyboardSearch</db:code></db:para>
</db:td>
<db:td><db:code>66</db:code></db:td>
<db:td>
<db:para>Typing causes a menu to be search for relevant items, otherwise only mnemnonic is considered.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_AllowActiveAndDisabled</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>Allows disabled menu items to be active.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_SpaceActivatesItem</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>Pressing the space bar activates the item, as done on Motif.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_SubMenuPopupDelay</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>The number of milliseconds to wait before opening a submenu (256 on Windows, 96 on Motif).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_Scrollable</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
<db:td>
<db:para>Whether popup menus must support scrolling.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_SloppySubMenus</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td>
<db:para>Whether popup menus must support the user moving the mouse cursor to a submenu while crossing other items of the menu. This is supported on most modern desktop platforms.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_SubMenuUniDirection</db:code></db:para>
</db:td>
<db:td><db:code>105</db:code></db:td>
<db:td>
<db:para>Since Qt 5.5. If the cursor has to move towards the submenu (like it is on macOS), or if the cursor can move in any direction as long as it reaches the submenu before the sloppy timeout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_SubMenuUniDirectionFailCount</db:code></db:para>
</db:td>
<db:td><db:code>106</db:code></db:td>
<db:td>
<db:para>Since Qt 5.5. When SH_Menu_SubMenuUniDirection is defined this enum defines the number of failed mouse moves before the sloppy submenu is discarded. This can be used to control the &quot;strictness&quot; of the uni direction algorithm.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_SubMenuSloppySelectOtherActions</db:code></db:para>
</db:td>
<db:td><db:code>107</db:code></db:td>
<db:td>
<db:para>Since Qt 5.5. Should other action items be selected when the mouse moves towards a sloppy submenu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_SubMenuSloppyCloseTimeout</db:code></db:para>
</db:td>
<db:td><db:code>108</db:code></db:td>
<db:td>
<db:para>Since Qt 5.5. The timeout used to close sloppy submenus.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_SubMenuResetWhenReenteringParent</db:code></db:para>
</db:td>
<db:td><db:code>109</db:code></db:td>
<db:td>
<db:para>Since Qt 5.5. When entering parent from child submenu, should the sloppy state be reset, effectively closing the child and making the current submenu active.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_SubMenuDontStartSloppyOnLeave</db:code></db:para>
</db:td>
<db:td><db:code>110</db:code></db:td>
<db:td>
<db:para>Since Qt 5.5. Do not start sloppy timers when the mouse leaves a sub-menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ScrollView_FrameOnlyAroundContents</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>Whether scrollviews draw their frame only around contents (like Motif), or around contents, scroll bars and corner widgets (like Windows).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_MenuBar_AltKeyNavigation</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td>
<db:para>Menu bars items are navigable by pressing Alt, followed by using the arrow keys to select the desired item.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ComboBox_ListMouseTracking</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>Mouse tracking in combobox drop-down lists.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_MouseTracking</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>Mouse tracking in popup menus.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_MenuBar_MouseTracking</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>Mouse tracking in menu bars.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_FillScreenWithScroll</db:code></db:para>
</db:td>
<db:td><db:code>45</db:code></db:td>
<db:td>
<db:para>Whether scrolling popups should fill the screen as they are scrolled.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_SelectionWrap</db:code></db:para>
</db:td>
<db:td><db:code>73</db:code></db:td>
<db:td>
<db:para>Whether popups should allow the selections to wrap, that is when selection should the next item be the first item.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ItemView_ChangeHighlightOnFocus</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>Gray out selected items when losing focus.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Widget_ShareActivation</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>Turn on sharing activation with floating modeless dialogs.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_TabBar_SelectMouseType</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>Which type of mouse event should cause a tab to be selected.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ListViewExpand_SelectMouseType</db:code></db:para>
</db:td>
<db:td><db:code>40</db:code></db:td>
<db:td>
<db:para>Which type of mouse event should cause a list view expansion to be selected.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_TabBar_PreferNoArrows</db:code></db:para>
</db:td>
<db:td><db:code>38</db:code></db:td>
<db:td>
<db:para>Whether a tab bar should suggest a size to prevent scroll arrows.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ComboBox_Popup</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
<db:td>
<db:para>Allows popups as a combobox drop-down menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Workspace_FillSpaceOnMaximize</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td>
<db:para>The workspace should maximize the client area.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_TitleBar_NoBorder</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
<db:td>
<db:para>The title bar has no border.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Slider_StopMouseOverSlider</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
<db:td>
<db:para>Stops auto-repeat when the slider reaches the mouse position.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_BlinkCursorWhenTextSelected</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
<db:td>
<db:para>Whether cursor should blink when text is selected.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_RichText_FullWidthSelection</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
<db:td>
<db:para>Whether richtext selections should extend to the full width of the document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_GroupBox_TextLabelVerticalAlignment</db:code></db:para>
</db:td>
<db:td><db:code>31</db:code></db:td>
<db:td>
<db:para>How to vertically align a group box's text label.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_GroupBox_TextLabelColor</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
<db:td>
<db:para>How to paint a group box's text label.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_DialogButtons_DefaultButton</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
<db:td>
<db:para>Which button gets the default status in a dialog's button widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ToolBox_SelectedPageTitleBold</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td>
<db:para>Boldness of the selected page title in a <db:link xlink:href="qtoolbox.xml">QToolBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_LineEdit_PasswordCharacter</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
<db:td>
<db:para>The Unicode character to be used for passwords.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_LineEdit_PasswordMaskDelay</db:code></db:para>
</db:td>
<db:td><db:code>103</db:code></db:td>
<db:td>
<db:para>Determines the delay before visible character is masked with password character, in milliseconds. This enum value was added in Qt 5.4.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Table_GridLineColor</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
<db:td>
<db:para>The RGBA value of the grid for a table.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_UnderlineShortcut</db:code></db:para>
</db:td>
<db:td><db:code>41</db:code></db:td>
<db:td>
<db:para>Whether shortcuts are underlined.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_SpinBox_AnimateButton</db:code></db:para>
</db:td>
<db:td><db:code>42</db:code></db:td>
<db:td>
<db:para>Animate a click when up or down is pressed in a spin box.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_SpinBox_KeyPressAutoRepeatRate</db:code></db:para>
</db:td>
<db:td><db:code>43</db:code></db:td>
<db:td>
<db:para>Auto-repeat interval for spinbox key presses.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_SpinBox_ClickAutoRepeatRate</db:code></db:para>
</db:td>
<db:td><db:code>44</db:code></db:td>
<db:td>
<db:para>Auto-repeat interval for spinbox mouse clicks.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_SpinBox_ClickAutoRepeatThreshold</db:code></db:para>
</db:td>
<db:td><db:code>83</db:code></db:td>
<db:td>
<db:para>Auto-repeat threshold for spinbox mouse clicks.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_SpinBox_SelectOnStep (since Qt 6.3)</db:code></db:para>
</db:td>
<db:td><db:code>119</db:code></db:td>
<db:td>
<db:para>Whether changing the value using the buttons or up/down keys automatically selects the text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ToolTipLabel_Opacity</db:code></db:para>
</db:td>
<db:td><db:code>46</db:code></db:td>
<db:td>
<db:para>An integer indicating the opacity for the tip label, 0 is completely transparent, 255 is completely opaque.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_DrawMenuBarSeparator</db:code></db:para>
</db:td>
<db:td><db:code>47</db:code></db:td>
<db:td>
<db:para>Indicates whether or not the menu bar draws separators.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_TitleBar_ModifyNotification</db:code></db:para>
</db:td>
<db:td><db:code>48</db:code></db:td>
<db:td>
<db:para>Indicates if the title bar should show a '*' for windows that are modified.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Button_FocusPolicy</db:code></db:para>
</db:td>
<db:td><db:code>49</db:code></db:td>
<db:td>
<db:para>The default focus policy for buttons.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_CustomBase</db:code></db:para>
</db:td>
<db:td><db:code>0xf0000000</db:code></db:td>
<db:td>
<db:para>Base value for custom style hints. Custom values must be greater than this value.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_MessageBox_UseBorderForButtonSpacing</db:code></db:para>
</db:td>
<db:td><db:code>50</db:code></db:td>
<db:td>
<db:para>A boolean indicating what the to use the border of the buttons (computed as half the button height) for the spacing of the button in a message box.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_MessageBox_CenterButtons</db:code></db:para>
</db:td>
<db:td><db:code>72</db:code></db:td>
<db:td>
<db:para>A boolean indicating whether the buttons in the message box should be centered or not (see QDialogButtonBox::setCentered()).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_MessageBox_TextInteractionFlags</db:code></db:para>
</db:td>
<db:td><db:code>70</db:code></db:td>
<db:td>
<db:para>A boolean indicating if the text in a message box should allow user interfactions (e.g. selection) or not.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_TitleBar_AutoRaise</db:code></db:para>
</db:td>
<db:td><db:code>51</db:code></db:td>
<db:td>
<db:para>A boolean indicating whether controls on a title bar ought to update when the mouse is over them.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ToolButton_PopupDelay</db:code></db:para>
</db:td>
<db:td><db:code>52</db:code></db:td>
<db:td>
<db:para>An int indicating the popup delay in milliseconds for menus attached to tool buttons.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_FocusFrame_Mask</db:code></db:para>
</db:td>
<db:td><db:code>53</db:code></db:td>
<db:td>
<db:para>The mask of the focus frame.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_RubberBand_Mask</db:code></db:para>
</db:td>
<db:td><db:code>54</db:code></db:td>
<db:td>
<db:para>The mask of the rubber band.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_WindowFrame_Mask</db:code></db:para>
</db:td>
<db:td><db:code>55</db:code></db:td>
<db:td>
<db:para>The mask of the window frame.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_SpinControls_DisableOnBounds</db:code></db:para>
</db:td>
<db:td><db:code>56</db:code></db:td>
<db:td>
<db:para>Determines if the spin controls will shown as disabled when reaching the spin range boundary.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Dial_BackgroundRole</db:code></db:para>
</db:td>
<db:td><db:code>57</db:code></db:td>
<db:td>
<db:para>Defines the style's preferred background role (as <db:link xlink:href="qpalette.xml#ColorRole-enum">QPalette::ColorRole</db:link>) for a dial widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ComboBox_LayoutDirection</db:code></db:para>
</db:td>
<db:td><db:code>58</db:code></db:td>
<db:td>
<db:para>The layout direction for the combo box. By default it should be the same as indicated by the <db:link xlink:href="qstyleoption.xml#direction-var">QStyleOption::direction</db:link> variable.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ItemView_EllipsisLocation</db:code></db:para>
</db:td>
<db:td><db:code>59</db:code></db:td>
<db:td>
<db:para>The location where ellipses should be added for item text that is too long to fit in an view item.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ItemView_ShowDecorationSelected</db:code></db:para>
</db:td>
<db:td><db:code>60</db:code></db:td>
<db:td>
<db:para>When an item in an item view is selected, also highlight the branch or other decoration.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ItemView_ActivateItemOnSingleClick</db:code></db:para>
</db:td>
<db:td><db:code>61</db:code></db:td>
<db:td>
<db:para>Emit the activated signal when the user single clicks on an item in an item in an item view. Otherwise the signal is emitted when the user double clicks on an item.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Slider_AbsoluteSetButtons</db:code></db:para>
</db:td>
<db:td><db:code>64</db:code></db:td>
<db:td>
<db:para>Which mouse buttons cause a slider to set the value to the position clicked on.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Slider_PageSetButtons</db:code></db:para>
</db:td>
<db:td><db:code>65</db:code></db:td>
<db:td>
<db:para>Which mouse buttons cause a slider to page step the value.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_TabBar_ElideMode</db:code></db:para>
</db:td>
<db:td><db:code>67</db:code></db:td>
<db:td>
<db:para>The default eliding style for a tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_DialogButtonLayout</db:code></db:para>
</db:td>
<db:td><db:code>68</db:code></db:td>
<db:td>
<db:para>Controls how buttons are laid out in a <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>, returns a <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">QDialogButtonBox::ButtonLayout</db:link> enum.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_WizardStyle</db:code></db:para>
</db:td>
<db:td><db:code>78</db:code></db:td>
<db:td>
<db:para>Controls the look and feel of a <db:link xlink:href="qwizard.xml">QWizard</db:link>. Returns a <db:link xlink:href="qwizard.xml#WizardStyle-enum">QWizard::WizardStyle</db:link> enum.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_FormLayoutWrapPolicy</db:code></db:para>
</db:td>
<db:td><db:code>85</db:code></db:td>
<db:td>
<db:para>Provides a default for how rows are wrapped in a <db:link xlink:href="qformlayout.xml">QFormLayout</db:link>. Returns a <db:link xlink:href="qformlayout.xml#RowWrapPolicy-enum">QFormLayout::RowWrapPolicy</db:link> enum.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_FormLayoutFieldGrowthPolicy</db:code></db:para>
</db:td>
<db:td><db:code>88</db:code></db:td>
<db:td>
<db:para>Provides a default for how fields can grow in a <db:link xlink:href="qformlayout.xml">QFormLayout</db:link>. Returns a <db:link xlink:href="qformlayout.xml#FieldGrowthPolicy-enum">QFormLayout::FieldGrowthPolicy</db:link> enum.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_FormLayoutFormAlignment</db:code></db:para>
</db:td>
<db:td><db:code>89</db:code></db:td>
<db:td>
<db:para>Provides a default for how a <db:link xlink:href="qformlayout.xml">QFormLayout</db:link> aligns its contents within the available space. Returns a <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::Alignment</db:link> enum.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_FormLayoutLabelAlignment</db:code></db:para>
</db:td>
<db:td><db:code>90</db:code></db:td>
<db:td>
<db:para>Provides a default for how a <db:link xlink:href="qformlayout.xml">QFormLayout</db:link> aligns labels within the available space. Returns a <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::Alignment</db:link> enum.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ItemView_ArrowKeysNavigateIntoChildren</db:code></db:para>
</db:td>
<db:td><db:code>79</db:code></db:td>
<db:td>
<db:para>Controls whether the tree view will select the first child when it is exapanded and the right arrow key is pressed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ComboBox_PopupFrameStyle</db:code></db:para>
</db:td>
<db:td><db:code>69</db:code></db:td>
<db:td>
<db:para>The frame style used when drawing a combobox popup menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_DialogButtonBox_ButtonsHaveIcons</db:code></db:para>
</db:td>
<db:td><db:code>71</db:code></db:td>
<db:td>
<db:para>Indicates whether or not StandardButtons in <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link> should have icons or not.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ItemView_MovementWithoutUpdatingSelection</db:code></db:para>
</db:td>
<db:td><db:code>74</db:code></db:td>
<db:td>
<db:para>The item view is able to indicate a current item without changing the selection.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ToolTip_Mask</db:code></db:para>
</db:td>
<db:td><db:code>75</db:code></db:td>
<db:td>
<db:para>The mask of a tool tip.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_FocusFrame_AboveWidget</db:code></db:para>
</db:td>
<db:td><db:code>76</db:code></db:td>
<db:td>
<db:para>The FocusFrame is stacked above the widget that it is &quot;focusing on&quot;.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_TextControl_FocusIndicatorTextCharFormat</db:code></db:para>
</db:td>
<db:td><db:code>77</db:code></db:td>
<db:td>
<db:para>Specifies the text format used to highlight focused anchors in rich text documents displayed for example in <db:link xlink:href="qtextbrowser.xml">QTextBrowser</db:link>. The format has to be a <db:link xlink:href="qtextcharformat.xml">QTextCharFormat</db:link> returned in the variant of the <db:link xlink:href="qstylehintreturnvariant.xml">QStyleHintReturnVariant</db:link> return value. The <db:link xlink:href="qtextformat.xml#Property-enum">QTextFormat::OutlinePen</db:link> property is used for the outline and <db:link xlink:href="qtextformat.xml#Property-enum">QTextFormat::BackgroundBrush</db:link> for the background of the highlighted area.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_FlashTriggeredItem</db:code></db:para>
</db:td>
<db:td><db:code>81</db:code></db:td>
<db:td>
<db:para>Flash triggered item.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_FadeOutOnHide</db:code></db:para>
</db:td>
<db:td><db:code>82</db:code></db:td>
<db:td>
<db:para>Fade out the menu instead of hiding it immediately.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_TabWidget_DefaultTabPosition</db:code></db:para>
</db:td>
<db:td><db:code>86</db:code></db:td>
<db:td>
<db:para>Default position of the tab bar in a tab widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ToolBar_Movable</db:code></db:para>
</db:td>
<db:td><db:code>87</db:code></db:td>
<db:td>
<db:para>Determines if the tool bar is movable by default.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ItemView_PaintAlternatingRowColorsForEmptyArea</db:code></db:para>
</db:td>
<db:td><db:code>84</db:code></db:td>
<db:td>
<db:para>Whether <db:link xlink:href="qtreeview.xml">QTreeView</db:link> paints alternating row colors for the area that does not have any items.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_Mask</db:code></db:para>
</db:td>
<db:td><db:code>80</db:code></db:td>
<db:td>
<db:para>The mask for a popup menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ItemView_DrawDelegateFrame</db:code></db:para>
</db:td>
<db:td><db:code>91</db:code></db:td>
<db:td>
<db:para>Determines if there should be a frame for a delegate widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_TabBar_CloseButtonPosition</db:code></db:para>
</db:td>
<db:td><db:code>92</db:code></db:td>
<db:td>
<db:para>Determines the position of the close button on a tab in a tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_DockWidget_ButtonsHaveFrame</db:code></db:para>
</db:td>
<db:td><db:code>93</db:code></db:td>
<db:td>
<db:para>Determines if dockwidget buttons should have frames. Default is true.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ToolButtonStyle</db:code></db:para>
</db:td>
<db:td><db:code>94</db:code></db:td>
<db:td>
<db:para>Determines the default system style for tool buttons that uses <db:link xlink:href="qt.xml#ToolButtonStyle-enum">Qt::ToolButtonFollowStyle</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_RequestSoftwareInputPanel</db:code></db:para>
</db:td>
<db:td><db:code>95</db:code></db:td>
<db:td>
<db:para>Determines when a software input panel should be requested by input widgets. Returns an enum of type <db:link xlink:href="qstyle.xml#RequestSoftwareInputPanel-enum">QStyle::RequestSoftwareInputPanel</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ScrollBar_Transient</db:code></db:para>
</db:td>
<db:td><db:code>96</db:code></db:td>
<db:td>
<db:para>Determines if the style supports transient scroll bars. Transient scroll bars appear when the content is scrolled and disappear when they are no longer needed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Menu_SupportsSections</db:code></db:para>
</db:td>
<db:td><db:code>97</db:code></db:td>
<db:td>
<db:para>Determines if the style displays sections in menus or treat them as plain separators. Sections are separators with a text and icon hint.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ToolTip_WakeUpDelay</db:code></db:para>
</db:td>
<db:td><db:code>98</db:code></db:td>
<db:td>
<db:para>Determines the delay before a tooltip is shown, in milliseconds.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ToolTip_FallAsleepDelay</db:code></db:para>
</db:td>
<db:td><db:code>99</db:code></db:td>
<db:td>
<db:para>Determines the delay (in milliseconds) before a new wake time is needed when a tooltip is shown (notice: shown, not hidden). When a new wake isn't needed, a user-requested tooltip will be shown nearly instantly.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Widget_Animate</db:code></db:para>
</db:td>
<db:td><db:code>100</db:code></db:td>
<db:td>
<db:para>Deprecated. Use <db:link xlink:href="">SH_Widget_Animation_Duration</db:link> instead.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Splitter_OpaqueResize</db:code></db:para>
</db:td>
<db:td><db:code>101</db:code></db:td>
<db:td>
<db:para>Determines if widgets are resized dynamically (opaquely) while interactively moving the splitter. This enum value was introduced in Qt 5.2.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_TabBar_ChangeCurrentDelay</db:code></db:para>
</db:td>
<db:td><db:code>104</db:code></db:td>
<db:td>
<db:para>Determines the delay before the current tab is changed while dragging over the tabbar, in milliseconds. This enum value has been introduced in Qt 5.4</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ItemView_ScrollMode</db:code></db:para>
</db:td>
<db:td><db:code>111</db:code></db:td>
<db:td>
<db:para>The default vertical and horizontal scroll mode as specified by the style. Can be overridden with <db:link xlink:href="qabstractitemview.xml#verticalScrollMode-prop">QAbstractItemView::setVerticalScrollMode</db:link>() and <db:link xlink:href="qabstractitemview.xml#horizontalScrollMode-prop">QAbstractItemView::setHorizontalScrollMode</db:link>(). This enum value has been introduced in Qt 5.7.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_TitleBar_ShowToolTipsOnButtons</db:code></db:para>
</db:td>
<db:td><db:code>112</db:code></db:td>
<db:td>
<db:para>Determines if tool tips are shown on window title bar buttons. The Mac style, for example, sets this to false. This enum value has been introduced in Qt 5.10.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Widget_Animation_Duration</db:code></db:para>
</db:td>
<db:td><db:code>113</db:code></db:td>
<db:td>
<db:para>Determines how much an animation should last (in ms). A value equal to zero means that the animations will be disabled. This enum value has been introduced in Qt 5.10.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_ComboBox_AllowWheelScrolling</db:code></db:para>
</db:td>
<db:td><db:code>114</db:code></db:td>
<db:td>
<db:para>Determines if the mouse wheel can be used to scroll inside a <db:link xlink:href="qcombobox.xml">QComboBox</db:link>. This is on by default in all styles except the Mac style. This enum value has been introduced in Qt 5.10.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_SpinBox_ButtonsInsideFrame</db:code></db:para>
</db:td>
<db:td><db:code>115</db:code></db:td>
<db:td>
<db:para>Determines if the spin box buttons are inside the line edit frame. This enum value has been introduced in Qt 5.11.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_SpinBox_StepModifier</db:code></db:para>
</db:td>
<db:td><db:code>116</db:code></db:td>
<db:td>
<db:para>Determines which <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::KeyboardModifier</db:link> increases the step rate of <db:link xlink:href="qabstractspinbox.xml">QAbstractSpinBox</db:link>. Possible values are <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::NoModifier</db:link>, <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::ControlModifier</db:link> (default) or <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::ShiftModifier</db:link>. <db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::NoModifier</db:link> disables this feature. This enum value has been introduced in Qt 5.12.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_TabBar_AllowWheelScrolling</db:code></db:para>
</db:td>
<db:td><db:code>117</db:code></db:td>
<db:td>
<db:para>Determines if the mouse wheel can be used to cycle through the tabs of a <db:link xlink:href="qtabbar.xml">QTabBar</db:link>. This enum value has been introduced in Qt 6.1.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SH_Table_AlwaysDrawLeftTopGridLines</db:code></db:para>
</db:td>
<db:td><db:code>118</db:code></db:td>
<db:td>
<db:para>Determines if the far left and top grid lines are drawn in a table or not when the header is hidden. Defaults to false. This enum value has been introduced in Qt 6.3.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#styleHint">styleHint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="SubControl-enum">
<db:title>enum QStyle::SubControl</db:title>
<db:bridgehead renderas="sect2">flags QStyle::SubControls</db:bridgehead>
<db:enumsynopsis>
<db:enumname>SubControl</db:enumname>
<db:enumitem>
<db:enumidentifier>SC_None</db:enumidentifier>
<db:enumvalue>0x00000000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ScrollBarAddLine</db:enumidentifier>
<db:enumvalue>0x00000001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ScrollBarSubLine</db:enumidentifier>
<db:enumvalue>0x00000002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ScrollBarAddPage</db:enumidentifier>
<db:enumvalue>0x00000004</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ScrollBarSubPage</db:enumidentifier>
<db:enumvalue>0x00000008</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ScrollBarFirst</db:enumidentifier>
<db:enumvalue>0x00000010</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ScrollBarLast</db:enumidentifier>
<db:enumvalue>0x00000020</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ScrollBarSlider</db:enumidentifier>
<db:enumvalue>0x00000040</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ScrollBarGroove</db:enumidentifier>
<db:enumvalue>0x00000080</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_SpinBoxUp</db:enumidentifier>
<db:enumvalue>0x00000001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_SpinBoxDown</db:enumidentifier>
<db:enumvalue>0x00000002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_SpinBoxFrame</db:enumidentifier>
<db:enumvalue>0x00000004</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_SpinBoxEditField</db:enumidentifier>
<db:enumvalue>0x00000008</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ComboBoxFrame</db:enumidentifier>
<db:enumvalue>0x00000001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ComboBoxEditField</db:enumidentifier>
<db:enumvalue>0x00000002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ComboBoxArrow</db:enumidentifier>
<db:enumvalue>0x00000004</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ComboBoxListBoxPopup</db:enumidentifier>
<db:enumvalue>0x00000008</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_SliderGroove</db:enumidentifier>
<db:enumvalue>0x00000001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_SliderHandle</db:enumidentifier>
<db:enumvalue>0x00000002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_SliderTickmarks</db:enumidentifier>
<db:enumvalue>0x00000004</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ToolButton</db:enumidentifier>
<db:enumvalue>0x00000001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_ToolButtonMenu</db:enumidentifier>
<db:enumvalue>0x00000002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_TitleBarSysMenu</db:enumidentifier>
<db:enumvalue>0x00000001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_TitleBarMinButton</db:enumidentifier>
<db:enumvalue>0x00000002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_TitleBarMaxButton</db:enumidentifier>
<db:enumvalue>0x00000004</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_TitleBarCloseButton</db:enumidentifier>
<db:enumvalue>0x00000008</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_TitleBarNormalButton</db:enumidentifier>
<db:enumvalue>0x00000010</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_TitleBarShadeButton</db:enumidentifier>
<db:enumvalue>0x00000020</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_TitleBarUnshadeButton</db:enumidentifier>
<db:enumvalue>0x00000040</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_TitleBarContextHelpButton</db:enumidentifier>
<db:enumvalue>0x00000080</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_TitleBarLabel</db:enumidentifier>
<db:enumvalue>0x00000100</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_DialGroove</db:enumidentifier>
<db:enumvalue>0x00000001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_DialHandle</db:enumidentifier>
<db:enumvalue>0x00000002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_DialTickmarks</db:enumidentifier>
<db:enumvalue>0x00000004</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_GroupBoxCheckBox</db:enumidentifier>
<db:enumvalue>0x00000001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_GroupBoxLabel</db:enumidentifier>
<db:enumvalue>0x00000002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_GroupBoxContents</db:enumidentifier>
<db:enumvalue>0x00000004</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_GroupBoxFrame</db:enumidentifier>
<db:enumvalue>0x00000008</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_MdiMinButton</db:enumidentifier>
<db:enumvalue>0x00000001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_MdiNormalButton</db:enumidentifier>
<db:enumvalue>0x00000002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_MdiCloseButton</db:enumidentifier>
<db:enumvalue>0x00000004</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_CustomBase</db:enumidentifier>
<db:enumvalue>0xf0000000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SC_All</db:enumidentifier>
<db:enumvalue>0xffffffff</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:typedefsynopsis>
<db:typedefname>QStyle::SubControls</db:typedefname>
</db:typedefsynopsis>
<db:para>This enum describes the available sub controls. A subcontrol is a control element within a complex control (<db:link xlink:href="qstyle.xml#ComplexControl-enum">ComplexControl</db:link>).</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_None</db:code></db:para>
</db:td>
<db:td><db:code>0x00000000</db:code></db:td>
<db:td>
<db:para>Special value that matches no other sub control.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ScrollBarAddLine</db:code></db:para>
</db:td>
<db:td><db:code>0x00000001</db:code></db:td>
<db:td>
<db:para>Scroll bar add line (i.e., down/right arrow); see also <db:link xlink:href="qscrollbar.xml">QScrollBar</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ScrollBarSubLine</db:code></db:para>
</db:td>
<db:td><db:code>0x00000002</db:code></db:td>
<db:td>
<db:para>Scroll bar sub line (i.e., up/left arrow).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ScrollBarAddPage</db:code></db:para>
</db:td>
<db:td><db:code>0x00000004</db:code></db:td>
<db:td>
<db:para>Scroll bar add page (i.e., page down).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ScrollBarSubPage</db:code></db:para>
</db:td>
<db:td><db:code>0x00000008</db:code></db:td>
<db:td>
<db:para>Scroll bar sub page (i.e., page up).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ScrollBarFirst</db:code></db:para>
</db:td>
<db:td><db:code>0x00000010</db:code></db:td>
<db:td>
<db:para>Scroll bar first line (i.e., home).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ScrollBarLast</db:code></db:para>
</db:td>
<db:td><db:code>0x00000020</db:code></db:td>
<db:td>
<db:para>Scroll bar last line (i.e., end).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ScrollBarSlider</db:code></db:para>
</db:td>
<db:td><db:code>0x00000040</db:code></db:td>
<db:td>
<db:para>Scroll bar slider handle.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ScrollBarGroove</db:code></db:para>
</db:td>
<db:td><db:code>0x00000080</db:code></db:td>
<db:td>
<db:para>Special sub-control which contains the area in which the slider handle may move.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_SpinBoxUp</db:code></db:para>
</db:td>
<db:td><db:code>0x00000001</db:code></db:td>
<db:td>
<db:para>Spin widget up/increase; see also <db:link xlink:href="qspinbox.xml">QSpinBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_SpinBoxDown</db:code></db:para>
</db:td>
<db:td><db:code>0x00000002</db:code></db:td>
<db:td>
<db:para>Spin widget down/decrease.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_SpinBoxFrame</db:code></db:para>
</db:td>
<db:td><db:code>0x00000004</db:code></db:td>
<db:td>
<db:para>Spin widget frame.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_SpinBoxEditField</db:code></db:para>
</db:td>
<db:td><db:code>0x00000008</db:code></db:td>
<db:td>
<db:para>Spin widget edit field.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ComboBoxEditField</db:code></db:para>
</db:td>
<db:td><db:code>0x00000002</db:code></db:td>
<db:td>
<db:para>Combobox edit field; see also <db:link xlink:href="qcombobox.xml">QComboBox</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ComboBoxArrow</db:code></db:para>
</db:td>
<db:td><db:code>0x00000004</db:code></db:td>
<db:td>
<db:para>Combobox arrow button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ComboBoxFrame</db:code></db:para>
</db:td>
<db:td><db:code>0x00000001</db:code></db:td>
<db:td>
<db:para>Combobox frame.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ComboBoxListBoxPopup</db:code></db:para>
</db:td>
<db:td><db:code>0x00000008</db:code></db:td>
<db:td>
<db:para>The reference rectangle for the combobox popup. Used to calculate the position of the popup.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_SliderGroove</db:code></db:para>
</db:td>
<db:td><db:code>0x00000001</db:code></db:td>
<db:td>
<db:para>Special sub-control which contains the area in which the slider handle may move.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_SliderHandle</db:code></db:para>
</db:td>
<db:td><db:code>0x00000002</db:code></db:td>
<db:td>
<db:para>Slider handle.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_SliderTickmarks</db:code></db:para>
</db:td>
<db:td><db:code>0x00000004</db:code></db:td>
<db:td>
<db:para>Slider tickmarks.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ToolButton</db:code></db:para>
</db:td>
<db:td><db:code>0x00000001</db:code></db:td>
<db:td>
<db:para>Tool button (see also <db:link xlink:href="qtoolbutton.xml">QToolButton</db:link>).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_ToolButtonMenu</db:code></db:para>
</db:td>
<db:td><db:code>0x00000002</db:code></db:td>
<db:td>
<db:para>Sub-control for opening a popup menu in a tool button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_TitleBarSysMenu</db:code></db:para>
</db:td>
<db:td><db:code>0x00000001</db:code></db:td>
<db:td>
<db:para>System menu button (i.e., restore, close, etc.).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_TitleBarMinButton</db:code></db:para>
</db:td>
<db:td><db:code>0x00000002</db:code></db:td>
<db:td>
<db:para>Minimize button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_TitleBarMaxButton</db:code></db:para>
</db:td>
<db:td><db:code>0x00000004</db:code></db:td>
<db:td>
<db:para>Maximize button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_TitleBarCloseButton</db:code></db:para>
</db:td>
<db:td><db:code>0x00000008</db:code></db:td>
<db:td>
<db:para>Close button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_TitleBarLabel</db:code></db:para>
</db:td>
<db:td><db:code>0x00000100</db:code></db:td>
<db:td>
<db:para>Window title label.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_TitleBarNormalButton</db:code></db:para>
</db:td>
<db:td><db:code>0x00000010</db:code></db:td>
<db:td>
<db:para>Normal (restore) button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_TitleBarShadeButton</db:code></db:para>
</db:td>
<db:td><db:code>0x00000020</db:code></db:td>
<db:td>
<db:para>Shade button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_TitleBarUnshadeButton</db:code></db:para>
</db:td>
<db:td><db:code>0x00000040</db:code></db:td>
<db:td>
<db:para>Unshade button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_TitleBarContextHelpButton</db:code></db:para>
</db:td>
<db:td><db:code>0x00000080</db:code></db:td>
<db:td>
<db:para>Context Help button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_DialHandle</db:code></db:para>
</db:td>
<db:td><db:code>0x00000002</db:code></db:td>
<db:td>
<db:para>The handle of the dial (i.e. what you use to control the dial).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_DialGroove</db:code></db:para>
</db:td>
<db:td><db:code>0x00000001</db:code></db:td>
<db:td>
<db:para>The groove for the dial.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_DialTickmarks</db:code></db:para>
</db:td>
<db:td><db:code>0x00000004</db:code></db:td>
<db:td>
<db:para>The tickmarks for the dial.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_GroupBoxFrame</db:code></db:para>
</db:td>
<db:td><db:code>0x00000008</db:code></db:td>
<db:td>
<db:para>The frame of a group box.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_GroupBoxLabel</db:code></db:para>
</db:td>
<db:td><db:code>0x00000002</db:code></db:td>
<db:td>
<db:para>The title of a group box.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_GroupBoxCheckBox</db:code></db:para>
</db:td>
<db:td><db:code>0x00000001</db:code></db:td>
<db:td>
<db:para>The optional check box of a group box.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_GroupBoxContents</db:code></db:para>
</db:td>
<db:td><db:code>0x00000004</db:code></db:td>
<db:td>
<db:para>The group box contents.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_MdiNormalButton</db:code></db:para>
</db:td>
<db:td><db:code>0x00000002</db:code></db:td>
<db:td>
<db:para>The normal button for a MDI subwindow in the menu bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_MdiMinButton</db:code></db:para>
</db:td>
<db:td><db:code>0x00000001</db:code></db:td>
<db:td>
<db:para>The minimize button for a MDI subwindow in the menu bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_MdiCloseButton</db:code></db:para>
</db:td>
<db:td><db:code>0x00000004</db:code></db:td>
<db:td>
<db:para>The close button for a MDI subwindow in the menu bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SC_All</db:code></db:para>
</db:td>
<db:td><db:code>0xffffffff</db:code></db:td>
<db:td>
<db:para>Special value that matches all sub-controls.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>SubControls</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;SubControl&gt;. </db:code>It stores an OR combination of <db:code>SubControl</db:code> values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#ComplexControl-enum">ComplexControl</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="SubElement-enum">
<db:title>enum QStyle::SubElement</db:title>
<db:enumsynopsis>
<db:enumname>SubElement</db:enumname>
<db:enumitem>
<db:enumidentifier>SE_PushButtonContents</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_PushButtonFocusRect</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_CheckBoxIndicator</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_CheckBoxContents</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_CheckBoxFocusRect</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_CheckBoxClickRect</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_RadioButtonIndicator</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_RadioButtonContents</db:enumidentifier>
<db:enumvalue>7</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_RadioButtonFocusRect</db:enumidentifier>
<db:enumvalue>8</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_RadioButtonClickRect</db:enumidentifier>
<db:enumvalue>9</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ComboBoxFocusRect</db:enumidentifier>
<db:enumvalue>10</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_SliderFocusRect</db:enumidentifier>
<db:enumvalue>11</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ProgressBarGroove</db:enumidentifier>
<db:enumvalue>12</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ProgressBarContents</db:enumidentifier>
<db:enumvalue>13</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ProgressBarLabel</db:enumidentifier>
<db:enumvalue>14</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ToolBoxTabContents</db:enumidentifier>
<db:enumvalue>15</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_HeaderLabel</db:enumidentifier>
<db:enumvalue>16</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_HeaderArrow</db:enumidentifier>
<db:enumvalue>17</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabWidgetTabBar</db:enumidentifier>
<db:enumvalue>18</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabWidgetTabPane</db:enumidentifier>
<db:enumvalue>19</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabWidgetTabContents</db:enumidentifier>
<db:enumvalue>20</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabWidgetLeftCorner</db:enumidentifier>
<db:enumvalue>21</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabWidgetRightCorner</db:enumidentifier>
<db:enumvalue>22</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ItemViewItemCheckIndicator</db:enumidentifier>
<db:enumvalue>23</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabBarTearIndicator</db:enumidentifier>
<db:enumvalue>24</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabBarTearIndicatorLeft</db:enumidentifier>
<db:enumvalue>SE_TabBarTearIndicator</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TreeViewDisclosureItem</db:enumidentifier>
<db:enumvalue>25</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_LineEditContents</db:enumidentifier>
<db:enumvalue>26</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_FrameContents</db:enumidentifier>
<db:enumvalue>27</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_DockWidgetCloseButton</db:enumidentifier>
<db:enumvalue>28</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_DockWidgetFloatButton</db:enumidentifier>
<db:enumvalue>29</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_DockWidgetTitleBarText</db:enumidentifier>
<db:enumvalue>30</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_DockWidgetIcon</db:enumidentifier>
<db:enumvalue>31</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_CheckBoxLayoutItem</db:enumidentifier>
<db:enumvalue>32</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ComboBoxLayoutItem</db:enumidentifier>
<db:enumvalue>33</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_DateTimeEditLayoutItem</db:enumidentifier>
<db:enumvalue>34</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_LabelLayoutItem</db:enumidentifier>
<db:enumvalue>35</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ProgressBarLayoutItem</db:enumidentifier>
<db:enumvalue>36</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_PushButtonLayoutItem</db:enumidentifier>
<db:enumvalue>37</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_RadioButtonLayoutItem</db:enumidentifier>
<db:enumvalue>38</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_SliderLayoutItem</db:enumidentifier>
<db:enumvalue>39</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_SpinBoxLayoutItem</db:enumidentifier>
<db:enumvalue>40</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ToolButtonLayoutItem</db:enumidentifier>
<db:enumvalue>41</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_FrameLayoutItem</db:enumidentifier>
<db:enumvalue>42</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_GroupBoxLayoutItem</db:enumidentifier>
<db:enumvalue>43</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabWidgetLayoutItem</db:enumidentifier>
<db:enumvalue>44</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ItemViewItemDecoration</db:enumidentifier>
<db:enumvalue>45</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ItemViewItemText</db:enumidentifier>
<db:enumvalue>46</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ItemViewItemFocusRect</db:enumidentifier>
<db:enumvalue>47</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabBarTabLeftButton</db:enumidentifier>
<db:enumvalue>48</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabBarTabRightButton</db:enumidentifier>
<db:enumvalue>49</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabBarTabText</db:enumidentifier>
<db:enumvalue>50</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ShapedFrameContents</db:enumidentifier>
<db:enumvalue>51</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_ToolBarHandle</db:enumidentifier>
<db:enumvalue>52</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabBarScrollLeftButton</db:enumidentifier>
<db:enumvalue>53</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabBarScrollRightButton</db:enumidentifier>
<db:enumvalue>54</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_TabBarTearIndicatorRight</db:enumidentifier>
<db:enumvalue>55</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_PushButtonBevel</db:enumidentifier>
<db:enumvalue>56</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SE_CustomBase</db:enumidentifier>
<db:enumvalue>0xf0000000</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum represents a sub-area of a widget. Style implementations use these areas to draw the different parts of a widget.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_PushButtonContents</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Area containing the label (icon with text or pixmap).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_PushButtonFocusRect</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Area for the focus rect (usually larger than the contents rect).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_PushButtonLayoutItem</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td>
<db:para>Area that counts for the parent layout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_PushButtonBevel</db:code></db:para>
</db:td>
<db:td><db:code>56</db:code></db:td>
<db:td>
<db:para>[since 5.15] Area used for the bevel of the button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_CheckBoxIndicator</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Area for the state indicator (e.g., check mark).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_CheckBoxContents</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Area for the label (text or pixmap).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_CheckBoxFocusRect</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>Area for the focus indicator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_CheckBoxClickRect</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>Clickable area, defaults to SE_CheckBoxFocusRect.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_CheckBoxLayoutItem</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
<db:td>
<db:para>Area that counts for the parent layout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_DateTimeEditLayoutItem</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
<db:td>
<db:para>Area that counts for the parent layout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_RadioButtonIndicator</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>Area for the state indicator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_RadioButtonContents</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>Area for the label.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_RadioButtonFocusRect</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>Area for the focus indicator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_RadioButtonClickRect</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>Clickable area, defaults to SE_RadioButtonFocusRect.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_RadioButtonLayoutItem</db:code></db:para>
</db:td>
<db:td><db:code>38</db:code></db:td>
<db:td>
<db:para>Area that counts for the parent layout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ComboBoxFocusRect</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>Area for the focus indicator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_SliderFocusRect</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>Area for the focus indicator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_SliderLayoutItem</db:code></db:para>
</db:td>
<db:td><db:code>39</db:code></db:td>
<db:td>
<db:para>Area that counts for the parent layout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_SpinBoxLayoutItem</db:code></db:para>
</db:td>
<db:td><db:code>40</db:code></db:td>
<db:td>
<db:para>Area that counts for the parent layout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ProgressBarGroove</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>Area for the groove.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ProgressBarContents</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>Area for the progress indicator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ProgressBarLabel</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>Area for the text label.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ProgressBarLayoutItem</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
<db:td>
<db:para>Area that counts for the parent layout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_FrameContents</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
<db:td>
<db:para>Area for a frame's contents.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ShapedFrameContents</db:code></db:para>
</db:td>
<db:td><db:code>51</db:code></db:td>
<db:td>
<db:para>Area for a frame's contents using the shape in <db:link xlink:href="qstyleoptionframe.xml">QStyleOptionFrame</db:link>; see <db:link xlink:href="qframe.xml">QFrame</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_FrameLayoutItem</db:code></db:para>
</db:td>
<db:td><db:code>42</db:code></db:td>
<db:td>
<db:para>Area that counts for the parent layout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_HeaderArrow</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>Area for the sort indicator for a header.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_HeaderLabel</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>Area for the label in a header.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_LabelLayoutItem</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
<db:td>
<db:para>Area that counts for the parent layout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_LineEditContents</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
<db:td>
<db:para>Area for a line edit's contents.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabWidgetLeftCorner</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>Area for the left corner widget in a tab widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabWidgetRightCorner</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>Area for the right corner widget in a tab widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabWidgetTabBar</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td>
<db:para>Area for the tab bar widget in a tab widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabWidgetTabContents</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>Area for the contents of the tab widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabWidgetTabPane</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>Area for the pane of a tab widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabWidgetLayoutItem</db:code></db:para>
</db:td>
<db:td><db:code>44</db:code></db:td>
<db:td>
<db:para>Area that counts for the parent layout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ToolBoxTabContents</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>Area for a toolbox tab's icon and label.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ToolButtonLayoutItem</db:code></db:para>
</db:td>
<db:td><db:code>41</db:code></db:td>
<db:td>
<db:para>Area that counts for the parent layout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ItemViewItemCheckIndicator</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>Area for a view item's check mark.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabBarTearIndicator</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td>
<db:para>Deprecated. Use SE_TabBarTearIndicatorLeft instead.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabBarTearIndicatorLeft</db:code></db:para>
</db:td>
<db:td><db:code>SE_TabBarTearIndicator</db:code></db:td>
<db:td>
<db:para>Area for the tear indicator on the left side of a tab bar with scroll arrows.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabBarTearIndicatorRight</db:code></db:para>
</db:td>
<db:td><db:code>55</db:code></db:td>
<db:td>
<db:para>Area for the tear indicator on the right side of a tab bar with scroll arrows.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabBarScrollLeftButton</db:code></db:para>
</db:td>
<db:td><db:code>53</db:code></db:td>
<db:td>
<db:para>Area for the scroll left button on a tab bar with scroll buttons.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabBarScrollRightButton</db:code></db:para>
</db:td>
<db:td><db:code>54</db:code></db:td>
<db:td>
<db:para>Area for the scroll right button on a tab bar with scroll buttons.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TreeViewDisclosureItem</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
<db:td>
<db:para>Area for the actual disclosure item in a tree branch.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_GroupBoxLayoutItem</db:code></db:para>
</db:td>
<db:td><db:code>43</db:code></db:td>
<db:td>
<db:para>Area that counts for the parent layout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_CustomBase</db:code></db:para>
</db:td>
<db:td><db:code>0xf0000000</db:code></db:td>
<db:td>
<db:para>Base value for custom sub-elements. Custom values must be greater than this value.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_DockWidgetFloatButton</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
<db:td>
<db:para>The float button of a dock widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_DockWidgetTitleBarText</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
<db:td>
<db:para>The text bounds of the dock widgets title.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_DockWidgetCloseButton</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
<db:td>
<db:para>The close button of a dock widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_DockWidgetIcon</db:code></db:para>
</db:td>
<db:td><db:code>31</db:code></db:td>
<db:td>
<db:para>The icon of a dock widget.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ComboBoxLayoutItem</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td>
<db:para>Area that counts for the parent layout.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ItemViewItemDecoration</db:code></db:para>
</db:td>
<db:td><db:code>45</db:code></db:td>
<db:td>
<db:para>Area for a view item's decoration (icon).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ItemViewItemText</db:code></db:para>
</db:td>
<db:td><db:code>46</db:code></db:td>
<db:td>
<db:para>Area for a view item's text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ItemViewItemFocusRect</db:code></db:para>
</db:td>
<db:td><db:code>47</db:code></db:td>
<db:td>
<db:para>Area for a view item's focus rect.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabBarTabLeftButton</db:code></db:para>
</db:td>
<db:td><db:code>48</db:code></db:td>
<db:td>
<db:para>Area for a widget on the left side of a tab in a tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabBarTabRightButton</db:code></db:para>
</db:td>
<db:td><db:code>49</db:code></db:td>
<db:td>
<db:para>Area for a widget on the right side of a tab in a tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_TabBarTabText</db:code></db:para>
</db:td>
<db:td><db:code>50</db:code></db:td>
<db:td>
<db:para>Area for the text on a tab in a tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyle.xml">QStyle</db:link></db:emphasis>::SE_ToolBarHandle</db:code></db:para>
</db:td>
<db:td><db:code>52</db:code></db:td>
<db:td>
<db:para>Area for the handle of a tool bar.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#subElementRect">subElementRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QStyle-1">
<db:title>QStyle::QStyle()</db:title>
<db:constructorsynopsis>
<db:methodname>QStyle</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QStyle()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a style object.</db:para>
</db:section>
<db:section xml:id="dtor.QStyle">
<db:title>[virtual] QStyle::~QStyle()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QStyle</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QStyle()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the style object.</db:para>
</db:section>
<db:section xml:id="alignedRect">
<db:title>[static] QRect QStyle::alignedRect(Qt::LayoutDirection <db:emphasis>direction</db:emphasis>, Qt::Alignment <db:emphasis>alignment</db:emphasis>, const QSize &amp;<db:emphasis>size</db:emphasis>, const QRect &amp;<db:emphasis>rectangle</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QRect</db:type>
<db:methodname>alignedRect</db:methodname>
<db:methodparam>
<db:type>Qt::LayoutDirection</db:type>
<db:parameter>direction</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>Qt::Alignment</db:type>
<db:parameter>alignment</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QSize &amp;</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>rectangle</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRect alignedRect(Qt::LayoutDirection direction, Qt::Alignment alignment, const QSize &amp;size, const QRect &amp;rectangle)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a new rectangle of the specified <db:code role="parameter">size</db:code> that is aligned to the given <db:code role="parameter">rectangle</db:code> according to the specified <db:code role="parameter">alignment</db:code> and <db:code role="parameter">direction</db:code>.</db:para>
</db:section>
<db:section xml:id="combinedLayoutSpacing">
<db:title>int QStyle::combinedLayoutSpacing(QSizePolicy::ControlTypes <db:emphasis>controls1</db:emphasis>, QSizePolicy::ControlTypes <db:emphasis>controls2</db:emphasis>, Qt::Orientation <db:emphasis>orientation</db:emphasis>, QStyleOption *<db:emphasis>option</db:emphasis> = nullptr, QWidget *<db:emphasis>widget</db:emphasis> = nullptr) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>combinedLayoutSpacing</db:methodname>
<db:methodparam>
<db:type>QSizePolicy::ControlTypes</db:type>
<db:parameter>controls1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QSizePolicy::ControlTypes</db:type>
<db:parameter>controls2</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>Qt::Orientation</db:type>
<db:parameter>orientation</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QStyleOption *</db:type>
<db:parameter>option</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QWidget *</db:type>
<db:parameter>widget</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int combinedLayoutSpacing(QSizePolicy::ControlTypes controls1, QSizePolicy::ControlTypes controls2, Qt::Orientation orientation, QStyleOption *option, QWidget *widget) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the spacing that should be used between <db:code role="parameter">controls1</db:code> and <db:code role="parameter">controls2</db:code> in a layout. <db:code role="parameter">orientation</db:code> specifies whether the controls are laid out side by side or stacked vertically. The <db:code role="parameter">option</db:code> parameter can be used to pass extra information about the parent widget. The <db:code role="parameter">widget</db:code> parameter is optional and can also be used if <db:code role="parameter">option</db:code> is <db:code>nullptr</db:code>.</db:para>
<db:para><db:code role="parameter">controls1</db:code> and <db:code role="parameter">controls2</db:code> are OR-combination of zero or more <db:link xlink:href="qsizepolicy.xml#ControlType-enum">control types</db:link>.</db:para>
<db:para>This function is called by the layout system. It is used only if <db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_LayoutHorizontalSpacing</db:link> or <db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_LayoutVerticalSpacing</db:link> returns a negative value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#layoutSpacing">layoutSpacing</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="drawComplexControl">
<db:title>[pure virtual] void QStyle::drawComplexControl(QStyle::ComplexControl <db:emphasis>control</db:emphasis>, const QStyleOptionComplex *<db:emphasis>option</db:emphasis>, QPainter *<db:emphasis>painter</db:emphasis>, const QWidget *<db:emphasis>widget</db:emphasis> = nullptr) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:void/>
<db:methodname>drawComplexControl</db:methodname>
<db:methodparam>
<db:type>QStyle::ComplexControl</db:type>
<db:parameter>control</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QStyleOptionComplex *</db:type>
<db:parameter>option</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QPainter *</db:type>
<db:parameter>painter</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QWidget *</db:type>
<db:parameter>widget</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void drawComplexControl(QStyle::ComplexControl control, const QStyleOptionComplex *option, QPainter *painter, const QWidget *widget) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Draws the given <db:code role="parameter">control</db:code> using the provided <db:code role="parameter">painter</db:code> with the style options specified by <db:code role="parameter">option</db:code>.</db:para>
<db:para>The <db:code role="parameter">widget</db:code> argument is optional and can be used as aid in drawing the control.</db:para>
<db:para>The <db:code role="parameter">option</db:code> parameter is a pointer to a <db:link xlink:href="qstyleoptioncomplex.xml">QStyleOptionComplex</db:link> object that can be cast to the correct subclass using the <db:link xlink:href="qstylehintreturn.xml#qstyleoption_cast-1">qstyleoption_cast</db:link>() function. Note that the <db:code>rect</db:code> member of the specified <db:code role="parameter">option</db:code> must be in logical coordinates. Reimplementations of this function should use <db:link xlink:href="qstyle.xml#visualRect">visualRect</db:link>() to change the logical coordinates into screen coordinates before calling the <db:link xlink:href="qstyle.xml#drawPrimitive">drawPrimitive</db:link>() or <db:link xlink:href="qstyle.xml#drawControl">drawControl</db:link>() function.</db:para>
<db:para>The table below is listing the complex control elements and their associated style option subclass. The style options contain all the parameters required to draw the controls, including <db:link xlink:href="qstyleoption.xml#state-var">QStyleOption::state</db:link> which holds the <db:link xlink:href="qstyle.xml#StateFlag-enum">style flags</db:link> that are used when drawing. The table also describes which flags that are set when casting the given <db:code role="parameter">option</db:code> to the appropriate subclass.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Complex Control</db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="qstyleoptioncomplex.xml">QStyleOptionComplex</db:link> Subclass</db:para>
</db:th>
<db:th>
<db:para>Style Flag</db:para>
</db:th>
<db:th>
<db:para>Remark</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyle.xml#ComplexControl-enum">CC_SpinBox</db:link></db:para>
</db:td>
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyleoptionspinbox.xml">QStyleOptionSpinBox</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the spin box is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_HasFocus</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the spin box has input focus.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyle.xml#ComplexControl-enum">CC_ComboBox</db:link></db:para>
</db:td>
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyleoptioncombobox.xml">QStyleOptionComboBox</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the combobox is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_HasFocus</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the combobox has input focus.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyle.xml#ComplexControl-enum">CC_ScrollBar</db:link></db:para>
</db:td>
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the scroll bar is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_HasFocus</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the scroll bar has input focus.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyle.xml#ComplexControl-enum">CC_Slider</db:link></db:para>
</db:td>
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the slider is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_HasFocus</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the slider has input focus.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyle.xml#ComplexControl-enum">CC_Dial</db:link></db:para>
</db:td>
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the dial is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_HasFocus</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the dial has input focus.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="6">
<db:para><db:link xlink:href="qstyle.xml#ComplexControl-enum">CC_ToolButton</db:link></db:para>
</db:td>
<db:td rowspan="6">
<db:para><db:link xlink:href="qstyleoptiontoolbutton.xml">QStyleOptionToolButton</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the tool button is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_HasFocus</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the tool button has input focus.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_DownArrow</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the tool button is down (i.e., a mouse button or the space bar is pressed).</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_On</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the tool button is a toggle button and is toggled on.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_AutoRaise</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the tool button has auto-raise enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Raised</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is not down, not on, and doesn't contain the mouse when auto-raise is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ComplexControl-enum">CC_TitleBar</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontitlebar.xml">QStyleOptionTitleBar</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the title bar is enabled.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#drawPrimitive">drawPrimitive</db:link>()</db:member>
<db:member><db:link xlink:href="qstyle.xml#drawControl">drawControl</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="drawControl">
<db:title>[pure virtual] void QStyle::drawControl(QStyle::ControlElement <db:emphasis>element</db:emphasis>, const QStyleOption *<db:emphasis>option</db:emphasis>, QPainter *<db:emphasis>painter</db:emphasis>, const QWidget *<db:emphasis>widget</db:emphasis> = nullptr) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:void/>
<db:methodname>drawControl</db:methodname>
<db:methodparam>
<db:type>QStyle::ControlElement</db:type>
<db:parameter>element</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QStyleOption *</db:type>
<db:parameter>option</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QPainter *</db:type>
<db:parameter>painter</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QWidget *</db:type>
<db:parameter>widget</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void drawControl(QStyle::ControlElement element, const QStyleOption *option, QPainter *painter, const QWidget *widget) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Draws the given <db:code role="parameter">element</db:code> with the provided <db:code role="parameter">painter</db:code> with the style options specified by <db:code role="parameter">option</db:code>.</db:para>
<db:para>The <db:code role="parameter">widget</db:code> argument is optional and can be used as aid in drawing the control. The <db:code role="parameter">option</db:code> parameter is a pointer to a <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> object that can be cast to the correct subclass using the <db:link xlink:href="qstylehintreturn.xml#qstyleoption_cast-1">qstyleoption_cast</db:link>() function.</db:para>
<db:para>The table below is listing the control elements and their associated style option subclass. The style options contain all the parameters required to draw the controls, including <db:link xlink:href="qstyleoption.xml#state-var">QStyleOption::state</db:link> which holds the style flags that are used when drawing. The table also describes which flags that are set when casting the given option to the appropriate subclass.</db:para>
<db:para>Note that if a control element is not listed here, it is because it uses a plain <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> object.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Control Element</db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> Subclass</db:para>
</db:th>
<db:th>
<db:para>Style Flag</db:para>
</db:th>
<db:th>
<db:para>Remark</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td rowspan="5">
<db:para><db:link xlink:href="qstyle.xml#ControlElement-enum">CE_MenuItem</db:link>, <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_MenuBarItem</db:link></db:para>
</db:td>
<db:td rowspan="5">
<db:para><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Selected</db:link></db:para>
</db:td>
<db:td>
<db:para>The menu item is currently selected item.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>The item is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_DownArrow</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that a scroll down arrow should be drawn.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_UpArrow</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that a scroll up arrow should be drawn</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_HasFocus</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the menu bar has input focus.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="5">
<db:para><db:link xlink:href="qstyle.xml#ControlElement-enum">CE_PushButton</db:link>, <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_PushButtonBevel</db:link>, <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_PushButtonLabel</db:link></db:para>
</db:td>
<db:td rowspan="5">
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_HasFocus</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button has input focus.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Raised</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is not down, not on and not flat.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_On</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is a toggle button and is toggled on.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Sunken</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is down (i.e., the mouse button or the space bar is pressed on the button).</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="6">
<db:para><db:link xlink:href="qstyle.xml#ControlElement-enum">CE_RadioButton</db:link>, <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_RadioButtonLabel</db:link>, <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_CheckBox</db:link>, <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_CheckBoxLabel</db:link></db:para>
</db:td>
<db:td rowspan="6">
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_HasFocus</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button has input focus.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_On</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is checked.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Off</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is not checked.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_NoChange</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is in the NoChange state.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Sunken</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is down (i.e., the mouse button or the space bar is pressed on the button).</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyle.xml#ControlElement-enum">CE_ProgressBarContents</db:link>, <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_ProgressBarLabel</db:link>, <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_ProgressBarGroove</db:link></db:para>
</db:td>
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyleoptionprogressbar.xml">QStyleOptionProgressBar</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the progress bar is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_HasFocus</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the progress bar has input focus.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ControlElement-enum">CE_Header</db:link>, <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_HeaderSection</db:link>, <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_HeaderLabel</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionheader.xml">QStyleOptionHeader</db:link></db:para>
</db:td>
<db:td>
</db:td>
<db:td>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="3">
<db:para><db:link xlink:href="qstyle.xml#ControlElement-enum">CE_TabBarTab</db:link>, <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_TabBarTabShape</db:link>, <db:link xlink:href="qstyle.xml#ControlElement-enum">CE_TabBarTabLabel</db:link></db:para>
</db:td>
<db:td rowspan="3">
<db:para><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the tab bar is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Selected</db:link></db:para>
</db:td>
<db:td>
<db:para>The tab bar is the currently selected tab bar.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_HasFocus</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the tab bar tab has input focus.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="7">
<db:para><db:link xlink:href="qstyle.xml#ControlElement-enum">CE_ToolButtonLabel</db:link></db:para>
</db:td>
<db:td rowspan="7">
<db:para><db:link xlink:href="qstyleoptiontoolbutton.xml">QStyleOptionToolButton</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the tool button is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_HasFocus</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the tool button has input focus.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Sunken</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the tool button is down (i.e., a mouse button or the space bar is pressed).</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_On</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the tool button is a toggle button and is toggled on.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_AutoRaise</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the tool button has auto-raise enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_MouseOver</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the mouse pointer is over the tool button.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Raised</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is not down and is not on.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ControlElement-enum">CE_ToolBoxTab</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontoolbox.xml">QStyleOptionToolBox</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Selected</db:link></db:para>
</db:td>
<db:td>
<db:para>The tab is the currently selected tab.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="3">
<db:para><db:link xlink:href="qstyle.xml#ControlElement-enum">CE_HeaderSection</db:link></db:para>
</db:td>
<db:td rowspan="3">
<db:para><db:link xlink:href="qstyleoptionheader.xml">QStyleOptionHeader</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Sunken</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that the section is pressed.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_UpArrow</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that the sort indicator should be pointing up.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_DownArrow</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that the sort indicator should be pointing down.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#drawPrimitive">drawPrimitive</db:link>()</db:member>
<db:member><db:link xlink:href="qstyle.xml#drawComplexControl">drawComplexControl</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="drawItemPixmap">
<db:title>[virtual] void QStyle::drawItemPixmap(QPainter *<db:emphasis>painter</db:emphasis>, const QRect &amp;<db:emphasis>rectangle</db:emphasis>, int <db:emphasis>alignment</db:emphasis>, const QPixmap &amp;<db:emphasis>pixmap</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:void/>
<db:methodname>drawItemPixmap</db:methodname>
<db:methodparam>
<db:type>QPainter *</db:type>
<db:parameter>painter</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>rectangle</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>alignment</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPixmap &amp;</db:type>
<db:parameter>pixmap</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void drawItemPixmap(QPainter *painter, const QRect &amp;rectangle, int alignment, const QPixmap &amp;pixmap) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Draws the given <db:code role="parameter">pixmap</db:code> in the specified <db:code role="parameter">rectangle</db:code>, according to the specified <db:code role="parameter">alignment</db:code>, using the provided <db:code role="parameter">painter</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#drawItemText">drawItemText</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="drawItemText">
<db:title>[virtual] void QStyle::drawItemText(QPainter *<db:emphasis>painter</db:emphasis>, const QRect &amp;<db:emphasis>rectangle</db:emphasis>, int <db:emphasis>alignment</db:emphasis>, const QPalette &amp;<db:emphasis>palette</db:emphasis>, bool <db:emphasis>enabled</db:emphasis>, const QString &amp;<db:emphasis>text</db:emphasis>, QPalette::ColorRole <db:emphasis>textRole</db:emphasis> = QPalette::NoRole) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:void/>
<db:methodname>drawItemText</db:methodname>
<db:methodparam>
<db:type>QPainter *</db:type>
<db:parameter>painter</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>rectangle</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>alignment</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPalette &amp;</db:type>
<db:parameter>palette</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>enabled</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>text</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QPalette::ColorRole</db:type>
<db:parameter>textRole</db:parameter>
<db:initializer>QPalette::NoRole</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void drawItemText(QPainter *painter, const QRect &amp;rectangle, int alignment, const QPalette &amp;palette, bool enabled, const QString &amp;text, QPalette::ColorRole textRole) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Draws the given <db:code role="parameter">text</db:code> in the specified <db:code role="parameter">rectangle</db:code> using the provided <db:code role="parameter">painter</db:code> and <db:code role="parameter">palette</db:code>.</db:para>
<db:para>The text is drawn using the painter's pen, and aligned and wrapped according to the specified <db:code role="parameter">alignment</db:code>. If an explicit <db:code role="parameter">textRole</db:code> is specified, the text is drawn using the <db:code role="parameter">palette</db:code>'s color for the given role. The <db:code role="parameter">enabled</db:code> parameter indicates whether or not the item is enabled; when reimplementing this function, the <db:code role="parameter">enabled</db:code> parameter should influence how the item is drawn.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::Alignment</db:link></db:member>
<db:member><db:link xlink:href="qstyle.xml#drawItemPixmap">drawItemPixmap</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="drawPrimitive">
<db:title>[pure virtual] void QStyle::drawPrimitive(QStyle::PrimitiveElement <db:emphasis>element</db:emphasis>, const QStyleOption *<db:emphasis>option</db:emphasis>, QPainter *<db:emphasis>painter</db:emphasis>, const QWidget *<db:emphasis>widget</db:emphasis> = nullptr) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:void/>
<db:methodname>drawPrimitive</db:methodname>
<db:methodparam>
<db:type>QStyle::PrimitiveElement</db:type>
<db:parameter>element</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QStyleOption *</db:type>
<db:parameter>option</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QPainter *</db:type>
<db:parameter>painter</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QWidget *</db:type>
<db:parameter>widget</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void drawPrimitive(QStyle::PrimitiveElement element, const QStyleOption *option, QPainter *painter, const QWidget *widget) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Draws the given primitive <db:code role="parameter">element</db:code> with the provided <db:code role="parameter">painter</db:code> using the style options specified by <db:code role="parameter">option</db:code>.</db:para>
<db:para>The <db:code role="parameter">widget</db:code> argument is optional and may contain a widget that may aid in drawing the primitive element.</db:para>
<db:para>The table below is listing the primitive elements and their associated style option subclasses. The style options contain all the parameters required to draw the elements, including <db:link xlink:href="qstyleoption.xml#state-var">QStyleOption::state</db:link> which holds the style flags that are used when drawing. The table also describes which flags that are set when casting the given option to the appropriate subclass.</db:para>
<db:para>Note that if a primitive element is not listed here, it is because it uses a plain <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> object.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Primitive Element</db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> Subclass</db:para>
</db:th>
<db:th>
<db:para>Style Flag</db:para>
</db:th>
<db:th>
<db:para>Remark</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_FrameFocusRect</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionfocusrect.xml">QStyleOptionFocusRect</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_FocusAtBorder</db:link></db:para>
</db:td>
<db:td>
<db:para>Whether the focus is is at the border or inside the widget.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorCheckBox</db:link></db:para>
</db:td>
<db:td rowspan="2">
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_NoChange</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates a &quot;tri-state&quot; checkbox.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_On</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates the indicator is checked.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorRadioButton</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_On</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that a radio button is selected.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_NoChange</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates a &quot;tri-state&quot; controller.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates the controller is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="4">
<db:para><db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorBranch</db:link></db:para>
</db:td>
<db:td rowspan="4">
<db:para><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Children</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that the control for expanding the tree to show child items, should be drawn.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Item</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that a horizontal branch (to show a child item), should be drawn.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Open</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that the tree branch is expanded.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Sibling</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that a vertical line (to show a sibling item), should be drawn.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorHeaderArrow</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionheader.xml">QStyleOptionHeader</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_UpArrow</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that the arrow should be drawn up; otherwise it should be down.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_FrameGroupBox</db:link>, <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_Frame</db:link>, <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_FrameLineEdit</db:link>, <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_FrameMenu</db:link>, <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_FrameDockWidget</db:link>, <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_FrameWindow</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionframe.xml">QStyleOptionFrame</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Sunken</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that the Frame should be sunken.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorToolBarHandle</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Horizontal</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that the window handle is horizontal instead of vertical.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorSpinPlus</db:link>, <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorSpinMinus</db:link>, <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorSpinUp</db:link>, <db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_IndicatorSpinDown</db:link>,</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionspinbox.xml">QStyleOptionSpinBox</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Sunken</db:link></db:para>
</db:td>
<db:td>
<db:para>Indicates that the button is pressed.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="5">
<db:para><db:link xlink:href="qstyle.xml#PrimitiveElement-enum">PE_PanelButtonCommand</db:link></db:para>
</db:td>
<db:td rowspan="5">
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Enabled</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is enabled.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_HasFocus</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button has input focus.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Raised</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is not down, not on and not flat.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_On</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is a toggle button and is toggled on.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#StateFlag-enum">State_Sunken</db:link></db:para>
</db:td>
<db:td>
<db:para>Set if the button is down (i.e., the mouse button or the space bar is pressed on the button).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#drawComplexControl">drawComplexControl</db:link>()</db:member>
<db:member><db:link xlink:href="qstyle.xml#drawControl">drawControl</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="generatedIconPixmap">
<db:title>[pure virtual] QPixmap QStyle::generatedIconPixmap(QIcon::Mode <db:emphasis>iconMode</db:emphasis>, const QPixmap &amp;<db:emphasis>pixmap</db:emphasis>, const QStyleOption *<db:emphasis>option</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QPixmap</db:type>
<db:methodname>generatedIconPixmap</db:methodname>
<db:methodparam>
<db:type>QIcon::Mode</db:type>
<db:parameter>iconMode</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPixmap &amp;</db:type>
<db:parameter>pixmap</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QStyleOption *</db:type>
<db:parameter>option</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPixmap generatedIconPixmap(QIcon::Mode iconMode, const QPixmap &amp;pixmap, const QStyleOption *option) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a copy of the given <db:code role="parameter">pixmap</db:code>, styled to conform to the specified <db:code role="parameter">iconMode</db:code> and taking into account the palette specified by <db:code role="parameter">option</db:code>.</db:para>
<db:para>The <db:code role="parameter">option</db:code> parameter can pass extra information, but it must contain a palette.</db:para>
<db:para>Note that not all pixmaps will conform, in which case the returned pixmap is a plain copy.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml">QIcon</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hitTestComplexControl">
<db:title>[pure virtual] QStyle::SubControl QStyle::hitTestComplexControl(QStyle::ComplexControl <db:emphasis>control</db:emphasis>, const QStyleOptionComplex *<db:emphasis>option</db:emphasis>, const QPoint &amp;<db:emphasis>position</db:emphasis>, const QWidget *<db:emphasis>widget</db:emphasis> = nullptr) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QStyle::SubControl</db:type>
<db:methodname>hitTestComplexControl</db:methodname>
<db:methodparam>
<db:type>QStyle::ComplexControl</db:type>
<db:parameter>control</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QStyleOptionComplex *</db:type>
<db:parameter>option</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPoint &amp;</db:type>
<db:parameter>position</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QWidget *</db:type>
<db:parameter>widget</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QStyle::SubControl hitTestComplexControl(QStyle::ComplexControl control, const QStyleOptionComplex *option, const QPoint &amp;position, const QWidget *widget) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the sub control at the given <db:code role="parameter">position</db:code> in the given complex <db:code role="parameter">control</db:code> (with the style options specified by <db:code role="parameter">option</db:code>).</db:para>
<db:para>Note that the <db:code role="parameter">position</db:code> is expressed in screen coordinates.</db:para>
<db:para>The <db:code role="parameter">option</db:code> argument is a pointer to a <db:link xlink:href="qstyleoptioncomplex.xml">QStyleOptionComplex</db:link> object (or one of its subclasses). The object can be cast to the appropriate type using the <db:link xlink:href="qstylehintreturn.xml#qstyleoption_cast-1">qstyleoption_cast</db:link>() function. See <db:link xlink:href="qstyle.xml#drawComplexControl">drawComplexControl</db:link>() for details. The <db:code role="parameter">widget</db:code> argument is optional and can contain additional information for the function.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#drawComplexControl">drawComplexControl</db:link>()</db:member>
<db:member><db:link xlink:href="qstyle.xml#subControlRect">subControlRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="itemPixmapRect">
<db:title>[virtual] QRect QStyle::itemPixmapRect(const QRect &amp;<db:emphasis>rectangle</db:emphasis>, int <db:emphasis>alignment</db:emphasis>, const QPixmap &amp;<db:emphasis>pixmap</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QRect</db:type>
<db:methodname>itemPixmapRect</db:methodname>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>rectangle</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>alignment</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPixmap &amp;</db:type>
<db:parameter>pixmap</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRect itemPixmapRect(const QRect &amp;rectangle, int alignment, const QPixmap &amp;pixmap) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the area within the given <db:code role="parameter">rectangle</db:code> in which to draw the specified <db:code role="parameter">pixmap</db:code> according to the defined <db:code role="parameter">alignment</db:code>.</db:para>
</db:section>
<db:section xml:id="itemTextRect">
<db:title>[virtual] QRect QStyle::itemTextRect(const QFontMetrics &amp;<db:emphasis>metrics</db:emphasis>, const QRect &amp;<db:emphasis>rectangle</db:emphasis>, int <db:emphasis>alignment</db:emphasis>, bool <db:emphasis>enabled</db:emphasis>, const QString &amp;<db:emphasis>text</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QRect</db:type>
<db:methodname>itemTextRect</db:methodname>
<db:methodparam>
<db:type>const QFontMetrics &amp;</db:type>
<db:parameter>metrics</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>rectangle</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>alignment</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>enabled</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>text</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRect itemTextRect(const QFontMetrics &amp;metrics, const QRect &amp;rectangle, int alignment, bool enabled, const QString &amp;text) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the area within the given <db:code role="parameter">rectangle</db:code> in which to draw the provided <db:code role="parameter">text</db:code> according to the specified font <db:code role="parameter">metrics</db:code> and <db:code role="parameter">alignment</db:code>. The <db:code role="parameter">enabled</db:code> parameter indicates whether or not the associated item is enabled.</db:para>
<db:para>If the given <db:code role="parameter">rectangle</db:code> is larger than the area needed to render the <db:code role="parameter">text</db:code>, the rectangle that is returned will be offset within <db:code role="parameter">rectangle</db:code> according to the specified <db:code role="parameter">alignment</db:code>. For example, if <db:code role="parameter">alignment</db:code> is <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignCenter</db:link>, the returned rectangle will be centered within <db:code role="parameter">rectangle</db:code>. If the given <db:code role="parameter">rectangle</db:code> is smaller than the area needed, the returned rectangle will be the smallest rectangle large enough to render the <db:code role="parameter">text</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::Alignment</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="layoutSpacing">
<db:title>[pure virtual] int QStyle::layoutSpacing(QSizePolicy::ControlType <db:emphasis>control1</db:emphasis>, QSizePolicy::ControlType <db:emphasis>control2</db:emphasis>, Qt::Orientation <db:emphasis>orientation</db:emphasis>, const QStyleOption *<db:emphasis>option</db:emphasis> = nullptr, const QWidget *<db:emphasis>widget</db:emphasis> = nullptr) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>layoutSpacing</db:methodname>
<db:methodparam>
<db:type>QSizePolicy::ControlType</db:type>
<db:parameter>control1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QSizePolicy::ControlType</db:type>
<db:parameter>control2</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>Qt::Orientation</db:type>
<db:parameter>orientation</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QStyleOption *</db:type>
<db:parameter>option</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>const QWidget *</db:type>
<db:parameter>widget</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int layoutSpacing(QSizePolicy::ControlType control1, QSizePolicy::ControlType control2, Qt::Orientation orientation, const QStyleOption *option, const QWidget *widget) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the spacing that should be used between <db:code role="parameter">control1</db:code> and <db:code role="parameter">control2</db:code> in a layout. <db:code role="parameter">orientation</db:code> specifies whether the controls are laid out side by side or stacked vertically. The <db:code role="parameter">option</db:code> parameter can be used to pass extra information about the parent widget. The <db:code role="parameter">widget</db:code> parameter is optional and can also be used if <db:code role="parameter">option</db:code> is <db:code>nullptr</db:code>.</db:para>
<db:para>This function is called by the layout system. It is used only if <db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_LayoutHorizontalSpacing</db:link> or <db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_LayoutVerticalSpacing</db:link> returns a negative value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#combinedLayoutSpacing">combinedLayoutSpacing</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="name">
<db:title>[since 6.1] QString QStyle::name() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>name</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString name() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the name of the style.</db:para>
<db:para>This value can be used to create a style with <db:link xlink:href="qstylefactory.xml#create">QStyleFactory::create</db:link>().</db:para>
<db:para>This function was introduced in Qt 6.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstylefactory.xml#create">QStyleFactory::create</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pixelMetric">
<db:title>[pure virtual] int QStyle::pixelMetric(QStyle::PixelMetric <db:emphasis>metric</db:emphasis>, const QStyleOption *<db:emphasis>option</db:emphasis> = nullptr, const QWidget *<db:emphasis>widget</db:emphasis> = nullptr) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>pixelMetric</db:methodname>
<db:methodparam>
<db:type>QStyle::PixelMetric</db:type>
<db:parameter>metric</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QStyleOption *</db:type>
<db:parameter>option</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>const QWidget *</db:type>
<db:parameter>widget</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int pixelMetric(QStyle::PixelMetric metric, const QStyleOption *option, const QWidget *widget) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the value of the given pixel <db:code role="parameter">metric</db:code>.</db:para>
<db:para>The specified <db:code role="parameter">option</db:code> and <db:code role="parameter">widget</db:code> can be used for calculating the metric. In general, the <db:code role="parameter">widget</db:code> argument is not used. The <db:code role="parameter">option</db:code> can be cast to the appropriate type using the <db:link xlink:href="qstylehintreturn.xml#qstyleoption_cast-1">qstyleoption_cast</db:link>() function. Note that the <db:code role="parameter">option</db:code> may be zero even for PixelMetrics that can make use of it. See the table below for the appropriate <db:code role="parameter">option</db:code> casts:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Pixel Metric</db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> Subclass</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_SliderControlThickness</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_SliderLength</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_SliderTickmarkOffset</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_SliderSpaceAvailable</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_ScrollBarExtent</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_TabBarTabOverlap</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_TabBarTabHSpace</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_TabBarTabVSpace</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_TabBarBaseHeight</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#PixelMetric-enum">PM_TabBarBaseOverlap</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Some pixel metrics are called from widgets and some are only called internally by the style. If the metric is not called by a widget, it is the discretion of the style author to make use of it. For some styles, this may not be appropriate.</db:para>
</db:section>
<db:section xml:id="polish">
<db:title>[virtual] void QStyle::polish(QWidget *<db:emphasis>widget</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>polish</db:methodname>
<db:methodparam>
<db:type>QWidget *</db:type>
<db:parameter>widget</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void polish(QWidget *widget)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Initializes the appearance of the given <db:code role="parameter">widget</db:code>.</db:para>
<db:para>This function is called for every widget at some point after it has been fully created but just <db:emphasis>before</db:emphasis> it is shown for the very first time.</db:para>
<db:para>Note that the default implementation does nothing. Reasonable actions in this function might be to call the QWidget::setBackgroundMode() function for the widget. Do not use the function to set, for example, the geometry. Reimplementing this function provides a back-door through which the appearance of a widget can be changed, but with Qt's style engine it is rarely necessary to implement this function; reimplement <db:link xlink:href="qstyle.xml#drawItemPixmap">drawItemPixmap</db:link>(), <db:link xlink:href="qstyle.xml#drawItemText">drawItemText</db:link>(), <db:link xlink:href="qstyle.xml#drawPrimitive">drawPrimitive</db:link>(), etc. instead.</db:para>
<db:para>The <db:link xlink:href="qobject.xml#inherits">QWidget::inherits</db:link>() function may provide enough information to allow class-specific customizations. But because new <db:link xlink:href="qstyle.xml">QStyle</db:link> subclasses are expected to work reasonably with all current and <db:emphasis>future</db:emphasis> widgets, limited use of hard-coded customization is recommended.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#unpolish">unpolish</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="polish-1">
<db:title>[virtual] void QStyle::polish(QApplication *<db:emphasis>application</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>polish</db:methodname>
<db:methodparam>
<db:type>QApplication *</db:type>
<db:parameter>application</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">void polish(QApplication *application)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This is an overloaded function.</db:para>
<db:para>Late initialization of the given <db:code role="parameter">application</db:code> object.</db:para>
</db:section>
<db:section xml:id="polish-2">
<db:title>[virtual] void QStyle::polish(QPalette &amp;<db:emphasis>palette</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>polish</db:methodname>
<db:methodparam>
<db:type>QPalette &amp;</db:type>
<db:parameter>palette</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">void polish(QPalette &amp;palette)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This is an overloaded function.</db:para>
<db:para>Changes the <db:code role="parameter">palette</db:code> according to style specific requirements for color palettes (if any).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpalette.xml">QPalette</db:link></db:member>
<db:member><db:link xlink:href="qapplication.xml#setPalette">QApplication::setPalette</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="proxy">
<db:title>const QStyle *QStyle::proxy() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>const QStyle *</db:type>
<db:methodname>proxy</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">const QStyle * proxy() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function returns the current proxy for this style. By default most styles will return themselves. However when a proxy style is in use, it will allow the style to call back into its proxy.</db:para>
</db:section>
<db:section xml:id="sizeFromContents">
<db:title>[pure virtual] QSize QStyle::sizeFromContents(QStyle::ContentsType <db:emphasis>type</db:emphasis>, const QStyleOption *<db:emphasis>option</db:emphasis>, const QSize &amp;<db:emphasis>contentsSize</db:emphasis>, const QWidget *<db:emphasis>widget</db:emphasis> = nullptr) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QSize</db:type>
<db:methodname>sizeFromContents</db:methodname>
<db:methodparam>
<db:type>QStyle::ContentsType</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QStyleOption *</db:type>
<db:parameter>option</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QSize &amp;</db:type>
<db:parameter>contentsSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QWidget *</db:type>
<db:parameter>widget</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QSize sizeFromContents(QStyle::ContentsType type, const QStyleOption *option, const QSize &amp;contentsSize, const QWidget *widget) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the size of the element described by the specified <db:code role="parameter">option</db:code> and <db:code role="parameter">type</db:code>, based on the provided <db:code role="parameter">contentsSize</db:code>.</db:para>
<db:para>The <db:code role="parameter">option</db:code> argument is a pointer to a <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> or one of its subclasses. The <db:code role="parameter">option</db:code> can be cast to the appropriate type using the <db:link xlink:href="qstylehintreturn.xml#qstyleoption_cast-1">qstyleoption_cast</db:link>() function. The <db:code role="parameter">widget</db:code> is an optional argument and can contain extra information used for calculating the size.</db:para>
<db:para>See the table below for the appropriate <db:code role="parameter">option</db:code> casts:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Contents Type</db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> Subclass</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_CheckBox</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_ComboBox</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptioncombobox.xml">QStyleOptionComboBox</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_GroupBox</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiongroupbox.xml">QStyleOptionGroupBox</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_HeaderSection</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionheader.xml">QStyleOptionHeader</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_ItemViewItem</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_LineEdit</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionframe.xml">QStyleOptionFrame</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_MdiControls</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptioncomplex.xml">QStyleOptionComplex</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_Menu</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_MenuItem</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_MenuBar</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_MenuBarItem</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_ProgressBar</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionprogressbar.xml">QStyleOptionProgressBar</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_PushButton</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_RadioButton</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_ScrollBar</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_SizeGrip</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_Slider</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_SpinBox</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionspinbox.xml">QStyleOptionSpinBox</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_Splitter</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_TabBarTab</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_TabWidget</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontabwidgetframe.xml">QStyleOptionTabWidgetFrame</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#ContentsType-enum">CT_ToolButton</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontoolbutton.xml">QStyleOptionToolButton</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#ContentsType-enum">ContentsType</db:link></db:member>
<db:member><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sliderPositionFromValue">
<db:title>[static] int QStyle::sliderPositionFromValue(int <db:emphasis>min</db:emphasis>, int <db:emphasis>max</db:emphasis>, int <db:emphasis>logicalValue</db:emphasis>, int <db:emphasis>span</db:emphasis>, bool <db:emphasis>upsideDown</db:emphasis> = false)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>int</db:type>
<db:methodname>sliderPositionFromValue</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>min</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>max</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>logicalValue</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>span</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>upsideDown</db:parameter>
<db:initializer>false</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int sliderPositionFromValue(int min, int max, int logicalValue, int span, bool upsideDown)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Converts the given <db:code role="parameter">logicalValue</db:code> to a pixel position. The <db:code role="parameter">min</db:code> parameter maps to 0, <db:code role="parameter">max</db:code> maps to <db:code role="parameter">span</db:code> and other values are distributed evenly in-between.</db:para>
<db:para>This function can handle the entire integer range without overflow, providing that <db:code role="parameter">span</db:code> is less than 4096.</db:para>
<db:para>By default, this function assumes that the maximum value is on the right for horizontal items and on the bottom for vertical items. Set the <db:code role="parameter">upsideDown</db:code> parameter to true to reverse this behavior.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#sliderValueFromPosition">sliderValueFromPosition</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sliderValueFromPosition">
<db:title>[static] int QStyle::sliderValueFromPosition(int <db:emphasis>min</db:emphasis>, int <db:emphasis>max</db:emphasis>, int <db:emphasis>position</db:emphasis>, int <db:emphasis>span</db:emphasis>, bool <db:emphasis>upsideDown</db:emphasis> = false)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>int</db:type>
<db:methodname>sliderValueFromPosition</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>min</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>max</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>position</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>span</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>upsideDown</db:parameter>
<db:initializer>false</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int sliderValueFromPosition(int min, int max, int position, int span, bool upsideDown)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Converts the given pixel <db:code role="parameter">position</db:code> to a logical value. 0 maps to the <db:code role="parameter">min</db:code> parameter, <db:code role="parameter">span</db:code> maps to <db:code role="parameter">max</db:code> and other values are distributed evenly in-between.</db:para>
<db:para>This function can handle the entire integer range without overflow.</db:para>
<db:para>By default, this function assumes that the maximum value is on the right for horizontal items and on the bottom for vertical items. Set the <db:code role="parameter">upsideDown</db:code> parameter to true to reverse this behavior.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#sliderPositionFromValue">sliderPositionFromValue</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="standardIcon">
<db:title>[pure virtual] QIcon QStyle::standardIcon(QStyle::StandardPixmap <db:emphasis>standardIcon</db:emphasis>, const QStyleOption *<db:emphasis>option</db:emphasis> = nullptr, const QWidget *<db:emphasis>widget</db:emphasis> = nullptr) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QIcon</db:type>
<db:methodname>standardIcon</db:methodname>
<db:methodparam>
<db:type>QStyle::StandardPixmap</db:type>
<db:parameter>standardIcon</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QStyleOption *</db:type>
<db:parameter>option</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>const QWidget *</db:type>
<db:parameter>widget</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QIcon standardIcon(QStyle::StandardPixmap standardIcon, const QStyleOption *option, const QWidget *widget) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns an icon for the given <db:code role="parameter">standardIcon</db:code>.</db:para>
<db:para>The <db:code role="parameter">standardIcon</db:code> is a standard pixmap which can follow some existing GUI style or guideline. The <db:code role="parameter">option</db:code> argument can be used to pass extra information required when defining the appropriate icon. The <db:code role="parameter">widget</db:code> argument is optional and can also be used to aid the determination of the icon.</db:para>
</db:section>
<db:section xml:id="standardPalette">
<db:title>[virtual] QPalette QStyle::standardPalette() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QPalette</db:type>
<db:methodname>standardPalette</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPalette standardPalette() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the style's standard palette.</db:para>
<db:para>Note that on systems that support system colors, the style's standard palette is not used. In particular, the Windows Vista and Mac styles do not use the standard palette, but make use of native theme engines. With these styles, you should not set the palette with <db:link xlink:href="qapplication.xml#setPalette">QApplication::setPalette</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qapplication.xml#setPalette">QApplication::setPalette</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="styleHint">
<db:title>[pure virtual] int QStyle::styleHint(QStyle::StyleHint <db:emphasis>hint</db:emphasis>, const QStyleOption *<db:emphasis>option</db:emphasis> = nullptr, const QWidget *<db:emphasis>widget</db:emphasis> = nullptr, QStyleHintReturn *<db:emphasis>returnData</db:emphasis> = nullptr) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>styleHint</db:methodname>
<db:methodparam>
<db:type>QStyle::StyleHint</db:type>
<db:parameter>hint</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QStyleOption *</db:type>
<db:parameter>option</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>const QWidget *</db:type>
<db:parameter>widget</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QStyleHintReturn *</db:type>
<db:parameter>returnData</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int styleHint(QStyle::StyleHint hint, const QStyleOption *option, const QWidget *widget, QStyleHintReturn *returnData) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns an integer representing the specified style <db:code role="parameter">hint</db:code> for the given <db:code role="parameter">widget</db:code> described by the provided style <db:code role="parameter">option</db:code>.</db:para>
<db:para><db:code role="parameter">returnData</db:code> is used when the querying widget needs more detailed data than the integer that styleHint() returns. See the <db:link xlink:href="qstylehintreturn.xml">QStyleHintReturn</db:link> class description for details.</db:para>
</db:section>
<db:section xml:id="subControlRect">
<db:title>[pure virtual] QRect QStyle::subControlRect(QStyle::ComplexControl <db:emphasis>control</db:emphasis>, const QStyleOptionComplex *<db:emphasis>option</db:emphasis>, QStyle::SubControl <db:emphasis>subControl</db:emphasis>, const QWidget *<db:emphasis>widget</db:emphasis> = nullptr) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QRect</db:type>
<db:methodname>subControlRect</db:methodname>
<db:methodparam>
<db:type>QStyle::ComplexControl</db:type>
<db:parameter>control</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QStyleOptionComplex *</db:type>
<db:parameter>option</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QStyle::SubControl</db:type>
<db:parameter>subControl</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QWidget *</db:type>
<db:parameter>widget</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRect subControlRect(QStyle::ComplexControl control, const QStyleOptionComplex *option, QStyle::SubControl subControl, const QWidget *widget) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the rectangle containing the specified <db:code role="parameter">subControl</db:code> of the given complex <db:code role="parameter">control</db:code> (with the style specified by <db:code role="parameter">option</db:code>). The rectangle is defined in screen coordinates.</db:para>
<db:para>The <db:code role="parameter">option</db:code> argument is a pointer to <db:link xlink:href="qstyleoptioncomplex.xml">QStyleOptionComplex</db:link> or one of its subclasses, and can be cast to the appropriate type using the <db:link xlink:href="qstylehintreturn.xml#qstyleoption_cast-1">qstyleoption_cast</db:link>() function. See <db:link xlink:href="qstyle.xml#drawComplexControl">drawComplexControl</db:link>() for details. The <db:code role="parameter">widget</db:code> is optional and can contain additional information for the function.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#drawComplexControl">drawComplexControl</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="subElementRect">
<db:title>[pure virtual] QRect QStyle::subElementRect(QStyle::SubElement <db:emphasis>element</db:emphasis>, const QStyleOption *<db:emphasis>option</db:emphasis>, const QWidget *<db:emphasis>widget</db:emphasis> = nullptr) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QRect</db:type>
<db:methodname>subElementRect</db:methodname>
<db:methodparam>
<db:type>QStyle::SubElement</db:type>
<db:parameter>element</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QStyleOption *</db:type>
<db:parameter>option</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QWidget *</db:type>
<db:parameter>widget</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRect subElementRect(QStyle::SubElement element, const QStyleOption *option, const QWidget *widget) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the sub-area for the given <db:code role="parameter">element</db:code> as described in the provided style <db:code role="parameter">option</db:code>. The returned rectangle is defined in screen coordinates.</db:para>
<db:para>The <db:code role="parameter">widget</db:code> argument is optional and can be used to aid determining the area. The <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> object can be cast to the appropriate type using the <db:link xlink:href="qstylehintreturn.xml#qstyleoption_cast-1">qstyleoption_cast</db:link>() function. See the table below for the appropriate <db:code role="parameter">option</db:code> casts:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Sub Element</db:para>
</db:th>
<db:th>
<db:para><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> Subclass</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#SubElement-enum">SE_PushButtonContents</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#SubElement-enum">SE_PushButtonFocusRect</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#SubElement-enum">SE_PushButtonBevel</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#SubElement-enum">SE_CheckBoxIndicator</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#SubElement-enum">SE_CheckBoxContents</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#SubElement-enum">SE_CheckBoxFocusRect</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#SubElement-enum">SE_RadioButtonIndicator</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#SubElement-enum">SE_RadioButtonContents</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#SubElement-enum">SE_RadioButtonFocusRect</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#SubElement-enum">SE_ComboBoxFocusRect</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptioncombobox.xml">QStyleOptionComboBox</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#SubElement-enum">SE_ProgressBarGroove</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionprogressbar.xml">QStyleOptionProgressBar</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#SubElement-enum">SE_ProgressBarContents</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionprogressbar.xml">QStyleOptionProgressBar</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qstyle.xml#SubElement-enum">SE_ProgressBarLabel</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionprogressbar.xml">QStyleOptionProgressBar</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="unpolish">
<db:title>[virtual] void QStyle::unpolish(QWidget *<db:emphasis>widget</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>unpolish</db:methodname>
<db:methodparam>
<db:type>QWidget *</db:type>
<db:parameter>widget</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void unpolish(QWidget *widget)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Uninitialize the given <db:code role="parameter">widget</db:code>'s appearance.</db:para>
<db:para>This function is the counterpart to <db:link xlink:href="qstyle.xml#polish">polish</db:link>(). It is called for every polished widget whenever the style is dynamically changed; the former style has to unpolish its settings before the new style can polish them again.</db:para>
<db:para>Note that unpolish() will only be called if the widget is destroyed. This can cause problems in some cases, e.g, if you remove a widget from the UI, cache it, and then reinsert it after the style has changed; some of Qt's classes cache their widgets.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#polish">polish</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="unpolish-1">
<db:title>[virtual] void QStyle::unpolish(QApplication *<db:emphasis>application</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>unpolish</db:methodname>
<db:methodparam>
<db:type>QApplication *</db:type>
<db:parameter>application</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">void unpolish(QApplication *application)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This is an overloaded function.</db:para>
<db:para>Uninitialize the given <db:code role="parameter">application</db:code>.</db:para>
</db:section>
<db:section xml:id="visualAlignment">
<db:title>[static] Qt::Alignment QStyle::visualAlignment(Qt::LayoutDirection <db:emphasis>direction</db:emphasis>, Qt::Alignment <db:emphasis>alignment</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>Qt::Alignment</db:type>
<db:methodname>visualAlignment</db:methodname>
<db:methodparam>
<db:type>Qt::LayoutDirection</db:type>
<db:parameter>direction</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>Qt::Alignment</db:type>
<db:parameter>alignment</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">Qt::Alignment visualAlignment(Qt::LayoutDirection direction, Qt::Alignment alignment)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Transforms an <db:code role="parameter">alignment</db:code> of <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignLeft</db:link> or <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignRight</db:link> without <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignAbsolute</db:link> into <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignLeft</db:link> or <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignRight</db:link> with <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignAbsolute</db:link> according to the layout <db:code role="parameter">direction</db:code>. The other alignment flags are left untouched.</db:para>
<db:para>If no horizontal alignment was specified, the function returns the default alignment for the given layout <db:code role="parameter">direction</db:code>.</db:para>
<db:para><db:link xlink:href="qwidget.xml#layoutDirection-prop">QWidget::layoutDirection</db:link></db:para>
</db:section>
<db:section xml:id="visualPos">
<db:title>[static] QPoint QStyle::visualPos(Qt::LayoutDirection <db:emphasis>direction</db:emphasis>, const QRect &amp;<db:emphasis>boundingRectangle</db:emphasis>, const QPoint &amp;<db:emphasis>logicalPosition</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QPoint</db:type>
<db:methodname>visualPos</db:methodname>
<db:methodparam>
<db:type>Qt::LayoutDirection</db:type>
<db:parameter>direction</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>boundingRectangle</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPoint &amp;</db:type>
<db:parameter>logicalPosition</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPoint visualPos(Qt::LayoutDirection direction, const QRect &amp;boundingRectangle, const QPoint &amp;logicalPosition)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the given <db:code role="parameter">logicalPosition</db:code> converted to screen coordinates based on the specified <db:code role="parameter">direction</db:code>. The <db:code role="parameter">boundingRectangle</db:code> is used when performing the translation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwidget.xml#layoutDirection-prop">QWidget::layoutDirection</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="visualRect">
<db:title>[static] QRect QStyle::visualRect(Qt::LayoutDirection <db:emphasis>direction</db:emphasis>, const QRect &amp;<db:emphasis>boundingRectangle</db:emphasis>, const QRect &amp;<db:emphasis>logicalRectangle</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QRect</db:type>
<db:methodname>visualRect</db:methodname>
<db:methodparam>
<db:type>Qt::LayoutDirection</db:type>
<db:parameter>direction</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>boundingRectangle</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>logicalRectangle</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRect visualRect(Qt::LayoutDirection direction, const QRect &amp;boundingRectangle, const QRect &amp;logicalRectangle)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the given <db:code role="parameter">logicalRectangle</db:code> converted to screen coordinates based on the specified <db:code role="parameter">direction</db:code>. The <db:code role="parameter">boundingRectangle</db:code> is used when performing the translation.</db:para>
<db:para>This function is provided to support right-to-left desktops, and is typically used in implementations of the <db:link xlink:href="qstyle.xml#subControlRect">subControlRect</db:link>() function.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwidget.xml#layoutDirection-prop">QWidget::layoutDirection</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for QStyle</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qstyle.xml">QStyle</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-member-function-documentation">
<db:title>Obsolete Member Function Documentation</db:title>
<db:section xml:id="standardPixmap">
<db:title>[pure virtual] QPixmap QStyle::standardPixmap(QStyle::StandardPixmap <db:emphasis>standardPixmap</db:emphasis>, const QStyleOption *<db:emphasis>option</db:emphasis> = nullptr, const QWidget *<db:emphasis>widget</db:emphasis> = nullptr) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QPixmap</db:type>
<db:methodname>standardPixmap</db:methodname>
<db:methodparam>
<db:type>QStyle::StandardPixmap</db:type>
<db:parameter>standardPixmap</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QStyleOption *</db:type>
<db:parameter>option</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>const QWidget *</db:type>
<db:parameter>widget</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPixmap standardPixmap(QStyle::StandardPixmap standardPixmap, const QStyleOption *option, const QWidget *widget) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Returns a pixmap for the given <db:code role="parameter">standardPixmap</db:code>.</db:para>
<db:para>A standard pixmap is a pixmap that can follow some existing GUI style or guideline. The <db:code role="parameter">option</db:code> argument can be used to pass extra information required when defining the appropriate pixmap. The <db:code role="parameter">widget</db:code> argument is optional and can also be used to aid the determination of the pixmap.</db:para>
<db:para>Developers calling standardPixmap() should instead call <db:link xlink:href="qstyle.xml#standardIcon">standardIcon</db:link>() Developers who re-implemented standardPixmap() should instead re-implement <db:link xlink:href="qstyle.xml#standardIcon">standardIcon</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#standardIcon">standardIcon</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:section>
</db:article>
