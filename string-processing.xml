<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Classes for String Data</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Classes for working with string data.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="details"/>
<db:para>These classes are relevant when working with string data. See the <db:link xlink:href="unicode.xml">information about support for Unicode in Qt</db:link> for more information.</db:para>
<db:variablelist role="members">
<db:varlistentry>
<db:term><db:link xlink:href="qanystringview.xml" xlink:role="class">QAnyStringView</db:link></db:term>
<db:listitem>
<db:para>The QAnyStringView class provides a unified view on Latin-1, UTF-8, or UTF-16 strings with a read-only subset of the QString API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearray.xml" xlink:role="class">QByteArray</db:link></db:term>
<db:listitem>
<db:para>The QByteArray class provides an array of bytes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearraylist.xml" xlink:role="class">QByteArrayList</db:link></db:term>
<db:listitem>
<db:para>The QByteArrayList class provides a list of byte arrays.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearraymatcher.xml" xlink:role="class">QByteArrayMatcher</db:link></db:term>
<db:listitem>
<db:para>The QByteArrayMatcher class holds a sequence of bytes that can be quickly matched in a byte array.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearrayview.xml" xlink:role="class">QByteArrayView</db:link></db:term>
<db:listitem>
<db:para>The QByteArrayView class provides a view on an array of bytes with a read-only subset of the QByteArray API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qchar.xml" xlink:role="class">QChar</db:link></db:term>
<db:listitem>
<db:para>The QChar class provides a 16-bit Unicode character.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcollator.xml" xlink:role="class">QCollator</db:link></db:term>
<db:listitem>
<db:para>The QCollator class compares strings according to a localized collation algorithm.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcollatorsortkey.xml" xlink:role="class">QCollatorSortKey</db:link></db:term>
<db:listitem>
<db:para>The QCollatorSortKey class can be used to speed up string collation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlatin1char.xml" xlink:role="class">QLatin1Char</db:link></db:term>
<db:listitem>
<db:para>The QLatin1Char class provides an 8-bit ASCII/Latin-1 character.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlatin1stringmatcher.xml" xlink:role="class">QLatin1StringMatcher</db:link></db:term>
<db:listitem>
<db:para>Optimized search for substring in Latin-1 text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlatin1stringview.xml" xlink:role="class">QLatin1StringView</db:link></db:term>
<db:listitem>
<db:para>The QLatin1StringView class provides a thin wrapper around a US-ASCII/Latin-1 encoded string literal.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlocale.xml" xlink:role="class">QLocale</db:link></db:term>
<db:listitem>
<db:para>The QLocale class converts between numbers and their string representations in various languages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstaticbytearraymatcher.xml" xlink:role="class">QStaticByteArrayMatcher</db:link></db:term>
<db:listitem>
<db:para>The QStaticByteArrayMatcher class is a compile-time version of QByteArrayMatcher.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstring.xml" xlink:role="class">QString</db:link></db:term>
<db:listitem>
<db:para>The QString class provides a Unicode character string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringlist.xml" xlink:role="class">QStringList</db:link></db:term>
<db:listitem>
<db:para>The QStringList class provides a list of strings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringmatcher.xml" xlink:role="class">QStringMatcher</db:link></db:term>
<db:listitem>
<db:para>The QStringMatcher class holds a sequence of characters that can be quickly matched in a Unicode string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringref.xml" xlink:role="class">QStringRef</db:link></db:term>
<db:listitem>
<db:para>The QStringRef class provides a thin wrapper around QString substrings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringtokenizer.xml" xlink:role="class">QStringTokenizer</db:link></db:term>
<db:listitem>
<db:para>The QStringTokenizer class splits strings into tokens along given separators.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringview.xml" xlink:role="class">QStringView</db:link></db:term>
<db:listitem>
<db:para>The QStringView class provides a unified view on UTF-16 strings with a read-only subset of the QString API.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextboundaryfinder.xml" xlink:role="class">QTextBoundaryFinder</db:link></db:term>
<db:listitem>
<db:para>The QTextBoundaryFinder class provides a way of finding Unicode text boundaries in a string.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextstream.xml" xlink:role="class">QTextStream</db:link></db:term>
<db:listitem>
<db:para>The QTextStream class provides a convenient interface for reading and writing text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qutf8stringview.xml" xlink:role="class">QUtf8StringView</db:link></db:term>
<db:listitem>
<db:para>The QUtf8StringView class provides a unified view on UTF-8 strings with a read-only subset of the QString API.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:article>
