<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt WebChannel Standalone Example</db:title>
<db:productname>QtWebChannel</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebChannel Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A simple chat between a server and a remote client running in a browser.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 Klar√§lvdalens Datakonsult AB, a KDAB Group company, info@kdab.com, author Milian Wolff &amp;lt;milian.wolff@kdab.com&amp;gt;
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QtWebChannel module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;dialog.h&quot;
#include &quot;core.h&quot;
#include &quot;../shared/websocketclientwrapper.h&quot;
#include &quot;../shared/websockettransport.h&quot;

#include &amp;lt;QApplication&amp;gt;
#include &amp;lt;QDesktopServices&amp;gt;
#include &amp;lt;QDialog&amp;gt;
#include &amp;lt;QDir&amp;gt;
#include &amp;lt;QFileInfo&amp;gt;
#include &amp;lt;QUrl&amp;gt;
#include &amp;lt;QWebChannel&amp;gt;
#include &amp;lt;QWebSocketServer&amp;gt;

int main(int argc, char** argv)
{
    QApplication app(argc, argv);

    QFileInfo jsFileInfo(QDir::currentPath() + &quot;/qwebchannel.js&quot;);

    if (!jsFileInfo.exists())
        QFile::copy(&quot;:/qtwebchannel/qwebchannel.js&quot;,jsFileInfo.absoluteFilePath());

    // setup the QWebSocketServer
    QWebSocketServer server(QStringLiteral(&quot;QWebChannel Standalone Example Server&quot;), QWebSocketServer::NonSecureMode);
    if (!server.listen(QHostAddress::LocalHost, 12345)) {
        qFatal(&quot;Failed to open web socket server.&quot;);
        return 1;
    }

    // wrap WebSocket clients in QWebChannelAbstractTransport objects
    WebSocketClientWrapper clientWrapper(&amp;amp;server);

    // setup the channel
    QWebChannel channel;
    QObject::connect(&amp;amp;clientWrapper, &amp;amp;WebSocketClientWrapper::clientConnected,
                     &amp;amp;channel, &amp;amp;QWebChannel::connectTo);

    // setup the UI
    Dialog dialog;

    // setup the core and publish it to the QWebChannel
    Core core(&amp;amp;dialog);
    channel.registerObject(QStringLiteral(&quot;core&quot;), &amp;amp;core);

    // open a browser window with the client HTML page
    QUrl url = QUrl::fromLocalFile(BUILD_DIR &quot;/index.html&quot;);
    QDesktopServices::openUrl(url);

    dialog.displayMessage(Dialog::tr(&quot;Initialization complete, opening browser at %1.&quot;).arg(url.toDisplayString()));
    dialog.show();

    return app.exec();
}

</db:programlisting>
</db:article>
