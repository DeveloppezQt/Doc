<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>RouteModel QML Type</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link> type provides access to routes.</db:para>
<db:para>This type was introduced in QtLocation 5.5.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtLocation 6.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtLocation 5.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>RouteModel is part of <db:simplelist><db:member>qml-QtLocation5-routing</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link> type is used as part of a model/view grouping to retrieve geographic routes from a backend provider. Routes include data about driving directions between two points, walking directions with multiple waypoints, and various other similar concepts. It functions much like other Model types in QML (see for example <db:link xlink:href="qtquick-modelviewsdata-modelview.xml#models">ListModel</db:link>), and interacts with views such as <db:link xlink:href="qml-qtlocation-mapitemview.xml">MapItemView</db:link>, and <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>.</db:para>
<db:para>Like <db:link xlink:href="qml-qtlocation-map.xml">Map</db:link> and <db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>, all the data for a <db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link> to work comes from a services plugin. This is contained in the <db:link xlink:href="qml-qtlocation-routemodel.xml#plugin-prop">plugin</db:link> property, and this must be set before the <db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link> can do any useful work.</db:para>
<db:para>Once the plugin is set, create a <db:link xlink:href="qml-qtlocation-routequery.xml">RouteQuery</db:link> with the appropriate waypoints and other settings, and set the <db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>'s <db:link xlink:href="qml-qtlocation-routemodel.xml#query-prop">query</db:link> property. If <db:link xlink:href="qml-qtlocation-routemodel.xml#autoUpdate-prop">autoUpdate</db:link> is enabled, the update will being automatically. Otherwise, the <db:link xlink:href="qml-qtlocation-routemodel.xml#update-method">update</db:link> method may be used. By default, <db:link xlink:href="qml-qtlocation-routemodel.xml#autoUpdate-prop">autoUpdate</db:link> is disabled.</db:para>
<db:para>The data stored and returned in the <db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link> consists of <db:link xlink:href="qml-route.xml">route</db:link> objects, as a list with the role name &quot;routeData&quot;. See the documentation for <db:link xlink:href="qml-route.xml">route</db:link> for further details on its structure and contents.</db:para>
<db:section xml:id="example-usage">
<db:title>Example Usage</db:title>
<db:para>The following snippet is two-part, showing firstly the declaration of objects, and secondly a short piece of procedural code using it. We set the routeModel's <db:link xlink:href="qml-qtlocation-routemodel.xml#autoUpdate-prop">autoUpdate</db:link> property to false, and call <db:link xlink:href="qml-qtlocation-routemodel.xml#update-method">update</db:link> once the query is set up, to avoid useless extra requests halfway through the set up of the query.</db:para>
<db:programlisting language="cpp">Plugin {
    id: aPlugin
    name: &quot;osm&quot;
}

RouteQuery {
    id: aQuery
}

RouteModel {
    id: routeModel
    plugin: aPlugin
    query: aQuery
    autoUpdate: false
}
</db:programlisting>
<db:programlisting language="cpp">{
    aQuery.addWaypoint(...)
    aQuery.addWaypoint(...)
    aQuery.travelModes = ...
    routeModel.update()
}
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="autoUpdate-prop">
<db:title>autoUpdate : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>autoUpdate</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property controls whether the Model automatically updates in response to changes in its attached <db:link xlink:href="qml-qtlocation-routequery.xml">RouteQuery</db:link>. The default value of this property is false.</db:para>
<db:para>If setting this value to 'true', note that any change at all in the <db:link xlink:href="qml-qtlocation-routequery.xml">RouteQuery</db:link> object set in the <db:link xlink:href="qml-qtlocation-routemodel.xml#query-prop">query</db:link> property will trigger a new request to be sent. If you are adjusting many properties of the <db:link xlink:href="qml-qtlocation-routequery.xml">RouteQuery</db:link> with autoUpdate enabled, this can generate large numbers of useless (and later discarded) requests.</db:para>
</db:section>
<db:section xml:id="count-prop">
<db:title>count : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>count</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds how many routes the model currently has. Amongst other uses, you can use this value when accessing routes via the QtLocation::RouteModel::get -method.</db:para>
</db:section>
<db:section xml:id="error-prop">
<db:title>error : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>error</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This read-only property holds the latest error value of the routing request.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.<db:link xlink:href="qdtls.xml#QDtlsError-enum">NoError</db:link> - No error has occurred.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.CommunicationError - An error occurred while communicating with the service provider.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.EngineNotSetError - The model's plugin property was not set or there is no routing manager associated with the plugin.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.MissingRequiredParameterError - A required parameter was not specified.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.ParseError - The response from the service provider was in an unrecognizable format.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.UnknownError - An error occurred which does not fit into any of the other categories.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.UnknownParameterError - The plugin did not recognize one of the parameters it was given.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.UnsupportedOptionError - The requested operation is not supported by the routing provider. This may happen when the loaded engine does not support a particular type of routing request.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="errorString-prop">
<db:title>errorString : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>errorString</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This read-only property holds the textual presentation of the latest routing error. If no error has occurred or the model has been reset, an empty string is returned.</db:para>
<db:para>An empty string may also be returned if an error occurred which has no associated textual representation.</db:para>
</db:section>
<db:section xml:id="measurementSystem-prop">
<db:title>measurementSystem : Locale::MeasurementSystem</db:title>
<db:fieldsynopsis>
<db:type>Locale::MeasurementSystem</db:type>
<db:varname>measurementSystem</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the measurement system which will be used when calculating the route. This property is changed when the <db:link xlink:href="qml-qtlocation-plugin.xml#locales-prop">Plugin::locales</db:link> property of <db:link xlink:href="qml-qtlocation-routemodel.xml#plugin-prop">plugin</db:link> changes.</db:para>
<db:para>If setting this property it must be set after the <db:link xlink:href="qml-qtlocation-routemodel.xml#plugin-prop">plugin</db:link> property is set.</db:para>
</db:section>
<db:section xml:id="plugin-prop">
<db:title>plugin : Plugin</db:title>
<db:fieldsynopsis>
<db:type>Plugin</db:type>
<db:varname>plugin</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the plugin that providers the actual routing service. Note that all plugins do not necessarily provide routing (could for example provide only geocoding or maps).</db:para>
<db:para>A valid plugin must be set before the <db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link> can perform any useful operations.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtlocation-plugin.xml">Plugin</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="query-prop">
<db:title>query : RouteQuery</db:title>
<db:fieldsynopsis>
<db:type>RouteQuery</db:type>
<db:varname>query</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the data of the route request. The primary data are the waypoint coordinates and possible further preferences (means of traveling, things to avoid on route etc).</db:para>
</db:section>
<db:section xml:id="status-prop">
<db:title>status : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>status</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This read-only property holds the current status of the model.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.Null - No route requests have been issued or <db:link xlink:href="qml-qtlocation-routemodel.xml#reset-method">reset</db:link> has been called.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.Ready - Route request(s) have finished successfully.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.Loading - Route request has been issued but not yet finished</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.Error - Routing error has occurred, details are in <db:link xlink:href="qml-qtlocation-routemodel.xml#error-prop">error</db:link> and <db:link xlink:href="qml-qtlocation-routemodel.xml#errorString-prop">errorString</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="cancel-method">
<db:title>void cancel()</db:title>
<db:para>Cancels any outstanding requests and clears errors. Model status will be set to either <db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.Null or <db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.Ready.</db:para>
</db:section>
<db:section xml:id="get-method">
<db:title>route get(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Returns the route at the specified <db:code role="parameter">index</db:code>. Use the <db:link xlink:href="qml-qtlocation-routemodel.xml#count-prop">count</db:link> property to check the amount of routes available. The routes are indexed from zero, so the accessible range is 0...(count - 1).</db:para>
<db:para>If you access out of bounds, an empty route is returned and a warning is issued.</db:para>
</db:section>
<db:section xml:id="reset-method">
<db:title>void reset()</db:title>
<db:para>Resets the model. All route data is cleared, any outstanding requests are aborted and possible errors are cleared. Model status will be set to <db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>.Null</db:para>
</db:section>
<db:section xml:id="update-method">
<db:title>void update()</db:title>
<db:para>Instructs the <db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link> to update its data. This is most useful when <db:link xlink:href="qml-qtlocation-routemodel.xml#autoUpdate-prop">autoUpdate</db:link> is disabled, to force a refresh when the query has been changed.</db:para>
</db:section>
</db:section>
</db:article>
