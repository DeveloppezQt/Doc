<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt XML Patterns C++ Classes</db:title>
<db:productname>QtXmlPatterns</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt XML Patterns Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Qt XML Patterns module provides support for XPath, XQuery, XSLT and XML Schema validation.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt XML Patterns module provides support for XPath, XQuery, XSLT and XML Schema validation.</db:para>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="qabstractmessagehandler.xml" xlink:role="class">QAbstractMessageHandler</db:link></db:term>
<db:listitem>
<db:para>The QAbstractMessageHandler class provides a callback interface for handling messages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstracturiresolver.xml" xlink:role="class">QAbstractUriResolver</db:link></db:term>
<db:listitem>
<db:para>The QAbstractUriResolver class is a callback interface for resolving Uniform Resource Identifiers. A Uniform Resource Identifier (URI) is a string that uniquely identifies a resource. URIs are versatile global identifiers. It is often useful to transform a URI that identifies something logical into a URI that locates something physical (a URL), or to simply map a URI to a different URI. QAbstractUriResolver::resolve() provides this functionality.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractxmlnodemodel.xml" xlink:role="class">QAbstractXmlNodeModel</db:link></db:term>
<db:listitem>
<db:para>The QAbstractXmlNodeModel class is an abstract base class for modeling non-XML data to look like XML for QXmlQuery.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractxmlreceiver.xml" xlink:role="class">QAbstractXmlReceiver</db:link></db:term>
<db:listitem>
<db:para>The QAbstractXmlReceiver class provides a callback interface for transforming the output of a QXmlQuery.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsimplexmlnodemodel.xml" xlink:role="class">QSimpleXmlNodeModel</db:link></db:term>
<db:listitem>
<db:para>The QSimpleXmlNodeModel class is an implementation of QAbstractXmlNodeModel sufficient for many common cases.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsourcelocation.xml" xlink:role="class">QSourceLocation</db:link></db:term>
<db:listitem>
<db:para>The QSourceLocation class identifies a location in a resource by URI, line, and column.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlformatter.xml" xlink:role="class">QXmlFormatter</db:link></db:term>
<db:listitem>
<db:para>The QXmlFormatter class is an implementation of QXmlSerializer for transforming XQuery output into formatted XML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlitem.xml" xlink:role="class">QXmlItem</db:link></db:term>
<db:listitem>
<db:para>The QXmlItem class contains either an XML node or an atomic value.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlname.xml" xlink:role="class">QXmlName</db:link></db:term>
<db:listitem>
<db:para>The QXmlName class represents the name of an XML node, in an efficient, namespace-aware way. QXmlName represents the name of an XML node in a way that is both efficient and safe for comparing names. Normally, an XML node represents an XML element or attribute, but QXmlName can also represent the names of other kinds of nodes, e.g., QAbstractXmlReceiver::processingInstruction() and QAbstractXmlReceiver::namespaceBinding().</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlnamepool.xml" xlink:role="class">QXmlNamePool</db:link></db:term>
<db:listitem>
<db:para>The QXmlNamePool class is a table of shared strings referenced by instances of QXmlName.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlnodemodelindex.xml" xlink:role="class">QXmlNodeModelIndex</db:link></db:term>
<db:listitem>
<db:para>The QXmlNodeModelIndex class identifies a node in an XML node model subclassed from QAbstractXmlNodeModel.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlquery.xml" xlink:role="class">QXmlQuery</db:link></db:term>
<db:listitem>
<db:para>The QXmlQuery class performs XQueries on XML data, or on non-XML data modeled to look like XML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlresultitems.xml" xlink:role="class">QXmlResultItems</db:link></db:term>
<db:listitem>
<db:para>The QXmlResultItems class iterates through the results of evaluating an XQuery in QXmlQuery.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlschema.xml" xlink:role="class">QXmlSchema</db:link></db:term>
<db:listitem>
<db:para>The QXmlSchema class provides loading and validation of a W3C XML Schema.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlschemavalidator.xml" xlink:role="class">QXmlSchemaValidator</db:link></db:term>
<db:listitem>
<db:para>The QXmlSchemaValidator class validates XML instance documents against a W3C XML Schema.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qxmlserializer.xml" xlink:role="class">QXmlSerializer</db:link></db:term>
<db:listitem>
<db:para>The QXmlSerializer class is an implementation of QAbstractXmlReceiver for transforming XQuery output into unformatted XML.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qtxmlpatterns-index.xml">Qt XML Patterns</db:link> module provides support for XPath, XQuery, XSLT and XML Schema validation.</db:para>
<db:para>To include the definitions of the module's classes, use the following directive:</db:para>
<db:programlisting language="cpp">#include &lt;QtXmlPatterns&gt;
</db:programlisting>
<db:para>To link against the module, add this line to your <db:link xlink:href="qmake-manual.xml">qmake</db:link> <db:code>.pro</db:code> file:</db:para>
<db:programlisting language="cpp">QT += xmlpatterns
</db:programlisting>
</db:section>
</db:article>
