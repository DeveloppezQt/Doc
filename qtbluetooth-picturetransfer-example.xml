<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QML Bluetooth Picture Push Example</db:title>
<db:productname>QtBluetooth</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Bluetooth Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>An example showing the use Bluetooth Object Push Profile (OPP).</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Bluetooth Picture Push example shows how to use the <db:link xlink:href="qbluetoothtransfermanager.xml">QBluetoothTransferManager</db:link> API. The example transfers a local image to a remote device. Unfortunately this example cannot be used on Android as Qt does not support the Object Push Profile (OPP) on this platform.</db:para>
<db:para>On the first user interface page the application scans for remote Bluetooth devices. The user must select the appropriate device to continue:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/opp-example-1.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The next page presents a list of image files on the device. The files must be located under <db:link xlink:href="qstandardpaths.xml#StandardLocation-enum">QStandardPaths::PicturesLocation</db:link>}:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/opp-example-2.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Once the picture was selected the UI shows the progress of the file transfer:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/opp-example-3.png"/>
</db:imageobject>
</db:mediaobject>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="http://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section xml:id="device-discovery">
<db:title>Device Discovery</db:title>
<db:para>The device discovery uses the <db:link xlink:href="qml-qtbluetooth-bluetoothdiscoverymodel.xml">BluetoothDiscoveryModel</db:link> to detect the remote devices. Each discovery is displayed as an entry in a list. Once a device was selected the device address is stored in the <db:code>root</db:code> element. More details about the <db:code>root</db:code> element will follow further below.</db:para>
<db:programlisting language="qml">    ListView {
        model: BluetoothDiscoveryModel {
            discoveryMode: BluetoothDiscoveryModel.DeviceDiscovery
            onErrorChanged: {
                if (error == BluetoothDiscoveryModel.NoError)
                    return;
                if (error == BluetoothDiscoveryModel.PoweredOffError)
                    titleLabel.text = &quot;Bluetooth turned off&quot;;
                else
                    titleLabel.text = &quot;Cannot find devices&quot;;
            }
        }

        delegate: Button {
            width: listView.width + 2
            text: model.name
            onClicked: root.remoteDevice = model.remoteAddress
        }
    }
</db:programlisting>
</db:section>
<db:section xml:id="file-selection">
<db:title>File Selection</db:title>
<db:para>The file is selected with the help of <db:link xlink:href="qml-qt-labs-folderlistmodel-folderlistmodel.xml">FolderListModel</db:link>. Once again the selected file is stored in the <db:code>root</db:code> element:</db:para>
<db:programlisting language="qml">        model: FolderListModel {
            folder: &quot;file://&quot;+SystemPictureFolder
            showDirs: false
        }

        delegate: Rectangle {
            Text {
                text: model.fileName
            }
            MouseArea {
                id: mArea
                anchors.fill: parent
                onClicked: {
                    print (&quot;path: &quot; + model.filePath + &quot; &quot; + model.fileName)
                    root.fileName = model.filePath
                }
            }
        }
</db:programlisting>
</db:section>
<db:section xml:id="root-element">
<db:title>Root Element</db:title>
<db:para>The already mentioned <db:code>root</db:code> element collects the necessary pieces of data for the picture transfer. Once the file name has been set it triggers the file transfer:</db:para>
<db:programlisting language="qml">Image {
    id: root
    property string remoteDevice;
    property string fileName;
    onFileNameChanged: {
        fileTransfer.initTransfer(remoteDevice, fileName);
        loader.source = &quot;FileSending.qml&quot;
    }
    onFileNameChanged: {
        fileTransfer.initTransfer(remoteDevice, fileName);
        loader.source = &quot;FileSending.qml&quot;
    }
</db:programlisting>
</db:section>
<db:section xml:id="file-transfer">
<db:title>File Transfer</db:title>
<db:para>The file transfer is implemented in C++:</db:para>
<db:programlisting language="cpp">void FileTransfer::initTransfer(QString address, QString fileName)
{
    qDebug() &amp;lt;&amp;lt; &quot;Begin sharing file: &quot; &amp;lt;&amp;lt; address &amp;lt;&amp;lt; fileName;
    QBluetoothAddress btAddress = QBluetoothAddress(address);
    QBluetoothTransferRequest request(btAddress);
    QFile *file = new QFile(fileName);
    reply = manager.put(request, file);
    connect(reply, SIGNAL(transferProgress(qint64,qint64)), this, SLOT(updateProgress(qint64,qint64)));
}
</db:programlisting>
<db:para>and exposed to QML via a context property:</db:para>
<db:programlisting language="cpp">    QQuickView view;
    FileTransfer fileTransfer;
    view.rootContext()-&amp;gt;setContextProperty(&quot;fileTransfer&quot;, QVariant::fromValue(&amp;amp;fileTransfer));
</db:programlisting>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="picturetransfer/Button.qml">picturetransfer/Button.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="picturetransfer/DeviceDiscovery.qml">picturetransfer/DeviceDiscovery.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="picturetransfer/FileSending.qml">picturetransfer/FileSending.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="picturetransfer/PictureSelector.qml">picturetransfer/PictureSelector.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="picturetransfer/bttransfer.qml">picturetransfer/bttransfer.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="picturetransfer/filetransfer.cpp">picturetransfer/filetransfer.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="picturetransfer/filetransfer.h">picturetransfer/filetransfer.h</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="picturetransfer/main.cpp">picturetransfer/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="picturetransfer/picturetransfer.pro">picturetransfer/picturetransfer.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="picturetransfer/qmltransfer.qrc">picturetransfer/qmltransfer.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Images:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="picturetransfer/background.png">picturetransfer/background.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="picturetransfer/icon.png">picturetransfer/icon.png</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtbluetooth-index.xml">Qt Bluetooth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section></db:section></db:article>
