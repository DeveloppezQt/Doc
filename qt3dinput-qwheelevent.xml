<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QWheelEvent Class</db:title>
<db:subtitle>Qt3DInput::QWheelEvent</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link> class contains parameters that describe a mouse wheel event.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Qt3DInput/QWheelEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3dinput)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3dinput)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dinput</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-input-wheelevent.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Mouse wheel events occur when the mouse is rotated.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3dinput-qkeyevent.xml">QKeyEvent</db:link></db:member>
<db:member><db:link xlink:href="qt3dinput-qmouseevent.xml">QMouseEvent</db:link></db:member>
<db:member><db:link xlink:href="qt3dinput-qmousehandler.xml">QMouseHandler</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Buttons-enum">
<db:title>enum QWheelEvent::Buttons</db:title>
<db:enumsynopsis>
<db:enumname>Buttons</db:enumname>
<db:enumitem>
<db:enumidentifier>LeftButton</db:enumidentifier>
<db:enumvalue>Qt::LeftButton</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>RightButton</db:enumidentifier>
<db:enumvalue>Qt::RightButton</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MiddleButton</db:enumidentifier>
<db:enumvalue>Qt::MiddleButton</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>BackButton</db:enumidentifier>
<db:enumvalue>Qt::BackButton</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NoButton</db:enumidentifier>
<db:enumvalue>Qt::NoButton</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dinput.xml">Qt3DInput</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link></db:emphasis>::LeftButton</db:code></db:para>
</db:td>
<db:td><db:code>Qt::LeftButton</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dinput.xml">Qt3DInput</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link></db:emphasis>::RightButton</db:code></db:para>
</db:td>
<db:td><db:code>Qt::RightButton</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dinput.xml">Qt3DInput</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link></db:emphasis>::MiddleButton</db:code></db:para>
</db:td>
<db:td><db:code>Qt::MiddleButton</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dinput.xml">Qt3DInput</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link></db:emphasis>::BackButton</db:code></db:para>
</db:td>
<db:td><db:code>Qt::BackButton</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dinput.xml">Qt3DInput</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link></db:emphasis>::NoButton</db:code></db:para>
</db:td>
<db:td><db:code>Qt::NoButton</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="Modifiers-enum">
<db:title>enum QWheelEvent::Modifiers</db:title>
<db:enumsynopsis>
<db:enumname>Modifiers</db:enumname>
<db:enumitem>
<db:enumidentifier>NoModifier</db:enumidentifier>
<db:enumvalue>Qt::NoModifier</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ShiftModifier</db:enumidentifier>
<db:enumvalue>Qt::ShiftModifier</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ControlModifier</db:enumidentifier>
<db:enumvalue>Qt::ControlModifier</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AltModifier</db:enumidentifier>
<db:enumvalue>Qt::AltModifier</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MetaModifier</db:enumidentifier>
<db:enumvalue>Qt::MetaModifier</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>KeypadModifier</db:enumidentifier>
<db:enumvalue>Qt::KeypadModifier</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dinput.xml">Qt3DInput</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link></db:emphasis>::NoModifier</db:code></db:para>
</db:td>
<db:td><db:code>Qt::NoModifier</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dinput.xml">Qt3DInput</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link></db:emphasis>::ShiftModifier</db:code></db:para>
</db:td>
<db:td><db:code>Qt::ShiftModifier</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dinput.xml">Qt3DInput</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link></db:emphasis>::ControlModifier</db:code></db:para>
</db:td>
<db:td><db:code>Qt::ControlModifier</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dinput.xml">Qt3DInput</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link></db:emphasis>::AltModifier</db:code></db:para>
</db:td>
<db:td><db:code>Qt::AltModifier</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dinput.xml">Qt3DInput</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link></db:emphasis>::MetaModifier</db:code></db:para>
</db:td>
<db:td><db:code>Qt::MetaModifier</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dinput.xml">Qt3DInput</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link></db:emphasis>::KeypadModifier</db:code></db:para>
</db:td>
<db:td><db:code>Qt::KeypadModifier</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="accepted-prop">
<db:title>accepted : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>accepted</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isAccepted</db:synopsisinfo>
<db:synopsisinfo role="setter">setAccepted</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies if the mouse wheel event has been accepted</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml#isAccepted">isAccepted</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml#setAccepted">setAccepted</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>accepted</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="angleDelta-prop">
<db:title>[read-only] angleDelta : const QPoint</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QPoint</db:type>
<db:varname>angleDelta</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">angleDelta</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies The change wheel angle of the mouse wheel event</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpoint.xml">QPoint</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml#angleDelta">angleDelta</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="buttons-prop">
<db:title>[read-only] buttons : const int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>buttons</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">buttons</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the button if present in the mouse wheel event</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml#buttons">buttons</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="modifiers-prop">
<db:title>[read-only] modifiers : const Qt3DInput::QWheelEvent::Modifiers</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DInput::QWheelEvent::Modifiers</db:type>
<db:varname>modifiers</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">modifiers</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies if any modifiers were applied to the mouse wheel event</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dinput-qwheelevent.xml#Modifiers-enum">Qt3DInput::QWheelEvent::Modifiers</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml#modifiers">modifiers</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="x-prop">
<db:title>[read-only] x : const int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>x</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">x</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies The X coordinate of the mouse wheel event</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml#x">x</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="y-prop">
<db:title>[read-only] y : const int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>y</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">y</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies The Y coordinate of the mouse wheel event</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3dinput-qwheelevent.xml#y">y</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QWheelEvent">
<db:title>[explicit] QWheelEvent::QWheelEvent(const ::QWheelEvent &amp;<db:emphasis>e</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QWheelEvent</db:methodname>
<db:methodparam>
<db:type>const ::QWheelEvent &amp;</db:type>
<db:parameter>e</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QWheelEvent(const ::QWheelEvent &amp;e)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link> instance from the <db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link> <db:code role="parameter">e</db:code>.</db:para>
</db:section>
<db:section xml:id="angleDelta">
<db:title>QPoint QWheelEvent::angleDelta() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPoint</db:type>
<db:methodname>angleDelta</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">angleDelta</db:synopsisinfo>
<db:synopsisinfo role="signature">QPoint angleDelta() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the distance that the wheel is rotated, in eighths of a degree. A positive value indicates that the wheel was rotated forward (away from the user), a negative value indicates the wheel was rotated backward (toward the user).</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3dinput-qwheelevent.xml#angleDelta-prop">angleDelta</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="buttons">
<db:title>int QWheelEvent::buttons() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>buttons</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">buttons</db:synopsisinfo>
<db:synopsisinfo role="signature">int buttons() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a bitfield to be used to check for mouse buttons that may be accompanying the wheel event.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3dinput-qwheelevent.xml#buttons-prop">buttons</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="isAccepted">
<db:title>bool QWheelEvent::isAccepted() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isAccepted</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">accepted</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isAccepted() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns whether the event was accepted.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3dinput-qwheelevent.xml#accepted-prop">accepted</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="modifiers">
<db:title>Qt3DInput::QWheelEvent::Modifiers QWheelEvent::modifiers() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>Qt3DInput::QWheelEvent::Modifiers</db:type>
<db:methodname>modifiers</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">modifiers</db:synopsisinfo>
<db:synopsisinfo role="signature">Qt3DInput::QWheelEvent::Modifiers modifiers() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the keyboard modifiers that may be accompanying the wheel event.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3dinput-qwheelevent.xml#modifiers-prop">modifiers</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="setAccepted">
<db:title>void QWheelEvent::setAccepted(bool <db:emphasis>accepted</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setAccepted</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>accepted</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">accepted</db:synopsisinfo>
<db:synopsisinfo role="signature">void setAccepted(bool accepted)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the event as accepted if <db:code role="parameter">accepted</db:code> is true.</db:para>
<db:note>
<db:para>When an event is accepted, it will prevent further propagation to other listeners.</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3dinput-qwheelevent.xml#accepted-prop">accepted</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3dinput-qwheelevent.xml#isAccepted">isAccepted</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="type">
<db:title>QEvent::Type QWheelEvent::type() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QEvent::Type</db:type>
<db:methodname>type</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QEvent::Type type() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the <db:link xlink:href="qevent.xml#Type-enum">QEvent::Type</db:link> of the event.</db:para>
</db:section>
<db:section xml:id="x">
<db:title>int QWheelEvent::x() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>x</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">x</db:synopsisinfo>
<db:synopsisinfo role="signature">int x() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the x position of the mouse event.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3dinput-qwheelevent.xml#x-prop">x</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="y">
<db:title>int QWheelEvent::y() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>y</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">y</db:synopsisinfo>
<db:synopsisinfo role="signature">int y() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the x position of the mouse event.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qt3dinput-qwheelevent.xml#y-prop">y</db:link>. </db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="QWheelEventPtr-typedef">
<db:title>QWheelEventPtr</db:title>
<db:typedefsynopsis>
<db:typedefname>QWheelEventPtr</db:typedefname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:typedefsynopsis>
<db:para>A shared pointer for <db:link xlink:href="qt3dinput-qwheelevent.xml">QWheelEvent</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
