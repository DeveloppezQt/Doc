<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>File System Example</db:title>
<db:productname>QtXmlPatterns</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt XML Patterns Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Using Qt XML Patterns for querying non-XML data that is modeled to look like XML.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">declare variable $where as xs:string := string($fileTree/@filePath);
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;All cpp files in: {$where}&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;p&gt;
      cpp-files found in {$where} sorted by size:
    &lt;/p&gt;
    &lt;ul&gt; {
      for $file in $fileTree//file[@suffix = &quot;cpp&quot;]
      order by xs:integer($file/@size)
      return
        &lt;li&gt;
          {string($file/@fileName)}, size: {string($file/@size)}
        &lt;/li&gt;
    } &lt;/ul&gt;
  &lt;/body&gt;
&lt;/html&gt;

</db:programlisting>
</db:article>
