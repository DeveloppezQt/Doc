<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Element Class</db:title>
<db:subtitle>QPainterPath::Element</db:subtitle>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qpainterpath-element.xml">QPainterPath::Element</db:link> class specifies the position and type of a subpath.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Element</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Once a <db:link xlink:href="qpainterpath.xml">QPainterPath</db:link> object is constructed, subpaths like lines and curves can be added to the path (creating <db:link xlink:href="qpainterpath.xml#ElementType-enum">QPainterPath::LineToElement</db:link> and <db:link xlink:href="qpainterpath.xml#ElementType-enum">QPainterPath::CurveToElement</db:link> components).</db:para>
<db:para>The lines and curves stretch from the <db:link xlink:href="qpainterpath.xml#currentPosition">currentPosition</db:link>() to the position passed as argument. The <db:link xlink:href="qpainterpath.xml#currentPosition">currentPosition</db:link>() of the <db:link xlink:href="qpainterpath.xml">QPainterPath</db:link> object is always the end position of the last subpath that was added (or the initial start point). The <db:link xlink:href="qpainterpath.xml#moveTo">moveTo</db:link>() function can be used to move the <db:link xlink:href="qpainterpath.xml#currentPosition">currentPosition</db:link>() without adding a line or curve, creating a <db:link xlink:href="qpainterpath.xml#ElementType-enum">QPainterPath::MoveToElement</db:link> component.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpainterpath.xml">QPainterPath</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="isCurveTo">
<db:title>bool Element::isCurveTo() const</db:title>
<db:para>Returns <db:code>true</db:code> if the element is a curve, otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpainterpath-element.xml#type-var">type</db:link></db:member>
<db:member><db:link xlink:href="qpainterpath.xml#ElementType-enum">QPainterPath::CurveToElement</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isLineTo">
<db:title>bool Element::isLineTo() const</db:title>
<db:para>Returns <db:code>true</db:code> if the element is a line, otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpainterpath-element.xml#type-var">type</db:link></db:member>
<db:member><db:link xlink:href="qpainterpath.xml#ElementType-enum">QPainterPath::LineToElement</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isMoveTo">
<db:title>bool Element::isMoveTo() const</db:title>
<db:para>Returns <db:code>true</db:code> if the element is moving the current position, otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpainterpath-element.xml#type-var">type</db:link></db:member>
<db:member><db:link xlink:href="qpainterpath.xml#ElementType-enum">QPainterPath::MoveToElement</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-QPointF">
<db:title>QPointF Element::operator QPointF() const</db:title>
<db:para>Returns the element's position.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpainterpath-element.xml#x-var">x</db:link></db:member>
<db:member><db:link xlink:href="qpainterpath-element.xml#y-var">y</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool Element::operator!=(const QPainterPath::Element &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns <db:code>true</db:code> if this element is not equal to <db:code role="parameter">other</db:code>; otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpainterpath-element.xml#operator-eq-eq">operator==</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool Element::operator==(const QPainterPath::Element &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns <db:code>true</db:code> if this element is equal to <db:code role="parameter">other</db:code>; otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpainterpath-element.xml#operator-not-eq">operator!=</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-variable-documentation">
<db:title>Member Variable Documentation</db:title>
<db:section xml:id="type-var">
<db:title>QPainterPath::ElementType Element::type</db:title>
<db:para>This variable holds the type of element</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpainterpath-element.xml#isCurveTo">isCurveTo</db:link>()</db:member>
<db:member><db:link xlink:href="qpainterpath-element.xml#isLineTo">isLineTo</db:link>()</db:member>
<db:member><db:link xlink:href="qpainterpath-element.xml#isMoveTo">isMoveTo</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="x-var">
<db:title>qreal Element::x</db:title>
<db:para>This variable holds the x coordinate of the element's position.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpainterpath-element.xml#operator-QPointF">operator QPointF()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="y-var">
<db:title>qreal Element::y</db:title>
<db:para>This variable holds the y coordinate of the element's position.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpainterpath-element.xml#operator-QPointF">operator QPointF()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
