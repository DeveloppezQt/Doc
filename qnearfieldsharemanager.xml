<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QNearFieldShareManager Class</db:title>
<db:productname>QtNfc</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt NFC Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link> class manages all interactions related to sharing files and data over NFC.</db:para>
<db:para>This class was introduced in Qt 5.3.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QNearFieldShareManager</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.3</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += nfc</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QNearFieldShareManager is part of <db:simplelist><db:member>connectivity-nfc</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Applications can share NDEF data or file content using NFC technology by tapping two NFC-enabled devices together. The <db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link> provides a high level entry point to access this functionality.</db:para>
<db:para>The class allows both NDEF data and/or files to be shared between two devices by calling the <db:link xlink:href="qnearfieldsharemanager.xml#setShareModes">setShareModes</db:link>() method. This method specifies either an NDEF Data and/or a File transfer. The <db:link xlink:href="qnearfieldsharemanager.xml#targetDetected">targetDetected</db:link>() signal is emitted each time a share target is detected. A <db:link xlink:href="qnearfieldsharetarget.xml">QNearFieldShareTarget</db:link> pointer is passed with the signal, which can be used to share either an NDEF message or one or more files.</db:para>
<db:para>The process of sharing files via NFC involves other underlying communication transports such as Bluetooth or Wi-Fi Direct. It is implementation specific how and what type of transports are used to perform file transfer. The overall time taken to transfer content depends on the maximum speed of the transport used. Note that the process of sharing NDEF message/data does not require the use of other transports outside NFC.</db:para>
<db:para>If an error occurs, <db:link xlink:href="qnearfieldsharemanager.xml#shareError">shareError</db:link>() returns the error type.</db:para>
<db:para>Platforms that do not support both NDEF data and file content sharing modes can return the supported subset in the <db:link xlink:href="qnearfieldsharemanager.xml#supportedShareModes">supportedShareModes</db:link>() method. Applications that call <db:link xlink:href="qnearfieldsharemanager.xml#setShareModes">setShareModes</db:link>() with an unsupported mode will receive an error signal with a <db:link xlink:href="qnearfieldsharemanager.xml#ShareError-enum">UnsupportedShareModeError</db:link>.</db:para>
<db:para>Since sharing data over NFC is effectively a data pipe between two processes (one on the sender and one of the receiver), the application developer should only create a single instance of <db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link> per application. This avoids the possibility that different parts of the same application attempt to all consume data transferred over NFC.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="ShareError-enum">
<db:title>enum QNearFieldShareManager::ShareError</db:title>
<db:para>This enum specifies the share error type.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link></db:emphasis>::NoError</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>No error.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link></db:emphasis>::UnknownError</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Unknown or internal error occurred.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link></db:emphasis>::InvalidShareContentError</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Invalid content was provided for sharing.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link></db:emphasis>::ShareCanceledError</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Data or file sharing is canceled on the local or remote device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link></db:emphasis>::ShareInterruptedError</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>Data or file sharing is interrupted due to an I/O error.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link></db:emphasis>::ShareRejectedError</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>Data or file sharing is rejected by the remote device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link></db:emphasis>::UnsupportedShareModeError</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>Data or file sharing is not supported by the share target.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link></db:emphasis>::ShareAlreadyInProgressError</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>Data or file sharing is already in progress.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link></db:emphasis>::SharePermissionDeniedError</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>File sharing is denied due to insufficient permission.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="ShareMode-enum">
<db:title>enum QNearFieldShareManager::ShareMode</db:title>
<db:bridgehead renderas="sect2">flags QNearFieldShareManager::ShareModes</db:bridgehead>
<db:para>This enum specifies the content type to be shared.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link></db:emphasis>::NoShare</db:code></db:para>
</db:td>
<db:td><db:code>0x00</db:code></db:td>
<db:td>
<db:para>No content is currently set to be shared.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link></db:emphasis>::NdefShare</db:code></db:para>
</db:td>
<db:td><db:code>0x01</db:code></db:td>
<db:td>
<db:para>Share NDEF message with target.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link></db:emphasis>::FileShare</db:code></db:para>
</db:td>
<db:td><db:code>0x02</db:code></db:td>
<db:td>
<db:para>Share file with target.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>ShareModes</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;ShareMode&gt;. </db:code>It stores an OR combination of <db:code>ShareMode</db:code> values.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QNearFieldShareManager">
<db:title>[explicit] QNearFieldShareManager::QNearFieldShareManager(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a new near field share manager with <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QNearFieldShareManager">
<db:title>[virtual noexcept] QNearFieldShareManager::~QNearFieldShareManager()</db:title>
<db:para>Destroys the near field share manager.</db:para>
</db:section>
<db:section xml:id="error">
<db:title>void QNearFieldShareManager::error(QNearFieldShareManager::ShareError <db:emphasis>error</db:emphasis>)</db:title>
<db:para>This signal is emitted whenever an <db:code role="parameter">error</db:code> occurs related to a share request.</db:para>
</db:section>
<db:section xml:id="setShareModes">
<db:title>void QNearFieldShareManager::setShareModes(QNearFieldShareManager::ShareModes <db:emphasis>mode</db:emphasis>)</db:title>
<db:para>Initializes the NFC share <db:code role="parameter">mode</db:code> to detect a <db:link xlink:href="qnearfieldsharetarget.xml">QNearFieldShareTarget</db:link> for data and/or file sharing. Calls to this method will overwrite previous share modes.</db:para>
<db:para>A <db:link xlink:href="qnearfieldsharemanager.xml#shareModesChanged">shareModesChanged</db:link>() signal will be emitted when share modes are different from previous modes. A <db:link xlink:href="qnearfieldsharemanager.xml#targetDetected">targetDetected</db:link>() signal will be emitted if a share target is detected.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnearfieldsharemanager.xml#shareModes">shareModes</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="shareError">
<db:title>QNearFieldShareManager::ShareError QNearFieldShareManager::shareError() const</db:title>
<db:para>Returns the error code of the error that occurred.</db:para>
</db:section>
<db:section xml:id="shareModes">
<db:title>QNearFieldShareManager::ShareModes QNearFieldShareManager::shareModes() const</db:title>
<db:para>Returns which shared modes are set.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnearfieldsharemanager.xml#setShareModes">setShareModes</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="shareModesChanged">
<db:title>void QNearFieldShareManager::shareModesChanged(QNearFieldShareManager::ShareModes <db:emphasis>modes</db:emphasis>)</db:title>
<db:para>This signal is emitted whenever the share <db:code role="parameter">modes</db:code> are changed.</db:para>
</db:section>
<db:section xml:id="supportedShareModes">
<db:title>[static] QNearFieldShareManager::ShareModes QNearFieldShareManager::supportedShareModes()</db:title>
<db:para>Returns the shared modes supported by NFC.</db:para>
</db:section>
<db:section xml:id="targetDetected">
<db:title>void QNearFieldShareManager::targetDetected(QNearFieldShareTarget *<db:emphasis>shareTarget</db:emphasis>)</db:title>
<db:para>This signal is emitted whenever a <db:code role="parameter">shareTarget</db:code> is detected. The <db:code role="parameter">shareTarget</db:code> instance is owned by <db:link xlink:href="qnearfieldsharemanager.xml">QNearFieldShareManager</db:link> and must not be deleted by the application.</db:para>
</db:section>
</db:section>
</db:article>
