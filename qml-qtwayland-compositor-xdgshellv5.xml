<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>XdgShellV5 QML Type</db:title>
<db:productname>QtWaylandCompositor</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Wayland Compositor Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides an extension for desktop-style user interfaces.</db:para>
<db:para><db:emphasis role="bold">This type is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
<db:para>This type was introduced in Qt 5.8.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtWayland.Compositor 1.3</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.8</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtwayland-compositor-xdgshellv5.xml">XdgShellV5</db:link> extension provides a way to associate an <db:link xlink:href="qml-qtwayland-compositor-xdgsurfacev5.xml">XdgSurfaceV5</db:link> with a regular Wayland surface. Using the xdg_surface interface, the client can request that the surface is resized, moved, and so on.</db:para>
<db:para><db:link xlink:href="qml-qtwayland-compositor-xdgshellv5.xml">XdgShellV5</db:link> corresponds to the Wayland interface <db:code>xdg_shell</db:code>.</db:para>
<db:para>To provide the functionality of the shell extension in a compositor, create an instance of the <db:link xlink:href="qml-qtwayland-compositor-xdgshellv5.xml">XdgShellV5</db:link> component and add it as a child of the compositor:</db:para>
<db:programlisting language="cpp">import QtWayland.Compositor 1.0

WaylandCompositor {
    XdgShellV5 {
        // ...
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="pong-signal">
<db:title>void pong(int <db:emphasis>serial</db:emphasis>)</db:title>
<db:para>This signal is emitted when the client has responded to a ping event with serial <db:code role="parameter">serial</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPong</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwayland-compositor-xdgshellv5.xml#ping-method">QtWaylandCompositor::XdgShellV5::ping</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="xdgPopupCreated-signal">
<db:title>void xdgPopupCreated(XdgPopupV5 <db:emphasis>xdgPopup</db:emphasis>)</db:title>
<db:para>This signal is emitted when the client has created an <db:code>xdg_popup</db:code>. A common use case is to let the handler of this signal instantiate a <db:link xlink:href="qml-qtwayland-compositor-shellsurfaceitem.xml">ShellSurfaceItem</db:link> or <db:link xlink:href="qml-qtwayland-compositor-waylandquickitem.xml">WaylandQuickItem</db:link> for displaying <db:code role="parameter">xdgPopup</db:code> in a <db:link xlink:href="qtquick-module.xml">QtQuick</db:link> scene.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onXdgPopupCreated</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="xdgPopupRequested-signal">
<db:title>void xdgPopupRequested(WaylandSurface <db:emphasis>surface</db:emphasis>, WaylandSurface <db:emphasis>parent</db:emphasis>, WaylandSeat <db:emphasis>seat</db:emphasis>, point <db:emphasis>position</db:emphasis>, WaylandResource <db:emphasis>resource</db:emphasis>)</db:title>
<db:para>This signal is emitted when the client has requested an <db:code>xdg_popup</db:code> to be associated with <db:code role="parameter">surface</db:code>. The handler for this signal may create the xdg popup for <db:code role="parameter">resource</db:code> and initialize it within the scope of the signal emission. Otherwise an XdgPopupV5 will be created automatically.</db:para>
<db:para>The <db:code role="parameter">seat</db:code> is the <db:code>wl_seat</db:code> that caused the popup to be opened.</db:para>
<db:para><db:code role="parameter">position</db:code> is the desired position of the popup, relative to the <db:code role="parameter">parent</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onXdgPopupRequested</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="xdgSurfaceCreated-signal">
<db:title>void xdgSurfaceCreated(XdgSurfaceV5 <db:emphasis>xdgSurface</db:emphasis>)</db:title>
<db:para>This signal is emitted when the client has created an <db:code>xdg_surface</db:code>. A common use case is to let the handler of this signal instantiate a <db:link xlink:href="qml-qtwayland-compositor-shellsurfaceitem.xml">ShellSurfaceItem</db:link> or <db:link xlink:href="qml-qtwayland-compositor-waylandquickitem.xml">WaylandQuickItem</db:link> for displaying <db:code role="parameter">xdgSurface</db:code> in a <db:link xlink:href="qtquick-module.xml">QtQuick</db:link> scene.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onXdgSurfaceCreated</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="xdgSurfaceRequested-signal">
<db:title>void xdgSurfaceRequested(WaylandSurface <db:emphasis>surface</db:emphasis>, WaylandResource <db:emphasis>resource</db:emphasis>)</db:title>
<db:para>This signal is emitted when the client has requested an <db:code>xdg_surface</db:code> to be associated with <db:code role="parameter">surface</db:code>. The handler for this signal may create the shell surface for <db:code role="parameter">resource</db:code> and initialize it within the scope of the signal emission. Otherwise an XdgSurfaceV5 will be created automatically.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onXdgSurfaceRequested</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="ping-method">
<db:title>void ping()</db:title>
<db:para>Sends a ping event to the <db:code role="parameter">client</db:code>. If the client replies to the event, the pong signal will be emitted.</db:para>
</db:section>
</db:section>
</db:article>
