<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Linguist Manual: TS File Format</db:title>
<db:productname>QtLinguist</db:productname>
<db:edition>Qt 5.11.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Linguist Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="linguist-programmers.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Qt Linguist Manual: Developers"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="linguist-id-based-i18n.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="Qt Linguist Manual: Text ID Based Translations"/></db:extendedlink>
<db:abstract>
<db:para>Qt Linguist Manual.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>{Qt Linguist Manual}{Contents}</db:para>
<db:para>The TS file format used by <db:emphasis>Qt Linguist</db:emphasis> is described by the <db:link xlink:href="http://www.w3.org/TR/1998/REC-xml-19980210">DTD</db:link> presented below, which we include for your convenience. Be aware that the format may change in future Qt releases.</db:para>
<db:programlisting language="cpp">&amp;lt;!--
 !
 ! Some notes to the DTD:
 !
 ! The location element is set as optional since it was introduced first in Qt 4.2.
 ! The userdata element is set as optional since it was introduced first in Qt 4.4.
 ! The vanished message type was introduced first in Qt 5.2.
 !
  --&amp;gt;
&amp;lt;!--
 ! Macro used in order to escape byte entities not allowed in an xml document
 ! for instance, only #x9, #xA and #xD are allowed characters below #x20.
 --&amp;gt;
&amp;lt;!ENTITY % evilstring '(#PCDATA | byte)*' &amp;gt;
&amp;lt;!ELEMENT byte EMPTY&amp;gt;
&amp;lt;!-- value contains decimal (e.g. 1000) or hex (e.g. x3e8) unicode encoding of one char --&amp;gt;
&amp;lt;!ATTLIST byte
          value CDATA #REQUIRED&amp;gt;
&amp;lt;!--
 ! This element wildcard is no valid DTD. No better solution available.
 ! extra elements may appear in TS and message elements. Each element may appear
 ! only once within each scope. The contents are preserved verbatim; any
 ! attributes are dropped. Currently recognized extra tags include:
 !   extra-po-msgid_plural, extra-po-old_msgid_plural
 !   extra-po-flags (comma-space separated list)
 !   extra-loc-layout_id
 !   extra-loc-feature
 !   extra-loc-blank
  --&amp;gt;
&amp;lt;!ELEMENT extra-* %evilstring; &amp;gt;
&amp;lt;!ELEMENT TS (defaultcodec?, extra-**, dependencies?, (context|message)+) &amp;gt;
&amp;lt;!ATTLIST TS
          version CDATA #IMPLIED
          sourcelanguage CDATA #IMPLIED
          language CDATA #IMPLIED&amp;gt;
&amp;lt;!-- The encoding to use in the QM file by default. Default is ISO-8859-1. --&amp;gt;
&amp;lt;!ELEMENT defaultcodec (#PCDATA) &amp;gt;
&amp;lt;!ELEMENT context (name, comment?, (context|message)+) &amp;gt;
&amp;lt;!ATTLIST context
          encoding CDATA #IMPLIED&amp;gt;
&amp;lt;!ELEMENT dependencies (dependency+) &amp;gt;
&amp;lt;!ATTLIST dependency
          catalog CDATA #IMPLIED&amp;gt;
&amp;lt;!ELEMENT name %evilstring; &amp;gt;
&amp;lt;!-- This is &quot;disambiguation&quot; in the (new) API, or &quot;msgctxt&quot; in gettext speak --&amp;gt;
&amp;lt;!ELEMENT comment %evilstring; &amp;gt;
&amp;lt;!-- Previous content of comment (result of merge) --&amp;gt;
&amp;lt;!ELEMENT oldcomment %evilstring; &amp;gt;
&amp;lt;!-- The real comment (added by developer/designer) --&amp;gt;
&amp;lt;!ELEMENT extracomment %evilstring; &amp;gt;
&amp;lt;!-- Comment added by translator --&amp;gt;
&amp;lt;!ELEMENT translatorcomment %evilstring; &amp;gt;
&amp;lt;!ELEMENT message (location*, source?, oldsource?, comment?, oldcomment?, extracomment?, translatorcomment?, translation?, userdata?, extra-**) &amp;gt;
&amp;lt;!--
 ! If utf8 is &quot;true&quot;, the defaultcodec is overridden and the message is encoded
 ! in UTF-8 in the QM file. If it is &quot;both&quot;, both source encodings are stored
 ! in the QM file.
  --&amp;gt;
&amp;lt;!ATTLIST message
          id CDATA #IMPLIED
          utf8 (true|false|both) &quot;false&quot;
          numerus (yes|no) &quot;no&quot;&amp;gt;
&amp;lt;!ELEMENT location EMPTY&amp;gt;
&amp;lt;!--
 ! If the line is omitted, the location specifies only a file.
 !
 ! location supports relative specifications as well. Line numbers are
 ! relative (explicitly positive or negative) to the last reference to a
 ! given filename; each file starts with current line 0. If the filename
 ! is omitted, the &quot;current&quot; one is used. For the 1st location in a message,
 ! &quot;current&quot; is the filename used for the 1st location of the previous message.
 ! For subsequent locations, it is the filename used for the previous location.
 ! A single TS file has either all absolute or all relative locations.
  --&amp;gt;
&amp;lt;!ATTLIST location
          filename CDATA #IMPLIED
          line CDATA #IMPLIED&amp;gt;
&amp;lt;!ELEMENT source %evilstring;&amp;gt;
&amp;lt;!-- Previous content of source (result of merge) --&amp;gt;
&amp;lt;!ELEMENT oldsource %evilstring;&amp;gt;
&amp;lt;!--
 ! The following should really say one evilstring macro or several
 ! numerusform or lengthvariant elements, but the DTD can't express this.
  --&amp;gt;
&amp;lt;!ELEMENT translation (#PCDATA|byte|numerusform|lengthvariant)* &amp;gt;
&amp;lt;!--
 ! If no type is set, the message is &quot;finished&quot;.
 ! Length variants must be ordered by falling display length.
 ! variants may not be yes if the message has numerus yes.
  --&amp;gt;
&amp;lt;!ATTLIST translation
          type (unfinished|vanished|obsolete) #IMPLIED
          variants (yes|no) &quot;no&quot;&amp;gt;
&amp;lt;!-- Deprecated. Use extra-* --&amp;gt;
&amp;lt;!ELEMENT userdata (#PCDATA)* &amp;gt;
&amp;lt;!--
 ! The following should really say one evilstring macro or several
 ! lengthvariant elements, but the DTD can't express this.
 ! Length variants must be ordered by falling display length.
  --&amp;gt;
&amp;lt;!ELEMENT numerusform (#PCDATA|byte|lengthvariant)* &amp;gt;
&amp;lt;!ATTLIST numerusform
          variants (yes|no) &quot;no&quot;&amp;gt;
&amp;lt;!ELEMENT lengthvariant %evilstring; &amp;gt;

</db:programlisting>
</db:article>
