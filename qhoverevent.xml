<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QHoverEvent Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qhoverevent.xml">QHoverEvent</db:link> class contains parameters that describe a mouse event.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QHoverEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qsinglepointevent.xml" xlink:role="class">QSinglePointEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QHoverEvent is part of <db:simplelist><db:member>events</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Mouse events occur when a mouse cursor is moved into, out of, or within a widget, and if the widget has the <db:link xlink:href="qt.xml#WidgetAttribute-enum">Qt::WA_Hover</db:link> attribute.</db:para>
<db:para>The function pos() gives the current cursor position, while <db:link xlink:href="qhoverevent.xml#oldPos">oldPos</db:link>() gives the old mouse position.</db:para>
<db:para>There are a few similarities between the events <db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverEnter</db:link> and <db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverLeave</db:link>, and the events <db:link xlink:href="qevent.xml#Type-enum">QEvent::Enter</db:link> and <db:link xlink:href="qevent.xml#Type-enum">QEvent::Leave</db:link>. However, they are slightly different because we do an update() in the event handler of HoverEnter and HoverLeave.</db:para>
<db:para><db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverMove</db:link> is also slightly different from <db:link xlink:href="qevent.xml#Type-enum">QEvent::MouseMove</db:link>. Let us consider a top-level window A containing a child B which in turn contains a child C (all with mouse tracking enabled):</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/hoverevents.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Now, if you move the cursor from the top to the bottom in the middle of A, you will get the following <db:link xlink:href="qevent.xml#Type-enum">QEvent::MouseMove</db:link> events:</db:para>
<db:orderedlist numeration="arabic">
<db:listitem>
<db:para>A::MouseMove</db:para>
</db:listitem>
<db:listitem>
<db:para>B::MouseMove</db:para>
</db:listitem>
<db:listitem>
<db:para>C::MouseMove</db:para>
</db:listitem>
</db:orderedlist>
<db:para>You will get the same events for <db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverMove</db:link>, except that the event always propagates to the top-level regardless whether the event is accepted or not. It will only stop propagating with the <db:link xlink:href="qt.xml#WidgetAttribute-enum">Qt::WA_NoMousePropagation</db:link> attribute.</db:para>
<db:para>In this case the events will occur in the following way:</db:para>
<db:orderedlist numeration="arabic">
<db:listitem>
<db:para>A::HoverMove</db:para>
</db:listitem>
<db:listitem>
<db:para>A::HoverMove, B::HoverMove</db:para>
</db:listitem>
<db:listitem>
<db:para>A::HoverMove, B::HoverMove, C::HoverMove</db:para>
</db:listitem>
</db:orderedlist>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QHoverEvent-2">
<db:title>QHoverEvent::QHoverEvent(QEvent::Type <db:emphasis>type</db:emphasis>, const QPointF &amp;<db:emphasis>scenePos</db:emphasis>, const QPointF &amp;<db:emphasis>globalPos</db:emphasis>, const QPointF &amp;<db:emphasis>oldPos</db:emphasis>, Qt::KeyboardModifiers <db:emphasis>modifiers</db:emphasis> = Qt::NoModifier, const QPointingDevice *<db:emphasis>device</db:emphasis> = QPointingDevice::primaryPointingDevice())</db:title>
<db:constructorsynopsis>
<db:methodname>QHoverEvent</db:methodname>
<db:methodparam>
<db:type>QEvent::Type</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPointF &amp;</db:type>
<db:parameter>scenePos</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPointF &amp;</db:type>
<db:parameter>globalPos</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPointF &amp;</db:type>
<db:parameter>oldPos</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>Qt::KeyboardModifiers</db:type>
<db:parameter>modifiers</db:parameter>
<db:initializer>Qt::NoModifier</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>const QPointingDevice *</db:type>
<db:parameter>device</db:parameter>
<db:initializer>QPointingDevice::primaryPointingDevice()</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QHoverEvent(QEvent::Type type, const QPointF &amp;scenePos, const QPointF &amp;globalPos, const QPointF &amp;oldPos, Qt::KeyboardModifiers modifiers, const QPointingDevice *device)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a hover event object originating from <db:code role="parameter">device</db:code>.</db:para>
<db:para>The <db:code role="parameter">type</db:code> parameter must be <db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverEnter</db:link>, <db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverLeave</db:link>, or <db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverMove</db:link>.</db:para>
<db:para>The <db:code role="parameter">scenePos</db:code> is the current mouse cursor's position relative to the receiving window or scene, <db:code role="parameter">oldPos</db:code> is its previous such position, and <db:code role="parameter">globalPos</db:code> is the mouse position in absolute coordinates. <db:code role="parameter">modifiers</db:code> hold the state of all keyboard modifiers at the time of the event.</db:para>
</db:section>
<db:section xml:id="oldPos">
<db:title>QPoint QHoverEvent::oldPos() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPoint</db:type>
<db:methodname>oldPos</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPoint oldPos() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the previous position of the mouse cursor, relative to the widget that received the event. If there is no previous position, oldPos() will return the same position as pos().</db:para>
<db:para>On <db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverEnter</db:link> events, this position will always be <db:link xlink:href="qpoint.xml">QPoint</db:link>(-1, -1).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhoverevent.xml#pos" role="deprecated">pos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="oldPosF">
<db:title>QPointF QHoverEvent::oldPosF() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPointF</db:type>
<db:methodname>oldPosF</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPointF oldPosF() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the previous position of the mouse cursor, relative to the widget that received the event. If there is no previous position, oldPosF() will return the same position as posF().</db:para>
<db:para>On <db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverEnter</db:link> events, this position will always be <db:link xlink:href="qpointf.xml">QPointF</db:link>(-1, -1).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhoverevent.xml#posF" role="deprecated">posF</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for QHoverEvent</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qhoverevent.xml">QHoverEvent</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-member-function-documentation">
<db:title>Obsolete Member Function Documentation</db:title>
<db:section xml:id="QHoverEvent-3">
<db:title>QHoverEvent::QHoverEvent(QEvent::Type <db:emphasis>type</db:emphasis>, const QPointF &amp;<db:emphasis>pos</db:emphasis>, const QPointF &amp;<db:emphasis>oldPos</db:emphasis>, Qt::KeyboardModifiers <db:emphasis>modifiers</db:emphasis> = Qt::NoModifier, const QPointingDevice *<db:emphasis>device</db:emphasis> = QPointingDevice::primaryPointingDevice())</db:title>
<db:constructorsynopsis>
<db:methodname>QHoverEvent</db:methodname>
<db:methodparam>
<db:type>QEvent::Type</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPointF &amp;</db:type>
<db:parameter>pos</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPointF &amp;</db:type>
<db:parameter>oldPos</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>Qt::KeyboardModifiers</db:type>
<db:parameter>modifiers</db:parameter>
<db:initializer>Qt::NoModifier</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>const QPointingDevice *</db:type>
<db:parameter>device</db:parameter>
<db:initializer>QPointingDevice::primaryPointingDevice()</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">3</db:synopsisinfo>
<db:synopsisinfo role="signature">QHoverEvent(QEvent::Type type, const QPointF &amp;pos, const QPointF &amp;oldPos, Qt::KeyboardModifiers modifiers, const QPointingDevice *device)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>This function is deprecated since 6.3. We strongly advise against using it in new code.</db:para>
<db:para>Use the other constructor instead (global position is required).</db:para>
<db:para>Constructs a hover event object originating from <db:code role="parameter">device</db:code>.</db:para>
<db:para>The <db:code role="parameter">type</db:code> parameter must be <db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverEnter</db:link>, <db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverLeave</db:link>, or <db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverMove</db:link>.</db:para>
<db:para>The <db:code role="parameter">pos</db:code> is the current mouse cursor's position relative to the receiving widget, while <db:code role="parameter">oldPos</db:code> is its previous such position. <db:code role="parameter">modifiers</db:code> hold the state of all keyboard modifiers at the time of the event.</db:para>
</db:section>
<db:section xml:id="pos">
<db:title>QPoint QHoverEvent::pos() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPoint</db:type>
<db:methodname>pos</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPoint pos() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function is deprecated since 6.0. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qsinglepointevent.xml#position">position</db:link>().toPoint() instead.</db:para>
<db:para>Returns the position of the mouse cursor, relative to the widget that received the event.</db:para>
<db:para>On <db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverLeave</db:link> events, this position will always be <db:link xlink:href="qpoint.xml">QPoint</db:link>(-1, -1).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhoverevent.xml#oldPos">oldPos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="posF">
<db:title>QPointF QHoverEvent::posF() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPointF</db:type>
<db:methodname>posF</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPointF posF() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function is deprecated since 6.0. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qsinglepointevent.xml#position">position</db:link>() instead.</db:para>
<db:para>Returns the position of the mouse cursor, relative to the widget that received the event.</db:para>
<db:para>On <db:link xlink:href="qevent.xml#Type-enum">QEvent::HoverLeave</db:link> events, this position will always be <db:link xlink:href="qpointf.xml">QPointF</db:link>(-1, -1).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhoverevent.xml#oldPosF">oldPosF</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:section>
</db:article>
