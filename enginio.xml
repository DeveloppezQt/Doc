<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Enginio Namespace</db:title>
<db:productname>QtEnginio</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Client library for Enginio</db:titleabbrev>
<db:abstract>
<db:para>The Enginio namespace provides enums used throughout Enginio.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Enginio</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Enginio is part of <db:simplelist><db:member>enginio-namespace</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="type-documentation">
<db:title>Type Documentation</db:title>
<db:section xml:id="AuthenticationState-enum">
<db:title>enum Enginio::AuthenticationState</db:title>
<db:para>This enum describes the state of the user authentication.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::NotAuthenticated</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>No attempt to authenticate was made</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::Authenticating</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Authentication request has been sent to the server</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::Authenticated</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Authentication was successful</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::AuthenticationFailure</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Authentication failed</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-enginio-enginioclient.xml#authenticationState-prop">EnginioClient::authenticationState</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="ErrorType-enum">
<db:title>enum Enginio::ErrorType</db:title>
<db:para>Describes the type of error that occured when making a request to the Enginio backend.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::NoError</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The reply returned without errors</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::NetworkError</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The error was a networking problem</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::BackendError</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The backend did not accept the query</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="Operation-enum">
<db:title>enum Enginio::Operation</db:title>
<db:para>Enginio has a unified API for several <db:code>operations</db:code>. For example when using query(), the default is <db:code>ObjectOperation</db:code>, which means that the query will return objects from the database. When passing in UserOperation instead, the query will return users.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::ObjectOperation</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Operate on objects</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::AccessControlOperation</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Operate on the ACL</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::FileOperation</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>Operate with files</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::UserOperation</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Operate on users</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::UsergroupOperation</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Operate on groups</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::UsergroupMembersOperation</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>Operate on group members</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="Role-enum">
<db:title>enum Enginio::Role</db:title>
<db:para><db:link xlink:href="enginiomodel.xml">EnginioModel</db:link> defines roles which represent data used by every object stored in the Enginio backend</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::CreatedAtRole</db:code></db:para>
</db:td>
<db:td><db:code>258</db:code></db:td>
<db:td>
<db:para><db:code>When</db:code> an item was created</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::UpdatedAtRole</db:code></db:para>
</db:td>
<db:td><db:code>259</db:code></db:td>
<db:td>
<db:para><db:code>When</db:code> an item was updated last time</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::IdRole</db:code></db:para>
</db:td>
<db:td><db:code>260</db:code></db:td>
<db:td>
<db:para><db:code>What</db:code> is the id of an item</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::ObjectTypeRole</db:code></db:para>
</db:td>
<db:td><db:code>261</db:code></db:td>
<db:td>
<db:para><db:code>What</db:code> is item type</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::SyncedRole</db:code></db:para>
</db:td>
<db:td><db:code>Qt::UserRole + 1</db:code></db:td>
<db:td>
<db:para><db:code>Mark</db:code> if an item is in sync with the backend</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::CustomPropertyRole</db:code></db:para>
</db:td>
<db:td><db:code>Qt::UserRole + 10</db:code></db:td>
<db:td>
<db:para><db:code>The</db:code> first role id that may be used for dynamically created roles.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="enginio.xml">Enginio</db:link></db:emphasis>::JsonObjectRole</db:code></db:para>
</db:td>
<db:td><db:code>262</db:code></db:td>
<db:td>
<db:para><db:code>Object</db:code> like representation of an item</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Additionally <db:link xlink:href="enginiomodel.xml">EnginioModel</db:link> supports dynamic roles which are mapped directly from received data. <db:link xlink:href="enginiomodel.xml">EnginioModel</db:link> is mapping an item's properties to role names.</db:para>
<db:note>
<db:para>Some objects may not contain value for a static role, it may happen for example when an item is not in sync with the backend.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractitemmodel.xml#roleNames">QAbstractItemModel::roleNames</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
