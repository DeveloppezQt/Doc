<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Qml C++ Classes</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Qml Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The C++ API provided by the Qt Qml module.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The C++ API provided by the Qt Qml module.</db:para>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="qjsengine.xml" xlink:role="class">QJSEngine</db:link></db:term>
<db:listitem>
<db:para>The QJSEngine class provides an environment for evaluating JavaScript code.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsmanagedvalue.xml" xlink:role="class">QJSManagedValue</db:link></db:term>
<db:listitem>
<db:para>QJSManagedValue represents a value on the JavaScript heap belonging to a QJSEngine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsprimitivenull.xml" xlink:role="class">QJSPrimitiveNull</db:link></db:term>
<db:listitem>
<db:para>An empty marker type to signify the JavaScript null value.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsprimitiveundefined.xml" xlink:role="class">QJSPrimitiveUndefined</db:link></db:term>
<db:listitem>
<db:para>An empty marker type to signify the JavaScript Undefined type and its single value.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsprimitivevalue.xml" xlink:role="class">QJSPrimitiveValue</db:link></db:term>
<db:listitem>
<db:para>The QJSPrimitiveValue class operates on primitive types in JavaScript semantics.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsvalue.xml" xlink:role="class">QJSValue</db:link></db:term>
<db:listitem>
<db:para>The QJSValue class acts as a container for Qt/JavaScript data types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qjsvalueiterator.xml" xlink:role="class">QJSValueIterator</db:link></db:term>
<db:listitem>
<db:para>The QJSValueIterator class provides a Java-style iterator for QJSValue.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlabstracturlinterceptor.xml" xlink:role="class">QQmlAbstractUrlInterceptor</db:link></db:term>
<db:listitem>
<db:para>allows you to control QML file loading.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlapplicationengine.xml" xlink:role="class">QQmlApplicationEngine</db:link></db:term>
<db:listitem>
<db:para>QQmlApplicationEngine provides a convenient way to load an application from a single QML file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlcomponent.xml" xlink:role="class">QQmlComponent</db:link></db:term>
<db:listitem>
<db:para>The QQmlComponent class encapsulates a QML component definition.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlcontext.xml" xlink:role="class">QQmlContext</db:link></db:term>
<db:listitem>
<db:para>The QQmlContext class defines a context within a QML engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlcontext-propertypair.xml" xlink:role="class">QQmlContext::PropertyPair</db:link></db:term>
<db:listitem>
<db:para></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlengine.xml" xlink:role="class">QQmlEngine</db:link></db:term>
<db:listitem>
<db:para>The QQmlEngine class provides an environment for instantiating QML components.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlengineextensionplugin.xml" xlink:role="class">QQmlEngineExtensionPlugin</db:link></db:term>
<db:listitem>
<db:para>The QQmlEngineExtensionPlugin class provides an abstract base for custom QML extension plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlerror.xml" xlink:role="class">QQmlError</db:link></db:term>
<db:listitem>
<db:para>The QQmlError class encapsulates a QML error.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlexpression.xml" xlink:role="class">QQmlExpression</db:link></db:term>
<db:listitem>
<db:para>The QQmlExpression class evaluates JavaScript in a QML context.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlextensionplugin.xml" xlink:role="class">QQmlExtensionPlugin</db:link></db:term>
<db:listitem>
<db:para>The QQmlExtensionPlugin class provides an abstract base for custom QML extension plugins with custom type registration functions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlfile.xml" xlink:role="class">QQmlFile</db:link></db:term>
<db:listitem>
<db:para>The QQmlFile class provides static utility methods to categorize URLs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlfileselector.xml" xlink:role="class">QQmlFileSelector</db:link></db:term>
<db:listitem>
<db:para>A class for applying a QFileSelector to QML file loading.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlimageproviderbase.xml" xlink:role="class">QQmlImageProviderBase</db:link></db:term>
<db:listitem>
<db:para>The QQmlImageProviderBase class is used to register image providers in the QML engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlincubationcontroller.xml" xlink:role="class">QQmlIncubationController</db:link></db:term>
<db:listitem>
<db:para>QQmlIncubationController instances drive the progress of QQmlIncubators.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlincubator.xml" xlink:role="class">QQmlIncubator</db:link></db:term>
<db:listitem>
<db:para>The QQmlIncubator class allows QML objects to be created asynchronously.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlinfo.xml" xlink:role="class">QQmlInfo</db:link></db:term>
<db:listitem>
<db:para>The QQmlInfo class allows logging of QML-related messages.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmllistproperty.xml" xlink:role="class">QQmlListProperty</db:link></db:term>
<db:listitem>
<db:para>The QQmlListProperty class allows applications to expose list-like properties of QObject-derived classes to QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmllistreference.xml" xlink:role="class">QQmlListReference</db:link></db:term>
<db:listitem>
<db:para>The QQmlListReference class allows the manipulation of QQmlListProperty properties.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlnetworkaccessmanagerfactory.xml" xlink:role="class">QQmlNetworkAccessManagerFactory</db:link></db:term>
<db:listitem>
<db:para>The QQmlNetworkAccessManagerFactory class creates QNetworkAccessManager instances for a QML engine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlparserstatus.xml" xlink:role="class">QQmlParserStatus</db:link></db:term>
<db:listitem>
<db:para>The QQmlParserStatus class provides updates on the QML parser state.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlproperty.xml" xlink:role="class">QQmlProperty</db:link></db:term>
<db:listitem>
<db:para>The QQmlProperty class abstracts accessing properties on objects created from QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlpropertymap.xml" xlink:role="class">QQmlPropertyMap</db:link></db:term>
<db:listitem>
<db:para>The QQmlPropertyMap class allows you to set key-value pairs that can be used in QML bindings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlpropertyvaluesource.xml" xlink:role="class">QQmlPropertyValueSource</db:link></db:term>
<db:listitem>
<db:para>The QQmlPropertyValueSource class is an interface for property value sources such as animations and bindings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qqmlscriptstring.xml" xlink:role="class">QQmlScriptString</db:link></db:term>
<db:listitem>
<db:para>The QQmlScriptString class encapsulates a script and its context.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>For more information on the Qt Qml module, see the <db:link xlink:href="qtqml-index.xml">Qt Qml</db:link> module documentation.</db:para>
</db:section>
</db:article>
