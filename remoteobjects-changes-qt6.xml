<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Changes to Qt Remote Objects</db:title>
<db:productname>QtRemoteObjects</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Remote Objects Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Migrate Qt Remote Objects to Qt 6.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt 6 is a result of the conscious effort to make the framework more efficient and easy to use.</db:para>
<db:para>We try to maintain binary and source compatibility for all the public APIs in each release. But some changes were inevitable in an effort to make Qt a better framework.</db:para>
<db:para>In this topic we summarize those changes in Qt Remote Objects, and provide guidance to handle them.</db:para>
<db:section xml:id="api-changes">
<db:title>API changes</db:title>
<db:section xml:id="functions-taking-const-ref-qstring-changing-to-qstringview">
<db:title>Functions taking const-ref QString changing to QStringView</db:title>
<db:para><db:link xlink:href="qremoteobjecthostbase.xml#proxy">QRemoteObjectHostBase::proxy</db:link>, <db:link xlink:href="qremoteobjecthostbase.xml#reverseProxy">QRemoteObjectHostBase::reverseProxy</db:link> and <db:link xlink:href="qremoteobjectnode.xml#instances">QRemoteObjectNode::instances</db:link> now accept a <db:link xlink:href="qstringview.xml">QStringView</db:link> instead of <db:code>const QString &amp;</db:code>. The largest difference caused by this is that it no longer accepts implicit conversion from string literals (i.e. <db:code>node.instances(&quot;abc&quot;);</db:code>). Instead, you could use a UTF-16 string literal (<db:code>node.instances(u&quot;abc&quot;)</db:code>).</db:para>
</db:section>
<db:section xml:id="changes-to-classes-for-custom-transport-backend-support">
<db:title>Changes to classes for custom transport backend support</db:title>
<db:para>The &quot;semi-private&quot; <db:code>IoDeviceBase</db:code>, <db:code>ServerIoDevice</db:code>, and <db:code>ClientIoDevice</db:code> classes are now renamed to <db:code>QtROIoDeviceBase</db:code>, <db:code>QtROServerIoDevice</db:code>, and <db:code>QtROClientIoDevice</db:code> respectively, to be consistent with naming in Qt. They are also moved from the private <db:code>qconnectionfactories_p.h</db:code> header to <db:code>qconnectionfactories.h</db:code>.</db:para>
<db:note>
<db:para>These classes are provided to give more flexibility for implementing custom communication protocols for Qt Remote Objects, but there are no source or binary compatibility guarantees for them. We recommend using the <db:link xlink:href="qremoteobjectnode.xml#addClientSideConnection">QRemoteObjectNode::addClientSideConnection</db:link>() and <db:link xlink:href="qremoteobjecthostbase.xml#addHostSideConnection">QRemoteObjectHostBase::addHostSideConnection</db:link>() methods, if you need support for <db:link xlink:href="qtremoteobjects-external-schemas.xml#external-qiodevices">external</db:link> communication channels.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="cmake-changes">
<db:title>CMake changes</db:title>
<db:para>The <db:code>cmake</db:code> instructions for calling <db:link xlink:href="qtremoteobjects-repc.xml">repc</db:link> and adding the generated <db:code>.rep</db:code> files to a CMake project have slightly changed. Instead of the <db:code>qt5_generate_repc</db:code> macro, you should now use <db:code>qt6_add_repc_sources</db:code>, <db:code>qt6_add_repc_replicas</db:code> and <db:code>qt6_add_repc_merged</db:code> functions. For example, the following code:</db:para>
<db:programlisting language="cpp">set(SOURCES
    main.cpp
    simpleswitch.cpp
)

qt5_generate_repc(SOURCES simpleswitch.rep SOURCE)
add_executable(directconnectserver ${SOURCES})
</db:programlisting>
<db:para>Should change to:</db:para>
<db:programlisting language="cpp">set(SOURCES
    main.cpp
    simpleswitch.cpp
)
add_executable(directconnectserver ${SOURCES})
qt6_add_repc_sources(directconnectserver simpleswitch.rep)
</db:programlisting>
<db:para>More detailed descriptions for these CMake functions can be found <db:link xlink:href="qtremoteobjects-repc.xml#cmake-functions">here</db:link>.</db:para>
</db:section>
</db:article>
