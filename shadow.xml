<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Windows CE - Using shadow builds</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>How to create a shadow build for Qt for Windows CE.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>While developing for Windows CE you might want to compile a version of Qt for several different platforms and SDKs. In order to create those different builds of Qt you do not have to copy the whole Qt package or the Qt source. You are able to create multiple Qt builds from a single source tree. Such builds are called shadow builds.</db:para>
<db:para>Basically a shadow build is created by calling configure.exe from a different directory.</db:para>
<db:para>To make sure that the shadow build compiles correctly it is important that you following these guidelines:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>The original Qt source package must be left untouched - configure must never have been run in the source tree directory.</db:para>
</db:listitem>
<db:listitem>
<db:para>With Qt5, the code has to be checked out of the git repository, otherwise the out of source build will fail as syncqt is not executed.</db:para>
</db:listitem>
<db:listitem>
<db:para>Avoid using &quot;release&quot; and &quot;debug&quot; in the path to the shadow build directory. (This is an internal limitation of the build system.)</db:para>
</db:listitem>
<db:listitem>
<db:para>Perl has been installed on your system. (<db:link xlink:href="http://www.activestate.com/Products/activeperl/index.mhtml">ActivePerl</db:link> is a popular distribution of Perl on Windows.)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>So lets assume you have installed Qt in C:\Qt\%VERSION% and you want to create a shadow build in C:\Qt\mobile5-shadow:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Make sure the environment variables for your compiler are set.</db:para>
<db:para>Visual Studio includes vcvars32.bat for that purpose - or simply use the &quot;Visual Studio Command Prompt&quot; from the Start menu.</db:para>
</db:listitem>
<db:listitem>
<db:para>Now navigate to your shadow build directory and run configure:</db:para>
<db:programlisting language="cpp">cd c:\Qt\mobile5-shadow
C:\Qt\%VERSION%\configure.exe -xplatform wincewm50pocket-msvc2005 -prefix %INSTALLDIR%
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>Finally, to build the shadow build type:</db:para>
<db:programlisting language="cpp">nmake
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>That's all. You have successfully created a shadow build of Qt in C:\Qt\mobile5-shadow.</db:para>
</db:listitem>
<db:listitem>
<db:para>Now you can call nmake install and get a clean installation of Qt in <db:emphasis>%INSTALLDIR%</db:emphasis>.</db:para>
</db:listitem>
</db:itemizedlist>
</db:article>
