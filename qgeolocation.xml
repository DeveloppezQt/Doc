<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGeoLocation Class</db:title>
<db:productname>QtPositioning</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Positioning Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgeolocation.xml">QGeoLocation</db:link> class represents basic information about a location.</db:para>
<db:para>This class was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGeoLocation</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += positioning</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGeoLocation is part of <db:simplelist><db:member>QtPositioning-positioning</db:member><db:member>QtLocation-places</db:member><db:member>QtLocation-places-data</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qgeolocation.xml">QGeoLocation</db:link> consists of a coordinate and corresponding address, along with an optional bounding box which is the recommended region to be displayed when viewing the location.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGeoLocation">
<db:title>QGeoLocation::QGeoLocation()</db:title>
<db:para>Constructs an new location object.</db:para>
</db:section>
<db:section xml:id="QGeoLocation-1">
<db:title>QGeoLocation::QGeoLocation(const QGeoLocation &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code></db:para>
</db:section>
<db:section xml:id="dtor.QGeoLocation">
<db:title>[noexcept] QGeoLocation::~QGeoLocation()</db:title>
<db:para>Destroys the location object.</db:para>
</db:section>
<db:section xml:id="address">
<db:title>QGeoAddress QGeoLocation::address() const</db:title>
<db:para>Returns the address of the location.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeolocation.xml#setAddress">setAddress</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="boundingBox">
<db:title>QGeoRectangle QGeoLocation::boundingBox() const</db:title>
<db:para>Returns a bounding box which represents the recommended region to display when viewing this location.</db:para>
<db:para>For example, a building's location may have a region centered around the building, but the region is large enough to show it's immediate surrounding geographical context.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeolocation.xml#setBoundingBox">setBoundingBox</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="coordinate">
<db:title>QGeoCoordinate QGeoLocation::coordinate() const</db:title>
<db:para>Returns the coordinate of the location.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeolocation.xml#setCoordinate">setCoordinate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isEmpty">
<db:title>bool QGeoLocation::isEmpty() const</db:title>
<db:para>Returns true if all fields of the location are 0; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="setAddress">
<db:title>void QGeoLocation::setAddress(const QGeoAddress &amp;<db:emphasis>address</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">address</db:code> of the location.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeolocation.xml#address">address</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBoundingBox">
<db:title>void QGeoLocation::setBoundingBox(const QGeoRectangle &amp;<db:emphasis>boundingBox</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">boundingBox</db:code> of the location.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeolocation.xml#boundingBox">boundingBox</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCoordinate">
<db:title>void QGeoLocation::setCoordinate(const QGeoCoordinate &amp;<db:emphasis>coordinate</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">coordinate</db:code> of the location.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeolocation.xml#coordinate">coordinate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QGeoLocation::operator!=(const QGeoLocation &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if this location is not equal to <db:code role="parameter">other</db:code>, otherwise returns false.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QGeoLocation &amp;QGeoLocation::operator=(const QGeoLocation &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns <db:code role="parameter">other</db:code> to this location and returns a reference to this location.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QGeoLocation::operator==(const QGeoLocation &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if this location is equal to <db:code role="parameter">other</db:code>, otherwise returns false.</db:para>
</db:section>
</db:section>
</db:article>
