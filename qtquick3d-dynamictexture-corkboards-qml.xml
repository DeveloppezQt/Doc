<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick 3D - Dynamic Texture Example</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates how to use a 2D layer as a 3D texture.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">// Copyright (C) 2019 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR BSD-3-Clause

import QtQuick
import &quot;content&quot;

Rectangle {
    width: 500; height: 700
    color: &quot;#464646&quot;

    ListModel {
        id: list

        ListElement {
            name: &quot;Panel One&quot;
            notes: [
                ListElement { noteText: &quot;Tap to edit&quot; },
                ListElement { noteText: &quot;Drag to move&quot; },
                ListElement { noteText: &quot;Flick to scroll&quot; },
                ListElement { noteText: &quot;Swipe to next panel&quot; }
            ]
        }

        ListElement {
            name: &quot;Panel Two&quot;
            notes: [
                ListElement { noteText: &quot;To open the doors, just click them&quot; },
                ListElement { noteText: &quot;We have one more panel&quot; }

            ]
        }

        ListElement {
            name: &quot;Panel Three&quot;
            notes: [
                ListElement { noteText: &quot;You can close them by re-clicking&quot; }
            ]
        }
    }

    ListView {
        id: flickable

        anchors.fill: parent
        focus: true
        highlightRangeMode: ListView.StrictlyEnforceRange
        orientation: ListView.Horizontal
        snapMode: ListView.SnapOneItem
        model: list
        delegate: Panel { objectName: name }
    }
}

</db:programlisting>
</db:article>
