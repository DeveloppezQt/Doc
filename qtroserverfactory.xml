<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QtROServerFactory Class</db:title>
<db:productname>QtRemoteObjects</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Remote Objects Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A class that holds information about server backends available on the Qt Remote Objects network.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QtROServerFactory</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS RemoteObjects)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::RemoteObjects)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += remoteobjects</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="qRegisterRemoteObjectsServer">
<db:title>void qRegisterRemoteObjectsServer(const QString &amp;<db:emphasis>id</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>qRegisterRemoteObjectsServer</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>id</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void qRegisterRemoteObjectsServer(const QString &amp;id)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Registers the Remote Objects server <db:code role="parameter">id</db:code> for the type <db:code>T</db:code>.</db:para>
<db:para>If you need a custom transport protocol for Qt Remote Objects, you need to register the client &amp; server implementation here.</db:para>
<db:note>
<db:para>This function requires that <db:code>T</db:code> is a fully defined type at the point where the function is called.</db:para>
</db:note>
<db:para>This example registers the class <db:code>CustomServerImpl</db:code> as <db:code>&quot;myprotocol&quot;</db:code>:</db:para>
<db:programlisting language="cpp">qRegisterRemoteObjectsServer&amp;lt;CustomServerImpl&amp;gt;(QStringLiteral(&quot;myprotocol&quot;));
</db:programlisting>
<db:para>With this in place, you can now instantiate nodes using this new custom protocol:</db:para>
<db:programlisting language="cpp">QRemoteObjectNode client(QUrl(QStringLiteral(&quot;myprotocol:registry&quot;)));
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member>qRegisterRemoteObjectsServer</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
