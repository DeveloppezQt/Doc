<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QEglFSFunctions Class</db:title>
<db:productname>QtPlatformHeaders</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Platform Headers Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qeglfsfunctions.xml">QEglFSFunctions</db:link> class is an inline class containing platform-specific functionality for the eglfs platform plugin that is typically used on systems running Embedded Linux or Android.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QEglFSFunctions</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:note>
<db:para>There is no binary compatibility guarantee for this class, meaning that an application using it is only guaranteed to work with the Qt version it was developed against.</db:para>
</db:note>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="LoadKeymapType-typedef">
<db:title>QEglFSFunctions::LoadKeymapType</db:title>
<db:typedefsynopsis>
<db:typedefname>LoadKeymapType</db:typedefname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:typedefsynopsis>
<db:para>Function type for <db:link xlink:href="qeglfsfunctions.xml#loadKeymap">loadKeymap</db:link>.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="loadKeymap">
<db:title>[static] void QEglFSFunctions::loadKeymap(const QString &amp;<db:emphasis>filename</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:void/>
<db:methodname>loadKeymap</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>filename</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void loadKeymap(const QString &amp;filename)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Loads and switches to the keymap from <db:code role="parameter">filename</db:code>. When <db:code role="parameter">filename</db:code> is empty, the default keymap, which is either the built-on one or the keymap given in the plugin specification, is restored.</db:para>
<db:note>
<db:para>This is functional only when the evdev keyboard support code is compiled in to the platform plugin. When using external generic plugins via the <db:code>-plugin</db:code> argument, or when the environment variable <db:code>QT_QPA_EGLFS_DISABLE_INPUT</db:code> is set or when building Qt without evdev support, this function will have no effect.</db:para>
</db:note>
</db:section>
<db:section xml:id="loadKeymapTypeIdentifier">
<db:title>[static] QByteArray QEglFSFunctions::loadKeymapTypeIdentifier()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QByteArray</db:type>
<db:methodname>loadKeymapTypeIdentifier</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QByteArray loadKeymapTypeIdentifier()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the identifier that can be passed to <db:link xlink:href="qguiapplication.xml#platformFunction">QGuiApplication::platformFunction</db:link>() to query the entry point for the <db:link xlink:href="qeglfsfunctions.xml#loadKeymap">loadKeymap</db:link> function implementation.</db:para>
</db:section>
<db:section xml:id="switchLang">
<db:title>[static] void QEglFSFunctions::switchLang()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:void/>
<db:methodname>switchLang</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void switchLang()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Switches between English and other language when the keymap is loaded. Usually the keymap contains two languages: English and national. When you load the keymap, English is selected by default. This function allows to switch between these languages.</db:para>
<db:note>
<db:para>This is functional only when the evdev keyboard support code is compiled in to the platform plugin. When using external generic plugins via the <db:code>-plugin</db:code> argument, or when the environment variable <db:code>QT_QPA_EGLFS_DISABLE_INPUT</db:code> is set or when building Qt without evdev support, this function will have no effect.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
