<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QtShellChrome QML Type</db:title>
<db:productname>QtWaylandCompositor</db:productname>
<db:edition>Qt Wayland Compositor | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Wayland Compositor Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides default window manager functionality for use with the <db:code>qt-shell</db:code> extension.</db:para>
<db:para>This type was introduced in Qt 6.3.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtWayland.Compositor.QtShell</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.3</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link> is a convenience type that can be used to provide window manager functionality to the interaction with clients over the <db:code>qt-shell</db:code> <db:link xlink:href="qtwaylandcompositor-shellextensions.xml">shell extension protocol</db:link>.</db:para>
<db:para>Given a <db:link xlink:href="qml-qtwayland-compositor-shellsurfaceitem.xml">ShellSurfaceItem</db:link> with an associated <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link>, the item will automatically adapt its size to match the surface. It will also provide automatic handling of:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Window states, such as maximized, minimized and fullscreen.</db:para>
</db:listitem>
<db:listitem>
<db:para>Window activation.</db:para>
</db:listitem>
<db:listitem>
<db:para>Window resizing using with resize handles (if the appropriate properties are set.)</db:para>
</db:listitem>
<db:listitem>
<db:para>Window repositioning using title bar interaction (if the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml#titleBar-prop">titleBar</db:link> property is set.)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link> is intended to be used together with <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshell.xml">QtShell</db:link> and <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtwaylandcompositor-qtshell-example.xml">QtShell Compositor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="bottomLeftResizeHandle-prop">
<db:title>bottomLeftResizeHandle : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>bottomLeftResizeHandle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the default bottom-left resize handle of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link>. If set, a <db:link xlink:href="qml-qtquick-draghandler.xml">DragHandler</db:link> will be installed on the resize handle which resizes the window by moving its bottom and left edges in equal amounts.</db:para>
<db:para>The handle will automatically hide and show, depending on the window flags and the window's full screen state.</db:para>
<db:programlisting language="qml">QtShellChrome {
   Rectangle {
       id: blrh
       anchors.bottom: parent.bottom
       anchors.left: parent.left
       height: 5
       width: 5
       color: &quot;white&quot;
   }
   bottomLeftResizeHandle: blrh
}
</db:programlisting>
</db:section>
<db:section xml:id="bottomResizeHandle-prop">
<db:title>bottomResizeHandle : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>bottomResizeHandle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the default bottom resize handle of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link>. If set, a <db:link xlink:href="qml-qtquick-draghandler.xml">DragHandler</db:link> will be installed on the resize handle which resizes the window by moving its bottom edge.</db:para>
<db:para>The handle will automatically hide and show, depending on the window flags and the window's full screen state.</db:para>
<db:programlisting language="qml">QtShellChrome {
   Rectangle {
       id: brh
       anchors.bottom: parent.bottom
       anchors.left: parent.left
       anchors.right: parent.right
       height: 5
       color: &quot;white&quot;
   }
   bottomResizeHandle: brh
}
</db:programlisting>
<db:note>
<db:para>Unless explicit frame margins are set, the handle's height will be included in the window's bottom frame margin.</db:para>
</db:note>
</db:section>
<db:section xml:id="bottomRightResizeHandle-prop">
<db:title>bottomRightResizeHandle : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>bottomRightResizeHandle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the default bottom-right resize handle of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link>. If set, a <db:link xlink:href="qml-qtquick-draghandler.xml">DragHandler</db:link> will be installed on the resize handle which resizes the window by moving its bottom and right edges in equal amounts.</db:para>
<db:para>The handle will automatically hide and show, depending on the window flags and the window's full screen state.</db:para>
<db:programlisting language="qml">QtShellChrome {
   Rectangle {
       id: brrh
       anchors.bottom: parent.bottom
       anchors.right: parent.right
       height: 5
       width: 5
       color: &quot;white&quot;
   }
   bottomRightResizeHandle: brrh
}
</db:programlisting>
</db:section>
<db:section xml:id="frameMarginBottom-prop">
<db:title>frameMarginBottom : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>frameMarginBottom</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the size of the bottom margin of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link> which is reserved for window decorations. By default, this will equal the height of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml#bottomResizeHandle-prop">bottomResizeHandle</db:link> if it is set. Otherwise it will be 0.</db:para>
<db:note>
<db:para>By setting this property explicitly, all default frame margins will be overridden with their corresponding properties.</db:para>
</db:note>
</db:section>
<db:section xml:id="frameMarginLeft-prop">
<db:title>frameMarginLeft : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>frameMarginLeft</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the size of the left margin of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link> which is reserved for window decorations. By default, this will equal the width of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml#leftResizeHandle-prop">leftResizeHandle</db:link> if it is set. Otherwise it will be 0.</db:para>
<db:note>
<db:para>By setting this property explicitly, all default frame margins will be overridden with their corresponding properties.</db:para>
</db:note>
</db:section>
<db:section xml:id="frameMarginRight-prop">
<db:title>frameMarginRight : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>frameMarginRight</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the size of the right margin of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link> which is reserved for window decorations. By default, this will equal the width of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml#rightResizeHandle-prop">rightResizeHandle</db:link> if it is set. Otherwise it will be 0.</db:para>
<db:note>
<db:para>By setting this property explicitly, all default frame margins will be overridden with their corresponding properties.</db:para>
</db:note>
</db:section>
<db:section xml:id="frameMarginTop-prop">
<db:title>frameMarginTop : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>frameMarginTop</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the size of the top margin of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link> which is reserved for window decorations. By default, this will equal the sum of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml#leftResizeHandle-prop">leftResizeHandle</db:link> and the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml#titleBar-prop">titleBar</db:link>'s heights, if they are set. Otherwise it will be 0.</db:para>
<db:note>
<db:para>By setting this property explicitly, all default frame margins will be overridden with their corresponding properties.</db:para>
</db:note>
</db:section>
<db:section xml:id="hasDecorations-prop">
<db:title>hasDecorations : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>hasDecorations</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property is true if the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link>'s decorations should be visible, based on its window state and window flags.</db:para>
</db:section>
<db:section xml:id="leftResizeHandle-prop">
<db:title>leftResizeHandle : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>leftResizeHandle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the default left resize handle of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link>. If set, a <db:link xlink:href="qml-qtquick-draghandler.xml">DragHandler</db:link> will be installed on the resize handle which resizes the window by moving its left edge.</db:para>
<db:para>The handle will automatically hide and show, depending on the window flags and the window's full screen state.</db:para>
<db:programlisting language="qml">QtShellChrome {
   Rectangle {
       id: lrh
       anchors.left: parent.left
       anchors.top: parent.top
       anchors.bottom: parent.bottom
       width: 5
       color: &quot;white&quot;
   }
   leftResizeHandle: lrh
}
</db:programlisting>
<db:note>
<db:para>Unless explicit frame margins are set, the handle's width will be included in the window's left frame margin.</db:para>
</db:note>
</db:section>
<db:section xml:id="maximizedRect-prop">
<db:title>maximizedRect : rect</db:title>
<db:fieldsynopsis>
<db:type>rect</db:type>
<db:varname>maximizedRect</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the are of the <db:link xlink:href="qml-qtwayland-compositor-waylandoutput.xml">WaylandOutput</db:link> which is available to be filled by the window when it is in maximized state. By default, the window will fill the entire geometry of the <db:link xlink:href="qml-qtwayland-compositor-waylandoutput.xml">WaylandOutput</db:link> when it is maximized. Changing it can be useful for example when the compositor has other system UI which should not be obscured by maximized applications, such as a task bar.</db:para>
</db:section>
<db:section xml:id="rightResizeHandle-prop">
<db:title>rightResizeHandle : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>rightResizeHandle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the default right resize handle of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link>. If set, a <db:link xlink:href="qml-qtquick-draghandler.xml">DragHandler</db:link> will be installed on the resize handle which resizes the window by moving its right edge.</db:para>
<db:para>The handle will automatically hide and show, depending on the window flags and the window's full screen state.</db:para>
<db:programlisting language="qml">QtShellChrome {
   Rectangle {
       id: rrh
       anchors.right: parent.right
       anchors.top: parent.top
       anchors.bottom: parent.bottom
       width: 5
       color: &quot;white&quot;
   }
   rightResizeHandle: rrh
}
</db:programlisting>
<db:note>
<db:para>Unless explicit frame margins are set, the handle's width will be included in the window's right frame margin.</db:para>
</db:note>
</db:section>
<db:section xml:id="shellSurfaceItem-prop">
<db:title>shellSurfaceItem : ShellSurfaceItem</db:title>
<db:fieldsynopsis>
<db:type>ShellSurfaceItem</db:type>
<db:varname>shellSurfaceItem</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the shell surface item associated with this <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link>. It will in turn manage the <db:code>shellSurface</db:code> of this item. The <db:code>shellSurface</db:code> of the item is expected to be of the type <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link>.</db:para>
<db:programlisting language="qml">QtShellChrome {
   id: chrome
   ShellSurfaceItem {
       id: sfi
       anchors.fill: parent
       moveItem: chrome
   }
   shellSurfaceItem: sfi
}
</db:programlisting>
</db:section>
<db:section xml:id="titleBar-prop">
<db:title>titleBar : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>titleBar</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the default title bar item of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link>. If set, a <db:link xlink:href="qml-qtquick-draghandler.xml">DragHandler</db:link> will be installed on the title bar which moves the window around on user interaction. In addition, the window will automatically be activated if the title bar is clicked.</db:para>
<db:para>The title bar will automatically hide and show, depending on the window flags and the window's full screen state.</db:para>
<db:programlisting language="qml">QtShellChrome {
   Rectangle {
       id: tb
       anchors.top: parent.top
       anchors.right: parent.right
       anchors.left: parent.left
       height: 50
       color: &quot;black&quot;

       Text {
           color: &quot;white&quot;
           anchors.centerIn: parent
           text: shellSurfaceItem.shellSurface.windowTitle
           font.pixelSize: 25
       }
   }
   titleBar: tb
}
</db:programlisting>
<db:note>
<db:para>Unless explicit frame margins are set, the title bar's height will be included in the window's top frame margin.</db:para>
</db:note>
</db:section>
<db:section xml:id="topLeftResizeHandle-prop">
<db:title>topLeftResizeHandle : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>topLeftResizeHandle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the default top-left resize handle of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link>. If set, a <db:link xlink:href="qml-qtquick-draghandler.xml">DragHandler</db:link> will be installed on the resize handle which resizes the window by moving its top and left edges in equal amounts.</db:para>
<db:para>The handle will automatically hide and show, depending on the window flags and the window's full screen state.</db:para>
<db:programlisting language="qml">QtShellChrome {
   Rectangle {
       id: tlrh
       anchors.top: parent.top
       anchors.left: parent.left
       height: 5
       width: 5
       color: &quot;white&quot;
   }
   topLeftResizeHandle: tlrh
}
</db:programlisting>
</db:section>
<db:section xml:id="topResizeHandle-prop">
<db:title>topResizeHandle : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>topResizeHandle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the default top resize handle of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link>. If set, a <db:link xlink:href="qml-qtquick-draghandler.xml">DragHandler</db:link> will be installed on the resize handle which resizes the window by moving its top edge.</db:para>
<db:para>The handle will automatically hide and show, depending on the window flags and the window's full screen state.</db:para>
<db:programlisting language="qml">QtShellChrome {
   Rectangle {
       id: trh
       anchors.top: parent.top
       anchors.left: parent.left
       anchors.right: parent.right
       height: 5
       color: &quot;white&quot;
   }
   topResizeHandle: trh
}
</db:programlisting>
<db:note>
<db:para>Unless explicit frame margins are set, the handle's height will be included in the window's top frame margin.</db:para>
</db:note>
</db:section>
<db:section xml:id="topRightResizeHandle-prop">
<db:title>topRightResizeHandle : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>topRightResizeHandle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the default top-right resize handle of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link>. If set, a <db:link xlink:href="qml-qtquick-draghandler.xml">DragHandler</db:link> will be installed on the resize handle which resizes the window by moving its top and right edges in equal amounts.</db:para>
<db:para>The handle will automatically hide and show, depending on the window flags and the window's full screen state.</db:para>
<db:programlisting language="qml">QtShellChrome {
   Rectangle {
       id: trrh
       anchors.top: parent.top
       anchors.right: parent.right
       height: 5
       width: 5
       color: &quot;white&quot;
   }
   topRightResizeHandle: trrh
}
</db:programlisting>
</db:section>
<db:section xml:id="windowFlags-prop">
<db:title>windowFlags : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>windowFlags</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the window flags of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link>. They will match the <db:code>windowFlags</db:code> property of the associated <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link>, except when this is equal to Qt.Window. In this case, a set of default window flags will be used instead. The default window flags are Qt.Window, Qt.WindowMaximizeButtonHint, Qt.WindowMinimizeButtonHint and Qt.WindowCloseButtonHint.</db:para>
</db:section>
<db:section xml:id="windowState-prop">
<db:title>windowState : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>windowState</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the window state of the shell surface. It will be updated immediately when the window state is requested on the compositor-side, before this has been acknowledged by the client. Therefore, it may in brief periods differ from the shell surface's <db:code>windowState</db:code> property, which will be updated when the client has acknowledged the request.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="activate-method">
<db:title>void activate()</db:title>
<db:para>Manually activate this window. This will also raise the window.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml#raise-method">raise</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="deactivate-method">
<db:title>void deactivate()</db:title>
<db:para>Manually deactivates this window. If the window was active, this will activate the next window in the stack instead.</db:para>
</db:section>
<db:section xml:id="lower-method">
<db:title>void lower()</db:title>
<db:para>Lower this window, so that it stacks underneath other windows (except if the other window's window flags prohibit this.)</db:para>
</db:section>
<db:section xml:id="raise-method">
<db:title>void raise()</db:title>
<db:para>Raise this window, so that it stacks on top of other windows (except if the other window's flags prohibit this.)</db:para>
</db:section>
<db:section xml:id="toggleFullScreen-method">
<db:title>void toggleFullScreen()</db:title>
<db:para>Toggles between fullscreen and normal window states. This method also clears the minimized or maximized window states if either is set.</db:para>
</db:section>
<db:section xml:id="toggleMaximized-method">
<db:title>void toggleMaximized()</db:title>
<db:para>Toggles between maximized and normal states. This method also clears the minimized window state if it is set.</db:para>
</db:section>
<db:section xml:id="toggleMinimized-method">
<db:title>void toggleMinimized()</db:title>
<db:para>Toggles between minimized and normal states. This method also clears the maximized window state if it is set.</db:para>
</db:section>
</db:section>
</db:article>
