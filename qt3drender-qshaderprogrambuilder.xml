<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QShaderProgramBuilder Class</db:title>
<db:subtitle>Qt3DRender::QShaderProgramBuilder</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Generates a Shader Program content from loaded graphs.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QShaderProgramBuilder</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-shaderprogrambuilder.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qnode.xml" xlink:role="class">Qt3DCore::QNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A shader program builder consists of several different shader graphs used to generate shader code.</db:para>
<db:para>A cache of generated shader code is maintained. Generated shaders are by defaults saved in <db:link xlink:href="qstandardpaths.xml#writableLocation">QStandardPaths::writableLocation</db:link>(<db:link xlink:href="qstandardpaths.xml#StandardLocation-enum">QStandardPaths::TempLocation</db:link>)). This path can be overridden by setting environment variable QT3D_WRITABLE_CACHE_PATH to a valid writable path.</db:para>
<db:para>The use of the cache can be disabled by setting environment variable QT3D_DISABLE_SHADER_CACHE.</db:para>
<db:para>In most cases, changes made to a graph are detected by Qt 3D and a new cache entry will be generated. One case were this will not happen is when code snippets included by a graphs are changed. To work around that, clearing the cache directory or setting environment variable QT3D_REBUILD_SHADER_CACHE can be used to force shader code to be generated again.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="computeShaderCode-prop">
<db:title>[read-only] computeShaderCode : const QByteArray</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QByteArray</db:type>
<db:varname>computeShaderCode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">computeShaderCode</db:synopsisinfo>
<db:synopsisinfo role="notifier">computeShaderCodeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the generate compute shader code.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:type> <db:emphasis role="bold">computeShaderCode</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">computeShaderCodeChanged</db:emphasis>(const <db:type><db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:type> &amp;<db:emphasis>computeShaderCode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="computeShaderGraph-prop">
<db:title>computeShaderGraph : QUrl</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QUrl</db:type>
<db:varname>computeShaderGraph</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">computeShaderGraph</db:synopsisinfo>
<db:synopsisinfo role="setter">setComputeShaderGraph</db:synopsisinfo>
<db:synopsisinfo role="notifier">computeShaderGraphChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the URL to the compute shader graph used by this shader program builder.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> <db:emphasis role="bold">computeShaderGraph</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setComputeShaderGraph</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>computeShaderGraph</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">computeShaderGraphChanged</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>computeShaderGraph</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="enabledLayers-prop">
<db:title>enabledLayers : QStringList</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QStringList</db:type>
<db:varname>enabledLayers</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">enabledLayers</db:synopsisinfo>
<db:synopsisinfo role="setter">setEnabledLayers</db:synopsisinfo>
<db:synopsisinfo role="notifier">enabledLayersChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the list of layers this builder will activate on the shader graphs during code generation.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstringlist.xml">QStringList</db:link></db:type> <db:emphasis role="bold">enabledLayers</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setEnabledLayers</db:emphasis>(const <db:type><db:link xlink:href="qstringlist.xml">QStringList</db:link></db:type> &amp;<db:emphasis>layers</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">enabledLayersChanged</db:emphasis>(const <db:type><db:link xlink:href="qstringlist.xml">QStringList</db:link></db:type> &amp;<db:emphasis>layers</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="fragmentShaderCode-prop">
<db:title>[read-only] fragmentShaderCode : const QByteArray</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QByteArray</db:type>
<db:varname>fragmentShaderCode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">fragmentShaderCode</db:synopsisinfo>
<db:synopsisinfo role="notifier">fragmentShaderCodeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the generate fragment shader code.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:type> <db:emphasis role="bold">fragmentShaderCode</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">fragmentShaderCodeChanged</db:emphasis>(const <db:type><db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:type> &amp;<db:emphasis>fragmentShaderCode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="fragmentShaderGraph-prop">
<db:title>fragmentShaderGraph : QUrl</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QUrl</db:type>
<db:varname>fragmentShaderGraph</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">fragmentShaderGraph</db:synopsisinfo>
<db:synopsisinfo role="setter">setFragmentShaderGraph</db:synopsisinfo>
<db:synopsisinfo role="notifier">fragmentShaderGraphChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the URL to the fragment shader graph used by this shader program builder.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> <db:emphasis role="bold">fragmentShaderGraph</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setFragmentShaderGraph</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>fragmentShaderGraph</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">fragmentShaderGraphChanged</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>fragmentShaderGraph</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="geometryShaderCode-prop">
<db:title>[read-only] geometryShaderCode : const QByteArray</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QByteArray</db:type>
<db:varname>geometryShaderCode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">geometryShaderCode</db:synopsisinfo>
<db:synopsisinfo role="notifier">geometryShaderCodeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the generate geometry shader code.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:type> <db:emphasis role="bold">geometryShaderCode</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">geometryShaderCodeChanged</db:emphasis>(const <db:type><db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:type> &amp;<db:emphasis>geometryShaderCode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="geometryShaderGraph-prop">
<db:title>geometryShaderGraph : QUrl</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QUrl</db:type>
<db:varname>geometryShaderGraph</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">geometryShaderGraph</db:synopsisinfo>
<db:synopsisinfo role="setter">setGeometryShaderGraph</db:synopsisinfo>
<db:synopsisinfo role="notifier">geometryShaderGraphChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the URL to the geometry shader graph used by this shader program builder.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> <db:emphasis role="bold">geometryShaderGraph</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setGeometryShaderGraph</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>geometryShaderGraph</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">geometryShaderGraphChanged</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>geometryShaderGraph</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="shaderProgram-prop">
<db:title>shaderProgram : Qt3DRender::QShaderProgram*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DRender::QShaderProgram*</db:type>
<db:varname>shaderProgram</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">shaderProgram</db:synopsisinfo>
<db:synopsisinfo role="setter">setShaderProgram</db:synopsisinfo>
<db:synopsisinfo role="notifier">shaderProgramChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the shader program on which this builder generates code.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qshaderprogram.xml">Qt3DRender::QShaderProgram</db:link></db:type> *<db:emphasis role="bold">shaderProgram</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setShaderProgram</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qshaderprogram.xml">Qt3DRender::QShaderProgram</db:link></db:type> *<db:emphasis>program</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">shaderProgramChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qshaderprogram.xml">Qt3DRender::QShaderProgram</db:link></db:type> *<db:emphasis>shaderProgram</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="tessellationControlShaderCode-prop">
<db:title>[read-only] tessellationControlShaderCode : const QByteArray</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QByteArray</db:type>
<db:varname>tessellationControlShaderCode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">tessellationControlShaderCode</db:synopsisinfo>
<db:synopsisinfo role="notifier">tessellationControlShaderCodeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the generate tessellation control shader code.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:type> <db:emphasis role="bold">tessellationControlShaderCode</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">tessellationControlShaderCodeChanged</db:emphasis>(const <db:type><db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:type> &amp;<db:emphasis>tessellationControlShaderCode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="tessellationControlShaderGraph-prop">
<db:title>tessellationControlShaderGraph : QUrl</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QUrl</db:type>
<db:varname>tessellationControlShaderGraph</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">tessellationControlShaderGraph</db:synopsisinfo>
<db:synopsisinfo role="setter">setTessellationControlShaderGraph</db:synopsisinfo>
<db:synopsisinfo role="notifier">tessellationControlShaderGraphChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the URL to the tesselation control shader graph used by this shader program builder.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> <db:emphasis role="bold">tessellationControlShaderGraph</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTessellationControlShaderGraph</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>tessellationControlShaderGraph</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">tessellationControlShaderGraphChanged</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>tessellationControlShaderGraph</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="tessellationEvaluationShaderCode-prop">
<db:title>[read-only] tessellationEvaluationShaderCode : const QByteArray</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QByteArray</db:type>
<db:varname>tessellationEvaluationShaderCode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">tessellationEvaluationShaderCode</db:synopsisinfo>
<db:synopsisinfo role="notifier">tessellationEvaluationShaderCodeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the generate tessellation evaluation shader code.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:type> <db:emphasis role="bold">tessellationEvaluationShaderCode</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">tessellationEvaluationShaderCodeChanged</db:emphasis>(const <db:type><db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:type> &amp;<db:emphasis>tessellationEvaluationShaderCode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="tessellationEvaluationShaderGraph-prop">
<db:title>tessellationEvaluationShaderGraph : QUrl</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QUrl</db:type>
<db:varname>tessellationEvaluationShaderGraph</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">tessellationEvaluationShaderGraph</db:synopsisinfo>
<db:synopsisinfo role="setter">setTessellationEvaluationShaderGraph</db:synopsisinfo>
<db:synopsisinfo role="notifier">tessellationEvaluationShaderGraphChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the URL to the tesselation evaluation shader graph used by this shader program builder.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> <db:emphasis role="bold">tessellationEvaluationShaderGraph</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTessellationEvaluationShaderGraph</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>tessellationEvaluationShaderGraph</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">tessellationEvaluationShaderGraphChanged</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>tessellationEvaluationShaderGraph</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="vertexShaderCode-prop">
<db:title>[read-only] vertexShaderCode : const QByteArray</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QByteArray</db:type>
<db:varname>vertexShaderCode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">vertexShaderCode</db:synopsisinfo>
<db:synopsisinfo role="notifier">vertexShaderCodeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the generate vertex shader code.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:type> <db:emphasis role="bold">vertexShaderCode</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">vertexShaderCodeChanged</db:emphasis>(const <db:type><db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:type> &amp;<db:emphasis>vertexShaderCode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="vertexShaderGraph-prop">
<db:title>vertexShaderGraph : QUrl</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QUrl</db:type>
<db:varname>vertexShaderGraph</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">vertexShaderGraph</db:synopsisinfo>
<db:synopsisinfo role="setter">setVertexShaderGraph</db:synopsisinfo>
<db:synopsisinfo role="notifier">vertexShaderGraphChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the URL to the vertex shader graph used by this shader program builder.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> <db:emphasis role="bold">vertexShaderGraph</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setVertexShaderGraph</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>vertexShaderGraph</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">vertexShaderGraphChanged</db:emphasis>(const <db:type><db:link xlink:href="qurl.xml">QUrl</db:link></db:type> &amp;<db:emphasis>vertexShaderGraph</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:article>
