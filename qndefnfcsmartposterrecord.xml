<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QNdefNfcSmartPosterRecord Class</db:title>
<db:productname>QtNfc</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt NFC Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qndefnfcsmartposterrecord.xml">QNdefNfcSmartPosterRecord</db:link> class provides an NFC RTD-SmartPoster.</db:para>
<db:para>This class was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QNdefNfcSmartPosterRecord</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Nfc)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Nfc)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += nfc</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qndefrecord.xml" xlink:role="class">QNdefRecord</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QNdefNfcSmartPosterRecord is part of <db:simplelist><db:member>connectivity-nfc</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>RTD-SmartPoster encapsulates a Smart Poster.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Action-enum">
<db:title>enum QNdefNfcSmartPosterRecord::Action</db:title>
<db:para>This enum describes the course of action that a device should take with the content.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qndefnfcsmartposterrecord.xml">QNdefNfcSmartPosterRecord</db:link></db:emphasis>::UnspecifiedAction</db:code></db:para>
</db:td>
<db:td><db:code>-1</db:code></db:td>
<db:td>
<db:para>The action is not defined.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qndefnfcsmartposterrecord.xml">QNdefNfcSmartPosterRecord</db:link></db:emphasis>::DoAction</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Do the action (send the SMS, launch the browser, make the telephone call).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qndefnfcsmartposterrecord.xml">QNdefNfcSmartPosterRecord</db:link></db:emphasis>::SaveAction</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Save for later (store the SMS in INBOX, put the URI in a bookmark, save the telephone number in contacts).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qndefnfcsmartposterrecord.xml">QNdefNfcSmartPosterRecord</db:link></db:emphasis>::EditAction</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Open for editing (open an SMS in the SMS editor, open the URI in a URI editor, open the telephone number for editing).</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QNdefNfcSmartPosterRecord">
<db:title>QNdefNfcSmartPosterRecord::QNdefNfcSmartPosterRecord()</db:title>
<db:para>Constructs a new empty smart poster.</db:para>
</db:section>
<db:section xml:id="QNdefNfcSmartPosterRecord-2">
<db:title>QNdefNfcSmartPosterRecord::QNdefNfcSmartPosterRecord(const QNdefRecord &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a new smart poster that is a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="QNdefNfcSmartPosterRecord-1">
<db:title>QNdefNfcSmartPosterRecord::QNdefNfcSmartPosterRecord(const QNdefNfcSmartPosterRecord &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a new smart poster that is a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QNdefNfcSmartPosterRecord">
<db:title>[noexcept] QNdefNfcSmartPosterRecord::~QNdefNfcSmartPosterRecord()</db:title>
<db:para>Destroys the smart poster.</db:para>
</db:section>
<db:section xml:id="action">
<db:title>QNdefNfcSmartPosterRecord::Action QNdefNfcSmartPosterRecord::action() const</db:title>
<db:para>Returns the action from the action record if available. Otherwise <db:link xlink:href="qndefnfcsmartposterrecord.xml#Action-enum">UnspecifiedAction</db:link> is returned.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qndefnfcsmartposterrecord.xml#setAction">setAction</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addIcon">
<db:title>void QNdefNfcSmartPosterRecord::addIcon(const QNdefNfcIconRecord &amp;<db:emphasis>icon</db:emphasis>)</db:title>
<db:para>Adds an icon record <db:code role="parameter">icon</db:code> to the smart poster. If the smart poster already contains an icon record with the same type then the existing icon record is replaced.</db:para>
</db:section>
<db:section xml:id="addIcon-1">
<db:title>void QNdefNfcSmartPosterRecord::addIcon(const QByteArray &amp;<db:emphasis>type</db:emphasis>, const QByteArray &amp;<db:emphasis>data</db:emphasis>)</db:title>
<db:para>Adds an icon record with type <db:code role="parameter">type</db:code> and data <db:code role="parameter">data</db:code> to the smart poster. If the smart poster already contains an icon record with the same type then the existing icon record is replaced.</db:para>
</db:section>
<db:section xml:id="addTitle">
<db:title>bool QNdefNfcSmartPosterRecord::addTitle(const QNdefNfcTextRecord &amp;<db:emphasis>text</db:emphasis>)</db:title>
<db:para>Attempts to add a title record <db:code role="parameter">text</db:code> to the smart poster. If the smart poster does not already contain a title record with the same locale as title record <db:code role="parameter">text</db:code>, then the title record is added and the function returns <db:code>true</db:code>. Otherwise <db:code>false</db:code> is returned.</db:para>
</db:section>
<db:section xml:id="addTitle-1">
<db:title>bool QNdefNfcSmartPosterRecord::addTitle(const QString &amp;<db:emphasis>text</db:emphasis>, const QString &amp;<db:emphasis>locale</db:emphasis>, QNdefNfcTextRecord::Encoding <db:emphasis>encoding</db:emphasis>)</db:title>
<db:para>Attempts to add a new title record with title <db:code role="parameter">text</db:code>, locale <db:code role="parameter">locale</db:code> and encoding <db:code role="parameter">encoding</db:code>. If the smart poster does not already contain a title record with locale <db:code role="parameter">locale</db:code>, then the title record is added and the function returns <db:code>true</db:code>. Otherwise <db:code>false</db:code> is returned.</db:para>
</db:section>
<db:section xml:id="hasAction">
<db:title>bool QNdefNfcSmartPosterRecord::hasAction() const</db:title>
<db:para>Returns <db:code>true</db:code> if the smart poster contains an action record, otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="hasIcon">
<db:title>bool QNdefNfcSmartPosterRecord::hasIcon(const QByteArray &amp;<db:emphasis>mimetype</db:emphasis> = QByteArray()) const</db:title>
<db:para>Returns <db:code>true</db:code> if the smart poster contains an icon record using the type <db:code role="parameter">mimetype</db:code>. If <db:code role="parameter">mimetype</db:code> is empty, then <db:code>true</db:code> is returned if the smart poster contains at least one icon record. In all other cases, <db:code>false</db:code> is returned.</db:para>
</db:section>
<db:section xml:id="hasSize">
<db:title>bool QNdefNfcSmartPosterRecord::hasSize() const</db:title>
<db:para>Returns <db:code>true</db:code> if the smart poster contains a size record, otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="hasTitle">
<db:title>bool QNdefNfcSmartPosterRecord::hasTitle(const QString &amp;<db:emphasis>locale</db:emphasis> = QString()) const</db:title>
<db:para>Returns <db:code>true</db:code> if the smart poster contains a title record using the locale <db:code role="parameter">locale</db:code>. If <db:code role="parameter">locale</db:code> is empty, then <db:code>true</db:code> is returned if the smart poster contains at least one title record. In all other cases, <db:code>false</db:code> is returned.</db:para>
</db:section>
<db:section xml:id="hasTypeInfo">
<db:title>bool QNdefNfcSmartPosterRecord::hasTypeInfo() const</db:title>
<db:para>Returns <db:code>true</db:code> if the smart poster contains a type record, otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="icon">
<db:title>QByteArray QNdefNfcSmartPosterRecord::icon(const QByteArray &amp;<db:emphasis>mimetype</db:emphasis> = QByteArray()) const</db:title>
<db:para>Returns the associated icon record data if the smart poster contains an icon record with MIME type <db:code role="parameter">mimetype</db:code>. If <db:code role="parameter">mimetype</db:code> is omitted or empty then the first icon's record data is returned. In all other cases, an empty array is returned.</db:para>
</db:section>
<db:section xml:id="iconCount">
<db:title>qsizetype QNdefNfcSmartPosterRecord::iconCount() const</db:title>
<db:para>Returns the number of icon records contained inside the smart poster.</db:para>
</db:section>
<db:section xml:id="iconRecord">
<db:title>QNdefNfcIconRecord QNdefNfcSmartPosterRecord::iconRecord(qsizetype <db:emphasis>index</db:emphasis>) const</db:title>
<db:para>Returns the icon record corresponding to the index <db:code role="parameter">index</db:code> inside the smart poster, where <db:code role="parameter">index</db:code> is a value between 0 and <db:link xlink:href="qndefnfcsmartposterrecord.xml#iconCount">iconCount</db:link>() - 1. Values outside of this range return an empty record.</db:para>
</db:section>
<db:section xml:id="iconRecords">
<db:title>QList&lt;QNdefNfcIconRecord&gt; QNdefNfcSmartPosterRecord::iconRecords() const</db:title>
<db:para>Returns a copy of all icon records inside the smart poster.</db:para>
</db:section>
<db:section xml:id="removeIcon">
<db:title>bool QNdefNfcSmartPosterRecord::removeIcon(const QByteArray &amp;<db:emphasis>type</db:emphasis>)</db:title>
<db:para>Attempts to remove the icon record with the type <db:code role="parameter">type</db:code> from the smart poster. Removes the record and returns <db:code>true</db:code> if the smart poster contains a matching record, otherwise <db:code>false</db:code> is returned.</db:para>
</db:section>
<db:section xml:id="removeIcon-1">
<db:title>bool QNdefNfcSmartPosterRecord::removeIcon(const QNdefNfcIconRecord &amp;<db:emphasis>icon</db:emphasis>)</db:title>
<db:para>Attempts to remove the icon record <db:code role="parameter">icon</db:code> from the smart poster. Removes the record and returns <db:code>true</db:code> if the smart poster contains a matching record, otherwise <db:code>false</db:code> is returned.</db:para>
</db:section>
<db:section xml:id="removeTitle">
<db:title>bool QNdefNfcSmartPosterRecord::removeTitle(const QNdefNfcTextRecord &amp;<db:emphasis>text</db:emphasis>)</db:title>
<db:para>Attempts to remove the title record <db:code role="parameter">text</db:code> from the smart poster. Removes the record and returns <db:code>true</db:code> if the smart poster contains a matching record, otherwise <db:code>false</db:code> is returned.</db:para>
</db:section>
<db:section xml:id="removeTitle-1">
<db:title>bool QNdefNfcSmartPosterRecord::removeTitle(const QString &amp;<db:emphasis>locale</db:emphasis>)</db:title>
<db:para>Attempts to remove a title record with the locale <db:code role="parameter">locale</db:code> from the smart poster. Removes the record and returns <db:code>true</db:code> if the smart poster contains a matching record, otherwise <db:code>false</db:code> is returned.</db:para>
</db:section>
<db:section xml:id="setAction">
<db:title>void QNdefNfcSmartPosterRecord::setAction(QNdefNfcSmartPosterRecord::Action <db:emphasis>act</db:emphasis>)</db:title>
<db:para>Sets the action record to <db:code role="parameter">act</db:code></db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qndefnfcsmartposterrecord.xml#action">action</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setIcons">
<db:title>void QNdefNfcSmartPosterRecord::setIcons(const QList&lt;QNdefNfcIconRecord&gt; &amp;<db:emphasis>icons</db:emphasis>)</db:title>
<db:para>Adds the icon record list <db:code role="parameter">icons</db:code> to the smart poster. Any existing records are overwritten.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qndefnfcsmartposterrecord.xml#hasIcon">hasIcon</db:link>()</db:member>
<db:member><db:link xlink:href="qndefnfcsmartposterrecord.xml#icon">icon</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSize">
<db:title>void QNdefNfcSmartPosterRecord::setSize(quint32 <db:emphasis>size</db:emphasis>)</db:title>
<db:para>Sets the record <db:code role="parameter">size</db:code>. The value contains the size in bytes of the object that the URI refers to.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qndefnfcsmartposterrecord.xml#size">size</db:link>()</db:member>
<db:member><db:link xlink:href="qndefnfcsmartposterrecord.xml#hasSize">hasSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTitles">
<db:title>void QNdefNfcSmartPosterRecord::setTitles(const QList&lt;QNdefNfcTextRecord&gt; &amp;<db:emphasis>titles</db:emphasis>)</db:title>
<db:para>Adds the title record list <db:code role="parameter">titles</db:code> to the smart poster. Any existing records are overwritten.</db:para>
</db:section>
<db:section xml:id="setTypeInfo">
<db:title>void QNdefNfcSmartPosterRecord::setTypeInfo(const QString &amp;<db:emphasis>type</db:emphasis>)</db:title>
<db:para>Sets the type record to <db:code role="parameter">type</db:code>. <db:code role="parameter">type</db:code> describes the type of the object referenced by <db:link xlink:href="qndefnfcsmartposterrecord.xml#uri">uri</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qndefnfcsmartposterrecord.xml#typeInfo">typeInfo</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setUri">
<db:title>void QNdefNfcSmartPosterRecord::setUri(const QNdefNfcUriRecord &amp;<db:emphasis>url</db:emphasis>)</db:title>
<db:para>Sets the URI record to <db:code role="parameter">url</db:code></db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qndefnfcsmartposterrecord.xml#uri">uri</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setUri-1">
<db:title>void QNdefNfcSmartPosterRecord::setUri(const QUrl &amp;<db:emphasis>url</db:emphasis>)</db:title>
<db:para>Constructs a URI record and sets its content inside the smart poster to <db:code role="parameter">url</db:code></db:para>
</db:section>
<db:section xml:id="size">
<db:title>quint32 QNdefNfcSmartPosterRecord::size() const</db:title>
<db:para>Returns the size from the size record if available; otherwise returns 0.</db:para>
<db:para>The value is optional and contains the size in bytes of the object that the URI refers to. It may be used by the device to determine whether it can accommodate the object.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qndefnfcsmartposterrecord.xml#setSize">setSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="title">
<db:title>QString QNdefNfcSmartPosterRecord::title(const QString &amp;<db:emphasis>locale</db:emphasis> = QString()) const</db:title>
<db:para>Returns the title record text associated with locale <db:code role="parameter">locale</db:code> if available. If <db:code role="parameter">locale</db:code> is empty then the title text of the first available record is returned. In all other cases an empty string is returned.</db:para>
</db:section>
<db:section xml:id="titleCount">
<db:title>qsizetype QNdefNfcSmartPosterRecord::titleCount() const</db:title>
<db:para>Returns the number of title records contained inside the smart poster.</db:para>
</db:section>
<db:section xml:id="titleRecord">
<db:title>QNdefNfcTextRecord QNdefNfcSmartPosterRecord::titleRecord(qsizetype <db:emphasis>index</db:emphasis>) const</db:title>
<db:para>Returns the title record corresponding to the index <db:code role="parameter">index</db:code> inside the smart poster, where <db:code role="parameter">index</db:code> is a value between 0 and <db:link xlink:href="qndefnfcsmartposterrecord.xml#titleCount">titleCount</db:link>() - 1. Values outside of this range return an empty record.</db:para>
</db:section>
<db:section xml:id="titleRecords">
<db:title>QList&lt;QNdefNfcTextRecord&gt; QNdefNfcSmartPosterRecord::titleRecords() const</db:title>
<db:para>Returns a copy of all title records inside the smart poster.</db:para>
</db:section>
<db:section xml:id="typeInfo">
<db:title>QString QNdefNfcSmartPosterRecord::typeInfo() const</db:title>
<db:para>Returns the MIME type that describes the type of the objects that can be reached via <db:link xlink:href="qndefnfcsmartposterrecord.xml#uri">uri</db:link>().</db:para>
<db:para>If the type is not known, the returned <db:link xlink:href="qstring.xml">QString</db:link> is empty.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qndefnfcsmartposterrecord.xml#setTypeInfo">setTypeInfo</db:link>()</db:member>
<db:member><db:link xlink:href="qndefnfcsmartposterrecord.xml#hasTypeInfo">hasTypeInfo</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="uri">
<db:title>QUrl QNdefNfcSmartPosterRecord::uri() const</db:title>
<db:para>Returns the URI from the smart poster's URI record if set. Otherwise an empty URI is returned.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qndefnfcsmartposterrecord.xml#setUri">setUri</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="uriRecord">
<db:title>QNdefNfcUriRecord QNdefNfcSmartPosterRecord::uriRecord() const</db:title>
<db:para>Returns the smart poster's URI record if set. Otherwise an empty URI is returned.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QNdefNfcSmartPosterRecord &amp;QNdefNfcSmartPosterRecord::operator=(const QNdefNfcSmartPosterRecord &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns the <db:code role="parameter">other</db:code> smart poster record to this record and returns a reference to this record.</db:para>
</db:section>
</db:section>
</db:article>
