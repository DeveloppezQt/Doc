<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Path Stroking</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.14.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Path Stroking example shows various types of pens that can be used with QPainter.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/pathstroke-demo.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Qt defines cap styles for how the end points are treated and join styles for how path segments are joined together. A standard set of predefined dash patterns are also included that can be used with QPen.</db:para>
<db:para>In addition to the predefined patterns available in QPen we also demonstrate direct use of the QPainterPathStroker class which can be used to define custom dash patterns. You can see this by enabling the <db:emphasis>Custom Pattern</db:emphasis> option.</db:para>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtbase.git/tree/examples/widgets/painting/pathstroke?h=5.14">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
