<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Adding OpenSSL Support</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides instructions to package OpenSSL libraries with your Qt application for Android.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt installation package comes with OpenSSL support but the OpenSSL libraries are not part of the package due to legal restrictions in some countries. If your application depends on OpenSSL, consider packaging the SSL libraries with your Application Package (APK) as the target device may or may not have them. You can use the <db:link xlink:href="qsslsocket.xml#supportsSsl">QSslSocket::supportsSsl</db:link>() static function to check for SSL support on the target.</db:para>
<db:para>The following instructions guide you to build and add the OpenSSL libraries to the APK:</db:para>
<db:orderedlist numeration="arabic">
<db:listitem>
<db:para>Download the latest OpenSSL sources from <db:link xlink:href="http://www.openssl.org/source">http://www.openssl.org/source</db:link>.</db:para>
</db:listitem>
<db:listitem>
<db:para>Extract the sources to a folder and navigate to that folder using the CLI.</db:para>
<db:note>
<db:para>If your development platform is Windows, you need msys with perl v5.14 or later to build OpenSSL.</db:para>
</db:note>
</db:listitem>
<db:listitem>
<db:para>Set the following environment variables to point to the ARM compiler toolchain and sysroot you want to use:</db:para>
<db:programlisting language="cpp" role="bad">CC=&lt;ANDROID_NDK_PATH&gt;/toolchains/arm-linux-androideabi-&lt;VER&gt;/prebuilt/&lt;NDK_HOST&gt;/bin/arm-linux-androideabi-gcc
AR=&lt;ANDROID_NDK_PATH&gt;/toolchains/arm-linux-androideabi-&lt;VER&gt;/prebuilt/&lt;NDK_HOST&gt;/bin/arm-linux-androideabi-ar
ANDROID_DEV=&lt;ANDROID_NDK_PATH&gt;/platforms/android-9/arch-arm/usr
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>Configure the OpenSSL sources to build for Android (ARMv5 or ARMv7) using the following command:</db:para>
<db:programlisting language="cpp" role="bad">./Configure shared android or android-armv7
</db:programlisting>
<db:note>
<db:para>You must consider enabling/disabling the SSL features based on the legal restrictions in the region where your application is available. See the <db:link xlink:href="http://wiki.openssl.org/index.php/Compilation_and_Installation#Configure_Options">SSL configure options</db:link> for details about the configurable features.</db:para>
</db:note>
</db:listitem>
<db:listitem>
<db:para>Edit the <db:emphasis>Makefile</db:emphasis> created by <db:emphasis>Configure</db:emphasis> to avoid having shared library names with the version number. Android does not load a library with version number in the .so file name.</db:para>
<db:orderedlist numeration="loweralpha">
<db:listitem>
<db:para>Open the <db:emphasis>Makefile</db:emphasis> using an editor.</db:para>
</db:listitem>
<db:listitem>
<db:para>Replace the following two lines that appear under &quot;<db:emphasis>link-shared</db:emphasis>&quot; and &quot;<db:emphasis>do_$(SHLIB_TARGET)</db:emphasis>&quot; make targets:</db:para>
<db:programlisting language="cpp" role="bad">LIBNAME=$$i LIBVERSION=$(SHLIB_MAJOR).$(SHLIB_MINOR) \
LIBCOMPATVERSIONS=&quot;;$(SHLIB_VERSION_HISTORY)&quot; \
           </db:programlisting>
<db:para>with</db:para>
<db:programlisting language="cpp" role="bad">LIBNAME=$$i \
          </db:programlisting>
</db:listitem>
<db:listitem>
<db:para>Save changes to the <db:emphasis>Makefile</db:emphasis> and close it.</db:para>
</db:listitem>
</db:orderedlist>
</db:listitem>
<db:listitem>
<db:para>Run make build_libs to build the libcrypto and libssl shared libraries.</db:para>
</db:listitem>
<db:listitem>
<db:para>Open your Qt project using Qt Creator and update the &quot;Build Android APK&quot; settings to add <db:emphasis>libcrypto</db:emphasis> and <db:emphasis>libssl</db:emphasis> as additional libraries for your project.</db:para>
</db:listitem>
<db:listitem>
<db:para>Run your application to see it running on the device.</db:para>
</db:listitem>
</db:orderedlist>
<db:para>Qt Creator builds your application and creates an application package (APK) with the OpenSSL libraries bundled in it. Once the APK is ready, it uses adb to deploy the APK on the target you chose and launch the application.</db:para>
</db:article>
