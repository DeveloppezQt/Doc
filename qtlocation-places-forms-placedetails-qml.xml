<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Places (QML)</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Places example demonstrates how to search for Places and access related content.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.5
import &quot;../helper.js&quot; as Helper

PlaceDetailsForm {

    property variant place
    property real distanceToPlace

    signal searchForSimilar(variant place)
    signal showReviews(variant place)
    signal showEditorials(variant place)
    signal showImages(variant place)

    function placeAddress(place) {
        if (!place)
            return &quot;&quot;;

        if (place.location.address.text.length &gt; 0)
            return place.location.address.text;

        return place.location.address.street;
    }

    function categoryNames(categories) {
        var result = &quot;&quot;;

        for (var i = 0; i &lt; categories.length; ++i) {
            if (result == &quot;&quot;) {
                result = categories[i].name;
            } else {
                result = result + &quot;, &quot; + categories[i].name;
            }
        }

        return result;
    }

    function additonalInformation(place) {
        var keys = place.extendedAttributes.keys();
        var result;

        for (var i = 0; i &lt; keys.length; ++i) {
            var label = place.extendedAttributes[keys[i]].label;
            var text = place.extendedAttributes[keys[i]].text;
            if (label) {
                result += label + &quot;: &quot;
                if (text)
                    result += text
                result += &quot;&lt;br/&gt;&quot;
            }
        }

        if (!result)
            result = qsTr(&quot;No information&quot;)

        return result;
    }

    editorialsButton.onClicked: showEditorials(place)
    imagesButton.onClicked: showImages(place)
    reviewsButton.onClicked: showReviews(place)
    findSimilarButton.onClicked: searchForSimilar(place)

    Component.onCompleted: {
        placeName.text = place ? (place.favorite ? place.favorite.name : place.name) : &quot;&quot;
        placeIcon.source = place ? (place.favorite ? place.favorite.icon.url(Qt.size(40,40))
                                        : place.icon.url() == &quot;&quot; ?
                                          &quot;../resources/marker.png&quot;
                                        : place.icon.url(Qt.size(40,40))) : &quot;&quot;
        ratingView.rating = (place &amp;&amp; place.ratings) ? place.ratings.average : 0
        distance.text = Helper.formatDistance(distanceToPlace)
        address.text = placeAddress(place)
        categories.text = place ? categoryNames(place.categories) : &quot;&quot;
        phone.text = place ? place.primaryPhone : &quot;&quot;
        fax.text = place ? place.primaryFax : &quot;&quot;
        email.text = place ? place.primaryEmail : &quot;&quot;
        website.text = place ? '&lt;a href=\&quot;' + place.primaryWebsite + '\&quot;&gt;' + place.primaryWebsite + '&lt;/a&gt;' : &quot;&quot;
        addInformation.text = place ? additonalInformation(place) : &quot;&quot;
        if (place) {
            editorialsButton.enabled = Qt.binding(function(){ return place &amp;&amp; place.editorialModel.totalCount &gt; 0 })
            reviewsButton.enabled = Qt.binding(function(){ return place &amp;&amp; place.reviewModel.totalCount &gt; 0 })
            imagesButton.enabled = Qt.binding(function(){ return place &amp;&amp; place.imageModel.totalCount &gt; 0 })
            findSimilarButton.enabled = true
        }
    }
}

</db:programlisting>
</db:article>
