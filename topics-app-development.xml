<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Development Tools</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt tools for application development.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt is designed for developing applications and user interfaces once and deploying them across several desktop and mobile operating systems.</db:para>
<db:para>The easiest way to start application development with Qt is to <db:link xlink:href="http://qt.io/download">download</db:link> and install Qt. Qt installations contain Qt libraries, examples, documentation, and the necessary development tools, such as the <db:link xlink:href="https://doc.qt.io/qtcreator/index.html">Qt Creator</db:link> integrated development environment (IDE). For more information, visit the <db:link xlink:href="gettingstarted.xml">Getting Started with Qt</db:link> page.</db:para>
<db:section xml:id="qt-creator">
<db:title>Qt Creator</db:title>
<db:para><db:link xlink:href="https://doc.qt.io/qtcreator/index.html">Qt Creator</db:link> provides you with tools for accomplishing your tasks throughout the whole application development life-cycle, from creating a project to deploying the application on the target platforms. Qt Creator automates some tasks, such as creating projects, by providing wizards that guide you step-by-step through the project creation process, create the necessary files, and specify settings depending on the choices you make. Also, it speeds up some tasks, such as writing code, by offering semantic highlighting, checking code syntax, code completion, refactoring actions, and other useful features.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtcreator-qt-quick-editors.png"/>
</db:imageobject>
</db:mediaobject>
</db:section>
<db:section xml:id="design-tools">
<db:title>Design Tools</db:title>
<db:para><db:emphasis role="bold">Qt Designer</db:emphasis> is a tool within Qt Creator for designing and building graphical user interfaces (GUIs) for Qt Widgets. You can compose and customize your widgets or dialogs in a visual editor, and test them using different styles and resolutions. <db:emphasis>Qt Designer</db:emphasis> is also available as a standalone tool. Both versions of <db:emphasis>Qt Designer</db:emphasis> only differ in some functionalities such as the use of resource files and how to switch in the design and edit mode. For more information, visit the <db:link xlink:href="qtdesigner-manual.xml">Qt Designer</db:link> manual.</db:para>
<db:section xml:id="collaboration-with-designers">
<db:title>Collaboration with Designers</db:title>
<db:para>Qt lets designers import assets from imaging and design tools, such as Adobe Photoshop, Sketch, Figma, Blender, or Maya, create layouts and flows, and generate code for developers. <db:link xlink:href="https://doc.qt.io/qtdesignstudio/index.html">Qt Design Studio</db:link> is a tool that provides rich and fluid components, a code editor, timeline-based animations, visual effects, layouts, and a live-preview for prototyping. Qt Design Studio generates code for developers to use in Qt Creator. For more information about the tools for designers, visit the <db:link xlink:href="https://doc.qt.io/qtdesignstudio/index.html">Qt Design Studio</db:link> manual.</db:para>
</db:section>
</db:section>
<db:section xml:id="build-tools">
<db:title>Build Tools</db:title>
<db:para>Qt Creator creates project templates for different build systems. You can create <db:emphasis>kits</db:emphasis> for different combinations of target platforms and build environments. Qt Creator supports CMake, qmake, Qbs, Autotools, Nimble, Meson, and IncrediBuild projects.</db:para>
<db:para>For more information about project templates and building in Qt Creator, see:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="https://doc.qt.io/qtcreator/creator-project-other.html">Qt Creator: Build Systems</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="https://doc.qt.io/qtcreator/creator-building-targets.html">Qt Creator: Building for Multiple Platforms</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:section xml:id="configuring-and-building-qt">
<db:title>Configuring and Building Qt</db:title>
<db:para>You can configure and build Qt from source using <db:emphasis role="bold">CMake</db:emphasis> or <db:emphasis role="bold">qmake</db:emphasis>. Custom configurations are for developers of Qt and for porting Qt to different targets. The <db:link xlink:href="qpa.xml">Qt Platform Abstraction</db:link> is an abstraction layer to facilitate Qt ports onto different platforms and targets.</db:para>
<db:para>For more information about building Qt, see:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="cmake-manual.xml">Build with CMake</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmake-manual.xml">qmake Manual</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qpa.xml">Qt Platform Abstraction</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="supported-platforms.xml">Supported Platforms</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="internationalization-and-help-tools">
<db:title>Internationalization and Help Tools</db:title>
<db:para>You can localize your application to different languages. Use the Qt <db:link xlink:href="internationalization.xml">internationalization</db:link> framework for handling different writing systems, translating interfaces, and for displaying numbers, dates, and currency in different formats. <db:link xlink:href="qtlinguist-index.xml">Qt Linguist</db:link> is a tool for translators for translating applications. Together with release managers and developers, they produce, store, and deploy translated text in the UI.</db:para>
<db:para>For more information about internationalization and localization, see:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="internationalization.xml">Internationalization with Qt</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtlinguist-index.xml">Qt Linguist</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="i18n-source-translation.xml">Writing Source Code for Translation</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>You can use the <db:link xlink:href="qthelp-framework.xml">Qt Help</db:link> framework to create and package help files for complex applications. The help framework involves XML-based formats and tools to create content, set the order and filters for application manuals.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qthelp-framework.xml">The Qt Help Framework</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthelp-index.xml">Qt Help</db:link> C++ module</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
