<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QDialogButtonBox Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link> class is a widget that presents buttons in a layout that is appropriate to the current widget style.</db:para>
<db:para>This class was introduced in Qt 4.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDialogButtonBox</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qwidget.xml" xlink:role="class">QWidget</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QDialogButtonBox is part of <db:simplelist><db:member>dialog-classes</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Dialogs and message boxes typically present buttons in a layout that conforms to the interface guidelines for that platform. Invariably, different platforms have different layouts for their dialogs. <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link> allows a developer to add buttons to it and will automatically use the appropriate layout for the user's desktop environment.</db:para>
<db:para>Most buttons for a dialog follow certain roles. Such roles include:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Accepting or rejecting the dialog.</db:para>
</db:listitem>
<db:listitem>
<db:para>Asking for help.</db:para>
</db:listitem>
<db:listitem>
<db:para>Performing actions on the dialog itself (such as resetting fields or applying changes).</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>There can also be alternate ways of dismissing the dialog which may cause destructive results.</db:para>
<db:para>Most dialogs have buttons that can almost be considered standard (e.g. <db:guilabel>OK</db:guilabel> and <db:guilabel>Cancel</db:guilabel> buttons). It is sometimes convenient to create these buttons in a standard way.</db:para>
<db:para>There are a couple ways of using <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link>. One ways is to create the buttons (or button texts) yourself and add them to the button box, specifying their role.</db:para>
<db:programlisting language="cpp">    findButton = new QPushButton(tr(&quot;&amp;Find&quot;));
    findButton-&gt;setDefault(true);

    moreButton = new QPushButton(tr(&quot;&amp;More&quot;));
    moreButton-&gt;setCheckable(true);
    moreButton-&gt;setAutoDefault(false);

</db:programlisting>
<db:para>Alternatively, <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link> provides several standard buttons (e.g. OK, Cancel, Save) that you can use. They exist as flags so you can OR them together in the constructor.</db:para>
<db:programlisting language="cpp">    buttonBox = new QDialogButtonBox(QDialogButtonBox::Ok
                                     | QDialogButtonBox::Cancel);

    connect(buttonBox, &amp;QDialogButtonBox::accepted, this, &amp;QDialog::accept);
    connect(buttonBox, &amp;QDialogButtonBox::rejected, this, &amp;QDialog::reject);
</db:programlisting>
<db:para>You can mix and match normal buttons and standard buttons.</db:para>
<db:para>Currently the buttons are laid out in the following way if the button box is horizontal:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/buttonbox-gnomelayout-horizontal.png"/>
</db:imageobject>
</db:inlinemediaobject> <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">GnomeLayout</db:link> Horizontal</db:para>
</db:td>
<db:td>
<db:para>Button box laid out in horizontal <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">GnomeLayout</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/buttonbox-kdelayout-horizontal.png"/>
</db:imageobject>
</db:inlinemediaobject> <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">KdeLayout</db:link> Horizontal</db:para>
</db:td>
<db:td>
<db:para>Button box laid out in horizontal <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">KdeLayout</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/buttonbox-maclayout-horizontal.png"/>
</db:imageobject>
</db:inlinemediaobject> <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">MacLayout</db:link> Horizontal</db:para>
</db:td>
<db:td>
<db:para>Button box laid out in horizontal <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">MacLayout</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/buttonbox-winlayout-horizontal.png"/>
</db:imageobject>
</db:inlinemediaobject> <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">WinLayout</db:link> Horizontal</db:para>
</db:td>
<db:td>
<db:para>Button box laid out in horizontal <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">WinLayout</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The buttons are laid out the following way if the button box is vertical:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">GnomeLayout</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">KdeLayout</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">MacLayout</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">WinLayout</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/buttonbox-gnomelayout-vertical.png"/>
</db:imageobject>
</db:inlinemediaobject> <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">GnomeLayout</db:link> Vertical</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/buttonbox-kdelayout-vertical.png"/>
</db:imageobject>
</db:inlinemediaobject> <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">KdeLayout</db:link> Vertical</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/buttonbox-maclayout-vertical.png"/>
</db:imageobject>
</db:inlinemediaobject> <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">MacLayout</db:link> Vertical</db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/buttonbox-winlayout-vertical.png"/>
</db:imageobject>
</db:inlinemediaobject> <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">WinLayout</db:link> Vertical</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Additionally, button boxes that contain only buttons with <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">ActionRole</db:link> or <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">HelpRole</db:link> can be considered modeless and have an alternate look on macOS:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para>modeless horizontal <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">MacLayout</db:link></db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/buttonbox-mac-modeless-horizontal.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of modeless horizontal <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">MacLayout</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>modeless vertical <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">MacLayout</db:link></db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/buttonbox-mac-modeless-vertical.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of modeless vertical <db:link xlink:href="qdialogbuttonbox.xml#ButtonLayout-enum">MacLayout</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>When a button is clicked in the button box, the <db:link xlink:href="qdialogbuttonbox.xml#clicked">clicked</db:link>() signal is emitted for the actual button is that is pressed. For convenience, if the button has an <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">AcceptRole</db:link>, <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">RejectRole</db:link>, or <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">HelpRole</db:link>, the <db:link xlink:href="qdialogbuttonbox.xml#accepted">accepted</db:link>(), <db:link xlink:href="qdialogbuttonbox.xml#rejected">rejected</db:link>(), or <db:link xlink:href="qdialogbuttonbox.xml#helpRequested">helpRequested</db:link>() signals are emitted respectively.</db:para>
<db:para>If you want a specific button to be default you need to call <db:link xlink:href="qpushbutton.xml#default-prop">QPushButton::setDefault</db:link>() on it yourself. However, if there is no default button set and to preserve which button is the default button across platforms when using the <db:link xlink:href="qpushbutton.xml#autoDefault-prop">QPushButton::autoDefault</db:link> property, the first push button with the accept role is made the default button when the <db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link> is shown,</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmessagebox.xml">QMessageBox</db:link></db:member>
<db:member><db:link xlink:href="qpushbutton.xml">QPushButton</db:link></db:member>
<db:member><db:link xlink:href="qdialog.xml">QDialog</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="ButtonRole-enum">
<db:title>enum QDialogButtonBox::ButtonRole</db:title>
<db:para>This enum describes the roles that can be used to describe buttons in the button box. Combinations of these roles are as flags used to describe different aspects of their behavior.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>InvalidRole</db:para>
</db:td>
<db:td>
<db:para>The button is invalid.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>AcceptRole</db:para>
</db:td>
<db:td>
<db:para>Clicking the button causes the dialog to be accepted (e.g. OK).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>RejectRole</db:para>
</db:td>
<db:td>
<db:para>Clicking the button causes the dialog to be rejected (e.g. Cancel).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>DestructiveRole</db:para>
</db:td>
<db:td>
<db:para>Clicking the button causes a destructive change (e.g. for Discarding Changes) and closes the dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ActionRole</db:para>
</db:td>
<db:td>
<db:para>Clicking the button causes changes to the elements within the dialog.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>HelpRole</db:para>
</db:td>
<db:td>
<db:para>The button can be clicked to request help.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>YesRole</db:para>
</db:td>
<db:td>
<db:para>The button is a &quot;Yes&quot;-like button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>NoRole</db:para>
</db:td>
<db:td>
<db:para>The button is a &quot;No&quot;-like button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ApplyRole</db:para>
</db:td>
<db:td>
<db:para>The button applies current changes.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ResetRole</db:para>
</db:td>
<db:td>
<db:para>The button resets the dialog's fields to default values.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#StandardButton-enum">StandardButton</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="ButtonLayout-enum">
<db:title>enum QDialogButtonBox::ButtonLayout</db:title>
<db:para>This enum describes the layout policy to be used when arranging the buttons contained in the button box.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::WinLayout</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Use a policy appropriate for applications on Windows.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::MacLayout</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Use a policy appropriate for applications on macOS.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::KdeLayout</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Use a policy appropriate for applications on KDE.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::GnomeLayout</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Use a policy appropriate for applications on GNOME.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The button layout is specified by the <db:link xlink:href="qwidget.xml#style">current style</db:link>. However, on the X11 platform, it may be influenced by the desktop environment.</db:para>
</db:section>
<db:section xml:id="StandardButton-enum">
<db:title>enum QDialogButtonBox::StandardButton</db:title>
<db:bridgehead renderas="sect2">flags QDialogButtonBox::StandardButtons</db:bridgehead>
<db:para>These enums describe flags for standard buttons. Each button has a defined <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">ButtonRole</db:link>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::Ok</db:code></db:para>
</db:td>
<db:td><db:code>0x00000400</db:code></db:td>
<db:td>
<db:para>An &quot;OK&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">AcceptRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::Open</db:code></db:para>
</db:td>
<db:td><db:code>0x00002000</db:code></db:td>
<db:td>
<db:para>An &quot;Open&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">AcceptRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::Save</db:code></db:para>
</db:td>
<db:td><db:code>0x00000800</db:code></db:td>
<db:td>
<db:para>A &quot;Save&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">AcceptRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::Cancel</db:code></db:para>
</db:td>
<db:td><db:code>0x00400000</db:code></db:td>
<db:td>
<db:para>A &quot;Cancel&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">RejectRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::Close</db:code></db:para>
</db:td>
<db:td><db:code>0x00200000</db:code></db:td>
<db:td>
<db:para>A &quot;Close&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">RejectRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::Discard</db:code></db:para>
</db:td>
<db:td><db:code>0x00800000</db:code></db:td>
<db:td>
<db:para>A &quot;Discard&quot; or &quot;Don't Save&quot; button, depending on the platform, defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">DestructiveRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::Apply</db:code></db:para>
</db:td>
<db:td><db:code>0x02000000</db:code></db:td>
<db:td>
<db:para>An &quot;Apply&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">ApplyRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::Reset</db:code></db:para>
</db:td>
<db:td><db:code>0x04000000</db:code></db:td>
<db:td>
<db:para>A &quot;Reset&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">ResetRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::RestoreDefaults</db:code></db:para>
</db:td>
<db:td><db:code>0x08000000</db:code></db:td>
<db:td>
<db:para>A &quot;Restore Defaults&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">ResetRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::Help</db:code></db:para>
</db:td>
<db:td><db:code>0x01000000</db:code></db:td>
<db:td>
<db:para>A &quot;Help&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">HelpRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::SaveAll</db:code></db:para>
</db:td>
<db:td><db:code>0x00001000</db:code></db:td>
<db:td>
<db:para>A &quot;Save All&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">AcceptRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::Yes</db:code></db:para>
</db:td>
<db:td><db:code>0x00004000</db:code></db:td>
<db:td>
<db:para>A &quot;Yes&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">YesRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::YesToAll</db:code></db:para>
</db:td>
<db:td><db:code>0x00008000</db:code></db:td>
<db:td>
<db:para>A &quot;Yes to All&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">YesRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::No</db:code></db:para>
</db:td>
<db:td><db:code>0x00010000</db:code></db:td>
<db:td>
<db:para>A &quot;No&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">NoRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::NoToAll</db:code></db:para>
</db:td>
<db:td><db:code>0x00020000</db:code></db:td>
<db:td>
<db:para>A &quot;No to All&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">NoRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::Abort</db:code></db:para>
</db:td>
<db:td><db:code>0x00040000</db:code></db:td>
<db:td>
<db:para>An &quot;Abort&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">RejectRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::Retry</db:code></db:para>
</db:td>
<db:td><db:code>0x00080000</db:code></db:td>
<db:td>
<db:para>A &quot;Retry&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">AcceptRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::Ignore</db:code></db:para>
</db:td>
<db:td><db:code>0x00100000</db:code></db:td>
<db:td>
<db:para>An &quot;Ignore&quot; button defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">AcceptRole</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdialogbuttonbox.xml">QDialogButtonBox</db:link></db:emphasis>::NoButton</db:code></db:para>
</db:td>
<db:td><db:code>0x00000000</db:code></db:td>
<db:td>
<db:para>An invalid button.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>StandardButtons</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;StandardButton&gt;. </db:code>It stores an OR combination of <db:code>StandardButton</db:code> values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">ButtonRole</db:link></db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#standardButtons-prop">standardButtons</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="centerButtons-prop">
<db:title>centerButtons : bool</db:title>
<db:para>This property holds whether the buttons in the button box are centered</db:para>
<db:para>By default, this property is false. This behavior is appopriate for most types of dialogs. A notable exception is message boxes on most platforms (e.g. Windows), where the button box is centered horizontally.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">centerButtons</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setCenterButtons</db:emphasis>(<db:type>bool</db:type> <db:emphasis>center</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmessagebox.xml">QMessageBox</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="orientation-prop">
<db:title>orientation : Qt::Orientation</db:title>
<db:para>This property holds the orientation of the button box</db:para>
<db:para>By default, the orientation is horizontal (i.e. the buttons are laid out side by side). The possible orientations are <db:link xlink:href="qt.xml#Orientation-enum">Qt::Horizontal</db:link> and <db:link xlink:href="qt.xml#Orientation-enum">Qt::Vertical</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt.xml#Orientation-enum">Qt::Orientation</db:link></db:type> <db:emphasis role="bold">orientation</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setOrientation</db:emphasis>(<db:type><db:link xlink:href="qt.xml#Orientation-enum">Qt::Orientation</db:link></db:type> <db:emphasis>orientation</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="standardButtons-prop">
<db:title>standardButtons : StandardButtons</db:title>
<db:para>collection of standard buttons in the button box</db:para>
<db:para>This property controls which standard buttons are used by the button box.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qdialogbuttonbox.xml#StandardButton-enum">QDialogButtonBox::StandardButtons</db:link></db:type> <db:emphasis role="bold">standardButtons</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setStandardButtons</db:emphasis>(<db:type><db:link xlink:href="qdialogbuttonbox.xml#StandardButton-enum">QDialogButtonBox::StandardButtons</db:link></db:type> <db:emphasis>buttons</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#addButton">addButton</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QDialogButtonBox">
<db:title>QDialogButtonBox::QDialogButtonBox(QWidget *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs an empty, horizontal button box with the given <db:code role="parameter">parent</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#orientation-prop">orientation</db:link></db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#addButton">addButton</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QDialogButtonBox-1">
<db:title>[explicit, since 5.2] QDialogButtonBox::QDialogButtonBox(QDialogButtonBox::StandardButtons <db:emphasis>buttons</db:emphasis>, QWidget *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a horizontal button box with the given <db:code role="parameter">parent</db:code>, containing the standard buttons specified by <db:code role="parameter">buttons</db:code>.</db:para>
<db:para>This function was introduced in Qt 5.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#orientation-prop">orientation</db:link></db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#addButton">addButton</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QDialogButtonBox-2">
<db:title>QDialogButtonBox::QDialogButtonBox(Qt::Orientation <db:emphasis>orientation</db:emphasis>, QWidget *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs an empty button box with the given <db:code role="parameter">orientation</db:code> and <db:code role="parameter">parent</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#orientation-prop">orientation</db:link></db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#addButton">addButton</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QDialogButtonBox-3">
<db:title>QDialogButtonBox::QDialogButtonBox(QDialogButtonBox::StandardButtons <db:emphasis>buttons</db:emphasis>, Qt::Orientation <db:emphasis>orientation</db:emphasis>, QWidget *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a button box with the given <db:code role="parameter">orientation</db:code> and <db:code role="parameter">parent</db:code>, containing the standard buttons specified by <db:code role="parameter">buttons</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#orientation-prop">orientation</db:link></db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#addButton">addButton</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dtor.QDialogButtonBox">
<db:title>[virtual noexcept] QDialogButtonBox::~QDialogButtonBox()</db:title>
<db:para>Destroys the button box.</db:para>
</db:section>
<db:section xml:id="accepted">
<db:title>void QDialogButtonBox::accepted()</db:title>
<db:para>This signal is emitted when a button inside the button box is clicked, as long as it was defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">AcceptRole</db:link> or <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">YesRole</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#rejected">rejected</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#clicked">clicked</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#helpRequested">helpRequested</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addButton">
<db:title>QPushButton *QDialogButtonBox::addButton(QDialogButtonBox::StandardButton <db:emphasis>button</db:emphasis>)</db:title>
<db:para>Adds a standard <db:code role="parameter">button</db:code> to the button box if it is valid to do so, and returns a push button. If <db:code role="parameter">button</db:code> is invalid, it is not added to the button box, and zero is returned.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#removeButton">removeButton</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#clear">clear</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addButton-1">
<db:title>void QDialogButtonBox::addButton(QAbstractButton *<db:emphasis>button</db:emphasis>, QDialogButtonBox::ButtonRole <db:emphasis>role</db:emphasis>)</db:title>
<db:para>Adds the given <db:code role="parameter">button</db:code> to the button box with the specified <db:code role="parameter">role</db:code>. If the role is invalid, the button is not added.</db:para>
<db:para>If the button has already been added, it is removed and added again with the new role.</db:para>
<db:note>
<db:para>The button box takes ownership of the button.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#removeButton">removeButton</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#clear">clear</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addButton-2">
<db:title>QPushButton *QDialogButtonBox::addButton(const QString &amp;<db:emphasis>text</db:emphasis>, QDialogButtonBox::ButtonRole <db:emphasis>role</db:emphasis>)</db:title>
<db:para>Creates a push button with the given <db:code role="parameter">text</db:code>, adds it to the button box for the specified <db:code role="parameter">role</db:code>, and returns the corresponding push button. If <db:code role="parameter">role</db:code> is invalid, no button is created, and zero is returned.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#removeButton">removeButton</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#clear">clear</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="button">
<db:title>QPushButton *QDialogButtonBox::button(QDialogButtonBox::StandardButton <db:emphasis>which</db:emphasis>) const</db:title>
<db:para>Returns the <db:link xlink:href="qpushbutton.xml">QPushButton</db:link> corresponding to the standard button <db:code role="parameter">which</db:code>, or 0 if the standard button doesn't exist in this button box.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#standardButton">standardButton</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#standardButtons-prop">standardButtons</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#buttons">buttons</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="buttonRole">
<db:title>QDialogButtonBox::ButtonRole QDialogButtonBox::buttonRole(QAbstractButton *<db:emphasis>button</db:emphasis>) const</db:title>
<db:para>Returns the button role for the specified <db:code role="parameter">button</db:code>. This function returns <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">InvalidRole</db:link> if <db:code role="parameter">button</db:code> is 0 or has not been added to the button box.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#buttons">buttons</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#addButton">addButton</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="buttons">
<db:title>QList&lt;QAbstractButton *&gt; QDialogButtonBox::buttons() const</db:title>
<db:para>Returns a list of all the buttons that have been added to the button box.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#buttonRole">buttonRole</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#addButton">addButton</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#removeButton">removeButton</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="changeEvent">
<db:title>[override virtual protected] void QDialogButtonBox::changeEvent(QEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#changeEvent" role="function">QWidget::changeEvent(QEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="clear">
<db:title>void QDialogButtonBox::clear()</db:title>
<db:para>Clears the button box, deleting all buttons within it.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#removeButton">removeButton</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#addButton">addButton</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clicked">
<db:title>void QDialogButtonBox::clicked(QAbstractButton *<db:emphasis>button</db:emphasis>)</db:title>
<db:para>This signal is emitted when a button inside the button box is clicked. The specific button that was pressed is specified by <db:code role="parameter">button</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#accepted">accepted</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#rejected">rejected</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#helpRequested">helpRequested</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="event">
<db:title>[override virtual protected] bool QDialogButtonBox::event(QEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#event" role="function">QWidget::event(QEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="helpRequested">
<db:title>void QDialogButtonBox::helpRequested()</db:title>
<db:para>This signal is emitted when a button inside the button box is clicked, as long as it was defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">HelpRole</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#accepted">accepted</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#rejected">rejected</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#clicked">clicked</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rejected">
<db:title>void QDialogButtonBox::rejected()</db:title>
<db:para>This signal is emitted when a button inside the button box is clicked, as long as it was defined with the <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">RejectRole</db:link> or <db:link xlink:href="qdialogbuttonbox.xml#ButtonRole-enum">NoRole</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#accepted">accepted</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#helpRequested">helpRequested</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#clicked">clicked</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="removeButton">
<db:title>void QDialogButtonBox::removeButton(QAbstractButton *<db:emphasis>button</db:emphasis>)</db:title>
<db:para>Removes <db:code role="parameter">button</db:code> from the button box without deleting it and sets its parent to zero.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#clear">clear</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#buttons">buttons</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#addButton">addButton</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="standardButton">
<db:title>QDialogButtonBox::StandardButton QDialogButtonBox::standardButton(QAbstractButton *<db:emphasis>button</db:emphasis>) const</db:title>
<db:para>Returns the standard button enum value corresponding to the given <db:code role="parameter">button</db:code>, or <db:link xlink:href="qdialogbuttonbox.xml#StandardButton-enum">NoButton</db:link> if the given <db:code role="parameter">button</db:code> isn't a standard button.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdialogbuttonbox.xml#button">button</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#buttons">buttons</db:link>()</db:member>
<db:member><db:link xlink:href="qdialogbuttonbox.xml#standardButtons-prop">standardButtons</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
