<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QStyleOptionViewItem Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link> class is used to describe the parameters used to draw an item in a view widget.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QStyleOptionViewItem</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qstyleoption.xml" xlink:role="class">QStyleOption</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link> contains all the information that <db:link xlink:href="qstyle.xml">QStyle</db:link> functions need to draw the items for Qt's model/view classes.</db:para>
<db:para>For performance reasons, there are few member functions and the access to the member variables is direct (i.e., using the <db:code>.</db:code> or <db:code>-&gt;</db:code> operator). This makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:member>
<db:member><db:link xlink:href="model-view-programming.xml">Model/View Programming</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Position-enum">
<db:title>enum QStyleOptionViewItem::Position</db:title>
<db:enumsynopsis>
<db:enumname>Position</db:enumname>
<db:enumitem>
<db:enumidentifier>Left</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Right</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Top</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Bottom</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the position of the item's decoration.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::Left</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>On the left of the text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::Right</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>On the right of the text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::Top</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Above the text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::Bottom</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Below the text.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionviewitem.xml#decorationPosition-var">decorationPosition</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="StyleOptionType-enum">
<db:title>enum QStyleOptionViewItem::StyleOptionType</db:title>
<db:enumsynopsis>
<db:enumname>StyleOptionType</db:enumname>
<db:enumitem>
<db:enumidentifier>Type</db:enumidentifier>
<db:enumvalue>SO_ViewItem</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum is used to hold information about the type of the style option, and is defined for each <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::Type</db:code></db:para>
</db:td>
<db:td><db:code>SO_ViewItem</db:code></db:td>
<db:td>
<db:para>The type of style option provided (<db:link xlink:href="qstyleoption.xml#OptionType-enum">SO_ViewItem</db:link> for this class).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The type is used internally by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link>, its subclasses, and <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>() to determine the type of style option. In general you do not need to worry about this unless you want to create your own <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass and your own styles.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionviewitem.xml#StyleOptionVersion-enum">StyleOptionVersion</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="StyleOptionVersion-enum">
<db:title>enum QStyleOptionViewItem::StyleOptionVersion</db:title>
<db:enumsynopsis>
<db:enumname>StyleOptionVersion</db:enumname>
<db:enumitem>
<db:enumidentifier>Version</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum is used to hold information about the version of the style option, and is defined for each <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::Version</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>4</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The version is used by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclasses to implement extensions without breaking compatibility. If you use <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>(), you normally do not need to check it.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionviewitem.xml#StyleOptionType-enum">StyleOptionType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="ViewItemFeature-enum">
<db:title>enum QStyleOptionViewItem::ViewItemFeature</db:title>
<db:bridgehead renderas="sect2">flags QStyleOptionViewItem::ViewItemFeatures</db:bridgehead>
<db:enumsynopsis>
<db:enumname>ViewItemFeature</db:enumname>
<db:enumitem>
<db:enumidentifier>None</db:enumidentifier>
<db:enumvalue>0x00</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>WrapText</db:enumidentifier>
<db:enumvalue>0x01</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Alternate</db:enumidentifier>
<db:enumvalue>0x02</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>HasCheckIndicator</db:enumidentifier>
<db:enumvalue>0x04</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>HasDisplay</db:enumidentifier>
<db:enumvalue>0x08</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>HasDecoration</db:enumidentifier>
<db:enumvalue>0x10</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:typedefsynopsis>
<db:typedefname>QStyleOptionViewItem::ViewItemFeatures</db:typedefname>
</db:typedefsynopsis>
<db:para>This enum describes the different types of features an item can have.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::None</db:code></db:para>
</db:td>
<db:td><db:code>0x00</db:code></db:td>
<db:td>
<db:para>Indicates a normal item.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::WrapText</db:code></db:para>
</db:td>
<db:td><db:code>0x01</db:code></db:td>
<db:td>
<db:para>Indicates an item with wrapped text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::Alternate</db:code></db:para>
</db:td>
<db:td><db:code>0x02</db:code></db:td>
<db:td>
<db:para>Indicates that the item's background is rendered using alternateBase.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::HasCheckIndicator</db:code></db:para>
</db:td>
<db:td><db:code>0x04</db:code></db:td>
<db:td>
<db:para>Indicates that the item has a check state indicator.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::HasDisplay</db:code></db:para>
</db:td>
<db:td><db:code>0x08</db:code></db:td>
<db:td>
<db:para>Indicates that the item has a display role.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::HasDecoration</db:code></db:para>
</db:td>
<db:td><db:code>0x10</db:code></db:td>
<db:td>
<db:para>Indicates that the item has a decoration role.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>ViewItemFeatures</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;ViewItemFeature&gt;. </db:code>It stores an OR combination of <db:code>ViewItemFeature</db:code> values.</db:para>
</db:section>
<db:section xml:id="ViewItemPosition-enum">
<db:title>enum QStyleOptionViewItem::ViewItemPosition</db:title>
<db:enumsynopsis>
<db:enumname>ViewItemPosition</db:enumname>
<db:enumitem>
<db:enumidentifier>Invalid</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Beginning</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Middle</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>End</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>OnlyOne</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum is used to represent the placement of the item on a row. This can be used to draw items differently depending on their placement, for example by putting rounded edges at the beginning and end, and straight edges in between.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::Invalid</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The ViewItemPosition is unknown and should be disregarded.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::Beginning</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The item appears at the beginning of the row.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::Middle</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The item appears in the middle of the row.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::End</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>The item appears at the end of the row.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link></db:emphasis>::OnlyOne</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>The item is the only one on the row, and is therefore both at the beginning and the end.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QStyleOptionViewItem">
<db:title>QStyleOptionViewItem::QStyleOptionViewItem()</db:title>
<db:constructorsynopsis>
<db:methodname>QStyleOptionViewItem</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QStyleOptionViewItem()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link>, initializing the members variables to their default values.</db:para>
</db:section>
<db:section xml:id="QStyleOptionViewItem-1">
<db:title>QStyleOptionViewItem::QStyleOptionViewItem(const QStyleOptionViewItem &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QStyleOptionViewItem</db:methodname>
<db:methodparam>
<db:type>const QStyleOptionViewItem &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QStyleOptionViewItem(const QStyleOptionViewItem &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a copy of the <db:code role="parameter">other</db:code> style option.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-variable-documentation">
<db:title>Member Variable Documentation</db:title>
<db:section xml:id="backgroundBrush-var">
<db:title>QBrush QStyleOptionViewItem::backgroundBrush</db:title>
<db:fieldsynopsis>
<db:type>QBrush</db:type>
<db:varname>backgroundBrush</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The <db:link xlink:href="qbrush.xml">QBrush</db:link> that should be used to paint the view items background.</db:para>
</db:section>
<db:section xml:id="checkState-var">
<db:title>Qt::CheckState QStyleOptionViewItem::checkState</db:title>
<db:fieldsynopsis>
<db:type>Qt::CheckState</db:type>
<db:varname>checkState</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>If this view item is checkable, i.e., ViewItemFeature::HasCheckIndicator is true, <db:code>checkState</db:code> is true if the item is checked; otherwise, it is false.</db:para>
</db:section>
<db:section xml:id="decorationAlignment-var">
<db:title>Qt::Alignment QStyleOptionViewItem::decorationAlignment</db:title>
<db:fieldsynopsis>
<db:type>Qt::Alignment</db:type>
<db:varname>decorationAlignment</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the alignment of the decoration for the item</db:para>
<db:para>The default value is <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignLeft</db:link>.</db:para>
</db:section>
<db:section xml:id="decorationPosition-var">
<db:title>QStyleOptionViewItem::Position QStyleOptionViewItem::decorationPosition</db:title>
<db:fieldsynopsis>
<db:type>QStyleOptionViewItem::Position</db:type>
<db:varname>decorationPosition</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the position of the decoration for the item</db:para>
<db:para>The default value is <db:link xlink:href="qstyleoptionviewitem.xml#Position-enum">Left</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionviewitem.xml#Position-enum">Position</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="decorationSize-var">
<db:title>QSize QStyleOptionViewItem::decorationSize</db:title>
<db:fieldsynopsis>
<db:type>QSize</db:type>
<db:varname>decorationSize</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the size of the decoration for the item</db:para>
<db:para>The default value is <db:link xlink:href="qsize.xml">QSize</db:link>(-1, -1), i.e. an invalid size.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionviewitem.xml#decorationAlignment-var">decorationAlignment</db:link></db:member>
<db:member><db:link xlink:href="qstyleoptionviewitem.xml#decorationPosition-var">decorationPosition</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="displayAlignment-var">
<db:title>Qt::Alignment QStyleOptionViewItem::displayAlignment</db:title>
<db:fieldsynopsis>
<db:type>Qt::Alignment</db:type>
<db:varname>displayAlignment</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the alignment of the display value for the item</db:para>
<db:para>The default value is <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignLeft</db:link>.</db:para>
</db:section>
<db:section xml:id="features-var">
<db:title>QStyleOptionViewItem::ViewItemFeatures QStyleOptionViewItem::features</db:title>
<db:fieldsynopsis>
<db:type>QStyleOptionViewItem::ViewItemFeatures</db:type>
<db:varname>features</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds a bitwise OR of the features that describe this view item</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptionviewitem.xml#ViewItemFeature-enum">ViewItemFeature</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="font-var">
<db:title>QFont QStyleOptionViewItem::font</db:title>
<db:fieldsynopsis>
<db:type>QFont</db:type>
<db:varname>font</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the font used for the item</db:para>
<db:para>By default, the application's default font is used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml">QFont</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="icon-var">
<db:title>QIcon QStyleOptionViewItem::icon</db:title>
<db:fieldsynopsis>
<db:type>QIcon</db:type>
<db:varname>icon</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The icon (if any) to be drawn in the view item.</db:para>
</db:section>
<db:section xml:id="index-var">
<db:title>QModelIndex QStyleOptionViewItem::index</db:title>
<db:fieldsynopsis>
<db:type>QModelIndex</db:type>
<db:varname>index</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The model index that is to be drawn.</db:para>
</db:section>
<db:section xml:id="showDecorationSelected-var">
<db:title>bool QStyleOptionViewItem::showDecorationSelected</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>showDecorationSelected</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds whether the decoration should be highlighted on selected items</db:para>
<db:para>If this option is true, the branch and any decorations on selected items should be highlighted, indicating that the item is selected; otherwise, no highlighting is required. The default value is false.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml#StyleHint-enum">QStyle::SH_ItemView_ShowDecorationSelected</db:link></db:member>
<db:member><db:link xlink:href="qabstractitemview.xml">QAbstractItemView</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="text-var">
<db:title>QString QStyleOptionViewItem::text</db:title>
<db:fieldsynopsis>
<db:type>QString</db:type>
<db:varname>text</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The text (if any) to be drawn in the view item.</db:para>
</db:section>
<db:section xml:id="textElideMode-var">
<db:title>Qt::TextElideMode QStyleOptionViewItem::textElideMode</db:title>
<db:fieldsynopsis>
<db:type>Qt::TextElideMode</db:type>
<db:varname>textElideMode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>where ellipsis should be added for text that is too long to fit into an item</db:para>
<db:para>The default value is <db:link xlink:href="qt.xml#TextElideMode-enum">Qt::ElideMiddle</db:link>, i.e. the ellipsis appears in the middle of the text.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt.xml#TextElideMode-enum">Qt::TextElideMode</db:link></db:member>
<db:member><db:link xlink:href="qstyle.xml#StyleHint-enum">QStyle::SH_ItemView_EllipsisLocation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="viewItemPosition-var">
<db:title>QStyleOptionViewItem::ViewItemPosition QStyleOptionViewItem::viewItemPosition</db:title>
<db:fieldsynopsis>
<db:type>QStyleOptionViewItem::ViewItemPosition</db:type>
<db:varname>viewItemPosition</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Gives the position of this view item relative to other items. See the <db:link xlink:href="qstyleoptionviewitem.xml#ViewItemPosition-enum">ViewItemPosition</db:link> enum for the details.</db:para>
</db:section>
</db:section>
</db:article>
