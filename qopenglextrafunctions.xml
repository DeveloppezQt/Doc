<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QOpenGLExtraFunctions Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qopenglextrafunctions.xml">QOpenGLExtraFunctions</db:link> class provides cross-platform access to the OpenGL ES 3.0, 3.1 and 3.2 API.</db:para>
<db:para>This class was introduced in Qt 5.6.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QOpenGLExtraFunctions</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qopenglfunctions.xml" xlink:role="class">QOpenGLFunctions</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QOpenGLExtraFunctions is part of <db:simplelist><db:member><db:link xlink:href="painting-3d.xml">Rendering in 3D</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This subclass of <db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link> includes the OpenGL ES 3.0, 3.1 and 3.2 functions. These will only work when an OpenGL ES 3.x context, or an OpenGL context of a version containing the functions in question either in core or as extension, is in use. This allows developing GLES 3.x applications in a cross-platform manner: development can happen on a desktop platform with OpenGL 3.x or 4.x, deploying to a true GLES 3.x device later on will require no or minimal changes to the application.</db:para>
<db:note>
<db:para>This class is different from the versioned OpenGL wrappers, for instance <db:link xlink:href="qopenglfunctions-3-2-core.xml">QOpenGLFunctions_3_2_Core</db:link>. The versioned function wrappers target a given version and profile of OpenGL. They are therefore not suitable for cross-OpenGL-OpenGLES development.</db:para>
</db:note>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QOpenGLExtraFunctions">
<db:title>QOpenGLExtraFunctions::QOpenGLExtraFunctions()</db:title>
<db:constructorsynopsis>
<db:methodname>QOpenGLExtraFunctions</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpenGLExtraFunctions()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a default function resolver. The resolver cannot be used until <db:link xlink:href="qopenglfunctions.xml#initializeOpenGLFunctions">initializeOpenGLFunctions</db:link>() is called to specify the context.</db:para>
</db:section>
<db:section xml:id="QOpenGLExtraFunctions-1">
<db:title>QOpenGLExtraFunctions::QOpenGLExtraFunctions(QOpenGLContext *<db:emphasis>context</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QOpenGLExtraFunctions</db:methodname>
<db:methodparam>
<db:type>QOpenGLContext *</db:type>
<db:parameter>context</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpenGLExtraFunctions(QOpenGLContext *context)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a function resolver for context. If <db:code role="parameter">context</db:code> is <db:code>nullptr</db:code>, then the resolver will be created for the current <db:link xlink:href="qopenglcontext.xml">QOpenGLContext</db:link>.</db:para>
<db:para>The context or another context in the group must be current.</db:para>
<db:para>An object constructed in this way can only be used with context and other contexts that share with it. Use <db:link xlink:href="qopenglfunctions.xml#initializeOpenGLFunctions">initializeOpenGLFunctions</db:link>() to change the object's context association.</db:para>
</db:section>
<db:section xml:id="glActiveShaderProgram">
<db:title>void QOpenGLExtraFunctions::glActiveShaderProgram(GLuint <db:emphasis>pipeline</db:emphasis>, GLuint <db:emphasis>program</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glActiveShaderProgram</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>pipeline</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glActiveShaderProgram(GLuint pipeline, GLuint program)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glActiveShaderProgram(<db:code role="parameter">pipeline</db:code>, <db:code role="parameter">program</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glActiveShaderProgram.xhtml">glActiveShaderProgram()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBeginQuery">
<db:title>void QOpenGLExtraFunctions::glBeginQuery(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>id</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBeginQuery</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>id</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBeginQuery(GLenum target, GLuint id)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBeginQuery(<db:code role="parameter">target</db:code>, <db:code role="parameter">id</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBeginQuery.xhtml">glBeginQuery()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBeginTransformFeedback">
<db:title>void QOpenGLExtraFunctions::glBeginTransformFeedback(GLenum <db:emphasis>primitiveMode</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBeginTransformFeedback</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>primitiveMode</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBeginTransformFeedback(GLenum primitiveMode)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBeginTransformFeedback(<db:code role="parameter">primitiveMode</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBeginTransformFeedback.xhtml">glBeginTransformFeedback()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBindBufferBase">
<db:title>void QOpenGLExtraFunctions::glBindBufferBase(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>, GLuint <db:emphasis>buffer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBindBufferBase</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>buffer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBindBufferBase(GLenum target, GLuint index, GLuint buffer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBindBufferBase(<db:code role="parameter">target</db:code>, <db:code role="parameter">index</db:code>, <db:code role="parameter">buffer</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBindBufferBase.xhtml">glBindBufferBase()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBindBufferRange">
<db:title>void QOpenGLExtraFunctions::glBindBufferRange(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>, GLuint <db:emphasis>buffer</db:emphasis>, GLintptr <db:emphasis>offset</db:emphasis>, GLsizeiptr <db:emphasis>size</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBindBufferRange</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>buffer</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLintptr</db:type>
<db:parameter>offset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizeiptr</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBindBufferRange(<db:code role="parameter">target</db:code>, <db:code role="parameter">index</db:code>, <db:code role="parameter">buffer</db:code>, <db:code role="parameter">offset</db:code>, <db:code role="parameter">size</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBindBufferRange.xhtml">glBindBufferRange()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBindImageTexture">
<db:title>void QOpenGLExtraFunctions::glBindImageTexture(GLuint <db:emphasis>unit</db:emphasis>, GLuint <db:emphasis>texture</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLboolean <db:emphasis>layered</db:emphasis>, GLint <db:emphasis>layer</db:emphasis>, GLenum <db:emphasis>access</db:emphasis>, GLenum <db:emphasis>format</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBindImageTexture</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>unit</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>texture</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>layered</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>layer</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>access</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBindImageTexture(<db:code role="parameter">unit</db:code>, <db:code role="parameter">texture</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">layered</db:code>, <db:code role="parameter">layer</db:code>, <db:code role="parameter">access</db:code>, <db:code role="parameter">format</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBindImageTexture.xhtml">glBindImageTexture()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBindProgramPipeline">
<db:title>void QOpenGLExtraFunctions::glBindProgramPipeline(GLuint <db:emphasis>pipeline</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBindProgramPipeline</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>pipeline</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBindProgramPipeline(GLuint pipeline)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBindProgramPipeline(<db:code role="parameter">pipeline</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBindProgramPipeline.xhtml">glBindProgramPipeline()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBindSampler">
<db:title>void QOpenGLExtraFunctions::glBindSampler(GLuint <db:emphasis>unit</db:emphasis>, GLuint <db:emphasis>sampler</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBindSampler</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>unit</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>sampler</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBindSampler(GLuint unit, GLuint sampler)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBindSampler(<db:code role="parameter">unit</db:code>, <db:code role="parameter">sampler</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBindSampler.xhtml">glBindSampler()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBindTransformFeedback">
<db:title>void QOpenGLExtraFunctions::glBindTransformFeedback(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>id</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBindTransformFeedback</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>id</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBindTransformFeedback(GLenum target, GLuint id)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBindTransformFeedback(<db:code role="parameter">target</db:code>, <db:code role="parameter">id</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBindTransformFeedback.xhtml">glBindTransformFeedback()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBindVertexArray">
<db:title>void QOpenGLExtraFunctions::glBindVertexArray(GLuint <db:emphasis>array</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBindVertexArray</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>array</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBindVertexArray(GLuint array)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBindVertexArray(<db:code role="parameter">array</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBindVertexArray.xhtml">glBindVertexArray()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBindVertexBuffer">
<db:title>void QOpenGLExtraFunctions::glBindVertexBuffer(GLuint <db:emphasis>bindingindex</db:emphasis>, GLuint <db:emphasis>buffer</db:emphasis>, GLintptr <db:emphasis>offset</db:emphasis>, GLsizei <db:emphasis>stride</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBindVertexBuffer</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>bindingindex</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>buffer</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLintptr</db:type>
<db:parameter>offset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>stride</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBindVertexBuffer(<db:code role="parameter">bindingindex</db:code>, <db:code role="parameter">buffer</db:code>, <db:code role="parameter">offset</db:code>, <db:code role="parameter">stride</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBindVertexBuffer.xhtml">glBindVertexBuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBlendBarrier">
<db:title>void QOpenGLExtraFunctions::glBlendBarrier()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBlendBarrier</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBlendBarrier()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBlendBarrier().</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBlendBarrier.xhtml">glBlendBarrier()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBlendEquationSeparatei">
<db:title>void QOpenGLExtraFunctions::glBlendEquationSeparatei(GLuint <db:emphasis>buf</db:emphasis>, GLenum <db:emphasis>modeRGB</db:emphasis>, GLenum <db:emphasis>modeAlpha</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBlendEquationSeparatei</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>buf</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>modeRGB</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>modeAlpha</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBlendEquationSeparatei(<db:code role="parameter">buf</db:code>, <db:code role="parameter">modeRGB</db:code>, <db:code role="parameter">modeAlpha</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBlendEquationSeparate.xhtml">glBlendEquationSeparatei()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBlendEquationi">
<db:title>void QOpenGLExtraFunctions::glBlendEquationi(GLuint <db:emphasis>buf</db:emphasis>, GLenum <db:emphasis>mode</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBlendEquationi</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>buf</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBlendEquationi(GLuint buf, GLenum mode)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBlendEquationi(<db:code role="parameter">buf</db:code>, <db:code role="parameter">mode</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBlendEquation.xhtml">glBlendEquationi()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBlendFuncSeparatei">
<db:title>void QOpenGLExtraFunctions::glBlendFuncSeparatei(GLuint <db:emphasis>buf</db:emphasis>, GLenum <db:emphasis>srcRGB</db:emphasis>, GLenum <db:emphasis>dstRGB</db:emphasis>, GLenum <db:emphasis>srcAlpha</db:emphasis>, GLenum <db:emphasis>dstAlpha</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBlendFuncSeparatei</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>buf</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>srcRGB</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>dstRGB</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>srcAlpha</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>dstAlpha</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBlendFuncSeparatei(<db:code role="parameter">buf</db:code>, <db:code role="parameter">srcRGB</db:code>, <db:code role="parameter">dstRGB</db:code>, <db:code role="parameter">srcAlpha</db:code>, <db:code role="parameter">dstAlpha</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBlendFuncSeparate.xhtml">glBlendFuncSeparatei()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBlendFunci">
<db:title>void QOpenGLExtraFunctions::glBlendFunci(GLuint <db:emphasis>buf</db:emphasis>, GLenum <db:emphasis>src</db:emphasis>, GLenum <db:emphasis>dst</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBlendFunci</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>buf</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>src</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>dst</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBlendFunci(GLuint buf, GLenum src, GLenum dst)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBlendFunci(<db:code role="parameter">buf</db:code>, <db:code role="parameter">src</db:code>, <db:code role="parameter">dst</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBlendFunc.xhtml">glBlendFunci()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBlitFramebuffer">
<db:title>void QOpenGLExtraFunctions::glBlitFramebuffer(GLint <db:emphasis>srcX0</db:emphasis>, GLint <db:emphasis>srcY0</db:emphasis>, GLint <db:emphasis>srcX1</db:emphasis>, GLint <db:emphasis>srcY1</db:emphasis>, GLint <db:emphasis>dstX0</db:emphasis>, GLint <db:emphasis>dstY0</db:emphasis>, GLint <db:emphasis>dstX1</db:emphasis>, GLint <db:emphasis>dstY1</db:emphasis>, GLbitfield <db:emphasis>mask</db:emphasis>, GLenum <db:emphasis>filter</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBlitFramebuffer</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>srcX0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>srcY0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>srcX1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>srcY1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>dstX0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>dstY0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>dstX1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>dstY1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLbitfield</db:type>
<db:parameter>mask</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>filter</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBlitFramebuffer(<db:code role="parameter">srcX0</db:code>, <db:code role="parameter">srcY0</db:code>, <db:code role="parameter">srcX1</db:code>, <db:code role="parameter">srcY1</db:code>, <db:code role="parameter">dstX0</db:code>, <db:code role="parameter">dstY0</db:code>, <db:code role="parameter">dstX1</db:code>, <db:code role="parameter">dstY1</db:code>, <db:code role="parameter">mask</db:code>, <db:code role="parameter">filter</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBlitFramebuffer.xhtml">glBlitFramebuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glClearBufferfi">
<db:title>void QOpenGLExtraFunctions::glClearBufferfi(GLenum <db:emphasis>buffer</db:emphasis>, GLint <db:emphasis>drawbuffer</db:emphasis>, GLfloat <db:emphasis>depth</db:emphasis>, GLint <db:emphasis>stencil</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glClearBufferfi</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>buffer</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>drawbuffer</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>depth</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>stencil</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glClearBufferfi(<db:code role="parameter">buffer</db:code>, <db:code role="parameter">drawbuffer</db:code>, <db:code role="parameter">depth</db:code>, <db:code role="parameter">stencil</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glClearBuffer.xhtml">glClearBufferfi()</db:link>.</db:para>
</db:section>
<db:section xml:id="glClearBufferfv">
<db:title>void QOpenGLExtraFunctions::glClearBufferfv(GLenum <db:emphasis>buffer</db:emphasis>, GLint <db:emphasis>drawbuffer</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glClearBufferfv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>buffer</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>drawbuffer</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glClearBufferfv(<db:code role="parameter">buffer</db:code>, <db:code role="parameter">drawbuffer</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glClearBuffer.xhtml">glClearBufferfv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glClearBufferiv">
<db:title>void QOpenGLExtraFunctions::glClearBufferiv(GLenum <db:emphasis>buffer</db:emphasis>, GLint <db:emphasis>drawbuffer</db:emphasis>, const GLint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glClearBufferiv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>buffer</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>drawbuffer</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glClearBufferiv(<db:code role="parameter">buffer</db:code>, <db:code role="parameter">drawbuffer</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glClearBuffer.xhtml">glClearBufferiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glClearBufferuiv">
<db:title>void QOpenGLExtraFunctions::glClearBufferuiv(GLenum <db:emphasis>buffer</db:emphasis>, GLint <db:emphasis>drawbuffer</db:emphasis>, const GLuint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glClearBufferuiv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>buffer</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>drawbuffer</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glClearBufferuiv(<db:code role="parameter">buffer</db:code>, <db:code role="parameter">drawbuffer</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glClearBuffer.xhtml">glClearBufferuiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glClientWaitSync">
<db:title>GLenum QOpenGLExtraFunctions::glClientWaitSync(GLsync <db:emphasis>sync</db:emphasis>, GLbitfield <db:emphasis>flags</db:emphasis>, GLuint64 <db:emphasis>timeout</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLenum</db:type>
<db:methodname>glClientWaitSync</db:methodname>
<db:methodparam>
<db:type>GLsync</db:type>
<db:parameter>sync</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLbitfield</db:type>
<db:parameter>flags</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint64</db:type>
<db:parameter>timeout</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLenum glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glClientWaitSync(<db:code role="parameter">sync</db:code>, <db:code role="parameter">flags</db:code>, <db:code role="parameter">timeout</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glClientWaitSync.xhtml">glClientWaitSync()</db:link>.</db:para>
</db:section>
<db:section xml:id="glColorMaski">
<db:title>void QOpenGLExtraFunctions::glColorMaski(GLuint <db:emphasis>index</db:emphasis>, GLboolean <db:emphasis>r</db:emphasis>, GLboolean <db:emphasis>g</db:emphasis>, GLboolean <db:emphasis>b</db:emphasis>, GLboolean <db:emphasis>a</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glColorMaski</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>r</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>g</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>b</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>a</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glColorMaski(<db:code role="parameter">index</db:code>, <db:code role="parameter">r</db:code>, <db:code role="parameter">g</db:code>, <db:code role="parameter">b</db:code>, <db:code role="parameter">a</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glColorMask.xhtml">glColorMaski()</db:link>.</db:para>
</db:section>
<db:section xml:id="glCompressedTexImage3D">
<db:title>void QOpenGLExtraFunctions::glCompressedTexImage3D(GLenum <db:emphasis>target</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLenum <db:emphasis>internalformat</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLsizei <db:emphasis>depth</db:emphasis>, GLint <db:emphasis>border</db:emphasis>, GLsizei <db:emphasis>imageSize</db:emphasis>, const void *<db:emphasis>data</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glCompressedTexImage3D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>depth</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>border</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>imageSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>data</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCompressedTexImage3D(<db:code role="parameter">target</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">depth</db:code>, <db:code role="parameter">border</db:code>, <db:code role="parameter">imageSize</db:code>, <db:code role="parameter">data</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCompressedTexImage3D.xhtml">glCompressedTexImage3D()</db:link>.</db:para>
</db:section>
<db:section xml:id="glCompressedTexSubImage3D">
<db:title>void QOpenGLExtraFunctions::glCompressedTexSubImage3D(GLenum <db:emphasis>target</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLint <db:emphasis>xoffset</db:emphasis>, GLint <db:emphasis>yoffset</db:emphasis>, GLint <db:emphasis>zoffset</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLsizei <db:emphasis>depth</db:emphasis>, GLenum <db:emphasis>format</db:emphasis>, GLsizei <db:emphasis>imageSize</db:emphasis>, const void *<db:emphasis>data</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glCompressedTexSubImage3D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>xoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>yoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>zoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>depth</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>imageSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>data</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCompressedTexSubImage3D(<db:code role="parameter">target</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">xoffset</db:code>, <db:code role="parameter">yoffset</db:code>, <db:code role="parameter">zoffset</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">depth</db:code>, <db:code role="parameter">format</db:code>, <db:code role="parameter">imageSize</db:code>, <db:code role="parameter">data</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCompressedTexSubImage3D.xhtml">glCompressedTexSubImage3D()</db:link>.</db:para>
</db:section>
<db:section xml:id="glCopyBufferSubData">
<db:title>void QOpenGLExtraFunctions::glCopyBufferSubData(GLenum <db:emphasis>readTarget</db:emphasis>, GLenum <db:emphasis>writeTarget</db:emphasis>, GLintptr <db:emphasis>readOffset</db:emphasis>, GLintptr <db:emphasis>writeOffset</db:emphasis>, GLsizeiptr <db:emphasis>size</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glCopyBufferSubData</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>readTarget</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>writeTarget</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLintptr</db:type>
<db:parameter>readOffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLintptr</db:type>
<db:parameter>writeOffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizeiptr</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCopyBufferSubData(<db:code role="parameter">readTarget</db:code>, <db:code role="parameter">writeTarget</db:code>, <db:code role="parameter">readOffset</db:code>, <db:code role="parameter">writeOffset</db:code>, <db:code role="parameter">size</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCopyBufferSubData.xhtml">glCopyBufferSubData()</db:link>.</db:para>
</db:section>
<db:section xml:id="glCopyImageSubData">
<db:title>void QOpenGLExtraFunctions::glCopyImageSubData(GLuint <db:emphasis>srcName</db:emphasis>, GLenum <db:emphasis>srcTarget</db:emphasis>, GLint <db:emphasis>srcLevel</db:emphasis>, GLint <db:emphasis>srcX</db:emphasis>, GLint <db:emphasis>srcY</db:emphasis>, GLint <db:emphasis>srcZ</db:emphasis>, GLuint <db:emphasis>dstName</db:emphasis>, GLenum <db:emphasis>dstTarget</db:emphasis>, GLint <db:emphasis>dstLevel</db:emphasis>, GLint <db:emphasis>dstX</db:emphasis>, GLint <db:emphasis>dstY</db:emphasis>, GLint <db:emphasis>dstZ</db:emphasis>, GLsizei <db:emphasis>srcWidth</db:emphasis>, GLsizei <db:emphasis>srcHeight</db:emphasis>, GLsizei <db:emphasis>srcDepth</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glCopyImageSubData</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>srcName</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>srcTarget</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>srcLevel</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>srcX</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>srcY</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>srcZ</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>dstName</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>dstTarget</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>dstLevel</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>dstX</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>dstY</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>dstZ</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>srcWidth</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>srcHeight</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>srcDepth</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glCopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCopyImageSubData(<db:code role="parameter">srcName</db:code>, <db:code role="parameter">srcTarget</db:code>, <db:code role="parameter">srcLevel</db:code>, <db:code role="parameter">srcX</db:code>, <db:code role="parameter">srcY</db:code>, <db:code role="parameter">srcZ</db:code>, <db:code role="parameter">dstName</db:code>, <db:code role="parameter">dstTarget</db:code>, <db:code role="parameter">dstLevel</db:code>, <db:code role="parameter">dstX</db:code>, <db:code role="parameter">dstY</db:code>, <db:code role="parameter">dstZ</db:code>, <db:code role="parameter">srcWidth</db:code>, <db:code role="parameter">srcHeight</db:code>, <db:code role="parameter">srcDepth</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCopyImageSubData.xhtml">glCopyImageSubData()</db:link>.</db:para>
</db:section>
<db:section xml:id="glCopyTexSubImage3D">
<db:title>void QOpenGLExtraFunctions::glCopyTexSubImage3D(GLenum <db:emphasis>target</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLint <db:emphasis>xoffset</db:emphasis>, GLint <db:emphasis>yoffset</db:emphasis>, GLint <db:emphasis>zoffset</db:emphasis>, GLint <db:emphasis>x</db:emphasis>, GLint <db:emphasis>y</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glCopyTexSubImage3D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>xoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>yoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>zoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCopyTexSubImage3D(<db:code role="parameter">target</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">xoffset</db:code>, <db:code role="parameter">yoffset</db:code>, <db:code role="parameter">zoffset</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCopyTexSubImage3D.xhtml">glCopyTexSubImage3D()</db:link>.</db:para>
</db:section>
<db:section xml:id="glCreateShaderProgramv">
<db:title>GLuint QOpenGLExtraFunctions::glCreateShaderProgramv(GLenum <db:emphasis>type</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLchar *const *<db:emphasis>strings</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLuint</db:type>
<db:methodname>glCreateShaderProgramv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLchar *const *</db:type>
<db:parameter>strings</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLuint glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const *strings)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCreateShaderProgramv(<db:code role="parameter">type</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">strings</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCreateShaderProgram.xhtml">glCreateShaderProgramv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDebugMessageCallback">
<db:title>void QOpenGLExtraFunctions::glDebugMessageCallback(GLDEBUGPROC <db:emphasis>callback</db:emphasis>, const void *<db:emphasis>userParam</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDebugMessageCallback</db:methodname>
<db:methodparam>
<db:type>GLDEBUGPROC</db:type>
<db:parameter>callback</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>userParam</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDebugMessageCallback(GLDEBUGPROC callback, const void *userParam)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDebugMessageCallback(<db:code role="parameter">callback</db:code>, <db:code role="parameter">userParam</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDebugMessageCallback.xhtml">glDebugMessageCallback()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDebugMessageControl">
<db:title>void QOpenGLExtraFunctions::glDebugMessageControl(GLenum <db:emphasis>source</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, GLenum <db:emphasis>severity</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLuint *<db:emphasis>ids</db:emphasis>, GLboolean <db:emphasis>enabled</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDebugMessageControl</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>source</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>severity</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>ids</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>enabled</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDebugMessageControl(<db:code role="parameter">source</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">severity</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">ids</db:code>, <db:code role="parameter">enabled</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDebugMessageControl.xhtml">glDebugMessageContro()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDebugMessageInsert">
<db:title>void QOpenGLExtraFunctions::glDebugMessageInsert(GLenum <db:emphasis>source</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, GLuint <db:emphasis>id</db:emphasis>, GLenum <db:emphasis>severity</db:emphasis>, GLsizei <db:emphasis>length</db:emphasis>, const GLchar *<db:emphasis>buf</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDebugMessageInsert</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>source</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>id</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>severity</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLchar *</db:type>
<db:parameter>buf</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDebugMessageInsert(<db:code role="parameter">source</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">id</db:code>, <db:code role="parameter">severity</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">buf</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDebugMessageInsert.xhtml">glDebugMessageInsert()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDeleteProgramPipelines">
<db:title>void QOpenGLExtraFunctions::glDeleteProgramPipelines(GLsizei <db:emphasis>n</db:emphasis>, const GLuint *<db:emphasis>pipelines</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDeleteProgramPipelines</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>pipelines</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDeleteProgramPipelines(GLsizei n, const GLuint *pipelines)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDeleteProgramPipelines(<db:code role="parameter">n</db:code>, <db:code role="parameter">pipelines</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDeleteProgramPipelines.xhtml">glDeleteProgramPipelines()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDeleteQueries">
<db:title>void QOpenGLExtraFunctions::glDeleteQueries(GLsizei <db:emphasis>n</db:emphasis>, const GLuint *<db:emphasis>ids</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDeleteQueries</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>ids</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDeleteQueries(GLsizei n, const GLuint *ids)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDeleteQueries(<db:code role="parameter">n</db:code>, <db:code role="parameter">ids</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDeleteQueries.xhtml">glDeleteQueries()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDeleteSamplers">
<db:title>void QOpenGLExtraFunctions::glDeleteSamplers(GLsizei <db:emphasis>count</db:emphasis>, const GLuint *<db:emphasis>samplers</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDeleteSamplers</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>samplers</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDeleteSamplers(GLsizei count, const GLuint *samplers)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDeleteSamplers(<db:code role="parameter">count</db:code>, <db:code role="parameter">samplers</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDeleteSamplers.xhtml">glDeleteSamplers()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDeleteSync">
<db:title>void QOpenGLExtraFunctions::glDeleteSync(GLsync <db:emphasis>sync</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDeleteSync</db:methodname>
<db:methodparam>
<db:type>GLsync</db:type>
<db:parameter>sync</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDeleteSync(GLsync sync)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDeleteSync(<db:code role="parameter">sync</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDeleteSync.xhtml">glDeleteSync()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDeleteTransformFeedbacks">
<db:title>void QOpenGLExtraFunctions::glDeleteTransformFeedbacks(GLsizei <db:emphasis>n</db:emphasis>, const GLuint *<db:emphasis>ids</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDeleteTransformFeedbacks</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>ids</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDeleteTransformFeedbacks(GLsizei n, const GLuint *ids)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDeleteTransformFeedbacks(<db:code role="parameter">n</db:code>, <db:code role="parameter">ids</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDeleteTransformFeedbacks.xhtml">glDeleteTransformFeedbacks()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDeleteVertexArrays">
<db:title>void QOpenGLExtraFunctions::glDeleteVertexArrays(GLsizei <db:emphasis>n</db:emphasis>, const GLuint *<db:emphasis>arrays</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDeleteVertexArrays</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>arrays</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDeleteVertexArrays(GLsizei n, const GLuint *arrays)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDeleteVertexArrays(<db:code role="parameter">n</db:code>, <db:code role="parameter">arrays</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDeleteVertexArrays.xhtml">glDeleteVertexArrays()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDisablei">
<db:title>void QOpenGLExtraFunctions::glDisablei(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDisablei</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDisablei(GLenum target, GLuint index)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDisablei(<db:code role="parameter">target</db:code>, <db:code role="parameter">index</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glEnable.xhtml">glDisablei()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDispatchCompute">
<db:title>void QOpenGLExtraFunctions::glDispatchCompute(GLuint <db:emphasis>num_groups_x</db:emphasis>, GLuint <db:emphasis>num_groups_y</db:emphasis>, GLuint <db:emphasis>num_groups_z</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDispatchCompute</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>num_groups_x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>num_groups_y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>num_groups_z</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDispatchCompute(<db:code role="parameter">num_groups_x</db:code>, <db:code role="parameter">num_groups_y</db:code>, <db:code role="parameter">num_groups_z</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDispatchCompute.xhtml">glDispatchCompute()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDispatchComputeIndirect">
<db:title>void QOpenGLExtraFunctions::glDispatchComputeIndirect(GLintptr <db:emphasis>indirect</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDispatchComputeIndirect</db:methodname>
<db:methodparam>
<db:type>GLintptr</db:type>
<db:parameter>indirect</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDispatchComputeIndirect(GLintptr indirect)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDispatchComputeIndirect(<db:code role="parameter">indirect</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDispatchComputeIndirect.xhtml">glDispatchComputeIndirect()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDrawArraysIndirect">
<db:title>void QOpenGLExtraFunctions::glDrawArraysIndirect(GLenum <db:emphasis>mode</db:emphasis>, const void *<db:emphasis>indirect</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDrawArraysIndirect</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>indirect</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDrawArraysIndirect(GLenum mode, const void *indirect)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDrawArraysIndirect(<db:code role="parameter">mode</db:code>, <db:code role="parameter">indirect</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDrawArraysIndirect.xhtml">glDrawArraysIndirect()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDrawArraysInstanced">
<db:title>void QOpenGLExtraFunctions::glDrawArraysInstanced(GLenum <db:emphasis>mode</db:emphasis>, GLint <db:emphasis>first</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLsizei <db:emphasis>instancecount</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDrawArraysInstanced</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>first</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>instancecount</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDrawArraysInstanced(<db:code role="parameter">mode</db:code>, <db:code role="parameter">first</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">instancecount</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDrawArraysInstanced.xhtml">glDrawArraysInstanced()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDrawBuffers">
<db:title>void QOpenGLExtraFunctions::glDrawBuffers(GLsizei <db:emphasis>n</db:emphasis>, const GLenum *<db:emphasis>bufs</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDrawBuffers</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLenum *</db:type>
<db:parameter>bufs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDrawBuffers(GLsizei n, const GLenum *bufs)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDrawBuffers(<db:code role="parameter">n</db:code>, <db:code role="parameter">bufs</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDrawBuffers.xhtml">glDrawBuffers()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDrawElementsBaseVertex">
<db:title>void QOpenGLExtraFunctions::glDrawElementsBaseVertex(GLenum <db:emphasis>mode</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, const void *<db:emphasis>indices</db:emphasis>, GLint <db:emphasis>basevertex</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDrawElementsBaseVertex</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>indices</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>basevertex</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDrawElementsBaseVertex(<db:code role="parameter">mode</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">indices</db:code>, <db:code role="parameter">basevertex</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDrawElementsBaseVertex.xhtml">glDrawElementsBaseVerte()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDrawElementsIndirect">
<db:title>void QOpenGLExtraFunctions::glDrawElementsIndirect(GLenum <db:emphasis>mode</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, const void *<db:emphasis>indirect</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDrawElementsIndirect</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>indirect</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDrawElementsIndirect(GLenum mode, GLenum type, const void *indirect)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDrawElementsIndirect(<db:code role="parameter">mode</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">indirect</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDrawElementsIndirect.xhtml">glDrawElementsIndirect()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDrawElementsInstanced">
<db:title>void QOpenGLExtraFunctions::glDrawElementsInstanced(GLenum <db:emphasis>mode</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, const void *<db:emphasis>indices</db:emphasis>, GLsizei <db:emphasis>instancecount</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDrawElementsInstanced</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>indices</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>instancecount</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDrawElementsInstanced(<db:code role="parameter">mode</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">indices</db:code>, <db:code role="parameter">instancecount</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDrawElementsInstanced.xhtml">glDrawElementsInstanced()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDrawElementsInstancedBaseVertex">
<db:title>void QOpenGLExtraFunctions::glDrawElementsInstancedBaseVertex(GLenum <db:emphasis>mode</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, const void *<db:emphasis>indices</db:emphasis>, GLsizei <db:emphasis>instancecount</db:emphasis>, GLint <db:emphasis>basevertex</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDrawElementsInstancedBaseVertex</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>indices</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>instancecount</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>basevertex</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDrawElementsInstancedBaseVertex(<db:code role="parameter">mode</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">indices</db:code>, <db:code role="parameter">instancecount</db:code>, <db:code role="parameter">basevertex</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDrawElementsInstancedBaseVertex.xhtml">glDrawElementsInstancedBaseVerte()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDrawRangeElements">
<db:title>void QOpenGLExtraFunctions::glDrawRangeElements(GLenum <db:emphasis>mode</db:emphasis>, GLuint <db:emphasis>start</db:emphasis>, GLuint <db:emphasis>end</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, const void *<db:emphasis>indices</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDrawRangeElements</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>start</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>end</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>indices</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDrawRangeElements(<db:code role="parameter">mode</db:code>, <db:code role="parameter">start</db:code>, <db:code role="parameter">end</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">indices</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDrawRangeElements.xhtml">glDrawRangeElements()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDrawRangeElementsBaseVertex">
<db:title>void QOpenGLExtraFunctions::glDrawRangeElementsBaseVertex(GLenum <db:emphasis>mode</db:emphasis>, GLuint <db:emphasis>start</db:emphasis>, GLuint <db:emphasis>end</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, const void *<db:emphasis>indices</db:emphasis>, GLint <db:emphasis>basevertex</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDrawRangeElementsBaseVertex</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>start</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>end</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>indices</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>basevertex</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDrawRangeElementsBaseVertex(<db:code role="parameter">mode</db:code>, <db:code role="parameter">start</db:code>, <db:code role="parameter">end</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">indices</db:code>, <db:code role="parameter">basevertex</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDrawRangeElementsBaseVertex.xhtml">glDrawRangeElementsBaseVerte()</db:link>.</db:para>
</db:section>
<db:section xml:id="glEnablei">
<db:title>void QOpenGLExtraFunctions::glEnablei(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glEnablei</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glEnablei(GLenum target, GLuint index)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glEnablei(<db:code role="parameter">target</db:code>, <db:code role="parameter">index</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glEnable.xhtml">glEnablei()</db:link>.</db:para>
</db:section>
<db:section xml:id="glEndQuery">
<db:title>void QOpenGLExtraFunctions::glEndQuery(GLenum <db:emphasis>target</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glEndQuery</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glEndQuery(GLenum target)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glEndQuery(<db:code role="parameter">target</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBeginQuery.xhtml">glEndQuery()</db:link>.</db:para>
</db:section>
<db:section xml:id="glEndTransformFeedback">
<db:title>void QOpenGLExtraFunctions::glEndTransformFeedback()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glEndTransformFeedback</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glEndTransformFeedback()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glEndTransformFeedback().</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBeginTransformFeedback.xhtml">glEndTransformFeedback()</db:link>.</db:para>
</db:section>
<db:section xml:id="glFenceSync">
<db:title>GLsync QOpenGLExtraFunctions::glFenceSync(GLenum <db:emphasis>condition</db:emphasis>, GLbitfield <db:emphasis>flags</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLsync</db:type>
<db:methodname>glFenceSync</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>condition</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLbitfield</db:type>
<db:parameter>flags</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLsync glFenceSync(GLenum condition, GLbitfield flags)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glFenceSync(<db:code role="parameter">condition</db:code>, <db:code role="parameter">flags</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glFenceSync.xhtml">glFenceSync()</db:link>.</db:para>
</db:section>
<db:section xml:id="glFlushMappedBufferRange">
<db:title>void QOpenGLExtraFunctions::glFlushMappedBufferRange(GLenum <db:emphasis>target</db:emphasis>, GLintptr <db:emphasis>offset</db:emphasis>, GLsizeiptr <db:emphasis>length</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glFlushMappedBufferRange</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLintptr</db:type>
<db:parameter>offset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizeiptr</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glFlushMappedBufferRange(<db:code role="parameter">target</db:code>, <db:code role="parameter">offset</db:code>, <db:code role="parameter">length</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glFlushMappedBufferRange.xhtml">glFlushMappedBufferRange()</db:link>.</db:para>
</db:section>
<db:section xml:id="glFramebufferParameteri">
<db:title>void QOpenGLExtraFunctions::glFramebufferParameteri(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint <db:emphasis>param</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glFramebufferParameteri</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>param</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glFramebufferParameteri(GLenum target, GLenum pname, GLint param)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glFramebufferParameteri(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">param</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glFramebufferParameteri.xhtml">glFramebufferParameteri()</db:link>.</db:para>
</db:section>
<db:section xml:id="glFramebufferTexture">
<db:title>void QOpenGLExtraFunctions::glFramebufferTexture(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>attachment</db:emphasis>, GLuint <db:emphasis>texture</db:emphasis>, GLint <db:emphasis>level</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glFramebufferTexture</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>attachment</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>texture</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glFramebufferTexture(<db:code role="parameter">target</db:code>, <db:code role="parameter">attachment</db:code>, <db:code role="parameter">texture</db:code>, <db:code role="parameter">level</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glFramebufferTexture.xhtml">glFramebufferTexture()</db:link>.</db:para>
</db:section>
<db:section xml:id="glFramebufferTextureLayer">
<db:title>void QOpenGLExtraFunctions::glFramebufferTextureLayer(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>attachment</db:emphasis>, GLuint <db:emphasis>texture</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLint <db:emphasis>layer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glFramebufferTextureLayer</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>attachment</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>texture</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>layer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glFramebufferTextureLayer(<db:code role="parameter">target</db:code>, <db:code role="parameter">attachment</db:code>, <db:code role="parameter">texture</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">layer</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glFramebufferTextureLayer.xhtml">glFramebufferTextureLayer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGenProgramPipelines">
<db:title>void QOpenGLExtraFunctions::glGenProgramPipelines(GLsizei <db:emphasis>n</db:emphasis>, GLuint *<db:emphasis>pipelines</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGenProgramPipelines</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>pipelines</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGenProgramPipelines(GLsizei n, GLuint *pipelines)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGenProgramPipelines(<db:code role="parameter">n</db:code>, <db:code role="parameter">pipelines</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGenProgramPipelines.xhtml">glGenProgramPipelines()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGenQueries">
<db:title>void QOpenGLExtraFunctions::glGenQueries(GLsizei <db:emphasis>n</db:emphasis>, GLuint *<db:emphasis>ids</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGenQueries</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>ids</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGenQueries(GLsizei n, GLuint *ids)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGenQueries(<db:code role="parameter">n</db:code>, <db:code role="parameter">ids</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGenQueries.xhtml">glGenQueries()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGenSamplers">
<db:title>void QOpenGLExtraFunctions::glGenSamplers(GLsizei <db:emphasis>count</db:emphasis>, GLuint *<db:emphasis>samplers</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGenSamplers</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>samplers</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGenSamplers(GLsizei count, GLuint *samplers)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGenSamplers(<db:code role="parameter">count</db:code>, <db:code role="parameter">samplers</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGenSamplers.xhtml">glGenSamplers()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGenTransformFeedbacks">
<db:title>void QOpenGLExtraFunctions::glGenTransformFeedbacks(GLsizei <db:emphasis>n</db:emphasis>, GLuint *<db:emphasis>ids</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGenTransformFeedbacks</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>ids</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGenTransformFeedbacks(GLsizei n, GLuint *ids)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGenTransformFeedbacks(<db:code role="parameter">n</db:code>, <db:code role="parameter">ids</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGenTransformFeedbacks.xhtml">glGenTransformFeedbacks()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGenVertexArrays">
<db:title>void QOpenGLExtraFunctions::glGenVertexArrays(GLsizei <db:emphasis>n</db:emphasis>, GLuint *<db:emphasis>arrays</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGenVertexArrays</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>arrays</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGenVertexArrays(GLsizei n, GLuint *arrays)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGenVertexArrays(<db:code role="parameter">n</db:code>, <db:code role="parameter">arrays</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGenVertexArrays.xhtml">glGenVertexArrays()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetActiveUniformBlockName">
<db:title>void QOpenGLExtraFunctions::glGetActiveUniformBlockName(GLuint <db:emphasis>program</db:emphasis>, GLuint <db:emphasis>uniformBlockIndex</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, GLchar *<db:emphasis>uniformBlockName</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetActiveUniformBlockName</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>uniformBlockIndex</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLchar *</db:type>
<db:parameter>uniformBlockName</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetActiveUniformBlockName(<db:code role="parameter">program</db:code>, <db:code role="parameter">uniformBlockIndex</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">uniformBlockName</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetActiveUniformBlockName.xhtml">glGetActiveUniformBlockName()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetActiveUniformBlockiv">
<db:title>void QOpenGLExtraFunctions::glGetActiveUniformBlockiv(GLuint <db:emphasis>program</db:emphasis>, GLuint <db:emphasis>uniformBlockIndex</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetActiveUniformBlockiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>uniformBlockIndex</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetActiveUniformBlockiv(<db:code role="parameter">program</db:code>, <db:code role="parameter">uniformBlockIndex</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetActiveUniformBlockiv.xhtml">glGetActiveUniformBlockiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetActiveUniformsiv">
<db:title>void QOpenGLExtraFunctions::glGetActiveUniformsiv(GLuint <db:emphasis>program</db:emphasis>, GLsizei <db:emphasis>uniformCount</db:emphasis>, const GLuint *<db:emphasis>uniformIndices</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetActiveUniformsiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>uniformCount</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>uniformIndices</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetActiveUniformsiv(<db:code role="parameter">program</db:code>, <db:code role="parameter">uniformCount</db:code>, <db:code role="parameter">uniformIndices</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetActiveUniformsiv.xhtml">glGetActiveUniformsiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetBooleani_v">
<db:title>void QOpenGLExtraFunctions::glGetBooleani_v(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>, GLboolean *<db:emphasis>data</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetBooleani_v</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean *</db:type>
<db:parameter>data</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetBooleani_v(GLenum target, GLuint index, GLboolean *data)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetBooleani_v(<db:code role="parameter">target</db:code>, <db:code role="parameter">index</db:code>, <db:code role="parameter">data</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGet.xhtml">glGetBooleani_v()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetBufferParameteri64v">
<db:title>void QOpenGLExtraFunctions::glGetBufferParameteri64v(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint64 *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetBufferParameteri64v</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint64 *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetBufferParameteri64v(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetBufferParameter.xhtml">glGetBufferParameteri64v()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetBufferPointerv">
<db:title>void QOpenGLExtraFunctions::glGetBufferPointerv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, void **<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetBufferPointerv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>void **</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetBufferPointerv(GLenum target, GLenum pname, void **params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetBufferPointerv(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetBufferPointerv.xhtml">glGetBufferPointerv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetDebugMessageLog">
<db:title>GLuint QOpenGLExtraFunctions::glGetDebugMessageLog(GLuint <db:emphasis>count</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLenum *<db:emphasis>sources</db:emphasis>, GLenum *<db:emphasis>types</db:emphasis>, GLuint *<db:emphasis>ids</db:emphasis>, GLenum *<db:emphasis>severities</db:emphasis>, GLsizei *<db:emphasis>lengths</db:emphasis>, GLchar *<db:emphasis>messageLog</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLuint</db:type>
<db:methodname>glGetDebugMessageLog</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum *</db:type>
<db:parameter>sources</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum *</db:type>
<db:parameter>types</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>ids</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum *</db:type>
<db:parameter>severities</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>lengths</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLchar *</db:type>
<db:parameter>messageLog</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLuint glGetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetDebugMessageLog(<db:code role="parameter">count</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">sources</db:code>, <db:code role="parameter">types</db:code>, <db:code role="parameter">ids</db:code>, <db:code role="parameter">severities</db:code>, <db:code role="parameter">lengths</db:code>, <db:code role="parameter">messageLog</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetDebugMessageLog.xhtml">glGetDebugMessageLog()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetFragDataLocation">
<db:title>GLint QOpenGLExtraFunctions::glGetFragDataLocation(GLuint <db:emphasis>program</db:emphasis>, const GLchar *<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLint</db:type>
<db:methodname>glGetFragDataLocation</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLchar *</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLint glGetFragDataLocation(GLuint program, const GLchar *name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetFragDataLocation(<db:code role="parameter">program</db:code>, <db:code role="parameter">name</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetFragDataLocation.xhtml">glGetFragDataLocation()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetFramebufferParameteriv">
<db:title>void QOpenGLExtraFunctions::glGetFramebufferParameteriv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetFramebufferParameteriv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetFramebufferParameteriv(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetFramebufferParameteriv.xhtml">glGetFramebufferParameteriv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetGraphicsResetStatus">
<db:title>GLenum QOpenGLExtraFunctions::glGetGraphicsResetStatus()</db:title>
<db:methodsynopsis>
<db:type>GLenum</db:type>
<db:methodname>glGetGraphicsResetStatus</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLenum glGetGraphicsResetStatus()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetGraphicsResetStatus().</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetGraphicsResetStatus.xhtml">glGetGraphicsResetStatus()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetInteger64i_v">
<db:title>void QOpenGLExtraFunctions::glGetInteger64i_v(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>, GLint64 *<db:emphasis>data</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetInteger64i_v</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint64 *</db:type>
<db:parameter>data</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetInteger64i_v(GLenum target, GLuint index, GLint64 *data)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetInteger64i_v(<db:code role="parameter">target</db:code>, <db:code role="parameter">index</db:code>, <db:code role="parameter">data</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGet.xhtml">glGetInteger64i_v()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetInteger64v">
<db:title>void QOpenGLExtraFunctions::glGetInteger64v(GLenum <db:emphasis>pname</db:emphasis>, GLint64 *<db:emphasis>data</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetInteger64v</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint64 *</db:type>
<db:parameter>data</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetInteger64v(GLenum pname, GLint64 *data)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetInteger64v(<db:code role="parameter">pname</db:code>, <db:code role="parameter">data</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGet.xhtml">glGetInteger64v()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetIntegeri_v">
<db:title>void QOpenGLExtraFunctions::glGetIntegeri_v(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>, GLint *<db:emphasis>data</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetIntegeri_v</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>data</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetIntegeri_v(GLenum target, GLuint index, GLint *data)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetIntegeri_v(<db:code role="parameter">target</db:code>, <db:code role="parameter">index</db:code>, <db:code role="parameter">data</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGet.xhtml">glGetIntegeri_v()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetInternalformativ">
<db:title>void QOpenGLExtraFunctions::glGetInternalformativ(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>internalformat</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetInternalformativ</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetInternalformativ(<db:code role="parameter">target</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetInternalformativ.xhtml">glGetInternalformativ()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetMultisamplefv">
<db:title>void QOpenGLExtraFunctions::glGetMultisamplefv(GLenum <db:emphasis>pname</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>, GLfloat *<db:emphasis>val</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetMultisamplefv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat *</db:type>
<db:parameter>val</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetMultisamplefv(GLenum pname, GLuint index, GLfloat *val)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetMultisamplefv(<db:code role="parameter">pname</db:code>, <db:code role="parameter">index</db:code>, <db:code role="parameter">val</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetMultisamplefv.xhtml">glGetMultisamplefv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetObjectLabel">
<db:title>void QOpenGLExtraFunctions::glGetObjectLabel(GLenum <db:emphasis>identifier</db:emphasis>, GLuint <db:emphasis>name</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, GLchar *<db:emphasis>label</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetObjectLabel</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>identifier</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLchar *</db:type>
<db:parameter>label</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetObjectLabel(<db:code role="parameter">identifier</db:code>, <db:code role="parameter">name</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">label</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetObjectLabel.xhtml">glGetObjectLabe()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetObjectPtrLabel">
<db:title>void QOpenGLExtraFunctions::glGetObjectPtrLabel(const void *<db:emphasis>ptr</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, GLchar *<db:emphasis>label</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetObjectPtrLabel</db:methodname>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>ptr</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLchar *</db:type>
<db:parameter>label</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetObjectPtrLabel(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetObjectPtrLabel(<db:code role="parameter">ptr</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">label</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetObjectPtrLabel.xhtml">glGetObjectPtrLabe()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetPointerv">
<db:title>void QOpenGLExtraFunctions::glGetPointerv(GLenum <db:emphasis>pname</db:emphasis>, void **<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetPointerv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>void **</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetPointerv(GLenum pname, void **params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetPointerv(<db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetPointerv.xhtml">glGetPointerv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetProgramBinary">
<db:title>void QOpenGLExtraFunctions::glGetProgramBinary(GLuint <db:emphasis>program</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, GLenum *<db:emphasis>binaryFormat</db:emphasis>, void *<db:emphasis>binary</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetProgramBinary</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum *</db:type>
<db:parameter>binaryFormat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>void *</db:type>
<db:parameter>binary</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetProgramBinary(<db:code role="parameter">program</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">binaryFormat</db:code>, <db:code role="parameter">binary</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetProgramBinary.xhtml">glGetProgramBinary()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetProgramInterfaceiv">
<db:title>void QOpenGLExtraFunctions::glGetProgramInterfaceiv(GLuint <db:emphasis>program</db:emphasis>, GLenum <db:emphasis>programInterface</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetProgramInterfaceiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>programInterface</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetProgramInterfaceiv(<db:code role="parameter">program</db:code>, <db:code role="parameter">programInterface</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetProgramInterface.xhtml">glGetProgramInterfaceiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetProgramPipelineInfoLog">
<db:title>void QOpenGLExtraFunctions::glGetProgramPipelineInfoLog(GLuint <db:emphasis>pipeline</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, GLchar *<db:emphasis>infoLog</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetProgramPipelineInfoLog</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>pipeline</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLchar *</db:type>
<db:parameter>infoLog</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetProgramPipelineInfoLog(<db:code role="parameter">pipeline</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">infoLog</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetProgramPipelineInfoLog.xhtml">glGetProgramPipelineInfoLog()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetProgramPipelineiv">
<db:title>void QOpenGLExtraFunctions::glGetProgramPipelineiv(GLuint <db:emphasis>pipeline</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetProgramPipelineiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>pipeline</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetProgramPipelineiv(<db:code role="parameter">pipeline</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetProgramPipeline.xhtml">glGetProgramPipelineiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetProgramResourceIndex">
<db:title>GLuint QOpenGLExtraFunctions::glGetProgramResourceIndex(GLuint <db:emphasis>program</db:emphasis>, GLenum <db:emphasis>programInterface</db:emphasis>, const GLchar *<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLuint</db:type>
<db:methodname>glGetProgramResourceIndex</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>programInterface</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLchar *</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLuint glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar *name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetProgramResourceIndex(<db:code role="parameter">program</db:code>, <db:code role="parameter">programInterface</db:code>, <db:code role="parameter">name</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetProgramResourceIndex.xhtml">glGetProgramResourceIndex()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetProgramResourceLocation">
<db:title>GLint QOpenGLExtraFunctions::glGetProgramResourceLocation(GLuint <db:emphasis>program</db:emphasis>, GLenum <db:emphasis>programInterface</db:emphasis>, const GLchar *<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLint</db:type>
<db:methodname>glGetProgramResourceLocation</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>programInterface</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLchar *</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLint glGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar *name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetProgramResourceLocation(<db:code role="parameter">program</db:code>, <db:code role="parameter">programInterface</db:code>, <db:code role="parameter">name</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetProgramResourceLocation.xhtml">glGetProgramResourceLocation()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetProgramResourceName">
<db:title>void QOpenGLExtraFunctions::glGetProgramResourceName(GLuint <db:emphasis>program</db:emphasis>, GLenum <db:emphasis>programInterface</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, GLchar *<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetProgramResourceName</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>programInterface</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLchar *</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetProgramResourceName(<db:code role="parameter">program</db:code>, <db:code role="parameter">programInterface</db:code>, <db:code role="parameter">index</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">name</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetProgramResourceName.xhtml">glGetProgramResourceName()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetProgramResourceiv">
<db:title>void QOpenGLExtraFunctions::glGetProgramResourceiv(GLuint <db:emphasis>program</db:emphasis>, GLenum <db:emphasis>programInterface</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>, GLsizei <db:emphasis>propCount</db:emphasis>, const GLenum *<db:emphasis>props</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetProgramResourceiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>programInterface</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>propCount</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLenum *</db:type>
<db:parameter>props</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetProgramResourceiv(<db:code role="parameter">program</db:code>, <db:code role="parameter">programInterface</db:code>, <db:code role="parameter">index</db:code>, <db:code role="parameter">propCount</db:code>, <db:code role="parameter">props</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetProgramResource.xhtml">glGetProgramResourceiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetQueryObjectuiv">
<db:title>void QOpenGLExtraFunctions::glGetQueryObjectuiv(GLuint <db:emphasis>id</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLuint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetQueryObjectuiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>id</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetQueryObjectuiv(<db:code role="parameter">id</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetQueryObjectuiv.xhtml">glGetQueryObjectuiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetQueryiv">
<db:title>void QOpenGLExtraFunctions::glGetQueryiv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetQueryiv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetQueryiv(GLenum target, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetQueryiv(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetQueryiv.xhtml">glGetQueryiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetSamplerParameterIiv">
<db:title>void QOpenGLExtraFunctions::glGetSamplerParameterIiv(GLuint <db:emphasis>sampler</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetSamplerParameterIiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>sampler</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetSamplerParameterIiv(<db:code role="parameter">sampler</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetSamplerParameter.xhtml">glGetSamplerParameterIiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetSamplerParameterIuiv">
<db:title>void QOpenGLExtraFunctions::glGetSamplerParameterIuiv(GLuint <db:emphasis>sampler</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLuint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetSamplerParameterIuiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>sampler</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetSamplerParameterIuiv(<db:code role="parameter">sampler</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetSamplerParameter.xhtml">glGetSamplerParameterIuiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetSamplerParameterfv">
<db:title>void QOpenGLExtraFunctions::glGetSamplerParameterfv(GLuint <db:emphasis>sampler</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLfloat *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetSamplerParameterfv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>sampler</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetSamplerParameterfv(<db:code role="parameter">sampler</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetSamplerParameter.xhtml">glGetSamplerParameterfv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetSamplerParameteriv">
<db:title>void QOpenGLExtraFunctions::glGetSamplerParameteriv(GLuint <db:emphasis>sampler</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetSamplerParameteriv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>sampler</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetSamplerParameteriv(<db:code role="parameter">sampler</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetSamplerParameter.xhtml">glGetSamplerParameteriv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetStringi">
<db:title>const GLubyte *QOpenGLExtraFunctions::glGetStringi(GLenum <db:emphasis>name</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>const GLubyte *</db:type>
<db:methodname>glGetStringi</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">const GLubyte * glGetStringi(GLenum name, GLuint index)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetStringi(<db:code role="parameter">name</db:code>, <db:code role="parameter">index</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetString.xhtml">glGetStringi()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetSynciv">
<db:title>void QOpenGLExtraFunctions::glGetSynciv(GLsync <db:emphasis>sync</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, GLint *<db:emphasis>values</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetSynciv</db:methodname>
<db:methodparam>
<db:type>GLsync</db:type>
<db:parameter>sync</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>values</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetSynciv(<db:code role="parameter">sync</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">values</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetSynciv.xhtml">glGetSynciv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetTexLevelParameterfv">
<db:title>void QOpenGLExtraFunctions::glGetTexLevelParameterfv(GLenum <db:emphasis>target</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLfloat *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetTexLevelParameterfv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetTexLevelParameterfv(<db:code role="parameter">target</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetTexLevelParameter.xhtml">glGetTexLevelParameterfv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetTexLevelParameteriv">
<db:title>void QOpenGLExtraFunctions::glGetTexLevelParameteriv(GLenum <db:emphasis>target</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetTexLevelParameteriv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetTexLevelParameteriv(<db:code role="parameter">target</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetTexLevelParameter.xhtml">glGetTexLevelParameteriv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetTexParameterIiv">
<db:title>void QOpenGLExtraFunctions::glGetTexParameterIiv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetTexParameterIiv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetTexParameterIiv(GLenum target, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetTexParameterIiv(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetTexParameter.xhtml">glGetTexParameterIiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetTexParameterIuiv">
<db:title>void QOpenGLExtraFunctions::glGetTexParameterIuiv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLuint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetTexParameterIuiv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetTexParameterIuiv(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetTexParameter.xhtml">glGetTexParameterIuiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetTransformFeedbackVarying">
<db:title>void QOpenGLExtraFunctions::glGetTransformFeedbackVarying(GLuint <db:emphasis>program</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, GLsizei *<db:emphasis>size</db:emphasis>, GLenum *<db:emphasis>type</db:emphasis>, GLchar *<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetTransformFeedbackVarying</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum *</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLchar *</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetTransformFeedbackVarying(<db:code role="parameter">program</db:code>, <db:code role="parameter">index</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">size</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">name</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetTransformFeedbackVarying.xhtml">glGetTransformFeedbackVarying()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetUniformBlockIndex">
<db:title>GLuint QOpenGLExtraFunctions::glGetUniformBlockIndex(GLuint <db:emphasis>program</db:emphasis>, const GLchar *<db:emphasis>uniformBlockName</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLuint</db:type>
<db:methodname>glGetUniformBlockIndex</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLchar *</db:type>
<db:parameter>uniformBlockName</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLuint glGetUniformBlockIndex(GLuint program, const GLchar *uniformBlockName)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetUniformBlockIndex(<db:code role="parameter">program</db:code>, <db:code role="parameter">uniformBlockName</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetUniformBlockIndex.xhtml">glGetUniformBlockIndex()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetUniformIndices">
<db:title>void QOpenGLExtraFunctions::glGetUniformIndices(GLuint <db:emphasis>program</db:emphasis>, GLsizei <db:emphasis>uniformCount</db:emphasis>, const GLchar *const *<db:emphasis>uniformNames</db:emphasis>, GLuint *<db:emphasis>uniformIndices</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetUniformIndices</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>uniformCount</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLchar *const *</db:type>
<db:parameter>uniformNames</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>uniformIndices</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const *uniformNames, GLuint *uniformIndices)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetUniformIndices(<db:code role="parameter">program</db:code>, <db:code role="parameter">uniformCount</db:code>, <db:code role="parameter">uniformNames</db:code>, <db:code role="parameter">uniformIndices</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetUniformIndices.xhtml">glGetUniformIndices()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetUniformuiv">
<db:title>void QOpenGLExtraFunctions::glGetUniformuiv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLuint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetUniformuiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetUniformuiv(GLuint program, GLint location, GLuint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetUniformuiv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetUniform.xhtml">glGetUniformuiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetVertexAttribIiv">
<db:title>void QOpenGLExtraFunctions::glGetVertexAttribIiv(GLuint <db:emphasis>index</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetVertexAttribIiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetVertexAttribIiv(GLuint index, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetVertexAttribIiv(<db:code role="parameter">index</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetVertexAttrib.xhtml">glGetVertexAttribIiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetVertexAttribIuiv">
<db:title>void QOpenGLExtraFunctions::glGetVertexAttribIuiv(GLuint <db:emphasis>index</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLuint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetVertexAttribIuiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetVertexAttribIuiv(<db:code role="parameter">index</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetVertexAttrib.xhtml">glGetVertexAttribIuiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetnUniformfv">
<db:title>void QOpenGLExtraFunctions::glGetnUniformfv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLfloat *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetnUniformfv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetnUniformfv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetUniform.xhtml">glGetnUniformfv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetnUniformiv">
<db:title>void QOpenGLExtraFunctions::glGetnUniformiv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetnUniformiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetnUniformiv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetUniform.xhtml">glGetnUniformiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetnUniformuiv">
<db:title>void QOpenGLExtraFunctions::glGetnUniformuiv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, GLuint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetnUniformuiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetnUniformuiv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetUniform.xhtml">glGetnUniformuiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glInvalidateFramebuffer">
<db:title>void QOpenGLExtraFunctions::glInvalidateFramebuffer(GLenum <db:emphasis>target</db:emphasis>, GLsizei <db:emphasis>numAttachments</db:emphasis>, const GLenum *<db:emphasis>attachments</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glInvalidateFramebuffer</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>numAttachments</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLenum *</db:type>
<db:parameter>attachments</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum *attachments)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glInvalidateFramebuffer(<db:code role="parameter">target</db:code>, <db:code role="parameter">numAttachments</db:code>, <db:code role="parameter">attachments</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glInvalidateFramebuffer.xhtml">glInvalidateFramebuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glInvalidateSubFramebuffer">
<db:title>void QOpenGLExtraFunctions::glInvalidateSubFramebuffer(GLenum <db:emphasis>target</db:emphasis>, GLsizei <db:emphasis>numAttachments</db:emphasis>, const GLenum *<db:emphasis>attachments</db:emphasis>, GLint <db:emphasis>x</db:emphasis>, GLint <db:emphasis>y</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glInvalidateSubFramebuffer</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>numAttachments</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLenum *</db:type>
<db:parameter>attachments</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glInvalidateSubFramebuffer(<db:code role="parameter">target</db:code>, <db:code role="parameter">numAttachments</db:code>, <db:code role="parameter">attachments</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glInvalidateSubFramebuffer.xhtml">glInvalidateSubFramebuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glIsEnabledi">
<db:title>GLboolean QOpenGLExtraFunctions::glIsEnabledi(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsEnabledi</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsEnabledi(GLenum target, GLuint index)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsEnabledi(<db:code role="parameter">target</db:code>, <db:code role="parameter">index</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsEnabled.xhtml">glIsEnabledi()</db:link>.</db:para>
</db:section>
<db:section xml:id="glIsProgramPipeline">
<db:title>GLboolean QOpenGLExtraFunctions::glIsProgramPipeline(GLuint <db:emphasis>pipeline</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsProgramPipeline</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>pipeline</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsProgramPipeline(GLuint pipeline)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsProgramPipeline(<db:code role="parameter">pipeline</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsProgramPipeline.xhtml">glIsProgramPipeline()</db:link>.</db:para>
</db:section>
<db:section xml:id="glIsQuery">
<db:title>GLboolean QOpenGLExtraFunctions::glIsQuery(GLuint <db:emphasis>id</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsQuery</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>id</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsQuery(GLuint id)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsQuery(<db:code role="parameter">id</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsQuery.xhtml">glIsQuery()</db:link>.</db:para>
</db:section>
<db:section xml:id="glIsSampler">
<db:title>GLboolean QOpenGLExtraFunctions::glIsSampler(GLuint <db:emphasis>sampler</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsSampler</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>sampler</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsSampler(GLuint sampler)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsSampler(<db:code role="parameter">sampler</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsSampler.xhtml">glIsSampler()</db:link>.</db:para>
</db:section>
<db:section xml:id="glIsSync">
<db:title>GLboolean QOpenGLExtraFunctions::glIsSync(GLsync <db:emphasis>sync</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsSync</db:methodname>
<db:methodparam>
<db:type>GLsync</db:type>
<db:parameter>sync</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsSync(GLsync sync)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsSync(<db:code role="parameter">sync</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsSync.xhtml">glIsSync()</db:link>.</db:para>
</db:section>
<db:section xml:id="glIsTransformFeedback">
<db:title>GLboolean QOpenGLExtraFunctions::glIsTransformFeedback(GLuint <db:emphasis>id</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsTransformFeedback</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>id</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsTransformFeedback(GLuint id)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsTransformFeedback(<db:code role="parameter">id</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsTransformFeedback.xhtml">glIsTransformFeedback()</db:link>.</db:para>
</db:section>
<db:section xml:id="glIsVertexArray">
<db:title>GLboolean QOpenGLExtraFunctions::glIsVertexArray(GLuint <db:emphasis>array</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsVertexArray</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>array</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsVertexArray(GLuint array)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsVertexArray(<db:code role="parameter">array</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsVertexArray.xhtml">glIsVertexArray()</db:link>.</db:para>
</db:section>
<db:section xml:id="glMapBufferRange">
<db:title>void *QOpenGLExtraFunctions::glMapBufferRange(GLenum <db:emphasis>target</db:emphasis>, GLintptr <db:emphasis>offset</db:emphasis>, GLsizeiptr <db:emphasis>length</db:emphasis>, GLbitfield <db:emphasis>access</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>void *</db:type>
<db:methodname>glMapBufferRange</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLintptr</db:type>
<db:parameter>offset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizeiptr</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLbitfield</db:type>
<db:parameter>access</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void * glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glMapBufferRange(<db:code role="parameter">target</db:code>, <db:code role="parameter">offset</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">access</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glMapBufferRange.xhtml">glMapBufferRange()</db:link>.</db:para>
</db:section>
<db:section xml:id="glMemoryBarrier">
<db:title>void QOpenGLExtraFunctions::glMemoryBarrier(GLbitfield <db:emphasis>barriers</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glMemoryBarrier</db:methodname>
<db:methodparam>
<db:type>GLbitfield</db:type>
<db:parameter>barriers</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glMemoryBarrier(GLbitfield barriers)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glMemoryBarrier(<db:code role="parameter">barriers</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3.1/html/glMemoryBarrier.xhtml">glMemoryBarrier()</db:link>.</db:para>
</db:section>
<db:section xml:id="glMemoryBarrierByRegion">
<db:title>void QOpenGLExtraFunctions::glMemoryBarrierByRegion(GLbitfield <db:emphasis>barriers</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glMemoryBarrierByRegion</db:methodname>
<db:methodparam>
<db:type>GLbitfield</db:type>
<db:parameter>barriers</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glMemoryBarrierByRegion(GLbitfield barriers)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glMemoryBarrierByRegion(<db:code role="parameter">barriers</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3.1/html/glMemoryBarrier.xhtml">glMemoryBarrierByRegion()</db:link>.</db:para>
</db:section>
<db:section xml:id="glMinSampleShading">
<db:title>void QOpenGLExtraFunctions::glMinSampleShading(GLfloat <db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glMinSampleShading</db:methodname>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glMinSampleShading(GLfloat value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glMinSampleShading(<db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glMinSampleShading.xhtml">glMinSampleShading()</db:link>.</db:para>
</db:section>
<db:section xml:id="glObjectLabel">
<db:title>void QOpenGLExtraFunctions::glObjectLabel(GLenum <db:emphasis>identifier</db:emphasis>, GLuint <db:emphasis>name</db:emphasis>, GLsizei <db:emphasis>length</db:emphasis>, const GLchar *<db:emphasis>label</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glObjectLabel</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>identifier</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLchar *</db:type>
<db:parameter>label</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar *label)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glObjectLabel(<db:code role="parameter">identifier</db:code>, <db:code role="parameter">name</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">label</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glObjectLabel.xhtml">glObjectLabe()</db:link>.</db:para>
</db:section>
<db:section xml:id="glObjectPtrLabel">
<db:title>void QOpenGLExtraFunctions::glObjectPtrLabel(const void *<db:emphasis>ptr</db:emphasis>, GLsizei <db:emphasis>length</db:emphasis>, const GLchar *<db:emphasis>label</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glObjectPtrLabel</db:methodname>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>ptr</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLchar *</db:type>
<db:parameter>label</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glObjectPtrLabel(const void *ptr, GLsizei length, const GLchar *label)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glObjectPtrLabel(<db:code role="parameter">ptr</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">label</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glObjectPtrLabel.xhtml">glObjectPtrLabe()</db:link>.</db:para>
</db:section>
<db:section xml:id="glPatchParameteri">
<db:title>void QOpenGLExtraFunctions::glPatchParameteri(GLenum <db:emphasis>pname</db:emphasis>, GLint <db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glPatchParameteri</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glPatchParameteri(GLenum pname, GLint value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glPatchParameteri(<db:code role="parameter">pname</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glPatchParameteri.xhtml">glPatchParameteri()</db:link>.</db:para>
</db:section>
<db:section xml:id="glPauseTransformFeedback">
<db:title>void QOpenGLExtraFunctions::glPauseTransformFeedback()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glPauseTransformFeedback</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glPauseTransformFeedback()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glPauseTransformFeedback().</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glPauseTransformFeedback.xhtml">glPauseTransformFeedback()</db:link>.</db:para>
</db:section>
<db:section xml:id="glPopDebugGroup">
<db:title>void QOpenGLExtraFunctions::glPopDebugGroup()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glPopDebugGroup</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glPopDebugGroup()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glPopDebugGroup().</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glPopDebugGroup.xhtml">glPopDebugGroup()</db:link>.</db:para>
</db:section>
<db:section xml:id="glPrimitiveBoundingBox">
<db:title>void QOpenGLExtraFunctions::glPrimitiveBoundingBox(GLfloat <db:emphasis>minX</db:emphasis>, GLfloat <db:emphasis>minY</db:emphasis>, GLfloat <db:emphasis>minZ</db:emphasis>, GLfloat <db:emphasis>minW</db:emphasis>, GLfloat <db:emphasis>maxX</db:emphasis>, GLfloat <db:emphasis>maxY</db:emphasis>, GLfloat <db:emphasis>maxZ</db:emphasis>, GLfloat <db:emphasis>maxW</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glPrimitiveBoundingBox</db:methodname>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>minX</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>minY</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>minZ</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>minW</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>maxX</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>maxY</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>maxZ</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>maxW</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glPrimitiveBoundingBox(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glPrimitiveBoundingBox(<db:code role="parameter">minX</db:code>, <db:code role="parameter">minY</db:code>, <db:code role="parameter">minZ</db:code>, <db:code role="parameter">minW</db:code>, <db:code role="parameter">maxX</db:code>, <db:code role="parameter">maxY</db:code>, <db:code role="parameter">maxZ</db:code>, <db:code role="parameter">maxW</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glPrimitiveBoundingBox.xhtml">glPrimitiveBoundingBo()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramBinary">
<db:title>void QOpenGLExtraFunctions::glProgramBinary(GLuint <db:emphasis>program</db:emphasis>, GLenum <db:emphasis>binaryFormat</db:emphasis>, const void *<db:emphasis>binary</db:emphasis>, GLsizei <db:emphasis>length</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramBinary</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>binaryFormat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>binary</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramBinary(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramBinary(<db:code role="parameter">program</db:code>, <db:code role="parameter">binaryFormat</db:code>, <db:code role="parameter">binary</db:code>, <db:code role="parameter">length</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramBinary.xhtml">glProgramBinary()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramParameteri">
<db:title>void QOpenGLExtraFunctions::glProgramParameteri(GLuint <db:emphasis>program</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint <db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramParameteri</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramParameteri(GLuint program, GLenum pname, GLint value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramParameteri(<db:code role="parameter">program</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramParameteri.xhtml">glProgramParameteri()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform1f">
<db:title>void QOpenGLExtraFunctions::glProgramUniform1f(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLfloat <db:emphasis>v0</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform1f</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform1f(GLuint program, GLint location, GLfloat v0)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform1f(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform1f()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform1fv">
<db:title>void QOpenGLExtraFunctions::glProgramUniform1fv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform1fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform1fv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform1fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform1i">
<db:title>void QOpenGLExtraFunctions::glProgramUniform1i(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLint <db:emphasis>v0</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform1i</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform1i(GLuint program, GLint location, GLint v0)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform1i(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform1i()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform1iv">
<db:title>void QOpenGLExtraFunctions::glProgramUniform1iv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform1iv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform1iv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform1iv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform1ui">
<db:title>void QOpenGLExtraFunctions::glProgramUniform1ui(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLuint <db:emphasis>v0</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform1ui</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform1ui(GLuint program, GLint location, GLuint v0)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform1ui(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform1ui()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform1uiv">
<db:title>void QOpenGLExtraFunctions::glProgramUniform1uiv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLuint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform1uiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform1uiv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform1uiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform2f">
<db:title>void QOpenGLExtraFunctions::glProgramUniform2f(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLfloat <db:emphasis>v0</db:emphasis>, GLfloat <db:emphasis>v1</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform2f</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>v1</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform2f(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>, <db:code role="parameter">v1</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform2f()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform2fv">
<db:title>void QOpenGLExtraFunctions::glProgramUniform2fv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform2fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform2fv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform2fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform2i">
<db:title>void QOpenGLExtraFunctions::glProgramUniform2i(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLint <db:emphasis>v0</db:emphasis>, GLint <db:emphasis>v1</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform2i</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>v1</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform2i(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>, <db:code role="parameter">v1</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform2i()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform2iv">
<db:title>void QOpenGLExtraFunctions::glProgramUniform2iv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform2iv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform2iv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform2iv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform2ui">
<db:title>void QOpenGLExtraFunctions::glProgramUniform2ui(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLuint <db:emphasis>v0</db:emphasis>, GLuint <db:emphasis>v1</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform2ui</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v1</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform2ui(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>, <db:code role="parameter">v1</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform2ui()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform2uiv">
<db:title>void QOpenGLExtraFunctions::glProgramUniform2uiv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLuint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform2uiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform2uiv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform2uiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform3f">
<db:title>void QOpenGLExtraFunctions::glProgramUniform3f(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLfloat <db:emphasis>v0</db:emphasis>, GLfloat <db:emphasis>v1</db:emphasis>, GLfloat <db:emphasis>v2</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform3f</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>v1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>v2</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform3f(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>, <db:code role="parameter">v1</db:code>, <db:code role="parameter">v2</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform3f()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform3fv">
<db:title>void QOpenGLExtraFunctions::glProgramUniform3fv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform3fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform3fv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform3fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform3i">
<db:title>void QOpenGLExtraFunctions::glProgramUniform3i(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLint <db:emphasis>v0</db:emphasis>, GLint <db:emphasis>v1</db:emphasis>, GLint <db:emphasis>v2</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform3i</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>v1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>v2</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform3i(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>, <db:code role="parameter">v1</db:code>, <db:code role="parameter">v2</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform3i()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform3iv">
<db:title>void QOpenGLExtraFunctions::glProgramUniform3iv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform3iv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform3iv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform3iv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform3ui">
<db:title>void QOpenGLExtraFunctions::glProgramUniform3ui(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLuint <db:emphasis>v0</db:emphasis>, GLuint <db:emphasis>v1</db:emphasis>, GLuint <db:emphasis>v2</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform3ui</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v2</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform3ui(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>, <db:code role="parameter">v1</db:code>, <db:code role="parameter">v2</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform3ui()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform3uiv">
<db:title>void QOpenGLExtraFunctions::glProgramUniform3uiv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLuint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform3uiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform3uiv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform3uiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform4f">
<db:title>void QOpenGLExtraFunctions::glProgramUniform4f(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLfloat <db:emphasis>v0</db:emphasis>, GLfloat <db:emphasis>v1</db:emphasis>, GLfloat <db:emphasis>v2</db:emphasis>, GLfloat <db:emphasis>v3</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform4f</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>v1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>v2</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>v3</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform4f(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>, <db:code role="parameter">v1</db:code>, <db:code role="parameter">v2</db:code>, <db:code role="parameter">v3</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform4f()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform4fv">
<db:title>void QOpenGLExtraFunctions::glProgramUniform4fv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform4fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform4fv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform4fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform4i">
<db:title>void QOpenGLExtraFunctions::glProgramUniform4i(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLint <db:emphasis>v0</db:emphasis>, GLint <db:emphasis>v1</db:emphasis>, GLint <db:emphasis>v2</db:emphasis>, GLint <db:emphasis>v3</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform4i</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>v1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>v2</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>v3</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform4i(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>, <db:code role="parameter">v1</db:code>, <db:code role="parameter">v2</db:code>, <db:code role="parameter">v3</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform4i()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform4iv">
<db:title>void QOpenGLExtraFunctions::glProgramUniform4iv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform4iv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform4iv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform4iv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform4ui">
<db:title>void QOpenGLExtraFunctions::glProgramUniform4ui(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLuint <db:emphasis>v0</db:emphasis>, GLuint <db:emphasis>v1</db:emphasis>, GLuint <db:emphasis>v2</db:emphasis>, GLuint <db:emphasis>v3</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform4ui</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v2</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v3</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform4ui(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>, <db:code role="parameter">v1</db:code>, <db:code role="parameter">v2</db:code>, <db:code role="parameter">v3</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform4ui()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniform4uiv">
<db:title>void QOpenGLExtraFunctions::glProgramUniform4uiv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLuint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniform4uiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniform4uiv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniform4uiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniformMatrix2fv">
<db:title>void QOpenGLExtraFunctions::glProgramUniformMatrix2fv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniformMatrix2fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniformMatrix2fv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniformMatrix2fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniformMatrix2x3fv">
<db:title>void QOpenGLExtraFunctions::glProgramUniformMatrix2x3fv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniformMatrix2x3fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniformMatrix2x3fv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniformMatrix2x3fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniformMatrix2x4fv">
<db:title>void QOpenGLExtraFunctions::glProgramUniformMatrix2x4fv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniformMatrix2x4fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniformMatrix2x4fv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniformMatrix2x4fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniformMatrix3fv">
<db:title>void QOpenGLExtraFunctions::glProgramUniformMatrix3fv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniformMatrix3fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniformMatrix3fv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniformMatrix3fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniformMatrix3x2fv">
<db:title>void QOpenGLExtraFunctions::glProgramUniformMatrix3x2fv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniformMatrix3x2fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniformMatrix3x2fv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniformMatrix3x2fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniformMatrix3x4fv">
<db:title>void QOpenGLExtraFunctions::glProgramUniformMatrix3x4fv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniformMatrix3x4fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniformMatrix3x4fv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniformMatrix3x4fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniformMatrix4fv">
<db:title>void QOpenGLExtraFunctions::glProgramUniformMatrix4fv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniformMatrix4fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniformMatrix4fv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniformMatrix4fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniformMatrix4x2fv">
<db:title>void QOpenGLExtraFunctions::glProgramUniformMatrix4x2fv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniformMatrix4x2fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniformMatrix4x2fv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniformMatrix4x2fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glProgramUniformMatrix4x3fv">
<db:title>void QOpenGLExtraFunctions::glProgramUniformMatrix4x3fv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glProgramUniformMatrix4x3fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glProgramUniformMatrix4x3fv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glProgramUniform.xhtml">glProgramUniformMatrix4x3fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glPushDebugGroup">
<db:title>void QOpenGLExtraFunctions::glPushDebugGroup(GLenum <db:emphasis>source</db:emphasis>, GLuint <db:emphasis>id</db:emphasis>, GLsizei <db:emphasis>length</db:emphasis>, const GLchar *<db:emphasis>message</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glPushDebugGroup</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>source</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>id</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLchar *</db:type>
<db:parameter>message</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glPushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar *message)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glPushDebugGroup(<db:code role="parameter">source</db:code>, <db:code role="parameter">id</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">message</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glPushDebugGroup.xhtml">glPushDebugGroup()</db:link>.</db:para>
</db:section>
<db:section xml:id="glReadBuffer">
<db:title>void QOpenGLExtraFunctions::glReadBuffer(GLenum <db:emphasis>src</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glReadBuffer</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>src</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glReadBuffer(GLenum src)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glReadBuffer(<db:code role="parameter">src</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glReadBuffer.xhtml">glReadBuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glReadnPixels">
<db:title>void QOpenGLExtraFunctions::glReadnPixels(GLint <db:emphasis>x</db:emphasis>, GLint <db:emphasis>y</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLenum <db:emphasis>format</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, GLsizei <db:emphasis>bufSize</db:emphasis>, void *<db:emphasis>data</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glReadnPixels</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>void *</db:type>
<db:parameter>data</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glReadnPixels(<db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">format</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">bufSize</db:code>, <db:code role="parameter">data</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glReadPixels.xhtml">glReadnPixels()</db:link>.</db:para>
</db:section>
<db:section xml:id="glRenderbufferStorageMultisample">
<db:title>void QOpenGLExtraFunctions::glRenderbufferStorageMultisample(GLenum <db:emphasis>target</db:emphasis>, GLsizei <db:emphasis>samples</db:emphasis>, GLenum <db:emphasis>internalformat</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glRenderbufferStorageMultisample</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>samples</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glRenderbufferStorageMultisample(<db:code role="parameter">target</db:code>, <db:code role="parameter">samples</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glRenderbufferStorageMultisample.xhtml">glRenderbufferStorageMultisample()</db:link>.</db:para>
</db:section>
<db:section xml:id="glResumeTransformFeedback">
<db:title>void QOpenGLExtraFunctions::glResumeTransformFeedback()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glResumeTransformFeedback</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glResumeTransformFeedback()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glResumeTransformFeedback().</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glResumeTransformFeedback.xhtml">glResumeTransformFeedback()</db:link>.</db:para>
</db:section>
<db:section xml:id="glSampleMaski">
<db:title>void QOpenGLExtraFunctions::glSampleMaski(GLuint <db:emphasis>maskNumber</db:emphasis>, GLbitfield <db:emphasis>mask</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glSampleMaski</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>maskNumber</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLbitfield</db:type>
<db:parameter>mask</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glSampleMaski(GLuint maskNumber, GLbitfield mask)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glSampleMaski(<db:code role="parameter">maskNumber</db:code>, <db:code role="parameter">mask</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSampleMaski.xhtml">glSampleMaski()</db:link>.</db:para>
</db:section>
<db:section xml:id="glSamplerParameterIiv">
<db:title>void QOpenGLExtraFunctions::glSamplerParameterIiv(GLuint <db:emphasis>sampler</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, const GLint *<db:emphasis>param</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glSamplerParameterIiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>sampler</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>param</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint *param)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glSamplerParameterIiv(<db:code role="parameter">sampler</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">param</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml">glSamplerParameterIiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glSamplerParameterIuiv">
<db:title>void QOpenGLExtraFunctions::glSamplerParameterIuiv(GLuint <db:emphasis>sampler</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, const GLuint *<db:emphasis>param</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glSamplerParameterIuiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>sampler</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>param</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint *param)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glSamplerParameterIuiv(<db:code role="parameter">sampler</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">param</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml">glSamplerParameterIuiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glSamplerParameterf">
<db:title>void QOpenGLExtraFunctions::glSamplerParameterf(GLuint <db:emphasis>sampler</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLfloat <db:emphasis>param</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glSamplerParameterf</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>sampler</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>param</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glSamplerParameterf(<db:code role="parameter">sampler</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">param</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml">glSamplerParameterf()</db:link>.</db:para>
</db:section>
<db:section xml:id="glSamplerParameterfv">
<db:title>void QOpenGLExtraFunctions::glSamplerParameterfv(GLuint <db:emphasis>sampler</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, const GLfloat *<db:emphasis>param</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glSamplerParameterfv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>sampler</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>param</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat *param)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glSamplerParameterfv(<db:code role="parameter">sampler</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">param</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml">glSamplerParameterfv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glSamplerParameteri">
<db:title>void QOpenGLExtraFunctions::glSamplerParameteri(GLuint <db:emphasis>sampler</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint <db:emphasis>param</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glSamplerParameteri</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>sampler</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>param</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glSamplerParameteri(GLuint sampler, GLenum pname, GLint param)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glSamplerParameteri(<db:code role="parameter">sampler</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">param</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml">glSamplerParameteri()</db:link>.</db:para>
</db:section>
<db:section xml:id="glSamplerParameteriv">
<db:title>void QOpenGLExtraFunctions::glSamplerParameteriv(GLuint <db:emphasis>sampler</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, const GLint *<db:emphasis>param</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glSamplerParameteriv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>sampler</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>param</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint *param)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glSamplerParameteriv(<db:code role="parameter">sampler</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">param</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml">glSamplerParameteriv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glTexBuffer">
<db:title>void QOpenGLExtraFunctions::glTexBuffer(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>internalformat</db:emphasis>, GLuint <db:emphasis>buffer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexBuffer</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>buffer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexBuffer(<db:code role="parameter">target</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">buffer</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexBuffer.xhtml">glTexBuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glTexBufferRange">
<db:title>void QOpenGLExtraFunctions::glTexBufferRange(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>internalformat</db:emphasis>, GLuint <db:emphasis>buffer</db:emphasis>, GLintptr <db:emphasis>offset</db:emphasis>, GLsizeiptr <db:emphasis>size</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexBufferRange</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>buffer</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLintptr</db:type>
<db:parameter>offset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizeiptr</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexBufferRange(<db:code role="parameter">target</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">buffer</db:code>, <db:code role="parameter">offset</db:code>, <db:code role="parameter">size</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexBufferRange.xhtml">glTexBufferRange()</db:link>.</db:para>
</db:section>
<db:section xml:id="glTexImage3D">
<db:title>void QOpenGLExtraFunctions::glTexImage3D(GLenum <db:emphasis>target</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLint <db:emphasis>internalformat</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLsizei <db:emphasis>depth</db:emphasis>, GLint <db:emphasis>border</db:emphasis>, GLenum <db:emphasis>format</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, const void *<db:emphasis>pixels</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexImage3D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>depth</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>border</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>pixels</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexImage3D(<db:code role="parameter">target</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">depth</db:code>, <db:code role="parameter">border</db:code>, <db:code role="parameter">format</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">pixels</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexImage3D.xhtml">glTexImage3D()</db:link>.</db:para>
</db:section>
<db:section xml:id="glTexParameterIiv">
<db:title>void QOpenGLExtraFunctions::glTexParameterIiv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, const GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexParameterIiv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexParameterIiv(GLenum target, GLenum pname, const GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexParameterIiv(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexParameter.xhtml">glTexParameterIiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glTexParameterIuiv">
<db:title>void QOpenGLExtraFunctions::glTexParameterIuiv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, const GLuint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexParameterIuiv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexParameterIuiv(GLenum target, GLenum pname, const GLuint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexParameterIuiv(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexParameter.xhtml">glTexParameterIuiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glTexStorage2D">
<db:title>void QOpenGLExtraFunctions::glTexStorage2D(GLenum <db:emphasis>target</db:emphasis>, GLsizei <db:emphasis>levels</db:emphasis>, GLenum <db:emphasis>internalformat</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexStorage2D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>levels</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexStorage2D(<db:code role="parameter">target</db:code>, <db:code role="parameter">levels</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexStorage2D.xhtml">glTexStorage2D()</db:link>.</db:para>
</db:section>
<db:section xml:id="glTexStorage2DMultisample">
<db:title>void QOpenGLExtraFunctions::glTexStorage2DMultisample(GLenum <db:emphasis>target</db:emphasis>, GLsizei <db:emphasis>samples</db:emphasis>, GLenum <db:emphasis>internalformat</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLboolean <db:emphasis>fixedsamplelocations</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexStorage2DMultisample</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>samples</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>fixedsamplelocations</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexStorage2DMultisample(<db:code role="parameter">target</db:code>, <db:code role="parameter">samples</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">fixedsamplelocations</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexStorage2DMultisample.xhtml">glTexStorage2DMultisample()</db:link>.</db:para>
</db:section>
<db:section xml:id="glTexStorage3D">
<db:title>void QOpenGLExtraFunctions::glTexStorage3D(GLenum <db:emphasis>target</db:emphasis>, GLsizei <db:emphasis>levels</db:emphasis>, GLenum <db:emphasis>internalformat</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLsizei <db:emphasis>depth</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexStorage3D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>levels</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>depth</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexStorage3D(<db:code role="parameter">target</db:code>, <db:code role="parameter">levels</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">depth</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexStorage3D.xhtml">glTexStorage3D()</db:link>.</db:para>
</db:section>
<db:section xml:id="glTexStorage3DMultisample">
<db:title>void QOpenGLExtraFunctions::glTexStorage3DMultisample(GLenum <db:emphasis>target</db:emphasis>, GLsizei <db:emphasis>samples</db:emphasis>, GLenum <db:emphasis>internalformat</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLsizei <db:emphasis>depth</db:emphasis>, GLboolean <db:emphasis>fixedsamplelocations</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexStorage3DMultisample</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>samples</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>depth</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>fixedsamplelocations</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexStorage3DMultisample(<db:code role="parameter">target</db:code>, <db:code role="parameter">samples</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">depth</db:code>, <db:code role="parameter">fixedsamplelocations</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexStorage3DMultisample.xhtml">glTexStorage3DMultisample()</db:link>.</db:para>
</db:section>
<db:section xml:id="glTexSubImage3D">
<db:title>void QOpenGLExtraFunctions::glTexSubImage3D(GLenum <db:emphasis>target</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLint <db:emphasis>xoffset</db:emphasis>, GLint <db:emphasis>yoffset</db:emphasis>, GLint <db:emphasis>zoffset</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLsizei <db:emphasis>depth</db:emphasis>, GLenum <db:emphasis>format</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, const void *<db:emphasis>pixels</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexSubImage3D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>xoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>yoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>zoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>depth</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>pixels</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexSubImage3D(<db:code role="parameter">target</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">xoffset</db:code>, <db:code role="parameter">yoffset</db:code>, <db:code role="parameter">zoffset</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">depth</db:code>, <db:code role="parameter">format</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">pixels</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexSubImage3D.xhtml">glTexSubImage3D()</db:link>.</db:para>
</db:section>
<db:section xml:id="glTransformFeedbackVaryings">
<db:title>void QOpenGLExtraFunctions::glTransformFeedbackVaryings(GLuint <db:emphasis>program</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLchar *const *<db:emphasis>varyings</db:emphasis>, GLenum <db:emphasis>bufferMode</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTransformFeedbackVaryings</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLchar *const *</db:type>
<db:parameter>varyings</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>bufferMode</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const *varyings, GLenum bufferMode)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTransformFeedbackVaryings(<db:code role="parameter">program</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">varyings</db:code>, <db:code role="parameter">bufferMode</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTransformFeedbackVaryings.xhtml">glTransformFeedbackVaryings()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniform1ui">
<db:title>void QOpenGLExtraFunctions::glUniform1ui(GLint <db:emphasis>location</db:emphasis>, GLuint <db:emphasis>v0</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform1ui</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform1ui(GLint location, GLuint v0)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform1ui(<db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform1ui()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniform1uiv">
<db:title>void QOpenGLExtraFunctions::glUniform1uiv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLuint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform1uiv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform1uiv(GLint location, GLsizei count, const GLuint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform1uiv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform1uiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniform2ui">
<db:title>void QOpenGLExtraFunctions::glUniform2ui(GLint <db:emphasis>location</db:emphasis>, GLuint <db:emphasis>v0</db:emphasis>, GLuint <db:emphasis>v1</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform2ui</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v1</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform2ui(GLint location, GLuint v0, GLuint v1)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform2ui(<db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>, <db:code role="parameter">v1</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform2ui()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniform2uiv">
<db:title>void QOpenGLExtraFunctions::glUniform2uiv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLuint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform2uiv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform2uiv(GLint location, GLsizei count, const GLuint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform2uiv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform2uiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniform3ui">
<db:title>void QOpenGLExtraFunctions::glUniform3ui(GLint <db:emphasis>location</db:emphasis>, GLuint <db:emphasis>v0</db:emphasis>, GLuint <db:emphasis>v1</db:emphasis>, GLuint <db:emphasis>v2</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform3ui</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v2</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform3ui(<db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>, <db:code role="parameter">v1</db:code>, <db:code role="parameter">v2</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform3ui()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniform3uiv">
<db:title>void QOpenGLExtraFunctions::glUniform3uiv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLuint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform3uiv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform3uiv(GLint location, GLsizei count, const GLuint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform3uiv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform3uiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniform4ui">
<db:title>void QOpenGLExtraFunctions::glUniform4ui(GLint <db:emphasis>location</db:emphasis>, GLuint <db:emphasis>v0</db:emphasis>, GLuint <db:emphasis>v1</db:emphasis>, GLuint <db:emphasis>v2</db:emphasis>, GLuint <db:emphasis>v3</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform4ui</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v0</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v2</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>v3</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform4ui(<db:code role="parameter">location</db:code>, <db:code role="parameter">v0</db:code>, <db:code role="parameter">v1</db:code>, <db:code role="parameter">v2</db:code>, <db:code role="parameter">v3</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform4ui()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniform4uiv">
<db:title>void QOpenGLExtraFunctions::glUniform4uiv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLuint *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform4uiv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform4uiv(GLint location, GLsizei count, const GLuint *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform4uiv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform4uiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniformBlockBinding">
<db:title>void QOpenGLExtraFunctions::glUniformBlockBinding(GLuint <db:emphasis>program</db:emphasis>, GLuint <db:emphasis>uniformBlockIndex</db:emphasis>, GLuint <db:emphasis>uniformBlockBinding</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniformBlockBinding</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>uniformBlockIndex</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>uniformBlockBinding</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniformBlockBinding(<db:code role="parameter">program</db:code>, <db:code role="parameter">uniformBlockIndex</db:code>, <db:code role="parameter">uniformBlockBinding</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniformBlockBinding.xhtml">glUniformBlockBinding()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniformMatrix2x3fv">
<db:title>void QOpenGLExtraFunctions::glUniformMatrix2x3fv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniformMatrix2x3fv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniformMatrix2x3fv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniformMatrix2x3fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniformMatrix2x4fv">
<db:title>void QOpenGLExtraFunctions::glUniformMatrix2x4fv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniformMatrix2x4fv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniformMatrix2x4fv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniformMatrix2x4fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniformMatrix3x2fv">
<db:title>void QOpenGLExtraFunctions::glUniformMatrix3x2fv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniformMatrix3x2fv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniformMatrix3x2fv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniformMatrix3x2fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniformMatrix3x4fv">
<db:title>void QOpenGLExtraFunctions::glUniformMatrix3x4fv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniformMatrix3x4fv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniformMatrix3x4fv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniformMatrix3x4fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniformMatrix4x2fv">
<db:title>void QOpenGLExtraFunctions::glUniformMatrix4x2fv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniformMatrix4x2fv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniformMatrix4x2fv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniformMatrix4x2fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUniformMatrix4x3fv">
<db:title>void QOpenGLExtraFunctions::glUniformMatrix4x3fv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniformMatrix4x3fv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniformMatrix4x3fv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniformMatrix4x3fv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUnmapBuffer">
<db:title>GLboolean QOpenGLExtraFunctions::glUnmapBuffer(GLenum <db:emphasis>target</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glUnmapBuffer</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glUnmapBuffer(GLenum target)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUnmapBuffer(<db:code role="parameter">target</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glMapBufferRange.xhtml">glUnmapBuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glUseProgramStages">
<db:title>void QOpenGLExtraFunctions::glUseProgramStages(GLuint <db:emphasis>pipeline</db:emphasis>, GLbitfield <db:emphasis>stages</db:emphasis>, GLuint <db:emphasis>program</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUseProgramStages</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>pipeline</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLbitfield</db:type>
<db:parameter>stages</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUseProgramStages(<db:code role="parameter">pipeline</db:code>, <db:code role="parameter">stages</db:code>, <db:code role="parameter">program</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUseProgramStages.xhtml">glUseProgramStages()</db:link>.</db:para>
</db:section>
<db:section xml:id="glValidateProgramPipeline">
<db:title>void QOpenGLExtraFunctions::glValidateProgramPipeline(GLuint <db:emphasis>pipeline</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glValidateProgramPipeline</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>pipeline</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glValidateProgramPipeline(GLuint pipeline)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glValidateProgramPipeline(<db:code role="parameter">pipeline</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glValidateProgramPipeline.xhtml">glValidateProgramPipeline()</db:link>.</db:para>
</db:section>
<db:section xml:id="glVertexAttribBinding">
<db:title>void QOpenGLExtraFunctions::glVertexAttribBinding(GLuint <db:emphasis>attribindex</db:emphasis>, GLuint <db:emphasis>bindingindex</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttribBinding</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>attribindex</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>bindingindex</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttribBinding(GLuint attribindex, GLuint bindingindex)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttribBinding(<db:code role="parameter">attribindex</db:code>, <db:code role="parameter">bindingindex</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribBinding.xhtml">glVertexAttribBinding()</db:link>.</db:para>
</db:section>
<db:section xml:id="glVertexAttribDivisor">
<db:title>void QOpenGLExtraFunctions::glVertexAttribDivisor(GLuint <db:emphasis>index</db:emphasis>, GLuint <db:emphasis>divisor</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttribDivisor</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>divisor</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttribDivisor(GLuint index, GLuint divisor)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttribDivisor(<db:code role="parameter">index</db:code>, <db:code role="parameter">divisor</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribDivisor.xhtml">glVertexAttribDivisor()</db:link>.</db:para>
</db:section>
<db:section xml:id="glVertexAttribFormat">
<db:title>void QOpenGLExtraFunctions::glVertexAttribFormat(GLuint <db:emphasis>attribindex</db:emphasis>, GLint <db:emphasis>size</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, GLboolean <db:emphasis>normalized</db:emphasis>, GLuint <db:emphasis>relativeoffset</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttribFormat</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>attribindex</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>normalized</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>relativeoffset</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttribFormat(<db:code role="parameter">attribindex</db:code>, <db:code role="parameter">size</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">normalized</db:code>, <db:code role="parameter">relativeoffset</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribFormat.xhtml">glVertexAttribFormat()</db:link>.</db:para>
</db:section>
<db:section xml:id="glVertexAttribI4i">
<db:title>void QOpenGLExtraFunctions::glVertexAttribI4i(GLuint <db:emphasis>index</db:emphasis>, GLint <db:emphasis>x</db:emphasis>, GLint <db:emphasis>y</db:emphasis>, GLint <db:emphasis>z</db:emphasis>, GLint <db:emphasis>w</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttribI4i</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>z</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>w</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttribI4i(<db:code role="parameter">index</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">z</db:code>, <db:code role="parameter">w</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml">glVertexAttribI4i()</db:link>.</db:para>
</db:section>
<db:section xml:id="glVertexAttribI4iv">
<db:title>void QOpenGLExtraFunctions::glVertexAttribI4iv(GLuint <db:emphasis>index</db:emphasis>, const GLint *<db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttribI4iv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttribI4iv(GLuint index, const GLint *v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttribI4iv(<db:code role="parameter">index</db:code>, <db:code role="parameter">v</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml">glVertexAttribI4iv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glVertexAttribI4ui">
<db:title>void QOpenGLExtraFunctions::glVertexAttribI4ui(GLuint <db:emphasis>index</db:emphasis>, GLuint <db:emphasis>x</db:emphasis>, GLuint <db:emphasis>y</db:emphasis>, GLuint <db:emphasis>z</db:emphasis>, GLuint <db:emphasis>w</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttribI4ui</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>z</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>w</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttribI4ui(<db:code role="parameter">index</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">z</db:code>, <db:code role="parameter">w</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml">glVertexAttribI4ui()</db:link>.</db:para>
</db:section>
<db:section xml:id="glVertexAttribI4uiv">
<db:title>void QOpenGLExtraFunctions::glVertexAttribI4uiv(GLuint <db:emphasis>index</db:emphasis>, const GLuint *<db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttribI4uiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttribI4uiv(GLuint index, const GLuint *v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttribI4uiv(<db:code role="parameter">index</db:code>, <db:code role="parameter">v</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml">glVertexAttribI4uiv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glVertexAttribIFormat">
<db:title>void QOpenGLExtraFunctions::glVertexAttribIFormat(GLuint <db:emphasis>attribindex</db:emphasis>, GLint <db:emphasis>size</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, GLuint <db:emphasis>relativeoffset</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttribIFormat</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>attribindex</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>relativeoffset</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttribIFormat(<db:code role="parameter">attribindex</db:code>, <db:code role="parameter">size</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">relativeoffset</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribFormat.xhtml">glVertexAttribIFormat()</db:link>.</db:para>
</db:section>
<db:section xml:id="glVertexAttribIPointer">
<db:title>void QOpenGLExtraFunctions::glVertexAttribIPointer(GLuint <db:emphasis>index</db:emphasis>, GLint <db:emphasis>size</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, GLsizei <db:emphasis>stride</db:emphasis>, const void *<db:emphasis>pointer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttribIPointer</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>stride</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>pointer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttribIPointer(<db:code role="parameter">index</db:code>, <db:code role="parameter">size</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">stride</db:code>, <db:code role="parameter">pointer</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glVertexAttribPointer.xhtml">glVertexAttribIPointer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glVertexBindingDivisor">
<db:title>void QOpenGLExtraFunctions::glVertexBindingDivisor(GLuint <db:emphasis>bindingindex</db:emphasis>, GLuint <db:emphasis>divisor</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexBindingDivisor</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>bindingindex</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>divisor</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexBindingDivisor(GLuint bindingindex, GLuint divisor)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexBindingDivisor(<db:code role="parameter">bindingindex</db:code>, <db:code role="parameter">divisor</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexBindingDivisor.xhtml">glVertexBindingDivisor()</db:link>.</db:para>
</db:section>
<db:section xml:id="glWaitSync">
<db:title>void QOpenGLExtraFunctions::glWaitSync(GLsync <db:emphasis>sync</db:emphasis>, GLbitfield <db:emphasis>flags</db:emphasis>, GLuint64 <db:emphasis>timeout</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glWaitSync</db:methodname>
<db:methodparam>
<db:type>GLsync</db:type>
<db:parameter>sync</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLbitfield</db:type>
<db:parameter>flags</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint64</db:type>
<db:parameter>timeout</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glWaitSync(<db:code role="parameter">sync</db:code>, <db:code role="parameter">flags</db:code>, <db:code role="parameter">timeout</db:code>).</db:para>
<db:para>This function is only available in OpenGL ES 3.x, or OpenGL 3.x or 4.x contexts. When running with plain OpenGL, the function is only usable when the given profile and version contains the function either in core or as an extension.</db:para>
<db:para>For more information, see the OpenGL ES 3.x documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glWaitSync.xhtml">glWaitSync()</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
