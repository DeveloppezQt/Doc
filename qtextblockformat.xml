<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QTextBlockFormat Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qtextblockformat.xml">QTextBlockFormat</db:link> class provides formatting information for blocks of text in a <db:link xlink:href="qtextdocument.xml">QTextDocument</db:link>.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QTextBlockFormat</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qtextformat.xml" xlink:role="class">QTextFormat</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QTextBlockFormat is part of <db:simplelist><db:member><db:link xlink:href="richtext-processing.xml">Rich Text Processing APIs</db:link></db:member><db:member>shared</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A document is composed of a list of blocks, represented by <db:link xlink:href="qtextblock.xml">QTextBlock</db:link> objects. Each block can contain an item of some kind, such as a paragraph of text, a table, a list, or an image. Every block has an associated <db:link xlink:href="qtextblockformat.xml">QTextBlockFormat</db:link> that specifies its characteristics.</db:para>
<db:para>To cater for left-to-right and right-to-left languages you can set a block's direction with setDirection(). Paragraph alignment is set with <db:link xlink:href="qtextblockformat.xml#setAlignment">setAlignment</db:link>(). Margins are controlled by <db:link xlink:href="qtextblockformat.xml#setTopMargin">setTopMargin</db:link>(), <db:link xlink:href="qtextblockformat.xml#setBottomMargin">setBottomMargin</db:link>(), <db:link xlink:href="qtextblockformat.xml#setLeftMargin">setLeftMargin</db:link>(), <db:link xlink:href="qtextblockformat.xml#setRightMargin">setRightMargin</db:link>(). Overall indentation is set with <db:link xlink:href="qtextblockformat.xml#setIndent">setIndent</db:link>(), the indentation of the first line with <db:link xlink:href="qtextblockformat.xml#setTextIndent">setTextIndent</db:link>().</db:para>
<db:para>Line spacing is set with <db:link xlink:href="qtextblockformat.xml#setLineHeight">setLineHeight</db:link>() and retrieved via <db:link xlink:href="qtextblockformat.xml#lineHeight">lineHeight</db:link>() and <db:link xlink:href="qtextblockformat.xml#lineHeightType">lineHeightType</db:link>(). The types of line spacing available are in the <db:link xlink:href="qtextblockformat.xml#LineHeightTypes-enum">LineHeightTypes</db:link> enum.</db:para>
<db:para>Line breaking can be enabled and disabled with <db:link xlink:href="qtextblockformat.xml#setNonBreakableLines">setNonBreakableLines</db:link>().</db:para>
<db:para>The brush used to paint the paragraph's background is set with <db:link xlink:href="qtextformat.xml#setBackground">setBackground</db:link>(), and other aspects of the text's appearance can be customized by using the <db:link xlink:href="qtextformat.xml#setProperty">setProperty</db:link>() function with the <db:code>OutlinePen</db:code>, <db:code>ForegroundBrush</db:code>, and <db:code>BackgroundBrush</db:code> <db:link xlink:href="qtextformat.xml#Property-enum">QTextFormat::Property</db:link> values.</db:para>
<db:para>If a text block is part of a list, it can also have a list format that is accessible with the listFormat() function.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblock.xml">QTextBlock</db:link></db:member>
<db:member><db:link xlink:href="qtextcharformat.xml">QTextCharFormat</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="LineHeightTypes-enum">
<db:title>[since 4.8] enum QTextBlockFormat::LineHeightTypes</db:title>
<db:para>This enum describes the various types of line spacing support paragraphs can have.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtextblockformat.xml">QTextBlockFormat</db:link></db:emphasis>::SingleHeight</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>This is the default line height: single spacing.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtextblockformat.xml">QTextBlockFormat</db:link></db:emphasis>::ProportionalHeight</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>This sets the spacing proportional to the line (in percentage). For example, set to 200 for double spacing.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtextblockformat.xml">QTextBlockFormat</db:link></db:emphasis>::FixedHeight</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>This sets the line height to a fixed line height (in pixels).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtextblockformat.xml">QTextBlockFormat</db:link></db:emphasis>::MinimumHeight</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>This sets the minimum line height (in pixels).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qtextblockformat.xml">QTextBlockFormat</db:link></db:emphasis>::LineDistanceHeight</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>This adds the specified height between lines (in pixels).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This enum was introduced in Qt 4.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#lineHeight">lineHeight</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#lineHeightType">lineHeightType</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setLineHeight">setLineHeight</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QTextBlockFormat">
<db:title>QTextBlockFormat::QTextBlockFormat()</db:title>
<db:para>Constructs a new <db:link xlink:href="qtextblockformat.xml">QTextBlockFormat</db:link>.</db:para>
</db:section>
<db:section xml:id="alignment">
<db:title>Qt::Alignment QTextBlockFormat::alignment() const</db:title>
<db:para>Returns the paragraph's alignment.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#setAlignment">setAlignment</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="bottomMargin">
<db:title>qreal QTextBlockFormat::bottomMargin() const</db:title>
<db:para>Returns the paragraph's bottom margin.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#setBottomMargin">setBottomMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#topMargin">topMargin</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="indent">
<db:title>int QTextBlockFormat::indent() const</db:title>
<db:para>Returns the paragraph's indent.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#setIndent">setIndent</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isValid">
<db:title>bool QTextBlockFormat::isValid() const</db:title>
<db:para>Returns <db:code>true</db:code> if this block format is valid; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="leftMargin">
<db:title>qreal QTextBlockFormat::leftMargin() const</db:title>
<db:para>Returns the paragraph's left margin.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#setLeftMargin">setLeftMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#rightMargin">rightMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#indent">indent</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="lineHeight">
<db:title>[since 4.8] qreal QTextBlockFormat::lineHeight() const</db:title>
<db:para>This returns the LineHeight property for the paragraph.</db:para>
<db:para>This function was introduced in Qt 4.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#LineHeightTypes-enum">LineHeightTypes</db:link></db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setLineHeight">setLineHeight</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#lineHeightType">lineHeightType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="lineHeight-1">
<db:title>[since 4.8] qreal QTextBlockFormat::lineHeight(qreal <db:emphasis>scriptLineHeight</db:emphasis>, qreal <db:emphasis>scaling</db:emphasis> = 1.0) const</db:title>
<db:para>Returns the height of the lines in the paragraph based on the height of the script line given by <db:code role="parameter">scriptLineHeight</db:code> and the specified <db:code role="parameter">scaling</db:code> factor.</db:para>
<db:para>The value that is returned is also dependent on the given LineHeightType of the paragraph as well as the LineHeight setting that has been set for the paragraph.</db:para>
<db:para>The scaling is needed for heights that include a fixed number of pixels, to scale them appropriately for printing.</db:para>
<db:para>This function was introduced in Qt 4.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#LineHeightTypes-enum">LineHeightTypes</db:link></db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setLineHeight">setLineHeight</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#lineHeightType">lineHeightType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="lineHeightType">
<db:title>[since 4.8] int QTextBlockFormat::lineHeightType() const</db:title>
<db:para>This returns the LineHeightType property of the paragraph.</db:para>
<db:para>This function was introduced in Qt 4.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#LineHeightTypes-enum">LineHeightTypes</db:link></db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setLineHeight">setLineHeight</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#lineHeight">lineHeight</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="nonBreakableLines">
<db:title>bool QTextBlockFormat::nonBreakableLines() const</db:title>
<db:para>Returns <db:code>true</db:code> if the lines in the paragraph are non-breakable; otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#setNonBreakableLines">setNonBreakableLines</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pageBreakPolicy">
<db:title>[since 4.2] QTextFormat::PageBreakFlags QTextBlockFormat::pageBreakPolicy() const</db:title>
<db:para>Returns the currently set page break policy for the paragraph. The default is <db:link xlink:href="qtextformat.xml#PageBreakFlag-enum">QTextFormat::PageBreak_Auto</db:link>.</db:para>
<db:para>This function was introduced in Qt 4.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#setPageBreakPolicy">setPageBreakPolicy</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rightMargin">
<db:title>qreal QTextBlockFormat::rightMargin() const</db:title>
<db:para>Returns the paragraph's right margin.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#setRightMargin">setRightMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#leftMargin">leftMargin</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setAlignment">
<db:title>void QTextBlockFormat::setAlignment(Qt::Alignment <db:emphasis>alignment</db:emphasis>)</db:title>
<db:para>Sets the paragraph's <db:code role="parameter">alignment</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#alignment">alignment</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBottomMargin">
<db:title>void QTextBlockFormat::setBottomMargin(qreal <db:emphasis>margin</db:emphasis>)</db:title>
<db:para>Sets the paragraph's bottom <db:code role="parameter">margin</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#bottomMargin">bottomMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setTopMargin">setTopMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setLeftMargin">setLeftMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setRightMargin">setRightMargin</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setIndent">
<db:title>void QTextBlockFormat::setIndent(int <db:emphasis>indentation</db:emphasis>)</db:title>
<db:para>Sets the paragraph's <db:code role="parameter">indentation</db:code>. Margins are set independently of indentation with <db:link xlink:href="qtextblockformat.xml#setLeftMargin">setLeftMargin</db:link>() and <db:link xlink:href="qtextblockformat.xml#setTextIndent">setTextIndent</db:link>(). The <db:code role="parameter">indentation</db:code> is an integer that is multiplied with the document-wide standard indent, resulting in the actual indent of the paragraph.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#indent">indent</db:link>()</db:member>
<db:member><db:link xlink:href="qtextdocument.xml#indentWidth-prop">QTextDocument::indentWidth</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLeftMargin">
<db:title>void QTextBlockFormat::setLeftMargin(qreal <db:emphasis>margin</db:emphasis>)</db:title>
<db:para>Sets the paragraph's left <db:code role="parameter">margin</db:code>. Indentation can be applied separately with <db:link xlink:href="qtextblockformat.xml#setIndent">setIndent</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#leftMargin">leftMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setRightMargin">setRightMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setTopMargin">setTopMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setBottomMargin">setBottomMargin</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLineHeight">
<db:title>[since 4.8] void QTextBlockFormat::setLineHeight(qreal <db:emphasis>height</db:emphasis>, int <db:emphasis>heightType</db:emphasis>)</db:title>
<db:para>Sets the line height for the paragraph to the value given by <db:code role="parameter">height</db:code> which is dependent on <db:code role="parameter">heightType</db:code> in the way described by the <db:link xlink:href="qtextblockformat.xml#LineHeightTypes-enum">LineHeightTypes</db:link> enum.</db:para>
<db:para>This function was introduced in Qt 4.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#LineHeightTypes-enum">LineHeightTypes</db:link></db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#lineHeight">lineHeight</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#lineHeightType">lineHeightType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setNonBreakableLines">
<db:title>void QTextBlockFormat::setNonBreakableLines(bool <db:emphasis>b</db:emphasis>)</db:title>
<db:para>If <db:code role="parameter">b</db:code> is true, the lines in the paragraph are treated as non-breakable; otherwise they are breakable.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#nonBreakableLines">nonBreakableLines</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPageBreakPolicy">
<db:title>[since 4.2] void QTextBlockFormat::setPageBreakPolicy(QTextFormat::PageBreakFlags <db:emphasis>policy</db:emphasis>)</db:title>
<db:para>Sets the page break policy for the paragraph to <db:code role="parameter">policy</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#pageBreakPolicy">pageBreakPolicy</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setRightMargin">
<db:title>void QTextBlockFormat::setRightMargin(qreal <db:emphasis>margin</db:emphasis>)</db:title>
<db:para>Sets the paragraph's right <db:code role="parameter">margin</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#rightMargin">rightMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setLeftMargin">setLeftMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setTopMargin">setTopMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setBottomMargin">setBottomMargin</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTabPositions">
<db:title>[since 4.4] void QTextBlockFormat::setTabPositions(const QList&lt;QTextOption::Tab&gt; &amp;<db:emphasis>tabs</db:emphasis>)</db:title>
<db:para>Sets the tab positions for the text block to those specified by <db:code role="parameter">tabs</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#tabPositions">tabPositions</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTextIndent">
<db:title>void QTextBlockFormat::setTextIndent(qreal <db:emphasis>indent</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">indent</db:code> for the first line in the block. This allows the first line of a paragraph to be indented differently to the other lines, enhancing the readability of the text.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#textIndent">textIndent</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setLeftMargin">setLeftMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setRightMargin">setRightMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setTopMargin">setTopMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setBottomMargin">setBottomMargin</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTopMargin">
<db:title>void QTextBlockFormat::setTopMargin(qreal <db:emphasis>margin</db:emphasis>)</db:title>
<db:para>Sets the paragraph's top <db:code role="parameter">margin</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#topMargin">topMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setBottomMargin">setBottomMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setLeftMargin">setLeftMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#setRightMargin">setRightMargin</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="tabPositions">
<db:title>[since 4.4] QList&lt;QTextOption::Tab&gt; QTextBlockFormat::tabPositions() const</db:title>
<db:para>Returns a list of tab positions defined for the text block.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#setTabPositions">setTabPositions</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="textIndent">
<db:title>qreal QTextBlockFormat::textIndent() const</db:title>
<db:para>Returns the paragraph's text indent.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#setTextIndent">setTextIndent</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="topMargin">
<db:title>qreal QTextBlockFormat::topMargin() const</db:title>
<db:para>Returns the paragraph's top margin.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextblockformat.xml#setTopMargin">setTopMargin</db:link>()</db:member>
<db:member><db:link xlink:href="qtextblockformat.xml#bottomMargin">bottomMargin</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
