<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>WebEngineCertificateError QML Type</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A utility type for ignoring certificate errors or rejecting erroneous certificates.</db:para>
<db:para>This type was introduced in QtWebEngine 1.1.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtWebEngine 1.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtWebEngine 1.1</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This QML type contains information about a certificate error that occurred. The <db:link xlink:href="qml-qtwebengine-webenginecertificateerror.xml#error-prop">error</db:link> property holds the reason that the error occurred and the <db:link xlink:href="qml-qtwebengine-webenginecertificateerror.xml#description-prop">description</db:link> property holds a short localized description of the error. The <db:link xlink:href="qml-qtwebengine-webenginecertificateerror.xml#url-prop">url</db:link> property holds the URL that triggered the error.</db:para>
<db:para>The certificate can be rejected by calling <db:link xlink:href="qml-qtwebengine-webenginecertificateerror.xml#rejectCertificate-method">rejectCertificate</db:link>, which will stop loading the web engine request. By default, an invalid certificate will be automatically rejected.</db:para>
<db:para>The certificate error can be ignored by calling <db:link xlink:href="qml-qtwebengine-webenginecertificateerror.xml#ignoreCertificateError-method">ignoreCertificateError</db:link>, which will resume loading the request.</db:para>
<db:para>It is possible to defer the decision of rejecting a certificate by calling <db:link xlink:href="qml-qtwebengine-webenginecertificateerror.xml#defer-method">defer</db:link>, which is useful when waiting for user input.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webengineview.xml#certificateError-signal">WebEngineView::certificateError</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="description-prop">
<db:title>[read-only] description : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>description</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>A short localized human-readable description of the error.</db:para>
</db:section>
<db:section xml:id="error-prop">
<db:title>[read-only] error : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>error</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The type of the error.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.SslPinnedKeyNotInCertificateChain</db:para>
</db:td>
<db:td>
<db:para>The certificate did not match the built-in public keys pinned for the host name.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateCommonNameInvalid</db:para>
</db:td>
<db:td>
<db:para>The certificate's common name did not match the host name.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateDateInvalid</db:para>
</db:td>
<db:td>
<db:para>The certificate is not valid at the current date and time.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateAuthorityInvalid</db:para>
</db:td>
<db:td>
<db:para>The certificate is not signed by a trusted authority.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateContainsErrors</db:para>
</db:td>
<db:td>
<db:para>The certificate contains errors.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateNoRevocationMechanism</db:para>
</db:td>
<db:td>
<db:para>The certificate has no mechanism for determining if it has been revoked.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateUnableToCheckRevocation</db:para>
</db:td>
<db:td>
<db:para>Revocation information for the certificate is not available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateRevoked</db:para>
</db:td>
<db:td>
<db:para>The certificate has been revoked.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateInvalid</db:para>
</db:td>
<db:td>
<db:para>The certificate is invalid.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateWeakSignatureAlgorithm</db:para>
</db:td>
<db:td>
<db:para>The certificate is signed using a weak signature algorithm.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateNonUniqueName</db:para>
</db:td>
<db:td>
<db:para>The host name specified in the certificate is not unique.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateWeakKey</db:para>
</db:td>
<db:td>
<db:para>The certificate contains a weak key.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateNameConstraintViolation</db:para>
</db:td>
<db:td>
<db:para>The certificate claimed DNS names that are in violation of name constraints.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateValidityTooLong</db:para>
</db:td>
<db:td>
<db:para>The certificate has a validity period that is too long. (Added in 5.7)</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>WebEngineCertificateError.CertificateTransparencyRequired</db:para>
</db:td>
<db:td>
<db:para>Certificate Transparency was required for this connection, but the server did not provide CT information that complied with the policy. (Added in 5.8)</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="overridable-prop">
<db:title>[read-only] overridable : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>overridable</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>A boolean that indicates whether the certificate error can be overridden and ignored.</db:para>
</db:section>
<db:section xml:id="url-prop">
<db:title>[read-only] url : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>url</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The URL that triggered the error.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="defer-method">
<db:title>void defer()</db:title>
<db:para>This function should be called when there is a need to postpone the decision whether to ignore a certificate error, for example, while waiting for user input. When called, the function pauses the URL request until <db:link xlink:href="qml-qtwebengine-webenginecertificateerror.xml#ignoreCertificateError-method">WebEngineCertificateError::ignoreCertificateError</db:link>() or <db:link xlink:href="qml-qtwebengine-webenginecertificateerror.xml#rejectCertificate-method">WebEngineCertificateError::rejectCertificate</db:link>() is called.</db:para>
</db:section>
<db:section xml:id="ignoreCertificateError-method">
<db:title>void ignoreCertificateError()</db:title>
<db:para>The certificate error is ignored, and the web engine view continues to load the requested URL.</db:para>
</db:section>
<db:section xml:id="rejectCertificate-method">
<db:title>void rejectCertificate()</db:title>
<db:para>The certificate is rejected, and the web engine view stops loading the requested URL.</db:para>
</db:section>
</db:section>
</db:article>
