<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGraphicsRotation Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgraphicsrotation.xml">QGraphicsRotation</db:link> class provides a rotation transformation around a given axis.</db:para>
<db:para>This class was introduced in Qt 4.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGraphicsRotation</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qgraphicstransform.xml" xlink:role="class">QGraphicsTransform</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>You can provide the desired axis by assigning a <db:link xlink:href="qvector3d.xml">QVector3D</db:link> to the axis property or by passing a member if <db:link xlink:href="qt.xml#Axis-enum">Qt::Axis</db:link> to the <db:link xlink:href="qgraphicsrotation.xml#setAxis">setAxis</db:link> convenience function. By default the axis is (0, 0, 1) i.e., rotation around the Z axis.</db:para>
<db:para>The angle property, which is provided by <db:link xlink:href="qgraphicsrotation.xml">QGraphicsRotation</db:link>, now describes the number of degrees to rotate around this axis.</db:para>
<db:para><db:link xlink:href="qgraphicsrotation.xml">QGraphicsRotation</db:link> provides certain parameters to help control how the rotation should be applied.</db:para>
<db:para>The origin is the point that the item is rotated around (i.e., it stays fixed relative to the parent as the rest of the item is rotated). By default the origin is <db:link xlink:href="qpointf.xml">QPointF</db:link>(0, 0).</db:para>
<db:para>The angle property provides the number of degrees to rotate the item clockwise around the origin. This value also be negative, indicating a counter-clockwise rotation. For animation purposes it may also be useful to provide rotation angles exceeding (-360, 360) degrees, for instance to animate how an item rotates several times.</db:para>
<db:para>Note: the final rotation is the combined effect of a rotation in 3D space followed by a projection back to 2D. If several rotations are performed in succession, they will not behave as expected unless they were all around the Z axis.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicstransform.xml">QGraphicsTransform</db:link></db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#setRotation">QGraphicsItem::setRotation</db:link>()</db:member>
<db:member><db:link xlink:href="qtransform.xml#rotate">QTransform::rotate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="angle-prop">
<db:title>angle : qreal</db:title>
<db:para>This property holds the angle for clockwise rotation, in degrees.</db:para>
<db:para>The angle can be any real number; the default value is 0.0. A value of 180 will rotate 180 degrees, clockwise. If you provide a negative number, the item will be rotated counter-clockwise. Normally the rotation angle will be in the range (-360, 360), but you can also provide numbers outside of this range (e.g., a angle of 370 degrees gives the same result as 10 degrees). Setting the angle to NaN results in no rotation.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qtglobal.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">angle</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setAngle</db:emphasis>(<db:emphasis>qreal</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgraphicsrotation.xml#angleChanged">angleChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="stylesheet-reference.xml#origin">origin</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="axis-prop">
<db:title>axis : QVector3D</db:title>
<db:para>This property holds a rotation axis, specified by a vector in 3D space.</db:para>
<db:para>This can be any axis in 3D space. By default the axis is (0, 0, 1), which is aligned with the Z axis. If you provide another axis, <db:link xlink:href="qgraphicsrotation.xml">QGraphicsRotation</db:link> will provide a transformation that rotates around this axis. For example, if you would like to rotate an item around its X axis, you could pass (1, 0, 0) as the axis.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> <db:emphasis role="bold">axis</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setAxis</db:emphasis>(const <db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> &amp;<db:emphasis>axis</db:emphasis>)</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgraphicsrotation.xml#setAxis">setAxis</db:link></db:emphasis>(<db:type><db:link xlink:href="qt.xml#Axis-enum">Qt::Axis</db:link></db:type> <db:emphasis>axis</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgraphicsrotation.xml#axisChanged">axisChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtransform.xml">QTransform</db:link></db:member>
<db:member><db:link xlink:href="qgraphicsrotation.xml#angle-prop">QGraphicsRotation::angle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="origin-prop">
<db:title>origin : QVector3D</db:title>
<db:para>This property holds the origin of the rotation in 3D space.</db:para>
<db:para>All rotations will be done relative to this point (i.e., this point will stay fixed, relative to the parent, when the item is rotated).</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> <db:emphasis role="bold">origin</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setOrigin</db:emphasis>(const <db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> &amp;<db:emphasis>point</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgraphicsrotation.xml#originChanged">originChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsrotation.xml#angle-prop">angle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGraphicsRotation">
<db:title>QGraphicsRotation::QGraphicsRotation(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a new <db:link xlink:href="qgraphicsrotation.xml">QGraphicsRotation</db:link> with the given <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QGraphicsRotation">
<db:title>[virtual noexcept] QGraphicsRotation::~QGraphicsRotation()</db:title>
<db:para>Destroys the graphics rotation.</db:para>
</db:section>
<db:section xml:id="angleChanged">
<db:title>void QGraphicsRotation::angleChanged()</db:title>
<db:para>This signal is emitted whenever the angle has changed.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qgraphicsrotation.xml#angle-prop">angle</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsrotation.xml#angle-prop">QGraphicsRotation::angle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="applyTo">
<db:title>[override virtual] void QGraphicsRotation::applyTo(QMatrix4x4 *<db:emphasis>matrix</db:emphasis>) const</db:title>
<db:para>Reimplements: <db:link xlink:href="qgraphicstransform.xml#applyTo" role="function">QGraphicsTransform::applyTo(QMatrix4x4 *matrix) const</db:link>.</db:para>
</db:section>
<db:section xml:id="axisChanged">
<db:title>void QGraphicsRotation::axisChanged()</db:title>
<db:para>This signal is emitted whenever the axis of the object changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qgraphicsrotation.xml#axis-prop">axis</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsrotation.xml#axis-prop">QGraphicsRotation::axis</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="originChanged">
<db:title>void QGraphicsRotation::originChanged()</db:title>
<db:para>This signal is emitted whenever the origin has changed.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qgraphicsrotation.xml#origin-prop">origin</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsrotation.xml#origin-prop">QGraphicsRotation::origin</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setAxis">
<db:title>void QGraphicsRotation::setAxis(Qt::Axis <db:emphasis>axis</db:emphasis>)</db:title>
<db:para>Convenience function to set the axis to <db:code role="parameter">axis</db:code>.</db:para>
<db:para>Note: the <db:link xlink:href="qt.xml#Axis-enum">Qt::YAxis</db:link> rotation for <db:link xlink:href="qtransform.xml">QTransform</db:link> is inverted from the correct mathematical rotation in 3D space. The <db:link xlink:href="qgraphicsrotation.xml">QGraphicsRotation</db:link> class implements a correct mathematical rotation. The following two sequences of code will perform the same transformation:</db:para>
<db:programlisting language="cpp">QTransform t;
t.rotate(45, Qt::YAxis);

QGraphicsRotation r;
r.setAxis(Qt::YAxis);
r.setAngle(-45);
</db:programlisting>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qgraphicsrotation.xml#axis-prop">axis</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsrotation.xml#axis-prop">axis</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
