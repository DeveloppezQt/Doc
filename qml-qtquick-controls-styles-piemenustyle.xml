<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>PieMenuStyle QML Type</db:title>
<db:productname>QtQuickControls1</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 1 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides custom styling for <db:link xlink:href="qml-qtquick-extras-piemenu.xml">PieMenu</db:link>.</db:para>
<db:para>This type was introduced in Qt 5.5.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls.Styles 1.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>PieMenuStyle is part of <db:simplelist><db:member><db:link xlink:href="controlsstyling.xml">Styling Controls</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml">PieMenuStyle</db:link> is a style for <db:link xlink:href="qml-qtquick-extras-piemenu.xml">PieMenu</db:link> that draws each section of the menu as a filled &quot;slice&quot;.</db:para>
<db:para>You can create a custom pie menu by replacing the following delegates:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#background-prop">background</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#cancel-prop">cancel</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#menuItem-prop">menuItem</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#title-prop">title</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>To customize the appearance of each <db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#menuItem-prop">menuItem</db:link> without having to define your own, you can use the <db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#backgroundColor-prop">backgroundColor</db:link> and <db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#selectionColor-prop">selectionColor</db:link> properties. To customize the drop shadow, use the <db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#shadowColor-prop">shadowColor</db:link>, <db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#shadowRadius-prop">shadowRadius</db:link> and <db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#shadowSpread-prop">shadowSpread</db:link> properties.</db:para>
<db:para>Icons that are too large for the section that they are in will be scaled down appropriately.</db:para>
<db:para>To style individual sections of the menu, use the <db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#menuItem-prop">menuItem</db:link> component:</db:para>
<db:programlisting language="cpp">PieMenuStyle {
    shadowRadius: 0

    menuItem: Item {
        id: item
        rotation: -90 + sectionCenterAngle(styleData.index)

        Rectangle {
            width: parent.height * 0.2
            height: width
            color: &quot;darkorange&quot;
            radius: width / 2
            anchors.right: parent.right
            anchors.verticalCenter: parent.verticalCenter

            Text {
                id: textItem
                text: control.menuItems[styleData.index].text
                anchors.centerIn: parent
                color: control.currentIndex === styleData.index ? &quot;red&quot; : &quot;white&quot;
                rotation: -item.rotation
            }
        }
    }
}
</db:programlisting>
<db:mediaobject>
<db:alt>A custom PieMenu</db:alt>
<db:imageobject>
<db:imagedata fileref="images/piemenu-menuitem-example.png"/>
</db:imageobject>
</db:mediaobject>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="background-prop">
<db:title>background : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>background</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The background of the menu.</db:para>
<db:para>By default, there is no background defined.</db:para>
</db:section>
<db:section xml:id="backgroundColor-prop">
<db:title>backgroundColor : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>backgroundColor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The background color.</db:para>
</db:section>
<db:section xml:id="cancel-prop">
<db:title>cancel : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>cancel</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The cancel component of the menu.</db:para>
<db:para>This is an area in the center of the menu that closes the menu when clicked.</db:para>
<db:para>By default, it is not visible.</db:para>
</db:section>
<db:section xml:id="cancelRadius-prop">
<db:title>cancelRadius : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>cancelRadius</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The radius of the area that is used to cancel the menu.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#radius-prop">radius</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="control-prop">
<db:title>[read-only] control : PieMenu</db:title>
<db:fieldsynopsis>
<db:type>PieMenu</db:type>
<db:varname>control</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The <db:link xlink:href="qml-qtquick-extras-piemenu.xml">PieMenu</db:link> that this style is attached to.</db:para>
</db:section>
<db:section xml:id="endAngle-prop">
<db:title>endAngle : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>endAngle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The angle (in degrees) at which the last menu item will be drawn.</db:para>
<db:para>The absolute range formed by <db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#startAngle-prop">startAngle</db:link> and <db:code role="parameter">endAngle</db:code> must be less than or equal to <db:code>360</db:code> degrees.</db:para>
<db:para>Menu items are displayed clockwise when <db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#startAngle-prop">startAngle</db:link> is less than <db:code role="parameter">endAngle</db:code>, otherwise they are displayed anti-clockwise.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#startAngle-prop">startAngle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="menuItem-prop">
<db:title>menuItem : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>menuItem</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This component defines each section of the pie menu.</db:para>
<db:para>This component covers the width and height of the control.</db:para>
<db:para>No mouse events are propagated to this component, which means that controls like Button will not function when used within it. You can check if the mouse is over this section by comparing <db:code>control.currentIndex</db:code> to <db:code>styleData.index</db:code>.</db:para>
<db:para>Each instance of this component has access to the following properties:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:code>readonly property int</db:code> <db:emphasis role="bold">styleData.index</db:emphasis></db:para>
</db:td>
<db:td>
<db:para>The index of this menu item.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>readonly property bool</db:code> <db:emphasis role="bold">styleData.hovered</db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:code>true</db:code> if this menu item is under the mouse.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>readonly property bool</db:code> <db:emphasis role="bold">styleData.pressed</db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:code>true</db:code> if the mouse is pressed down on this menu item.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="padding-prop">
<db:title>padding group</db:title>
<db:bridgehead renderas="sect2" xml:id="padding.bottom-prop">padding.bottom : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>padding.bottom</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="padding.left-prop">padding.left : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>padding.left</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="padding.right-prop">padding.right : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>padding.right</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="padding.top-prop">padding.top : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>padding.top</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This grouped property holds the <db:code>top</db:code>, <db:code>left</db:code>, <db:code>right</db:code> and <db:code>bottom</db:code> padding.</db:para>
</db:section>
<db:section xml:id="radius-prop">
<db:title>[read-only] radius : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>radius</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The distance from the center of the menu to the outer edge of the menu.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#cancelRadius-prop">cancelRadius</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectionColor-prop">
<db:title>selectionColor : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>selectionColor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The selection color.</db:para>
</db:section>
<db:section xml:id="shadowColor-prop">
<db:title>shadowColor : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>shadowColor</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The shadow color.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtgraphicaleffects-dropshadow.xml">DropShadow</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="shadowRadius-prop">
<db:title>shadowRadius : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>shadowRadius</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The shadow radius.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtgraphicaleffects-dropshadow.xml">DropShadow</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="shadowSpread-prop">
<db:title>shadowSpread : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>shadowSpread</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The shadow spread.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtgraphicaleffects-dropshadow.xml">DropShadow</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="startAngle-prop">
<db:title>startAngle : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>startAngle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The angle (in degrees) at which the first menu item will be drawn.</db:para>
<db:para>The absolute range formed by <db:code role="parameter">startAngle</db:code> and <db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#endAngle-prop">endAngle</db:link> must be less than or equal to <db:code>360</db:code> degrees.</db:para>
<db:para>Menu items are displayed clockwise when <db:code role="parameter">startAngle</db:code> is less than <db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#endAngle-prop">endAngle</db:link>, otherwise they are displayed anti-clockwise.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-styles-piemenustyle.xml#endAngle-prop">endAngle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="title-prop">
<db:title>title : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>title</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The component that displays the text of the currently selected menu item, or the title if there is no current item.</db:para>
<db:para>The current item's text is available via the <db:code>styleData.text</db:code> property.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="sectionCenterAngle-method">
<db:title>real sectionCenterAngle(int <db:emphasis>itemIndex</db:emphasis>)</db:title>
<db:para>Returns the center of the section at <db:code role="parameter">itemIndex</db:code> as an angle in degrees.</db:para>
</db:section>
<db:section xml:id="sectionEndAngle-method">
<db:title>real sectionEndAngle(int <db:emphasis>itemIndex</db:emphasis>)</db:title>
<db:para>Returns the end of the section at <db:code role="parameter">itemIndex</db:code> as an angle in degrees.</db:para>
</db:section>
<db:section xml:id="sectionStartAngle-method">
<db:title>real sectionStartAngle(int <db:emphasis>itemIndex</db:emphasis>)</db:title>
<db:para>Returns the start of the section at <db:code role="parameter">itemIndex</db:code> as an angle in degrees.</db:para>
</db:section>
</db:section>
</db:article>
