<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QML Applications</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Essential documentation for QML application developers.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>QML is a declarative language that allows user interfaces to be described in terms of their visual components and how they interact and relate with one another. It is a highly readable language that was designed to enable components to be interconnected in a dynamic manner, and it allows components to be easily reused and customized within a user interface. Using the QtQuick module, designers and developers can easily build fluid animated user interfaces in QML, and have the option of connecting these user interfaces to any back-end C++ libraries.</db:para>
<db:section xml:id="what-is-qml">
<db:title>What is QML?</db:title>
<db:para>QML is a user interface specification and programming language. It allows developers and designers alike to create highly performant, fluidly animated and visually appealing applications. QML offers a highly readable, declarative, JSON-like syntax with support for imperative JavaScript expressions combined with dynamic property bindings.</db:para>
<db:programlisting language="qml">import QtQuick
import QtQuick.Controls

ApplicationWindow {
    width: 400
    height: 400
    visible: true

    Button {
        id: button
        text: &quot;A Special Button&quot;
        background: Rectangle {
            implicitWidth: 100
            implicitHeight: 40
            color: button.down ? &quot;#d6d6d6&quot; : &quot;#f6f6f6&quot;
            border.color: &quot;#26282a&quot;
            border.width: 1
            radius: 4
        }
    }
}
</db:programlisting>
<db:para>The QML language and engine infrastructure is provided by the <db:link xlink:href="qtqml-index.xml">Qt Qml</db:link> module. For in-depth information about the QML language, please see the <db:link xlink:href="qtqml-index.xml">Qt Qml</db:link> module documentation.</db:para>
<db:para>The following pages contain more information about QML:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qmlfirststeps.xml">First Steps with QML</db:link> - begin using QML with these examples</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="https://doc.qt.io/qtcreator/quick-projects.html">Creating Qt Quick Projects in Qt Creator</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qmlreference.xml">The QML Reference</db:link> - reference about the QML constructs and features</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-codingconventions.xml">QML Coding Conventions</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-glossary.xml">Glossary of QML Terms</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="modules-qml.xml">All QML APIs by Module</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="what-is-qt-quick">
<db:title>What is Qt Quick?</db:title>
<db:para>Qt Quick is the standard library of QML types and functionality for QML. It includes visual types, interactive types, animations, models and views, particle effects and shader effects. A QML application developer can get access to all of that functionality with a single import statement.</db:para>
<db:para>The QtQuick QML library is provided by the <db:link xlink:href="qtquick-index.xml">Qt Quick</db:link> module. For in-depth information about the various QML types and other functionality provided by Qt Quick, please see the <db:link xlink:href="qtquick-index.xml">Qt Quick</db:link> module documentation. Qt Quick adds visual types, animation types, and other QML types in addition to the standard QML types from Qt QML.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquick-usecase-visual.xml">Visual types in QML</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-usecase-userinput.xml">Responding to User Input in QML</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-usecase-animations.xml">Animations in QML</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-usecase-text.xml">Displaying Text in QML</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-usecase-layouts.xml">Layouts in QML</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-usecase-styling.xml">Style and Theme Support</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-usecase-integratingjs.xml">Integrating JavaScript in QML</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:section xml:id="buttons-menus-and-other-controls">
<db:title>Buttons, Menus, and other Controls</db:title>
<db:para>For a set of UI controls, the <db:link xlink:href="qtquickcontrols-index.xml">Qt Quick Controls</db:link> module implements several controls such as buttons, menus, and views. These controls come with several built-in styles that can be used, and also support the creation of custom styles.</db:para>
</db:section>
</db:section>
<db:section xml:id="qt-quick-projects">
<db:title>Qt Quick Projects</db:title>
<db:para><db:link xlink:href="http://doc.qt.io/qtcreator/creator-configuring.html">Qt Creator</db:link> sets up project environments for the following types of Qt Quick applications:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:emphasis role="bold">Scroll</db:emphasis> - scroll-based navigation</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis role="bold">Stack</db:emphasis> - stack-based navigation</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis role="bold">Swipe</db:emphasis> - page-based application with swipe navigation</db:para>
</db:listitem>
<db:listitem>
<db:para><db:emphasis role="bold">Python</db:emphasis> - <db:link xlink:href="https://doc.qt.io/qtforpython/index.html">Qt for Python</db:link> projects can have QML UIs and have Qt Creator support</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>For more information about Qt Quick applications, visit the following pages:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="https://doc.qt.io/qtcreator/quick-projects.html">Creating Qt Quick Projects</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="topics-app-development.xml#design-tools">Design Tools</db:link> - tools for designing UIs</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="code-samples-and-demos">
<db:title>Code Samples and Demos</db:title>
<db:para>To learn more about uses of QML code, there are several code samples which show how QML types are used. In addition, there are several demos which show how QML code is used in applications.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtdoc-tutorials-alarms-example.xml">Getting Started Programming with Qt Quick</db:link> - a tutorial showing the creation of a simple QML text editor.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-codesamples.xml">Qt Quick Examples and Tutorials</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="advanced-application-development-topics">
<db:title>Advanced Application Development Topics</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtqml-cppintegration-overview.xml">Overview - QML and C++ Integration</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-deployment.xml">Deploying QML Applications</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="http://doc.qt.io/QtQuickCompiler">Qt Quick Compiler</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-bestpractices.xml">Best Practices for QML and Qt Quick</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-performance.xml">QML Performance Considerations and Suggestions</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="internationalization.xml">Internationalization and Localization</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para>Testing and Debugging</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qtquick-qml-runtime.xml#qml-runtime-tool">Prototyping with the QML Runtime Tool</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquick-debugging.xml">Debugging QML Applications</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qtquicktest-index.xml">Qt Quick Test: QML Unit Testing Framework</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="related-topics">
<db:title>Related Topics</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qmltypes.xml">All QML Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="modules-qml.xml">All QML APIs by Module</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="obsoleteqmltypes.xml">Obsolete QML Types</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:article>
