<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QWebEngineContextMenuData Class</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qwebenginecontextmenudata.xml">QWebEngineContextMenuData</db:link> class provides context data for populating or extending a context menu with actions.</db:para>
<db:para>This class was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QWebEngineContextMenuData</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += webenginewidgets</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qwebenginecontextmenudata.xml">QWebEngineContextMenuData</db:link> is returned by <db:link xlink:href="qwebenginepage.xml#contextMenuData">QWebEnginePage::contextMenuData</db:link>() after a context menu event, and contains information about where the context menu event took place. This is also in the context in which any context specific <db:link xlink:href="qwebenginepage.xml#WebAction-enum">QWebEnginePage::WebAction</db:link> will be performed.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="MediaType-enum">
<db:title>enum QWebEngineContextMenuData::MediaType</db:title>
<db:para>This enum describes the media type of the context if any.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginecontextmenudata.xml">QWebEngineContextMenuData</db:link></db:emphasis>::MediaTypeNone</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The context is not a media type.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginecontextmenudata.xml">QWebEngineContextMenuData</db:link></db:emphasis>::MediaTypeImage</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The context is an image element.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginecontextmenudata.xml">QWebEngineContextMenuData</db:link></db:emphasis>::MediaTypeVideo</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The context is a video element.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginecontextmenudata.xml">QWebEngineContextMenuData</db:link></db:emphasis>::MediaTypeAudio</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>The context is an audio element.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginecontextmenudata.xml">QWebEngineContextMenuData</db:link></db:emphasis>::MediaTypeCanvas</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>The context is a canvas element.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginecontextmenudata.xml">QWebEngineContextMenuData</db:link></db:emphasis>::MediaTypeFile</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>The context is a file.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginecontextmenudata.xml">QWebEngineContextMenuData</db:link></db:emphasis>::MediaTypePlugin</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>The context is a plugin element.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QWebEngineContextMenuData">
<db:title>QWebEngineContextMenuData::QWebEngineContextMenuData()</db:title>
<db:para>Constructs null context menu data.</db:para>
</db:section>
<db:section xml:id="QWebEngineContextMenuData-1">
<db:title>QWebEngineContextMenuData::QWebEngineContextMenuData(const QWebEngineContextMenuData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs context menu data from <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QWebEngineContextMenuData">
<db:title>[noexcept] QWebEngineContextMenuData::~QWebEngineContextMenuData()</db:title>
<db:para>Destroys the context menu data.</db:para>
</db:section>
<db:section xml:id="isContentEditable">
<db:title>bool QWebEngineContextMenuData::isContentEditable() const</db:title>
<db:para>Returns <db:code>true</db:code> if the content is editable by the user; otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="isValid">
<db:title>bool QWebEngineContextMenuData::isValid() const</db:title>
<db:para>Returns <db:code>true</db:code> if the context data is valid; otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="linkText">
<db:title>QString QWebEngineContextMenuData::linkText() const</db:title>
<db:para>Returns the text of a link if the context is a link.</db:para>
</db:section>
<db:section xml:id="linkUrl">
<db:title>QUrl QWebEngineContextMenuData::linkUrl() const</db:title>
<db:para>Returns the URL of a link if the context is a link.</db:para>
</db:section>
<db:section xml:id="mediaType">
<db:title>QWebEngineContextMenuData::MediaType QWebEngineContextMenuData::mediaType() const</db:title>
<db:para>Returns the type of the media element or <db:code>MediaTypeNone</db:code> if the context is not a media element.</db:para>
</db:section>
<db:section xml:id="mediaUrl">
<db:title>QUrl QWebEngineContextMenuData::mediaUrl() const</db:title>
<db:para>If the context is a media element, returns the URL of that media.</db:para>
</db:section>
<db:section xml:id="misspelledWord">
<db:title>[since 5.8] QString QWebEngineContextMenuData::misspelledWord() const</db:title>
<db:para>If the context is a word considered misspelled by the spell-checker, returns the misspelled word.</db:para>
<db:para>For possible replacements of the word, see <db:link xlink:href="qwebenginecontextmenudata.xml#spellCheckerSuggestions">spellCheckerSuggestions</db:link>().</db:para>
<db:para>This function was introduced in Qt 5.8.</db:para>
</db:section>
<db:section xml:id="position">
<db:title>QPoint QWebEngineContextMenuData::position() const</db:title>
<db:para>Returns the position of the context, usually the mouse position where the context menu event was triggered.</db:para>
</db:section>
<db:section xml:id="selectedText">
<db:title>QString QWebEngineContextMenuData::selectedText() const</db:title>
<db:para>Returns the selected text of the context.</db:para>
</db:section>
<db:section xml:id="spellCheckerSuggestions">
<db:title>[since 5.8] QStringList QWebEngineContextMenuData::spellCheckerSuggestions() const</db:title>
<db:para>If the context is a word considered misspelled by the spell-checker, returns a list of suggested replacements for <db:link xlink:href="qwebenginecontextmenudata.xml#misspelledWord">misspelledWord</db:link>().</db:para>
<db:para>This function was introduced in Qt 5.8.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QWebEngineContextMenuData &amp;QWebEngineContextMenuData::operator=(const QWebEngineContextMenuData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns the <db:code role="parameter">other</db:code> context menu data to this.</db:para>
</db:section>
</db:section>
</db:article>
