<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ScrollView QML Type</db:title>
<db:productname>QtQuickControls1</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 1 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides a scrolling view within another Item.</db:para>
<db:para>This type was introduced in Qt 5.1.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 1.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-textarea.xml" xlink:role="">TextArea</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>FocusScope</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>ScrollView is part of <db:simplelist><db:member><db:link xlink:href="views.xml">Application Navigation and Views</db:link></db:member><db:member><db:link xlink:href="controls.xml">Buttons and Controls</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/scrollview.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>A <db:link xlink:href="qml-qtquick-controls-scrollview.xml">ScrollView</db:link> can be used either to replace a <db:link xlink:href="qml-qtquick-flickable.xml">Flickable</db:link> or decorate an existing <db:link xlink:href="qml-qtquick-flickable.xml">Flickable</db:link>. Depending on the platform, it will add scroll bars and a content frame.</db:para>
<db:para>Only one Item can be a direct child of the <db:link xlink:href="qml-qtquick-controls-scrollview.xml">ScrollView</db:link> and the child is implicitly anchored to fill the scroll view.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">ScrollView {
    Image { source: &quot;largeImage.png&quot; }
}
</db:programlisting>
<db:para>In the previous example the Image item will implicitly get scroll behavior as if it was used within a <db:link xlink:href="qml-qtquick-flickable.xml">Flickable</db:link>. The width and height of the child item will be used to define the size of the content area.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">ScrollView {
    ListView {
        ...
    }
}
</db:programlisting>
<db:para>In this case the content size of the <db:link xlink:href="qml-qtquick-controls-scrollview.xml">ScrollView</db:link> will simply mirror that of its contained <db:link xlink:href="qml-qtquick-controls-scrollview.xml#flickableItem-prop">flickableItem</db:link>.</db:para>
<db:para>You can create a custom appearance for a <db:link xlink:href="qml-qtquick-controls-scrollview.xml">ScrollView</db:link> by assigning a <db:link xlink:href="qml-qtquick-controls-styles-scrollviewstyle.xml">ScrollViewStyle</db:link>.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="contentItem-prop">
<db:title>[default] contentItem : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>contentItem</db:varname>
<db:modifier>writable</db:modifier>
<db:modifier>[default]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The contentItem of the <db:link xlink:href="qml-qtquick-controls-scrollview.xml">ScrollView</db:link>. This is set by the user.</db:para>
<db:para>Note that the definition of contentItem is somewhat different to that of a Flickable, where the contentItem is implicitly created.</db:para>
</db:section>
<db:section xml:id="flickableItem-prop">
<db:title>[read-only] flickableItem : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>flickableItem</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The flickableItem of the <db:link xlink:href="qml-qtquick-controls-scrollview.xml">ScrollView</db:link>. If the <db:link xlink:href="qml-qtquick-controls-scrollview.xml#contentItem-prop">contentItem</db:link> provided to the <db:link xlink:href="qml-qtquick-controls-scrollview.xml">ScrollView</db:link> is a Flickable, it will be the <db:link xlink:href="qml-qtquick-controls-scrollview.xml#contentItem-prop">contentItem</db:link>.</db:para>
</db:section>
<db:section xml:id="frameVisible-prop">
<db:title>frameVisible : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>frameVisible</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property tells the <db:link xlink:href="qml-qtquick-controls-scrollview.xml">ScrollView</db:link> if it should render a frame around its content.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="highlightOnFocus-prop">
<db:title>highlightOnFocus : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>highlightOnFocus</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property controls if there should be a highlight around the frame when the <db:link xlink:href="qml-qtquick-controls-scrollview.xml">ScrollView</db:link> has input focus.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
<db:note>
<db:para>This property is only applicable on some platforms, such as Mac OS.</db:para>
</db:note>
</db:section>
<db:section xml:id="horizontalScrollBarPolicy-prop">
<db:title>[since QtQuick.Controls 1.3] horizontalScrollBarPolicy : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>horizontalScrollBarPolicy</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the policy for showing the horizontal scrollbar. It can be any of the following values:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Qt.ScrollBarAsNeeded</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.ScrollBarAlwaysOff</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.ScrollBarAlwaysOn</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The default policy is <db:code>Qt.ScrollBarAsNeeded</db:code>.</db:para>
<db:para>This property was introduced in QtQuick.Controls 1.3.</db:para>
</db:section>
<db:section xml:id="style-prop">
<db:title>style : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>style</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The style Component for this control.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-controls-styles-qmlmodule.xml">Qt Quick Controls 1 Styles QML Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="verticalScrollBarPolicy-prop">
<db:title>[since QtQuick.Controls 1.3] verticalScrollBarPolicy : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>verticalScrollBarPolicy</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the policy for showing the vertical scrollbar. It can be any of the following values:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Qt.ScrollBarAsNeeded</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.ScrollBarAlwaysOff</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.ScrollBarAlwaysOn</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The default policy is <db:code>Qt.ScrollBarAsNeeded</db:code>.</db:para>
<db:para>This property was introduced in QtQuick.Controls 1.3.</db:para>
</db:section>
<db:section xml:id="viewport-prop">
<db:title>viewport : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>viewport</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The viewport determines the current &quot;window&quot; on the <db:link xlink:href="qml-qtquick-controls-scrollview.xml#contentItem-prop">contentItem</db:link>. In other words, it clips it and the size of the viewport tells you how much of the content area is visible.</db:para>
</db:section>
</db:section>
</db:article>
