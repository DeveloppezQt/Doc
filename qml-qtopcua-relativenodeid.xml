<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>RelativeNodeId QML Type</db:title>
<db:productname>QtOpcUa</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>An OPC UA module for Qt</db:titleabbrev>
<db:abstract>
<db:para>Specifies a relative node by a start node and a path.</db:para>
<db:para>This type was introduced in QtOpcUa 5.12.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtOpcUa</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtOpcUa 5.12</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Proceeding from the given start node, the server tries to match the content of the path property to any existing nodes on the server. Only if the path fully matches to exactly one single target node, it will be used. Partial or multiple matches can not be handled and are treated as error.</db:para>
<db:programlisting language="cpp">import QtOpcUa as QtOpcUa

QtOpcUa.RelativeNodeId {
    startNode: QtOpcUa.RelativeNodeId {
            identifier: &quot;s=Example.Node&quot;
            ns: &quot;Example Namespace&quot;
         }
    path: [ QtOpcUa.RelativeNodePath {
                ns: &quot;Test Namespace&quot;
                browseName: &quot;SomeName&quot;
            }
            ...
        ]
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtopcua-nodeid.xml">NodeId</db:link></db:member>
<db:member><db:link xlink:href="qml-qtopcua-node.xml">Node</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="path-prop">
<db:title>path : list</db:title>
<db:fieldsynopsis>
<db:type>list</db:type>
<db:varname>path</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Search path for the designated node. This is a list of <db:code>OpcUaRelativeNodePath</db:code> objects specifying the path where the target node can be found relative to the start node.</db:para>
</db:section>
<db:section xml:id="startNode-prop">
<db:title>startNode : NodeId</db:title>
<db:fieldsynopsis>
<db:type>NodeId</db:type>
<db:varname>startNode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Namespace of the node identifier. The start node specifies the node where resolving the path starts. It can be an absolute or relative node ID.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtopcua-nodeid.xml">NodeId</db:link></db:member>
<db:member><db:link xlink:href="qml-qtopcua-relativenodeid.xml">RelativeNodeId</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
