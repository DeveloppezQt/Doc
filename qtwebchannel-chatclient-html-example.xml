<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt WebChannel ChatClient HTML Example</db:title>
<db:productname>QtWebChannel</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebChannel Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A HTML/JavaScript client that communicates over a WebSocket with a <db:link xlink:href="qwebchannel.xml">QWebChannel</db:link> server.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/chatclient-html.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:emphasis>ChatClient HTML</db:emphasis> provides a simple <db:link xlink:href="qwebchannel.xml">QWebChannel</db:link> client implemented using JavaScript and HTML.</db:para>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example, open the <db:code>chatclient.html</db:code> file in a browser.</db:para>
</db:section>
<db:section xml:id="implementing-a-web-channel-client">
<db:title>Implementing a Web Channel Client</db:title>
<db:para>The client initializes a WebSocket connection to the chat server and receives an object containing all the necessary signals, slots, and properties for implementing a chat client.</db:para>
<db:para>After login, the client can invoke the method <db:code>sendMessage</db:code> and receive the signal <db:code>newMessage</db:code> to send and receive messages. Furthermore, a <db:code>userList</db:code> property provides the names of all other connected clients. The list is automatically updated when its contents change. Also, the client responds to the server's keep alive signal which is needed to detect disconnected clients and remove them from the <db:code>userList</db:code> property.</db:para>
<db:para>The example shows how basic elements can be used with the client JavaScript implementation of <db:link xlink:href="qwebchannel.xml">QWebChannel</db:link>, like connecting to signals (<db:code>newMessage</db:code>), calling slots (<db:code>sendMessage</db:code>), and handling property changes (<db:code>userList</db:code>).</db:para>
<db:para>The client is able to work with <db:link xlink:href="qtwebchannel-chatserver-cpp-example.xml">Qt WebChannel ChatServer Example</db:link>.</db:para>
</db:section>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtwebchannel.git/tree/examples/webchannel/chatclient-html?h=6.5">Example project @ code.qt.io</db:link></db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtwebchannel-chatserver-cpp-example.xml">Qt WebChannel ChatServer Example</db:link></db:member>
<db:member><db:link xlink:href="qtwebchannel-chatclient-qml-example.xml">Qt WebChannel ChatClient QML Application</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
