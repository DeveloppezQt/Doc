<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>MessageDialog QML Type</db:title>
<db:productname>QtLabsPlatform</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Labs Platform Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A native message dialog.</db:para>
<db:para>This type was introduced in Qt 5.8.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt.labs.platform 1.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Dialog</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qt-labs-platform-messagedialog.xml">MessageDialog</db:link> type provides a QML API for native platform message dialogs.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtlabsplatform-messagedialog-android.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>A message dialog is used to inform the user, or ask the user a question. A message dialog displays a primary <db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#text-prop">text</db:link> to alert the user to a situation, an <db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#informativeText-prop">informative text</db:link> to further explain the alert or to ask the user a question, and an optional <db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#detailedText-prop">detailed text</db:link> to provide even more data if the user requests it. A message box can also display a configurable set of <db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#buttons-prop">buttons</db:link> for accepting a user response.</db:para>
<db:para>To show a message dialog, construct an instance of <db:link xlink:href="qml-qt-labs-platform-messagedialog.xml">MessageDialog</db:link>, set the desired properties, and call <db:link xlink:href="qml-qt-labs-platform-dialog.xml#open-method">open</db:link>().</db:para>
<db:programlisting language="cpp">MessageDialog {
    buttons: MessageDialog.Ok
    text: &quot;The document has been modified.&quot;
}
</db:programlisting>
<db:para>The user must click the <db:guilabel>OK</db:guilabel> button to dismiss the message dialog. A modal message dialog blocks the rest of the GUI until the message is dismissed.</db:para>
<db:para>A more elaborate approach than just alerting the user to an event is to also ask the user what to do about it. Store the question in the <db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#informativeText-prop">informative text</db:link> property, and specify the <db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#buttons-prop">buttons</db:link> property to the set of buttons you want as the set of user responses. The buttons are specified by combining values using the bitwise OR operator. The display order for the buttons is platform dependent.</db:para>
<db:programlisting language="cpp">MessageDialog {
    text: &quot;The document has been modified.&quot;
    informativeText: &quot;Do you want to save your changes?&quot;
    buttons: MessageDialog.Ok | MessageDialog.Cancel

    onAccepted: document.save()
}
</db:programlisting>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtlabsplatform-messagedialog-informative-android.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The <db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#clicked-signal">clicked</db:link>() signal passes the information of which button was clicked.</db:para>
<db:para>A native platform message dialog is currently available on the following platforms:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>iOS</db:para>
</db:listitem>
<db:listitem>
<db:para>Android</db:para>
</db:listitem>
<db:listitem>
<db:para>WinRT</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The Qt Labs Platform module uses Qt Widgets as a fallback on platforms that do not have a native implementation available. Therefore, applications that use types from the Qt Labs Platform module should link to <db:link xlink:href="qtwidgets-module.xml">QtWidgets</db:link> and use <db:link xlink:href="qapplication.xml">QApplication</db:link> instead of <db:link xlink:href="qguiapplication.xml">QGuiApplication</db:link>.</db:para>
<db:para>To link against the <db:link xlink:href="qtwidgets-module.xml">QtWidgets</db:link> library, add the following to your qmake project file:</db:para>
<db:programlisting language="cpp">QT += widgets
</db:programlisting>
<db:para>Create an instance of <db:link xlink:href="qapplication.xml">QApplication</db:link> in <db:code>main()</db:code>:</db:para>
<db:programlisting language="cpp">#include &amp;lt;QApplication&amp;gt;
#include &amp;lt;QQmlApplicationEngine&amp;gt;

int main(int argc, char *argv[])
{
    QApplication::setAttribute(Qt::AA_EnableHighDpiScaling);
    QApplication app(argc, argv);
    QQmlApplicationEngine engine;
    engine.load(QUrl(QStringLiteral(&quot;qrc:/main.qml&quot;)));
    return app.exec();
}
</db:programlisting>
<db:note>
<db:para><db:emphasis>Types in Qt.labs modules are not guaranteed to remain compatible in future versions.</db:emphasis></db:para>
</db:note>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="buttons-prop">
<db:title>buttons : flags</db:title>
<db:fieldsynopsis>
<db:type>flags</db:type>
<db:varname>buttons</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a combination of buttons that are used by the message dialog. The default value is <db:code>MessageDialog.NoButton</db:code>.</db:para>
<db:para>Possible flags:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>MessageDialog.Ok</db:para>
</db:td>
<db:td>
<db:para>An &quot;OK&quot; button defined with the <db:code>AcceptRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.Open</db:para>
</db:td>
<db:td>
<db:para>An &quot;Open&quot; button defined with the <db:code>AcceptRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.Save</db:para>
</db:td>
<db:td>
<db:para>A &quot;Save&quot; button defined with the <db:code>AcceptRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.Cancel</db:para>
</db:td>
<db:td>
<db:para>A &quot;Cancel&quot; button defined with the <db:code>RejectRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.Close</db:para>
</db:td>
<db:td>
<db:para>A &quot;Close&quot; button defined with the <db:code>RejectRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.Discard</db:para>
</db:td>
<db:td>
<db:para>A &quot;Discard&quot; or &quot;Don't Save&quot; button, depending on the platform, defined with the <db:code>DestructiveRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.Apply</db:para>
</db:td>
<db:td>
<db:para>An &quot;Apply&quot; button defined with the <db:code>ApplyRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.Reset</db:para>
</db:td>
<db:td>
<db:para>A &quot;Reset&quot; button defined with the <db:code>ResetRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.RestoreDefaults</db:para>
</db:td>
<db:td>
<db:para>A &quot;Restore Defaults&quot; button defined with the <db:code>ResetRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.Help</db:para>
</db:td>
<db:td>
<db:para>A &quot;Help&quot; button defined with the <db:code>HelpRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.SaveAll</db:para>
</db:td>
<db:td>
<db:para>A &quot;Save All&quot; button defined with the <db:code>AcceptRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.Yes</db:para>
</db:td>
<db:td>
<db:para>A &quot;Yes&quot; button defined with the <db:code>YesRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.YesToAll</db:para>
</db:td>
<db:td>
<db:para>A &quot;Yes to All&quot; button defined with the <db:code>YesRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.No</db:para>
</db:td>
<db:td>
<db:para>A &quot;No&quot; button defined with the <db:code>NoRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.NoToAll</db:para>
</db:td>
<db:td>
<db:para>A &quot;No to All&quot; button defined with the <db:code>NoRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.Abort</db:para>
</db:td>
<db:td>
<db:para>An &quot;Abort&quot; button defined with the <db:code>RejectRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.Retry</db:para>
</db:td>
<db:td>
<db:para>A &quot;Retry&quot; button defined with the <db:code>AcceptRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.Ignore</db:para>
</db:td>
<db:td>
<db:para>An &quot;Ignore&quot; button defined with the <db:code>AcceptRole</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>MessageDialog.NoButton</db:para>
</db:td>
<db:td>
<db:para>The dialog has no buttons.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#clicked-signal">clicked</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="detailedText-prop">
<db:title>detailedText : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>detailedText</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the text to be displayed in the details area.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#text-prop">text</db:link></db:member>
<db:member><db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#informativeText-prop">informativeText</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="informativeText-prop">
<db:title>informativeText : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>informativeText</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the informative text that provides a fuller description for the message.</db:para>
<db:para>Informative text can be used to expand upon the <db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#text-prop">text</db:link> to give more information to the user.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#text-prop">text</db:link></db:member>
<db:member><db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#detailedText-prop">detailedText</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="text-prop">
<db:title>text : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>text</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the text to be displayed on the message dialog.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#informativeText-prop">informativeText</db:link></db:member>
<db:member><db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#detailedText-prop">detailedText</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="abortClicked-signal">
<db:title>abortClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Abort</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onAbortClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="applyClicked-signal">
<db:title>applyClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Apply</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onApplyClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="cancelClicked-signal">
<db:title>cancelClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Cancel</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onCancelClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="clicked-signal">
<db:title>clicked(<db:emphasis>button</db:emphasis>)</db:title>
<db:para>This signal is emitted when a dialog <db:code role="parameter">button</db:code> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onClicked</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-messagedialog.xml#buttons-prop">buttons</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="closeClicked-signal">
<db:title>closeClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Close</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onCloseClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="discardClicked-signal">
<db:title>discardClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Discard</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onDiscardClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="helpClicked-signal">
<db:title>helpClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Help</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onHelpClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="ignoreClicked-signal">
<db:title>ignoreClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Ignore</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onIgnoreClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="noClicked-signal">
<db:title>noClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>No</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onNoClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="noToAllClicked-signal">
<db:title>noToAllClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>No To All</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onNoToAllClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="okClicked-signal">
<db:title>okClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Ok</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOkClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="openClicked-signal">
<db:title>openClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Open</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOpenClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="resetClicked-signal">
<db:title>resetClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Reset</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onResetClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="restoreDefaultsClicked-signal">
<db:title>restoreDefaultsClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Restore Defaults</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onRestoreDefaultsClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="retryClicked-signal">
<db:title>retryClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Retry</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onRetryClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="saveAllClicked-signal">
<db:title>saveAllClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Save All</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onSaveAllClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="saveClicked-signal">
<db:title>saveClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Save</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onSaveClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="yesClicked-signal">
<db:title>yesClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Yes</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onYesClicked</db:code>.</db:para>
</db:note>
</db:section>
<db:section xml:id="yesToAllClicked-signal">
<db:title>yesToAllClicked()</db:title>
<db:para>This signal is emitted when <db:guilabel>Yes To All</db:guilabel> is clicked.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onYesToAllClicked</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
