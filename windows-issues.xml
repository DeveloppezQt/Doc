<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt for Windows - Specific Issues</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A description of issues with Qt that are specific to Windows.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>This page contains information about <db:link xlink:href="windows.xml">Qt for Windows</db:link>.</db:para>
<db:section xml:id="installation-location">
<db:title>Installation location</db:title>
<db:para>Installing Qt into a directory with spaces, for example, <db:emphasis>C:\Program Files</db:emphasis>, may cause issues with qmake.</db:para>
<db:para>Install Qt into a sub-directory without spaces to avoid this problem.</db:para>
</db:section>
<db:section xml:id="maximum-path-length">
<db:title>Maximum path length</db:title>
<db:para>The Win32 API that both Qt and compiler tools use has a built-in maximum file path length of 260 characters (MAX_PATH). This can hit you in various forms if either your absolute or relative directory structures are too verbose. It is therefore recommended to keep the file system paths within limits, and put build directories nearby the source directories.</db:para>
</db:section>
<db:section xml:id="visual-studio">
<db:title>Visual Studio</db:title>
<db:para>If you are experiencing strange problems with using special flags that modify the alignment of structure and union members (such as /Zp2) then you will need to recompile Qt with the flags set for the application as well.</db:para>
</db:section>
<db:section xml:id="fullscreen-opengl-based-windows">
<db:title>Fullscreen OpenGL Based Windows</db:title>
<db:para>When a window is using an OpenGL based surface and is appearing in full screen mode, problems can occur with other top-level windows which are part of the application. Due to limitations of the Windows DWM, compositing is not handled correctly for OpenGL based windows when going into full screen mode. As a result, other top-level windows are not placed on top of the full screen window when they are made visible. For example, menus may not appear correctly, or dialogs fail to show up.</db:para>
<db:para>A window can use an OpenGL based surface either explicitly when <db:link xlink:href="qwindow.xml#setSurfaceType">setSurfaceType</db:link>() is called, or when something that requires OpenGL is used inside the window, causing the whole window to be OpenGL based. For example, <db:link xlink:href="qopenglwidget.xml">QOpenGLWidget</db:link> or <db:link xlink:href="qquickwidget.xml">QQuickWidget</db:link> can trigger this. However, if the surface is contained in a <db:link xlink:href="qwindow.xml">QWindow</db:link> which is hosted with <db:link xlink:href="qwidget.xml#createWindowContainer">createWindowContainer</db:link>(), or the obsoleted QGLWidget is used and it does cover the entire full screen window, then this problem does not occur.</db:para>
<db:para>To solve this problem, native APIs can be used to enable the WS_BORDER attribute when showing in full screen mode. This can be utilized as follows:</db:para>
<db:programlisting language="cpp">bool Widget::event(QEvent *e) {
#if defined(Q_OS_WIN)
    if (e-&amp;gt;type() == QEvent::WinIdChange) {
        if (windowHandle()) {
            HWND handle = reinterpret_cast&amp;lt;HWND&amp;gt;(windowHandle()-&amp;gt;winId());
            SetWindowLongPtr(handle, GWL_STYLE, GetWindowLongPtr(handle, GWL_STYLE) | WS_BORDER);
        }
    }
#endif
    return QWidget::event(e);
}
</db:programlisting>
<db:para>This will give the full screen window a 1-pixel border, thus enabling the other top level windows to appear on top.</db:para>
</db:section>
</db:article>
