<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Concurrent Examples</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 5.11.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>List of examples demonstrating multi-threaded programming.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="details"/>
<db:variablelist role="members">
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-mandelbrot-example.xml" xlink:role="page">Mandelbrot Example</db:link></db:term>
<db:listitem>
<db:para>The Mandelbrot example demonstrates multi-thread programming using Qt. It shows how to use a worker thread to perform heavy computations without blocking the main thread's event loop.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-queuedcustomtype-example.xml" xlink:role="page">Queued Custom Type Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates multi-thread programming using Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-semaphores-example.xml" xlink:role="page">Semaphores Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates multi-thread programming using Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtcore-threads-waitconditions-example.xml" xlink:role="page">Wait Conditions Example</db:link></db:term>
<db:listitem>
<db:para>Demonstrates multi-thread programming using Qt.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:article>
