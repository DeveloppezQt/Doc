<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QML Previewer Example</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates how to mix QML with a Qt Widgets application using <db:link xlink:href="qwidget.xml#createWindowContainer">QWidget::createWindowContainer</db:link>().</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qmlpreviewer-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The example demonstrates how you can embed Qt Quick inside a widgets application, and how different UI aspects integrate between Qt Widgets and Qt Quick. This includes:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Tab focusing between widgets and Qt Quick</db:para>
</db:listitem>
<db:listitem>
<db:para>Drag and drop between widgets and Qt Quick</db:para>
</db:listitem>
<db:listitem>
<db:para>Shortcuts defined in the embedded QML file</db:para>
</db:listitem>
<db:listitem>
<db:para>Embedding a <db:link xlink:href="qquickview.xml">QQuickView</db:link> inside a <db:link xlink:href="qlayout.xml">QLayout</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtdeclarative.git/tree/examples/quick/quickwidgets/qmlpreviewer?h=6.8">Example project @ code.qt.io</db:link></db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwidget.xml#createWindowContainer">QWidget::createWindowContainer</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
