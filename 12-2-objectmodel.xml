<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>objectmodel.qdocinc</db:title>
<db:productname>QDoc</db:productname>
<db:titleabbrev>QDoc Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="12-0-qdoc-commands-miscellaneous.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Miscellaneous"/></db:extendedlink>
<db:abstract>
<db:para>QDoc Manual.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>QDoc Manual</db:para>
<db:programlisting language="cpp">\section1 Qt Object Model

The standard C++ object model provides very efficient runtime support
for the object paradigm. But its static nature is inflexibile in
certain problem domains. Graphical user interface programming is a
domain that requires both runtime efficiency and a high level of
flexibility. Qt provides this, by combining the speed of C++ with the
flexibility of the Qt Object Model.

...

</db:programlisting>
</db:article>
