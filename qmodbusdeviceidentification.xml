<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QModbusDeviceIdentification Class</db:title>
<db:productname>QtSerialBus</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Serial Bus Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link> is a container class representing the physical and functional description of a Modbus server.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QModbusDeviceIdentification</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS SerialBus)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::SerialBus)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += serialbus</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The Device Identification interface is modeled as an address space composed of a set of addressable data elements. The data elements are called objects and an <db:link xlink:href="qmodbusdeviceidentification.xml#ObjectId-enum">ObjectId</db:link> identifies them.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="ConformityLevel-enum">
<db:title>enum QModbusDeviceIdentification::ConformityLevel</db:title>
<db:enumsynopsis>
<db:enumname>ConformityLevel</db:enumname>
<db:enumitem>
<db:enumidentifier>BasicConformityLevel</db:enumidentifier>
<db:enumvalue>0x01</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>RegularConformityLevel</db:enumidentifier>
<db:enumvalue>0x02</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ExtendedConformityLevel</db:enumidentifier>
<db:enumvalue>0x03</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>BasicIndividualConformityLevel</db:enumidentifier>
<db:enumvalue>0x81</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>RegularIndividualConformityLevel</db:enumidentifier>
<db:enumvalue>0x82</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ExtendedIndividualConformityLevel</db:enumidentifier>
<db:enumvalue>0x83</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>Defines the identification conformity level of the device and type of supported access.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::BasicConformityLevel</db:code></db:para>
</db:td>
<db:td><db:code>0x01</db:code></db:td>
<db:td>
<db:para>Basic identification (stream access).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::RegularConformityLevel</db:code></db:para>
</db:td>
<db:td><db:code>0x02</db:code></db:td>
<db:td>
<db:para>Regular identification (stream access).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::ExtendedConformityLevel</db:code></db:para>
</db:td>
<db:td><db:code>0x03</db:code></db:td>
<db:td>
<db:para>Extended identification (stream access).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::BasicIndividualConformityLevel</db:code></db:para>
</db:td>
<db:td><db:code>0x81</db:code></db:td>
<db:td>
<db:para>Basic identification (stream access and individual access).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::RegularIndividualConformityLevel</db:code></db:para>
</db:td>
<db:td><db:code>0x82</db:code></db:td>
<db:td>
<db:para>Regular identification (stream access and individual access).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::ExtendedIndividualConformityLevel</db:code></db:para>
</db:td>
<db:td><db:code>0x83</db:code></db:td>
<db:td>
<db:para>Extended identification (stream access and individual access).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmodbusdeviceidentification.xml#ReadDeviceIdCode-enum">ReadDeviceIdCode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="ObjectId-enum">
<db:title>enum QModbusDeviceIdentification::ObjectId</db:title>
<db:enumsynopsis>
<db:enumname>ObjectId</db:enumname>
<db:enumitem>
<db:enumidentifier>VendorNameObjectId</db:enumidentifier>
<db:enumvalue>0x00</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ProductCodeObjectId</db:enumidentifier>
<db:enumvalue>0x01</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MajorMinorRevisionObjectId</db:enumidentifier>
<db:enumvalue>0x02</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>VendorUrlObjectId</db:enumidentifier>
<db:enumvalue>0x03</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ProductNameObjectId</db:enumidentifier>
<db:enumvalue>0x04</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ModelNameObjectId</db:enumidentifier>
<db:enumvalue>0x05</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>UserApplicationNameObjectId</db:enumidentifier>
<db:enumvalue>0x06</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ReservedObjectId</db:enumidentifier>
<db:enumvalue>0x07</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ProductDependentObjectId</db:enumidentifier>
<db:enumvalue>0x80</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>UndefinedObjectId</db:enumidentifier>
<db:enumvalue>0x100</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the possible server objects. The interface consists of three categories of objects:</db:para>
<db:para>Basic Device Identification. All objects of this category are mandatory.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::VendorNameObjectId</db:code></db:para>
</db:td>
<db:td><db:code>0x00</db:code></db:td>
<db:td>
<db:para>The vendor name of the device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::ProductCodeObjectId</db:code></db:para>
</db:td>
<db:td><db:code>0x01</db:code></db:td>
<db:td>
<db:para>The product code of the device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::MajorMinorRevisionObjectId</db:code></db:para>
</db:td>
<db:td><db:code>0x02</db:code></db:td>
<db:td>
<db:para>The product version numbering.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Regular Device Identification. All objects of this category are standard defined and optional.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::VendorUrlObjectId</db:code></db:para>
</db:td>
<db:td><db:code>0x03</db:code></db:td>
<db:td>
<db:para>The vendor URL of the device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::ProductNameObjectId</db:code></db:para>
</db:td>
<db:td><db:code>0x04</db:code></db:td>
<db:td>
<db:para>The product name of the device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::ModelNameObjectId</db:code></db:para>
</db:td>
<db:td><db:code>0x05</db:code></db:td>
<db:td>
<db:para>The model name of the device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::UserApplicationNameObjectId</db:code></db:para>
</db:td>
<db:td><db:code>0x06</db:code></db:td>
<db:td>
<db:para>The user application name of the device.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Reserved range (i.e., ReservedObjectId &gt;= ObjectId &lt; ProductDependentObjectId). Do not use.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::ReservedObjectId</db:code></db:para>
</db:td>
<db:td><db:code>0x07</db:code></db:td>
<db:td>
<db:para>First value of reserved object Ids.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Extended Device Identification. All of these data are device dependent and optional.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::ProductDependentObjectId</db:code></db:para>
</db:td>
<db:td><db:code>0x80</db:code></db:td>
<db:td>
<db:para>First possible value of product dependent identifiers.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::UndefinedObjectId</db:code></db:para>
</db:td>
<db:td><db:code>0x100</db:code></db:td>
<db:td>
<db:para>Do not use.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="ReadDeviceIdCode-enum">
<db:title>enum QModbusDeviceIdentification::ReadDeviceIdCode</db:title>
<db:enumsynopsis>
<db:enumname>ReadDeviceIdCode</db:enumname>
<db:enumitem>
<db:enumidentifier>BasicReadDeviceIdCode</db:enumidentifier>
<db:enumvalue>0x01</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>RegularReadDeviceIdCode</db:enumidentifier>
<db:enumvalue>0x02</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ExtendedReadDeviceIdCode</db:enumidentifier>
<db:enumvalue>0x03</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>IndividualReadDeviceIdCode</db:enumidentifier>
<db:enumvalue>0x04</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>Defines the access type of the read identification request.</db:para>
<db:para>Stream access:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::BasicReadDeviceIdCode</db:code></db:para>
</db:td>
<db:td><db:code>0x01</db:code></db:td>
<db:td>
<db:para>Request to get the basic device identification.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::RegularReadDeviceIdCode</db:code></db:para>
</db:td>
<db:td><db:code>0x02</db:code></db:td>
<db:td>
<db:para>Request to get the regular device identification.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::ExtendedReadDeviceIdCode</db:code></db:para>
</db:td>
<db:td><db:code>0x03</db:code></db:td>
<db:td>
<db:para>Request to get the extended device identification.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Individual access:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link></db:emphasis>::IndividualReadDeviceIdCode</db:code></db:para>
</db:td>
<db:td><db:code>0x04</db:code></db:td>
<db:td>
<db:para>Request to get one specific identification object.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QModbusDeviceIdentification">
<db:title>QModbusDeviceIdentification::QModbusDeviceIdentification()</db:title>
<db:constructorsynopsis>
<db:methodname>QModbusDeviceIdentification</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QModbusDeviceIdentification()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an invalid <db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link> object.</db:para>
</db:section>
<db:section xml:id="conformityLevel">
<db:title>QModbusDeviceIdentification::ConformityLevel QModbusDeviceIdentification::conformityLevel() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QModbusDeviceIdentification::ConformityLevel</db:type>
<db:methodname>conformityLevel</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QModbusDeviceIdentification::ConformityLevel conformityLevel() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the identification conformity level of the device and type of supported access.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmodbusdeviceidentification.xml#setConformityLevel">setConformityLevel</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contains">
<db:title>bool QModbusDeviceIdentification::contains(uint <db:emphasis>objectId</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>contains</db:methodname>
<db:methodparam>
<db:type>uint</db:type>
<db:parameter>objectId</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool contains(uint objectId) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if there is an item for the given <db:code role="parameter">objectId</db:code>; otherwise <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmodbusdeviceidentification.xml#ObjectId-enum">ObjectId</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fromByteArray">
<db:title>[static] QModbusDeviceIdentification QModbusDeviceIdentification::fromByteArray(const QByteArray &amp;<db:emphasis>ba</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QModbusDeviceIdentification</db:type>
<db:methodname>fromByteArray</db:methodname>
<db:methodparam>
<db:type>const QByteArray &amp;</db:type>
<db:parameter>ba</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QModbusDeviceIdentification fromByteArray(const QByteArray &amp;ba)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Converts the byte array <db:code role="parameter">ba</db:code> to a <db:link xlink:href="qmodbusdeviceidentification.xml">QModbusDeviceIdentification</db:link> object.</db:para>
<db:note>
<db:para>: The returned object might be empty or even invalid if some error occurs while processing the byte array.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmodbusdeviceidentification.xml#isValid">isValid</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="insert">
<db:title>bool QModbusDeviceIdentification::insert(uint <db:emphasis>objectId</db:emphasis>, const QByteArray &amp;<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>insert</db:methodname>
<db:methodparam>
<db:type>uint</db:type>
<db:parameter>objectId</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QByteArray &amp;</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool insert(uint objectId, const QByteArray &amp;value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Inserts a new item with the <db:code role="parameter">objectId</db:code> and a value of <db:code role="parameter">value</db:code>. If there is already an item with the <db:code role="parameter">objectId</db:code>, that item's value is replaced with <db:code role="parameter">value</db:code>.</db:para>
<db:para>Returns <db:code>true</db:code> if the size of <db:code role="parameter">value</db:code> is less than 245 bytes and the <db:code role="parameter">objectId</db:code> is less then <db:link xlink:href="qmodbusdeviceidentification.xml#ObjectId-enum">QModbusDeviceIdentification::UndefinedObjectId</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmodbusdeviceidentification.xml#ObjectId-enum">ObjectId</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isValid">
<db:title>bool QModbusDeviceIdentification::isValid() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isValid</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isValid() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if the device identification object is valid; otherwise <db:code>false</db:code>.</db:para>
<db:para>A device identification object is considered valid if <db:link xlink:href="qmodbusdeviceidentification.xml#ObjectId-enum">ProductNameObjectId</db:link>, <db:link xlink:href="qmodbusdeviceidentification.xml#ObjectId-enum">ProductCodeObjectId</db:link> and <db:link xlink:href="qmodbusdeviceidentification.xml#ObjectId-enum">MajorMinorRevisionObjectId</db:link> are set to a non-empty value. Still the object can contain valid object id's and associated data.</db:para>
<db:note>
<db:para>A default constructed device identification object is invalid.</db:para>
</db:note>
</db:section>
<db:section xml:id="objectIds">
<db:title>QList&lt;int&gt; QModbusDeviceIdentification::objectIds() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;int&gt;</db:type>
<db:methodname>objectIds</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;int&gt; objectIds() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list containing all the object id's in the <db:code>QModbusDeviceIdentification</db:code> object in ascending order.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmodbusdeviceidentification.xml#ObjectId-enum">ObjectId</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="remove">
<db:title>void QModbusDeviceIdentification::remove(uint <db:emphasis>objectId</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>remove</db:methodname>
<db:methodparam>
<db:type>uint</db:type>
<db:parameter>objectId</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void remove(uint objectId)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Removes the item for the given <db:code role="parameter">objectId</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmodbusdeviceidentification.xml#ObjectId-enum">ObjectId</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setConformityLevel">
<db:title>void QModbusDeviceIdentification::setConformityLevel(QModbusDeviceIdentification::ConformityLevel <db:emphasis>level</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setConformityLevel</db:methodname>
<db:methodparam>
<db:type>QModbusDeviceIdentification::ConformityLevel</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setConformityLevel(QModbusDeviceIdentification::ConformityLevel level)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the identification conformity level of the device and type of supported access to <db:code role="parameter">level</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmodbusdeviceidentification.xml#conformityLevel">conformityLevel</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="value">
<db:title>QByteArray QModbusDeviceIdentification::value(uint <db:emphasis>objectId</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QByteArray</db:type>
<db:methodname>value</db:methodname>
<db:methodparam>
<db:type>uint</db:type>
<db:parameter>objectId</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QByteArray value(uint objectId) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the value associated with the <db:code role="parameter">objectId</db:code>. If there is no item with the <db:code role="parameter">objectId</db:code>, the function returns a <db:link xlink:href="containers.xml#default-constructed-value">default-constructed value</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmodbusdeviceidentification.xml#ObjectId-enum">ObjectId</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
