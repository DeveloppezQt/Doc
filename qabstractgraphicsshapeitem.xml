<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAbstractGraphicsShapeItem Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qabstractgraphicsshapeitem.xml">QAbstractGraphicsShapeItem</db:link> class provides a common base for all path items.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAbstractGraphicsShapeItem</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qgraphicsitem.xml" xlink:role="class">QGraphicsItem</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qgraphicsellipseitem.xml" xlink:role="class">QGraphicsEllipseItem</db:link>, <db:link xlink:href="qgraphicspathitem.xml" xlink:role="class">QGraphicsPathItem</db:link>, <db:link xlink:href="qgraphicspolygonitem.xml" xlink:role="class">QGraphicsPolygonItem</db:link>, <db:link xlink:href="qgraphicsrectitem.xml" xlink:role="class">QGraphicsRectItem</db:link>, and <db:link xlink:href="qgraphicssimpletextitem.xml" xlink:role="class">QGraphicsSimpleTextItem</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QAbstractGraphicsShapeItem is part of <db:simplelist><db:member>graphicsview-api</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This class does not fully implement an item by itself; in particular, it does not implement <db:link xlink:href="qgraphicsitem.xml#boundingRect">boundingRect</db:link>() and <db:link xlink:href="qgraphicsitem.xml#paint">paint</db:link>(), which are inherited by <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>.</db:para>
<db:para>You can subclass this item to provide a simple base implementation of accessors for the item's pen and brush.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsrectitem.xml">QGraphicsRectItem</db:link></db:member>
<db:member><db:link xlink:href="qgraphicsellipseitem.xml">QGraphicsEllipseItem</db:link></db:member>
<db:member><db:link xlink:href="qgraphicspathitem.xml">QGraphicsPathItem</db:link></db:member>
<db:member><db:link xlink:href="qgraphicspolygonitem.xml">QGraphicsPolygonItem</db:link></db:member>
<db:member><db:link xlink:href="qgraphicstextitem.xml">QGraphicsTextItem</db:link></db:member>
<db:member><db:link xlink:href="qgraphicslineitem.xml">QGraphicsLineItem</db:link></db:member>
<db:member><db:link xlink:href="qgraphicspixmapitem.xml">QGraphicsPixmapItem</db:link></db:member>
<db:member><db:link xlink:href="graphicsview.xml">Graphics View Framework</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QAbstractGraphicsShapeItem">
<db:title>[explicit] QAbstractGraphicsShapeItem::QAbstractGraphicsShapeItem(QGraphicsItem *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a <db:link xlink:href="qabstractgraphicsshapeitem.xml">QAbstractGraphicsShapeItem</db:link>. <db:code role="parameter">parent</db:code> is passed to <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>'s constructor.</db:para>
</db:section>
<db:section xml:id="dtor.QAbstractGraphicsShapeItem">
<db:title>[virtual noexcept] QAbstractGraphicsShapeItem::~QAbstractGraphicsShapeItem()</db:title>
<db:para>Destroys a <db:link xlink:href="qabstractgraphicsshapeitem.xml">QAbstractGraphicsShapeItem</db:link>.</db:para>
</db:section>
<db:section xml:id="brush">
<db:title>QBrush QAbstractGraphicsShapeItem::brush() const</db:title>
<db:para>Returns the item's brush, or an empty brush if no brush has been set.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractgraphicsshapeitem.xml#setBrush">setBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isObscuredBy">
<db:title>[override virtual] bool QAbstractGraphicsShapeItem::isObscuredBy(const QGraphicsItem *<db:emphasis>item</db:emphasis>) const</db:title>
<db:para>Reimplements: <db:link xlink:href="qgraphicsitem.xml#isObscuredBy" role="function">QGraphicsItem::isObscuredBy(const QGraphicsItem *item) const</db:link>.</db:para>
</db:section>
<db:section xml:id="opaqueArea">
<db:title>[override virtual] QPainterPath QAbstractGraphicsShapeItem::opaqueArea() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qgraphicsitem.xml#opaqueArea" role="function">QGraphicsItem::opaqueArea() const</db:link>.</db:para>
</db:section>
<db:section xml:id="pen">
<db:title>QPen QAbstractGraphicsShapeItem::pen() const</db:title>
<db:para>Returns the item's pen. If no pen has been set, this function returns QPen(), a default black solid line pen with 1 width.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractgraphicsshapeitem.xml#setPen">setPen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBrush">
<db:title>void QAbstractGraphicsShapeItem::setBrush(const QBrush &amp;<db:emphasis>brush</db:emphasis>)</db:title>
<db:para>Sets the item's brush to <db:code role="parameter">brush</db:code>.</db:para>
<db:para>The item's brush is used to fill the item.</db:para>
<db:para>If you use a brush with a <db:link xlink:href="qgradient.xml">QGradient</db:link>, the gradient is relative to the item's coordinate system.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractgraphicsshapeitem.xml#brush">brush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPen">
<db:title>void QAbstractGraphicsShapeItem::setPen(const QPen &amp;<db:emphasis>pen</db:emphasis>)</db:title>
<db:para>Sets the pen for this item to <db:code role="parameter">pen</db:code>.</db:para>
<db:para>The pen is used to draw the item's outline.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractgraphicsshapeitem.xml#pen">pen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
