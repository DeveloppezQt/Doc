<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QBoundingVolume Class</db:title>
<db:subtitle>Qt3DCore::QBoundingVolume</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>can be used to override the bounding volume of an entity.</db:para>
<db:para>This class was introduced in Qt 6.0.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Qt3DCore/QBoundingVolume</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3dcore)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3dcore)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dcore</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qgeometryrenderer.xml" xlink:role="class">Qt3DRender::QGeometryRenderer</db:link> and <db:link xlink:href="qt3drender-qpickingproxy.xml" xlink:role="class">Qt3DRender::QPickingProxy</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-core-boundingvolume.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qcomponent.xml" xlink:role="class">Qt3DCore::QComponent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qgeometryrenderer.xml" xlink:role="class">Qt3DRender::QGeometryRenderer</db:link> and <db:link xlink:href="qt3drender-qpickingproxy.xml" xlink:role="class">Qt3DRender::QPickingProxy</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>An entity's bounding volume is used for many operations such as picking or view frustum culling. It is normally computed by traversing the rendered geometry.</db:para>
<db:para><db:link xlink:href="qt3dcore-qboundingvolume.xml">QBoundingVolume</db:link> can be used when the extent of the geometry is known to the application so that Qt 3D does not have to compute it.</db:para>
<db:para>A bounding volume can be provided either as minimum and maximum extent coordinates, or a separate, usually simpler, geometry that approximates the rendered mesh.</db:para>
<db:para>When using minimum and maximum extents, these are considered to be the opposite corners of an axis aligned bounding box, in the geometry's local coordinate system.</db:para>
<db:para><db:link xlink:href="qt3dcore-qboundingvolume.xml">QBoundingVolume</db:link> can also be used to query the computed bounding volume of a <db:link xlink:href="qml-qt3d-core-geometryview.xml">GeometryView</db:link>. The <db:link xlink:href="qt3dcore-qboundingvolume.xml#implicitMinPoint-prop">implicitMinPoint</db:link> and <db:link xlink:href="qt3dcore-qboundingvolume.xml#implicitMaxPoint-prop">implicitMaxPoint</db:link> properties will be updated if the geometry changes. Note that this is done asynchronously on a background thread so you should check the value of <db:link xlink:href="qt3dcore-qboundingvolume.xml#implicitPointsValid-prop">implicitPointsValid</db:link> before reading them.</db:para>
<db:para>You can force the implicit extents to be updated by calling <db:link xlink:href="qt3dcore-qboundingvolume.xml#updateImplicitBounds">updateImplicitBounds</db:link>. This will block on the calling thread until the results are available.</db:para>
<db:note>
<db:para><db:link xlink:href="qml-qt3d-render-geometryrenderer.xml">GeometryRenderer</db:link> inherits <db:link xlink:href="qml-qt3d-core-boundingvolume.xml">BoundingVolume</db:link> and thus supports reading implicit bounds or setting explicit bounds also.</db:para>
</db:note>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="implicitMaxPoint-prop">
<db:title>[read-only] implicitMaxPoint : const QVector3D</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVector3D</db:type>
<db:varname>implicitMaxPoint</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">implicitMaxPoint</db:synopsisinfo>
<db:synopsisinfo role="notifier">implicitMaxPointChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>* * * Holds maximum extent of the bounding volume computed from the specified view.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> <db:emphasis role="bold">implicitMaxPoint</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">implicitMaxPointChanged</db:emphasis>(const <db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> &amp;<db:emphasis>implicitMaxPoint</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="implicitMinPoint-prop">
<db:title>[read-only] implicitMinPoint : const QVector3D</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVector3D</db:type>
<db:varname>implicitMinPoint</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">implicitMinPoint</db:synopsisinfo>
<db:synopsisinfo role="notifier">implicitMinPointChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>* * * Holds minimum extent of the bounding volume computed from the specified view.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> <db:emphasis role="bold">implicitMinPoint</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">implicitMinPointChanged</db:emphasis>(const <db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> &amp;<db:emphasis>implicitMinPoint</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="implicitPointsValid-prop">
<db:title>[read-only] implicitPointsValid : const bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>implicitPointsValid</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">areImplicitPointsValid</db:synopsisinfo>
<db:synopsisinfo role="notifier">implicitPointsValidChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>* * * True if a view has been assigned and the implicit extent properties are up to date. * *</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">areImplicitPointsValid</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">implicitPointsValidChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>implicitPointsValid</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3dcore-qboundingvolume.xml#updateImplicitBounds">updateImplicitBounds</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="maxPoint-prop">
<db:title>maxPoint : QVector3D</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVector3D</db:type>
<db:varname>maxPoint</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">maxPoint</db:synopsisinfo>
<db:synopsisinfo role="setter">setMaxPoint</db:synopsisinfo>
<db:synopsisinfo role="notifier">maxPointChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>* * * User specified maximum extent of the bounding volume. When set (along with minimum * extent), this will be used internally to avoid computing the volume from the * geometry.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> <db:emphasis role="bold">maxPoint</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMaxPoint</db:emphasis>(const <db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> &amp;<db:emphasis>maxPoint</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">maxPointChanged</db:emphasis>(<db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> <db:emphasis>maxPoint</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="minPoint-prop">
<db:title>minPoint : QVector3D</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVector3D</db:type>
<db:varname>minPoint</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">minPoint</db:synopsisinfo>
<db:synopsisinfo role="setter">setMinPoint</db:synopsisinfo>
<db:synopsisinfo role="notifier">minPointChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>* * * User specified minimum extent of the bounding volume. When set (along with maximum * extent), this will be used internally to avoid computing the volume from the * geometry.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> <db:emphasis role="bold">minPoint</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinPoint</db:emphasis>(const <db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> &amp;<db:emphasis>minPoint</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">minPointChanged</db:emphasis>(<db:type><db:link xlink:href="qvector3d.xml">QVector3D</db:link></db:type> <db:emphasis>minPoint</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="view-prop">
<db:title>view : QGeometryView*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QGeometryView*</db:type>
<db:varname>view</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">view</db:synopsisinfo>
<db:synopsisinfo role="setter">setView</db:synopsisinfo>
<db:synopsisinfo role="notifier">viewChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>* * * Holds a pointer to the instance of <db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link> which will be used, if set, * to compute the bounding volume.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qgeometryview.xml">Qt3DCore::QGeometryView</db:link></db:type> *<db:emphasis role="bold">view</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setView</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qgeometryview.xml">Qt3DCore::QGeometryView</db:link></db:type> *<db:emphasis>view</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">viewChanged</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qgeometryview.xml">Qt3DCore::QGeometryView</db:link></db:type> *<db:emphasis>view</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QBoundingVolume">
<db:title>[explicit] QBoundingVolume::QBoundingVolume(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QBoundingVolume</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QNode *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QBoundingVolume(Qt3DCore::QNode *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qt3dcore-qboundingvolume.xml">QBoundingVolume</db:link> with <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="updateImplicitBounds">
<db:title>bool QBoundingVolume::updateImplicitBounds()</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>updateImplicitBounds</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool updateImplicitBounds()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>* Updates the implicit bounds of the specified view. Returns * <db:code>true</db:code> if the computation succeeded and false otherwise. * *</db:para>
<db:note>
<db:para>The calculations are done in the call thread, this * could take significant time for large meshes.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
