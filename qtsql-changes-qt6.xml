<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Changes to Qt SQL</db:title>
<db:productname>QtSql</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt SQL Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Migrate Qt SQL to Qt 6.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt 6 is a result of the conscious effort to make the framework more efficient and easy to use.</db:para>
<db:para>We try to maintain binary and source compatibility for all the public APIs in each release. But some changes were inevitable in an effort to make Qt a better framework.</db:para>
<db:para>In this topic we summarize those changes in Qt SQL, and provide guidance to handle them.</db:para>
<db:section xml:id="the-qsqlquery-class">
<db:title>The QSqlQuery class</db:title>
<db:section xml:id="boundvalues-signature">
<db:title>boundValues() Signature</db:title>
<db:para>The return type for boundValues() has been changed from <db:link xlink:href="qmap.xml">QMap</db:link>&lt;<db:link xlink:href="qstring.xml">QString</db:link>, <db:link xlink:href="qvariant.xml">QVariant</db:link>&gt; to a <db:link xlink:href="qvariant.xml#QVariantList-typedef">QVariantList</db:link>. The order can be relied upon so it will be in the order of the binding in the prepared query. Change code like the following:</db:para>
<db:programlisting language="cpp">QMap&amp;lt;QString, QVariant&amp;gt; values = boundValues();
int id = values[&quot;:id&quot;].value().toInt();
</db:programlisting>
<db:programlisting language="cpp">QList&amp;lt;QVariant&amp;gt; values = boundValues().values();
int id = values.at(0).toInt();
</db:programlisting>
<db:para>to:</db:para>
<db:programlisting language="cpp">QList&amp;lt;QVariant&amp;gt; values = boundValues().values();
int id = values.at(0).toInt();
</db:programlisting>
</db:section>
</db:section>
</db:article>
