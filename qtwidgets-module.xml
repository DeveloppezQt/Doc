<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Widgets C++ Classes</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Qt Widgets module extends Qt GUI with C++ widget functionality.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt Widgets module extends Qt GUI with C++ widget functionality.</db:para>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="qabstractbutton.xml" xlink:role="class">QAbstractButton</db:link></db:term>
<db:listitem>
<db:para>The QAbstractButton class is the abstract base class of button widgets, providing functionality common to buttons.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractgraphicsshapeitem.xml" xlink:role="class">QAbstractGraphicsShapeItem</db:link></db:term>
<db:listitem>
<db:para>The QAbstractGraphicsShapeItem class provides a common base for all path items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractitemdelegate.xml" xlink:role="class">QAbstractItemDelegate</db:link></db:term>
<db:listitem>
<db:para>The QAbstractItemDelegate class is used to display and edit data items from a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractitemview.xml" xlink:role="class">QAbstractItemView</db:link></db:term>
<db:listitem>
<db:para>The QAbstractItemView class provides the basic functionality for item view classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractscrollarea.xml" xlink:role="class">QAbstractScrollArea</db:link></db:term>
<db:listitem>
<db:para>The QAbstractScrollArea widget provides a scrolling area with on-demand scroll bars.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractslider.xml" xlink:role="class">QAbstractSlider</db:link></db:term>
<db:listitem>
<db:para>The QAbstractSlider class provides an integer value within a range.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractspinbox.xml" xlink:role="class">QAbstractSpinBox</db:link></db:term>
<db:listitem>
<db:para>The QAbstractSpinBox class provides a spinbox and a line edit to display values.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qaccessiblewidget.xml" xlink:role="class">QAccessibleWidget</db:link></db:term>
<db:listitem>
<db:para>The QAccessibleWidget class implements the QAccessibleInterface for QWidgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qapplication.xml" xlink:role="class">QApplication</db:link></db:term>
<db:listitem>
<db:para>The QApplication class manages the GUI application's control flow and main settings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qboxlayout.xml" xlink:role="class">QBoxLayout</db:link></db:term>
<db:listitem>
<db:para>The QBoxLayout class lines up child widgets horizontally or vertically.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbuttongroup.xml" xlink:role="class">QButtonGroup</db:link></db:term>
<db:listitem>
<db:para>The QButtonGroup class provides a container to organize groups of button widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcalendarwidget.xml" xlink:role="class">QCalendarWidget</db:link></db:term>
<db:listitem>
<db:para>The QCalendarWidget class provides a monthly based calendar widget allowing the user to select a date.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcheckbox.xml" xlink:role="class">QCheckBox</db:link></db:term>
<db:listitem>
<db:para>The QCheckBox widget provides a checkbox with a text label.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcolordialog.xml" xlink:role="class">QColorDialog</db:link></db:term>
<db:listitem>
<db:para>The QColorDialog class provides a dialog widget for specifying colors.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcolormap.xml" xlink:role="class">QColormap</db:link></db:term>
<db:listitem>
<db:para>The QColormap class maps device independent QColors to device dependent pixel values.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcolumnview.xml" xlink:role="class">QColumnView</db:link></db:term>
<db:listitem>
<db:para>The QColumnView class provides a model/view implementation of a column view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcombobox.xml" xlink:role="class">QComboBox</db:link></db:term>
<db:listitem>
<db:para>The QComboBox widget combines a button with a dropdown list.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcommandlinkbutton.xml" xlink:role="class">QCommandLinkButton</db:link></db:term>
<db:listitem>
<db:para>The QCommandLinkButton widget provides a Vista style command link button.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcommonstyle.xml" xlink:role="class">QCommonStyle</db:link></db:term>
<db:listitem>
<db:para>The QCommonStyle class encapsulates the common Look and Feel of a GUI.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qcompleter.xml" xlink:role="class">QCompleter</db:link></db:term>
<db:listitem>
<db:para>The QCompleter class provides completions based on an item model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdatawidgetmapper.xml" xlink:role="class">QDataWidgetMapper</db:link></db:term>
<db:listitem>
<db:para>The QDataWidgetMapper class provides mapping between a section of a data model to widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdateedit.xml" xlink:role="class">QDateEdit</db:link></db:term>
<db:listitem>
<db:para>The QDateEdit class provides a widget for editing dates based on the QDateTimeEdit widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdatetimeedit.xml" xlink:role="class">QDateTimeEdit</db:link></db:term>
<db:listitem>
<db:para>The QDateTimeEdit class provides a widget for editing dates and times.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdial.xml" xlink:role="class">QDial</db:link></db:term>
<db:listitem>
<db:para>The QDial class provides a rounded range control (like a speedometer or potentiometer).</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdialog.xml" xlink:role="class">QDialog</db:link></db:term>
<db:listitem>
<db:para>The QDialog class is the base class of dialog windows.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdialogbuttonbox.xml" xlink:role="class">QDialogButtonBox</db:link></db:term>
<db:listitem>
<db:para>The QDialogButtonBox class is a widget that presents buttons in a layout that is appropriate to the current widget style.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdockwidget.xml" xlink:role="class">QDockWidget</db:link></db:term>
<db:listitem>
<db:para>The QDockWidget class provides a widget that can be docked inside a QMainWindow or floated as a top-level window on the desktop.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdoublespinbox.xml" xlink:role="class">QDoubleSpinBox</db:link></db:term>
<db:listitem>
<db:para>The QDoubleSpinBox class provides a spin box widget that takes doubles.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qerrormessage.xml" xlink:role="class">QErrorMessage</db:link></db:term>
<db:listitem>
<db:para>The QErrorMessage class provides an error message display dialog.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfiledialog.xml" xlink:role="class">QFileDialog</db:link></db:term>
<db:listitem>
<db:para>The QFileDialog class provides a dialog that allows users to select files or directories.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfileiconprovider.xml" xlink:role="class">QFileIconProvider</db:link></db:term>
<db:listitem>
<db:para>The QFileIconProvider class provides file icons for the QFileSystemModel class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfocusframe.xml" xlink:role="class">QFocusFrame</db:link></db:term>
<db:listitem>
<db:para>The QFocusFrame widget provides a focus frame which can be outside of a widget's normal paintable area.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfontcombobox.xml" xlink:role="class">QFontComboBox</db:link></db:term>
<db:listitem>
<db:para>The QFontComboBox widget is a combobox that lets the user select a font family.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qfontdialog.xml" xlink:role="class">QFontDialog</db:link></db:term>
<db:listitem>
<db:para>The QFontDialog class provides a dialog widget for selecting a font.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qformlayout.xml" xlink:role="class">QFormLayout</db:link></db:term>
<db:listitem>
<db:para>The QFormLayout class manages forms of input widgets and their associated labels.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qformlayout-takerowresult.xml" xlink:role="class">QFormLayout::TakeRowResult</db:link></db:term>
<db:listitem>
<db:para>Contains the result of a QFormLayout::takeRow() call.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qframe.xml" xlink:role="class">QFrame</db:link></db:term>
<db:listitem>
<db:para>The QFrame class is the base class of widgets that can have a frame.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgesture.xml" xlink:role="class">QGesture</db:link></db:term>
<db:listitem>
<db:para>The QGesture class represents a gesture, containing properties that describe the corresponding user input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgestureevent.xml" xlink:role="class">QGestureEvent</db:link></db:term>
<db:listitem>
<db:para>The QGestureEvent class provides the description of triggered gestures.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgesturerecognizer.xml" xlink:role="class">QGestureRecognizer</db:link></db:term>
<db:listitem>
<db:para>The QGestureRecognizer class provides the infrastructure for gesture recognition.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsanchor.xml" xlink:role="class">QGraphicsAnchor</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsAnchor class represents an anchor between two items in a QGraphicsAnchorLayout.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsanchorlayout.xml" xlink:role="class">QGraphicsAnchorLayout</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsAnchorLayout class provides a layout where one can anchor widgets together in Graphics View.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsblureffect.xml" xlink:role="class">QGraphicsBlurEffect</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsBlurEffect class provides a blur effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicscolorizeeffect.xml" xlink:role="class">QGraphicsColorizeEffect</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsColorizeEffect class provides a colorize effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsdropshadoweffect.xml" xlink:role="class">QGraphicsDropShadowEffect</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsDropShadowEffect class provides a drop shadow effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicseffect.xml" xlink:role="class">QGraphicsEffect</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsEffect class is the base class for all graphics effects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsellipseitem.xml" xlink:role="class">QGraphicsEllipseItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsEllipseItem class provides an ellipse item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsgridlayout.xml" xlink:role="class">QGraphicsGridLayout</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsGridLayout class provides a grid layout for managing widgets in Graphics View.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsitem.xml" xlink:role="class">QGraphicsItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsItem class is the base class for all graphical items in a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsitemgroup.xml" xlink:role="class">QGraphicsItemGroup</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsItemGroup class provides a container that treats a group of items as a single item.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicslayout.xml" xlink:role="class">QGraphicsLayout</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsLayout class provides the base class for all layouts in Graphics View.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicslayoutitem.xml" xlink:role="class">QGraphicsLayoutItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsLayoutItem class can be inherited to allow your custom items to be managed by layouts.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicslineitem.xml" xlink:role="class">QGraphicsLineItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsLineItem class provides a line item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicslinearlayout.xml" xlink:role="class">QGraphicsLinearLayout</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsLinearLayout class provides a horizontal or vertical layout for managing widgets in Graphics View.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsobject.xml" xlink:role="class">QGraphicsObject</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsObject class provides a base class for all graphics items that require signals, slots and properties.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsopacityeffect.xml" xlink:role="class">QGraphicsOpacityEffect</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsOpacityEffect class provides an opacity effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicspathitem.xml" xlink:role="class">QGraphicsPathItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsPathItem class provides a path item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicspixmapitem.xml" xlink:role="class">QGraphicsPixmapItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsPixmapItem class provides a pixmap item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicspolygonitem.xml" xlink:role="class">QGraphicsPolygonItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsPolygonItem class provides a polygon item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsproxywidget.xml" xlink:role="class">QGraphicsProxyWidget</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsProxyWidget class provides a proxy layer for embedding a QWidget in a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsrectitem.xml" xlink:role="class">QGraphicsRectItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsRectItem class provides a rectangle item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsrotation.xml" xlink:role="class">QGraphicsRotation</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsRotation class provides a rotation transformation around a given axis.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscale.xml" xlink:role="class">QGraphicsScale</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsScale class provides a scale transformation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscene.xml" xlink:role="class">QGraphicsScene</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsScene class provides a surface for managing a large number of 2D graphical items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenecontextmenuevent.xml" xlink:role="class">QGraphicsSceneContextMenuEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneContextMenuEvent class provides context menu events in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenedragdropevent.xml" xlink:role="class">QGraphicsSceneDragDropEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneDragDropEvent class provides events for drag and drop in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicssceneevent.xml" xlink:role="class">QGraphicsSceneEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneEvent class provides a base class for all graphics view related events.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenehelpevent.xml" xlink:role="class">QGraphicsSceneHelpEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneHelpEvent class provides events when a tooltip is requested.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenehoverevent.xml" xlink:role="class">QGraphicsSceneHoverEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneHoverEvent class provides hover events in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenemouseevent.xml" xlink:role="class">QGraphicsSceneMouseEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneMouseEvent class provides mouse events in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenemoveevent.xml" xlink:role="class">QGraphicsSceneMoveEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneMoveEvent class provides events for widget moving in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicssceneresizeevent.xml" xlink:role="class">QGraphicsSceneResizeEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneResizeEvent class provides events for widget resizing in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsscenewheelevent.xml" xlink:role="class">QGraphicsSceneWheelEvent</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSceneWheelEvent class provides wheel events in the graphics view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicssimpletextitem.xml" xlink:role="class">QGraphicsSimpleTextItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsSimpleTextItem class provides a simple text path item that you can add to a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicstextitem.xml" xlink:role="class">QGraphicsTextItem</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsTextItem class provides a text item that you can add to a QGraphicsScene to display formatted text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicstransform.xml" xlink:role="class">QGraphicsTransform</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsTransform class is an abstract base class for building advanced transformations on QGraphicsItems.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicsview.xml" xlink:role="class">QGraphicsView</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsView class provides a widget for displaying the contents of a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgraphicswidget.xml" xlink:role="class">QGraphicsWidget</db:link></db:term>
<db:listitem>
<db:para>The QGraphicsWidget class is the base class for all widget items in a QGraphicsScene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgridlayout.xml" xlink:role="class">QGridLayout</db:link></db:term>
<db:listitem>
<db:para>The QGridLayout class lays out widgets in a grid.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qgroupbox.xml" xlink:role="class">QGroupBox</db:link></db:term>
<db:listitem>
<db:para>The QGroupBox widget provides a group box frame with a title.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qhboxlayout.xml" xlink:role="class">QHBoxLayout</db:link></db:term>
<db:listitem>
<db:para>The QHBoxLayout class lines up widgets horizontally.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qheaderview.xml" xlink:role="class">QHeaderView</db:link></db:term>
<db:listitem>
<db:para>The QHeaderView class provides a header row or header column for item views.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qinputdialog.xml" xlink:role="class">QInputDialog</db:link></db:term>
<db:listitem>
<db:para>The QInputDialog class provides a simple convenience dialog to get a single value from the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemdelegate.xml" xlink:role="class">QItemDelegate</db:link></db:term>
<db:listitem>
<db:para>The QItemDelegate class provides display and editing facilities for data items from a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemeditorcreator.xml" xlink:role="class">QItemEditorCreator</db:link></db:term>
<db:listitem>
<db:para>The QItemEditorCreator class makes it possible to create item editor creator bases without subclassing QItemEditorCreatorBase.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemeditorcreatorbase.xml" xlink:role="class">QItemEditorCreatorBase</db:link></db:term>
<db:listitem>
<db:para>The QItemEditorCreatorBase class provides an abstract base class that must be subclassed when implementing new item editor creators.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qitemeditorfactory.xml" xlink:role="class">QItemEditorFactory</db:link></db:term>
<db:listitem>
<db:para>The QItemEditorFactory class provides widgets for editing item data in views and delegates.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qkeysequenceedit.xml" xlink:role="class">QKeySequenceEdit</db:link></db:term>
<db:listitem>
<db:para>The QKeySequenceEdit widget allows to input a QKeySequence.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlcdnumber.xml" xlink:role="class">QLCDNumber</db:link></db:term>
<db:listitem>
<db:para>The QLCDNumber widget displays a number with LCD-like digits.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlabel.xml" xlink:role="class">QLabel</db:link></db:term>
<db:listitem>
<db:para>The QLabel widget provides a text or image display.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlayout.xml" xlink:role="class">QLayout</db:link></db:term>
<db:listitem>
<db:para>The QLayout class is the base class of geometry managers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlayoutitem.xml" xlink:role="class">QLayoutItem</db:link></db:term>
<db:listitem>
<db:para>The QLayoutItem class provides an abstract item that a QLayout manipulates.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlineedit.xml" xlink:role="class">QLineEdit</db:link></db:term>
<db:listitem>
<db:para>The QLineEdit widget is a one-line text editor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlistview.xml" xlink:role="class">QListView</db:link></db:term>
<db:listitem>
<db:para>The QListView class provides a list or icon view onto a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlistwidget.xml" xlink:role="class">QListWidget</db:link></db:term>
<db:listitem>
<db:para>The QListWidget class provides an item-based list widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qlistwidgetitem.xml" xlink:role="class">QListWidgetItem</db:link></db:term>
<db:listitem>
<db:para>The QListWidgetItem class provides an item for use with the QListWidget item view class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmainwindow.xml" xlink:role="class">QMainWindow</db:link></db:term>
<db:listitem>
<db:para>The QMainWindow class provides a main application window.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmdiarea.xml" xlink:role="class">QMdiArea</db:link></db:term>
<db:listitem>
<db:para>The QMdiArea widget provides an area in which MDI windows are displayed.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmdisubwindow.xml" xlink:role="class">QMdiSubWindow</db:link></db:term>
<db:listitem>
<db:para>The QMdiSubWindow class provides a subwindow class for QMdiArea.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmenu.xml" xlink:role="class">QMenu</db:link></db:term>
<db:listitem>
<db:para>The QMenu class provides a menu widget for use in menu bars, context menus, and other popup menus.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmenubar.xml" xlink:role="class">QMenuBar</db:link></db:term>
<db:listitem>
<db:para>The QMenuBar class provides a horizontal menu bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qmessagebox.xml" xlink:role="class">QMessageBox</db:link></db:term>
<db:listitem>
<db:para>The QMessageBox class provides a modal dialog for informing the user or for asking the user a question and receiving an answer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpangesture.xml" xlink:role="class">QPanGesture</db:link></db:term>
<db:listitem>
<db:para>The QPanGesture class describes a panning gesture made by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpinchgesture.xml" xlink:role="class">QPinchGesture</db:link></db:term>
<db:listitem>
<db:para>The QPinchGesture class describes a pinch gesture made by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaintextdocumentlayout.xml" xlink:role="class">QPlainTextDocumentLayout</db:link></db:term>
<db:listitem>
<db:para>The QPlainTextDocumentLayout class implements a plain text layout for QTextDocument.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qplaintextedit.xml" xlink:role="class">QPlainTextEdit</db:link></db:term>
<db:listitem>
<db:para>The QPlainTextEdit class provides a widget that is used to edit and display plain text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprogressbar.xml" xlink:role="class">QProgressBar</db:link></db:term>
<db:listitem>
<db:para>The QProgressBar widget provides a horizontal or vertical progress bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qprogressdialog.xml" xlink:role="class">QProgressDialog</db:link></db:term>
<db:listitem>
<db:para>The QProgressDialog class provides feedback on the progress of a slow operation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qproxystyle.xml" xlink:role="class">QProxyStyle</db:link></db:term>
<db:listitem>
<db:para>The QProxyStyle class is a convenience class that simplifies dynamically overriding QStyle elements.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpushbutton.xml" xlink:role="class">QPushButton</db:link></db:term>
<db:listitem>
<db:para>The QPushButton widget provides a command button.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qradiobutton.xml" xlink:role="class">QRadioButton</db:link></db:term>
<db:listitem>
<db:para>The QRadioButton widget provides a radio button with a text label.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrubberband.xml" xlink:role="class">QRubberBand</db:link></db:term>
<db:listitem>
<db:para>The QRubberBand class provides a rectangle or line that can indicate a selection or a boundary.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscrollarea.xml" xlink:role="class">QScrollArea</db:link></db:term>
<db:listitem>
<db:para>The QScrollArea class provides a scrolling view onto another widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscrollbar.xml" xlink:role="class">QScrollBar</db:link></db:term>
<db:listitem>
<db:para>The QScrollBar widget provides a vertical or horizontal scroll bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscroller.xml" xlink:role="class">QScroller</db:link></db:term>
<db:listitem>
<db:para>The QScroller class enables kinetic scrolling for any scrolling widget or graphics item.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscrollerproperties.xml" xlink:role="class">QScrollerProperties</db:link></db:term>
<db:listitem>
<db:para>The QScrollerProperties class stores the settings for a QScroller.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsizegrip.xml" xlink:role="class">QSizeGrip</db:link></db:term>
<db:listitem>
<db:para>The QSizeGrip class provides a resize handle for resizing top-level windows.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsizepolicy.xml" xlink:role="class">QSizePolicy</db:link></db:term>
<db:listitem>
<db:para>The QSizePolicy class is a layout attribute describing horizontal and vertical resizing policy.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qslider.xml" xlink:role="class">QSlider</db:link></db:term>
<db:listitem>
<db:para>The QSlider widget provides a vertical or horizontal slider.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qspaceritem.xml" xlink:role="class">QSpacerItem</db:link></db:term>
<db:listitem>
<db:para>The QSpacerItem class provides blank space in a layout.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qspinbox.xml" xlink:role="class">QSpinBox</db:link></db:term>
<db:listitem>
<db:para>The QSpinBox class provides a spin box widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsplashscreen.xml" xlink:role="class">QSplashScreen</db:link></db:term>
<db:listitem>
<db:para>The QSplashScreen widget provides a splash screen that can be shown during application startup.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsplitter.xml" xlink:role="class">QSplitter</db:link></db:term>
<db:listitem>
<db:para>The QSplitter class implements a splitter widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsplitterhandle.xml" xlink:role="class">QSplitterHandle</db:link></db:term>
<db:listitem>
<db:para>The QSplitterHandle class provides handle functionality for the splitter.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstackedlayout.xml" xlink:role="class">QStackedLayout</db:link></db:term>
<db:listitem>
<db:para>The QStackedLayout class provides a stack of widgets where only one widget is visible at a time.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstackedwidget.xml" xlink:role="class">QStackedWidget</db:link></db:term>
<db:listitem>
<db:para>The QStackedWidget class provides a stack of widgets where only one widget is visible at a time.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstandarditemeditorcreator.xml" xlink:role="class">QStandardItemEditorCreator</db:link></db:term>
<db:listitem>
<db:para>The QStandardItemEditorCreator class provides the possibility to register widgets without having to subclass QItemEditorCreatorBase.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstatusbar.xml" xlink:role="class">QStatusBar</db:link></db:term>
<db:listitem>
<db:para>The QStatusBar class provides a horizontal bar suitable for presenting status information.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyle.xml" xlink:role="class">QStyle</db:link></db:term>
<db:listitem>
<db:para>The QStyle class is an abstract base class that encapsulates the look and feel of a GUI.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstylefactory.xml" xlink:role="class">QStyleFactory</db:link></db:term>
<db:listitem>
<db:para>The QStyleFactory class creates QStyle objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstylehintreturn.xml" xlink:role="class">QStyleHintReturn</db:link></db:term>
<db:listitem>
<db:para>The QStyleHintReturn class provides style hints that return more than basic data types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstylehintreturnmask.xml" xlink:role="class">QStyleHintReturnMask</db:link></db:term>
<db:listitem>
<db:para>The QStyleHintReturnMask class provides style hints that return a QRegion.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstylehintreturnvariant.xml" xlink:role="class">QStyleHintReturnVariant</db:link></db:term>
<db:listitem>
<db:para>The QStyleHintReturnVariant class provides style hints that return a QVariant.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoption.xml" xlink:role="class">QStyleOption</db:link></db:term>
<db:listitem>
<db:para>The QStyleOption class stores the parameters used by QStyle functions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionbutton.xml" xlink:role="class">QStyleOptionButton</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionButton class is used to describe the parameters for drawing buttons.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptioncombobox.xml" xlink:role="class">QStyleOptionComboBox</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionComboBox class is used to describe the parameter for drawing a combobox.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptioncomplex.xml" xlink:role="class">QStyleOptionComplex</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionComplex class is used to hold parameters that are common to all complex controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiondockwidget.xml" xlink:role="class">QStyleOptionDockWidget</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionDockWidget class is used to describe the parameters for drawing a dock widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionfocusrect.xml" xlink:role="class">QStyleOptionFocusRect</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionFocusRect class is used to describe the parameters for drawing a focus rectangle with QStyle.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionframe.xml" xlink:role="class">QStyleOptionFrame</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionFrame class is used to describe the parameters for drawing a frame.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiongraphicsitem.xml" xlink:role="class">QStyleOptionGraphicsItem</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionGraphicsItem class is used to describe the parameters needed to draw a QGraphicsItem.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiongroupbox.xml" xlink:role="class">QStyleOptionGroupBox</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionGroupBox class describes the parameters for drawing a group box.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionheader.xml" xlink:role="class">QStyleOptionHeader</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionHeader class is used to describe the parameters for drawing a header.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionheaderv2.xml" xlink:role="class">QStyleOptionHeaderV2</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionHeaderV2 class is used to describe the parameters for drawing a header.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionmenuitem.xml" xlink:role="class">QStyleOptionMenuItem</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionMenuItem class is used to describe the parameter necessary for drawing a menu item.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionprogressbar.xml" xlink:role="class">QStyleOptionProgressBar</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionProgressBar class is used to describe the parameters necessary for drawing a progress bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionrubberband.xml" xlink:role="class">QStyleOptionRubberBand</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionRubberBand class is used to describe the parameters needed for drawing a rubber band.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionsizegrip.xml" xlink:role="class">QStyleOptionSizeGrip</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionSizeGrip class is used to describe the parameter for drawing a size grip.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionslider.xml" xlink:role="class">QStyleOptionSlider</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionSlider class is used to describe the parameters needed for drawing a slider.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionspinbox.xml" xlink:role="class">QStyleOptionSpinBox</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionSpinBox class is used to describe the parameters necessary for drawing a spin box.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontab.xml" xlink:role="class">QStyleOptionTab</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionTab class is used to describe the parameters for drawing a tab bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontabbarbase.xml" xlink:role="class">QStyleOptionTabBarBase</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionTabBarBase class is used to describe the base of a tab bar, i.e. the part that the tab bar usually overlaps with.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontabwidgetframe.xml" xlink:role="class">QStyleOptionTabWidgetFrame</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionTabWidgetFrame class is used to describe the parameters for drawing the frame around a tab widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontitlebar.xml" xlink:role="class">QStyleOptionTitleBar</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionTitleBar class is used to describe the parameters for drawing a title bar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontoolbar.xml" xlink:role="class">QStyleOptionToolBar</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionToolBar class is used to describe the parameters for drawing a toolbar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontoolbox.xml" xlink:role="class">QStyleOptionToolBox</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionToolBox class is used to describe the parameters needed for drawing a tool box.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptiontoolbutton.xml" xlink:role="class">QStyleOptionToolButton</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionToolButton class is used to describe the parameters for drawing a tool button.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleoptionviewitem.xml" xlink:role="class">QStyleOptionViewItem</db:link></db:term>
<db:listitem>
<db:para>The QStyleOptionViewItem class is used to describe the parameters used to draw an item in a view widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstylepainter.xml" xlink:role="class">QStylePainter</db:link></db:term>
<db:listitem>
<db:para>The QStylePainter class is a convenience class for drawing QStyle elements inside a widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleplugin.xml" xlink:role="class">QStylePlugin</db:link></db:term>
<db:listitem>
<db:para>The QStylePlugin class provides an abstract base for custom QStyle plugins.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstyleditemdelegate.xml" xlink:role="class">QStyledItemDelegate</db:link></db:term>
<db:listitem>
<db:para>The QStyledItemDelegate class provides display and editing facilities for data items from a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qswipegesture.xml" xlink:role="class">QSwipeGesture</db:link></db:term>
<db:listitem>
<db:para>The QSwipeGesture class describes a swipe gesture made by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsystemtrayicon.xml" xlink:role="class">QSystemTrayIcon</db:link></db:term>
<db:listitem>
<db:para>The QSystemTrayIcon class provides an icon for an application in the system tray.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtabbar.xml" xlink:role="class">QTabBar</db:link></db:term>
<db:listitem>
<db:para>The QTabBar class provides a tab bar, e.g. for use in tabbed dialogs.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtabwidget.xml" xlink:role="class">QTabWidget</db:link></db:term>
<db:listitem>
<db:para>The QTabWidget class provides a stack of tabbed widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtableview.xml" xlink:role="class">QTableView</db:link></db:term>
<db:listitem>
<db:para>The QTableView class provides a default model/view implementation of a table view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtablewidget.xml" xlink:role="class">QTableWidget</db:link></db:term>
<db:listitem>
<db:para>The QTableWidget class provides an item-based table view with a default model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtablewidgetitem.xml" xlink:role="class">QTableWidgetItem</db:link></db:term>
<db:listitem>
<db:para>The QTableWidgetItem class provides an item for use with the QTableWidget class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtablewidgetselectionrange.xml" xlink:role="class">QTableWidgetSelectionRange</db:link></db:term>
<db:listitem>
<db:para>The QTableWidgetSelectionRange class provides a way to interact with selection in a model without using model indexes and a selection model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtapandholdgesture.xml" xlink:role="class">QTapAndHoldGesture</db:link></db:term>
<db:listitem>
<db:para>The QTapAndHoldGesture class describes a tap-and-hold (aka LongTap) gesture made by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtapgesture.xml" xlink:role="class">QTapGesture</db:link></db:term>
<db:listitem>
<db:para>The QTapGesture class describes a tap gesture made by the user.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextbrowser.xml" xlink:role="class">QTextBrowser</db:link></db:term>
<db:listitem>
<db:para>The QTextBrowser class provides a rich text browser with hypertext navigation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextedit.xml" xlink:role="class">QTextEdit</db:link></db:term>
<db:listitem>
<db:para>The QTextEdit class provides a widget that is used to edit and display both plain and rich text.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtextedit-extraselection.xml" xlink:role="class">QTextEdit::ExtraSelection</db:link></db:term>
<db:listitem>
<db:para>The QTextEdit::ExtraSelection structure provides a way of specifying a character format for a given selection in a document.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtilerules.xml" xlink:role="class">QTileRules</db:link></db:term>
<db:listitem>
<db:para>The QTileRules class provides the rules used to draw a pixmap or image split into nine segments.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimeedit.xml" xlink:role="class">QTimeEdit</db:link></db:term>
<db:listitem>
<db:para>The QTimeEdit class provides a widget for editing times based on the QDateTimeEdit widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtoolbar.xml" xlink:role="class">QToolBar</db:link></db:term>
<db:listitem>
<db:para>The QToolBar class provides a movable panel that contains a set of controls.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtoolbox.xml" xlink:role="class">QToolBox</db:link></db:term>
<db:listitem>
<db:para>The QToolBox class provides a column of tabbed widget items.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtoolbutton.xml" xlink:role="class">QToolButton</db:link></db:term>
<db:listitem>
<db:para>The QToolButton class provides a quick-access button to commands or options, usually used inside a QToolBar.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtooltip.xml" xlink:role="class">QToolTip</db:link></db:term>
<db:listitem>
<db:para>The QToolTip class provides tool tips (balloon help) for any widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtreeview.xml" xlink:role="class">QTreeView</db:link></db:term>
<db:listitem>
<db:para>The QTreeView class provides a default model/view implementation of a tree view.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtreewidget.xml" xlink:role="class">QTreeWidget</db:link></db:term>
<db:listitem>
<db:para>The QTreeWidget class provides a tree view that uses a predefined tree model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtreewidgetitem.xml" xlink:role="class">QTreeWidgetItem</db:link></db:term>
<db:listitem>
<db:para>The QTreeWidgetItem class provides an item for use with the QTreeWidget convenience class.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtreewidgetitemiterator.xml" xlink:role="class">QTreeWidgetItemIterator</db:link></db:term>
<db:listitem>
<db:para>The QTreeWidgetItemIterator class provides a way to iterate over the items in a QTreeWidget instance.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qundoview.xml" xlink:role="class">QUndoView</db:link></db:term>
<db:listitem>
<db:para>The QUndoView class displays the contents of a QUndoStack.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qvboxlayout.xml" xlink:role="class">QVBoxLayout</db:link></db:term>
<db:listitem>
<db:para>The QVBoxLayout class lines up widgets vertically.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwhatsthis.xml" xlink:role="class">QWhatsThis</db:link></db:term>
<db:listitem>
<db:para>The QWhatsThis class provides a simple description of any widget, i.e. answering the question &quot;What's This?&quot;.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwidget.xml" xlink:role="class">QWidget</db:link></db:term>
<db:listitem>
<db:para>The QWidget class is the base class of all user interface objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwidgetaction.xml" xlink:role="class">QWidgetAction</db:link></db:term>
<db:listitem>
<db:para>The QWidgetAction class extends QAction by an interface for inserting custom widgets into action based containers, such as toolbars.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwidgetitem.xml" xlink:role="class">QWidgetItem</db:link></db:term>
<db:listitem>
<db:para>The QWidgetItem class is a layout item that represents a widget.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwizard.xml" xlink:role="class">QWizard</db:link></db:term>
<db:listitem>
<db:para>The QWizard class provides a framework for wizards.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qwizardpage.xml" xlink:role="class">QWizardPage</db:link></db:term>
<db:listitem>
<db:para>The QWizardPage class is the base class for wizard pages.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qtwidgets-index.xml">Qt Widgets</db:link> page contains information about how to use the module.</db:para>
</db:section>
</db:article>
