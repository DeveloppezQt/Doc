<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QTextureMaterial Class</db:title>
<db:subtitle>Qt3DExtras::QTextureMaterial</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qt3dextras-qtexturematerial.xml">QTextureMaterial</db:link> provides a default implementation of a simple unlit texture material.</db:para>
<db:para>This class was introduced in Qt 5.9.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QTextureMaterial</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.9</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3dextras)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3dextras)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dextras</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qmaterial.xml" xlink:role="class">Qt3DRender::QMaterial</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QTextureMaterial is part of <db:simplelist><db:member>qt3d-extras-materials</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This material uses an effect with a single render pass approach. Techniques are provided for OpenGL 2, OpenGL 3 or above as well as OpenGL ES 2.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="alphaBlending-prop">
<db:title>alphaBlending : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>alphaBlending</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isAlphaBlendingEnabled</db:synopsisinfo>
<db:synopsisinfo role="setter">setAlphaBlendingEnabled</db:synopsisinfo>
<db:synopsisinfo role="notifier">alphaBlendingEnabledChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Indicates if the alpha information coming from the diffuse property will be taken into account during rendering. Defaults to false.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isAlphaBlendingEnabled</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setAlphaBlendingEnabled</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">alphaBlendingEnabledChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="texture-prop">
<db:title>texture : Qt3DRender::QAbstractTexture*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DRender::QAbstractTexture*</db:type>
<db:varname>texture</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">texture</db:synopsisinfo>
<db:synopsisinfo role="setter">setTexture</db:synopsisinfo>
<db:synopsisinfo role="notifier">textureChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current texture used by the material.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis role="bold">texture</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTexture</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis>texture</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">textureChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link></db:type> *<db:emphasis>texture</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="textureOffset-prop">
<db:title>textureOffset : QVector2D</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVector2D</db:type>
<db:varname>textureOffset</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">textureOffset</db:synopsisinfo>
<db:synopsisinfo role="setter">setTextureOffset</db:synopsisinfo>
<db:synopsisinfo role="notifier">textureOffsetChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This is a utility property. It sets the translation component of the general texture transform matrix</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvector2d.xml">QVector2D</db:link></db:type> <db:emphasis role="bold">textureOffset</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTextureOffset</db:emphasis>(<db:type><db:link xlink:href="qvector2d.xml">QVector2D</db:link></db:type> <db:emphasis>textureOffset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">textureOffsetChanged</db:emphasis>(<db:type><db:link xlink:href="qvector2d.xml">QVector2D</db:link></db:type> <db:emphasis>textureOffset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="textureTransform-prop">
<db:title>textureTransform : QMatrix3x3</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QMatrix3x3</db:type>
<db:varname>textureTransform</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">textureTransform</db:synopsisinfo>
<db:synopsisinfo role="setter">setTextureTransform</db:synopsisinfo>
<db:synopsisinfo role="notifier">textureTransformChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current texture transform. It is applied to texture coordinates at render time. Defaults to identity matrix.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qgenericmatrix.xml#QMatrix3x3-typedef">QMatrix3x3</db:link></db:type> <db:emphasis role="bold">textureTransform</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTextureTransform</db:emphasis>(const <db:type><db:link xlink:href="qgenericmatrix.xml#QMatrix3x3-typedef">QMatrix3x3</db:link></db:type> &amp;<db:emphasis>matrix</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">textureTransformChanged</db:emphasis>(const <db:type><db:link xlink:href="qgenericmatrix.xml#QMatrix3x3-typedef">QMatrix3x3</db:link></db:type> &amp;<db:emphasis>textureTransform</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QTextureMaterial">
<db:title>[explicit] QTextureMaterial::QTextureMaterial(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QTextureMaterial</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QNode *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QTextureMaterial(Qt3DCore::QNode *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qt3dextras-qtexturematerial.xml">QTextureMaterial</db:link> instance with parent object <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QTextureMaterial">
<db:title>[virtual] QTextureMaterial::~QTextureMaterial()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QTextureMaterial</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QTextureMaterial()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the <db:link xlink:href="qt3dextras-qtexturematerial.xml">QTextureMaterial</db:link> instance.</db:para>
</db:section>
</db:section>
</db:article>
