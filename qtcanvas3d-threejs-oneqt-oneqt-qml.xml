<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>One Qt Example</db:title>
<db:productname>QtCanvas3D</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Canvas 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates combining Qt Quick and three.js rendering.</db:para>
<db:para>This documentation was introduced in QtCanvas3D 1.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QtCanvas3D module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.0
import QtCanvas3D 1.0
import QtQuick.Layouts 1.1

Item {
    id: mainview
    width: 1280
    height: 768
    visible: true
    focus: true

    Keys.onPressed: {
        if (event.key === Qt.Key_1) imageCube.state = 'image1';
        else if (event.key === Qt.Key_2) imageCube.state = 'image2';
        else if (event.key === Qt.Key_3) imageCube.state = 'image3';
        else if (event.key === Qt.Key_4) imageCube.state = 'image4';
        else if (event.key === Qt.Key_5) imageCube.state = 'image5';
        else if (event.key === Qt.Key_6) imageCube.state = 'image6';
    }

    ImageCube {
        id: imageCube
        width: 512 * (parent.width / 1280)
        height: 512 * (parent.height / 768)
        anchors.bottom: parent.bottom
        anchors.right: parent.right
        angleOffset: -180 / 8.0
        backgroundColor: &quot;#FCFCFC&quot;
        state: &quot;image6&quot;
        image1: &quot;qrc:/textures/devices.png&quot;
        image2: &quot;qrc:/textures/iot.png&quot;
        image3: &quot;qrc:/textures/embedded.png&quot;
        image4: &quot;qrc:/textures/dataviz.jpg&quot;
        image5: &quot;qrc:/textures/multiscreen.png&quot;
        image6: &quot;qrc:/textures/puzzle-pieces.png&quot;

        onStateChanged: {
            if (imageCube.state == &quot;image1&quot;) {
                page1Button.selected = true;
                page2Button.selected = false;
                page3Button.selected = false;
                page4Button.selected = false;
                page5Button.selected = false;
                page6Button.selected = false;
                info1.visible = true;
                info2.visible = false;
                info4.visible = false;
                info3.visible = false;
                info5.visible = false;
                info6.visible = false;
            } else if (imageCube.state == &quot;image2&quot;) {
                page1Button.selected = false;
                page2Button.selected = true;
                page3Button.selected = false;
                page4Button.selected = false;
                page5Button.selected = false;
                page6Button.selected = false;
                info1.visible = false;
                info2.visible = true;
                info4.visible = false;
                info3.visible = false;
                info5.visible = false;
                info6.visible = false;
            } else if (imageCube.state == &quot;image3&quot;) {
                page1Button.selected = false;
                page2Button.selected = false;
                page3Button.selected = true;
                page4Button.selected = false;
                page5Button.selected = false;
                page6Button.selected = false;
                info1.visible = false;
                info2.visible = false;
                info3.visible = true;
                info4.visible = false;
                info5.visible = false;
                info6.visible = false;
            } else if (imageCube.state == &quot;image4&quot;) {
                page1Button.selected = false;
                page2Button.selected = false;
                page3Button.selected = false;
                page4Button.selected = true;
                page5Button.selected = false;
                page6Button.selected = false;
                info1.visible = false;
                info2.visible = false;
                info3.visible = false;
                info4.visible = true;
                info5.visible = false;
                info6.visible = false;
            } else if (imageCube.state == &quot;image5&quot;) {
                page1Button.selected = false;
                page2Button.selected = false;
                page3Button.selected = false;
                page4Button.selected = false;
                page5Button.selected = true;
                page6Button.selected = false;
                info1.visible = false;
                info2.visible = false;
                info3.visible = false;
                info4.visible = false;
                info5.visible = true;
                info6.visible = false;
            } else if (imageCube.state == &quot;image6&quot;) {
                page1Button.selected = false;
                page2Button.selected = false;
                page3Button.selected = false;
                page4Button.selected = false;
                page5Button.selected = false;
                page6Button.selected = true;
                info1.visible = false;
                info2.visible = false;
                info3.visible = false;
                info4.visible = false;
                info5.visible = false;
                info6.visible = true;
            }
        }
    }

    Rectangle {
        id: menuBar
        anchors.top: parent.top
        width: parent.width
        height: 52
        color: &quot;#ffffff&quot;
        RowLayout {
            spacing: 28

            Image {
                id: qtLogo
                source: &quot;qrc:/textures/qtlogosmall.png&quot;
                Layout.minimumWidth: 133
                Layout.minimumHeight:52
                Layout.preferredWidth: 133
                Layout.preferredHeight: 52
                Layout.maximumWidth: 133
                Layout.maximumHeight: 52
            }

            Navibutton {
                id: page1Button
                text: &quot;Device Creation&quot;
                stateTarget: imageCube
                stateSelect: &quot;image1&quot;
                Layout.minimumHeight:52
                Layout.preferredHeight: 52
                Layout.maximumHeight: 52
            }

            Navibutton {
                id: page2Button
                text: &quot;IoT&quot;
                stateTarget: imageCube
                stateSelect: &quot;image2&quot;
                Layout.minimumHeight:52
                Layout.preferredHeight: 52
                Layout.maximumHeight: 52
            }

            Navibutton {
                id: page3Button
                text: &quot;Rapid Development&quot;
                stateTarget: imageCube
                stateSelect: &quot;image3&quot;
                Layout.minimumHeight:52
                Layout.preferredHeight: 52
                Layout.maximumHeight: 52
            }

            Navibutton {
                id: page4Button
                text: &quot;Modern UX&quot;
                stateTarget: imageCube
                stateSelect: &quot;image4&quot;
                Layout.minimumHeight:52
                Layout.preferredHeight: 52
                Layout.maximumHeight: 52
            }

            Navibutton {
                id: page5Button
                text: &quot;Cross Platform&quot;
                stateTarget: imageCube
                stateSelect: &quot;image5&quot;
                Layout.minimumHeight:52
                Layout.preferredHeight: 52
                Layout.maximumHeight: 52
            }

            Navibutton {
                id: page6Button
                text: &quot;In the Box&quot;
                stateTarget: imageCube
                stateSelect: &quot;image6&quot;
                Layout.minimumHeight:52
                Layout.preferredHeight: 52
                Layout.maximumHeight: 52
            }
        }
    }

    Rectangle {
        id: separator
        anchors.top: menuBar.bottom
        width: parent.width
        height: 4
        color: &quot;#e6e6e6&quot;
    }

    InfoSheet {
        id: info1
        width: parent.width
        anchors.top: separator.bottom
        anchors.left: parent.left
        visible: false
        headingText1: &quot;Easily Create &quot;
        headingText2: &quot;Powerful &amp; Connected Devices&quot;
        text: &quot;We believe modern embedded development must include a cross-platform user&lt;br&gt;&quot;+
              &quot;experience and that your tech strategy should be based on easy creation of&lt;br&gt;&quot;+
              &quot;connected devices and UIs that run anywhere on any embedded platform including&lt;br&gt;&quot;+
              &quot;RTOS – making your and your end users’ life easier. With Qt, you can do this and&lt;br&gt;&quot;+
              &quot;more.&quot;
    }

    InfoSheet {
        id: info2
        visible: false
        width: parent.width
        anchors.top: separator.bottom
        anchors.left: parent.left
        headingText1: &quot;Write &amp; Recycle &quot;
        headingText2: &quot;Internet of Things&quot;
        text: &quot;A key focus for us is to help you get your embedded device to market quickly. You&lt;br&gt;&quot;+
              &quot;can write and recycle Qt application and device UI code to run on all your target&lt;br&gt;&quot;+
              &quot;devices. You can take your applications everywhere: embedded, desktop and mobile&lt;br&gt;&quot;+
              &quot;platforms. Qt lets you future-proof your “things” by making them platform&lt;br&gt;&quot;+
              &quot;independent. Should you want diversity between platforms, like a responsive UI&lt;br&gt;&quot;+
              &quot;design for different screen sizes, this is simple to implement with Qt, as well.&quot;

    }

    InfoSheet {
        id: info3
        visible: false
        width: parent.width
        anchors.top: separator.bottom
        anchors.left: parent.left

        headingText1: &quot;Rapid Embedded &quot;
        headingText2: &quot;Prototyping &amp; Deployment&quot;

        text: &quot;We don’t want you wasting hundreds of man hours just setting up your embedded&lt;br&gt;&quot;+
              &quot;toolchains. Prototyping on a real device can start immediately upon installation with&lt;br&gt;&quot;+
              &quot;our fully pre-configured software stack, Boot to Qt. We provide full embedded&lt;br&gt;&quot;+
              &quot;tooling for direct device deployment, on-device debugging and profiling, and the&lt;br&gt;&quot;+
              &quot;needed tools to customize your stack.&quot;
    }

    InfoSheet {
        id: info4
        visible: false
        width: parent.width
        anchors.top: separator.bottom
        anchors.left: parent.left

        headingText1: &quot;Modern UX with &quot;
        headingText2: &quot;Top Performance&quot;
        text: &quot;Your productivity is at the core of what drives us. We made creating embedded&lt;br&gt;&quot;+
              &quot;devices agile and painless without sacrificing maximum native performance. You get&lt;br&gt;&quot;+
              &quot;to write your application using high level C++ libraries with no need to worry about&lt;br&gt;&quot;+
              &quot;nasty platform details. Using Qt Creator IDE and with a variety of UI approaches to&lt;br&gt;&quot;+
              &quot;choose from you can create the optimal UX for your end users.&quot;
    }

    InfoSheet {
        id: info5
        visible: false
        width: parent.width
        anchors.top: separator.bottom
        anchors.left: parent.left

        headingText1: &quot;Cross-platform &quot;
        headingText2: &quot;is Our Specialty&quot;
        text: &quot;We make cross-platform application development easy. Target all the screens in your&lt;br&gt;&quot;+
              &quot;end users’ lives. You only need to write and maintain one code base regardless of&lt;br&gt;&quot;+
              &quot;what kind of and how many target platforms you might have and we’re talking about&lt;br&gt;&quot;+
              &quot;all major operating systems here. No need for separate implementations for&lt;br&gt;&quot;+
              &quot;different user devices. Qt makes your time-to-market faster, technology strategy&lt;br&gt;&quot;+
              &quot;simpler and future-proof, consequently reducing costs.&quot;
    }

    InfoSheet {
        id: info6
        visible: false
        width: parent.width
        anchors.top: separator.bottom
        anchors.left: parent.left

        headingText1: &quot;What’s in the Box &quot;
        headingText2: &quot;Everything You Need&quot;
        text: &quot;Qt combines functionality with productivity. You can amaze your users with stunning&lt;br&gt;&quot;+
              &quot;UIs and native performance by developing your desktop and multiscreen&lt;br&gt;&quot;+
              &quot;applications with Qt.&lt;br&gt;&quot;+
              &quot;&lt;ul&gt;&quot;+
              &quot;&lt;li&gt;C++ library classes – comprehensive, highly intuitive, and modularized&lt;/li&gt;&quot;+
              &quot;&lt;li&gt;Declarative programming technology – exquisite UI design with Qt Quick&lt;/li&gt;&quot;+
              &quot;&lt;li&gt;Tooling – productive and professional development with Qt Creator IDE&lt;/li&gt;&quot;+
              &quot;&lt;/ul&gt;&lt;br&gt;&quot;+
              &quot;Qt saves you development time, adds efficiency and ultimately shortens your&lt;br&gt;&quot;+
              &quot;time-to-market.&quot;
    }
}

</db:programlisting>
</db:article>
