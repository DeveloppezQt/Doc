<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QRenderPassFilter Class</db:title>
<db:subtitle>Qt3DRender::QRenderPassFilter</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides storage for vectors of Filter Keys and Parameters.</db:para>
<db:para>This class was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QRenderPassFilter</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-renderpassfilter.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qframegraphnode.xml" xlink:role="class">Qt3DRender::QFrameGraphNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qt3drender-qrenderpassfilter.xml">Qt3DRender::QRenderPassFilter</db:link> FrameGraph node is used to select which <db:link xlink:href="qt3drender-qrenderpass.xml">Qt3DRender::QRenderPass</db:link> objects are selected for drawing. <db:link xlink:href="qt3drender-qrenderpassfilter.xml">QRenderPassFilter</db:link> specifies a list of <db:link xlink:href="qt3drender-qfilterkey.xml">Qt3DRender::QFilterKey</db:link> objects and <db:link xlink:href="qt3drender-qparameter.xml">Qt3DRender::QParameter</db:link> objects. When <db:link xlink:href="qt3drender-qrenderpassfilter.xml">QRenderPassFilter</db:link> is present in the FrameGraph, only the <db:link xlink:href="qt3drender-qrenderpass.xml">QRenderPass</db:link> objects, whose <db:link xlink:href="qt3drender-qfilterkey.xml">Qt3DRender::QFilterKey</db:link> objects match the keys in <db:link xlink:href="qt3drender-qrenderpassfilter.xml">QRenderPassFilter</db:link> are selected for rendering. If no <db:link xlink:href="qt3drender-qrenderpassfilter.xml">QRenderPassFilter</db:link> is present, then all <db:link xlink:href="qt3drender-qrenderpass.xml">QRenderPass</db:link> objects are selected for rendering. The parameters in the list can be used to set values for shader parameters. The parameters in <db:link xlink:href="qt3drender-qrenderpassfilter.xml">QRenderPassFilter</db:link> are overridden by parameters in <db:link xlink:href="qt3drender-qtechniquefilter.xml">QTechniqueFilter</db:link>, <db:link xlink:href="qt3drender-qtechnique.xml">QTechnique</db:link> and <db:link xlink:href="qt3drender-qrenderpass.xml">QRenderPass</db:link>.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QRenderPassFilter">
<db:title>[explicit] QRenderPassFilter::QRenderPassFilter(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QRenderPassFilter</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QNode *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QRenderPassFilter(Qt3DCore::QNode *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>The constructor creates an instance with the specified <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="addMatch">
<db:title>void QRenderPassFilter::addMatch(Qt3DRender::QFilterKey *<db:emphasis>filterKey</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addMatch</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QFilterKey *</db:type>
<db:parameter>filterKey</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addMatch(Qt3DRender::QFilterKey *filterKey)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Add the <db:code role="parameter">filterKey</db:code> to the match vector.</db:para>
</db:section>
<db:section xml:id="addParameter">
<db:title>void QRenderPassFilter::addParameter(Qt3DRender::QParameter *<db:emphasis>parameter</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addParameter</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QParameter *</db:type>
<db:parameter>parameter</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addParameter(Qt3DRender::QParameter *parameter)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Add the given <db:code role="parameter">parameter</db:code> to the parameter vector.</db:para>
</db:section>
<db:section xml:id="matchAny">
<db:title>QVector&lt;Qt3DRender::QFilterKey *&gt; QRenderPassFilter::matchAny() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QVector&lt;Qt3DRender::QFilterKey *&gt;</db:type>
<db:methodname>matchAny</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QVector&lt;Qt3DRender::QFilterKey *&gt; matchAny() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a vector of the current keys for the filter.</db:para>
</db:section>
<db:section xml:id="parameters">
<db:title>QVector&lt;Qt3DRender::QParameter *&gt; QRenderPassFilter::parameters() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QVector&lt;Qt3DRender::QParameter *&gt;</db:type>
<db:methodname>parameters</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QVector&lt;Qt3DRender::QParameter *&gt; parameters() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the current vector of parameters.</db:para>
</db:section>
<db:section xml:id="removeMatch">
<db:title>void QRenderPassFilter::removeMatch(Qt3DRender::QFilterKey *<db:emphasis>filterKey</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>removeMatch</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QFilterKey *</db:type>
<db:parameter>filterKey</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void removeMatch(Qt3DRender::QFilterKey *filterKey)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Remove the <db:code role="parameter">filterKey</db:code> from the match vector.</db:para>
</db:section>
<db:section xml:id="removeParameter">
<db:title>void QRenderPassFilter::removeParameter(Qt3DRender::QParameter *<db:emphasis>parameter</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>removeParameter</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QParameter *</db:type>
<db:parameter>parameter</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void removeParameter(Qt3DRender::QParameter *parameter)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Remove the given <db:code role="parameter">parameter</db:code> from the parameter vector.</db:para>
</db:section>
</db:section>
</db:article>
