<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>SplineSeries QML Type</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Presents data as spline charts.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtCharts 2.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>XYSeries</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qsplineseries.xml">QSplineSeries</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A spline series stores the data points and the segment control points needed by <db:link xlink:href="qpainterpath.xml">QPainterPath</db:link> to draw a spline. The control points are automatically calculated when the data changes. The algorithm computes the points so that the normal spline can be drawn.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_qmlchart3.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The following QML code shows how to create a simple spline chart:</db:para>
<db:programlisting language="qml">ChartView {
    title: &quot;Spline&quot;
    anchors.fill: parent
    antialiasing: true

    SplineSeries {
        name: &quot;SplineSeries&quot;
        XYPoint { x: 0; y: 0.0 }
        XYPoint { x: 1.1; y: 3.2 }
        XYPoint { x: 1.9; y: 2.4 }
        XYPoint { x: 2.1; y: 2.1 }
        XYPoint { x: 2.9; y: 2.6 }
        XYPoint { x: 3.4; y: 2.3 }
        XYPoint { x: 4.1; y: 3.1 }
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="capStyle-prop">
<db:title>capStyle : Qt::PenCapStyle</db:title>
<db:fieldsynopsis>
<db:type>Qt::PenCapStyle</db:type>
<db:varname>capStyle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Controls the cap style of the line. Set to one of <db:link xlink:href="qt.xml#PenCapStyle-enum">Qt.FlatCap</db:link>, <db:link xlink:href="qt.xml#PenCapStyle-enum">Qt.SquareCap</db:link> or <db:link xlink:href="qt.xml#PenCapStyle-enum">Qt.RoundCap</db:link>. By default, the cap style is Qt.SquareCap.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt.xml#PenCapStyle-enum">Qt::PenCapStyle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="count-prop">
<db:title>count : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>count</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The number of data points in the series.</db:para>
</db:section>
<db:section xml:id="style-prop">
<db:title>style : Qt::PenStyle</db:title>
<db:fieldsynopsis>
<db:type>Qt::PenStyle</db:type>
<db:varname>style</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Controls the style of the line. Set to one of <db:link xlink:href="qt.xml#PenStyle-enum">Qt.NoPen</db:link>, <db:link xlink:href="qt.xml#PenStyle-enum">Qt.SolidLine</db:link>, <db:link xlink:href="qt.xml#PenStyle-enum">Qt.DashLine</db:link>, <db:link xlink:href="qt.xml#PenStyle-enum">Qt.DotLine</db:link>, <db:link xlink:href="qt.xml#PenStyle-enum">Qt.DashDotLine</db:link>, or <db:link xlink:href="qt.xml#PenStyle-enum">Qt.DashDotDotLine</db:link>. Using <db:link xlink:href="qt.xml#PenStyle-enum">Qt.CustomDashLine</db:link> is not supported in the QML API. By default, the style is Qt.SolidLine.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt.xml#PenStyle-enum">Qt::PenStyle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="width-prop">
<db:title>width : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>width</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The width of the line. By default, the width is 2.0.</db:para>
</db:section>
</db:section>
</db:article>
