<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>MenuItem QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Presents an item within a Menu.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-abstractbutton.xml">AbstractButton</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>MenuItem is part of <db:simplelist><db:member>qtquickcontrols-menus</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-controls-menuitem.xml">MenuItem</db:link> is a convenience type that implements the <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml">AbstractButton</db:link> API, providing a familiar way to respond to menu items being <db:link xlink:href="qml-qtquick-controls-menuitem.xml#triggered-signal">triggered</db:link>, for example.</db:para>
<db:para><db:link xlink:href="qml-qtquick-controls-menuitem.xml">MenuItem</db:link> inherits its API from <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml">AbstractButton</db:link>. For instance, you can set <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml#text-prop">text</db:link> and <db:link xlink:href="qtquickcontrols-icons.xml">icon</db:link> using the <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml">AbstractButton</db:link> API.</db:para>
<db:programlisting language="cpp">Button {
    id: fileButton
    text: &quot;File&quot;
    onClicked: menu.open()

    Menu {
        id: menu

        MenuItem {
            text: &quot;New...&quot;
            onTriggered: document.reset()
        }
        MenuItem {
            text: &quot;Open...&quot;
            onTriggered: openDialog.open()
        }
        MenuItem {
            text: &quot;Save&quot;
            onTriggered: saveDialog.open()
        }
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols-customize.xml#customizing-menu">Customizing Menu</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml">Menu</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols-menus.xml">Menu Controls</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="arrow-prop">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] arrow : Item</db:title>
<db:para>This property holds the sub-menu arrow item.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols-customize.xml#customizing-menu">Customizing Menu</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="highlighted-prop">
<db:title>highlighted : bool</db:title>
<db:para>This property holds whether the menu item is highlighted by the user.</db:para>
<db:para>A menu item can be highlighted by mouse hover or keyboard navigation.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml#currentIndex-prop">Menu::currentIndex</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="implicitTextPadding-prop">
<db:title>[since 6.8] implicitTextPadding : real</db:title>
<db:para>This property holds the minimum space needed from the left edge of the <db:link xlink:href="qml-qtquick-controls-control.xml#contentItem-prop">contentItem</db:link> to the text. It's used to calculate a common <db:link xlink:href="qml-qtquick-controls-menuitem.xml#textPadding-prop">textPadding</db:link> among all the MenuItems inside a <db:link xlink:href="qml-qtquick-controls-menu.xml">Menu</db:link>.</db:para>
<db:para>This property was introduced in Qt 6.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml#textPadding-prop">textPadding</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="menu-prop">
<db:title>[read-only, since QtQuick.Controls 2.3 (Qt 5.10)] menu : Menu</db:title>
<db:para>This property holds the menu that contains this menu item, or <db:code>null</db:code> if the item is not in a menu.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
</db:section>
<db:section xml:id="subMenu-prop">
<db:title>[read-only, since QtQuick.Controls 2.3 (Qt 5.10)] subMenu : Menu</db:title>
<db:para>This property holds the sub-menu that this item presents in the parent menu, or <db:code>null</db:code> if this item is not a sub-menu item.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
</db:section>
<db:section xml:id="textPadding-prop">
<db:title>[read-only, since 6.8] textPadding : real</db:title>
<db:para>This property holds the maximum <db:link xlink:href="qml-qtquick-controls-menuitem.xml#implicitTextPadding-prop">implicitTextPadding</db:link> found among all the menu items inside the same <db:link xlink:href="qml-qtquick-controls-menuitem.xml#menu-prop">menu</db:link>.</db:para>
<db:para>This property can be used by the style to ensure that all MenuItems inside the same Menu end up aligned with respect to the <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml#text-prop">text</db:link>.</db:para>
<db:para>A <db:link xlink:href="qml-qtquick-controls-menu.xml">Menu</db:link> can consist of meny different MenuItems, some can be checkable, some can have an icon, and some will just contain text. And very often, a style wants to make sure that the text inside all of them ends up left-aligned (or right-aligned for <db:link xlink:href="qml-qtquick-controls-control.xml#mirrored-prop">mirrored</db:link> items). By letting each <db:link xlink:href="qml-qtquick-controls-menuitem.xml">MenuItem</db:link> assign its own minimum text padding to <db:link xlink:href="qml-qtquick-controls-menuitem.xml#implicitTextPadding-prop">implicitTextPadding</db:link> (taking icons and checkmarks into account), but using textPadding to actually position the <db:link xlink:href="qml-qtquick-controls-abstractbutton.xml#text-prop">text</db:link>, all MenuItems should end up being aligned</db:para>
<db:para>In order for this to work, all MenuItems should set <db:link xlink:href="qml-qtquick-controls-menuitem.xml#implicitTextPadding-prop">implicitTextPadding</db:link> to be the minimum space needed from the left edge of the <db:link xlink:href="qml-qtquick-controls-control.xml#contentItem-prop">contentItem</db:link> to the text.</db:para>
<db:para>This property was introduced in Qt 6.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml#implicitTextPadding-prop">implicitTextPadding</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="triggered-signal">
<db:title>void triggered()</db:title>
<db:para>This signal is emitted when the menu item is triggered by the user.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onTriggered</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
