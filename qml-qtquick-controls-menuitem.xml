<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>MenuItem QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qml-qtquick-controls-menuitem.xml">MenuItem</db:link> provides an item to add in a menu or a menu bar.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 1.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>MenuItem is part of <db:simplelist><db:member><db:link xlink:href="menus.xml">Menus</db:link></db:member><db:member><db:link xlink:href="controls.xml">Buttons and Controls</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/menu.png"/>
</db:imageobject>
</db:mediaobject>
<db:programlisting language="cpp">Menu {
    text: &quot;Edit&quot;

    MenuItem {
        text: &quot;Cut&quot;
        shortcut: &quot;Ctrl+X&quot;
        onTriggered: ...
    }

    MenuItem {
        text: &quot;Copy&quot;
        shortcut: &quot;Ctrl+C&quot;
        onTriggered: ...
    }

    MenuItem {
        text: &quot;Paste&quot;
        shortcut: &quot;Ctrl+V&quot;
        onTriggered: ...
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menubar.xml">MenuBar</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-menu.xml">Menu</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-menuseparator.xml">MenuSeparator</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-action.xml">Action</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="action-prop">
<db:title>action : Action</db:title>
<db:para>The action bound to this menu item. It will provide values for all the properties of the menu item. However, it is possible to override the action's <db:code>text</db:code>, <db:code>iconSource</db:code>, and <db:code>iconName</db:code> properties by just assigning these properties, allowing some customization.</db:para>
<db:para>In addition, the menu item <db:code>triggered()</db:code> and <db:code>toggled()</db:code> signals will not be emitted. Instead, the action <db:code>triggered()</db:code> and <db:code>toggled()</db:code> signals will be.</db:para>
<db:para>Defaults to <db:code>null</db:code>, meaning no action is bound to the menu item.</db:para>
</db:section>
<db:section xml:id="checkable-prop">
<db:title>checkable : bool</db:title>
<db:para>Whether the menu item can be checked, or toggled. Defaults to <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml#checked-prop">checked</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="checked-prop">
<db:title>checked : bool</db:title>
<db:para>If the menu item is checkable, this property reflects its checked state. Defaults to <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml#checkable-prop">checkable</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-action.xml#toggled-signal">Action::toggled</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="enabled-prop">
<db:title>enabled : bool</db:title>
<db:para>Whether the menu item is enabled, and responsive to user interaction. Defaults to <db:code>true</db:code>.</db:para>
</db:section>
<db:section xml:id="exclusiveGroup-prop">
<db:title>exclusiveGroup : ExclusiveGroup</db:title>
<db:para>If a menu item is checkable, an <db:link xlink:href="qml-qtquick-controls-exclusivegroup.xml">ExclusiveGroup</db:link> can be attached to it. All the menu items sharing the same exclusive group, and by extension, any <db:link xlink:href="qml-qtquick-controls-action.xml">Action</db:link> sharing it, become mutually exclusive selectable, meaning that only the last checked menu item will actually be checked.</db:para>
<db:para>Defaults to <db:code>null</db:code>, meaning no exclusive behavior is to be expected.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml#checked-prop">checked</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml#checkable-prop">checkable</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="iconName-prop">
<db:title>iconName : string</db:title>
<db:para>Sets the icon name for the <db:link xlink:href="qml-qtquick-controls-menuitem.xml">MenuItem</db:link> icon. This will pick the icon with the given name from the current theme. Overrides the item's bound action <db:code>iconName</db:code> property. Defaults to the empty string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml#iconSource-prop">iconSource</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-action.xml#iconName-prop">Action::iconName</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="iconSource-prop">
<db:title>iconSource : url</db:title>
<db:para>Sets the icon file or resource url for the <db:link xlink:href="qml-qtquick-controls-menuitem.xml">MenuItem</db:link> icon. Overrides the item's bound action <db:code>iconSource</db:code> property. Defaults to the empty URL.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml#iconName-prop">iconName</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-action.xml#iconSource-prop">Action::iconSource</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="shortcut-prop">
<db:title>shortcut : keysequence</db:title>
<db:para>Shortcut bound to the menu item. The keysequence can be a string or a <db:link xlink:href="qkeysequence.xml#StandardKey-enum">standard key</db:link>.</db:para>
<db:para>Defaults to an empty string.</db:para>
<db:programlisting language="qml">MenuItem {
    id: copyItem
    text: qsTr(&quot;&amp;Copy&quot;)
    shortcut: StandardKey.Copy
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-action.xml#shortcut-prop">Action::shortcut</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="text-prop">
<db:title>text : string</db:title>
<db:para>Text for the menu item. Overrides the item's bound action <db:code>text</db:code> property.</db:para>
<db:para>Mnemonics are supported by prefixing the shortcut letter with &amp;. For instance, <db:code>&quot;\&amp;Open&quot;</db:code> will bind the <db:code>Alt-O</db:code> shortcut to the <db:code>&quot;Open&quot;</db:code> menu item. Note that not all platforms support mnemonics.</db:para>
<db:para>Defaults to the empty string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-action.xml#text-prop">Action::text</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="type-prop">
<db:title>[read-only] type : enumeration</db:title>
<db:para>This property is read-only and constant, and its value is <db:code>MenuItemType.Item</db:code>.</db:para>
</db:section>
<db:section xml:id="visible-prop">
<db:title>visible : bool</db:title>
<db:para>Whether the menu item should be visible. Defaults to <db:code>true</db:code>.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="toggled-signal">
<db:title>toggled(<db:emphasis>checked</db:emphasis>)</db:title>
<db:para>Emitted whenever a menu item's <db:code>checked</db:code> property changes. This usually happens at the same time as <db:link xlink:href="qml-qtquick-controls-menuitem.xml#triggered-signal">triggered</db:link>.</db:para>
<db:para>The corresponding handler is <db:code>onToggled</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onToggled</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml#checked-prop">checked</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml#triggered-signal">triggered</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-action.xml#triggered-signal">Action::triggered</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-action.xml#toggled-signal">Action::toggled</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="triggered-signal">
<db:title>triggered()</db:title>
<db:para>Emitted when either the menu item or its bound action have been activated.</db:para>
<db:para>The corresponding handler is <db:code>onTriggered</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onTriggered</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml#trigger-method">trigger</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-action.xml#triggered-signal">Action::triggered</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-action.xml#toggled-signal">Action::toggled</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="trigger-method">
<db:title>void trigger()</db:title>
<db:para>Manually trigger a menu item. Will also trigger the item's bound action.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-menuitem.xml#triggered-signal">triggered</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-action.xml#trigger-method">Action::trigger</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
