<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAndroidService Class</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Wraps the most important methods of Android Service class.</db:para>
<db:para><db:emphasis role="bold">This class is under development and is subject to change.</db:emphasis></db:para>
<db:para>This class was introduced in Qt 6.2.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QtCore/private/qandroidextras_p.h</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core-private</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qcoreapplication.xml" xlink:role="class">QCoreApplication</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para><db:emphasis role="bold">This class is under development and is subject to change.</db:emphasis></db:para>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qandroidservice.xml">QAndroidService</db:link> is a convenience class that wraps the most important <db:link xlink:href="https://developer.android.com/reference/android/app/Service.html">Android Service</db:link> methods.</db:para>
<db:para>When building with CMake, use the following commands to use private Qt Core APIs:</db:para>
<db:programlisting language="cpp" role="bad">find_package(Qt6 REQUIRED COMPONENTS Core)
target_link_libraries(mytarget PRIVATE Qt6::CorePrivate)
</db:programlisting>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QAndroidService">
<db:title>QAndroidService::QAndroidService(int &amp;<db:emphasis>argc</db:emphasis>, char **<db:emphasis>argv</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QAndroidService</db:methodname>
<db:methodparam>
<db:type>int &amp;</db:type>
<db:parameter>argc</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>char **</db:type>
<db:parameter>argv</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QAndroidService(int &amp;argc, char **argv)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a new Android service, passing <db:code role="parameter">argc</db:code> and <db:code role="parameter">argv</db:code> as parameters.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcoreapplication.xml">QCoreApplication</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QAndroidService-1">
<db:title>QAndroidService::QAndroidService(int &amp;<db:emphasis>argc</db:emphasis>, char **<db:emphasis>argv</db:emphasis>, const std::function&lt;QAndroidBinder *(const QAndroidIntent &amp;)&gt; &amp;<db:emphasis>binder</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QAndroidService</db:methodname>
<db:methodparam>
<db:type>int &amp;</db:type>
<db:parameter>argc</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>char **</db:type>
<db:parameter>argv</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const std::function&lt;QAndroidBinder *(const QAndroidIntent &amp;)&gt; &amp;</db:type>
<db:parameter>binder</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QAndroidService(int &amp;argc, char **argv, const std::function&lt;QAndroidBinder *(const QAndroidIntent &amp;)&gt; &amp;binder)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a new Android service, passing <db:code role="parameter">argc</db:code> and <db:code role="parameter">argv</db:code> as parameters.</db:para>
<db:para><db:code role="parameter">binder</db:code> is used to create a <db:link xlink:href="qandroidbinder.xml">binder</db:link> when needed.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcoreapplication.xml">QCoreApplication</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="onBind">
<db:title>[virtual] QAndroidBinder *QAndroidService::onBind(const QAndroidIntent &amp;<db:emphasis>intent</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>QAndroidBinder *</db:type>
<db:methodname>onBind</db:methodname>
<db:methodparam>
<db:type>const QAndroidIntent &amp;</db:type>
<db:parameter>intent</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QAndroidBinder * onBind(const QAndroidIntent &amp;intent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>The user must override this method and to return a binder.</db:para>
<db:para>The <db:code role="parameter">intent</db:code> parameter contains all the caller information.</db:para>
<db:para>The returned binder is used by the caller to perform IPC calls.</db:para>
<db:warning>
<db:para>This method is called from Binder's thread which is different from the thread that this object was created.</db:para>
</db:warning>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qandroidbinder.xml#onTransact">QAndroidBinder::onTransact</db:link></db:member>
<db:member><db:link xlink:href="qandroidbinder.xml#transact">QAndroidBinder::transact</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
