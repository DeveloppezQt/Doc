<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick 3D - Instanced Rendering Example</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates how to do instanced rendering in Qt Quick 3D.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/instancing.jpg"/>
</db:imageobject>
</db:mediaobject>
<db:para>This example shows how do instanced rendering using the basic QML API.</db:para>
<db:para>The spaceship and asteroid models were created using the Blender 3D modeling tool, and imported with <db:link xlink:href="qtquick3d-tool-balsam.xml">balsam</db:link>.</db:para>
<db:section xml:id="random-instancing">
<db:title>Random instancing</db:title>
<db:para>We use <db:link xlink:href="qml-qtquick3d-helpers-randominstancing.xml">RandomInstancing</db:link> to make a random table that defines our asteroid field:</db:para>
<db:programlisting language="qml">RandomInstancing {
    id: randomInstancing
    instanceCount: 1500

    position: InstanceRange {
        from: Qt.vector3d(-300, -200, -500)
        to: Qt.vector3d(300, 200, 200)
    }
    scale: InstanceRange {
        from: Qt.vector3d(1, 1, 1)
        to: Qt.vector3d(10, 10, 10)
        proportional: true
    }
    rotation: InstanceRange {
        from: Qt.vector3d(0, 0, 0)
        to: Qt.vector3d(360, 360, 360)
    }
    color: InstanceRange {
        from: &quot;grey&quot;
        to: &quot;white&quot;
        proportional: true
    }

    randomSeed: 2021
}
</db:programlisting>
<db:para>Position and rotation are allowed to vary freely. Scaling is set to be uniform in all directions and colors are grayscale. This is done by setting the <db:link xlink:href="qml-qtquick3d-helpers-instancerange.xml#proportional-prop">proportional</db:link> attribute.</db:para>
<db:para>The spaceships are placed manually using <db:link xlink:href="qml-qtquick3d-instancelist.xml">InstanceList</db:link>:</db:para>
<db:programlisting language="qml">InstanceListEntry {
    id: redShip
    position: Qt.vector3d(50, 10, 100)
    eulerRotation: Qt.vector3d(0, 180, 0)
    color: &quot;red&quot;
    NumberAnimation on position.x {
        from: 50
        to: -70
        duration: 8000
    }
}

InstanceListEntry {
    id: greenShip
    position: Qt.vector3d(0, 0, -60)
    eulerRotation: Qt.vector3d(-10, 0, 30)
    color: &quot;green&quot;
}

InstanceListEntry {
    id: blueShip
    position: Qt.vector3d(-100, -100, 0)
    color: &quot;blue&quot;
}

InstanceList {
    id: manualInstancing
    instances: [ redShip, greenShip, blueShip ]
}
</db:programlisting>
<db:para>The properties of <db:link xlink:href="qml-qtquick3d-instancelistentry.xml">InstanceListEntry</db:link> are bindable: here we animate the red ship so it crosses the path of the camera.</db:para>
<db:para>Finally we apply the instancing tables to the objects:</db:para>
<db:programlisting language="qml">Asteroid {
    instancing: randomInstancing
    NumberAnimation on eulerRotation.x {
        from: 0
        to: 360
        duration: 11000
        loops: Animation.Infinite
    }
}

SimpleSpaceship {
    instancing: manualInstancing
}
</db:programlisting>
<db:para>By animating the rotation of the asteroid model, all of the instances will rotate without having to change the contents of the instance table. Since the asteroid instances have random rotations, all the asteroids will rotate around different axes.</db:para>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="instancing/Asteroid.qml">instancing/Asteroid.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="instancing/CMakeLists.txt">instancing/CMakeLists.txt</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="instancing/SimpleSpaceship.qml">instancing/SimpleSpaceship.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="instancing/instancing.pro">instancing/instancing.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="instancing/main.cpp">instancing/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="instancing/main.qml">instancing/main.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="instancing/qml.qrc">instancing/qml.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
