<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt GUI Private C++ Classes</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides access to private GUI functionality.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Provides access to private GUI functionality.</db:para>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="qrhi.xml" xlink:role="class">QRhi</db:link></db:term>
<db:listitem>
<db:para>Accelerated 2D/3D graphics API abstraction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhibuffer.xml" xlink:role="class">QRhiBuffer</db:link></db:term>
<db:listitem>
<db:para>Vertex, index, or uniform (constant) buffer resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhibuffer-nativebuffer.xml" xlink:role="class">QRhiBuffer::NativeBuffer</db:link></db:term>
<db:listitem>
<db:para>Contains information about the underlying native resources of a buffer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhicolorattachment.xml" xlink:role="class">QRhiColorAttachment</db:link></db:term>
<db:listitem>
<db:para>Describes the a single color attachment of a render target.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhicommandbuffer.xml" xlink:role="class">QRhiCommandBuffer</db:link></db:term>
<db:listitem>
<db:para>Command buffer resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhicomputepipeline.xml" xlink:role="class">QRhiComputePipeline</db:link></db:term>
<db:listitem>
<db:para>Compute pipeline state resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhid3d11initparams.xml" xlink:role="class">QRhiD3D11InitParams</db:link></db:term>
<db:listitem>
<db:para>Direct3D 11 specific initialization parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhid3d11nativehandles.xml" xlink:role="class">QRhiD3D11NativeHandles</db:link></db:term>
<db:listitem>
<db:para>Holds the D3D device and device context used by the QRhi.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhid3d12commandbuffernativehandles.xml" xlink:role="class">QRhiD3D12CommandBufferNativeHandles</db:link></db:term>
<db:listitem>
<db:para>Holds the ID3D12GraphicsCommandList1 object that is backing a QRhiCommandBuffer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhid3d12initparams.xml" xlink:role="class">QRhiD3D12InitParams</db:link></db:term>
<db:listitem>
<db:para>Direct3D 12 specific initialization parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhid3d12nativehandles.xml" xlink:role="class">QRhiD3D12NativeHandles</db:link></db:term>
<db:listitem>
<db:para>Holds the D3D12 device used by the QRhi.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhidepthstencilclearvalue.xml" xlink:role="class">QRhiDepthStencilClearValue</db:link></db:term>
<db:listitem>
<db:para>Specifies clear values for a depth or stencil buffer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhidriverinfo.xml" xlink:role="class">QRhiDriverInfo</db:link></db:term>
<db:listitem>
<db:para>Describes the physical device, adapter, or graphics API implementation that is used by an initialized QRhi.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhigles2initparams.xml" xlink:role="class">QRhiGles2InitParams</db:link></db:term>
<db:listitem>
<db:para>OpenGL specific initialization parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhigles2nativehandles.xml" xlink:role="class">QRhiGles2NativeHandles</db:link></db:term>
<db:listitem>
<db:para>Holds the OpenGL context used by the QRhi.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhigraphicspipeline.xml" xlink:role="class">QRhiGraphicsPipeline</db:link></db:term>
<db:listitem>
<db:para>Graphics pipeline state resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhigraphicspipeline-stencilopstate.xml" xlink:role="class">QRhiGraphicsPipeline::StencilOpState</db:link></db:term>
<db:listitem>
<db:para>Describes the stencil operation state.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhigraphicspipeline-targetblend.xml" xlink:role="class">QRhiGraphicsPipeline::TargetBlend</db:link></db:term>
<db:listitem>
<db:para>Describes the blend state for one color attachment.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhiinitparams.xml" xlink:role="class">QRhiInitParams</db:link></db:term>
<db:listitem>
<db:para>Base class for backend-specific initialization parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhimetalcommandbuffernativehandles.xml" xlink:role="class">QRhiMetalCommandBufferNativeHandles</db:link></db:term>
<db:listitem>
<db:para>Holds the MTLCommandBuffer and MTLRenderCommandEncoder objects that are backing a QRhiCommandBuffer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhimetalinitparams.xml" xlink:role="class">QRhiMetalInitParams</db:link></db:term>
<db:listitem>
<db:para>Metal specific initialization parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhimetalnativehandles.xml" xlink:role="class">QRhiMetalNativeHandles</db:link></db:term>
<db:listitem>
<db:para>Holds the Metal device used by the QRhi.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhinativehandles.xml" xlink:role="class">QRhiNativeHandles</db:link></db:term>
<db:listitem>
<db:para>Base class for classes exposing backend-specific collections of native resource objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhinullinitparams.xml" xlink:role="class">QRhiNullInitParams</db:link></db:term>
<db:listitem>
<db:para>Null backend specific initialization parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhinullnativehandles.xml" xlink:role="class">QRhiNullNativeHandles</db:link></db:term>
<db:listitem>
<db:para>Empty.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhireadbackdescription.xml" xlink:role="class">QRhiReadbackDescription</db:link></db:term>
<db:listitem>
<db:para>Describes a readback (reading back texture contents from possibly GPU-only memory) operation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhireadbackresult.xml" xlink:role="class">QRhiReadbackResult</db:link></db:term>
<db:listitem>
<db:para>Describes the results of a potentially asynchronous buffer or texture readback operation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhirenderbuffer.xml" xlink:role="class">QRhiRenderBuffer</db:link></db:term>
<db:listitem>
<db:para>Renderbuffer resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhirenderbuffer-nativerenderbuffer.xml" xlink:role="class">QRhiRenderBuffer::NativeRenderBuffer</db:link></db:term>
<db:listitem>
<db:para>Wraps a native renderbuffer object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhirenderpassdescriptor.xml" xlink:role="class">QRhiRenderPassDescriptor</db:link></db:term>
<db:listitem>
<db:para>Render pass resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhirendertarget.xml" xlink:role="class">QRhiRenderTarget</db:link></db:term>
<db:listitem>
<db:para>Represents an onscreen (swapchain) or offscreen (texture) render target.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhiresource.xml" xlink:role="class">QRhiResource</db:link></db:term>
<db:listitem>
<db:para>Base class for classes encapsulating native resource objects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhiresourceupdatebatch.xml" xlink:role="class">QRhiResourceUpdateBatch</db:link></db:term>
<db:listitem>
<db:para>Records upload and copy type of operations.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhisampler.xml" xlink:role="class">QRhiSampler</db:link></db:term>
<db:listitem>
<db:para>Sampler resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhiscissor.xml" xlink:role="class">QRhiScissor</db:link></db:term>
<db:listitem>
<db:para>Specifies a scissor rectangle.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhishaderresourcebinding.xml" xlink:role="class">QRhiShaderResourceBinding</db:link></db:term>
<db:listitem>
<db:para>Describes the shader resource for a single binding point.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhishaderresourcebindings.xml" xlink:role="class">QRhiShaderResourceBindings</db:link></db:term>
<db:listitem>
<db:para>Encapsulates resources for making buffer, texture, sampler resources visible to shaders.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhishaderstage.xml" xlink:role="class">QRhiShaderStage</db:link></db:term>
<db:listitem>
<db:para>Specifies the type and the shader code for a shader stage in the pipeline.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhishadingratemap.xml" xlink:role="class">QRhiShadingRateMap</db:link></db:term>
<db:listitem>
<db:para>An object that wraps a texture or another kind of native 3D API object.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhishadingratemap-nativeshadingratemap.xml" xlink:role="class">QRhiShadingRateMap::NativeShadingRateMap</db:link></db:term>
<db:listitem>
<db:para>Wraps a native shading rate map.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhistats.xml" xlink:role="class">QRhiStats</db:link></db:term>
<db:listitem>
<db:para>Statistics provided from the underlying memory allocator.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhiswapchain.xml" xlink:role="class">QRhiSwapChain</db:link></db:term>
<db:listitem>
<db:para>Swapchain resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhiswapchainhdrinfo.xml" xlink:role="class">QRhiSwapChainHdrInfo</db:link></db:term>
<db:listitem>
<db:para>Describes the high dynamic range related information of the swapchain's associated output.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhiswapchainproxydata.xml" xlink:role="class">QRhiSwapChainProxyData</db:link></db:term>
<db:listitem>
<db:para>Opaque data describing native objects needed to set up a swapchain.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhiswapchainrendertarget.xml" xlink:role="class">QRhiSwapChainRenderTarget</db:link></db:term>
<db:listitem>
<db:para>Swapchain render target resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhitexture.xml" xlink:role="class">QRhiTexture</db:link></db:term>
<db:listitem>
<db:para>Texture resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhitexture-nativetexture.xml" xlink:role="class">QRhiTexture::NativeTexture</db:link></db:term>
<db:listitem>
<db:para>Contains information about the underlying native resources of a texture.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhitexture-viewformat.xml" xlink:role="class">QRhiTexture::ViewFormat</db:link></db:term>
<db:listitem>
<db:para>Specifies the view format for reading or writing from or to the texture.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhitexturecopydescription.xml" xlink:role="class">QRhiTextureCopyDescription</db:link></db:term>
<db:listitem>
<db:para>Describes a texture-to-texture copy operation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhitexturerendertarget.xml" xlink:role="class">QRhiTextureRenderTarget</db:link></db:term>
<db:listitem>
<db:para>Texture render target resource.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhitexturerendertargetdescription.xml" xlink:role="class">QRhiTextureRenderTargetDescription</db:link></db:term>
<db:listitem>
<db:para>Describes the color and depth or depth/stencil attachments of a render target.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhitexturesubresourceuploaddescription.xml" xlink:role="class">QRhiTextureSubresourceUploadDescription</db:link></db:term>
<db:listitem>
<db:para>Describes the source for one mip level in a layer in a texture upload operation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhitextureuploaddescription.xml" xlink:role="class">QRhiTextureUploadDescription</db:link></db:term>
<db:listitem>
<db:para>Describes a texture upload operation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhitextureuploadentry.xml" xlink:role="class">QRhiTextureUploadEntry</db:link></db:term>
<db:listitem>
<db:para>Describes one layer (face for cubemaps, slice for 3D textures, element for texture arrays) in a texture upload operation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhivertexinputattribute.xml" xlink:role="class">QRhiVertexInputAttribute</db:link></db:term>
<db:listitem>
<db:para>Describes a single vertex input element.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhivertexinputbinding.xml" xlink:role="class">QRhiVertexInputBinding</db:link></db:term>
<db:listitem>
<db:para>Describes a vertex input binding.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhivertexinputlayout.xml" xlink:role="class">QRhiVertexInputLayout</db:link></db:term>
<db:listitem>
<db:para>Describes the layout of vertex inputs consumed by a vertex shader.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhiviewport.xml" xlink:role="class">QRhiViewport</db:link></db:term>
<db:listitem>
<db:para>Specifies a viewport rectangle.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhivulkancommandbuffernativehandles.xml" xlink:role="class">QRhiVulkanCommandBufferNativeHandles</db:link></db:term>
<db:listitem>
<db:para>Holds the Vulkan command buffer object that is backing a QRhiCommandBuffer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhivulkaninitparams.xml" xlink:role="class">QRhiVulkanInitParams</db:link></db:term>
<db:listitem>
<db:para>Vulkan specific initialization parameters.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhivulkannativehandles.xml" xlink:role="class">QRhiVulkanNativeHandles</db:link></db:term>
<db:listitem>
<db:para>Collects device, queue, and other Vulkan objects that are used by the QRhi.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrhivulkanrenderpassnativehandles.xml" xlink:role="class">QRhiVulkanRenderPassNativeHandles</db:link></db:term>
<db:listitem>
<db:para>Holds the Vulkan render pass object backing a QRhiRenderPassDescriptor.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Use the following CMake commands in your <db:code>CMakeLists.txt</db:code> to access private Qt GUI APIs:</db:para>
<db:programlisting language="cpp" role="bad">find_package(Qt6 REQUIRED COMPONENTS Gui)
target_link_libraries(mytarget PRIVATE Qt6::GuiPrivate)
</db:programlisting>
</db:section>
</db:article>
