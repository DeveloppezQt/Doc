<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QOpcUaEndpointDescription Class</db:title>
<db:productname>QtOpcUa</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>An OPC UA module for Qt</db:titleabbrev>
<db:abstract>
<db:para>The OPC UA <db:link xlink:href="qml-qtopcua-endpointdescription.xml">EndpointDescription</db:link>.</db:para>
<db:para>This class was introduced in Qt 5.11.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QOpcUaEndpointDescription</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.11</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += opcua</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>An endpoint description contains information about an endpoint and how to connect to it.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="MessageSecurityMode-enum">
<db:title>enum QOpcUaEndpointDescription::MessageSecurityMode</db:title>
<db:enumsynopsis>
<db:enumname>MessageSecurityMode</db:enumname>
<db:enumitem>
<db:enumidentifier>Invalid</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>None</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Sign</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SignAndEncrypt</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum type holds the security mode supported by the endpoint.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopcuaendpointdescription.xml">QOpcUaEndpointDescription</db:link></db:emphasis>::Invalid</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The default value, will be rejected by the server.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopcuaendpointdescription.xml">QOpcUaEndpointDescription</db:link></db:emphasis>::None</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>No security.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopcuaendpointdescription.xml">QOpcUaEndpointDescription</db:link></db:emphasis>::Sign</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Messages are signed but not encrypted.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopcuaendpointdescription.xml">QOpcUaEndpointDescription</db:link></db:emphasis>::SignAndEncrypt</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Messages are signed and encrypted.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="endpointUrl-prop">
<db:title>[read-only] endpointUrl : const QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>endpointUrl</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">endpointUrl</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The URL for the endpoint.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qopcuaendpointdescription.xml#endpointUrl">endpointUrl</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="securityMode-prop">
<db:title>[read-only] securityMode : const QOpcUaEndpointDescription::MessageSecurityMode</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QOpcUaEndpointDescription::MessageSecurityMode</db:type>
<db:varname>securityMode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">securityMode</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Security mode supported by this endpoint.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qopcuaendpointdescription.xml#MessageSecurityMode-enum">QOpcUaEndpointDescription::MessageSecurityMode</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qopcuaendpointdescription.xml#securityMode">securityMode</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="securityPolicy-prop">
<db:title>[read-only] securityPolicy : const QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>securityPolicy</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">securityPolicy</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The URI of the security policy.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qopcuaendpointdescription.xml#securityPolicy">securityPolicy</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="server-prop">
<db:title>[read-only] server : const QOpcUaApplicationDescription</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QOpcUaApplicationDescription</db:type>
<db:varname>server</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">server</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The application description of the server.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QOpcUaApplicationDescription</db:type> <db:emphasis role="bold"><db:link xlink:href="qopcuaendpointdescription.xml#server">server</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="userIdentityTokens-prop">
<db:title>[read-only] userIdentityTokens : const QList&lt;QOpcUaUserTokenPolicy&gt;</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QList&lt;QOpcUaUserTokenPolicy&gt;</db:type>
<db:varname>userIdentityTokens</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">userIdentityTokens</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>List of user identity tokens the endpoint will accept.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold"><db:link xlink:href="qopcuaendpointdescription.xml#userIdentityTokens">userIdentityTokens</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QOpcUaEndpointDescription-1">
<db:title>QOpcUaEndpointDescription::QOpcUaEndpointDescription(const QOpcUaEndpointDescription &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QOpcUaEndpointDescription</db:methodname>
<db:methodparam>
<db:type>const QOpcUaEndpointDescription &amp;</db:type>
<db:parameter>rhs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpcUaEndpointDescription(const QOpcUaEndpointDescription &amp;rhs)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an endpoint description from <db:code role="parameter">rhs</db:code>.</db:para>
</db:section>
<db:section xml:id="endpointUrl">
<db:title>QString QOpcUaEndpointDescription::endpointUrl() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>endpointUrl</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">endpointUrl</db:synopsisinfo>
<db:synopsisinfo role="signature">QString endpointUrl() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the URL for the endpoint.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qopcuaendpointdescription.xml#endpointUrl-prop">endpointUrl</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#setEndpointUrl">setEndpointUrl</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="securityLevel">
<db:title>quint8 QOpcUaEndpointDescription::securityLevel() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint8</db:type>
<db:methodname>securityLevel</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint8 securityLevel() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a relative index assigned by the server. It describes how secure this endpoint is compared to other endpoints of the same server. An endpoint with strong security measures has a higher security level than one with weaker or no security measures.</db:para>
<db:para>Security level 0 indicates an endpoint for backward compatibility purposes which should only be used if the client does not support the security measures required by more secure endpoints.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#setSecurityLevel">setSecurityLevel</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="securityMode">
<db:title>QOpcUaEndpointDescription::MessageSecurityMode QOpcUaEndpointDescription::securityMode() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QOpcUaEndpointDescription::MessageSecurityMode</db:type>
<db:methodname>securityMode</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">securityMode</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpcUaEndpointDescription::MessageSecurityMode securityMode() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the security mode supported by this endpoint.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qopcuaendpointdescription.xml#securityMode-prop">securityMode</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#setSecurityMode">setSecurityMode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="securityPolicy">
<db:title>QString QOpcUaEndpointDescription::securityPolicy() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>securityPolicy</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">securityPolicy</db:synopsisinfo>
<db:synopsisinfo role="signature">QString securityPolicy() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the URI of the security policy.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qopcuaendpointdescription.xml#securityPolicy-prop">securityPolicy</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#setSecurityPolicy">setSecurityPolicy</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="server">
<db:title>QOpcUaApplicationDescription QOpcUaEndpointDescription::server() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QOpcUaApplicationDescription</db:type>
<db:methodname>server</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">server</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpcUaApplicationDescription server() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the application description of the server.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qopcuaendpointdescription.xml#server-prop">server</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#setServer">setServer</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="serverCertificate">
<db:title>QByteArray QOpcUaEndpointDescription::serverCertificate() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QByteArray</db:type>
<db:methodname>serverCertificate</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QByteArray serverCertificate() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the application instance certificate of the server.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#setServerCertificate">setServerCertificate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="serverRef">
<db:title>QOpcUaApplicationDescription &amp;QOpcUaEndpointDescription::serverRef()</db:title>
<db:methodsynopsis>
<db:type>QOpcUaApplicationDescription &amp;</db:type>
<db:methodname>serverRef</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpcUaApplicationDescription &amp; serverRef()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a reference to the application description of the server.</db:para>
</db:section>
<db:section xml:id="setEndpointUrl">
<db:title>void QOpcUaEndpointDescription::setEndpointUrl(const QString &amp;<db:emphasis>endpointUrl</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setEndpointUrl</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>endpointUrl</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setEndpointUrl(const QString &amp;endpointUrl)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the URL for the endpoint to <db:code role="parameter">endpointUrl</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#endpointUrl">endpointUrl</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSecurityLevel">
<db:title>void QOpcUaEndpointDescription::setSecurityLevel(quint8 <db:emphasis>securityLevel</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setSecurityLevel</db:methodname>
<db:methodparam>
<db:type>quint8</db:type>
<db:parameter>securityLevel</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setSecurityLevel(quint8 securityLevel)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the security level to <db:code role="parameter">securityLevel</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#securityLevel">securityLevel</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSecurityMode">
<db:title>void QOpcUaEndpointDescription::setSecurityMode(QOpcUaEndpointDescription::MessageSecurityMode <db:emphasis>securityMode</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setSecurityMode</db:methodname>
<db:methodparam>
<db:type>QOpcUaEndpointDescription::MessageSecurityMode</db:type>
<db:parameter>securityMode</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setSecurityMode(QOpcUaEndpointDescription::MessageSecurityMode securityMode)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the security mode supported by this endpoint to <db:code role="parameter">securityMode</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#securityMode">securityMode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSecurityPolicy">
<db:title>void QOpcUaEndpointDescription::setSecurityPolicy(const QString &amp;<db:emphasis>securityPolicy</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setSecurityPolicy</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>securityPolicy</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setSecurityPolicy(const QString &amp;securityPolicy)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the URI of the security policy to <db:code role="parameter">securityPolicy</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#securityPolicy">securityPolicy</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setServer">
<db:title>void QOpcUaEndpointDescription::setServer(const QOpcUaApplicationDescription &amp;<db:emphasis>server</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setServer</db:methodname>
<db:methodparam>
<db:type>const QOpcUaApplicationDescription &amp;</db:type>
<db:parameter>server</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setServer(const QOpcUaApplicationDescription &amp;server)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the application description of the server to <db:code role="parameter">server</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#server">server</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setServerCertificate">
<db:title>void QOpcUaEndpointDescription::setServerCertificate(const QByteArray &amp;<db:emphasis>serverCertificate</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setServerCertificate</db:methodname>
<db:methodparam>
<db:type>const QByteArray &amp;</db:type>
<db:parameter>serverCertificate</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setServerCertificate(const QByteArray &amp;serverCertificate)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the application instance certificate of the server to <db:code role="parameter">serverCertificate</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#serverCertificate">serverCertificate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTransportProfileUri">
<db:title>void QOpcUaEndpointDescription::setTransportProfileUri(const QString &amp;<db:emphasis>transportProfileUri</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setTransportProfileUri</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>transportProfileUri</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setTransportProfileUri(const QString &amp;transportProfileUri)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the URI of the transport profile supported by the endpoint to <db:code role="parameter">transportProfileUri</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#transportProfileUri">transportProfileUri</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setUserIdentityTokens">
<db:title>void QOpcUaEndpointDescription::setUserIdentityTokens(const int &amp;<db:emphasis>userIdentityTokens</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setUserIdentityTokens</db:methodname>
<db:methodparam>
<db:type>const int &amp;</db:type>
<db:parameter>userIdentityTokens</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setUserIdentityTokens(const int &amp;userIdentityTokens)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the user identity tokens to <db:code role="parameter">userIdentityTokens</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#userIdentityTokens">userIdentityTokens</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="transportProfileUri">
<db:title>QString QOpcUaEndpointDescription::transportProfileUri() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>transportProfileUri</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString transportProfileUri() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the URI of the transport profile supported by the endpoint.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#setTransportProfileUri">setTransportProfileUri</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="userIdentityTokens">
<db:title>int QOpcUaEndpointDescription::userIdentityTokens() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>userIdentityTokens</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">userIdentityTokens</db:synopsisinfo>
<db:synopsisinfo role="signature">int userIdentityTokens() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of user identity tokens the endpoint will accept.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qopcuaendpointdescription.xml#userIdentityTokens-prop">userIdentityTokens</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaendpointdescription.xml#setUserIdentityTokens">setUserIdentityTokens</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="userIdentityTokensRef">
<db:title>int &amp;QOpcUaEndpointDescription::userIdentityTokensRef()</db:title>
<db:methodsynopsis>
<db:type>int &amp;</db:type>
<db:methodname>userIdentityTokensRef</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int &amp; userIdentityTokensRef()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a reference to a list of user identity tokens the endpoint will accept.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QOpcUaEndpointDescription &amp;QOpcUaEndpointDescription::operator=(const QOpcUaEndpointDescription &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QOpcUaEndpointDescription &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QOpcUaEndpointDescription &amp;</db:type>
<db:parameter>rhs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpcUaEndpointDescription &amp; operator=(const QOpcUaEndpointDescription &amp;rhs)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the values from <db:code role="parameter">rhs</db:code> in this endpoint description.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QOpcUaEndpointDescription::operator==(const QOpcUaEndpointDescription &amp;<db:emphasis>rhs</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>const QOpcUaEndpointDescription &amp;</db:type>
<db:parameter>rhs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(const QOpcUaEndpointDescription &amp;rhs) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if this endpoint description has the same value as <db:code role="parameter">rhs</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
