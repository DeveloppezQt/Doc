<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>PathText QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Defines a string in a specified font.</db:para>
<db:para>This type was introduced in QtQuick 2.15.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtQuick 2.15</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>PathText is part of <db:simplelist><db:member>qtquick-animation-paths</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This element defines the shape of a specified string in a specified font. The text's baseline will be translated to the x and y coordinates, and the outlines from the font will be added to the path accordingly.</db:para>
<db:programlisting language="qml">PathText {
    x: 0
    y: font.pixelSize
    font.family: &quot;Arial&quot;
    font.pixelSize: 100
    text: &quot;Foobar&quot;
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-path.xml">Path</db:link></db:member>
<db:member><db:link xlink:href="qpainterpath.xml#setFillRule">QPainterPath::setFillRule</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathpolyline.xml">PathPolyline</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathquad.xml">PathQuad</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathcubic.xml">PathCubic</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-patharc.xml">PathArc</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathanglearc.xml">PathAngleArc</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathcurve.xml">PathCurve</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathsvg.xml">PathSvg</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathmove.xml">PathMove</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="font.bold-prop">
<db:title>font.bold : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>font.bold</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets whether the font weight is bold.</db:para>
</db:section>
<db:section xml:id="font.capitalization-prop">
<db:title>font.capitalization : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>font.capitalization</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the capitalization for the text.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Font.MixedCase</db:para>
</db:td>
<db:td>
<db:para>no capitalization change is applied</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Font.AllUppercase</db:para>
</db:td>
<db:td>
<db:para>alters the text to be rendered in all uppercase type</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Font.AllLowercase</db:para>
</db:td>
<db:td>
<db:para>alters the text to be rendered in all lowercase type</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Font.SmallCaps</db:para>
</db:td>
<db:td>
<db:para>alters the text to be rendered in small-caps type</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Font.Capitalize</db:para>
</db:td>
<db:td>
<db:para>alters the text to be rendered with the first character of each word as an uppercase character</db:para>
<db:programlisting language="qml">PathText { text: &quot;Hello&quot;; font.capitalization: Font.AllLowercase }
</db:programlisting>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="font.family-prop">
<db:title>font.family : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>font.family</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the family name of the font.</db:para>
<db:para>The family name is case insensitive and may optionally include a foundry name, e.g. &quot;Helvetica [Cronyx]&quot;. If the family is available from more than one foundry and the foundry isn't specified, an arbitrary foundry is chosen. If the family isn't available a family will be set using the font matching algorithm.</db:para>
</db:section>
<db:section xml:id="font.features-prop">
<db:title>[since 6.6] font.features : object</db:title>
<db:fieldsynopsis>
<db:type>object</db:type>
<db:varname>font.features</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Applies integer values to specific OpenType features when shaping the text based on the contents in <db:code role="parameter">features</db:code>. This provides advanced access to the font shaping process, and can be used to support font features that are otherwise not covered in the API.</db:para>
<db:para>The font features are represented by a map from four-letter tags to integer values. This integer value passed along with the tag in most cases represents a boolean value: A zero value means the feature is disabled, and a non-zero value means it is enabled. For certain font features, however, it may have other interpretations. For example, when applied to the salt feature, the value is an index that specifies the stylistic alternative to use.</db:para>
<db:para>For example, the frac font feature will convert diagonal fractions separated with a slash (such as 1/2) with a different representation. Typically this will involve baking the full fraction into a single character width (such as Â½).</db:para>
<db:para>If a font supports the frac feature, then it can be enabled in the shaper as in the following code:</db:para>
<db:programlisting language="qml">Text {
    text: &quot;One divided by two is 1/2&quot;
    font.family: &quot;MyFractionFont&quot;
    font.features: { &quot;frac&quot;: 1 }
}
</db:programlisting>
<db:para>Multiple features can be assigned values in the same mapping. For instance, if you would like to also disable kerning for the font, you can explicitly disable this as follows:</db:para>
<db:programlisting language="qml">Text {
    text: &quot;One divided by two is 1/2&quot;
    font.family: &quot;MyFractionFont&quot;
    font.features: { &quot;frac&quot;: 1, &quot;kern&quot;: 0 }
}
</db:programlisting>
<db:para>You can also collect the font properties in an object:</db:para>
<db:programlisting language="qml">Text {
    text: &quot;One divided by two is 1/2&quot;
    font: {
        family: &quot;MyFractionFont&quot;
        features: { &quot;frac&quot;: 1, &quot;kern&quot;: 0 }
    }
}
</db:programlisting>
<db:note>
<db:para>By default, Qt will enable and disable certain font features based on other font properties. In particular, the kern feature will be enabled/disabled depending on the <db:link xlink:href="qml-qtquick-pathtext.xml#font.kerning-prop">font.kerning</db:link> property of the <db:link xlink:href="qfont.xml">QFont</db:link>. In addition, all ligature features (liga, clig, dlig, hlig) will be disabled if a <db:link xlink:href="qml-qtquick-pathtext.xml#font.letterSpacing-prop">font.letterSpacing</db:link> is set, but only for writing systems where the use of ligature is cosmetic. For writing systems where ligatures are required, the features will remain in their default state. The values set using font.features will override the default behavior. If, for instance, &quot;kern&quot; is set to 1, then kerning will always be enabled, regardless of whether the <db:link xlink:href="qml-qtquick-pathtext.xml#font.kerning-prop">font.kerning</db:link> property is set to false. Similarly, if it is set to 0, it will always be disabled.</db:para>
</db:note>
<db:para>This property was introduced in Qt 6.6.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml#setFeature">QFont::setFeature</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="font.italic-prop">
<db:title>font.italic : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>font.italic</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets whether the font has an italic style.</db:para>
</db:section>
<db:section xml:id="font.kerning-prop">
<db:title>font.kerning : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>font.kerning</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Enables or disables the kerning OpenType feature when shaping the text. Disabling this may improve performance when creating or changing the text, at the expense of some cosmetic features. The default value is true.</db:para>
<db:programlisting language="qml">PathText { text: &quot;OATS FLAVOUR WAY&quot;; font.kerning: false }
</db:programlisting>
</db:section>
<db:section xml:id="font.letterSpacing-prop">
<db:title>font.letterSpacing : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>font.letterSpacing</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the letter spacing for the font.</db:para>
<db:para>Letter spacing changes the default spacing between individual letters in the font. A positive value increases the letter spacing by the corresponding pixels; a negative value decreases the spacing.</db:para>
</db:section>
<db:section xml:id="font.pixelSize-prop">
<db:title>font.pixelSize : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>font.pixelSize</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the font size in pixels.</db:para>
<db:para>Using this function makes the font device dependent. Use pointSize to set the size of the font in a device independent manner.</db:para>
</db:section>
<db:section xml:id="font.pointSize-prop">
<db:title>font.pointSize : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>font.pointSize</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the font size in points. The point size must be greater than zero.</db:para>
</db:section>
<db:section xml:id="font.preferShaping-prop">
<db:title>font.preferShaping : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>font.preferShaping</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sometimes, a font will apply complex rules to a set of characters in order to display them correctly. In some writing systems, such as Brahmic scripts, this is required in order for the text to be legible, but in e.g. Latin script, it is merely a cosmetic feature. Setting the preferShaping property to false will disable all such features when they are not required, which will improve performance in most cases.</db:para>
<db:para>The default value is true.</db:para>
<db:programlisting language="qml">PathText { text: &quot;Some text&quot;; font.preferShaping: false }
</db:programlisting>
</db:section>
<db:section xml:id="font.strikeout-prop">
<db:title>font.strikeout : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>font.strikeout</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets whether the font has a strikeout style.</db:para>
</db:section>
<db:section xml:id="font.styleName-prop">
<db:title>font.styleName : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>font.styleName</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the style name of the font.</db:para>
<db:para>The style name is case insensitive. If set, the font will be matched against style name instead of the font properties <db:link xlink:href="qml-qtquick-pathtext.xml#font.weight-prop">font.weight</db:link>, <db:link xlink:href="qml-qtquick-pathtext.xml#font.bold-prop">font.bold</db:link> and <db:link xlink:href="qml-qtquick-pathtext.xml#font.italic-prop">font.italic</db:link>.</db:para>
</db:section>
<db:section xml:id="font.underline-prop">
<db:title>font.underline : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>font.underline</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets whether the text is underlined.</db:para>
</db:section>
<db:section xml:id="font.variableAxes-prop">
<db:title>[since 6.7] font.variableAxes : object</db:title>
<db:fieldsynopsis>
<db:type>object</db:type>
<db:varname>font.variableAxes</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Applies floating point values to variable axes in variable fonts.</db:para>
<db:para>Variable fonts provide a way to store multiple variations (with different weights, widths or styles) in the same font file. The variations are given as floating point values for a pre-defined set of parameters, called &quot;variable axes&quot;. Specific instances are typically given names by the font designer, and, in Qt, these can be selected using setStyleName() just like traditional sub-families.</db:para>
<db:para>In some cases, it is also useful to provide arbitrary values for the different axes. For instance, if a font has a Regular and Bold sub-family, you may want a weight in-between these. You could then manually request this by supplying a custom value for the &quot;wght&quot; axis in the font.</db:para>
<db:programlisting language="qml">Text {
    text: &quot;Foobar&quot;
    font.family: &quot;MyVariableFont&quot;
    font.variableAxes: { &quot;wght&quot;: (Font.Normal + Font.Bold) / 2.0 }
}
</db:programlisting>
<db:para>If the &quot;wght&quot; axis is supported by the font and the given value is within its defined range, a font corresponding to the weight 550.0 will be provided.</db:para>
<db:para>There are a few standard axes than many fonts provide, such as &quot;wght&quot; (weight), &quot;wdth&quot; (width), &quot;ital&quot; (italic) and &quot;opsz&quot; (optical size). They each have indivdual ranges defined in the font itself. For instance, &quot;wght&quot; may span from 100 to 900 (<db:link xlink:href="qfont.xml#Weight-enum">QFont::Thin</db:link> to <db:link xlink:href="qfont.xml#Weight-enum">QFont::Black</db:link>) whereas &quot;ital&quot; can span from 0 to 1 (from not italic to fully italic).</db:para>
<db:para>A font may also choose to define custom axes; the only limitation is that the name has to meet the requirements for a <db:link xlink:href="qfont-tag.xml">QFont::Tag</db:link> (sequence of four latin-1 characters.)</db:para>
<db:para>By default, no variable axes are set.</db:para>
<db:note>
<db:para>In order to use variable axes on Windows, the application has to run with either the FreeType or DirectWrite font databases. See the documentation for <db:link xlink:href="qguiapplication.xml#QGuiApplication">QGuiApplication::QGuiApplication</db:link>() for more information on how to select these technologies.</db:para>
</db:note>
<db:para>This property was introduced in Qt 6.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qfont.xml#setVariableAxis">QFont::setVariableAxis</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="font.weight-prop">
<db:title>font.weight : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>font.weight</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the font's weight.</db:para>
<db:para>The weight can be one of:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Font.Thin</db:para>
</db:td>
<db:td>
<db:para>100</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Font.ExtraLight</db:para>
</db:td>
<db:td>
<db:para>200</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Font.Light</db:para>
</db:td>
<db:td>
<db:para>300</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Font.Normal</db:para>
</db:td>
<db:td>
<db:para>400 (default)</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Font.Medium</db:para>
</db:td>
<db:td>
<db:para>500</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Font.DemiBold</db:para>
</db:td>
<db:td>
<db:para>600</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Font.Bold</db:para>
</db:td>
<db:td>
<db:para>700</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Font.ExtraBold</db:para>
</db:td>
<db:td>
<db:para>800</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Font.Black</db:para>
</db:td>
<db:td>
<db:para>900</db:para>
<db:programlisting language="qml">PathText { text: &quot;Hello&quot;; font.weight: Font.DemiBold }
</db:programlisting>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="font.wordSpacing-prop">
<db:title>font.wordSpacing : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>font.wordSpacing</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the word spacing for the font.</db:para>
<db:para>Word spacing changes the default spacing between individual words. A positive value increases the word spacing by a corresponding amount of pixels, while a negative value decreases the inter-word spacing accordingly.</db:para>
</db:section>
<db:section xml:id="text-prop">
<db:title>text : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>text</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The text for which this <db:link xlink:href="qml-qtquick-pathtext.xml">PathText</db:link> should contain the outlines.</db:para>
</db:section>
<db:section xml:id="x-prop">
<db:title>x : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>x</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The horizontal position of the <db:link xlink:href="qml-qtquick-pathtext.xml">PathText</db:link>'s baseline.</db:para>
</db:section>
<db:section xml:id="y-prop">
<db:title>y : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>y</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The vertical position of the <db:link xlink:href="qml-qtquick-pathtext.xml">PathText</db:link>'s baseline.</db:para>
<db:note>
<db:para>This property refers to the position of the baseline of the text, not the top of its bounding box. This may cause some confusion, e.g. when using the <db:link xlink:href="qml-qtquick-pathtext.xml">PathText</db:link> with Qt Quick Shapes. See <db:link xlink:href="qml-qtquick-fontmetrics.xml">FontMetrics</db:link> for information on how to get the ascent of a font, which can be used to translate the text into the expected position.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
