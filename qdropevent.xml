<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QDropEvent Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdropevent.xml">QDropEvent</db:link> class provides an event which is sent when a drag and drop action is completed.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDropEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qevent.xml" xlink:role="class">QEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qdragmoveevent.xml" xlink:role="class">QDragMoveEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QDropEvent is part of <db:simplelist><db:member>events</db:member><db:member>draganddrop</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>When a widget <db:link xlink:href="qwidget.xml#acceptDrops-prop">accepts drop events</db:link>, it will receive this event if it has accepted the most recent <db:link xlink:href="qdragenterevent.xml">QDragEnterEvent</db:link> or <db:link xlink:href="qdragmoveevent.xml">QDragMoveEvent</db:link> sent to it.</db:para>
<db:para>The drop event contains a proposed action, available from <db:link xlink:href="qdropevent.xml#proposedAction">proposedAction</db:link>(), for the widget to either accept or ignore. If the action can be handled by the widget, you should call the <db:link xlink:href="qdropevent.xml#acceptProposedAction">acceptProposedAction</db:link>() function. Since the proposed action can be a combination of <db:link xlink:href="qt.xml#DropAction-enum">Qt::DropAction</db:link> values, it may be useful to either select one of these values as a default action or ask the user to select their preferred action.</db:para>
<db:para>If the proposed drop action is not suitable, perhaps because your custom widget does not support that action, you can replace it with any of the <db:link xlink:href="qdropevent.xml#possibleActions">possible drop actions</db:link> by calling <db:link xlink:href="qdropevent.xml#setDropAction">setDropAction</db:link>() with your preferred action. If you set a value that is not present in the bitwise OR combination of values returned by <db:link xlink:href="qdropevent.xml#possibleActions">possibleActions</db:link>(), the default copy action will be used. Once a replacement drop action has been set, call <db:link xlink:href="qevent.xml#accept">accept</db:link>() instead of <db:link xlink:href="qdropevent.xml#acceptProposedAction">acceptProposedAction</db:link>() to complete the drop operation.</db:para>
<db:para>The <db:link xlink:href="qdropevent.xml#mimeData">mimeData</db:link>() function provides the data dropped on the widget in a <db:link xlink:href="qmimedata.xml">QMimeData</db:link> object. This contains information about the MIME type of the data in addition to the data itself.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmimedata.xml">QMimeData</db:link></db:member>
<db:member><db:link xlink:href="qdrag.xml">QDrag</db:link></db:member>
<db:member><db:link xlink:href="dnd.xml">Drag and Drop</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="acceptProposedAction">
<db:title>void QDropEvent::acceptProposedAction()</db:title>
<db:para>Sets the drop action to be the proposed action.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdropevent.xml#setDropAction">setDropAction</db:link>()</db:member>
<db:member><db:link xlink:href="qdropevent.xml#proposedAction">proposedAction</db:link>()</db:member>
<db:member><db:link xlink:href="qevent.xml#accept">accept</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dropAction">
<db:title>Qt::DropAction QDropEvent::dropAction() const</db:title>
<db:para>Returns the action to be performed on the data by the target. This may be different from the action supplied in <db:link xlink:href="qdropevent.xml#proposedAction">proposedAction</db:link>() if you have called <db:link xlink:href="qdropevent.xml#setDropAction">setDropAction</db:link>() to explicitly choose a drop action.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdropevent.xml#setDropAction">setDropAction</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="keyboardModifiers">
<db:title>Qt::KeyboardModifiers QDropEvent::keyboardModifiers() const</db:title>
<db:para>Returns the modifier keys that are pressed.</db:para>
</db:section>
<db:section xml:id="mimeData">
<db:title>const QMimeData *QDropEvent::mimeData() const</db:title>
<db:para>Returns the data that was dropped on the widget and its associated MIME type information.</db:para>
</db:section>
<db:section xml:id="mouseButtons">
<db:title>Qt::MouseButtons QDropEvent::mouseButtons() const</db:title>
<db:para>Returns the mouse buttons that are pressed..</db:para>
</db:section>
<db:section xml:id="pos">
<db:title>QPoint QDropEvent::pos() const</db:title>
<db:para>Returns the position where the drop was made.</db:para>
</db:section>
<db:section xml:id="posF">
<db:title>const QPointF &amp;QDropEvent::posF() const</db:title>
<db:para>Returns the position where the drop was made.</db:para>
</db:section>
<db:section xml:id="possibleActions">
<db:title>Qt::DropActions QDropEvent::possibleActions() const</db:title>
<db:para>Returns an OR-combination of possible drop actions.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdropevent.xml#dropAction">dropAction</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="proposedAction">
<db:title>Qt::DropAction QDropEvent::proposedAction() const</db:title>
<db:para>Returns the proposed drop action.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdropevent.xml#dropAction">dropAction</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDropAction">
<db:title>void QDropEvent::setDropAction(Qt::DropAction <db:emphasis>action</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">action</db:code> to be performed on the data by the target. Use this to override the <db:link xlink:href="qdropevent.xml#proposedAction">proposed action</db:link> with one of the <db:link xlink:href="qdropevent.xml#possibleActions">possible actions</db:link>.</db:para>
<db:para>If you set a drop action that is not one of the possible actions, the drag and drop operation will default to a copy operation.</db:para>
<db:para>Once you have supplied a replacement drop action, call <db:link xlink:href="qevent.xml#accept">accept</db:link>() instead of <db:link xlink:href="qdropevent.xml#acceptProposedAction">acceptProposedAction</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdropevent.xml#dropAction">dropAction</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="source">
<db:title>QObject *QDropEvent::source() const</db:title>
<db:para>If the source of the drag operation is a widget in this application, this function returns that source; otherwise it returns 0. The source of the operation is the first parameter to the <db:link xlink:href="qdrag.xml">QDrag</db:link> object used instantiate the drag.</db:para>
<db:para>This is useful if your widget needs special behavior when dragging to itself.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdrag.xml#QDrag">QDrag::QDrag</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
