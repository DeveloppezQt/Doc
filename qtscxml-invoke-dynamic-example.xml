<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt SCXML Invoke Example (Dynamic)</db:title>
<db:productname>QtScxml</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Scxml Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Invokes a dynamically loaded nested state machine.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/invoke-dynamic.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:emphasis>Invoke Example (Dynamic)</db:emphasis> demonstrates how to use the <db:code>&lt;invoke&gt;</db:code> element with generated nested state-machines, where the SCXML file is dynamically loaded. The <db:code>&lt;invoke&gt;</db:code> element is used to create an instance of an external service.</db:para>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="http://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section xml:id="invoking-the-state-machine">
<db:title>Invoking the State Machine</db:title>
<db:para>In <db:emphasis>statemachine.scxml</db:emphasis>, we specify a state machine with the name <db:emphasis>Directions</db:emphasis> of type <db:emphasis>http://www.w3.org/TR/scxml/</db:emphasis> to invoke:</db:para>
<db:programlisting language="cpp">&amp;lt;scxml
    xmlns=&quot;http://www.w3.org/2005/07/scxml&quot;
    version=&quot;1.0&quot;
    name=&quot;Directions&quot;
    initial=&quot;anyplace&quot;
&amp;gt;
    &amp;lt;state id=&quot;anyplace&quot;&amp;gt;
        &amp;lt;transition event=&quot;goNowhere&quot; target=&quot;nowhere&quot;/&amp;gt;
        &amp;lt;transition event=&quot;goSomewhere&quot; target=&quot;somewhere&quot;/&amp;gt;

        &amp;lt;state id=&quot;nowhere&quot;/&amp;gt;
        &amp;lt;state id=&quot;somewhere&quot;&amp;gt;
            &amp;lt;invoke type=&quot;http://www.w3.org/TR/scxml/&quot;&amp;gt;
                &amp;lt;content&amp;gt;
                    &amp;lt;scxml name=&quot;anywhere&quot; version=&quot;1.0&quot;&amp;gt;
                        &amp;lt;state id=&quot;here&quot;&amp;gt;
                            &amp;lt;transition event=&quot;goThere&quot; target=&quot;there&quot;/&amp;gt;
                        &amp;lt;/state&amp;gt;
                        &amp;lt;state id=&quot;there&quot;&amp;gt;
                            &amp;lt;transition event=&quot;goHere&quot; target=&quot;here&quot;/&amp;gt;
                        &amp;lt;/state&amp;gt;
                    &amp;lt;/scxml&amp;gt;
                &amp;lt;/content&amp;gt;
            &amp;lt;/invoke&amp;gt;
        &amp;lt;/state&amp;gt;
    &amp;lt;/state&amp;gt;
&amp;lt;/scxml&amp;gt;
</db:programlisting>
</db:section>
<db:section xml:id="dynamically-loading-the-state-machine">
<db:title>Dynamically Loading the State Machine</db:title>
<db:para>We link against the Qt SCXML module by adding the following line to the <db:emphasis>invoke-dynamic.pro</db:emphasis> file:</db:para>
<db:programlisting language="cpp">QT += qml scxml
</db:programlisting>
<db:para>We dynamically create the state machine, as follows:</db:para>
<db:programlisting language="cpp">import QtScxml 5.8

MainView {
    stateMachine: directions.stateMachine

    StateMachineLoader {
        id: directions
        source: &quot;qrc:///statemachine.scxml&quot;
    }
</db:programlisting>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="invoke-dynamic/invoke-dynamic.cpp">invoke-dynamic/invoke-dynamic.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="invoke-dynamic/invoke-dynamic.pro">invoke-dynamic/invoke-dynamic.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="invoke-dynamic/invoke-dynamic.qml">invoke-dynamic/invoke-dynamic.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="invoke-dynamic/invoke-dynamic.qrc">invoke-dynamic/invoke-dynamic.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
