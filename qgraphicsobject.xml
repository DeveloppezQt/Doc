<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QGraphicsObject Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgraphicsobject.xml">QGraphicsObject</db:link> class provides a base class for all graphics items that require signals, slots and properties.</db:para>
<db:para>This class was introduced in Qt 4.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGraphicsObject</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link> and <db:link xlink:href="qgraphicsitem.xml" xlink:role="class">QGraphicsItem</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qgraphicstextitem.xml" xlink:role="class">QGraphicsTextItem</db:link> and <db:link xlink:href="qgraphicswidget.xml" xlink:role="class">QGraphicsWidget</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGraphicsObject is part of <db:simplelist><db:member>graphicsview-api</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The class extends a <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link> with <db:link xlink:href="qobject.xml">QObject</db:link>'s signal/slot and property mechanisms. It maps many of <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>'s basic setters and getters to properties and adds notification signals for many of them.</db:para>
<db:section xml:id="parents-and-children">
<db:title>Parents and Children</db:title>
<db:para>Each graphics object can be constructed with a parent item. This ensures that the item will be destroyed when its parent item is destroyed. Although <db:link xlink:href="qgraphicsobject.xml">QGraphicsObject</db:link> inherits from both <db:link xlink:href="qobject.xml">QObject</db:link> and <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>, you should use the functions provided by <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>, <db:emphasis>not</db:emphasis> <db:link xlink:href="qobject.xml">QObject</db:link>, to manage the relationships between parent and child items.</db:para>
<db:para>The relationships between items can be explored using the <db:link xlink:href="qgraphicsitem.xml#parentItem">parentItem</db:link>() and <db:link xlink:href="qgraphicsitem.xml#childItems">childItems</db:link>() functions. In the hierarchy of items in a scene, the <db:link xlink:href="qgraphicsitem.xml#parentObject">parentObject</db:link>() and <db:link xlink:href="qgraphicsitem.xml#parentWidget">parentWidget</db:link>() functions are the equivalent of the <db:link xlink:href="qobject.xml#parent">QWidget::parent</db:link>() and <db:link xlink:href="qwidget.xml#parentWidget">QWidget::parentWidget</db:link>() functions for <db:link xlink:href="qwidget.xml">QWidget</db:link> subclasses.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicswidget.xml">QGraphicsWidget</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGraphicsObject">
<db:title>[explicit] QGraphicsObject::QGraphicsObject(QGraphicsItem *<db:emphasis>parent</db:emphasis> = 0)</db:title>
<db:para>Constructs a <db:link xlink:href="qgraphicsobject.xml">QGraphicsObject</db:link> with <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QGraphicsObject">
<db:title>[virtual noexcept] QGraphicsObject::~QGraphicsObject()</db:title>
<db:para>Destructor.</db:para>
</db:section>
<db:section xml:id="enabledChanged">
<db:title>void QGraphicsObject::enabledChanged()</db:title>
<db:para>This signal gets emitted whenever the item get's enabled or disabled.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#isEnabled">isEnabled</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="event">
<db:title>[override virtual protected] bool QGraphicsObject::event(QEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qobject.xml#event" role="function">QObject::event(QEvent *e)</db:link>.</db:para>
</db:section>
<db:section xml:id="grabGesture">
<db:title>void QGraphicsObject::grabGesture(Qt::GestureType <db:emphasis>gesture</db:emphasis>, Qt::GestureFlags <db:emphasis>flags</db:emphasis> = Qt::GestureFlags())</db:title>
<db:para>Subscribes the graphics object to the given <db:code role="parameter">gesture</db:code> with specific <db:code role="parameter">flags</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsobject.xml#ungrabGesture">ungrabGesture</db:link>()</db:member>
<db:member><db:link xlink:href="qgestureevent.xml">QGestureEvent</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="opacityChanged">
<db:title>void QGraphicsObject::opacityChanged()</db:title>
<db:para>This signal gets emitted whenever the opacity of the item changes</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#opacity">QGraphicsItem::opacity</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="parentChanged">
<db:title>void QGraphicsObject::parentChanged()</db:title>
<db:para>This signal gets emitted whenever the parent of the item changes</db:para>
</db:section>
<db:section xml:id="rotationChanged">
<db:title>void QGraphicsObject::rotationChanged()</db:title>
<db:para>This signal gets emitted whenever the roation of the item changes.</db:para>
</db:section>
<db:section xml:id="scaleChanged">
<db:title>void QGraphicsObject::scaleChanged()</db:title>
<db:para>This signal is emitted when the scale of the item changes.</db:para>
</db:section>
<db:section xml:id="ungrabGesture">
<db:title>void QGraphicsObject::ungrabGesture(Qt::GestureType <db:emphasis>gesture</db:emphasis>)</db:title>
<db:para>Unsubscribes the graphics object from the given <db:code role="parameter">gesture</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsobject.xml#grabGesture">grabGesture</db:link>()</db:member>
<db:member><db:link xlink:href="qgestureevent.xml">QGestureEvent</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="updateMicroFocus">
<db:title>[protected, since 4.7] void QGraphicsObject::updateMicroFocus()</db:title>
<db:para>Updates the item's micro focus. This is slot for convenience.</db:para>
<db:para>This function was introduced in Qt 4.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qinputmethod.xml">QInputMethod</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="visibleChanged">
<db:title>void QGraphicsObject::visibleChanged()</db:title>
<db:para>This signal gets emitted whenever the visibility of the item changes</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member>visible</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="xChanged">
<db:title>void QGraphicsObject::xChanged()</db:title>
<db:para>This signal gets emitted whenever the x position of the item changes</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#pos">pos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="yChanged">
<db:title>void QGraphicsObject::yChanged()</db:title>
<db:para>This signal gets emitted whenever the y position of the item changes.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#pos">pos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="zChanged">
<db:title>void QGraphicsObject::zChanged()</db:title>
<db:para>This signal gets emitted whenever the z value of the item changes.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#pos">pos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
