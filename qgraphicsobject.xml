<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGraphicsObject Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgraphicsobject.xml">QGraphicsObject</db:link> class provides a base class for all graphics items that require signals, slots and properties.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGraphicsObject</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link> and <db:link xlink:href="qgraphicsitem.xml" xlink:role="class">QGraphicsItem</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qgraphicstextitem.xml" xlink:role="class">QGraphicsTextItem</db:link> and <db:link xlink:href="qgraphicswidget.xml" xlink:role="class">QGraphicsWidget</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGraphicsObject is part of <db:simplelist><db:member>graphicsview-api</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The class extends a <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link> with <db:link xlink:href="qobject.xml">QObject</db:link>'s signal/slot and property mechanisms. It maps many of <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>'s basic setters and getters to properties and adds notification signals for many of them.</db:para>
<db:section xml:id="parents-and-children">
<db:title>Parents and Children</db:title>
<db:para>Each graphics object can be constructed with a parent item. This ensures that the item will be destroyed when its parent item is destroyed. Although <db:link xlink:href="qgraphicsobject.xml">QGraphicsObject</db:link> inherits from both <db:link xlink:href="qobject.xml">QObject</db:link> and <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>, you should use the functions provided by <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>, <db:emphasis>not</db:emphasis> <db:link xlink:href="qobject.xml">QObject</db:link>, to manage the relationships between parent and child items.</db:para>
<db:para>The relationships between items can be explored using the <db:link xlink:href="qgraphicsitem.xml#parentItem">parentItem</db:link>() and <db:link xlink:href="qgraphicsitem.xml#childItems">childItems</db:link>() functions. In the hierarchy of items in a scene, the <db:link xlink:href="qgraphicsitem.xml#parentObject">parentObject</db:link>() and <db:link xlink:href="qgraphicsitem.xml#parentWidget">parentWidget</db:link>() functions are the equivalent of the <db:link xlink:href="qobject.xml#parent">QWidget::parent</db:link>() and <db:link xlink:href="qwidget.xml#parentWidget">QWidget::parentWidget</db:link>() functions for <db:link xlink:href="qwidget.xml">QWidget</db:link> subclasses.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicswidget.xml">QGraphicsWidget</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="effect-prop">
<db:title>effect : QGraphicsEffect* const</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QGraphicsEffect*</db:type>
<db:varname>effect</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the effect attached to this item</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#setGraphicsEffect">QGraphicsItem::setGraphicsEffect</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#graphicsEffect">QGraphicsItem::graphicsEffect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="enabled-prop">
<db:title>enabled : const bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>enabled</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="notifier">enabledChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the item is enabled or not</db:para>
<db:para>This property is declared in <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>.</db:para>
<db:para>By default, this property is <db:code>true</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgraphicsobject.xml#enabledChanged">enabledChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#isEnabled">QGraphicsItem::isEnabled</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#setEnabled">QGraphicsItem::setEnabled</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="opacity-prop">
<db:title>opacity : const qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>opacity</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="notifier">opacityChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the opacity of the item</db:para>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgraphicsobject.xml#opacityChanged">opacityChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#setOpacity">QGraphicsItem::setOpacity</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#opacity">QGraphicsItem::opacity</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="parent-prop">
<db:title>parent : QGraphicsObject* const</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QGraphicsObject*</db:type>
<db:varname>parent</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="notifier">parentChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the parent of the item</db:para>
<db:note>
<db:para>The item's parent is set independently of the parent object returned by <db:link xlink:href="qobject.xml#parent">QObject::parent</db:link>().</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgraphicsobject.xml#parentChanged">parentChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#setParentItem">QGraphicsItem::setParentItem</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#parentObject">QGraphicsItem::parentObject</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pos-prop">
<db:title>pos : const QPointF</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QPointF</db:type>
<db:varname>pos</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the position of the item</db:para>
<db:para>Describes the items position.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#setPos">QGraphicsItem::setPos</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#pos">QGraphicsItem::pos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rotation-prop">
<db:title>rotation : const qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>rotation</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="notifier">rotationChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the rotation of the item in degrees.</db:para>
<db:para>This specifies how many degrees to rotate the item around its transformOrigin. The default rotation is 0 degrees (i.e. not rotated at all).</db:para>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgraphicsobject.xml#rotationChanged">rotationChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="scale-prop">
<db:title>scale : const qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>scale</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="notifier">scaleChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the scale of the item.</db:para>
<db:para>A scale of less than 1 means the item will be displayed smaller than normal, and a scale of greater than 1 means the item will be displayed larger than normal. A negative scale means the item will be mirrored.</db:para>
<db:para>By default, items are displayed at a scale of 1 (i.e. at their normal size).</db:para>
<db:para>Scaling is from the item's transformOrigin.</db:para>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgraphicsobject.xml#scaleChanged">scaleChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="transformOriginPoint-prop">
<db:title>transformOriginPoint : const QPointF</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QPointF</db:type>
<db:varname>transformOriginPoint</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the transformation origin</db:para>
<db:para>This property sets a specific point in the item's coordinate system as the origin for scale and rotation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsobject.xml#scale-prop">scale</db:link></db:member>
<db:member><db:link xlink:href="qgraphicsobject.xml#rotation-prop">rotation</db:link></db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#transformOriginPoint">QGraphicsItem::transformOriginPoint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="visible-prop">
<db:title>visible : const bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>visible</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="notifier">visibleChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the item is visible or not</db:para>
<db:para>This property is declared in <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>.</db:para>
<db:para>By default, this property is <db:code>true</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgraphicsobject.xml#visibleChanged">visibleChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#isVisible">QGraphicsItem::isVisible</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#setVisible">QGraphicsItem::setVisible</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="x-prop">
<db:title>x : const qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>x</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="notifier">xChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the x position of the item</db:para>
<db:para>Describes the items x position.</db:para>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgraphicsobject.xml#xChanged">xChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#setX">QGraphicsItem::setX</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#setPos">setPos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="y-prop">
<db:title>y : const qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>y</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="notifier">yChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the y position of the item</db:para>
<db:para>Describes the items y position.</db:para>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgraphicsobject.xml#yChanged">yChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#setY">QGraphicsItem::setY</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#setPos">setPos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="z-prop">
<db:title>z : const qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>z</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="notifier">zChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the z value of the item</db:para>
<db:para>Describes the items z value.</db:para>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgraphicsobject.xml#zChanged">zChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#setZValue">QGraphicsItem::setZValue</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#zValue">zValue</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGraphicsObject">
<db:title>[explicit] QGraphicsObject::QGraphicsObject(QGraphicsItem *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QGraphicsObject</db:methodname>
<db:methodparam>
<db:type>QGraphicsItem *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QGraphicsObject(QGraphicsItem *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qgraphicsobject.xml">QGraphicsObject</db:link> with <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QGraphicsObject">
<db:title>[virtual] QGraphicsObject::~QGraphicsObject()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QGraphicsObject</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QGraphicsObject()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destructor.</db:para>
</db:section>
<db:section xml:id="enabledChanged">
<db:title>void QGraphicsObject::enabledChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>enabledChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">enabled</db:synopsisinfo>
<db:synopsisinfo role="signature">void enabledChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal gets emitted whenever the item gets enabled or disabled.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qgraphicsobject.xml#enabled-prop">enabled</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#isEnabled">isEnabled</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="event">
<db:title>[override virtual protected] bool QGraphicsObject::event(QEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>bool</db:type>
<db:methodname>event</db:methodname>
<db:methodparam>
<db:type>QEvent *</db:type>
<db:parameter>ev</db:parameter>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool event(QEvent *ev) override</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qobject.xml#event" role="function">QObject::event(QEvent *e)</db:link>.</db:para>
</db:section>
<db:section xml:id="grabGesture">
<db:title>void QGraphicsObject::grabGesture(Qt::GestureType <db:emphasis>gesture</db:emphasis>, Qt::GestureFlags <db:emphasis>flags</db:emphasis> = Qt::GestureFlags())</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>grabGesture</db:methodname>
<db:methodparam>
<db:type>Qt::GestureType</db:type>
<db:parameter>gesture</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>Qt::GestureFlags</db:type>
<db:parameter>flags</db:parameter>
<db:initializer>Qt::GestureFlags()</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void grabGesture(Qt::GestureType gesture, Qt::GestureFlags flags)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Subscribes the graphics object to the given <db:code role="parameter">gesture</db:code> with specific <db:code role="parameter">flags</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsobject.xml#ungrabGesture">ungrabGesture</db:link>()</db:member>
<db:member><db:link xlink:href="qgestureevent.xml">QGestureEvent</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="opacityChanged">
<db:title>void QGraphicsObject::opacityChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>opacityChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">opacity</db:synopsisinfo>
<db:synopsisinfo role="signature">void opacityChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal gets emitted whenever the opacity of the item changes</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qgraphicsobject.xml#opacity-prop">opacity</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#opacity">QGraphicsItem::opacity</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="parentChanged">
<db:title>void QGraphicsObject::parentChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>parentChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">parent</db:synopsisinfo>
<db:synopsisinfo role="signature">void parentChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal gets emitted whenever the parent of the item changes</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qgraphicsobject.xml#parent-prop">parent</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="rotationChanged">
<db:title>void QGraphicsObject::rotationChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>rotationChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">rotation</db:synopsisinfo>
<db:synopsisinfo role="signature">void rotationChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal gets emitted whenever the rotation of the item changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qgraphicsobject.xml#rotation-prop">rotation</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="scaleChanged">
<db:title>void QGraphicsObject::scaleChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>scaleChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">scale</db:synopsisinfo>
<db:synopsisinfo role="signature">void scaleChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the scale of the item changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qgraphicsobject.xml#scale-prop">scale</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="ungrabGesture">
<db:title>void QGraphicsObject::ungrabGesture(Qt::GestureType <db:emphasis>gesture</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>ungrabGesture</db:methodname>
<db:methodparam>
<db:type>Qt::GestureType</db:type>
<db:parameter>gesture</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void ungrabGesture(Qt::GestureType gesture)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Unsubscribes the graphics object from the given <db:code role="parameter">gesture</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsobject.xml#grabGesture">grabGesture</db:link>()</db:member>
<db:member><db:link xlink:href="qgestureevent.xml">QGestureEvent</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="updateMicroFocus">
<db:title>[protected] void QGraphicsObject::updateMicroFocus()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>updateMicroFocus</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void updateMicroFocus()</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Updates the item's micro focus. This is slot for convenience.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qinputmethod.xml">QInputMethod</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="visibleChanged">
<db:title>void QGraphicsObject::visibleChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>visibleChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">visible</db:synopsisinfo>
<db:synopsisinfo role="signature">void visibleChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal gets emitted whenever the visibility of the item changes</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qgraphicsobject.xml#visible-prop">visible</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsobject.xml#visible-prop">visible</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="xChanged">
<db:title>void QGraphicsObject::xChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>xChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">x</db:synopsisinfo>
<db:synopsisinfo role="signature">void xChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal gets emitted whenever the x position of the item changes</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qgraphicsobject.xml#x-prop">x</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#pos">pos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="yChanged">
<db:title>void QGraphicsObject::yChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>yChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">y</db:synopsisinfo>
<db:synopsisinfo role="signature">void yChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal gets emitted whenever the y position of the item changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qgraphicsobject.xml#y-prop">y</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#pos">pos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="zChanged">
<db:title>void QGraphicsObject::zChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>zChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">z</db:synopsisinfo>
<db:synopsisinfo role="signature">void zChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal gets emitted whenever the z value of the item changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qgraphicsobject.xml#z-prop">z</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#pos">pos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
