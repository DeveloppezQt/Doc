<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>TouchSelectionMenuRequest QML Type</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A request for showing a touch selection menu.</db:para>
<db:para>This type was introduced in QtWebEngine 6.3.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtWebEngine</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtWebEngine 6.3</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qml-qtwebengine-touchselectionmenurequest.xml">TouchSelectionMenuRequest</db:link> is passed as an argument of the WebEngineView::touchSelectionMenuRequest signal. It provides further information about the context of the request. The <db:link xlink:href="qml-qtwebengine-touchselectionmenurequest.xml#selectionBounds-prop">selectionBounds</db:link> property provides the origin of the request.</db:para>
<db:para>The <db:link xlink:href="qml-qtwebengine-touchselectionmenurequest.xml#accepted-prop">accepted</db:link> property of the request indicates whether the request is handled by the user code or the default touch selection menu should be displayed.</db:para>
<db:para>The following code uses a custom menu to handle the request:</db:para>
<db:programlisting language="cpp">WebEngineView {
    id: view
    // ...
    onTouchSelectionMenuRequested: function(request) {
        request.accepted = true;
        myMenu.x = request.selectionBounds.x;
        myMenu.y = request.selectionBounds.y;
        myMenu.trigger.connect(view.triggerWebAction);
        myMenu.popup();
    }
    // ...
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="accepted-prop">
<db:title>accepted : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>accepted</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Indicates whether the touch selection menu request has been handled by the signal handler.</db:para>
<db:para>If the property is <db:code>false</db:code> after any signal handlers for <db:link xlink:href="qml-qtwebengine-webengineview.xml#touchSelectionMenuRequested-signal">WebEngineView::touchSelectionMenuRequested</db:link> have been executed, a default touch selection menu will be shown. To prevent this, set <db:code>request.accepted</db:code> to <db:code>true</db:code>.</db:para>
<db:para>The default is <db:code>false</db:code>.</db:para>
<db:note>
<db:para>The default content of the touch selection menu depends on the web element for which the request was actually generated.</db:para>
</db:note>
</db:section>
<db:section xml:id="selectionBounds-prop">
<db:title>[read-only] selectionBounds : rect</db:title>
<db:fieldsynopsis>
<db:type>rect</db:type>
<db:varname>selectionBounds</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The position of the bound rectangle from the touch text selection.</db:para>
</db:section>
</db:section>
</db:article>
