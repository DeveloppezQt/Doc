<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Positioning NMEA plugin</db:title>
<db:productname>QtPositioning</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Positioning Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Reads the NMEA stream to provide position updates.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="overview">
<db:title>Overview</db:title>
<db:para>Included with Qt Positioning is a position plugin which parses NMEA sentences into position updates. This plugin can use serial port, socket or file as a source.</db:para>
<db:para>This plugin can be loaded by using the provider name <db:emphasis role="bold">nmea</db:emphasis>.</db:para>
</db:section>
<db:section xml:id="parameters">
<db:title>Parameters</db:title>
<db:para>The following table lists parameters that <db:emphasis>can</db:emphasis> be passed to the nmea plugin.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Parameter</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>nmea.source</db:para>
</db:td>
<db:td>
<db:para>The source that will be used to get NMEA data.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>nmea.baudrate</db:para>
</db:td>
<db:td>
<db:para>The baud rate to be used by the serial port connection, expressed with a positive integer number. Typically it should be one of the values from the <db:link xlink:href="qserialport.xml#BaudRate-enum">QSerialPort::BaudRate</db:link> enum. If the parameter is not specified or does not contain a positive integer, the default value of <db:code>4800</db:code> is used.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>nmea.satellite_info_simulation_interval</db:para>
</db:td>
<db:td>
<db:para>The interval for reading satellite information data from the file in simulation mode.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Different sources require different ways of providing the data. The following table lists different ways of providing <db:code>nmea.source</db:code> parameter for socket, serial port and file inputs.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Scheme</db:para>
</db:th>
<db:th>
<db:para>Example</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>socket://hostname:port</db:para>
</db:td>
<db:td>
<db:para><db:code>socket://localhost:12345</db:code></db:para>
</db:td>
<db:td>
<db:para>Use <db:emphasis role="bold">socket:</db:emphasis> keyword to specify that you want to get the nmea data from the socket. A TCP socket will be created, which will try to connect to host <db:code>hostname</db:code> using port <db:code>port</db:code>. Upon successful connection a text NMEA stream is expected to be received from the server.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td rowspan="3">
<db:para>serial:portname</db:para>
</db:td>
<db:td>
<db:para><db:code>serial:/dev/ttyUSB0</db:code></db:para>
</db:td>
<db:td rowspan="3">
<db:para>Use <db:emphasis role="bold">serial:</db:emphasis> keyword to specify that you want to get the nmea data from the serial port. The plugin will try to establish a connection to port <db:code>portname</db:code> with a default baudrate = 4800 Bd (the baudrate value can be specified using <db:emphasis role="bold">nmea.baudrate</db:emphasis> parameter). Upon successful connection a text NMEA stream is expected to be received from the serial port. If you use <db:emphasis role="bold">serial:</db:emphasis> without any port name, the plugin will try to find one of the well known serial devices using vendor identifier. Note however that this is not a recommended way of using the serial port connection, as the list of well-known devices is small and most probably does not include your hardware.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>serial:COM1</db:code></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>serial:</db:code></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>filepath</db:para>
</db:td>
<db:td>
<db:para><db:code>/home/user/nmealog.txt</db:code></db:para>
</db:td>
<db:td rowspan="2">
<db:para>Use <db:emphasis role="bold">file:///</db:emphasis> or just full file path to specify a path to a local file.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>file:///filepath</db:para>
</db:td>
<db:td>
<db:para><db:code>file:///home/user/nmealog.txt</db:code></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>qrc:///filepath</db:para>
</db:td>
<db:td>
<db:para><db:code>qrc:///nmealog.txt</db:code></db:para>
</db:td>
<db:td>
<db:para>Use <db:emphasis role="bold">qrc:///</db:emphasis> prefix to specify a path to a file in the application resources.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:note>
<db:para>If <db:code>nmea.source</db:code> parameter is not specified, the plugin will try to locate one of the well-known serial devices (as if <db:code>nmea.source = serial:</db:code> was specified).</db:para>
</db:note>
</db:section>
<db:section xml:id="position-source-usage-example">
<db:title>Position source usage example</db:title>
<db:para>The following examples show how to create a <db:emphasis role="bold">nmea</db:emphasis> <db:link xlink:href="qml-qtpositioning-positionsource.xml">PositionSource</db:link> using different data sources.</db:para>
<db:section xml:id="qml">
<db:title>QML</db:title>
<db:programlisting language="cpp">// text file
PositionSource {
    name: &quot;nmea&quot;
    PluginParameter { name: &quot;nmea.source&quot;; value: &quot;qrc:///nmealog.txt&quot; }
}

// socket
PositionSource {
    name: &quot;nmea&quot;
    PluginParameter { name: &quot;nmea.source&quot;; value: &quot;socket://localhost:22222&quot; }
}

// serial port
PositionSource {
    name: &quot;nmea&quot;
    PluginParameter { name: &quot;nmea.source&quot;; value: &quot;serial:/dev/ttyACM0&quot; }
    PluginParameter { name: &quot;nmea.baudrate&quot;; value: 4800 }
}
</db:programlisting>
</db:section>
<db:section xml:id="c">
<db:title>C++</db:title>
<db:programlisting language="cpp">// text file
QVariantMap params;
params[&quot;nmea.source&quot;] = &quot;qrc:///nmealog.txt&quot;;
QGeoPositionInfoSource *textPositionSource = QGeoPositionInfoSource::createSource(&quot;nmea&quot;, params, this);

// socket
params[&quot;nmea.source&quot;] = &quot;socket://localhost:22222&quot;;
QGeoPositionInfoSource *socketPositionSource = QGeoPositionInfoSource::createSource(&quot;nmea&quot;, params, this);

// serial port
params[&quot;nmea.source&quot;] = &quot;serial:/dev/ttyACM0&quot;;
params[&quot;nmea.baudrate&quot;] = 4800;
QGeoPositionInfoSource *serialPositionSource = QGeoPositionInfoSource::createSource(&quot;nmea&quot;, params, this);
</db:programlisting>
<db:note>
<db:para>Once a <db:link xlink:href="qml-qtpositioning-positionsource.xml">PositionSource</db:link> is created, it can't be reconfigured to use other type of source data.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="satellite-information-source-usage-example">
<db:title>Satellite information source usage example</db:title>
<db:para>Apart from the position information, <db:emphasis role="bold">nmea</db:emphasis> plugin is also capable of providing satellite information.</db:para>
<db:section xml:id="qml">
<db:title>QML</db:title>
<db:programlisting language="cpp">// serial port
SatelliteSource {
    name: &quot;nmea&quot;
    PluginParameter { name: &quot;nmea.source&quot;; value: &quot;serial:/dev/ttyUSB0&quot; }
    PluginParameter { name: &quot;nmea.baudrate&quot;; value: 9600 }
}

// socket
SatelliteSource {
    name: &quot;nmea&quot;
    PluginParameter { name: &quot;nmea.source&quot;; value: &quot;socket://localhost:22222&quot; }
}
</db:programlisting>
</db:section>
<db:section xml:id="c">
<db:title>C++</db:title>
<db:programlisting language="cpp">// serial port
QVariantMap parameters;
parameters[&quot;nmea.source&quot;] = &quot;serial:/dev/ttyUSB0&quot;;
params[&quot;nmea.baudrate&quot;] = 9600;
QGeoSatelliteInfoSource *serialSource = QGeoSatelliteInfoSource::createSource(&quot;nmea&quot;, parameters, this);

// socket
parameters[&quot;nmea.source&quot;] = &quot;socket://localhost:22222&quot;;
QGeoSatelliteInfoSource *socketSource = QGeoSatelliteInfoSource::createSource(&quot;nmea&quot;, parameters, this);
</db:programlisting>
</db:section>
<db:section xml:id="settings-custom-simulation-speed">
<db:title>Settings custom simulation speed</db:title>
<db:para>If you want to use <db:link xlink:href="qgeosatelliteinfosource.xml">QGeoSatelliteInfoSource</db:link> to read file with NMEA stream, you can also use additional parameter <db:code>&quot;nmea.satellite_info_simulation_interval&quot;</db:code>. This parameter is used to specify the playback rate (in milliseconds) for the satellite info messages. The minimum allowed frequency is specified by <db:link xlink:href="qgeosatelliteinfosource.xml#minimumUpdateInterval-prop">minimumUpdateInterval</db:link>(). If you specify a smaller value, it will be ignored. If no value is specified, the default value is <db:code>qMax(100, minimumUpdateInterval())</db:code>. At runtime <db:link xlink:href="qnmeasatelliteinfosource.xml#setBackendProperty">QNmeaSatelliteInfoSource::setBackendProperty</db:link>() method can be used to update this parameter.</db:para>
<db:programlisting language="cpp">// file
QVariantMap parameters;
parameters[&quot;nmea.source&quot;] = &quot;qrc:///nmealog.txt&quot;;
parameters[&quot;nmea.satellite_info_simulation_interval&quot;] = 1000;
QGeoSatelliteInfoSource *fileSource = QGeoSatelliteInfoSource::createSource(&quot;nmea&quot;, parameters, this);
</db:programlisting>
<db:para>This parameter is not applicable to position source because NMEA protocol already has timestamps in position messages. These timestamps are used to simulate the correct message rate while using <db:link xlink:href="qgeopositioninfosource.xml">QGeoPositionInfoSource</db:link> with file as a data source.</db:para>
<db:note>
<db:para>Once a <db:link xlink:href="qgeosatelliteinfosource.xml">QGeoSatelliteInfoSource</db:link> is created, it can't be reconfigured to use other type of source data.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
