<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick 3D QML Types</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides the QML types to include 3D items into a Qt Quick scene.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>This is the QML frontend for using the spatial renderer and scenegraph. For the time being, all 3D content goes through offscreen textures (FBO)s so that they can be composed into Qt Quick scenes (as a <db:link xlink:href="qquickitem.xml">QQuickItem</db:link>).</db:para>
<db:para>Qt Quick 3D provides the following QML types:</db:para>
<db:section xml:id="qtquick3d-qml-types">
<db:title>QtQuick3D QML Types</db:title>
<db:para>Import the <db:link xlink:href="qtquick3d-qmlmodule.xml">QtQuick3D</db:link> module with the following statement:</db:para>
<db:programlisting language="cpp">import QtQuick3D
</db:programlisting>
<db:variablelist role="qmltypesbymodule QtQuick3D">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-bakedlightmap.xml" xlink:role="">BakedLightmap</db:link></db:term>
<db:listitem>
<db:para>Specifies baked lightmap settings for a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-bounds.xml" xlink:role="">Bounds</db:link></db:term>
<db:listitem>
<db:para>Specifies the bounds of a model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-buffer.xml" xlink:role="">Buffer</db:link></db:term>
<db:listitem>
<db:para>Creates or references a color buffer to be used for a pass of an Effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-bufferinput.xml" xlink:role="">BufferInput</db:link></db:term>
<db:listitem>
<db:para>Defines an input buffer to be used as input for a pass of an Effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-camera.xml" xlink:role="">Camera</db:link></db:term>
<db:listitem>
<db:para>Defines an abstract base for Cameras.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-command.xml" xlink:role="">Command</db:link></db:term>
<db:listitem>
<db:para>Supertype of commands to be performed as part of a pass in an Effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-cubemaptexture.xml" xlink:role="">CubeMapTexture</db:link></db:term>
<db:listitem>
<db:para>Defines a cube map texture for use in 3D scenes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-customcamera.xml" xlink:role="">CustomCamera</db:link></db:term>
<db:listitem>
<db:para>Defines a Camera with a custom projection matrix.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-custommaterial.xml" xlink:role="">CustomMaterial</db:link></db:term>
<db:listitem>
<db:para>Base component for creating custom materials used to shade models.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-defaultmaterial.xml" xlink:role="">DefaultMaterial</db:link></db:term>
<db:listitem>
<db:para>Lets you define a material for 3D items using the specular/glossiness workflow.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-directionallight.xml" xlink:role="">DirectionalLight</db:link></db:term>
<db:listitem>
<db:para>Defines a directional light in the scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effect.xml" xlink:role="">Effect</db:link></db:term>
<db:listitem>
<db:para>Base component for creating a post-processing effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-fileinstancing.xml" xlink:role="">FileInstancing</db:link></db:term>
<db:listitem>
<db:para>Allows reading instance tables from file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-frustumcamera.xml" xlink:role="">FrustumCamera</db:link></db:term>
<db:listitem>
<db:para>Defines a PerspectiveCamera with a custom frustum.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-geometry.xml" xlink:role="">Geometry</db:link></db:term>
<db:listitem>
<db:para>Base type for custom geometry.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-instancelist.xml" xlink:role="">InstanceList</db:link></db:term>
<db:listitem>
<db:para>Allows manually specifying instancing in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-instancelistentry.xml" xlink:role="">InstanceListEntry</db:link></db:term>
<db:listitem>
<db:para>Specifies an instance in an InstanceList.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-instancing.xml" xlink:role="">Instancing</db:link></db:term>
<db:listitem>
<db:para>Base type for instance tables.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-joint.xml" xlink:role="">Joint</db:link></db:term>
<db:listitem>
<db:para>Defines a node in a skeletal animation hierarchy.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-light.xml" xlink:role="">Light</db:link></db:term>
<db:listitem>
<db:para>An uncreatable abstract base type for all lights.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-lightmapper.xml" xlink:role="">Lightmapper</db:link></db:term>
<db:listitem>
<db:para>Specifies lightmap baking settings for a scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-loader3d.xml" xlink:role="">Loader3D</db:link></db:term>
<db:listitem>
<db:para>Allows dynamic loading of a 3D subtree from a URL or Component.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-material.xml" xlink:role="">Material</db:link></db:term>
<db:listitem>
<db:para>Abstract base type providing functionality common to materials.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-model.xml" xlink:role="">Model</db:link></db:term>
<db:listitem>
<db:para>Lets you load a 3D model data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-morphtarget.xml" xlink:role="">MorphTarget</db:link></db:term>
<db:listitem>
<db:para>Defines the properties of a morph target.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-node.xml" xlink:role="">Node</db:link></db:term>
<db:listitem>
<db:para>The base component for an object that exists in a 3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-object3d.xml" xlink:role="">Object3D</db:link></db:term>
<db:listitem>
<db:para>Abstract base type of all 3D nodes and resources.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-orthographiccamera.xml" xlink:role="">OrthographicCamera</db:link></db:term>
<db:listitem>
<db:para>Defines an Camera with an orthographic projection matrix.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-pass.xml" xlink:role="">Pass</db:link></db:term>
<db:listitem>
<db:para>Defines a render pass in an Effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-perspectivecamera.xml" xlink:role="">PerspectiveCamera</db:link></db:term>
<db:listitem>
<db:para>Defines a Perspective Camera for viewing the content of a 3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-pickresult.xml" xlink:role="">PickResult</db:link></db:term>
<db:listitem>
<db:para>Contains the results of a pick.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-pointlight.xml" xlink:role="">PointLight</db:link></db:term>
<db:listitem>
<db:para>Defines a point light in the scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-principledmaterial.xml" xlink:role="">PrincipledMaterial</db:link></db:term>
<db:listitem>
<db:para>Lets you define a material for 3D items using the metal/roughness workflow.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-quaternion.xml" xlink:role="">Quaternion</db:link></db:term>
<db:listitem>
<db:para>Provides utility functions for quaternion.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-quaternionanimation.xml" xlink:role="">QuaternionAnimation</db:link></db:term>
<db:listitem>
<db:para>A PropertyAnimation for quaternions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-reflectionprobe.xml" xlink:role="">ReflectionProbe</db:link></db:term>
<db:listitem>
<db:para>Defines a reflection probe in the scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-renderstats.xml" xlink:role="">RenderStats</db:link></db:term>
<db:listitem>
<db:para>Provides information of the scene rendering.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-repeater3d.xml" xlink:role="">Repeater3D</db:link></db:term>
<db:listitem>
<db:para>Instantiates a number of Node-based components using a provided model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-resourceloader.xml" xlink:role="">ResourceLoader</db:link></db:term>
<db:listitem>
<db:para>Allows pre-loading of 3D resources.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-sceneenvironment.xml" xlink:role="">SceneEnvironment</db:link></db:term>
<db:listitem>
<db:para>Lets you configure how a scene is rendered.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-setuniformvalue.xml" xlink:role="">SetUniformValue</db:link></db:term>
<db:listitem>
<db:para>Defines a value to be set during a single pass.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-shader.xml" xlink:role="">Shader</db:link></db:term>
<db:listitem>
<db:para>Container component for defining shader code used by post-processing effects.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-skeleton.xml" xlink:role="">Skeleton</db:link></db:term>
<db:listitem>
<db:para>Defines a skeletal animation hierarchy.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-skin.xml" xlink:role="">Skin</db:link></db:term>
<db:listitem>
<db:para>Defines a skinning animation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-specularglossymaterial.xml" xlink:role="">SpecularGlossyMaterial</db:link></db:term>
<db:listitem>
<db:para>Lets you define a material for 3D items using the specular/glossiness workflow.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-spotlight.xml" xlink:role="">SpotLight</db:link></db:term>
<db:listitem>
<db:para>Defines a spot light in the scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-texture.xml" xlink:role="">Texture</db:link></db:term>
<db:listitem>
<db:para>Defines a texture for use in 3D scenes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-texturedata.xml" xlink:role="">TextureData</db:link></db:term>
<db:listitem>
<db:para>Base type for custom texture data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-textureinput.xml" xlink:role="">TextureInput</db:link></db:term>
<db:listitem>
<db:para>Specifies a texture exposed to the shaders of a CustomMaterial or Effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-view3d.xml" xlink:role="">View3D</db:link></db:term>
<db:listitem>
<db:para>Provides a viewport on which to render a 3D scene.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:programlisting language="cpp">import QtQuick3D.Effects
</db:programlisting>
<db:variablelist role="qmltypesbymodule QtQuick3D.Effects">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-additivecolorgradient.xml" xlink:role="">AdditiveColorGradient</db:link></db:term>
<db:listitem>
<db:para>A gradient with additive color effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-blur.xml" xlink:role="">Blur</db:link></db:term>
<db:listitem>
<db:para>A one-pass blur effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-brushstrokes.xml" xlink:role="">BrushStrokes</db:link></db:term>
<db:listitem>
<db:para>A brush strokes noise effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-chromaticaberration.xml" xlink:role="">ChromaticAberration</db:link></db:term>
<db:listitem>
<db:para>A chromatic aberration effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-colormaster.xml" xlink:role="">ColorMaster</db:link></db:term>
<db:listitem>
<db:para>A color adjustment effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-depthoffieldhqblur.xml" xlink:role="">DepthOfFieldHQBlur</db:link></db:term>
<db:listitem>
<db:para>A depth-based blur effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-desaturate.xml" xlink:role="">Desaturate</db:link></db:term>
<db:listitem>
<db:para>A desaturating effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-distortionripple.xml" xlink:role="">DistortionRipple</db:link></db:term>
<db:listitem>
<db:para>A ripple distortion effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-distortionsphere.xml" xlink:role="">DistortionSphere</db:link></db:term>
<db:listitem>
<db:para>A sphere distortion effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-distortionspiral.xml" xlink:role="">DistortionSpiral</db:link></db:term>
<db:listitem>
<db:para>A spiral distortion effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-edgedetect.xml" xlink:role="">EdgeDetect</db:link></db:term>
<db:listitem>
<db:para>An edge highlighting effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-emboss.xml" xlink:role="">Emboss</db:link></db:term>
<db:listitem>
<db:para>An emboss effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-flip.xml" xlink:role="">Flip</db:link></db:term>
<db:listitem>
<db:para>A scene flipping effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-fxaa.xml" xlink:role="">Fxaa</db:link></db:term>
<db:listitem>
<db:para>A fast approximate anti-aliasing effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-gaussianblur.xml" xlink:role="">GaussianBlur</db:link></db:term>
<db:listitem>
<db:para>A two-pass gaussian blur effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-hdrbloomtonemap.xml" xlink:role="">HDRBloomTonemap</db:link></db:term>
<db:listitem>
<db:para>A bloom with tonemapping effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-motionblur.xml" xlink:role="">MotionBlur</db:link></db:term>
<db:listitem>
<db:para>A motion blur effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-scurvetonemap.xml" xlink:role="">SCurveTonemap</db:link></db:term>
<db:listitem>
<db:para>A tonemapping effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-scatter.xml" xlink:role="">Scatter</db:link></db:term>
<db:listitem>
<db:para>A scatter noise effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-tiltshift.xml" xlink:role="">TiltShift</db:link></db:term>
<db:listitem>
<db:para>A tilt shift blur effect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-effects-vignette.xml" xlink:role="">Vignette</db:link></db:term>
<db:listitem>
<db:para>A vignette effect.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qtquick3d-helpers-qml-types">
<db:title>QtQuick3D.Helpers QML Types</db:title>
<db:para>Import the <db:link xlink:href="qtquick3d-qmlmodule.xml">QtQuick3D</db:link>.Helpers module with the following statement:</db:para>
<db:programlisting language="cpp">import QtQuick3D.Helpers
</db:programlisting>
<db:variablelist role="qmltypesbymodule QtQuick3D.Helpers">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-helpers-axishelper.xml" xlink:role="">AxisHelper</db:link></db:term>
<db:listitem>
<db:para>Visual helper for showing the 3 axes and a grid in a 3D scene.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-helpers-debugview.xml" xlink:role="">DebugView</db:link></db:term>
<db:listitem>
<db:para>View to show render statistics.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-helpers-gridgeometry.xml" xlink:role="">GridGeometry</db:link></db:term>
<db:listitem>
<db:para>A custom geometry provider for rendering grids.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-helpers-heightfieldgeometry.xml" xlink:role="">HeightFieldGeometry</db:link></db:term>
<db:listitem>
<db:para>A height field geometry.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-helpers-instancemodel.xml" xlink:role="">InstanceModel</db:link></db:term>
<db:listitem>
<db:para>Defines a data model based on an instance table.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-helpers-instancerange.xml" xlink:role="">InstanceRange</db:link></db:term>
<db:listitem>
<db:para>Specifies a range for RandomInstancing.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-helpers-instancerepeater.xml" xlink:role="">InstanceRepeater</db:link></db:term>
<db:listitem>
<db:para>Instantiates components based on an instance table.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-helpers-lookatnode.xml" xlink:role="">LookAtNode</db:link></db:term>
<db:listitem>
<db:para>A helper node that is automatically kept pointing at another node.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-helpers-orbitcameracontroller.xml" xlink:role="">OrbitCameraController</db:link></db:term>
<db:listitem>
<db:para>Camera Controller which rotates around an origin.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-helpers-proceduralskytexturedata.xml" xlink:role="">ProceduralSkyTextureData</db:link></db:term>
<db:listitem>
<db:para>Generates an HDR skybox cubemap.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-helpers-randominstancing.xml" xlink:role="">RandomInstancing</db:link></db:term>
<db:listitem>
<db:para>Generates a random instancing table.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-helpers-wasdcontroller.xml" xlink:role="">WasdController</db:link></db:term>
<db:listitem>
<db:para>Control node position and orientation with keys and mouse.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qtquick3d-assetutils-qml-types">
<db:title>QtQuick3D.AssetUtils QML Types</db:title>
<db:para>Import the <db:link xlink:href="qtquick3d-qmlmodule.xml">QtQuick3D</db:link>.AssetUtils module with the following statement:</db:para>
<db:programlisting language="cpp">import QtQuick3D.AssetUtils
</db:programlisting>
<db:variablelist role="qmltypesbymodule QtQuick3D.AssetUtils">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-assetutils-runtimeloader.xml" xlink:role="">RuntimeLoader</db:link></db:term>
<db:listitem>
<db:para>Imports a 3D asset at runtime.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qtquick3d-particles3d-qml-types">
<db:title>QtQuick3D.Particles3D QML Types</db:title>
<db:para>Import the <db:link xlink:href="qtquick3d-qmlmodule.xml">QtQuick3D</db:link>.Particles3D module with the following statement:</db:para>
<db:programlisting language="cpp">import QtQuick3D.Particles3D
</db:programlisting>
<db:variablelist role="qmltypesbymodule QtQuick3D.Particles3D">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-affector3d.xml" xlink:role="">Affector3D</db:link></db:term>
<db:listitem>
<db:para>Affectors modify the attributes of particles during their lifetime.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-attractor3d.xml" xlink:role="">Attractor3D</db:link></db:term>
<db:listitem>
<db:para>Attracts particles towards a position or a shape.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-direction3d.xml" xlink:role="">Direction3D</db:link></db:term>
<db:listitem>
<db:para>Directions assign velocity for the emitted particles.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-dynamicburst3d.xml" xlink:role="">DynamicBurst3D</db:link></db:term>
<db:listitem>
<db:para>Dynamic emitter bursts.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-emitburst3d.xml" xlink:role="">EmitBurst3D</db:link></db:term>
<db:listitem>
<db:para>Declarative emitter bursts.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-gravity3d.xml" xlink:role="">Gravity3D</db:link></db:term>
<db:listitem>
<db:para>Accelerates particles to a vector of the specified magnitude in the specified direction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-lineparticle3d.xml" xlink:role="">LineParticle3D</db:link></db:term>
<db:listitem>
<db:para>Line particle.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-modelblendparticle3d.xml" xlink:role="">ModelBlendParticle3D</db:link></db:term>
<db:listitem>
<db:para>Blends particle effect with a 3D model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-modelparticle3d.xml" xlink:role="">ModelParticle3D</db:link></db:term>
<db:listitem>
<db:para>Particle using a Qt Quick 3D Model.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-particle3d.xml" xlink:role="">Particle3D</db:link></db:term>
<db:listitem>
<db:para>Abstract logical particle.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-particleabstractshape3d.xml" xlink:role="">ParticleAbstractShape3D</db:link></db:term>
<db:listitem>
<db:para>Abstract base type of particle shapes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-particlecustomshape3d.xml" xlink:role="">ParticleCustomShape3D</db:link></db:term>
<db:listitem>
<db:para>Loads custom particle shapes for emitters and affectors.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml" xlink:role="">ParticleEmitter3D</db:link></db:term>
<db:listitem>
<db:para>Emitter for logical particles.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-particlemodelshape3d.xml" xlink:role="">ParticleModelShape3D</db:link></db:term>
<db:listitem>
<db:para>Offers particle shape from model for emitters and affectors.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-particleshape3d.xml" xlink:role="">ParticleShape3D</db:link></db:term>
<db:listitem>
<db:para>Offers 3D shapes for emitters and affectors.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-particlesystem3d.xml" xlink:role="">ParticleSystem3D</db:link></db:term>
<db:listitem>
<db:para>A system which includes particle, emitter, and affector types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-particlesystem3dlogging.xml" xlink:role="">ParticleSystem3DLogging</db:link></db:term>
<db:listitem>
<db:para>Provides information of the particle system.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-pointrotator3d.xml" xlink:role="">PointRotator3D</db:link></db:term>
<db:listitem>
<db:para>Rotates particles around a pivot point.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-repeller3d.xml" xlink:role="">Repeller3D</db:link></db:term>
<db:listitem>
<db:para>Particle repeller.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-scaleaffector3d.xml" xlink:role="">ScaleAffector3D</db:link></db:term>
<db:listitem>
<db:para>Particle scale affector.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-spriteparticle3d.xml" xlink:role="">SpriteParticle3D</db:link></db:term>
<db:listitem>
<db:para>Particle using a 2D sprite texture.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-spritesequence3d.xml" xlink:role="">SpriteSequence3D</db:link></db:term>
<db:listitem>
<db:para>Provides image sequence features for the Sprite particles.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-targetdirection3d.xml" xlink:role="">TargetDirection3D</db:link></db:term>
<db:listitem>
<db:para>For specifying a direction towards the target position.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-trailemitter3d.xml" xlink:role="">TrailEmitter3D</db:link></db:term>
<db:listitem>
<db:para>Emitter for logical particles from other particles.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-vectordirection3d.xml" xlink:role="">VectorDirection3D</db:link></db:term>
<db:listitem>
<db:para>For specifying a direction towards the target direction.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtquick3d-particles3d-wander3d.xml" xlink:role="">Wander3D</db:link></db:term>
<db:listitem>
<db:para>Applies random wave curves to particles.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
</db:article>
