<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt WebChannel ChatClient QML Application</db:title>
<db:productname>QtWebChannel</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebChannel Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A QML client that communicates over a WebSocket with a <db:link xlink:href="qwebchannel.xml">QWebChannel</db:link> server.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/chatclient-qml.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:emphasis>ChatClient QML</db:emphasis> provides a simple <db:link xlink:href="qwebchannel.xml">QWebChannel</db:link> client implemented using JavaScript and QML.</db:para>
<db:section xml:id="implementing-a-web-channel-client-in-qml">
<db:title>Implementing a Web Channel Client in QML</db:title>
<db:para>This example shows how you can use the basic elements with the client JavaScript implementation of <db:link xlink:href="qwebchannel.xml">QWebChannel</db:link>, like connecting to signals (<db:code>newMessage</db:code>), calling slots (<db:code>sendMessage</db:code>), and handling property changes (<db:code>userList</db:code>).</db:para>
<db:para>The client initializes a <db:link xlink:href="qml-qtwebsockets-websocket.xml">WebSocket</db:link> connection to the chat server at port 12345 on localhost. When the WebSocket opens, a WebChannel object is created, taking the WebSocket as first argument and a callback function as the second argument. When the callback is called, the client receives an object named <db:code>chatserver</db:code>, containing all the necessary signals, slots, and properties for implementing a chat client. The callback function connects <db:code>userListChanged</db:code>, <db:code>newMessage</db:code>, and <db:code>keepAlive</db:code> on the <db:code>chatserver</db:code> object with separate functions handling those signals, and then it calls <db:code>show</db:code> on <db:code>loginWindow</db:code>.</db:para>
<db:para>The <db:code>Window</db:code> with <db:code>loginWindow</db:code> as id handles the login procedure. It contains a <db:code>LoginForm</db:code> defined in LoginForm.ui.qml. When you press the button, it calls the <db:code>login</db:code> function on the <db:code>chatserver</db:code> object with the login name and and a callback function as arguments. This callback function handles both if the login succeeds or fails.</db:para>
<db:para>After login, the client uses a <db:code>MainForm</db:code>, defined in MainForm.ui.qml, with <db:code>mainUi</db:code> as id, to post messages using the <db:code>sendMessage</db:code> slot, read messages using the <db:code>newMessage</db:code> signal, and to view the names of all connected users using the <db:code>userList</db:code> property. Also, the client responds to the server's <db:code>keepAlive</db:code> signal in order for the server to detect disconnected clients and remove them from the <db:code>userList</db:code> property.</db:para>
<db:para>The client is able to work with the <db:link xlink:href="qtwebchannel-chatserver-cpp-example.xml">Qt WebChannel ChatServer Example</db:link>.</db:para>
</db:section>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtwebchannel.git/tree/examples/webchannel/chatclient-qml?h=6.7">Example project @ code.qt.io</db:link></db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtwebchannel-chatserver-cpp-example.xml">Qt WebChannel ChatServer Example</db:link></db:member>
<db:member><db:link xlink:href="qtwebchannel-chatclient-html-example.xml">Qt WebChannel ChatClient HTML Example</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
