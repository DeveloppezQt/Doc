<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Use Case - Style And Theme Support</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Example of how to style user interface components in QML.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Styling with QML involves creating a visual type and binding that to a property or by directly assigning a value to a property. For types that incorporate Qt Quick's <db:link xlink:href="qtquick-modelviewsdata-modelview.xml">delegates</db:link> the visual type attaches to the <db:emphasis>delegate</db:emphasis> property.</db:para>
<db:para>When using <db:link xlink:href="qtquickcontrols1-index.xml">Qt Quick Controls 1</db:link>, the controls automatically set the appropriate style from the respective <db:link xlink:href="supported-platforms.xml">platforms</db:link>.</db:para>
<db:section xml:id="using-the-styling-qml-types">
<db:title>Using the Styling QML Types</db:title>
<db:para>The <db:link xlink:href="qtquickcontrols1-index.xml">controls</db:link> have a style property to which the <db:emphasis>styling types</db:emphasis> bind. The controls have a corresponding styling type from the <db:link xlink:href="qtquick-controls-styles-qmlmodule.xml">Qt Quick Controls 1 Styles</db:link> module. For example, <db:link xlink:href="qml-qtquick-controls2-button.xml">Button</db:link> has a <db:link xlink:href="qml-qtquick-controls-styles-buttonstyle.xml">ButtonStyle</db:link> type and <db:link xlink:href="qml-qtquick-controls2-menu.xml">Menu</db:link> has a <db:link xlink:href="qml-qtquick-controls-styles-menustyle.xml">MenuStyle</db:link> type. The styling types provide properties applicable to their respective controls such as the background, label, or for some controls, the cursor appearance.</db:para>
<db:programlisting language="qml">Button {
    text: qsTr(&quot;Hello World&quot;)
    style: ButtonStyle {
        background: Rectangle {
            implicitWidth: 100
            implicitHeight: 25
            border.width: control.activeFocus ? 2 : 1
            border.color: &quot;#FFF&quot;
            radius: 4
            gradient: Gradient {
                GradientStop { position: 0 ; color: control.pressed ? &quot;#ccc&quot; : &quot;#fff&quot; }
                GradientStop { position: 1 ; color: control.pressed ? &quot;#000&quot; : &quot;#fff&quot; }
            }
        }
   }
</db:programlisting>
<db:note>
<db:para><db:link xlink:href="qtquick-controls-styles-qmlmodule.xml">Qt Quick Controls 1 Styles</db:link> was introduced in Qt 5.1 and requires <db:link xlink:href="qtquick-index.xml">Qt Quick</db:link> 2.1.</db:para>
</db:note>
</db:section>
<db:section xml:id="accessing-the-system-palette">
<db:title>Accessing the System Palette</db:title>
<db:para>The <db:link xlink:href="qml-qtquick-systempalette.xml">SystemPalette</db:link> type provides information about the system's palette information. QML applications can use this information to set the appearance of visual types to match the native look-and-feel. In addition, on <db:link xlink:href="supported-platforms.xml#desktop-platforms">desktop</db:link> platforms, different color palettes are employed when changing states, for example, when the application loses keyboard focus.</db:para>
<db:para>When using the <db:link xlink:href="qtquickcontrols1-index.xml">controls</db:link>, the system colors are already used.</db:para>
</db:section>
</db:article>
