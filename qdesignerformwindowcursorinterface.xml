<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QDesignerFormWindowCursorInterface Class</db:title>
<db:productname>QtDesigner</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Designer Manual</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdesignerformwindowcursorinterface.xml">QDesignerFormWindowCursorInterface</db:link> class allows you to query and modify a form window's widget selection, and in addition modify the properties of all the form's widgets.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDesignerFormWindowCursorInterface</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += designer</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qdesignerformwindowcursorinterface.xml">QDesignerFormWindowCursorInterface</db:link> is a convenience class that provides an interface to the associated form window's text cursor; it provides a collection of functions that enables you to query a given form window's selection and change the selection's focus according to defined modes (<db:link xlink:href="qdesignerformwindowcursorinterface.xml#MoveMode-enum">MoveMode</db:link>) and movements (<db:link xlink:href="qdesignerformwindowcursorinterface.xml#MoveOperation-enum">MoveOperation</db:link>). You can also use the interface to query the form's widgets and change their properties.</db:para>
<db:para>The interface is not intended to be instantiated directly, but to provide access to the selections and widgets of <db:emphasis>Qt Designer</db:emphasis>'s current form windows. <db:link xlink:href="qdesignerformwindowinterface.xml">QDesignerFormWindowInterface</db:link> always provides an associated cursor interface. The form window for a given widget can be retrieved using the static <db:link xlink:href="qdesignerformwindowinterface.xml#findFormWindow">QDesignerFormWindowInterface::findFormWindow</db:link>() functions. For example:</db:para>
<db:programlisting language="cpp">    QDesignerFormWindowInterface *formWindow = 0;
    formWindow = QDesignerFormWindowInterface::findFormWindow(myWidget);

    formWindow-&gt;cursor()-&gt;setProperty(myWidget, myProperty, newValue);
</db:programlisting>
<db:para>You can retrieve any of <db:emphasis>Qt Designer</db:emphasis>'s current form windows through <db:emphasis>Qt Designer</db:emphasis>'s <db:link xlink:href="qdesignerformwindowmanagerinterface.xml">form window manager</db:link>.</db:para>
<db:para>Once you have a form window's cursor interface, you can check if the form window has a selection at all using the <db:link xlink:href="qdesignerformwindowcursorinterface.xml#hasSelection">hasSelection</db:link>() function. You can query the form window for its total <db:link xlink:href="qdesignerformwindowcursorinterface.xml#widgetCount">widgetCount</db:link>() and <db:link xlink:href="qdesignerformwindowcursorinterface.xml#selectedWidgetCount">selectedWidgetCount</db:link>(). You can retrieve the currently selected widget (or widgets) using the <db:link xlink:href="qdesignerformwindowcursorinterface.xml#current">current</db:link>() or <db:link xlink:href="qdesignerformwindowcursorinterface.xml#selectedWidget">selectedWidget</db:link>() functions.</db:para>
<db:para>You can retrieve any of the form window's widgets using the <db:link xlink:href="qdesignerformwindowcursorinterface.xml#widget">widget</db:link>() function, and check if a widget is selected using the <db:link xlink:href="qdesignerformwindowcursorinterface.xml#isWidgetSelected">isWidgetSelected</db:link>() function. You can use the <db:link xlink:href="qdesignerformwindowcursorinterface.xml#setProperty">setProperty</db:link>() function to set the selected widget's properties, and the <db:link xlink:href="qdesignerformwindowcursorinterface.xml#setWidgetProperty">setWidgetProperty</db:link>() or <db:link xlink:href="qdesignerformwindowcursorinterface.xml#resetWidgetProperty">resetWidgetProperty</db:link>() functions to modify the properties of any given widget.</db:para>
<db:para>Finally, you can change the selection by changing the text cursor's <db:link xlink:href="qdesignerformwindowcursorinterface.xml#position">position</db:link>() using the <db:link xlink:href="qdesignerformwindowcursorinterface.xml#setPosition">setPosition</db:link>() and <db:link xlink:href="qdesignerformwindowcursorinterface.xml#movePosition">movePosition</db:link>() functions.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowinterface.xml">QDesignerFormWindowInterface</db:link></db:member>
<db:member><db:link xlink:href="qdesignerformwindowmanagerinterface.xml">QDesignerFormWindowManagerInterface</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="MoveMode-enum">
<db:title>enum QDesignerFormWindowCursorInterface::MoveMode</db:title>
<db:para>This enum describes the different modes that are used when the text cursor moves.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowcursorinterface.xml">QDesignerFormWindowCursorInterface</db:link></db:emphasis>::MoveAnchor</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The anchor moves with the cursor to its new location.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowcursorinterface.xml">QDesignerFormWindowCursorInterface</db:link></db:emphasis>::KeepAnchor</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The anchor remains at the cursor's old location.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="MoveOperation-enum">
<db:title>enum QDesignerFormWindowCursorInterface::MoveOperation</db:title>
<db:para>This enum describes the types of text cursor operation that can occur in a form window.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowcursorinterface.xml">QDesignerFormWindowCursorInterface</db:link></db:emphasis>::NoMove</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The cursor does not move.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowcursorinterface.xml">QDesignerFormWindowCursorInterface</db:link></db:emphasis>::Start</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Moves the cursor to the start of the focus chain.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowcursorinterface.xml">QDesignerFormWindowCursorInterface</db:link></db:emphasis>::End</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Moves the cursor to the end of the focus chain.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowcursorinterface.xml">QDesignerFormWindowCursorInterface</db:link></db:emphasis>::Next</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Moves the cursor to the next widget in the focus chain.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowcursorinterface.xml">QDesignerFormWindowCursorInterface</db:link></db:emphasis>::Prev</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>Moves the cursor to the previous widget in the focus chain.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowcursorinterface.xml">QDesignerFormWindowCursorInterface</db:link></db:emphasis>::Left</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>The cursor moves to the left.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowcursorinterface.xml">QDesignerFormWindowCursorInterface</db:link></db:emphasis>::Right</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>The cursor moves to the right.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowcursorinterface.xml">QDesignerFormWindowCursorInterface</db:link></db:emphasis>::Up</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>The cursor moves upwards.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdesignerformwindowcursorinterface.xml">QDesignerFormWindowCursorInterface</db:link></db:emphasis>::Down</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>The cursor moves downwards.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="dtor.QDesignerFormWindowCursorInterface">
<db:title>[virtual noexcept] QDesignerFormWindowCursorInterface::~QDesignerFormWindowCursorInterface()</db:title>
<db:para>Destroys the cursor interface.</db:para>
</db:section>
<db:section xml:id="current">
<db:title>[pure virtual] QWidget *QDesignerFormWindowCursorInterface::current() const</db:title>
<db:para>Returns the currently selected widget in the form window.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#selectedWidget">selectedWidget</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="formWindow">
<db:title>[pure virtual] QDesignerFormWindowInterface *QDesignerFormWindowCursorInterface::formWindow() const</db:title>
<db:para>Returns the form window interface associated with this cursor interface.</db:para>
</db:section>
<db:section xml:id="hasSelection">
<db:title>[pure virtual] bool QDesignerFormWindowCursorInterface::hasSelection() const</db:title>
<db:para>Returns true if the form window contains a selection; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="isWidgetSelected">
<db:title>bool QDesignerFormWindowCursorInterface::isWidgetSelected(QWidget *<db:emphasis>widget</db:emphasis>) const</db:title>
<db:para>Returns true if the specified <db:code role="parameter">widget</db:code> is selected; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="movePosition">
<db:title>[pure virtual] bool QDesignerFormWindowCursorInterface::movePosition(QDesignerFormWindowCursorInterface::MoveOperation <db:emphasis>operation</db:emphasis>, QDesignerFormWindowCursorInterface::MoveMode <db:emphasis>mode</db:emphasis> = MoveAnchor)</db:title>
<db:para>Performs the given <db:code role="parameter">operation</db:code> on the cursor using the specified <db:code role="parameter">mode</db:code>, and returns true if it completed successfully; otherwise returns false.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#position">position</db:link>()</db:member>
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#setPosition">setPosition</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="position">
<db:title>[pure virtual] int QDesignerFormWindowCursorInterface::position() const</db:title>
<db:para>Returns the cursor position.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#setPosition">setPosition</db:link>()</db:member>
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#movePosition">movePosition</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="resetWidgetProperty">
<db:title>[pure virtual] void QDesignerFormWindowCursorInterface::resetWidgetProperty(QWidget *<db:emphasis>widget</db:emphasis>, const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Resets the property with the given <db:code role="parameter">name</db:code> for the specified <db:code role="parameter">widget</db:code> to its default value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#setProperty">setProperty</db:link>()</db:member>
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#setWidgetProperty">setWidgetProperty</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectedWidget">
<db:title>[pure virtual] QWidget *QDesignerFormWindowCursorInterface::selectedWidget(int <db:emphasis>index</db:emphasis>) const</db:title>
<db:para>Returns the widget with the given <db:code role="parameter">index</db:code> in the list of selected widgets.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#current">current</db:link>()</db:member>
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#widget">widget</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectedWidgetCount">
<db:title>[pure virtual] int QDesignerFormWindowCursorInterface::selectedWidgetCount() const</db:title>
<db:para>Returns the number of selected widgets in the form window.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#widgetCount">widgetCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPosition">
<db:title>[pure virtual] void QDesignerFormWindowCursorInterface::setPosition(int <db:emphasis>position</db:emphasis>, QDesignerFormWindowCursorInterface::MoveMode <db:emphasis>mode</db:emphasis> = MoveAnchor)</db:title>
<db:para>Sets the position of the cursor to the given <db:code role="parameter">position</db:code> using the <db:code role="parameter">mode</db:code> to specify how it is moved there.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#position">position</db:link>()</db:member>
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#movePosition">movePosition</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setProperty">
<db:title>[pure virtual] void QDesignerFormWindowCursorInterface::setProperty(const QString &amp;<db:emphasis>name</db:emphasis>, const QVariant &amp;<db:emphasis>value</db:emphasis>)</db:title>
<db:para>Sets the property with the given <db:code role="parameter">name</db:code> for the currently selected widget to the specified <db:code role="parameter">value</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#setWidgetProperty">setWidgetProperty</db:link>()</db:member>
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#resetWidgetProperty">resetWidgetProperty</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setWidgetProperty">
<db:title>[pure virtual] void QDesignerFormWindowCursorInterface::setWidgetProperty(QWidget *<db:emphasis>widget</db:emphasis>, const QString &amp;<db:emphasis>name</db:emphasis>, const QVariant &amp;<db:emphasis>value</db:emphasis>)</db:title>
<db:para>Sets the property with the given <db:code role="parameter">name</db:code> for the given <db:code role="parameter">widget</db:code> to the specified <db:code role="parameter">value</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#resetWidgetProperty">resetWidgetProperty</db:link>()</db:member>
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#setProperty">setProperty</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="widget">
<db:title>[pure virtual] QWidget *QDesignerFormWindowCursorInterface::widget(int <db:emphasis>index</db:emphasis>) const</db:title>
<db:para>Returns the widget with the given <db:code role="parameter">index</db:code> in the list of widgets in the form window.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#selectedWidget">selectedWidget</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="widgetCount">
<db:title>[pure virtual] int QDesignerFormWindowCursorInterface::widgetCount() const</db:title>
<db:para>Returns the number of widgets in the form window.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdesignerformwindowcursorinterface.xml#selectedWidgetCount">selectedWidgetCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
