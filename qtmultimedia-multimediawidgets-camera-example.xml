<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Camera Example</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Camera Example shows how to use the API to capture a still image or video.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Camera Example demonstrates how you can use <db:link xlink:href="qtmultimedia-index.xml">Qt Multimedia</db:link> to implement some basic Camera functionality to take still images and record video clips with audio.</db:para>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="http://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
<db:para>A Camera class is created that will act as our Camera. It has a user interface, control functions, setting values and a means of defining the location where the image or video clip is to be saved. It will also store the image and video settings.</db:para>
<db:para>The Camera class contains an instance of <db:link xlink:href="qcamera.xml">QCamera</db:link>, the API class interface to the hardware. It also has an instance of <db:link xlink:href="qcameraimagecapture.xml">QCameraImageCapture</db:link> to take still images and an instance of <db:link xlink:href="qmediarecorder.xml">QMediaRecorder</db:link> to record video. It also contains the user interface object.</db:para>
<db:para>The Camera constructor does some basic initialization. The camera object is set to '0', the user interface is initialized and UI signal are connected to slots that react to the triggering event. However, most of the work is done when the <db:emphasis>setCamera()</db:emphasis> function is called, passing in a <db:link xlink:href="qbytearray.xml">QByteArray</db:link>.</db:para>
<db:para><db:emphasis>setCamera()</db:emphasis> sets up various connections between the user interface and the functionality of the Camera class using signals and slots. It also instantiates and initializes the <db:link xlink:href="qcamera.xml">QCamera</db:link>, <db:link xlink:href="qcameraimagecapture.xml">QCameraImageCapture</db:link> and <db:link xlink:href="qmediarecorder.xml">QMediaRecorder</db:link> objects mentioned above. The still and video recording visual tabs are enabled and finally the <db:link xlink:href="qcamera.xml#start">start</db:link>() function of the <db:link xlink:href="qcamera.xml">QCamera</db:link> object is called.</db:para>
<db:para>Now that the camera is ready for user commands it waits for a suitable event. Such an event will be the key press of either the <db:link xlink:href="qt.xml#Key-enum">Qt::Key_CameraFocus</db:link> or <db:link xlink:href="qt.xml#Key-enum">Qt::Key_Camera</db:link> buttons on the application window. Camera focus will simply display the viewfinder and lock the camera settings. Key_Camera will either call <db:emphasis>takeImage()</db:emphasis> if the <db:link xlink:href="qcamera.xml#captureMode-prop">captureMode</db:link>() is <db:link xlink:href="qcamera.xml#CaptureMode-enum">QCamera::CaptureStillImage</db:link>, or if the capture mode is for video then one of two actions will occur. If the recording state shows that we are currently recording then the <db:emphasis>stop()</db:emphasis> function is called resulting in a call to <db:link xlink:href="qcamera.xml#stop">QCamera::stop</db:link>(), whereas if we are not recording then a video recording is started with a call to <db:link xlink:href="qmediarecorder.xml#record">QMediaRecorder::record</db:link>().</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/camera-example.png"/>
</db:imageobject>
</db:mediaobject>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="multimediawidgets/camera/camera.cpp">multimediawidgets/camera/camera.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediawidgets/camera/camera.h">multimediawidgets/camera/camera.h</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediawidgets/camera/camera.pro">multimediawidgets/camera/camera.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediawidgets/camera/camera.qrc">multimediawidgets/camera/camera.qrc</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediawidgets/camera/camera.ui">multimediawidgets/camera/camera.ui</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediawidgets/camera/images/shutter.svg">multimediawidgets/camera/images/shutter.svg</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediawidgets/camera/imagesettings.cpp">multimediawidgets/camera/imagesettings.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediawidgets/camera/imagesettings.h">multimediawidgets/camera/imagesettings.h</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediawidgets/camera/imagesettings.ui">multimediawidgets/camera/imagesettings.ui</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediawidgets/camera/main.cpp">multimediawidgets/camera/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediawidgets/camera/videosettings.cpp">multimediawidgets/camera/videosettings.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediawidgets/camera/videosettings.h">multimediawidgets/camera/videosettings.h</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="multimediawidgets/camera/videosettings.ui">multimediawidgets/camera/videosettings.ui</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
