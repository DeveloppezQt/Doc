<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSGGeometryNode Class</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qsggeometrynode.xml">QSGGeometryNode</db:link> class is used for all rendered content in the scene graph.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSGGeometryNode</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += quick</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qsgbasicgeometrynode.xml" xlink:role="class">QSGBasicGeometryNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qsgsimplerectnode.xml" xlink:role="class">QSGSimpleRectNode</db:link> and <db:link xlink:href="qsgsimpletexturenode.xml" xlink:role="class">QSGSimpleTextureNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSGGeometryNode is part of <db:simplelist><db:member><db:link xlink:href="qtquick-scenegraph-nodes.xml">Qt Quick Scene Graph Node classes</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qsggeometrynode.xml">QSGGeometryNode</db:link> consists of geometry and material. The geometry defines the mesh, the vertices and their structure, to be drawn. The Material defines how the shape is filled.</db:para>
<db:para>The following is a code snippet illustrating how to create a red line using a <db:link xlink:href="qsggeometrynode.xml">QSGGeometryNode</db:link>:</db:para>
<db:programlisting language="cpp">QSGGeometry *geometry = new QSGGeometry(QSGGeometry::defaultAttributes_Point2D(), 2);
geometry-&gt;setDrawingMode(GL_LINES);
geometry-&gt;setLineWidth(3);
geometry-&gt;vertexDataAsPoint2D()[0].set(0, 0);
geometry-&gt;vertexDataAsPoint2D()[1].set(width(), height());

QSGFlatColorMaterial *material = new QSGFlatColorMaterial;
material-&gt;setColor(QColor(255, 0, 0));

QSGGeometryNode *node = new QSGGeometryNode;
node-&gt;setGeometry(geometry);
node-&gt;setFlag(QSGNode::OwnsGeometry);
node-&gt;setMaterial(material);
node-&gt;setFlag(QSGNode::OwnsMaterial);
</db:programlisting>
<db:para>A geometry node must have both geometry and a normal material before it is added to the scene graph. When the geometry and materials are changed after the node has been added to the scene graph, the user should also mark them as dirty using <db:link xlink:href="qsgnode.xml#markDirty">QSGNode::markDirty</db:link>().</db:para>
<db:para>The geometry node supports two types of materials, the <db:link xlink:href="qsggeometrynode.xml#opaqueMaterial">opaqueMaterial</db:link> and the normal material. The <db:link xlink:href="qsggeometrynode.xml#opaqueMaterial">opaqueMaterial</db:link> is used when the accumulated scene graph opacity at the time of rendering is 1. The primary usecase is to special case opaque rendering to avoid an extra operation in the fragment shader can have significant performance impact on embedded graphics chips. The opaque material is optional.</db:para>
<db:note>
<db:para>All classes with QSG prefix should be used solely on the scene graph's rendering thread. See <db:link xlink:href="qtquick-visualcanvas-scenegraph.xml#scene-graph-and-rendering">Scene Graph and Rendering</db:link> for more information.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsggeometry.xml">QSGGeometry</db:link></db:member>
<db:member><db:link xlink:href="qsgmaterial.xml">QSGMaterial</db:link></db:member>
<db:member><db:link xlink:href="qsgsimplematerial.xml">QSGSimpleMaterial</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSGGeometryNode">
<db:title>QSGGeometryNode::QSGGeometryNode()</db:title>
<db:para>Creates a new geometry node without geometry and material.</db:para>
</db:section>
<db:section xml:id="dtor.QSGGeometryNode">
<db:title>[virtual noexcept] QSGGeometryNode::~QSGGeometryNode()</db:title>
<db:para>Deletes this geometry node.</db:para>
<db:para>The flags <db:link xlink:href="qsgnode.xml#Flag-enum">QSGNode::OwnsMaterial</db:link>, <db:link xlink:href="qsgnode.xml#Flag-enum">QSGNode::OwnsOpaqueMaterial</db:link> and <db:link xlink:href="qsgnode.xml#Flag-enum">QSGNode::OwnsGeometry</db:link> decides weither the geometry node should also delete the materials and geometry. By default, these flags are disabled.</db:para>
</db:section>
<db:section xml:id="material">
<db:title>QSGMaterial *QSGGeometryNode::material() const</db:title>
<db:para>Returns the material of the <db:link xlink:href="qsggeometrynode.xml">QSGGeometryNode</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsggeometrynode.xml#setMaterial">setMaterial</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="opaqueMaterial">
<db:title>QSGMaterial *QSGGeometryNode::opaqueMaterial() const</db:title>
<db:para>Returns the opaque material of the <db:link xlink:href="qsggeometrynode.xml">QSGGeometryNode</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsggeometrynode.xml#setOpaqueMaterial">setOpaqueMaterial</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setMaterial">
<db:title>void QSGGeometryNode::setMaterial(QSGMaterial *<db:emphasis>material</db:emphasis>)</db:title>
<db:para>Sets the material of this geometry node to <db:code role="parameter">material</db:code>.</db:para>
<db:para>Geometry nodes must have a material before they can be added to the scene graph.</db:para>
<db:para>If the material is changed whitout calling setMaterial() again, the user must also mark the material as dirty using <db:link xlink:href="qsgnode.xml#markDirty">QSGNode::markDirty</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsggeometrynode.xml#material">material</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setOpaqueMaterial">
<db:title>void QSGGeometryNode::setOpaqueMaterial(QSGMaterial *<db:emphasis>material</db:emphasis>)</db:title>
<db:para>Sets the opaque material of this geometry to <db:code role="parameter">material</db:code>.</db:para>
<db:para>The opaque material will be preferred by the renderer over the default material, as returned by the <db:link xlink:href="qsggeometrynode.xml#material">material</db:link>() function, if it is not null and the geometry item has an inherited opacity of 1.</db:para>
<db:para>The opaqueness refers to scene graph opacity, the material is still allowed to set <db:link xlink:href="qsgmaterial.xml#Flag-enum">QSGMaterial::Blending</db:link> to true and draw transparent pixels.</db:para>
<db:para>If the material is changed whitout calling setOpaqueMaterial() again, the user must also mark the opaque material as dirty using <db:link xlink:href="qsgnode.xml#markDirty">QSGNode::markDirty</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsggeometrynode.xml#opaqueMaterial">opaqueMaterial</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
