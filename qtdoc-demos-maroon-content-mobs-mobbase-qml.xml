<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Demo - Maroon in Trouble</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A Qt Quick game for touch devices that uses <db:link xlink:href="qml-qtquick-spritesequence.xml">SpriteSequence</db:link>, <db:link xlink:href="qml-qtquick-particles-particlesystem.xml">ParticleSystem</db:link>, Emitter, and Wander types to animate objects and the <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link> type to play sound effects.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.0
import &quot;../logic.js&quot; as Logic
import &quot;..&quot;

Item  {
    id: container
    property string name: &quot;Fish&quot;
    property int col: 0
    property real hp: 3
    property real damage: 1
    property real speed: 0.25
    property int rof: 30 //In ticks
    property int fireCounter: 0
    property bool dying: false
    width: parent ? parent.squareSize : 0
    height: parent ? parent.squareSize : 0
    x: col * width
    z: 1001
    function fire() { }

    function die() {
        if (dying)
            return;
        dying = true;
        bubble.jumpTo(&quot;burst&quot;);
        if (fishSprite.currentSprite == &quot;front&quot;)
            fishSprite.jumpTo(Math.random() &amp;gt; 0.5 ? &quot;left&quot; : &quot;right&quot; );
        fishSwim.start();
        Logic.gameState.score += 1;
        killedSound.play();
        bubble.scale = 0.9
        destroy(350);
    }

    function inked() {
        if (hp &amp;gt; 0)
            ink.jumpTo(&quot;dirty&quot;);
    }

    function hit(dmg) {
        hp -= dmg;

        if (hp &amp;lt;= 0)
            Logic.killMob(col, container);
    }

    Component.onCompleted: spawnSound.play()

    SoundEffect {
        id: spawnSound
        source: &quot;../audio/catch.wav&quot;
    }
    SoundEffect {
        id: killedSound
        source: &quot;../audio/catch-action.wav&quot;
    }

    SpriteSequence {
        id: fishSprite
        width: 64
        height: 64
        interpolate: false
        goalSprite: &quot;&quot;

        Sprite {
            name: &quot;left&quot;
            source: &quot;../gfx/mob-idle.png&quot;
            frameWidth: 64
            frameHeight: 64
            frameCount: 1
            frameDuration: 800
            frameDurationVariation: 400
            to: { &quot;front&quot; : 1 }
        }

        Sprite {
            name: &quot;front&quot;
            source: &quot;../gfx/mob-idle.png&quot;
            frameCount: 1
            frameX: 64
            frameWidth: 64
            frameHeight: 64
            frameDuration: 800
            frameDurationVariation: 400
            to: { &quot;left&quot; : 1, &quot;right&quot; : 1 }
        }

        Sprite {
            name: &quot;right&quot;
            source: &quot;../gfx/mob-idle.png&quot;
            frameCount: 1
            frameX: 128
            frameWidth: 64
            frameHeight: 64
            frameDuration: 800
            frameDurationVariation: 400
            to: { &quot;front&quot; : 1 }
        }

        Sprite { //WORKAROUND: This prevents the triggering of a rendering error which is currently under investigation.
            name: &quot;dummy&quot;
            source: &quot;../gfx/melee-idle.png&quot;
            frameCount: 8
            frameWidth: 64
            frameHeight: 64
            frameX: 0
            frameDuration: 200
        }

        NumberAnimation on x {
            id: fishSwim
            running: false
            property bool goingLeft: fishSprite.currentSprite == &quot;right&quot;
            to: goingLeft ? -360 : 360
            duration: 300
        }
    }

    SpriteSequence {
        id: bubble
        width: 64
        height: 64
        scale: 0.4 + (0.2  * hp)
        interpolate: false
        goalSprite: &quot;&quot;

        Behavior on scale {
            NumberAnimation { duration: 150; easing.type: Easing.OutBack }
        }

        Sprite {
            name: &quot;big&quot;
            source: &quot;../gfx/catch.png&quot;
            frameCount: 1
            to: { &quot;burst&quot; : 0 }
        }

        Sprite {
            name: &quot;burst&quot;
            source: &quot;../gfx/catch-action.png&quot;
            frameCount: 3
            frameX: 64
            frameDuration: 200
        }

        Sprite { //WORKAROUND: This prevents the triggering of a rendering error which is currently under investigation.
            name: &quot;dummy&quot;
            source: &quot;../gfx/melee-idle.png&quot;
            frameCount: 8
            frameWidth: 64
            frameHeight: 64
            frameX: 0
            frameDuration: 200
        }
        SequentialAnimation on width {
            loops: Animation.Infinite
            NumberAnimation { from: width * 1; to: width * 1.1; duration: 800; easing.type: Easing.InOutQuad }
            NumberAnimation { from: width * 1.1; to: width * 1; duration: 1000; easing.type: Easing.InOutQuad }
        }
        SequentialAnimation on height {
            loops: Animation.Infinite
            NumberAnimation { from: height * 1; to: height * 1.15; duration: 1200; easing.type: Easing.InOutQuad }
            NumberAnimation { from: height * 1.15; to: height * 1; duration: 1000; easing.type: Easing.InOutQuad }
        }
    }

    SpriteSequence {
        id: ink
        width: 64
        height: 64
        scale: bubble.scale
        goalSprite: &quot;&quot;

        Sprite {
            name: &quot;clean&quot;
            source: &quot;../gfx/projectile-action.png&quot;
            frameCount: 1
            frameX: 0
            frameWidth: 64
            frameHeight: 64
        }
        Sprite {
            name: &quot;dirty&quot;
            source: &quot;../gfx/projectile-action.png&quot;
            frameCount: 3
            frameX: 64
            frameWidth: 64
            frameHeight: 64
            frameDuration: 150
            to: {&quot;clean&quot;:1}
        }

        Sprite { //WORKAROUND: This prevents the triggering of a rendering error which is currently under investigation.
            name: &quot;dummy&quot;
            source: &quot;../gfx/melee-idle.png&quot;
            frameCount: 8
            frameWidth: 64
            frameHeight: 64
            frameX: 0
            frameDuration: 200
        }
        SequentialAnimation on width {
            loops: Animation.Infinite
            NumberAnimation { from: width * 1; to: width * 1.1; duration: 800; easing.type: Easing.InOutQuad }
            NumberAnimation { from: width * 1.1; to: width * 1; duration: 1000; easing.type: Easing.InOutQuad }
        }
        SequentialAnimation on height {
            loops: Animation.Infinite
            NumberAnimation { from: height * 1; to: height * 1.15; duration: 1200; easing.type: Easing.InOutQuad }
            NumberAnimation { from: height * 1.15; to: height * 1; duration: 1000; easing.type: Easing.InOutQuad }
        }

    }

    SequentialAnimation on x {
        loops: Animation.Infinite
        NumberAnimation { from: x; to: x - 5; duration: 900; easing.type: Easing.InOutQuad }
        NumberAnimation { from: x - 5; to: x; duration: 900; easing.type: Easing.InOutQuad }
    }
}

</db:programlisting>
</db:article>
