<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick 3D - Baked Lightmap Example</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates the use of baked lightmaps in a 3D scene.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/bakedlightmap-example.jpg"/>
</db:imageobject>
</db:mediaobject>
<db:para>This example demonstrates using fully baked lighting in a scene. As a result, the rendered scene looks a lot more realistic, mainly because of the added indirect illumination. With the help of a checkbox it also allows disabling lightmapping, thus allowing comparing the rendering results of the real-time and fully baked approaches.</db:para>
<db:section xml:id="setting-up-the-light">
<db:title>Setting up the Light</db:title>
<db:para>The scene has a single point light. When the checkbox is checked, the <db:link xlink:href="qml-qtquick3d-light.xml#bakeMode-prop">bakeMode</db:link> of the light is set to Light.BakeModeAll.</db:para>
<db:programlisting language="qml">PointLight {
    bakeMode: root.lightBakeMode
    y: 190
    brightness: 5
    castsShadow: true
    shadowFactor: 75
}
</db:programlisting>
<db:para>Setting the property to a value other than <db:link xlink:href="qml-qtquick3d-light.xml#bakeMode-prop">Light.BakeModeDisabled</db:link> serves a double purpose: at lightmap baking time it indicates that the light is part of the lightmapped scene, contributing to it. At run time, when rendering the scene normally, it indicates the light is a fully or partially baked light, which leads to disabling certain real time calculations in materials for lightmapped models. This is why the checkbox toggles <db:code>both</db:code> the bakeMode property on the Light and also the enabled property of the <db:link xlink:href="qml-qtquick3d-bakedlightmap.xml">BakedLightmap</db:link> associated with the Model objects.</db:para>
</db:section>
<db:section xml:id="setting-up-the-model">
<db:title>Setting up the Model</db:title>
<db:para>The <db:link xlink:href="https://en.wikipedia.org/wiki/Cornell_box">Cornell box</db:link> is a Model with 8 submeshes. This is encapsulated as the Box type, an instance of which is instantiated in the main scene.</db:para>
<db:programlisting language="qml">Box {
    usedInBakedLighting: true
    lightmapBaseResolution: 256
    bakedLightmap: BakedLightmap {
        enabled: root.lmEnabled
        key: &quot;box&quot;
        loadPrefix: &quot;qrc:/&quot;
    }
    scale: Qt.vector3d(100, 100, 100)
}
</db:programlisting>
<db:para>This model both <db:code>participates</db:code> in the lightmapped scene, and has a lightmap <db:code>baked for it</db:code>. The former is indicated by the <db:link xlink:href="qml-qtquick3d-model.xml#usedInBakedLighting-prop">usedInBakedLighting</db:link> property. This alone does not ensure our box miniscene gets a lightmap baked for it, only that it participates in lightmapping (i.e. the light rays can bounce off the model when calculating indirect illumination).</db:para>
<db:para>To get the lightmap fully generated and then stored during the baking process, a <db:link xlink:href="qml-qtquick3d-bakedlightmap.xml">BakedLightmap</db:link> object with <db:link xlink:href="qml-qtquick3d-bakedlightmap.xml#enabled-prop">enabled</db:link> set to <db:code>true</db:code> is set as well. The <db:link xlink:href="qml-qtquick3d-bakedlightmap.xml#key-prop">key</db:link> specifies a unique identifier.</db:para>
<db:para>For simple deployment, the application packs the generated lightmaps (<db:code>.exr</db:code> files) into the execuatble via the Qt resource system. The CMakeLists.txt lists <db:code>qlm_box.exr</db:code> to be added as a resource. When rebaking the lightmap, the application needs to be built again so the changed file is picked up. To ensure that the engine can find the file at run time, the <db:link xlink:href="qml-qtquick3d-bakedlightmap.xml#loadPrefix-prop">loadPrefix</db:link> is set.</db:para>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="bakedlightmap/Box.qml">bakedlightmap/Box.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="bakedlightmap/CMakeLists.txt">bakedlightmap/CMakeLists.txt</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="bakedlightmap/bakedlightmap.pro">bakedlightmap/bakedlightmap.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="bakedlightmap/main.cpp">bakedlightmap/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="bakedlightmap/main.qml">bakedlightmap/main.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="bakedlightmap/qml.qrc">bakedlightmap/qml.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
