<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Radio Overview</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>An API to control system radio tuner.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Qt Multimedia API provides a number of radio related classes for control over the radio tuner of the system, and gives access to Radio Data System (RDS) information for radio stations that broadcasts it.</db:para>
<db:section xml:id="radio-features">
<db:title>Radio Features</db:title>
<db:para>The Radio API consists of two separate components. The radio tuner, <db:link xlink:href="qradiotuner.xml">QRadioTuner</db:link> or the <db:link xlink:href="qml-qtmultimedia-radio.xml">Radio</db:link> QML type, which handles control of the radio hardware as well as tuning. The other is the radio data component, either <db:link xlink:href="qradiodata.xml">QRadioData</db:link> or the <db:link xlink:href="qml-qtmultimedia-radiodata.xml">RadioData</db:link> QML type, which gives access to RDS information.</db:para>
</db:section>
<db:section xml:id="radio-implementation-details">
<db:title>Radio Implementation Details</db:title>
<db:para>The actual level of support depends on the underlying system support. It should be noted that only analog radio is supported, and the properties of the radio data component will only be populated if the system radio tuner supports RDS.</db:para>
</db:section>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:para>There are two examples showing the usage of the Radio API. One shows how to use the <db:link xlink:href="qradiotuner.xml">QRadioTuner</db:link> class from C++. The other shows how to implement a similar application using QML and <db:link xlink:href="qml-qtmultimedia-radio.xml">Radio</db:link>.</db:para>
<db:section xml:id="radio-example">
<db:title>Radio Example</db:title>
<db:para>This image shows the example using the <db:link xlink:href="qradiotuner.xml">QRadioTuner</db:link> API.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/radio-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The example reads the frequency from the radio tuner, and sets the &quot;Got Signal&quot; text based on the signal strength. The buttons allow the user to tune and scan up and down the frequency band, while the slider to the side allows volume adjustments.</db:para>
<db:para>Only the FM frequency band is used in this example.</db:para>
</db:section>
<db:section xml:id="declarative-radio-example">
<db:title>Declarative Radio Example</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/declarative-radio-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>This example has the same functionality of the regular radio example mentioned above, but it includes a nice horizontal dial showing the position of the current frequency inside the band.</db:para>
</db:section>
</db:section>
<db:section xml:id="reference-documentation">
<db:title>Reference documentation</db:title>
<db:section xml:id="c-classes">
<db:title>C++ Classes</db:title>
<db:variablelist role="multimedia_radio">
<db:varlistentry>
<db:term><db:link xlink:href="qradiodata.xml" xlink:role="class">QRadioData</db:link></db:term>
<db:listitem>
<db:para>The QRadioData class provides interfaces to the RDS functionality of the system radio.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qradiotuner.xml" xlink:role="class">QRadioTuner</db:link></db:term>
<db:listitem>
<db:para>The QRadioTuner class provides an interface to the systems analog radio device.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="qml-types">
<db:title>QML Types</db:title>
<db:variablelist role="multimedia_radio_qml">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-radio.xml" xlink:role="">Radio</db:link></db:term>
<db:listitem>
<db:para>Access radio functionality from a QML application.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtmultimedia-radiodata.xml" xlink:role="">RadioData</db:link></db:term>
<db:listitem>
<db:para>Access RDS data from a QML application.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
</db:section>
</db:article>
