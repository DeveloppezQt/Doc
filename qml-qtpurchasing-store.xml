<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Store QML Type</db:title>
<db:productname>QtPurchasing</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Purchasing Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Access point to the external market place for in-app purchases.</db:para>
<db:para>This type was introduced in QtPurchasing 1.0.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtPurchasing 1.12</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtPurchasing 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Store is part of <db:simplelist><db:member>qtpurchasing</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>When using the Qt Purchasing API in QML, the application should instantiate one Store and then instantiate products as children of this store. The products created as children of the Store object will automatically be queried from the external market place if one is available on the current platform.</db:para>
<db:para>The following example registers a store with three products, two consumable products and one unlockable.</db:para>
<db:programlisting language="qml">Store {
    Product {
        identifier: &quot;myConsumableProduct1&quot;
        type: Product.Consumable

        // ...
    }

    Product {
        identifier: &quot;myConsumableProduct2&quot;
        type: Product.Consumable

        // ...
    }

    Product {
        identifier: &quot;myUnlockableProduct&quot;
        type: Product.Unlockable

        // ...
    }

    // ...
}
</db:programlisting>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="restorePurchases-method">
<db:title>restorePurchases()</db:title>
<db:para>Calling this method will cause onPurchaseRestored handlers to be called asynchronously on previously purchased unlockable products. This can be used to restore purchases for unlockable products when the application is run by the same user on multiple devices, or for example if the application has been uninstalled and reinstalled on the device so that the purchase data has been lost.</db:para>
<db:note>
<db:para>On some platforms, such as iOS, this will require the user to input their password to launch the restore process. On other platforms, such as Android, it is not typically needed, as the onPurchaseSucceeded handler will be called on any previously purchased unlockable product if the application data is removed.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
