<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Part 2 - Adding Addresses</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Widgets Reference Documentation.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &lt;QtWidgets&gt;
#include &quot;addressbook.h&quot;

AddressBook::AddressBook(QWidget *parent)
    : QWidget(parent)
{
    QLabel *nameLabel = new QLabel(tr(&quot;Name:&quot;));
    nameLine = new QLineEdit;
    nameLine-&gt;setReadOnly(true);
    QLabel *addressLabel = new QLabel(tr(&quot;Address:&quot;));
    addressText = new QTextEdit;
    addressText-&gt;setReadOnly(true);

    addButton = new QPushButton(tr(&quot;&amp;Add&quot;));
    addButton-&gt;show();
    submitButton = new QPushButton(tr(&quot;&amp;Submit&quot;));
    submitButton-&gt;hide();
    cancelButton = new QPushButton(tr(&quot;&amp;Cancel&quot;));
    cancelButton-&gt;hide();
    connect(addButton, SIGNAL(clicked()), this, SLOT(addContact()));
    connect(submitButton, SIGNAL(clicked()), this, SLOT(submitContact()));
    connect(cancelButton, SIGNAL(clicked()), this, SLOT(cancel()));
    QVBoxLayout *buttonLayout1 = new QVBoxLayout;
    buttonLayout1-&gt;addWidget(addButton, Qt::AlignTop);
    buttonLayout1-&gt;addWidget(submitButton);
    buttonLayout1-&gt;addWidget(cancelButton);
    buttonLayout1-&gt;addStretch();
    QGridLayout *mainLayout = new QGridLayout;
    mainLayout-&gt;addWidget(nameLabel, 0, 0);
    mainLayout-&gt;addWidget(nameLine, 0, 1);
    mainLayout-&gt;addWidget(addressLabel, 1, 0, Qt::AlignTop);
    mainLayout-&gt;addWidget(addressText, 1, 1);
    mainLayout-&gt;addLayout(buttonLayout1, 1, 2);
    setLayout(mainLayout);
    setWindowTitle(tr(&quot;Simple Address Book&quot;));
}
void AddressBook::addContact()
{
    oldName = nameLine-&gt;text();
    oldAddress = addressText-&gt;toPlainText();

    nameLine-&gt;clear();
    addressText-&gt;clear();

    nameLine-&gt;setReadOnly(false);
    nameLine-&gt;setFocus(Qt::OtherFocusReason);
    addressText-&gt;setReadOnly(false);

    addButton-&gt;setEnabled(false);
    submitButton-&gt;show();
    cancelButton-&gt;show();
}

void AddressBook::submitContact()
{
    QString name = nameLine-&gt;text();
    QString address = addressText-&gt;toPlainText();

    if (name.isEmpty() || address.isEmpty()) {
        QMessageBox::information(this, tr(&quot;Empty Field&quot;),
            tr(&quot;Please enter a name and address.&quot;));
        return;
    }
    if (!contacts.contains(name)) {
        contacts.insert(name, address);
        QMessageBox::information(this, tr(&quot;Add Successful&quot;),
            tr(&quot;\&quot;%1\&quot; has been added to your address book.&quot;).arg(name));
    } else {
        QMessageBox::information(this, tr(&quot;Add Unsuccessful&quot;),
            tr(&quot;Sorry, \&quot;%1\&quot; is already in your address book.&quot;).arg(name));
        return;
    }
    if (contacts.isEmpty()) {
        nameLine-&gt;clear();
        addressText-&gt;clear();
    }

    nameLine-&gt;setReadOnly(true);
    addressText-&gt;setReadOnly(true);
    addButton-&gt;setEnabled(true);
    submitButton-&gt;hide();
    cancelButton-&gt;hide();
}
void AddressBook::cancel()
{
    nameLine-&gt;setText(oldName);
    nameLine-&gt;setReadOnly(true);

    addressText-&gt;setText(oldAddress);
    addressText-&gt;setReadOnly(true);

    addButton-&gt;setEnabled(true);
    submitButton-&gt;hide();
    cancelButton-&gt;hide();
}

</db:programlisting>
</db:article>
