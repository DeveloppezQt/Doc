<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGraphicsSceneMoveEvent Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgraphicsscenemoveevent.xml">QGraphicsSceneMoveEvent</db:link> class provides events for widget moving in the graphics view framework.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGraphicsSceneMoveEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qgraphicssceneevent.xml" xlink:role="class">QGraphicsSceneEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGraphicsSceneMoveEvent is part of <db:simplelist><db:member>graphicsview-api</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qgraphicswidget.xml">QGraphicsWidget</db:link> sends itself a <db:link xlink:href="qgraphicsscenemoveevent.xml">QGraphicsSceneMoveEvent</db:link> immediately when its local position changes. The delivery is implemented as part of <db:link xlink:href="qgraphicsitem.xml#itemChange">QGraphicsItem::itemChange</db:link>().</db:para>
<db:para>It's similar to <db:link xlink:href="qmoveevent.xml">QMoveEvent</db:link>, but its positions, <db:link xlink:href="qgraphicsscenemoveevent.xml#oldPos">oldPos</db:link>() and <db:link xlink:href="qgraphicsscenemoveevent.xml#newPos">newPos</db:link>(), use <db:link xlink:href="qpointf.xml">QPointF</db:link> instead of <db:link xlink:href="qpoint.xml">QPoint</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitem.xml#setPos">QGraphicsItem::setPos</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#GraphicsItemChange-enum">QGraphicsItem::ItemPositionChange</db:link></db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#GraphicsItemChange-enum">QGraphicsItem::ItemPositionHasChanged</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGraphicsSceneMoveEvent-1">
<db:title>QGraphicsSceneMoveEvent::QGraphicsSceneMoveEvent()</db:title>
<db:constructorsynopsis>
<db:methodname>QGraphicsSceneMoveEvent</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QGraphicsSceneMoveEvent()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qgraphicsscenemoveevent.xml">QGraphicsSceneMoveEvent</db:link>.</db:para>
</db:section>
<db:section xml:id="dtor.QGraphicsSceneMoveEvent">
<db:title>[virtual] QGraphicsSceneMoveEvent::~QGraphicsSceneMoveEvent()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QGraphicsSceneMoveEvent</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QGraphicsSceneMoveEvent()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the <db:link xlink:href="qgraphicsscenemoveevent.xml">QGraphicsSceneMoveEvent</db:link>.</db:para>
</db:section>
<db:section xml:id="newPos">
<db:title>QPointF QGraphicsSceneMoveEvent::newPos() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPointF</db:type>
<db:methodname>newPos</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPointF newPos() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the new position (i.e., the current position).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsscenemoveevent.xml#oldPos">oldPos</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#setPos">QGraphicsItem::setPos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="oldPos">
<db:title>QPointF QGraphicsSceneMoveEvent::oldPos() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPointF</db:type>
<db:methodname>oldPos</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPointF oldPos() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the old position (i.e., the position immediately before the widget was moved).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsscenemoveevent.xml#newPos">newPos</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitem.xml#setPos">QGraphicsItem::setPos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
