<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QObjectComputedProperty Class</db:title>
<db:subtitle>template &lt;typename Class, typename T, auto Offset, auto Getter&gt; class QObjectComputedProperty</db:subtitle>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qobjectcomputedproperty.xml">QObjectComputedProperty</db:link> class is a template class to help port old properties to the bindable property system.</db:para>
<db:para>This class was introduced in Qt 6.0.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QObjectComputedProperty</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Core)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Core)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="quntypedpropertydata.xml" xlink:role="class">QUntypedPropertyData</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QObjectComputedProperty is part of <db:simplelist><db:member>tools</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qobjectcomputedproperty.xml">QObjectComputedProperty</db:link> is a read-only property which is recomputed on each read. It does not store the computed value. It is one of the Qt internal classes implementing <db:link xlink:href="bindableproperties.xml">Qt Bindable Properties</db:link>. <db:link xlink:href="qobjectcomputedproperty.xml">QObjectComputedProperty</db:link> is usually not used directly, instead an instance of it is created by using the <db:link xlink:href="qobjectcomputedproperty.xml#Q_OBJECT_COMPUTED_PROPERTY">Q_OBJECT_COMPUTED_PROPERTY</db:link> macro.</db:para>
<db:para>See the following example.</db:para>
<db:programlisting language="cpp">class Client{};

class MyClassPrivate : public QObjectPrivate
{
public:
    QList&amp;lt;Client&amp;gt; clients;
    bool hasClientsActualCalculation() const { return clients.size() &amp;gt; 0; }
    Q_OBJECT_COMPUTED_PROPERTY(MyClassPrivate, bool, hasClientsData,
                               &amp;amp;MyClassPrivate::hasClientsActualCalculation)
};

class MyClass : public QObject
{
    Q_OBJECT
    Q_PROPERTY(bool hasClients READ hasClients STORED false BINDABLE bindableHasClients)
public:
    QBindable&amp;lt;bool&amp;gt; bindableHasClients()
    {
        return QBindable&amp;lt;bool&amp;gt;(&amp;amp;d_func()-&amp;gt;hasClientsData);
    }
    bool hasClients() const
    {
        return d_func()-&amp;gt;hasClientsData.value();
    }
    void addClient(const Client &amp;amp;c)
    {
        Q_D(MyClass);
        d-&amp;gt;clients.push_back(c);
        // notify that the value could have changed
        d-&amp;gt;hasClientsData.notify();
    }
private:
    Q_DECLARE_PRIVATE(MyClass)
};
</db:programlisting>
<db:para>The rules for getters in <db:link xlink:href="bindableproperties.xml#bindable-property-getters-and-setters">Bindable Property Getters and Setters</db:link> also apply for <db:link xlink:href="qobjectcomputedproperty.xml">QObjectComputedProperty</db:link>. Especially, the getter should be trivial and only return the value of the <db:link xlink:href="qobjectcomputedproperty.xml">QObjectComputedProperty</db:link> object. The callback given to the <db:link xlink:href="qobjectcomputedproperty.xml">QObjectComputedProperty</db:link> should usually be a private method which is only called by the <db:link xlink:href="qobjectcomputedproperty.xml">QObjectComputedProperty</db:link>.</db:para>
<db:para>No setter is required or allowed, as <db:link xlink:href="qobjectcomputedproperty.xml">QObjectComputedProperty</db:link> is read-only.</db:para>
<db:para>To correctly participate in dependency handling, <db:link xlink:href="qobjectcomputedproperty.xml">QObjectComputedProperty</db:link> has to know when its value, the result of the callback given to it, might have changed. Whenever a bindable property used in the callback changes, this happens automatically. If the result of the callback might change because of a change in a value which is not a bindable property, it is the developer's responsibility to call notify on the <db:link xlink:href="qobjectcomputedproperty.xml">QObjectComputedProperty</db:link> object. This will inform dependent properties about the potential change.</db:para>
<db:para>Note that calling notify might trigger change handlers in dependent properties, which might in turn use the object the <db:link xlink:href="qobjectcomputedproperty.xml">QObjectComputedProperty</db:link> is a member of. So notify must not be called when in a transitional or invalid state.</db:para>
<db:para><db:link xlink:href="qobjectcomputedproperty.xml">QObjectComputedProperty</db:link> is not suitable for use with a computation that depends on any input that might change without notice, such as the contents of a file.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qobjectcomputedproperty.xml#Q_OBJECT_COMPUTED_PROPERTY">Q_OBJECT_COMPUTED_PROPERTY</db:link></db:member>
<db:member><db:link xlink:href="qproperty.xml">QProperty</db:link></db:member>
<db:member><db:link xlink:href="qobjectbindableproperty.xml">QObjectBindableProperty</db:link></db:member>
<db:member><db:link xlink:href="properties.xml">Qt's Property System</db:link></db:member>
<db:member><db:link xlink:href="bindableproperties.xml">Qt Bindable Properties</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="macro-documentation">
<db:title>Macro Documentation</db:title>
<db:section xml:id="Q_OBJECT_COMPUTED_PROPERTY">
<db:title>[since 6.0] Q_OBJECT_COMPUTED_PROPERTY(<db:emphasis>containingClass</db:emphasis>, <db:emphasis>type</db:emphasis>, <db:emphasis>name</db:emphasis>, <db:emphasis>callback</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:methodname>Q_OBJECT_COMPUTED_PROPERTY</db:methodname>
<db:methodparam>
<db:type></db:type>
<db:parameter>containingClass</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type></db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type></db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type></db:type>
<db:parameter>callback</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">macrowithparams</db:synopsisinfo>
<db:synopsisinfo role="signature">Q_OBJECT_COMPUTED_PROPERTY(containingClass, type, name, callback)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Declares a <db:link xlink:href="qobjectcomputedproperty.xml">QObjectComputedProperty</db:link> inside <db:code role="parameter">containingClass</db:code> of type <db:code role="parameter">type</db:code> with name <db:code role="parameter">name</db:code>. The argument <db:code role="parameter">callback</db:code> specifies a GETTER function to be called when the property is evaluated.</db:para>
<db:para>This macro was introduced in Qt 6.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qobjectbindableproperty.xml">QObjectBindableProperty</db:link></db:member>
<db:member><db:link xlink:href="properties.xml">Qt's Property System</db:link></db:member>
<db:member><db:link xlink:href="bindableproperties.xml">Qt Bindable Properties</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
