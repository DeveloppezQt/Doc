<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAudioEncoderSettings Class</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qaudioencodersettings.xml">QAudioEncoderSettings</db:link> class provides a set of audio encoder settings.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAudioEncoderSettings</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += multimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QAudioEncoderSettings is part of <db:simplelist><db:member>multimedia</db:member><db:member>multimedia_recording</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A audio encoder settings object is used to specify the audio encoder settings used by <db:link xlink:href="qmediarecorder.xml">QMediaRecorder</db:link>. Audio encoder settings are selected by constructing a <db:link xlink:href="qaudioencodersettings.xml">QAudioEncoderSettings</db:link> object, setting the desired properties and then passing it to a <db:link xlink:href="qmediarecorder.xml">QMediaRecorder</db:link> instance using the <db:link xlink:href="qmediarecorder.xml#setEncodingSettings">QMediaRecorder::setEncodingSettings</db:link>() function.</db:para>
<db:programlisting language="cpp">QAudioEncoderSettings audioSettings;
audioSettings.setCodec(&quot;audio/mpeg&quot;);
audioSettings.setChannelCount(2);

recorder-&gt;setAudioSettings(audioSettings);
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediarecorder.xml">QMediaRecorder</db:link></db:member>
<db:member><db:link xlink:href="qaudioencodersettingscontrol.xml">QAudioEncoderSettingsControl</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QAudioEncoderSettings">
<db:title>QAudioEncoderSettings::QAudioEncoderSettings()</db:title>
<db:para>Construct a null audio encoder settings object.</db:para>
</db:section>
<db:section xml:id="QAudioEncoderSettings-1">
<db:title>QAudioEncoderSettings::QAudioEncoderSettings(const QAudioEncoderSettings &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a copy of the audio encoder settings object <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QAudioEncoderSettings">
<db:title>[noexcept] QAudioEncoderSettings::~QAudioEncoderSettings()</db:title>
<db:para>Destroys an audio encoder settings object.</db:para>
</db:section>
<db:section xml:id="bitRate">
<db:title>int QAudioEncoderSettings::bitRate() const</db:title>
<db:para>Returns the bit rate of the compressed audio stream in bits per second.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#setBitRate">setBitRate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="channelCount">
<db:title>int QAudioEncoderSettings::channelCount() const</db:title>
<db:para>Returns the number of audio channels.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#setChannelCount">setChannelCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="codec">
<db:title>QString QAudioEncoderSettings::codec() const</db:title>
<db:para>Returns the audio codec.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#setCodec">setCodec</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="encodingMode">
<db:title>QMultimedia::EncodingMode QAudioEncoderSettings::encodingMode() const</db:title>
<db:para>Returns the audio encoding mode.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#setEncodingMode">setEncodingMode</db:link>()</db:member>
<db:member><db:link xlink:href="qmultimedia.xml#EncodingMode-enum">QMultimedia::EncodingMode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="encodingOption">
<db:title>QVariant QAudioEncoderSettings::encodingOption(const QString &amp;<db:emphasis>option</db:emphasis>) const</db:title>
<db:para>Returns the value of encoding <db:code role="parameter">option</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#setEncodingOption">setEncodingOption</db:link>()</db:member>
<db:member><db:link xlink:href="qaudioencodersettings.xml#encodingOptions">encodingOptions</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="encodingOptions">
<db:title>QVariantMap QAudioEncoderSettings::encodingOptions() const</db:title>
<db:para>Returns the all the encoding options as <db:link xlink:href="qvariant.xml#QVariantMap-typedef">QVariantMap</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#encodingOption">encodingOption</db:link>()</db:member>
<db:member><db:link xlink:href="qaudioencodersettings.xml#setEncodingOptions">setEncodingOptions</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isNull">
<db:title>bool QAudioEncoderSettings::isNull() const</db:title>
<db:para>Identifies if an audio settings object is initialized.</db:para>
<db:para>Returns true if the settings object is null, and false if it is not.</db:para>
</db:section>
<db:section xml:id="quality">
<db:title>QMultimedia::EncodingQuality QAudioEncoderSettings::quality() const</db:title>
<db:para>Returns the audio encoding quality.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#setQuality">setQuality</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sampleRate">
<db:title>int QAudioEncoderSettings::sampleRate() const</db:title>
<db:para>Returns the audio sample rate in Hz.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#setSampleRate">setSampleRate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBitRate">
<db:title>void QAudioEncoderSettings::setBitRate(int <db:emphasis>rate</db:emphasis>)</db:title>
<db:para>Sets the audio bit <db:code role="parameter">rate</db:code> in bits per second.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#bitRate">bitRate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setChannelCount">
<db:title>void QAudioEncoderSettings::setChannelCount(int <db:emphasis>channels</db:emphasis>)</db:title>
<db:para>Sets the number of audio <db:code role="parameter">channels</db:code>.</db:para>
<db:para>A value of -1 indicates the encoder should make an optimal choice based on what is available from the audio source and the limitations of the codec.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#channelCount">channelCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCodec">
<db:title>void QAudioEncoderSettings::setCodec(const QString &amp;<db:emphasis>codec</db:emphasis>)</db:title>
<db:para>Sets the audio <db:code role="parameter">codec</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#codec">codec</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setEncodingMode">
<db:title>void QAudioEncoderSettings::setEncodingMode(QMultimedia::EncodingMode <db:emphasis>mode</db:emphasis>)</db:title>
<db:para>Sets the audio encoding <db:code role="parameter">mode</db:code> setting.</db:para>
<db:para>If <db:link xlink:href="qmultimedia.xml#EncodingMode-enum">QMultimedia::ConstantQualityEncoding</db:link> is set, the quality encoding parameter is used and bit rate is ignored, otherwise the bitrate is used.</db:para>
<db:para>The audio codec, channels count and sample rate settings are used in all the encoding modes.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#encodingMode">encodingMode</db:link>()</db:member>
<db:member><db:link xlink:href="qmultimedia.xml#EncodingMode-enum">QMultimedia::EncodingMode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setEncodingOption">
<db:title>void QAudioEncoderSettings::setEncodingOption(const QString &amp;<db:emphasis>option</db:emphasis>, const QVariant &amp;<db:emphasis>value</db:emphasis>)</db:title>
<db:para>Set the encoding <db:code role="parameter">option</db:code> to <db:code role="parameter">value</db:code>.</db:para>
<db:para>The supported set and meaning of encoding options are system and selected codec specific.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#encodingOption">encodingOption</db:link>()</db:member>
<db:member><db:link xlink:href="qaudioencodersettings.xml#setEncodingOptions">setEncodingOptions</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setEncodingOptions">
<db:title>void QAudioEncoderSettings::setEncodingOptions(const QVariantMap &amp;<db:emphasis>options</db:emphasis>)</db:title>
<db:para>Replace all the encoding options with <db:code role="parameter">options</db:code>.</db:para>
<db:para>The supported set and meaning of encoding options are system and selected codec specific.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#encodingOptions">encodingOptions</db:link>()</db:member>
<db:member><db:link xlink:href="qaudioencodersettings.xml#encodingOption">encodingOption</db:link>()</db:member>
<db:member><db:link xlink:href="qaudioencodersettings.xml#setEncodingOption">setEncodingOption</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setQuality">
<db:title>void QAudioEncoderSettings::setQuality(QMultimedia::EncodingQuality <db:emphasis>quality</db:emphasis>)</db:title>
<db:para>Set the audio encoding <db:code role="parameter">quality</db:code>.</db:para>
<db:para>Setting the audio quality parameter allows backend to choose the balanced set of encoding parameters to achieve the desired quality level.</db:para>
<db:para>The <db:code role="parameter">quality</db:code> settings parameter is only used in the <db:link xlink:href="qmultimedia.xml#EncodingMode-enum">constant quality</db:link> <db:link xlink:href="qaudioencodersettings.xml#encodingMode">encoding mode</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#quality">quality</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSampleRate">
<db:title>void QAudioEncoderSettings::setSampleRate(int <db:emphasis>rate</db:emphasis>)</db:title>
<db:para>Sets the audio sample <db:code role="parameter">rate</db:code> in Hz.</db:para>
<db:para>A value of -1 indicates the encoder should make an optimal choice based on what is avaialbe from the audio source and the limitations of the codec.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettings.xml#sampleRate">sampleRate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QAudioEncoderSettings::operator!=(const QAudioEncoderSettings &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Determines if <db:code role="parameter">other</db:code> is of equal value to an audio encoder settings object.</db:para>
<db:para>Returns true if the settings objects are not of equal value, and true if they are of equal value.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QAudioEncoderSettings &amp;QAudioEncoderSettings::operator=(const QAudioEncoderSettings &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns the value of <db:code role="parameter">other</db:code> to an audio encoder settings object.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QAudioEncoderSettings::operator==(const QAudioEncoderSettings &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Determines if <db:code role="parameter">other</db:code> is of equal value to an audio encoder settings object.</db:para>
<db:para>Returns true if the settings objects are of equal value, and false if they are not of equal value.</db:para>
</db:section>
</db:section>
</db:article>
