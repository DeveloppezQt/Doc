<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Widgets Example</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates how to mix QML with a Qt Widgets application using the <db:link xlink:href="qquickwidget.xml">QQuickWidget</db:link> class.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;fbitem.h&quot;
#include &lt;QtGui/QOpenGLFramebufferObject&gt;
#include &lt;QtGui/QOpenGLContext&gt;
#include &lt;QtGui/QOpenGLFunctions&gt;
#include &lt;QtCore/QDebug&gt;

#ifndef QT_NO_OPENGL
class FbRenderer : public QQuickFramebufferObject::Renderer
{
public:
    FbRenderer() : c(0), dir(1) { }

    // The lifetime of the FBO and this class depends on how QQuickWidget
    // manages the scenegraph and context when it comes to showing and hiding
    // the widget. The actual behavior is proven by the debug prints.
    ~FbRenderer() {
        qDebug(&quot;FbRenderer destroyed&quot;);
    }

    void render() {
        QOpenGLFunctions *f = QOpenGLContext::currentContext()-&gt;functions();
        f-&gt;glClearColor(c, 0, 0, 1);
        f-&gt;glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);
        c += 0.01f * dir;
        if (c &gt;= 1.0f || c &lt;= 0.0f)
            dir *= -1;
        update();
    }

    QOpenGLFramebufferObject *createFramebufferObject(const QSize &amp;size) {
        qDebug() &lt;&lt; &quot;Creating FBO&quot; &lt;&lt; size;
        QOpenGLFramebufferObjectFormat format;
        format.setAttachment(QOpenGLFramebufferObject::CombinedDepthStencil);
        return new QOpenGLFramebufferObject(size, format);
    }

private:
    float c;
    int dir;
};
#endif

QQuickFramebufferObject::Renderer *FbItem::createRenderer() const
{
#ifndef QT_NO_OPENGL
    return new FbRenderer;
#else
    return nullptr;
#endif
}

</db:programlisting>
</db:article>
