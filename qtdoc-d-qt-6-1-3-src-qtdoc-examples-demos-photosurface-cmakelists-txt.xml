<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Demo - Photo Surface</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A QML app for touch devices that uses a Repeater with a <db:link xlink:href="qml-qt-labs-folderlistmodel-folderlistmodel.xml">FolderListModel</db:link> to access content in a folder, and a <db:link xlink:href="qml-qtquick-pincharea.xml">PinchArea</db:link> that contains a <db:link xlink:href="qml-qtquick-mousearea.xml">MouseArea</db:link> to handle pinch gestures on the fetched content.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp"># Generated from photosurface.pro.
# special case skip regeneration

cmake_minimum_required(VERSION 3.14)
project(photosurface LANGUAGES CXX)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

if(NOT DEFINED INSTALL_EXAMPLESDIR)
  set(INSTALL_EXAMPLESDIR &quot;examples&quot;)
endif()

set(INSTALL_EXAMPLEDIR &quot;${INSTALL_EXAMPLESDIR}/demos/photosurface&quot;)

find_package(Qt6 COMPONENTS Core)
find_package(Qt6 COMPONENTS Gui)
find_package(Qt6 COMPONENTS Qml)
find_package(Qt6 COMPONENTS Quick)

if (WIN32)
    set(app_icon_resource_windows &quot;${CMAKE_CURRENT_SOURCE_DIR}/resources/photosurface.rc&quot;)
    qt_add_executable(photosurface main.cpp ${app_icon_resource_windows})
elseif (APPLE)
    # The MACOSX_BUNDLE_ICON_FILE variable is added to the Info.plist
    # generated by CMake. This variable contains the .icns file name,
    # without the path.
    set(MACOSX_BUNDLE_ICON_FILE photosurface.icns)

    # And the following tells CMake where to find and install the file itself.
    set(app_icon_macos &quot;${CMAKE_CURRENT_SOURCE_DIR}/resources/photosurface.icns&quot;)
    set_source_files_properties(${app_icon_macos} PROPERTIES
           MACOSX_PACKAGE_LOCATION &quot;Resources&quot;)

    qt_add_executable(photosurface MACOSX_BUNDLE main.cpp ${app_icon_macos})
else()
    qt_add_executable(photosurface main.cpp)
endif()

target_link_libraries(photosurface PUBLIC
    Qt::Core
    Qt::Gui
    Qt::Qml
    Qt::Quick
)

# Resources:
set(photosurface_resource_files
    &quot;photosurface.qml&quot;
    &quot;resources/folder.png&quot;
)

qt6_add_resources(photosurface &quot;photosurface&quot;
    PREFIX
        &quot;/&quot;
    FILES
        ${photosurface_resource_files}
)

if(ANDROID AND TARGET Qt::AndroidExtras)
    target_compile_definitions(photosurface PUBLIC
        REQUEST_PERMISSIONS_ON_ANDROID
    )

    target_link_libraries(photosurface PUBLIC
        Qt::AndroidExtras
    )
endif()

if(TARGET Qt::Widgets)
    target_link_libraries(photosurface PUBLIC
        Qt::Widgets
    )
endif()

install(TARGETS photosurface
    RUNTIME DESTINATION &quot;${INSTALL_EXAMPLEDIR}&quot;
    BUNDLE DESTINATION &quot;${INSTALL_EXAMPLEDIR}&quot;
    LIBRARY DESTINATION &quot;${INSTALL_EXAMPLEDIR}&quot;
)

</db:programlisting>
</db:article>
