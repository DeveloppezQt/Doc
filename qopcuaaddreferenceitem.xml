<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QOpcUaAddReferenceItem Class</db:title>
<db:productname>QtOpcUa</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>An OPC UA module for Qt</db:titleabbrev>
<db:abstract>
<db:para>This class stores the necessary information to add a new reference on the server.</db:para>
<db:para>This class was introduced in Qt 5.11.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QOpcUaAddReferenceItem</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.11</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += opcua</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">QOpcUaClient::addReference()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QOpcUaAddReferenceItem-1">
<db:title>QOpcUaAddReferenceItem::QOpcUaAddReferenceItem(const QOpcUaAddReferenceItem &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QOpcUaAddReferenceItem</db:methodname>
<db:methodparam>
<db:type>const QOpcUaAddReferenceItem &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpcUaAddReferenceItem(const QOpcUaAddReferenceItem &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an add reference item from <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="isForwardReference">
<db:title>bool QOpcUaAddReferenceItem::isForwardReference() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isForwardReference</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isForwardReference() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the isForwardReference flag.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaaddreferenceitem.xml#setIsForwardReference">setIsForwardReference</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="referenceTypeId">
<db:title>QString QOpcUaAddReferenceItem::referenceTypeId() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>referenceTypeId</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString referenceTypeId() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the reference type id.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaaddreferenceitem.xml#setReferenceTypeId">setReferenceTypeId</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setIsForwardReference">
<db:title>void QOpcUaAddReferenceItem::setIsForwardReference(bool <db:emphasis>isForwardReference</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setIsForwardReference</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>isForwardReference</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setIsForwardReference(bool isForwardReference)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the <db:link xlink:href="qopcuaaddreferenceitem.xml#isForwardReference">isForwardReference</db:link> flag to <db:code role="parameter">isForwardReference</db:code>. If the flag is set, a forward reference is created. Otherwise, an inverse reference is created.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaaddreferenceitem.xml#isForwardReference">isForwardReference</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setReferenceTypeId">
<db:title>void QOpcUaAddReferenceItem::setReferenceTypeId(const QString &amp;<db:emphasis>referenceTypeId</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setReferenceTypeId</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>referenceTypeId</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setReferenceTypeId(const QString &amp;referenceTypeId)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the reference type id to <db:code role="parameter">referenceTypeId</db:code>. A reference of this type will be created on the server.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaaddreferenceitem.xml#referenceTypeId">referenceTypeId</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSourceNodeId">
<db:title>void QOpcUaAddReferenceItem::setSourceNodeId(const QString &amp;<db:emphasis>sourceNodeId</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setSourceNodeId</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>sourceNodeId</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setSourceNodeId(const QString &amp;sourceNodeId)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the node id of the source node to <db:code role="parameter">sourceNodeId</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaaddreferenceitem.xml#sourceNodeId">sourceNodeId</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTargetNodeClass">
<db:title>void QOpcUaAddReferenceItem::setTargetNodeClass(QOpcUa::NodeClass <db:emphasis>targetNodeClass</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setTargetNodeClass</db:methodname>
<db:methodparam>
<db:type>QOpcUa::NodeClass</db:type>
<db:parameter>targetNodeClass</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setTargetNodeClass(QOpcUa::NodeClass targetNodeClass)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the node class of the target node to <db:code role="parameter">targetNodeClass</db:code>. The target node class shall be specified because the target node might be located on another server.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaaddreferenceitem.xml#targetNodeClass">targetNodeClass</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTargetNodeId">
<db:title>void QOpcUaAddReferenceItem::setTargetNodeId(const QOpcUaExpandedNodeId &amp;<db:emphasis>targetNodeId</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setTargetNodeId</db:methodname>
<db:methodparam>
<db:type>const QOpcUaExpandedNodeId &amp;</db:type>
<db:parameter>targetNodeId</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setTargetNodeId(const QOpcUaExpandedNodeId &amp;targetNodeId)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the node id of the target node to <db:code role="parameter">targetNodeId</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaaddreferenceitem.xml#targetNodeId">targetNodeId</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTargetServerUri">
<db:title>void QOpcUaAddReferenceItem::setTargetServerUri(const QString &amp;<db:emphasis>targetServerUri</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setTargetServerUri</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>targetServerUri</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setTargetServerUri(const QString &amp;targetServerUri)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the URI of the target server to <db:code role="parameter">targetServerUri</db:code>. If this value is set, it will override the server URI from <db:link xlink:href="qopcuaaddreferenceitem.xml#setTargetNodeId">setTargetNodeId</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaaddreferenceitem.xml#targetServerUri">targetServerUri</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sourceNodeId">
<db:title>QString QOpcUaAddReferenceItem::sourceNodeId() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>sourceNodeId</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString sourceNodeId() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the source node id.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaaddreferenceitem.xml#setSourceNodeId">setSourceNodeId</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="targetNodeClass">
<db:title>QOpcUa::NodeClass QOpcUaAddReferenceItem::targetNodeClass() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QOpcUa::NodeClass</db:type>
<db:methodname>targetNodeClass</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpcUa::NodeClass targetNodeClass() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the target node class.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaaddreferenceitem.xml#setTargetNodeClass">setTargetNodeClass</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="targetNodeId">
<db:title>QOpcUaExpandedNodeId QOpcUaAddReferenceItem::targetNodeId() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QOpcUaExpandedNodeId</db:type>
<db:methodname>targetNodeId</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpcUaExpandedNodeId targetNodeId() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the target node id.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaaddreferenceitem.xml#setTargetNodeId">setTargetNodeId</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="targetServerUri">
<db:title>QString QOpcUaAddReferenceItem::targetServerUri() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>targetServerUri</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString targetServerUri() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the target server URI.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopcuaaddreferenceitem.xml#setTargetServerUri">setTargetServerUri</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QOpcUaAddReferenceItem &amp;QOpcUaAddReferenceItem::operator=(const QOpcUaAddReferenceItem &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QOpcUaAddReferenceItem &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QOpcUaAddReferenceItem &amp;</db:type>
<db:parameter>rhs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpcUaAddReferenceItem &amp; operator=(const QOpcUaAddReferenceItem &amp;rhs)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the values from <db:code role="parameter">rhs</db:code> in this add reference item.</db:para>
</db:section>
</db:section>
</db:article>
