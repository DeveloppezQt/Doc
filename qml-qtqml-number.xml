<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Number QML Type</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Number object provides represents a number value.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQml 2.0</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The QML Number object extends the JS Number object with locale aware functions.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtqml-locale.xml">Locale</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="fromLocaleString-method">
<db:title>string fromLocaleString(<db:emphasis>locale</db:emphasis>, <db:emphasis>number</db:emphasis>)</db:title>
<db:para>Returns a Number by parsing <db:code role="parameter">number</db:code> using the conventions of the supplied <db:code role="parameter">locale</db:code>.</db:para>
<db:para>If <db:code role="parameter">locale</db:code> is not supplied the default locale will be used.</db:para>
<db:para>For example, using the German locale:</db:para>
<db:programlisting language="cpp">var german = Qt.locale(&quot;de_DE&quot;);
var d;
d = Number.fromLocaleString(german, &quot;1234,56&quot;)   // d == 1234.56
d = Number.fromLocaleString(german, &quot;1.234,56&quot;) // d == 1234.56
d = Number.fromLocaleString(german, &quot;1234.56&quot;)  // throws exception
d = Number.fromLocaleString(german, &quot;1.234&quot;)    // d == 1234.0
</db:programlisting>
</db:section>
<db:section xml:id="toLocaleCurrencyString-method">
<db:title>string toLocaleCurrencyString(<db:emphasis>locale</db:emphasis>, <db:emphasis>symbol</db:emphasis>)</db:title>
<db:para>Converts the Number to a currency using the currency and conventions of the specified <db:code role="parameter">locale</db:code>. If <db:code role="parameter">symbol</db:code> is specified it will be used as the currency symbol.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtqml-locale.xml#currencySymbol-method">Locale::currencySymbol</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="toLocaleString-method">
<db:title>string toLocaleString(<db:emphasis>locale</db:emphasis>, <db:emphasis>format</db:emphasis>, <db:emphasis>precision</db:emphasis>)</db:title>
<db:para>Converts the Number to a string suitable for the specified <db:code role="parameter">locale</db:code> in the specified <db:code role="parameter">format</db:code>, with the specified <db:code role="parameter">precision</db:code>.</db:para>
<db:para>Valid formats are:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>'f' Decimal floating point, e.g. 248.65</db:para>
</db:listitem>
<db:listitem>
<db:para>'e' Scientific notation using e character, e.g. 2.4865e+2</db:para>
</db:listitem>
<db:listitem>
<db:para>'E' Scientific notation using E character, e.g. 2.4865E+2</db:para>
</db:listitem>
<db:listitem>
<db:para>'g' Use the shorter of e or f</db:para>
</db:listitem>
<db:listitem>
<db:para>'G' Use the shorter of E or f</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>If precision is not specified, the precision will be 2.</db:para>
<db:para>If the format is not specified 'f' will be used.</db:para>
<db:para>If <db:code role="parameter">locale</db:code> is not specified, the default locale will be used.</db:para>
<db:para>The following example shows a number formatted for the German locale:</db:para>
<db:programlisting language="cpp">import QtQuick 2.0

Text {
    text: &quot;The value is: &quot; +  Number(4742378.423).toLocaleString(Qt.locale(&quot;de_DE&quot;))
}
</db:programlisting>
<db:para>You can apply toLocaleString() directly to constants, provided the decimal is included in the constant, e.g.</db:para>
<db:programlisting language="cpp">123.0.toLocaleString(Qt.locale(&quot;de_DE&quot;)) // OK
123..toLocaleString(Qt.locale(&quot;de_DE&quot;))  // OK
123.toLocaleString(Qt.locale(&quot;de_DE&quot;))   // fails
</db:programlisting>
</db:section>
</db:section>
</db:article>
