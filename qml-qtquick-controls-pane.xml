<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Pane QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides a background matching with the application style and theme.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls-frame.xml" xlink:role="">Frame</db:link>, <db:link xlink:href="qml-qtquick-controls-page.xml" xlink:role="">Page</db:link>, <db:link xlink:href="qml-qtquick-controls-scrollview.xml" xlink:role="">ScrollView</db:link>, and <db:link xlink:href="qml-qtquick-controls-toolbar.xml" xlink:role="">ToolBar</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Control</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Pane is part of <db:simplelist><db:member>qtquickcontrols-containers</db:member><db:member>qtquickcontrols-focusscopes</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Pane provides a background color that matches with the application style and theme. Pane does not provide a layout of its own, but requires you to position its contents, for instance by creating a <db:link xlink:href="qml-qtquick-layouts-rowlayout.xml">RowLayout</db:link> or a <db:link xlink:href="qml-qtquick-layouts-columnlayout.xml">ColumnLayout</db:link>.</db:para>
<db:para>Items declared as children of a Pane are automatically parented to the Pane's <db:link xlink:href="qml-qtquick-controls-control.xml#contentItem-prop">contentItem</db:link>. Items created dynamically need to be explicitly parented to the <db:code>contentItem</db:code>.</db:para>
<db:para>As mentioned in <db:link xlink:href="qml-qtquick-controls-control.xml#event-handling">Event Handling</db:link>, Pane does not let click and touch events through to items beneath it. If wheelEnabled is <db:code>true</db:code>, the same applies to mouse wheel events.</db:para>
<db:section xml:id="content-sizing">
<db:title>Content Sizing</db:title>
<db:para>If only a single item is used within a Pane, it will resize to fit the implicit size of its contained item. This makes it particularly suitable for use together with layouts.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-pane.png"/>
</db:imageobject>
</db:mediaobject>
<db:programlisting language="qml">Pane {
    ColumnLayout {
        anchors.fill: parent
        CheckBox { text: qsTr(&quot;E-mail&quot;) }
        CheckBox { text: qsTr(&quot;Calendar&quot;) }
        CheckBox { text: qsTr(&quot;Contacts&quot;) }
    }
}
</db:programlisting>
<db:para>Sometimes there might be two items within the pane:</db:para>
<db:programlisting language="cpp">Pane {
    SwipeView {
        // ...
    }
    PageIndicator {
        anchors.horizontalCenter: parent.horizontalCenter
        anchors.bottom: parent.bottom
    }
}
</db:programlisting>
<db:para>In this case, Pane cannot calculate a sensible implicit size. Since we're anchoring the <db:link xlink:href="qml-qtquick-controls-pageindicator.xml">PageIndicator</db:link> over the <db:link xlink:href="qml-qtquick-controls-swipeview.xml">SwipeView</db:link>, we can simply set the content size to the view's implicit size:</db:para>
<db:programlisting language="cpp">Pane {
    contentWidth: view.implicitWidth
    contentHeight: view.implicitHeight

    SwipeView {
        id: view
        // ...
    }
    PageIndicator {
        anchors.horizontalCenter: parent.horizontalCenter
        anchors.bottom: parent.bottom
    }
 }
</db:programlisting>
<db:para>If the <db:link xlink:href="qml-qtquick-controls-control.xml#contentItem-prop">contentItem</db:link> has no implicit size and only one child, Pane will use the implicit size of that child. For example, in the following code, the Pane assumes the size of the Rectangle:</db:para>
<db:programlisting language="cpp">Pane {
    Item {
        Rectangle {
            implicitWidth: 200
            implicitHeight: 200
            color: &quot;salmon&quot;
        }
    }
}
</db:programlisting>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols-customize.xml#customizing-pane">Customizing Pane</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols-containers.xml">Container Controls</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols-focus.xml">Focus Management in Qt Quick Controls</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-control.xml#event-handling">Event Handling</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="contentChildren-prop">
<db:title>contentChildren : list&lt;Item&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;Item&gt;</db:type>
<db:varname>contentChildren</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the list of content children.</db:para>
<db:para>The list contains all items that have been declared in QML as children of the pane.</db:para>
<db:note>
<db:para>Unlike <db:code>contentData</db:code>, <db:code>contentChildren</db:code> does not include non-visual QML objects.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-item.xml#children-prop">Item::children</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-pane.xml#contentData-prop">contentData</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contentData-prop">
<db:title>[default] contentData : list&lt;QtObject&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;QtObject&gt;</db:type>
<db:varname>contentData</db:varname>
<db:modifier>writable</db:modifier>
<db:modifier>[default]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the list of content data.</db:para>
<db:para>The list contains all objects that have been declared in QML as children of the pane.</db:para>
<db:note>
<db:para>Unlike <db:code>contentChildren</db:code>, <db:code>contentData</db:code> does include non-visual QML objects.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-item.xml#data-prop">Item::data</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls-pane.xml#contentChildren-prop">contentChildren</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contentHeight-prop">
<db:title>contentHeight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>contentHeight</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the content height. It is used for calculating the total implicit height of the pane.</db:para>
<db:para>For more information, see <db:link xlink:href="qml-qtquick-controls-pane.xml#content-sizing">Content Sizing</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-pane.xml#contentWidth-prop">contentWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contentWidth-prop">
<db:title>contentWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>contentWidth</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the content width. It is used for calculating the total implicit width of the pane.</db:para>
<db:para>For more information, see <db:link xlink:href="qml-qtquick-controls-pane.xml#content-sizing">Content Sizing</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-pane.xml#contentHeight-prop">contentHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
