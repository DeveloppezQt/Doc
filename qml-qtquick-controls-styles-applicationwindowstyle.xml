<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ApplicationWindowStyle QML Type</db:title>
<db:productname>QtQuickControls1</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 1 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides custom styling for <db:link xlink:href="qml-qtquick-controls-applicationwindow.xml">ApplicationWindow</db:link>.</db:para>
<db:para>This type was introduced in Qt 5.4.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls.Styles 1.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>QtObject</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>ApplicationWindowStyle is part of <db:simplelist><db:member><db:link xlink:href="controlsstyling.xml">Styling Controls</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>You can create a custom window background by replacing the &quot;background&quot; delegate of <db:link xlink:href="qml-qtquick-controls-styles-applicationwindowstyle.xml">ApplicationWindowStyle</db:link> with a custom design.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="qml">ApplicationWindow {
    style: ApplicationWindowStyle {
        background: BorderImage {
            source: &quot;background.png&quot;
            border { left: 20; top: 20; right: 20; bottom: 20 }
        }
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="background-prop">
<db:title>background : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>background</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>A custom background for the window.</db:para>
<db:note>
<db:para>The window might have a custom background color set. The custom background color is automatically filled by the window. The background delegate should respect the custom background color by either hiding itself altogether when a custom background color is set, or by letting the custom background color shine through.</db:para>
</db:note>
<db:para>The following read-only property is available within the scope of the background delegate:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold">styleData.hasColor</db:emphasis> : bool</db:para>
</db:td>
<db:td>
<db:para>Whether the window has a custom background color set.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="control-prop">
<db:title>[read-only] control : ApplicationWindow</db:title>
<db:fieldsynopsis>
<db:type>ApplicationWindow</db:type>
<db:varname>control</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The window attached to this style.</db:para>
</db:section>
</db:section>
</db:article>
