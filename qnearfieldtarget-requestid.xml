<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>RequestId Class</db:title>
<db:subtitle>QNearFieldTarget::RequestId</db:subtitle>
<db:productname>QtNfc</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt NFC Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A request id handle.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QNearFieldTarget</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Nfc)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Nfc)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += nfc</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="RequestId">
<db:title>RequestId::RequestId()</db:title>
<db:para>Constructs a new invalid request id handle.</db:para>
</db:section>
<db:section xml:id="RequestId-1">
<db:title>RequestId::RequestId(const QNearFieldTarget::RequestId &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a new request id handle that is a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.RequestId">
<db:title>[noexcept] RequestId::~RequestId()</db:title>
<db:para>Destroys the request id handle.</db:para>
</db:section>
<db:section xml:id="isValid">
<db:title>bool RequestId::isValid() const</db:title>
<db:para>Returns <db:code>true</db:code> if this is a valid request id; otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="refCount">
<db:title>int RequestId::refCount() const</db:title>
<db:para>Returns the current reference count of the request id.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QNearFieldTarget::RequestId &amp;RequestId::operator=(const QNearFieldTarget::RequestId &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns a copy of <db:code role="parameter">other</db:code> to this request id and returns a reference to this request id.</db:para>
</db:section>
</db:section>
</db:article>
