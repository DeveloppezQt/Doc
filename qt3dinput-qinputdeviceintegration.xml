<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QInputDeviceIntegration Class</db:title>
<db:subtitle>Qt3DInput::QInputDeviceIntegration</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Abstract base class used to define new input methods such as game controllers.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QInputDeviceIntegration</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3dinput)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3dinput)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dinput</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QInputDeviceIntegration">
<db:title>[explicit protected] QInputDeviceIntegration::QInputDeviceIntegration(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QInputDeviceIntegration</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QInputDeviceIntegration(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a new <db:link xlink:href="qt3dinput-qinputdeviceintegration.xml">QInputDeviceIntegration</db:link> with <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="createPhysicalDevice">
<db:title>[pure virtual] Qt3DInput::QAbstractPhysicalDevice *QInputDeviceIntegration::createPhysicalDevice(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>Qt3DInput::QAbstractPhysicalDevice *</db:type>
<db:methodname>createPhysicalDevice</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">Qt3DInput::QAbstractPhysicalDevice * createPhysicalDevice(const QString &amp;name) = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Create the Physical device identified by <db:code role="parameter">name</db:code>.</db:para>
<db:para>If not recognized return nullptr</db:para>
</db:section>
<db:section xml:id="initialize">
<db:title>void QInputDeviceIntegration::initialize(Qt3DInput::QInputAspect *<db:emphasis>aspect</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>initialize</db:methodname>
<db:methodparam>
<db:type>Qt3DInput::QInputAspect *</db:type>
<db:parameter>aspect</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void initialize(Qt3DInput::QInputAspect *aspect)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Called by the InputAspect object after the integration has been created with <db:code role="parameter">aspect</db:code>.</db:para>
</db:section>
<db:section xml:id="inputAspect">
<db:title>[protected] Qt3DInput::QInputAspect *QInputDeviceIntegration::inputAspect() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>Qt3DInput::QInputAspect *</db:type>
<db:methodname>inputAspect</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">Qt3DInput::QInputAspect * inputAspect() const</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>QInputDeviceIntegration::inputAspect Returns the Input Aspect associated with the InputDeviceIntegration</db:para>
</db:section>
<db:section xml:id="physicalDevice">
<db:title>[pure virtual] QAbstractPhysicalDeviceBackendNode *QInputDeviceIntegration::physicalDevice(Qt3DCore::QNodeId <db:emphasis>id</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QAbstractPhysicalDeviceBackendNode *</db:type>
<db:methodname>physicalDevice</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QNodeId</db:type>
<db:parameter>id</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QAbstractPhysicalDeviceBackendNode * physicalDevice(Qt3DCore::QNodeId id) const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the <db:link xlink:href="qt3dinput-qabstractphysicaldevice.xml">QAbstractPhysicalDevice</db:link> identified by the given <db:code role="parameter">id</db:code> if it is related to this <db:link xlink:href="qt3dinput-qinputdeviceintegration.xml">QInputDeviceIntegration</db:link>.</db:para>
</db:section>
<db:section xml:id="physicalDevices">
<db:title>[pure virtual] QList&lt;Qt3DCore::QNodeId&gt; QInputDeviceIntegration::physicalDevices() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QList&lt;Qt3DCore::QNodeId&gt;</db:type>
<db:methodname>physicalDevices</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;Qt3DCore::QNodeId&gt; physicalDevices() const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of node ids for physical devices associated with this <db:link xlink:href="qt3dinput-qinputdeviceintegration.xml">QInputDeviceIntegration</db:link>.</db:para>
</db:section>
<db:section xml:id="registerBackendType-1">
<db:title>[protected] void QInputDeviceIntegration::registerBackendType(const QMetaObject &amp;<db:emphasis>metaObject</db:emphasis>, const Qt3DCore::QBackendNodeMapperPtr &amp;<db:emphasis>functor</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>registerBackendType</db:methodname>
<db:methodparam>
<db:type>const QMetaObject &amp;</db:type>
<db:parameter>metaObject</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const Qt3DCore::QBackendNodeMapperPtr &amp;</db:type>
<db:parameter>functor</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">void registerBackendType(const QMetaObject &amp;metaObject, const Qt3DCore::QBackendNodeMapperPtr &amp;functor)</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Registers a corresponding backend class for this front end implementation with <db:code role="parameter">metaObject</db:code> and <db:code role="parameter">functor</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
