<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAbstractAxis Class</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qabstractaxis-qtcharts.xml">QAbstractAxis</db:link> class is a base class used for specialized axis classes.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAbstractAxis</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtcharts-abstractaxis.xml" xlink:role="">AbstractAxis</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qbarcategoryaxis-qtcharts.xml" xlink:role="class">QBarCategoryAxis</db:link>, <db:link xlink:href="qcoloraxis-qtcharts.xml" xlink:role="class">QColorAxis</db:link>, <db:link xlink:href="qdatetimeaxis-qtcharts.xml" xlink:role="class">QDateTimeAxis</db:link>, <db:link xlink:href="qlogvalueaxis-qtcharts.xml" xlink:role="class">QLogValueAxis</db:link>, and <db:link xlink:href="qvalueaxis-qtcharts.xml" xlink:role="class">QValueAxis</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Each series can be bound to one or more horizontal and vertical axes, but mixing axis types that would result in different domains is not supported, such as specifying <db:link xlink:href="qvalueaxis-qtcharts.xml">QValueAxis</db:link> and <db:link xlink:href="qlogvalueaxis-qtcharts.xml">QLogValueAxis</db:link> on the same orientation.</db:para>
<db:para>The properties and visibility of various axis elements, such as axis line, title, labels, grid lines, and shades, can be individually controlled.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="AxisType-enum">
<db:title>enum QAbstractAxis::AxisType</db:title>
<db:bridgehead renderas="sect2">flags QAbstractAxis::AxisTypes</db:bridgehead>
<db:para>This enum type specifies the type of the axis object.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml">QAbstractAxis</db:link></db:emphasis>::AxisTypeNoAxis</db:code></db:para>
</db:td>
<db:td><db:code>0x0</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml">QAbstractAxis</db:link></db:emphasis>::AxisTypeValue</db:code></db:para>
</db:td>
<db:td><db:code>0x1</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml">QAbstractAxis</db:link></db:emphasis>::AxisTypeBarCategory</db:code></db:para>
</db:td>
<db:td><db:code>0x2</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml">QAbstractAxis</db:link></db:emphasis>::AxisTypeCategory</db:code></db:para>
</db:td>
<db:td><db:code>0x4</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml">QAbstractAxis</db:link></db:emphasis>::AxisTypeDateTime</db:code></db:para>
</db:td>
<db:td><db:code>0x8</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml">QAbstractAxis</db:link></db:emphasis>::AxisTypeLogValue</db:code></db:para>
</db:td>
<db:td><db:code>0x10</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml">QAbstractAxis</db:link></db:emphasis>::AxisTypeColor</db:code></db:para>
</db:td>
<db:td><db:code>0x20</db:code></db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>AxisTypes</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;AxisType&gt;. </db:code>It stores an OR combination of <db:code>AxisType</db:code> values.</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="alignment-prop">
<db:title>[read-only] alignment : const Qt::Alignment</db:title>
<db:para>This property holds the alignment of the axis.</db:para>
<db:para>Can be <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignLeft</db:link>, <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignRight</db:link>, <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignBottom</db:link>, or <db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::AlignTop</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt.xml#AlignmentFlag-enum">Qt::Alignment</db:link></db:type> <db:emphasis role="bold">alignment</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="color-prop">
<db:title>color : QColor</db:title>
<db:para>This property holds the color of the axis and tick marks.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">linePenColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLinePenColor</db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#colorChanged">colorChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="gridLineColor-prop">
<db:title>gridLineColor : QColor</db:title>
<db:para>This property holds the color of the grid line.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">gridLineColor</db:emphasis>()</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setGridLineColor</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#gridLineColorChanged">gridLineColorChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="gridLinePen-prop">
<db:title>gridLinePen : QPen</db:title>
<db:para>This property holds the pen used to draw the grid line.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#gridLinePen">gridLinePen</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#setGridLinePen">setGridLinePen</db:link></db:emphasis>(const <db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> &amp;<db:emphasis>pen</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#gridLinePenChanged">gridLinePenChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> &amp;<db:emphasis>pen</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="gridVisible-prop">
<db:title>gridVisible : bool</db:title>
<db:para>This property holds the visibility of the grid lines.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isGridLineVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setGridLineVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#gridVisibleChanged">gridVisibleChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelsAngle-prop">
<db:title>labelsAngle : int</db:title>
<db:para>This property holds the angle of the axis labels in degrees.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">labelsAngle</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLabelsAngle</db:emphasis>(<db:type>int</db:type> <db:emphasis>angle</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#labelsAngleChanged">labelsAngleChanged</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>angle</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelsBrush-prop">
<db:title>labelsBrush : QBrush</db:title>
<db:para>This property holds the brush used to draw the labels.</db:para>
<db:para>Only the color of the brush is relevant.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#labelsBrush">labelsBrush</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#setLabelsBrush">setLabelsBrush</db:link></db:emphasis>(const <db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> &amp;<db:emphasis>brush</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#labelsBrushChanged">labelsBrushChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> &amp;<db:emphasis>brush</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelsColor-prop">
<db:title>labelsColor : QColor</db:title>
<db:para>This property holds the color of the axis labels.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">labelsColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLabelsColor</db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#labelsColorChanged">labelsColorChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelsFont-prop">
<db:title>labelsFont : QFont</db:title>
<db:para>This property holds the font of the axis labels.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#labelsFont">labelsFont</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#setLabelsFont">setLabelsFont</db:link></db:emphasis>(const <db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> &amp;<db:emphasis>font</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#labelsFontChanged">labelsFontChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> &amp;<db:emphasis>font</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelsTruncated-prop">
<db:title>[read-only] labelsTruncated : const bool</db:title>
<db:para>Returns <db:code>true</db:code> if at least one label on the axis is truncated.</db:para>
<db:para>Returned value will not be accurate before the axis is shown.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">labelsTruncated</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#labelsTruncatedChanged">labelsTruncatedChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>labelsTruncated</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelsVisible-prop">
<db:title>labelsVisible : bool</db:title>
<db:para>This property holds whether axis labels are visible.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">labelsVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLabelsVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#labelsVisibleChanged">labelsVisibleChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="linePen-prop">
<db:title>linePen : QPen</db:title>
<db:para>This property holds the pen used to draw the line.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#linePen">linePen</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#setLinePen">setLinePen</db:link></db:emphasis>(const <db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> &amp;<db:emphasis>pen</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#linePenChanged">linePenChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> &amp;<db:emphasis>pen</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="lineVisible-prop">
<db:title>lineVisible : bool</db:title>
<db:para>This property holds the visibility of the axis line.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isLineVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#setLineVisible">setLineVisible</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#lineVisibleChanged">lineVisibleChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="minorGridLineColor-prop">
<db:title>minorGridLineColor : QColor</db:title>
<db:para>This property holds the color of the minor grid line.</db:para>
<db:para>Applies only to axes that support minor grid lines.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">minorGridLineColor</db:emphasis>()</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinorGridLineColor</db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#minorGridLineColorChanged">minorGridLineColorChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> &amp;<db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="minorGridLinePen-prop">
<db:title>minorGridLinePen : QPen</db:title>
<db:para>This property holds the pen used to draw the minor grid line.</db:para>
<db:para>Applies only to axes that support minor grid lines.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> <db:emphasis role="bold">minorGridLinePen</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinorGridLinePen</db:emphasis>(const <db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> &amp;<db:emphasis>pen</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#minorGridLinePenChanged">minorGridLinePenChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> &amp;<db:emphasis>pen</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="minorGridVisible-prop">
<db:title>minorGridVisible : bool</db:title>
<db:para>This property holds the visibility of the minor grid lines.</db:para>
<db:para>Applies only to axes that support minor grid lines.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isMinorGridLineVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinorGridLineVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#minorGridVisibleChanged">minorGridVisibleChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="orientation-prop">
<db:title>[read-only] orientation : const Qt::Orientation</db:title>
<db:para>This property holds the orientation of the axis.</db:para>
<db:para>Fixed to either <db:link xlink:href="qt.xml#Orientation-enum">Qt::Horizontal</db:link> or <db:link xlink:href="qt.xml#Orientation-enum">Qt::Vertical</db:link> when the axis is added to a chart.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt.xml#Orientation-enum">Qt::Orientation</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#orientation">orientation</db:link></db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="reverse-prop">
<db:title>reverse : bool</db:title>
<db:para>This property holds whether a reverse axis is used.</db:para>
<db:para>By default, the value is <db:code>false</db:code>.</db:para>
<db:para>The reverse axis is supported with a line, spline, and scatter series, as well as an area series with a cartesian chart. All axes of the same orientation attached to the same series must be reversed if one is reversed or the behavior is undefined.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isReverse</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setReverse</db:emphasis>(<db:type>bool</db:type> <db:emphasis>reverse</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">reverseChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>reverse</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="shadesBorderColor-prop">
<db:title>shadesBorderColor : QColor</db:title>
<db:para>This property holds the border (pen) color of the axis shades.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">shadesBorderColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setShadesBorderColor</db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#shadesBorderColorChanged">shadesBorderColorChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="shadesBrush-prop">
<db:title>shadesBrush : QBrush</db:title>
<db:para>This property holds the brush used to draw the axis shades (the area between the grid lines).</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#shadesBrush">shadesBrush</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#setShadesBrush">setShadesBrush</db:link></db:emphasis>(const <db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> &amp;<db:emphasis>brush</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#shadesBrushChanged">shadesBrushChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> &amp;<db:emphasis>brush</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="shadesColor-prop">
<db:title>shadesColor : QColor</db:title>
<db:para>This property holds the fill (brush) color of the axis shades.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold">shadesColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setShadesColor</db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#shadesColorChanged">shadesColorChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="shadesPen-prop">
<db:title>shadesPen : QPen</db:title>
<db:para>This property holds the pen used to draw the axis shades (the area between the grid lines).</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#shadesPen">shadesPen</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#setShadesPen">setShadesPen</db:link></db:emphasis>(const <db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> &amp;<db:emphasis>pen</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#shadesPenChanged">shadesPenChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> &amp;<db:emphasis>pen</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="shadesVisible-prop">
<db:title>shadesVisible : bool</db:title>
<db:para>This property holds the visibility of the axis shades.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">shadesVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setShadesVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#shadesVisibleChanged">shadesVisibleChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="titleBrush-prop">
<db:title>titleBrush : QBrush</db:title>
<db:para>This property holds the brush used to draw the title text.</db:para>
<db:para>Only the color of the brush is relevant.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#titleBrush">titleBrush</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#setTitleBrush">setTitleBrush</db:link></db:emphasis>(const <db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> &amp;<db:emphasis>brush</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#titleBrushChanged">titleBrushChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> &amp;<db:emphasis>brush</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="titleFont-prop">
<db:title>titleFont : QFont</db:title>
<db:para>This property holds the font of the title of the axis.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#titleFont">titleFont</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#setTitleFont">setTitleFont</db:link></db:emphasis>(const <db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> &amp;<db:emphasis>font</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#titleFontChanged">titleFontChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> &amp;<db:emphasis>font</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="titleText-prop">
<db:title>titleText : QString</db:title>
<db:para>This property holds the title of the axis.</db:para>
<db:para>Empty by default. Axis titles support HTML formatting.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">titleText</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTitleText</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>title</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#titleTextChanged">titleTextChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>text</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="titleVisible-prop">
<db:title>titleVisible : bool</db:title>
<db:para>This property holds the visibility of the axis title.</db:para>
<db:para>By default, the value is <db:code>true</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isTitleVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTitleVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#titleVisibleChanged">titleVisibleChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="truncateLabels-prop">
<db:title>truncateLabels : bool</db:title>
<db:para>This property holds the truncation state of labels.</db:para>
<db:para>Indicates whether labels should be truncated if there is no enough space for full text. It is equal to <db:code>true</db:code> by default.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">truncateLabels</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTruncateLabels</db:emphasis>(<db:type>bool</db:type> <db:emphasis>truncateLabels</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#truncateLabelsChanged">truncateLabelsChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>truncateLabels</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="visible-prop">
<db:title>visible : bool</db:title>
<db:para>This property holds the visibility of the axis.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#setVisible">setVisible</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractaxis-qtcharts.xml#visibleChanged">visibleChanged</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="dtor.QAbstractAxis">
<db:title>[virtual noexcept] QAbstractAxis::~QAbstractAxis()</db:title>
<db:para>Destructs the axis object. When the axis is added to a chart, the chart object takes ownership.</db:para>
</db:section>
<db:section xml:id="colorChanged">
<db:title>void QAbstractAxis::colorChanged(QColor <db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the color of the axis changes to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#color-prop">color</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="gridLineColorChanged">
<db:title>void QAbstractAxis::gridLineColorChanged(const QColor &amp;<db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the color of the pen used to draw the grid line changes to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#gridLineColor-prop">gridLineColor</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="gridLinePen">
<db:title>QPen QAbstractAxis::gridLinePen() const</db:title>
<db:para>Returns the pen used to draw the grid.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#gridLinePen-prop">gridLinePen</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#setGridLinePen">setGridLinePen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="gridLinePenChanged">
<db:title>void QAbstractAxis::gridLinePenChanged(const QPen &amp;<db:emphasis>pen</db:emphasis>)</db:title>
<db:para>This signal is emitted when the pen used to draw the grid line changes to <db:code role="parameter">pen</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#gridLinePen-prop">gridLinePen</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="gridVisibleChanged">
<db:title>void QAbstractAxis::gridVisibleChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:para>This signal is emitted when the visibility of the grid lines of the axis changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#gridVisible-prop">gridVisible</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="hide">
<db:title>void QAbstractAxis::hide()</db:title>
<db:para>Makes the axis, shades, labels, and grid lines invisible.</db:para>
</db:section>
<db:section xml:id="labelsAngleChanged">
<db:title>void QAbstractAxis::labelsAngleChanged(int <db:emphasis>angle</db:emphasis>)</db:title>
<db:para>This signal is emitted when the angle of the axis labels changes to <db:code role="parameter">angle</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#labelsAngle-prop">labelsAngle</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="labelsBrush">
<db:title>QBrush QAbstractAxis::labelsBrush() const</db:title>
<db:para>Returns the brush used to draw labels.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#labelsBrush-prop">labelsBrush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#setLabelsBrush">setLabelsBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelsBrushChanged">
<db:title>void QAbstractAxis::labelsBrushChanged(const QBrush &amp;<db:emphasis>brush</db:emphasis>)</db:title>
<db:para>This signal is emitted when the brush used to draw the axis labels changes to <db:code role="parameter">brush</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#labelsBrush-prop">labelsBrush</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="labelsColorChanged">
<db:title>void QAbstractAxis::labelsColorChanged(QColor <db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the color of the axis labels changes to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#labelsColor-prop">labelsColor</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="labelsEditable">
<db:title>bool QAbstractAxis::labelsEditable() const</db:title>
<db:para>Returns <db:code>true</db:code> if axis labels are editable.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#setLabelsEditable">setLabelsEditable</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelsEditableChanged">
<db:title>void QAbstractAxis::labelsEditableChanged(bool <db:emphasis>editable</db:emphasis>)</db:title>
<db:para>This signal is emitted when the <db:code role="parameter">editable</db:code> state of the label changes.</db:para>
</db:section>
<db:section xml:id="labelsFont">
<db:title>QFont QAbstractAxis::labelsFont() const</db:title>
<db:para>Returns the font used to draw labels.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#labelsFont-prop">labelsFont</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#setLabelsFont">setLabelsFont</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelsFontChanged">
<db:title>void QAbstractAxis::labelsFontChanged(const QFont &amp;<db:emphasis>font</db:emphasis>)</db:title>
<db:para>This signal is emitted when the font of the axis labels changes to <db:code role="parameter">font</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#labelsFont-prop">labelsFont</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="labelsTruncatedChanged">
<db:title>[since 6.2] void QAbstractAxis::labelsTruncatedChanged(bool <db:emphasis>labelsTruncated</db:emphasis>)</db:title>
<db:para>This signal is emitted in two cases; when the axis changes from having one or more truncated labels to having no truncated labels, and when the axis changes from having no truncated labels to having one or more truncated labels. Current state is identified by <db:code role="parameter">labelsTruncated</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#labelsTruncated-prop">labelsTruncated</db:link>. </db:para>
</db:note>
<db:para>This function was introduced in Qt 6.2.</db:para>
</db:section>
<db:section xml:id="labelsVisibleChanged">
<db:title>void QAbstractAxis::labelsVisibleChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:para>This signal is emitted when the visibility of the labels of the axis changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#labelsVisible-prop">labelsVisible</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="linePen">
<db:title>QPen QAbstractAxis::linePen() const</db:title>
<db:para>Returns the pen used to draw the axis line and tick marks.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#linePen-prop">linePen</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#setLinePen">setLinePen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="linePenChanged">
<db:title>void QAbstractAxis::linePenChanged(const QPen &amp;<db:emphasis>pen</db:emphasis>)</db:title>
<db:para>This signal is emitted when the pen used to draw the line of the axis changes to <db:code role="parameter">pen</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#linePen-prop">linePen</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="lineVisibleChanged">
<db:title>void QAbstractAxis::lineVisibleChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:para>This signal is emitted when the visibility of the axis line changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#lineVisible-prop">lineVisible</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="minorGridLineColorChanged">
<db:title>void QAbstractAxis::minorGridLineColorChanged(const QColor &amp;<db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the color of the pen used to draw the minor grid line changes to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#minorGridLineColor-prop">minorGridLineColor</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="minorGridLinePenChanged">
<db:title>void QAbstractAxis::minorGridLinePenChanged(const QPen &amp;<db:emphasis>pen</db:emphasis>)</db:title>
<db:para>This signal is emitted when the pen used to draw the minor grid line changes to <db:code role="parameter">pen</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#minorGridLinePen-prop">minorGridLinePen</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="minorGridVisibleChanged">
<db:title>void QAbstractAxis::minorGridVisibleChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:para>This signal is emitted when the visibility of the minor grid lines of the axis changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#minorGridVisible-prop">minorGridVisible</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="orientation">
<db:title>Qt::Orientation QAbstractAxis::orientation() const</db:title>
<db:para>Returns the orientation of the axis (vertical or horizontal).</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#orientation-prop">orientation</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="setGridLinePen">
<db:title>void QAbstractAxis::setGridLinePen(const QPen &amp;<db:emphasis>pen</db:emphasis>)</db:title>
<db:para>Sets the pen used to draw the grid lines to <db:code role="parameter">pen</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#gridLinePen-prop">gridLinePen</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#gridLinePen">gridLinePen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLabelsBrush">
<db:title>void QAbstractAxis::setLabelsBrush(const QBrush &amp;<db:emphasis>brush</db:emphasis>)</db:title>
<db:para>Sets the brush used to draw labels to <db:code role="parameter">brush</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#labelsBrush-prop">labelsBrush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#labelsBrush">labelsBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLabelsEditable">
<db:title>void QAbstractAxis::setLabelsEditable(bool <db:emphasis>editable</db:emphasis> = true)</db:title>
<db:para>Sets axis labels editability to <db:code role="parameter">editable</db:code>.</db:para>
<db:para>When the labels are editable the user will be able to change the range of the axis conveniently by editing any of the labels. This feature is only supported for the <db:link xlink:href="qvalueaxis-qtcharts.xml">QValueAxis</db:link> and the <db:link xlink:href="qdatetimeaxis-qtcharts.xml">QDateTimeAxis</db:link>.</db:para>
<db:para>By default, labels are not editable.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#labelsEditable">labelsEditable</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLabelsFont">
<db:title>void QAbstractAxis::setLabelsFont(const QFont &amp;<db:emphasis>font</db:emphasis>)</db:title>
<db:para>Sets the font used to draw labels to <db:code role="parameter">font</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#labelsFont-prop">labelsFont</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#labelsFont">labelsFont</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLinePen">
<db:title>void QAbstractAxis::setLinePen(const QPen &amp;<db:emphasis>pen</db:emphasis>)</db:title>
<db:para>Sets the pen used to draw the axis line and tick marks to <db:code role="parameter">pen</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#linePen-prop">linePen</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#linePen">linePen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLineVisible">
<db:title>void QAbstractAxis::setLineVisible(bool <db:emphasis>visible</db:emphasis> = true)</db:title>
<db:para>Determines whether the axis line and tick marks are <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#lineVisible-prop">lineVisible</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#lineVisible-prop">isLineVisible</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setMax">
<db:title>void QAbstractAxis::setMax(const QVariant &amp;<db:emphasis>max</db:emphasis>)</db:title>
<db:para>Sets the maximum value shown on the axis. Depending on the actual axis type, the <db:code role="parameter">max</db:code> parameter is converted to the appropriate type of value. If the conversion is impossible, the function call does nothing.</db:para>
</db:section>
<db:section xml:id="setMin">
<db:title>void QAbstractAxis::setMin(const QVariant &amp;<db:emphasis>min</db:emphasis>)</db:title>
<db:para>Sets the minimum value shown on the axis. Depending on the actual axis type, the <db:code role="parameter">min</db:code> parameter is converted to the appropriate type of value. If the conversion is impossible, the function call does nothing.</db:para>
</db:section>
<db:section xml:id="setRange">
<db:title>void QAbstractAxis::setRange(const QVariant &amp;<db:emphasis>min</db:emphasis>, const QVariant &amp;<db:emphasis>max</db:emphasis>)</db:title>
<db:para>Sets the range shown on the axis. Depending on the actual axis type, the <db:code role="parameter">min</db:code> and <db:code role="parameter">max</db:code> parameters are converted to appropriate types of values. If the conversion is impossible, the function call does nothing.</db:para>
</db:section>
<db:section xml:id="setShadesBrush">
<db:title>void QAbstractAxis::setShadesBrush(const QBrush &amp;<db:emphasis>brush</db:emphasis>)</db:title>
<db:para>Sets the brush used to draw shades to <db:code role="parameter">brush</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#shadesBrush-prop">shadesBrush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#shadesBrush">shadesBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setShadesPen">
<db:title>void QAbstractAxis::setShadesPen(const QPen &amp;<db:emphasis>pen</db:emphasis>)</db:title>
<db:para>Sets the pen used to draw shades to <db:code role="parameter">pen</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#shadesPen-prop">shadesPen</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#shadesPen">shadesPen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTitleBrush">
<db:title>void QAbstractAxis::setTitleBrush(const QBrush &amp;<db:emphasis>brush</db:emphasis>)</db:title>
<db:para>Sets the brush used to draw titles to <db:code role="parameter">brush</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#titleBrush-prop">titleBrush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#titleBrush">titleBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTitleFont">
<db:title>void QAbstractAxis::setTitleFont(const QFont &amp;<db:emphasis>font</db:emphasis>)</db:title>
<db:para>Sets the font used to draw titles to <db:code role="parameter">font</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#titleFont-prop">titleFont</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#titleFont">titleFont</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setVisible">
<db:title>void QAbstractAxis::setVisible(bool <db:emphasis>visible</db:emphasis> = true)</db:title>
<db:para>Sets the visibility of the axis, shades, labels, and grid lines to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#visible-prop">visible</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#visible-prop">isVisible</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="shadesBorderColorChanged">
<db:title>void QAbstractAxis::shadesBorderColorChanged(QColor <db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the border color of the axis shades changes to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#shadesBorderColor-prop">shadesBorderColor</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="shadesBrush">
<db:title>QBrush QAbstractAxis::shadesBrush() const</db:title>
<db:para>Returns the brush used to draw shades.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#shadesBrush-prop">shadesBrush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#setShadesBrush">setShadesBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="shadesBrushChanged">
<db:title>void QAbstractAxis::shadesBrushChanged(const QBrush &amp;<db:emphasis>brush</db:emphasis>)</db:title>
<db:para>This signal is emitted when the brush used to draw the axis shades changes to <db:code role="parameter">brush</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#shadesBrush-prop">shadesBrush</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="shadesColorChanged">
<db:title>void QAbstractAxis::shadesColorChanged(QColor <db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the color of the axis shades changes to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#shadesColor-prop">shadesColor</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="shadesPen">
<db:title>QPen QAbstractAxis::shadesPen() const</db:title>
<db:para>Returns the pen used to draw shades.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#shadesPen-prop">shadesPen</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#setShadesPen">setShadesPen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="shadesPenChanged">
<db:title>void QAbstractAxis::shadesPenChanged(const QPen &amp;<db:emphasis>pen</db:emphasis>)</db:title>
<db:para>This signal is emitted when the pen used to draw the axis shades changes to <db:code role="parameter">pen</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#shadesPen-prop">shadesPen</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="shadesVisibleChanged">
<db:title>void QAbstractAxis::shadesVisibleChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:para>This signal is emitted when the visibility of the axis shades changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#shadesVisible-prop">shadesVisible</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="show">
<db:title>void QAbstractAxis::show()</db:title>
<db:para>Makes the axis, shades, labels, and grid lines visible.</db:para>
</db:section>
<db:section xml:id="titleBrush">
<db:title>QBrush QAbstractAxis::titleBrush() const</db:title>
<db:para>Returns the brush used to draw titles.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#titleBrush-prop">titleBrush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#setTitleBrush">setTitleBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="titleBrushChanged">
<db:title>void QAbstractAxis::titleBrushChanged(const QBrush &amp;<db:emphasis>brush</db:emphasis>)</db:title>
<db:para>This signal is emitted when the brush used to draw the axis title changes to <db:code role="parameter">brush</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#titleBrush-prop">titleBrush</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="titleFont">
<db:title>QFont QAbstractAxis::titleFont() const</db:title>
<db:para>Returns the font used to draw titles.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qabstractaxis-qtcharts.xml#titleFont-prop">titleFont</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractaxis-qtcharts.xml#setTitleFont">setTitleFont</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="titleFontChanged">
<db:title>void QAbstractAxis::titleFontChanged(const QFont &amp;<db:emphasis>font</db:emphasis>)</db:title>
<db:para>This signal is emitted when the font of the axis title changes to <db:code role="parameter">font</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#titleFont-prop">titleFont</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="titleTextChanged">
<db:title>void QAbstractAxis::titleTextChanged(const QString &amp;<db:emphasis>text</db:emphasis>)</db:title>
<db:para>This signal is emitted when the text of the axis title changes to <db:code role="parameter">text</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#titleText-prop">titleText</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="titleVisibleChanged">
<db:title>void QAbstractAxis::titleVisibleChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:para>This signal is emitted when the visibility of the title text of the axis changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#titleVisible-prop">titleVisible</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="truncateLabelsChanged">
<db:title>[since 6.2] void QAbstractAxis::truncateLabelsChanged(bool <db:emphasis>truncateLabels</db:emphasis>)</db:title>
<db:para>This signal is emitted when the truncation of the labels changes to <db:code role="parameter">truncateLabels</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#truncateLabels-prop">truncateLabels</db:link>. </db:para>
</db:note>
<db:para>This function was introduced in Qt 6.2.</db:para>
</db:section>
<db:section xml:id="type">
<db:title>[pure virtual] QAbstractAxis::AxisType QAbstractAxis::type() const</db:title>
<db:para>Returns the type of the axis.</db:para>
</db:section>
<db:section xml:id="visibleChanged">
<db:title>void QAbstractAxis::visibleChanged(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:para>This signal is emitted when the visibility of the axis changes to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractaxis-qtcharts.xml#visible-prop">visible</db:link>. </db:para>
</db:note>
</db:section>
</db:section>
</db:article>
