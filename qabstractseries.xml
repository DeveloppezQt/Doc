<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAbstractSeries Class</db:title>
<db:productname>QtGraphs</db:productname>
<db:edition>Qt Graphs | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Graphs Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qabstractseries.xml">QAbstractSeries</db:link> class is a base class for all Qt Graphs for 2D series.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAbstractSeries</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Graphs)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Graphs)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += graphs</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstractbarseries.xml" xlink:role="class">QAbstractBarSeries</db:link> and <db:link xlink:href="qxyseries.xml" xlink:role="class">QXYSeries</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qtgraphs-abstractseries.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link> and <db:link xlink:href="qqmlparserstatus.xml" xlink:role="class">QQmlParserStatus</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstractbarseries.xml" xlink:role="class">QAbstractBarSeries</db:link> and <db:link xlink:href="qxyseries.xml" xlink:role="class">QXYSeries</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QAbstractSeries is part of <db:simplelist><db:member><db:link xlink:href="graphs-2d.xml">Qt Graphs C++ Classes for 2D</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Usually, the series type specific inherited classes are used instead of the base class.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlineseries.xml">QLineSeries</db:link></db:member>
<db:member><db:link xlink:href="qscatterseries.xml">QScatterSeries</db:link></db:member>
<db:member><db:link xlink:href="qbarseries.xml">QBarSeries</db:link></db:member>
<db:member><db:link xlink:href="qabstractbarseries.xml">QAbstractBarSeries</db:link></db:member>
<db:member><db:link xlink:href="qxyseries.xml">QXYSeries</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="SeriesType-enum">
<db:title>enum QAbstractSeries::SeriesType</db:title>
<db:enumsynopsis>
<db:enumname>SeriesType</db:enumname>
<db:enumitem>
<db:enumidentifier>SeriesTypeLine</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SeriesTypeBar</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SeriesTypeScatter</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the type of the series.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qabstractseries.xml">QAbstractSeries</db:link></db:emphasis>::SeriesTypeLine</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>A line chart.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qabstractseries.xml">QAbstractSeries</db:link></db:emphasis>::SeriesTypeBar</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>A vertical bar chart.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qabstractseries.xml">QAbstractSeries</db:link></db:emphasis>::SeriesTypeScatter</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>A scatter chart.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="hoverable-prop">
<db:title>hoverable : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>hoverable</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">hoverable</db:synopsisinfo>
<db:synopsisinfo role="setter">setHoverable</db:synopsisinfo>
<db:synopsisinfo role="notifier">hoverableChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Controls if the series is hoverable.</db:para>
<db:para>Controls if the series can be hovered with mouse/touch. By default, <db:code role="parameter">hoverable</db:code> is set to <db:code>false</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">hoverable</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setHoverable</db:emphasis>(<db:type>bool</db:type> <db:emphasis>newHoverable</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractseries.xml#hoverableChanged">hoverableChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="name-prop">
<db:title>name : QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>name</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">name</db:synopsisinfo>
<db:synopsisinfo role="setter">setName</db:synopsisinfo>
<db:synopsisinfo role="notifier">nameChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the name of the series.</db:para>
<db:para>The name is displayed in the legend for the series and it supports HTML formatting.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">name</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setName</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>name</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractseries.xml#nameChanged">nameChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="opacity-prop">
<db:title>opacity : qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>opacity</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">opacity</db:synopsisinfo>
<db:synopsisinfo role="setter">setOpacity</db:synopsisinfo>
<db:synopsisinfo role="notifier">opacityChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the opacity of the series.</db:para>
<db:para>By default, the opacity is 1.0. The valid values range from 0.0 (transparent) to 1.0 (opaque).</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">opacity</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setOpacity</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>opacity</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractseries.xml#opacityChanged">opacityChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="selectable-prop">
<db:title>selectable : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>selectable</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">selectable</db:synopsisinfo>
<db:synopsisinfo role="setter">setSelectable</db:synopsisinfo>
<db:synopsisinfo role="notifier">selectableChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Controls if the series is selectable.</db:para>
<db:para>Controls if the series can be selected with mouse/touch. By default, <db:code role="parameter">selectable</db:code> is set to <db:code>false</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">selectable</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSelectable</db:emphasis>(<db:type>bool</db:type> <db:emphasis>selectable</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractseries.xml#selectableChanged">selectableChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="theme-prop">
<db:title>theme : QSeriesTheme*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QSeriesTheme*</db:type>
<db:varname>theme</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">theme</db:synopsisinfo>
<db:synopsisinfo role="setter">setTheme</db:synopsisinfo>
<db:synopsisinfo role="notifier">themeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the theme of the series.</db:para>
<db:para>The theme used for this series.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qseriestheme.xml">QSeriesTheme</db:link></db:type> *<db:emphasis role="bold">theme</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTheme</db:emphasis>(<db:type><db:link xlink:href="qseriestheme.xml">QSeriesTheme</db:link></db:type> *<db:emphasis>newTheme</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractseries.xml#themeChanged">themeChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="type-prop">
<db:title>[read-only] type : const SeriesType</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>SeriesType</db:type>
<db:varname>type</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">type</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the type of the series.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>virtual <db:type><db:link xlink:href="qabstractseries.xml#SeriesType-enum">QAbstractSeries::SeriesType</db:link></db:type> <db:emphasis role="bold">type</db:emphasis>() const = 0</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="valuesMultiplier-prop">
<db:title>valuesMultiplier : qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>valuesMultiplier</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">valuesMultiplier</db:synopsisinfo>
<db:synopsisinfo role="setter">setValuesMultiplier</db:synopsisinfo>
<db:synopsisinfo role="notifier">valuesMultiplierChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Controls the series values effective visible value.</db:para>
<db:para>This variable can be used for animating the series values so they scale from 0 to actual value size. By default, the valuesMultiplier is 1.0. The valid values range from 0.0 (height 0) to 1.0 (full value).</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">valuesMultiplier</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setValuesMultiplier</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>valuesMultiplier</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractseries.xml#valuesMultiplierChanged">valuesMultiplierChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="visible-prop">
<db:title>visible : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>visible</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">isVisible</db:synopsisinfo>
<db:synopsisinfo role="setter">setVisible</db:synopsisinfo>
<db:synopsisinfo role="notifier">visibleChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Visibility of the series.</db:para>
<db:para>The visibility used for this series. By default, <db:code role="parameter">visible</db:code> is set to <db:code>true</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">isVisible</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setVisible</db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis> = true)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qabstractseries.xml#visibleChanged">visibleChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="dtor.QAbstractSeries">
<db:title>[virtual] QAbstractSeries::~QAbstractSeries()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QAbstractSeries</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QAbstractSeries()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Virtual destructor for the graph series.</db:para>
</db:section>
<db:section xml:id="attachAxis">
<db:title>bool QAbstractSeries::attachAxis(QAbstractAxis *<db:emphasis>axis</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>attachAxis</db:methodname>
<db:methodparam>
<db:type>QAbstractAxis *</db:type>
<db:parameter>axis</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool attachAxis(QAbstractAxis *axis)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Attaches the axis specified by <db:code role="parameter">axis</db:code> to the series.</db:para>
<db:para>Returns <db:code>true</db:code> if the axis was attached successfully, <db:code>false</db:code> otherwise.</db:para>
<db:note>
<db:para>If multiple axes of the same orientation are attached to the same series, they will have the same minimum and maximum values.</db:para>
</db:note>
</db:section>
<db:section xml:id="attachedAxes">
<db:title>QList&lt;QAbstractAxis *&gt; QAbstractSeries::attachedAxes()</db:title>
<db:methodsynopsis>
<db:type>QList&lt;QAbstractAxis *&gt;</db:type>
<db:methodname>attachedAxes</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QAbstractAxis *&gt; attachedAxes()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of axes attached to the series. Usually, an x-axis and a y-axis are attached to a series, except for <db:link xlink:href="qpieseries.xml">QPieSeries</db:link>, which does not have any axes attached.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractseries.xml#attachAxis">attachAxis</db:link>()</db:member>
<db:member><db:link xlink:href="qabstractseries.xml#detachAxis">detachAxis</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="detachAxis">
<db:title>bool QAbstractSeries::detachAxis(QAbstractAxis *<db:emphasis>axis</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>detachAxis</db:methodname>
<db:methodparam>
<db:type>QAbstractAxis *</db:type>
<db:parameter>axis</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool detachAxis(QAbstractAxis *axis)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Detaches the axis specified by <db:code role="parameter">axis</db:code> from the series.</db:para>
<db:para>Returns <db:code>true</db:code> if the axis was detached successfully, <db:code>false</db:code> otherwise.</db:para>
</db:section>
<db:section xml:id="graph">
<db:title>QGraphsView *QAbstractSeries::graph() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QGraphsView *</db:type>
<db:methodname>graph</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QGraphsView * graph() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the graph that the series belongs to.</db:para>
<db:para>Set automatically when the series is added to the graph, and unset when the series is removed from the graph.</db:para>
</db:section>
<db:section xml:id="hide">
<db:title>void QAbstractSeries::hide()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>hide</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void hide()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the visibility of the series to <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractseries.xml#visible-prop">setVisible</db:link>()</db:member>
<db:member><db:link xlink:href="qabstractseries.xml#visible-prop">isVisible</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hover">
<db:title>void QAbstractSeries::hover(QString <db:emphasis>seriesName</db:emphasis>, QPointF <db:emphasis>position</db:emphasis>, QPointF <db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>hover</db:methodname>
<db:methodparam>
<db:type>QString</db:type>
<db:parameter>seriesName</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QPointF</db:type>
<db:parameter>position</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QPointF</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void hover(QString seriesName, QPointF position, QPointF value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the series hovering changes. The name of the series is in <db:code role="parameter">seriesName</db:code>, the mouse/touch position in <db:code role="parameter">position</db:code>, and the series value in <db:code role="parameter">value</db:code>.</db:para>
<db:note>
<db:para>This signal is only emitted when <db:link xlink:href="qabstractseries.xml#hoverable-prop">hoverable</db:link> is set to true.</db:para>
</db:note>
</db:section>
<db:section xml:id="hoverEnter">
<db:title>void QAbstractSeries::hoverEnter(QString <db:emphasis>seriesName</db:emphasis>, QPointF <db:emphasis>position</db:emphasis>, QPointF <db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>hoverEnter</db:methodname>
<db:methodparam>
<db:type>QString</db:type>
<db:parameter>seriesName</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QPointF</db:type>
<db:parameter>position</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QPointF</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void hoverEnter(QString seriesName, QPointF position, QPointF value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the series hovering starts. The name of the series is in <db:code role="parameter">seriesName</db:code>, the mouse/touch position in <db:code role="parameter">position</db:code>, and the series value in <db:code role="parameter">value</db:code>.</db:para>
<db:note>
<db:para>This signal is only emitted when <db:link xlink:href="qabstractseries.xml#hoverable-prop">hoverable</db:link> is set to true.</db:para>
</db:note>
</db:section>
<db:section xml:id="hoverExit">
<db:title>void QAbstractSeries::hoverExit(QString <db:emphasis>seriesName</db:emphasis>, QPointF <db:emphasis>position</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>hoverExit</db:methodname>
<db:methodparam>
<db:type>QString</db:type>
<db:parameter>seriesName</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QPointF</db:type>
<db:parameter>position</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void hoverExit(QString seriesName, QPointF position)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the series hovering ends. The name of the series is in <db:code role="parameter">seriesName</db:code>, and the mouse/touch position in <db:code role="parameter">position</db:code>.</db:para>
<db:note>
<db:para>This signal is only emitted when <db:link xlink:href="qabstractseries.xml#hoverable-prop">hoverable</db:link> is set to true.</db:para>
</db:note>
</db:section>
<db:section xml:id="hoverableChanged">
<db:title>void QAbstractSeries::hoverableChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>hoverableChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">hoverable</db:synopsisinfo>
<db:synopsisinfo role="signature">void hoverableChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the series hoverable changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractseries.xml#hoverable-prop">hoverable</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="nameChanged">
<db:title>void QAbstractSeries::nameChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>nameChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">name</db:synopsisinfo>
<db:synopsisinfo role="signature">void nameChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the series name changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractseries.xml#name-prop">name</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="opacityChanged">
<db:title>void QAbstractSeries::opacityChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>opacityChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">opacity</db:synopsisinfo>
<db:synopsisinfo role="signature">void opacityChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the opacity of the series changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractseries.xml#opacity-prop">opacity</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="selectableChanged">
<db:title>void QAbstractSeries::selectableChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>selectableChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">selectable</db:synopsisinfo>
<db:synopsisinfo role="signature">void selectableChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the series selectable changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractseries.xml#selectable-prop">selectable</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="show">
<db:title>void QAbstractSeries::show()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>show</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void show()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the visibility of the series to <db:code>true</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractseries.xml#visible-prop">setVisible</db:link>()</db:member>
<db:member><db:link xlink:href="qabstractseries.xml#visible-prop">isVisible</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="themeChanged">
<db:title>void QAbstractSeries::themeChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>themeChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">theme</db:synopsisinfo>
<db:synopsisinfo role="signature">void themeChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the series theme changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractseries.xml#theme-prop">theme</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="valuesMultiplierChanged">
<db:title>void QAbstractSeries::valuesMultiplierChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>valuesMultiplierChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">valuesMultiplier</db:synopsisinfo>
<db:synopsisinfo role="signature">void valuesMultiplierChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the <db:link xlink:href="qabstractseries.xml#valuesMultiplier-prop">valuesMultiplier</db:link> of the series changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractseries.xml#valuesMultiplier-prop">valuesMultiplier</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="visibleChanged">
<db:title>void QAbstractSeries::visibleChanged()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>visibleChanged</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">visible</db:synopsisinfo>
<db:synopsisinfo role="signature">void visibleChanged()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the series visibility changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qabstractseries.xml#visible-prop">visible</db:link>. </db:para>
</db:note>
</db:section>
</db:section>
</db:article>
