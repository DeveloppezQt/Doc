<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGraphicsVideoItem Class</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgraphicsvideoitem.xml">QGraphicsVideoItem</db:link> class provides a graphics item which display video produced by a <db:link xlink:href="qmediaobject.xml">QMediaObject</db:link>.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGraphicsVideoItem</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += multimediawidgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qgraphicsobject.xml" xlink:role="class">QGraphicsObject</db:link> and <db:link xlink:href="qmediabindableinterface.xml" xlink:role="class">QMediaBindableInterface</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGraphicsVideoItem is part of <db:simplelist><db:member>multimedia</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Attaching a <db:link xlink:href="qgraphicsvideoitem.xml">QGraphicsVideoItem</db:link> to a <db:link xlink:href="qmediaobject.xml">QMediaObject</db:link> allows it to display the video or image output of that media object. A <db:link xlink:href="qgraphicsvideoitem.xml">QGraphicsVideoItem</db:link> is attached to a media object by passing a pointer to the <db:link xlink:href="qmediaobject.xml">QMediaObject</db:link> to the <db:link xlink:href="qmediabindableinterface.xml#setMediaObject">setMediaObject</db:link>() function.</db:para>
<db:programlisting language="cpp">player = new QMediaPlayer(this);

QGraphicsVideoItem *item = new QGraphicsVideoItem;
player-&gt;setVideoOutput(item);
graphicsView-&gt;scene()-&gt;addItem(item);
graphicsView-&gt;show();

player-&gt;setMedia(QUrl(&quot;http://example.com/myclip4.ogv&quot;));
player-&gt;play();
</db:programlisting>
<db:para><db:emphasis role="bold">Note</db:emphasis>: Only a single display output can be attached to a media object at one time.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediaobject.xml">QMediaObject</db:link></db:member>
<db:member><db:link xlink:href="qmediaplayer.xml">QMediaPlayer</db:link></db:member>
<db:member><db:link xlink:href="qvideowidget.xml">QVideoWidget</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="aspectRatioMode-prop">
<db:title>aspectRatioMode : Qt::AspectRatioMode</db:title>
<db:para>how a video is scaled to fit the graphics item's size.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt.xml#AspectRatioMode-enum">Qt::AspectRatioMode</db:link></db:type> <db:emphasis role="bold">aspectRatioMode</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setAspectRatioMode</db:emphasis>(<db:type><db:link xlink:href="qt.xml#AspectRatioMode-enum">Qt::AspectRatioMode</db:link></db:type> <db:emphasis>mode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="mediaObject-prop">
<db:title>mediaObject : QMediaObject* const</db:title>
<db:para>This property holds the media object which provides the video displayed by a graphics item.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>virtual <db:type><db:link xlink:href="qmediaobject.xml">QMediaObject</db:link></db:type> *<db:emphasis role="bold">mediaObject</db:emphasis>() const override</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="nativeSize-prop">
<db:title>[read-only] nativeSize : const QSizeF</db:title>
<db:para>This property holds the native size of the video.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qsizef.xml">QSizeF</db:link></db:type> <db:emphasis role="bold">nativeSize</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">nativeSizeChanged</db:emphasis>(const <db:type><db:link xlink:href="qsizef.xml">QSizeF</db:link></db:type> &amp;<db:emphasis>size</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="offset-prop">
<db:title>offset : QPointF</db:title>
<db:para>This property holds the video item's offset.</db:para>
<db:para><db:link xlink:href="qgraphicsvideoitem.xml">QGraphicsVideoItem</db:link> will draw video using the offset for its top left corner.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpointf.xml">QPointF</db:link></db:type> <db:emphasis role="bold">offset</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setOffset</db:emphasis>(const <db:type><db:link xlink:href="qpointf.xml">QPointF</db:link></db:type> &amp;<db:emphasis>offset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="size-prop">
<db:title>size : QSizeF</db:title>
<db:para>This property holds the video item's size.</db:para>
<db:para><db:link xlink:href="qgraphicsvideoitem.xml">QGraphicsVideoItem</db:link> will draw video scaled to fit size according to its fillMode.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qsizef.xml">QSizeF</db:link></db:type> <db:emphasis role="bold">size</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSize</db:emphasis>(const <db:type><db:link xlink:href="qsizef.xml">QSizeF</db:link></db:type> &amp;<db:emphasis>size</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGraphicsVideoItem">
<db:title>[explicit] QGraphicsVideoItem::QGraphicsVideoItem(QGraphicsItem *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a graphics item that displays video.</db:para>
<db:para>The <db:code role="parameter">parent</db:code> is passed to <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>.</db:para>
</db:section>
<db:section xml:id="dtor.QGraphicsVideoItem">
<db:title>[virtual noexcept] QGraphicsVideoItem::~QGraphicsVideoItem()</db:title>
<db:para>Destroys a video graphics item.</db:para>
</db:section>
<db:section xml:id="boundingRect">
<db:title>[override virtual] QRectF QGraphicsVideoItem::boundingRect() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qgraphicsitem.xml#boundingRect" role="function">QGraphicsItem::boundingRect() const</db:link>.</db:para>
</db:section>
<db:section xml:id="paint">
<db:title>[override virtual] void QGraphicsVideoItem::paint(QPainter *<db:emphasis>painter</db:emphasis>, const QStyleOptionGraphicsItem *<db:emphasis>option</db:emphasis>, QWidget *<db:emphasis>widget</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Reimplements: <db:link xlink:href="qgraphicsitem.xml#paint" role="function">QGraphicsItem::paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget)</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
