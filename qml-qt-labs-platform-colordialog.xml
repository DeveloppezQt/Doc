<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ColorDialog QML Type</db:title>
<db:productname>QtLabsPlatform</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Labs Platform Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A native color dialog.</db:para>
<db:para><db:emphasis role="bold">This type is deprecated since Qt.labs.platform 6.9. We strongly advise against using it in new code.</db:emphasis></db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt.labs.platform</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt-labs-platform-dialog.xml">Dialog</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated since 6.9</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para><db:emphasis role="bold">This type is deprecated since Qt.labs.platform 6.9. We strongly advise against using it in new code.</db:emphasis></db:para>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Use <db:link xlink:href="qtquick-module.xml">QtQuick</db:link>.Dialogs::ColorDialog instead.</db:para>
<db:para>The <db:link xlink:href="qml-qt-labs-platform-colordialog.xml">ColorDialog</db:link> type provides a QML API for native platform color dialogs.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtlabsplatform-colordialog-gtk.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>To show a color dialog, construct an instance of <db:link xlink:href="qml-qt-labs-platform-colordialog.xml">ColorDialog</db:link>, set the desired properties, and call <db:link xlink:href="qml-qt-labs-platform-dialog.xml#open-method">open</db:link>(). The <db:link xlink:href="qml-qt-labs-platform-colordialog.xml#currentColor-prop">currentColor</db:link> property can be used to determine the currently selected color in the dialog. The <db:link xlink:href="qml-qt-labs-platform-colordialog.xml#color-prop">color</db:link> property is updated only after the final selection has been made by accepting the dialog.</db:para>
<db:programlisting language="cpp">MenuItem {
    text: &quot;Color&quot;
    onTriggered: colorDialog.open()
}

ColorDialog {
    id: colorDialog
    currentColor: document.color
}

MyDocument {
    id: document
    color: colorDialog.color
}
</db:programlisting>
<db:section xml:id="availability">
<db:title>Availability</db:title>
<db:para>A native platform color dialog is currently available on the following platforms:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>iOS</db:para>
</db:listitem>
<db:listitem>
<db:para>Linux (when running with the GTK+ platform theme)</db:para>
</db:listitem>
<db:listitem>
<db:para>macOS</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The Qt Labs Platform module uses Qt Widgets as a fallback on platforms that do not have a native implementation available. Therefore, applications that use types from the Qt Labs Platform module should link to <db:link xlink:href="qtwidgets-module.xml">QtWidgets</db:link> and use <db:link xlink:href="qapplication.xml">QApplication</db:link> instead of <db:link xlink:href="qguiapplication.xml">QGuiApplication</db:link>.</db:para>
<db:para>To link against the <db:link xlink:href="qtwidgets-module.xml">QtWidgets</db:link> library, add the following to your qmake project file:</db:para>
<db:programlisting language="cpp">QT += widgets
</db:programlisting>
<db:para>Create an instance of <db:link xlink:href="qapplication.xml">QApplication</db:link> in <db:code>main()</db:code>:</db:para>
<db:programlisting language="cpp">#include &lt;QApplication&gt;
#include &lt;QQmlApplicationEngine&gt;

int main(int argc, char *argv[])
{
    QApplication app(argc, argv);
    QQmlApplicationEngine engine;
    engine.load(QUrl(QStringLiteral(&quot;qrc:/main.qml&quot;)));
    return app.exec();
}
</db:programlisting>
<db:note>
<db:para><db:emphasis>Types in Qt.labs modules are not guaranteed to remain compatible in future versions.</db:emphasis></db:para>
</db:note>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-dialogs-colordialog.xml">QtQuick.Dialogs::ColorDialog</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="color-prop">
<db:title>color : color</db:title>
<db:para>This property holds the final accepted color.</db:para>
<db:para>Unlike the <db:link xlink:href="qml-qt-labs-platform-colordialog.xml#currentColor-prop">currentColor</db:link> property, the <db:code>color</db:code> property is not updated while the user is selecting colors in the dialog, but only after the final selection has been made. That is, when the user has clicked <db:guilabel>OK</db:guilabel> to accept a color. Alternatively, the <db:link xlink:href="qml-qt-labs-platform-dialog.xml#accepted-signal">accepted</db:link>() signal can be handled to get the final selection.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-colordialog.xml#currentColor-prop">currentColor</db:link></db:member>
<db:member><db:link xlink:href="qml-qt-labs-platform-dialog.xml#accepted-signal">accepted</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="currentColor-prop">
<db:title>currentColor : color</db:title>
<db:para>This property holds the currently selected color in the dialog.</db:para>
<db:para>Unlike the <db:link xlink:href="qml-qt-labs-platform-colordialog.xml#color-prop">color</db:link> property, the <db:code>currentColor</db:code> property is updated while the user is selecting colors in the dialog, even before the final selection has been made.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt-labs-platform-colordialog.xml#color-prop">color</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="options-prop">
<db:title>options : flags</db:title>
<db:para>This property holds the various options that affect the look and feel of the dialog.</db:para>
<db:para>By default, all options are disabled.</db:para>
<db:para>Options should be set before showing the dialog. Setting them while the dialog is visible is not guaranteed to have an immediate effect on the dialog (depending on the option and on the platform).</db:para>
<db:para>Available options:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>ColorDialog.ShowAlphaChannel</db:para>
</db:td>
<db:td>
<db:para>Allow the user to select the alpha component of a color.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>ColorDialog.NoButtons</db:para>
</db:td>
<db:td>
<db:para>Don't display <db:guilabel>OK</db:guilabel> and <db:guilabel>Cancel</db:guilabel> buttons (useful for &quot;live dialogs&quot;).</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
</db:article>
