<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSGVertexColorMaterial Class</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qsgvertexcolormaterial.xml">QSGVertexColorMaterial</db:link> class provides a convenient way of rendering per-vertex colored geometry in the scene graph.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSGVertexColorMaterial</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Quick)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Quick)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += quick</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qsgmaterial.xml" xlink:role="class">QSGMaterial</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSGVertexColorMaterial is part of <db:simplelist><db:member><db:link xlink:href="qtquick-scenegraph-materials.xml">Qt Quick Scene Graph Material Classes</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:warning>
<db:para>This utility class is only functional when running with the default backend of the Qt Quick scenegraph.</db:para>
</db:warning>
<db:para>The vertex color material will give each vertex in a geometry a color. Pixels between vertices will be linearly interpolated. The colors can contain transparency.</db:para>
<db:para>The geometry to be rendered with vertex color must have the following layout. Attribute position 0 must contain vertices. Attribute position 1 must contain colors, a tuple of 4 values with RGBA layout. Both floats in the range of 0 to 1 and unsigned bytes in the range 0 to 255 are valid for the color values.</db:para>
<db:note>
<db:para>The rendering pipeline expects pixels with premultiplied alpha.</db:para>
</db:note>
<db:para><db:link xlink:href="qsggeometry.xml#defaultAttributes_ColoredPoint2D">QSGGeometry::defaultAttributes_ColoredPoint2D</db:link>() can be used to construct an attribute set that is compatible with this material.</db:para>
<db:para>The vertex color material respects both current opacity and current matrix when updating it's rendering state.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSGVertexColorMaterial">
<db:title>QSGVertexColorMaterial::QSGVertexColorMaterial()</db:title>
<db:constructorsynopsis>
<db:methodname>QSGVertexColorMaterial</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QSGVertexColorMaterial()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a new vertex color material.</db:para>
</db:section>
</db:section>
</db:article>
