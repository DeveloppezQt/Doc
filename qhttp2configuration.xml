<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QHttp2Configuration Class</db:title>
<db:productname>QtNetwork</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Network Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qhttp2configuration.xml">QHttp2Configuration</db:link> class controls HTTP/2 parameters and settings.</db:para>
<db:note>
<db:para>All functions in this class are reentrant.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QHttp2Configuration</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Network)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Network)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += network</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QHttp2Configuration is part of <db:simplelist><db:member><db:link xlink:href="network.xml">Network Programming API</db:link></db:member><db:member>shared</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qhttp2configuration.xml">QHttp2Configuration</db:link> controls HTTP/2 parameters and settings that <db:link xlink:href="qnetworkaccessmanager.xml">QNetworkAccessManager</db:link> will use to send requests and process responses when the HTTP/2 protocol is enabled.</db:para>
<db:para>The HTTP/2 parameters that <db:link xlink:href="qhttp2configuration.xml">QHttp2Configuration</db:link> currently supports include:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>The session window size for connection-level flow control. Will be sent to a remote peer when needed as 'WINDOW_UPDATE' frames on the stream with an identifier 0.</db:para>
</db:listitem>
<db:listitem>
<db:para>The stream receiving window size for stream-level flow control. Sent as 'SETTINGS_INITIAL_WINDOW_SIZE' parameter in the initial SETTINGS frame and, when needed, 'WINDOW_UPDATE' frames will be sent on streams that <db:link xlink:href="qnetworkaccessmanager.xml">QNetworkAccessManager</db:link> opens.</db:para>
</db:listitem>
<db:listitem>
<db:para>The maximum frame size. This parameter limits the maximum payload a frame coming from the remote peer can have. Sent by <db:link xlink:href="qnetworkaccessmanager.xml">QNetworkAccessManager</db:link> as 'SETTINGS_MAX_FRAME_SIZE' parameter in the initial 'SETTINGS' frame.</db:para>
</db:listitem>
<db:listitem>
<db:para>The server push. Allows to enable or disable server push. Sent as 'SETTINGS_ENABLE_PUSH' parameter in the initial 'SETTINGS' frame.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The <db:link xlink:href="qhttp2configuration.xml">QHttp2Configuration</db:link> class also controls if the header compression algorithm (HPACK) is additionally using Huffman coding for string compression.</db:para>
<db:note>
<db:para>The configuration must be set before the first request was sent to a given host (and thus an HTTP/2 session established).</db:para>
</db:note>
<db:note>
<db:para>Details about flow control, server push and 'SETTINGS' can be found in <db:link xlink:href="https://httpwg.org/specs/rfc7540.html">RFC 7540</db:link>. Different modes and parameters of the HPACK compression algorithm are described in <db:link xlink:href="https://httpwg.org/specs/rfc7541.html">RFC 7541</db:link>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkrequest.xml#setHttp2Configuration">QNetworkRequest::setHttp2Configuration</db:link>()</db:member>
<db:member><db:link xlink:href="qnetworkrequest.xml#http2Configuration">QNetworkRequest::http2Configuration</db:link>()</db:member>
<db:member><db:link xlink:href="qnetworkaccessmanager.xml">QNetworkAccessManager</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QHttp2Configuration">
<db:title>QHttp2Configuration::QHttp2Configuration()</db:title>
<db:para>Default constructs a <db:link xlink:href="qhttp2configuration.xml">QHttp2Configuration</db:link> object.</db:para>
<db:para>Such a configuration has the following values:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Server push is disabled</db:para>
</db:listitem>
<db:listitem>
<db:para>Huffman string compression is enabled</db:para>
</db:listitem>
<db:listitem>
<db:para>Window size for connection-level flow control is 65535 octets</db:para>
</db:listitem>
<db:listitem>
<db:para>Window size for stream-level flow control is 65535 octets</db:para>
</db:listitem>
<db:listitem>
<db:para>Frame size is 16384 octets</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="QHttp2Configuration-2">
<db:title>QHttp2Configuration::QHttp2Configuration(const QHttp2Configuration &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Copy-constructs this <db:link xlink:href="qhttp2configuration.xml">QHttp2Configuration</db:link>.</db:para>
</db:section>
<db:section xml:id="QHttp2Configuration-1">
<db:title>[noexcept] QHttp2Configuration::QHttp2Configuration(QHttp2Configuration &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Move-constructs this <db:link xlink:href="qhttp2configuration.xml">QHttp2Configuration</db:link> from <db:code role="parameter">other</db:code></db:para>
</db:section>
<db:section xml:id="dtor.QHttp2Configuration">
<db:title>[noexcept] QHttp2Configuration::~QHttp2Configuration()</db:title>
<db:para>Destructor.</db:para>
</db:section>
<db:section xml:id="huffmanCompressionEnabled">
<db:title>bool QHttp2Configuration::huffmanCompressionEnabled() const</db:title>
<db:para>Returns true if the Huffman coding in HPACK is enabled.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttp2configuration.xml#setHuffmanCompressionEnabled">setHuffmanCompressionEnabled</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="maxFrameSize">
<db:title>unsigned int QHttp2Configuration::maxFrameSize() const</db:title>
<db:para>Returns the maximum payload size that HTTP/2 frames can have. The default (initial) value is 16384 octets.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttp2configuration.xml#setMaxFrameSize">setMaxFrameSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="serverPushEnabled">
<db:title>bool QHttp2Configuration::serverPushEnabled() const</db:title>
<db:para>Returns true if server push was enabled.</db:para>
<db:note>
<db:para>By default, <db:link xlink:href="qnetworkaccessmanager.xml">QNetworkAccessManager</db:link> disables server push via the 'SETTINGS' frame.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttp2configuration.xml#setServerPushEnabled">setServerPushEnabled</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sessionReceiveWindowSize">
<db:title>unsigned int QHttp2Configuration::sessionReceiveWindowSize() const</db:title>
<db:para>Returns the window size for connection-level flow control. The default value <db:link xlink:href="qnetworkaccessmanager.xml">QNetworkAccessManager</db:link> will be using is 2147483647 octets.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttp2configuration.xml#setSessionReceiveWindowSize">setSessionReceiveWindowSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setHuffmanCompressionEnabled">
<db:title>void QHttp2Configuration::setHuffmanCompressionEnabled(bool <db:emphasis>enable</db:emphasis>)</db:title>
<db:para>If <db:code role="parameter">enable</db:code> is true, HPACK compression will additionally compress string using the Huffman coding. Enabled by default.</db:para>
<db:note>
<db:para>This parameter only affects 'HEADERS' frames that <db:link xlink:href="qnetworkaccessmanager.xml">QNetworkAccessManager</db:link> is sending.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttp2configuration.xml#huffmanCompressionEnabled">huffmanCompressionEnabled</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setMaxFrameSize">
<db:title>bool QHttp2Configuration::setMaxFrameSize(unsigned int <db:emphasis>size</db:emphasis>)</db:title>
<db:para>Sets the maximum frame size that <db:link xlink:href="qnetworkaccessmanager.xml">QNetworkAccessManager</db:link> will advertise to the server when sending its initial SETTINGS frame.</db:para>
<db:note>
<db:para>While this <db:code role="parameter">size</db:code> is required to be within a range between 16384 and 16777215 inclusive, the actual payload size in frames that carry payload maybe be less than 16384.</db:para>
</db:note>
<db:para>Returns true on success, false otherwise.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttp2configuration.xml#maxFrameSize">maxFrameSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setServerPushEnabled">
<db:title>void QHttp2Configuration::setServerPushEnabled(bool <db:emphasis>enable</db:emphasis>)</db:title>
<db:para>If <db:code role="parameter">enable</db:code> is true, a remote server can potentially use server push to send responses in advance.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttp2configuration.xml#serverPushEnabled">serverPushEnabled</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSessionReceiveWindowSize">
<db:title>bool QHttp2Configuration::setSessionReceiveWindowSize(unsigned int <db:emphasis>size</db:emphasis>)</db:title>
<db:para>Sets the window size for connection-level flow control. <db:code role="parameter">size</db:code> cannot be 0 and must not exceed 2147483647 octets.</db:para>
<db:para>Returns true on success, false otherwise.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttp2configuration.xml#sessionReceiveWindowSize">sessionReceiveWindowSize</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setStreamReceiveWindowSize">
<db:title>bool QHttp2Configuration::setStreamReceiveWindowSize(unsigned int <db:emphasis>size</db:emphasis>)</db:title>
<db:para>Sets the window size for stream-level flow control. <db:code role="parameter">size</db:code> cannot be 0 and must not exceed 2147483647 octets.</db:para>
<db:para>Returns true on success, false otherwise.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttp2configuration.xml#streamReceiveWindowSize">streamReceiveWindowSize</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="streamReceiveWindowSize">
<db:title>unsigned int QHttp2Configuration::streamReceiveWindowSize() const</db:title>
<db:para>Returns the window size for stream-level flow control. The default value <db:link xlink:href="qnetworkaccessmanager.xml">QNetworkAccessManager</db:link> will be using is 214748364 octets (see <db:link xlink:href="https://httpwg.org/specs/rfc7540.html#SettingValues">RFC 7540</db:link>).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttp2configuration.xml#setStreamReceiveWindowSize">setStreamReceiveWindowSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="swap">
<db:title>[noexcept] void QHttp2Configuration::swap(QHttp2Configuration &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps this configuration with <db:code role="parameter">other</db:code>. This operation is very fast and never fails.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>[noexcept] QHttp2Configuration &amp;QHttp2Configuration::operator=(QHttp2Configuration &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Move-assigns <db:code role="parameter">other</db:code> to this <db:link xlink:href="qhttp2configuration.xml">QHttp2Configuration</db:link>.</db:para>
</db:section>
<db:section xml:id="operator-eq-1">
<db:title>QHttp2Configuration &amp;QHttp2Configuration::operator=(const QHttp2Configuration &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Copy-assigns <db:code role="parameter">other</db:code> to this <db:link xlink:href="qhttp2configuration.xml">QHttp2Configuration</db:link>.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-not-eq">
<db:title>[noexcept] bool operator!=(const QHttp2Configuration &amp;<db:emphasis>lhs</db:emphasis>, const QHttp2Configuration &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:para>Returns true if <db:code role="parameter">lhs</db:code> and <db:code role="parameter">rhs</db:code> do not have the same set of HTTP/2 parameters.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>[noexcept] bool operator==(const QHttp2Configuration &amp;<db:emphasis>lhs</db:emphasis>, const QHttp2Configuration &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:para>Returns true if <db:code role="parameter">lhs</db:code> and <db:code role="parameter">rhs</db:code> have the same set of HTTP/2 parameters.</db:para>
</db:section>
</db:section>
</db:article>
