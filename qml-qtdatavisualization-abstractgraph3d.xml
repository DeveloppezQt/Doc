<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>AbstractGraph3D QML Type</db:title>
<db:productname>QtDataVisualization</db:productname>
<db:edition>Qt Data Visualization | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Data Visualization Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Base type for 3D visualizations.</db:para>
<db:para>This type was introduced in QtDataVisualization 1.0.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtDataVisualization 1.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtDataVisualization 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtdatavisualization-bars3d.xml" xlink:role="">Bars3D</db:link>, <db:link xlink:href="qml-qtdatavisualization-scatter3d.xml" xlink:role="">Scatter3D</db:link>, and <db:link xlink:href="qml-qtdatavisualization-surface3d.xml" xlink:role="">Surface3D</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>AbstractGraph3D is part of <db:simplelist><db:member>datavisualization_qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The base type for all 3D visualizations in <db:link xlink:href="qtdatavisualization-qmlmodule.xml">QtDataVisualization</db:link>.</db:para>
<db:para>This type is uncreatable, but it contains properties that are shared between the 3D visualizations.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-bars3d.xml">Bars3D</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-scatter3d.xml">Scatter3D</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-surface3d.xml">Surface3D</db:link></db:member>
<db:member><db:link xlink:href="qtdatavisualization-module.xml">Qt Data Visualization C++ Classes</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="aspectRatio-prop">
<db:title>[since QtDataVisualization 1.1] aspectRatio : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>aspectRatio</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The ratio of the graph scaling between the longest axis on the horizontal plane and the y-axis. Defaults to <db:code>2.0</db:code>.</db:para>
<db:note>
<db:para>Has no effect on <db:link xlink:href="qml-qtdatavisualization-bars3d.xml">Bars3D</db:link>.</db:para>
</db:note>
<db:para>This property was introduced in QtDataVisualization 1.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#horizontalAspectRatio-prop">horizontalAspectRatio</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="currentFps-prop">
<db:title>[since QtDataVisualization 1.1] currentFps : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>currentFps</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>When FPS measuring is enabled, the results for the last second are stored in this read-only property. It takes at least a second before this value updates after measuring is activated.</db:para>
<db:para>This property was introduced in QtDataVisualization 1.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#measureFps-prop">measureFps</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="customItemList-prop">
<db:title>[since QtDataVisualization 1.1] customItemList : list&lt;Custom3DItem&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;Custom3DItem&gt;</db:type>
<db:varname>customItemList</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The list of <db:link xlink:href="qml-qtdatavisualization-custom3ditem.xml">Custom3DItem</db:link> items added to the graph. The graph takes ownership of the added items.</db:para>
<db:para>This property was introduced in QtDataVisualization 1.1.</db:para>
</db:section>
<db:section xml:id="horizontalAspectRatio-prop">
<db:title>[since QtDataVisualization 1.2] horizontalAspectRatio : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>horizontalAspectRatio</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The ratio of the graph scaling between the x-axis and z-axis. The value of <db:code>0.0</db:code> indicates automatic scaling according to axis ranges. Defaults to <db:code>0.0</db:code>.</db:para>
<db:note>
<db:para>Has no effect on <db:link xlink:href="qml-qtdatavisualization-bars3d.xml">Bars3D</db:link>, which handles scaling on the horizontal plane via the <db:link xlink:href="qml-qtdatavisualization-bars3d.xml#barThickness-prop">barThickness</db:link> and <db:link xlink:href="qml-qtdatavisualization-bars3d.xml#barSpacing-prop">barSpacing</db:link> properties. Polar graphs also ignore this property.</db:para>
</db:note>
<db:para>This property was introduced in QtDataVisualization 1.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#aspectRatio-prop">aspectRatio</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#polar-prop">polar</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-bars3d.xml#barThickness-prop">Bars3D::barThickness</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-bars3d.xml#barSpacing-prop">Bars3D::barSpacing</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="inputHandler-prop">
<db:title>inputHandler : AbstractInputHandler3D</db:title>
<db:fieldsynopsis>
<db:type>AbstractInputHandler3D</db:type>
<db:varname>inputHandler</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The active input handler used in the graph. You can disable default input handlers by setting this property to null.</db:para>
</db:section>
<db:section xml:id="locale-prop">
<db:title>[since QtDataVisualization 1.2] locale : locale</db:title>
<db:fieldsynopsis>
<db:type>locale</db:type>
<db:varname>locale</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the locale used for formatting various numeric labels. Defaults to the <db:code>&quot;C&quot;</db:code> locale.</db:para>
<db:para>This property was introduced in QtDataVisualization 1.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-valueaxis3d.xml#labelFormat-prop">ValueAxis3D::labelFormat</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="margin-prop">
<db:title>[since QtDataVisualization 1.2] margin : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>margin</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The absolute value used for the space left between the edge of the plottable graph area and the edge of the graph background.</db:para>
<db:para>If the margin value is negative, the margins are determined automatically and can vary according to the size of the items in the series and the type of the graph. The value is interpreted as a fraction of the y-axis range if the graph aspect ratios have not beed changed from the default values. Defaults to <db:code>-1.0</db:code>.</db:para>
<db:note>
<db:para>Setting a smaller margin for a scatter graph than the automatically determined margin can cause the scatter items at the edges of the graph to overlap with the graph background.</db:para>
</db:note>
<db:note>
<db:para>On scatter and surface graphs, if the margin is small in comparison to the axis label size, the positions of the edge labels of the axes are adjusted to avoid overlap with the edge labels of the neighboring axes.</db:para>
</db:note>
<db:para>This property was introduced in QtDataVisualization 1.2.</db:para>
</db:section>
<db:section xml:id="measureFps-prop">
<db:title>[since QtDataVisualization 1.1] measureFps : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>measureFps</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>If <db:code>true</db:code>, the rendering is done continuously instead of on demand, and the value of the <db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#currentFps-prop">currentFps</db:link> property is updated. Defaults to <db:code>false</db:code>.</db:para>
<db:para>This property was introduced in QtDataVisualization 1.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#currentFps-prop">currentFps</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="msaaSamples-prop">
<db:title>msaaSamples : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>msaaSamples</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The number of samples used in multisample antialiasing when <db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#renderingMode-prop">renderingMode</db:link> is <db:code>RenderIndirect</db:code>. When <db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#renderingMode-prop">renderingMode</db:link> is <db:code>RenderDirectToBackground</db:code> or <db:code>RenderDirectToBackground_NoClear</db:code>, this property value is read-only and returns the number of samples specified by the window surface format. Defaults to <db:code>4</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#renderingMode-prop">renderingMode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="optimizationHints-prop">
<db:title>[since QtDataVisualization 1.1] optimizationHints : AbstractGraph3D.OptimizationHints</db:title>
<db:fieldsynopsis>
<db:type>AbstractGraph3D.OptimizationHints</db:type>
<db:varname>optimizationHints</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Whether the default or static mode is used for rendering optimization.</db:para>
<db:para>The default mode provides the full feature set at a reasonable level of performance. The static mode optimizes graph rendering and is ideal for large non-changing data sets. It is slower with dynamic data changes and item rotations. Selection is not optimized, so using the static mode with massive data sets is not advisable. Static optimization works only on scatter graphs. Defaults to <db:link xlink:href="qabstract3dgraph.xml#OptimizationHint-enum">OptimizationDefault</db:link>.</db:para>
<db:note>
<db:para>On some environments, large graphs using static optimization may not render, because all of the items are rendered using a single draw call, and different graphics drivers support different maximum vertice counts per call. This is mostly an issue on 32bit and OpenGL ES2 platforms. To work around this issue, choose an item mesh with a low vertex count or use the point mesh.</db:para>
</db:note>
<db:para>This property was introduced in QtDataVisualization 1.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstract3dseries.xml#mesh-prop">Abstract3DSeries::mesh</db:link></db:member>
<db:member><db:link xlink:href="qabstract3dgraph.xml#OptimizationHint-enum">QAbstract3DGraph::OptimizationHint</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="orthoProjection-prop">
<db:title>[since QtDataVisualization 1.1] orthoProjection : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>orthoProjection</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>If <db:code>true</db:code>, orthographic projection will be used for displaying the graph. Defaults to <db:code>false</db:code>.</db:para>
<db:note>
<db:para>Shadows will be disabled when set to <db:code>true</db:code>.</db:para>
</db:note>
<db:para>This property was introduced in QtDataVisualization 1.1.</db:para>
</db:section>
<db:section xml:id="polar-prop">
<db:title>[since QtDataVisualization 1.2] polar : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>polar</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>If <db:code>true</db:code>, the horizontal axes are changed into polar axes. The x-axis becomes the angular axis and the z-axis becomes the radial axis. Polar mode is not available for bar graphs.</db:para>
<db:para>Defaults to <db:code>false</db:code>.</db:para>
<db:para>This property was introduced in QtDataVisualization 1.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#orthoProjection-prop">orthoProjection</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#radialLabelOffset-prop">radialLabelOffset</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="queriedGraphPosition-prop">
<db:title>[since QtDataVisualization 1.2] queriedGraphPosition : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>queriedGraphPosition</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This read-only property contains the latest graph position values along each axis queried using <db:link xlink:href="qml-qtdatavisualization-scene3d.xml#graphPositionQuery-prop">Scene3D::graphPositionQuery</db:link>. The values are normalized to range <db:code>[-1, 1]</db:code>. If the queried position was outside the graph bounds, the values will not reflect the real position, but will instead be some undefined position outside the range <db:code>[-1, 1]</db:code>. The value will be undefined until a query is made.</db:para>
<db:para>There is no single correct 3D coordinate to match a particular screen position, so to be consistent, the queries are always done against the inner sides of an invisible box surrounding the graph.</db:para>
<db:note>
<db:para>Bar graphs only allow querying graph position at the graph floor level, so the y-value is always zero for bar graphs and valid queries can be only made at screen positions that contain the floor of the graph.</db:para>
</db:note>
<db:para>This property was introduced in QtDataVisualization 1.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-scene3d.xml#graphPositionQuery-prop">Scene3D::graphPositionQuery</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="radialLabelOffset-prop">
<db:title>[since QtDataVisualization 1.2] radialLabelOffset : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>radialLabelOffset</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property specifies the normalized horizontal offset for the axis labels of the radial polar axis. The value <db:code>0.0</db:code> indicates that the labels should be drawn next to the 0-angle angular axis grid line. The value <db:code>1.0</db:code> indicates that the labels are drawn in their usual place at the edge of the graph background. This property is ignored if the polar property value is <db:code>false</db:code>. Defaults to <db:code>1.0</db:code>.</db:para>
<db:para>This property was introduced in QtDataVisualization 1.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#polar-prop">polar</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="reflection-prop">
<db:title>[since QtDataVisualization 1.2] reflection : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>reflection</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets floor reflections on or off. Defaults to <db:code>false</db:code>.</db:para>
<db:note>
<db:para>Affects only <db:link xlink:href="qml-qtdatavisualization-bars3d.xml">Bars3D</db:link>. However, in <db:link xlink:href="qml-qtdatavisualization-bars3d.xml">Bars3D</db:link> graphs holding both positive and negative values, reflections are not supported for custom items that intersect the floor plane. In that case, reflections should be turned off to avoid incorrect rendering.</db:para>
</db:note>
<db:para>This property was introduced in QtDataVisualization 1.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#reflectivity-prop">reflectivity</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="reflectivity-prop">
<db:title>[since QtDataVisualization 1.2] reflectivity : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>reflectivity</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets floor reflectivity. Larger numbers make the floor more reflective. The valid range is <db:code>[0...1]</db:code>. Defaults to <db:code>0.5</db:code>.</db:para>
<db:note>
<db:para>Affects only <db:link xlink:href="qml-qtdatavisualization-bars3d.xml">Bars3D</db:link>.</db:para>
</db:note>
<db:para>This property was introduced in QtDataVisualization 1.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#reflection-prop">reflection</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="renderingMode-prop">
<db:title>renderingMode : AbstractGraph3D.RenderingMode</db:title>
<db:fieldsynopsis>
<db:type>AbstractGraph3D.RenderingMode</db:type>
<db:varname>renderingMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>How the graph will be rendered. Defaults to <db:code>RenderIndirect</db:code>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>RenderDirectToBackground</db:para>
</db:td>
<db:td>
<db:para>Indicates that the graph will be rendered directly on the window background. Clears the whole window before rendering the graph, including the areas outside the graph. Since the graphs in this rendering mode are drawn on the window background under other QML items, the regular QML window clearing before rendering is suppressed. The graphs handle the clearing themselves instead. If the surface format of the window supports antialiasing, it will be used (see <db:code>QtDataVisualization::qDefaultSurfaceFormat()</db:code>). This rendering mode offers the best performance at the expense of non-standard QML behavior. For example, the graphs do not obey the z ordering of QML items and the opacity value has no effect on them.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>RenderDirectToBackground_NoClear</db:para>
</db:td>
<db:td>
<db:para>Similar to <db:code>RenderDirectToBackground</db:code> mode, except that the graph will not clear the whole window before rendering the graph. This mode is better for windows where you have other custom items besides the graphs that also draw on the window background. In that case you need to either take care of the window clearing yourself or ensure that all areas of the window are fully covered with opaque items. If one graph in the window uses either of the direct rendering modes, then all other graphs in the same window also drawn in direct modes should use the exact same direct rendering mode. Otherwise some graphs may not show up, depending on the drawing order of the graphs.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>RenderIndirect</db:para>
</db:td>
<db:td>
<db:para>Indicates the graph will be first rendered to an offscreen surface that is then drawn during normal QML item rendering. The rendered image is antialiased using the multisampling method if it is supported in the current environment and the <db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#msaaSamples-prop">msaaSamples</db:link> property value is greater than zero. This rendering mode offers good quality and normal QML item behavior at the expense of performance.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:note>
<db:para>Antialiasing is not supported in OpenGL ES2 environments in any rendering mode.</db:para>
</db:note>
<db:note>
<db:para>Setting the <db:code>antialiasing</db:code> property of the graph does not do anything. However, it is set by the graph itself if the current rendering mode uses antialiasing.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#msaaSamples-prop">msaaSamples</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="scene-prop">
<db:title>scene : Scene3D</db:title>
<db:fieldsynopsis>
<db:type>Scene3D</db:type>
<db:varname>scene</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The <db:link xlink:href="qml-qtdatavisualization-scene3d.xml">Scene3D</db:link> pointer that can be used to manipulate the scene and access the scene elements, such as the active camera.</db:para>
<db:para>This property is read-only.</db:para>
</db:section>
<db:section xml:id="selectedElement-prop">
<db:title>[since QtDataVisualization 1.1] selectedElement : AbstractGraph3D.ElementType</db:title>
<db:fieldsynopsis>
<db:type>AbstractGraph3D.ElementType</db:type>
<db:varname>selectedElement</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The element selected in the graph.</db:para>
<db:para>This property can be used to query the selected element type. The type is valid until a new selection is made in the graph and the <db:code>selectedElementChanged</db:code> signal is emitted.</db:para>
<db:para>The signal can be used for example for implementing customized input handling, as demonstrated by the <db:link xlink:href="qtdatavisualization-qmlaxisdrag-example.xml">Qt Quick 2 Axis Dragging Example</db:link>.</db:para>
<db:para>This property was introduced in QtDataVisualization 1.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#selectedLabelIndex-method">selectedLabelIndex</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#selectedAxis-method">selectedAxis</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#selectedCustomItemIndex-method">selectedCustomItemIndex</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#selectedCustomItem-method">selectedCustomItem</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-bars3d.xml#selectedSeries-prop">Bars3D::selectedSeries</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-scatter3d.xml#selectedSeries-prop">Scatter3D::selectedSeries</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-scene3d.xml#selectionQueryPosition-prop">Scene3D::selectionQueryPosition</db:link></db:member>
<db:member><db:link xlink:href="qabstract3dgraph.xml#ElementType-enum">QAbstract3DGraph::ElementType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectionMode-prop">
<db:title>selectionMode : AbstractGraph3D.SelectionMode</db:title>
<db:fieldsynopsis>
<db:type>AbstractGraph3D.SelectionMode</db:type>
<db:varname>selectionMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The active selection mode in the visualization. One of the <db:link xlink:href="qabstract3dgraph.xml#SelectionFlag-enum">QAbstract3DGraph::SelectionFlag</db:link> enum values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstract3dgraph.xml#SelectionFlag-enum">QAbstract3DGraph::SelectionFlag</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="shadowQuality-prop">
<db:title>shadowQuality : AbstractGraph3D.ShadowQuality</db:title>
<db:fieldsynopsis>
<db:type>AbstractGraph3D.ShadowQuality</db:type>
<db:varname>shadowQuality</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The quality of shadows. One of the <db:link xlink:href="qabstract3dgraph.xml#ShadowQuality-enum">QAbstract3DGraph::ShadowQuality</db:link> enum values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstract3dgraph.xml#ShadowQuality-enum">QAbstract3DGraph::ShadowQuality</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="shadowsSupported-prop">
<db:title>shadowsSupported : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>shadowsSupported</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This read-only property indicates whether shadows are supported with the current configuration. OpenGL ES2 configurations do not support shadows.</db:para>
</db:section>
<db:section xml:id="theme-prop">
<db:title>theme : Theme3D</db:title>
<db:fieldsynopsis>
<db:type>Theme3D</db:type>
<db:varname>theme</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The active theme of the graph.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-theme3d.xml">Theme3D</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="addCustomItem-method">
<db:title>[since QtDataVisualization 1.1] int addCustomItem(Custom3DItem <db:emphasis>item</db:emphasis>)</db:title>
<db:para>Adds a <db:link xlink:href="qml-qtdatavisualization-custom3ditem.xml">Custom3DItem</db:link> <db:code role="parameter">item</db:code> to the graph. Graph takes ownership of the added item.</db:para>
<db:para>Returns index to the added item if add was successful, -1 if trying to add a null item, and index of the item if trying to add an already added item.</db:para>
<db:para>This method was introduced in QtDataVisualization 1.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#removeCustomItems-method">removeCustomItems</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#removeCustomItem-method">removeCustomItem</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#removeCustomItemAt-method">removeCustomItemAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clearSelection-method">
<db:title>void clearSelection()</db:title>
<db:para>Clears selection from all attached series.</db:para>
</db:section>
<db:section xml:id="releaseCustomItem-method">
<db:title>[since QtDataVisualization 1.1] void releaseCustomItem(Custom3DItem <db:emphasis>item</db:emphasis>)</db:title>
<db:para>Gets ownership of <db:code role="parameter">item</db:code> back and removes the <db:code role="parameter">item</db:code> from the graph.</db:para>
<db:note>
<db:para>If the same item is added back to the graph, the texture file needs to be re-set.</db:para>
</db:note>
<db:para>This method was introduced in QtDataVisualization 1.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-custom3ditem.xml#textureFile-prop">Custom3DItem::textureFile</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="removeCustomItem-method">
<db:title>[since QtDataVisualization 1.1] void removeCustomItem(Custom3DItem <db:emphasis>item</db:emphasis>)</db:title>
<db:para>Removes the custom <db:code role="parameter">item</db:code>. Deletes the resources allocated to it.</db:para>
<db:para>This method was introduced in QtDataVisualization 1.1.</db:para>
</db:section>
<db:section xml:id="removeCustomItemAt-method">
<db:title>[since QtDataVisualization 1.1] void removeCustomItemAt(vector3d <db:emphasis>position</db:emphasis>)</db:title>
<db:para>Removes all custom items at <db:code role="parameter">position</db:code>. Deletes the resources allocated to them.</db:para>
<db:para>This method was introduced in QtDataVisualization 1.1.</db:para>
</db:section>
<db:section xml:id="removeCustomItems-method">
<db:title>[since QtDataVisualization 1.1] void removeCustomItems()</db:title>
<db:para>Removes all custom items. Deletes the resources allocated to them.</db:para>
<db:para>This method was introduced in QtDataVisualization 1.1.</db:para>
</db:section>
<db:section xml:id="selectedAxis-method">
<db:title>[since QtDataVisualization 1.1] Abstract3DAxis selectedAxis()</db:title>
<db:para>Can be used to get the selected axis after receiving <db:code>selectedElementChanged</db:code> signal with any label type. Selection is valid until the next <db:code>selectedElementChanged</db:code> signal.</db:para>
<db:para>Returns the selected axis, or null.</db:para>
<db:para>This method was introduced in QtDataVisualization 1.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#selectedElement-prop">selectedElement</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectedCustomItem-method">
<db:title>[since QtDataVisualization 1.1] Custom3DItem selectedCustomItem()</db:title>
<db:para>Can be used to get the selected custom item after receiving <db:code>selectedElementChanged</db:code> signal with <db:link xlink:href="qabstract3dgraph.xml#ElementType-enum">ElementCustomItem</db:link> type. Ownership of the item remains with the graph. Selection is valid until the next <db:code>selectedElementChanged</db:code> signal.</db:para>
<db:para>Returns the selected custom item, or null.</db:para>
<db:para>This method was introduced in QtDataVisualization 1.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#selectedElement-prop">selectedElement</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectedCustomItemIndex-method">
<db:title>[since QtDataVisualization 1.1] int selectedCustomItemIndex()</db:title>
<db:para>Can be used to query the index of the selected custom item after receiving <db:code>selectedElementChanged</db:code> signal with <db:link xlink:href="qabstract3dgraph.xml#ElementType-enum">ElementCustomItem</db:link> type. Selection is valid until the next <db:code>selectedElementChanged</db:code> signal.</db:para>
<db:para>Returns index of the selected custom item, or -1.</db:para>
<db:para>This method was introduced in QtDataVisualization 1.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#selectedElement-prop">selectedElement</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectedLabelIndex-method">
<db:title>[since QtDataVisualization 1.1] int selectedLabelIndex()</db:title>
<db:para>Can be used to query the index of the selected label after receiving <db:code>selectedElementChanged</db:code> signal with any label type. Selection is valid until the next <db:code>selectedElementChanged</db:code> signal.</db:para>
<db:para>Returns index of the selected label, or -1.</db:para>
<db:para>This method was introduced in QtDataVisualization 1.1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#selectedElement-prop">selectedElement</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
