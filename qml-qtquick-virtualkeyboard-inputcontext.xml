<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>InputContext QML Type</db:title>
<db:productname>QtVirtualKeyboard</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Virtual Keyboard</db:titleabbrev>
<db:abstract>
<db:para>Provides access to an input context.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.VirtualKeyboard 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>InputContext is part of <db:simplelist><db:member>qtvirtualkeyboard-qml</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtquick-virtualkeyboard-inputcontext.xml">InputContext</db:link> can be accessed as singleton instance.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="anchorRectangle-prop">
<db:title>[read-only, since QtQuick.VirtualKeyboard 2.1] anchorRectangle : rect</db:title>
<db:para>This property is changed when the anchor rectangle changes.</db:para>
<db:para>This property was introduced in QtQuick.VirtualKeyboard 2.1.</db:para>
</db:section>
<db:section xml:id="animating-prop">
<db:title>animating : bool</db:title>
<db:para>Use this property to set the animating status, for example during UI transitioning states.</db:para>
</db:section>
<db:section xml:id="capsLock-prop">
<db:title>capsLock : bool</db:title>
<db:para>This property is changed when the caps lock status changes.</db:para>
</db:section>
<db:section xml:id="cursorPosition-prop">
<db:title>[read-only] cursorPosition : int</db:title>
<db:para>This property is changed when the cursor position changes.</db:para>
</db:section>
<db:section xml:id="cursorRectangle-prop">
<db:title>[read-only] cursorRectangle : rect</db:title>
<db:para>This property is changed when the cursor rectangle changes.</db:para>
</db:section>
<db:section xml:id="focus-prop">
<db:title>[read-only] focus : bool</db:title>
<db:para>This property is changed when the input method receives or loses focus.</db:para>
</db:section>
<db:section xml:id="inputEngine-prop">
<db:title>[read-only] inputEngine : InputEngine</db:title>
<db:para>This property stores the input engine.</db:para>
</db:section>
<db:section xml:id="inputItem-prop">
<db:title>[read-only] inputItem : QtObject</db:title>
<db:para>This property is changed when the focused input item changes.</db:para>
</db:section>
<db:section xml:id="inputMethodHints-prop">
<db:title>[read-only] inputMethodHints : int</db:title>
<db:para>This property is changed when the input method hints changes.</db:para>
</db:section>
<db:section xml:id="keyboardRectangle-prop">
<db:title>keyboardRectangle : rect</db:title>
<db:para>Use this property to set the keyboard rectangle.</db:para>
</db:section>
<db:section xml:id="locale-prop">
<db:title>locale : string</db:title>
<db:para>Sets the locale for this input context.</db:para>
</db:section>
<db:section xml:id="preeditText-prop">
<db:title>preeditText : string</db:title>
<db:para>This property sets the pre-edit text.</db:para>
</db:section>
<db:section xml:id="previewRectangle-prop">
<db:title>previewRectangle : rect</db:title>
<db:para>Use this property to set the preview rectangle.</db:para>
</db:section>
<db:section xml:id="previewVisible-prop">
<db:title>previewVisible : bool</db:title>
<db:para>Use this property to set the visibility status of the preview.</db:para>
</db:section>
<db:section xml:id="selectedText-prop">
<db:title>[read-only] selectedText : string</db:title>
<db:para>This property is changed when the selected text changes.</db:para>
</db:section>
<db:section xml:id="shift-prop">
<db:title>shift : bool</db:title>
<db:para>This property is changed when the shift status changes.</db:para>
</db:section>
<db:section xml:id="shiftHandler-prop">
<db:title>[read-only] shiftHandler : ShiftHandler</db:title>
<db:para>This property stores the shift handler.</db:para>
</db:section>
<db:section xml:id="surroundingText-prop">
<db:title>[read-only] surroundingText : string</db:title>
<db:para>This property is changed when the surrounding text around the cursor changes.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="focusEditorChanged-signal">
<db:title>focusEditorChanged()</db:title>
<db:para>This signal is emitted when the focus editor changes.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onFocusEditorChanged</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="clear-method">
<db:title>void clear()</db:title>
<db:para>Clears the pre-edit text.</db:para>
</db:section>
<db:section xml:id="commit-method">
<db:title>void commit()</db:title>
<db:para>Commits the current pre-edit text.</db:para>
</db:section>
<db:section xml:id="commit-method-1">
<db:title>void commit(string <db:emphasis>text</db:emphasis>, int <db:emphasis>replaceFrom</db:emphasis> = 0, int <db:emphasis>replaceLength</db:emphasis> = 0)</db:title>
<db:para>Commits the final <db:code role="parameter">text</db:code> to the input item and optionally modifies the text relative to the start of the pre-edit text. If <db:code role="parameter">replaceFrom</db:code> is non-zero, the <db:code role="parameter">text</db:code> replaces the contents relative to <db:code role="parameter">replaceFrom</db:code> with a length of <db:code role="parameter">replaceLength</db:code>.</db:para>
</db:section>
<db:section xml:id="hideInputPanel-method">
<db:title>void hideInputPanel()</db:title>
<db:para>This method hides the input panel. This method should only be called when the user initiates the hide, e.g. by pressing a dedicated button on the keyboard.</db:para>
</db:section>
<db:section xml:id="sendKeyClick-method">
<db:title>void sendKeyClick(int <db:emphasis>key</db:emphasis>, string <db:emphasis>text</db:emphasis>, int <db:emphasis>modifiers</db:emphasis> = 0)</db:title>
<db:para>Sends a key click event with the given <db:code role="parameter">key</db:code>, <db:code role="parameter">text</db:code> and <db:code role="parameter">modifiers</db:code> to the input item that currently has focus.</db:para>
</db:section>
</db:section>
</db:article>
