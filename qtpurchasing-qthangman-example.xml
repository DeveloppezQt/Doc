<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Purchasing Examples - QtHangman</db:title>
<db:productname>QtPurchasing</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Purchasing Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>QtHangman is an example that demonstrates how to use the Qt Purchasing API with Qt Quick.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qthangman-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>QtHangman is a complete mobile application that demonstrates how it is possible to offer in-app products inside a Qt application in a cross-platform manner. In order to test the in-app purchase functionality in the example, you must first register the application and its products in the external store. For an introduction on how to do this, see the guides for <db:link xlink:href="qtpurchasing-googleplay.xml">Google Play</db:link> and <db:link xlink:href="qtpurchasing-appstore.xml">App Store</db:link> respectively.</db:para>
<db:para>In-app purchasing can be added to a Qt Mobile application by first adding a Store object. In QtHangman the Store object is created by the MainView component that is loaded on application startup.</db:para>
<db:programlisting language="qml">Store {
    id: iapStore
}
</db:programlisting>
<db:para>QtHangman defines a component for displaying a store for purchasing in-app products made available. These products must be first registered with the store object we created above in MainView. There are two products available, the first being a consumable type.</db:para>
<db:programlisting language="qml">Product {
    id: product100Vowels
    store: iapStore
    type: Product.Consumable
    identifier: &quot;org.qtproject.qthangman.100vowels&quot;

    onPurchaseSucceeded: {
        console.log(identifier + &quot; purchase successful&quot;);
        applicationData.vowelsAvailable += 100;
        transaction.finalize();
        pageStack.pop();
    }

    onPurchaseFailed: {
        console.log(identifier + &quot; purchase failed&quot;);
        console.log(&quot;reason: &quot;
                    + transaction.failureReason === Transaction.CanceledByUser ? &quot;Canceled&quot; : transaction.errorString);
        transaction.finalize();
    }
}
</db:programlisting>
<db:para>This consumable product provides 100 additional vowels to be used when guessing words in the game. When it is successfully purchased we update the state of the application to include 100 additional vowels. Then we call finalize on the transaction object to confirm to the platform store that the consumable product has been provided.</db:para>
<db:para>The second product is a non-consumable type that will unlock vowels permanently in the future. In addition to updating the application state on purchase, we must make sure to provide a way to restore this purchase on other devices used by the end user. In this case we create a signal handler for onPurchaseRestored.</db:para>
<db:programlisting language="qml">Product {
    id: productUnlockVowels
    type: Product.Unlockable
    store: iapStore
    identifier: &quot;org.qtproject.qthangman.unlockvowels&quot;

    onPurchaseSucceeded: {
        console.log(identifier + &quot; purchase successful&quot;);
        applicationData.vowelsUnlocked = true;
        transaction.finalize();
        pageStack.pop();
    }

    onPurchaseFailed: {
        console.log(identifier + &quot; purchase failed&quot;);
        console.log(&quot;reason: &quot;
                    + transaction.failureReason === Transaction.CanceledByUser ? &quot;Canceled&quot; : transaction.errorString);
        transaction.finalize();
    }

    onPurchaseRestored: {
        console.log(identifier + &quot;purchase restored&quot;);
        applicationData.vowelsUnlocked = true;
        console.log(&quot;timestamp: &quot; + transaction.timestamp);
        transaction.finalize();
        pageStack.pop();
    }
}
</db:programlisting>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qthangman-store-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>In additon to registering the products, we also provide an interface to actually purchase the registered product. QtHangman defines a custom component called StoreItem to display and handle the purchasing interaction.</db:para>
<db:programlisting language="qml">Product {
    id: productUnlockVowels
    type: Product.Unlockable
    store: iapStore
    identifier: &quot;org.qtproject.qthangman.unlockvowels&quot;

    onPurchaseSucceeded: {
        console.log(identifier + &quot; purchase successful&quot;);
        applicationData.vowelsUnlocked = true;
        transaction.finalize();
        pageStack.pop();
    }

    onPurchaseFailed: {
        console.log(identifier + &quot; purchase failed&quot;);
        console.log(&quot;reason: &quot;
                    + transaction.failureReason === Transaction.CanceledByUser ? &quot;Canceled&quot; : transaction.errorString);
        transaction.finalize();
    }

    onPurchaseRestored: {
        console.log(identifier + &quot;purchase restored&quot;);
        applicationData.vowelsUnlocked = true;
        console.log(&quot;timestamp: &quot; + transaction.timestamp);
        transaction.finalize();
        pageStack.pop();
    }
}
</db:programlisting>
<db:para>The StoreItem component will display the product data that is queried from the platform's store, and will call the purchase() method on the product when it is clicked by the user.</db:para>
<db:programlisting language="qml">Text {
    id: titleText
    text: product.title
    font.bold: true
    anchors.right: priceText.left
    anchors.rightMargin: topLevel.globalMargin
    anchors.top: parent.top
    anchors.topMargin: topLevel.globalMargin
    anchors.left: parent.left
    anchors.leftMargin: topLevel.globalMargin
}

Text {
    id: descriptionText
    text: product.description
    anchors.right: priceText.left
    anchors.rightMargin: topLevel.globalMargin
    anchors.left: parent.left
    anchors.leftMargin: topLevel.globalMargin
    anchors.top: titleText.bottom
    anchors.topMargin: topLevel.globalMargin / 2
    wrapMode: Text.WordWrap
}

Text {
    id: priceText
    text: product.price
    anchors.right: parent.right
    anchors.rightMargin: topLevel.globalMargin
    anchors.verticalCenter: parent.verticalCenter
}

MouseArea {
    anchors.fill: parent
    onClicked: {
        pendingRect.visible = true;
        spinBox.visible = true;
        statusText.text = &quot;Purchasing...&quot;;
        storeItem.state = &quot;PURCHASING&quot;;
        product.purchase();
    }
    onPressed: {
        storeItem.state = &quot;PRESSED&quot;;
    }
    onReleased: {
        storeItem.state = &quot;NORMAL&quot;;
    }
}
</db:programlisting>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qthangman/hangmangame.cpp">qthangman/hangmangame.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/hangmangame.h">qthangman/hangmangame.h</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/main.cpp">qthangman/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/+windows/Settings.qml">qthangman/qml/qthangman/+windows/Settings.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/GameView.qml">qthangman/qml/qthangman/GameView.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/GuessWordView.qml">qthangman/qml/qthangman/GuessWordView.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/Hangman.qml">qthangman/qml/qthangman/Hangman.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/HowToView.qml">qthangman/qml/qthangman/HowToView.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/Key.qml">qthangman/qml/qthangman/Key.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/Letter.qml">qthangman/qml/qthangman/Letter.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/LetterSelector.qml">qthangman/qml/qthangman/LetterSelector.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/MainView.qml">qthangman/qml/qthangman/MainView.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/PageHeader.qml">qthangman/qml/qthangman/PageHeader.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/ScoreItem.qml">qthangman/qml/qthangman/ScoreItem.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/Settings.qml">qthangman/qml/qthangman/Settings.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/SimpleButton.qml">qthangman/qml/qthangman/SimpleButton.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/SplashScreen.qml">qthangman/qml/qthangman/SplashScreen.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/StoreItem.qml">qthangman/qml/qthangman/StoreItem.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/StoreView.qml">qthangman/qml/qthangman/StoreView.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/Word.qml">qthangman/qml/qthangman/Word.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/main.qml">qthangman/qml/qthangman/main.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qml/qthangman/qmldir">qthangman/qml/qthangman/qmldir</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/qthangman.pro">qthangman/qthangman.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/resources.qrc">qthangman/resources.qrc</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/winrt/QtStoreSimulation.xml">qthangman/winrt/QtStoreSimulation.xml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qthangman/winrt/winrt.qrc">qthangman/winrt/winrt.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
