<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>PathArc QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Defines an arc with the given radius.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick 2.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>PathArc is part of <db:simplelist><db:member>qtquick-animation-paths</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-patharc.xml">PathArc</db:link> provides a simple way of specifying an arc that ends at a given position and uses the specified radius. It is modeled after the SVG elliptical arc command.</db:para>
<db:para>The following QML produces the path shown below:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/declarative-patharc.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:programlisting language="qml">Path {
    startX: 100; startY: 0

    PathArc {
        x: 0; y: 100
        radiusX: 100; radiusY: 100
        useLargeArc: true
    }
}
</db:programlisting>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Note that a single <db:link xlink:href="qml-qtquick-patharc.xml">PathArc</db:link> cannot be used to specify a circle. Instead, you can use two <db:link xlink:href="qml-qtquick-patharc.xml">PathArc</db:link> elements, each specifying half of the circle.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-path.xml">Path</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathline.xml">PathLine</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathquad.xml">PathQuad</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathcubic.xml">PathCubic</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathcurve.xml">PathCurve</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathsvg.xml">PathSvg</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="x-prop">
<db:title>x : real</db:title>
<db:bridgehead renderas="sect2">y : real</db:bridgehead><db:para>Defines the end point of the arc.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-patharc.xml#relativeX-prop">relativeX</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-patharc.xml#relativeY-prop">relativeY</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="relativeX-prop">
<db:title>relativeX : real</db:title>
<db:bridgehead renderas="sect2">relativeY : real</db:bridgehead><db:para>Defines the end point of the arc relative to its start.</db:para>
<db:para>If both a relative and absolute end position are specified for a single axis, the relative position will be used.</db:para>
<db:para>Relative and absolute positions can be mixed, for example it is valid to set a relative x and an absolute y.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-patharc.xml#x-prop">x</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-patharc.xml#y-prop">y</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="radiusX-prop">
<db:title>radiusX : real</db:title>
<db:bridgehead renderas="sect2">radiusY : real</db:bridgehead><db:para>Defines the radius of the arc.</db:para>
<db:para>The following QML demonstrates how different radius values can be used to change the shape of the arc:</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/declarative-arcradius.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:programlisting language="qml">Path {
    startX: 0; startY: 100

    PathArc {
        relativeX: 50; y: 100
        radiusX: 25; radiusY: 15
    }
    PathArc {
        relativeX: 50; y: 100
        radiusX: 25; radiusY: 25
    }
    PathArc {
        relativeX: 50; y: 100
        radiusX: 25; radiusY: 50
    }
    PathArc {
        relativeX: 50; y: 100
        radiusX: 50; radiusY: 100
    }
}
</db:programlisting>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="direction-prop">
<db:title>direction : enumeration</db:title>
<db:para>Defines the direction of the arc. Possible values are <db:link xlink:href="qml-qtquick-patharc.xml">PathArc</db:link>.Clockwise (default) and <db:link xlink:href="qml-qtquick-patharc.xml">PathArc</db:link>.Counterclockwise.</db:para>
<db:para>The following QML can produce either of the two illustrated arcs below by changing the value of direction.</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/declarative-arcdirection.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:programlisting language="qml">Path {
    startX: 50; startY: 50

    PathArc {
        x: 150; y: 50
        radiusX: 75; radiusY: 50
    }
}
</db:programlisting>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-patharc.xml#useLargeArc-prop">useLargeArc</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="useLargeArc-prop">
<db:title>useLargeArc : bool</db:title>
<db:para>Whether to use a large arc as defined by the arc points.</db:para>
<db:para>Given fixed start and end positions, radius, and direction, there are two possible arcs that can fit the data. useLargeArc is used to distinguish between these. For example, the following QML can produce either of the two illustrated arcs below by changing the value of useLargeArc.</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/declarative-largearc.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:programlisting language="qml">Path {
    startX: 0; startY: 100
    PathArc {
        x: 100; y: 200
        radiusX: 100; radiusY: 100
        direction: PathArc.Clockwise
    }
}
</db:programlisting>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The default value is false.</db:para>
</db:section>
</db:section>
</db:article>
