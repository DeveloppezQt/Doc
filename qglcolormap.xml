<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGLColormap Class</db:title>
<db:productname>QtOpenGL</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>QtOpenGL Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qglcolormap.xml">QGLColormap</db:link> class is used for installing custom colormaps into a <db:link xlink:href="qglwidget.xml">QGLWidget</db:link>.</db:para>
<db:para><db:emphasis role="bold">This class is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGLColormap</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += opengl</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGLColormap is part of <db:simplelist><db:member>painting-3D</db:member><db:member>shared</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para><db:emphasis role="bold">This class is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qglcolormap.xml">QGLColormap</db:link> provides a platform independent way of specifying and installing indexed colormaps for a <db:link xlink:href="qglwidget.xml">QGLWidget</db:link>. <db:link xlink:href="qglcolormap.xml">QGLColormap</db:link> is especially useful when using the OpenGL color-index mode.</db:para>
<db:para>Under X11 you must use an X server that supports either a <db:code>PseudoColor</db:code> or <db:code>DirectColor</db:code> visual class. If your X server currently only provides a <db:code>GrayScale</db:code>, <db:code>TrueColor</db:code>, <db:code>StaticColor</db:code> or <db:code>StaticGray</db:code> visual, you will not be able to allocate colorcells for writing. If this is the case, try setting your X server to 8 bit mode. It should then provide you with at least a <db:code>PseudoColor</db:code> visual. Note that you may experience colormap flashing if your X server is running in 8 bit mode.</db:para>
<db:para>The <db:link xlink:href="qglcolormap.xml#size">size</db:link>() of the colormap is always set to 256 colors. Note that under Windows you can also install colormaps in child widgets.</db:para>
<db:para>This class uses <db:link xlink:href="implicit-sharing.xml">implicit sharing</db:link> as a memory and speed optimization.</db:para>
<db:para>Example of use:</db:para>
<db:programlisting language="cpp">#include &lt;QApplication&gt;
#include &lt;QGLColormap&gt;

int main()
{
    QApplication app(argc, argv);

    MySuperGLWidget widget;     // a QGLWidget in color-index mode
    QGLColormap colormap;

    // This will fill the colormap with colors ranging from
    // black to white.
    for (int i = 0; i &lt; colormap.size(); i++)
        colormap.setEntry(i, qRgb(i, i, i));

    widget.setColormap(colormap);
    widget.show();
    return app.exec();
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qglwidget.xml#setColormap">QGLWidget::setColormap</db:link>()</db:member>
<db:member><db:link xlink:href="qglwidget.xml#colormap">QGLWidget::colormap</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGLColormap">
<db:title>QGLColormap::QGLColormap()</db:title>
<db:para>Construct a <db:link xlink:href="qglcolormap.xml" role="deprecated">QGLColormap</db:link>.</db:para>
</db:section>
<db:section xml:id="QGLColormap-1">
<db:title>QGLColormap::QGLColormap(const QGLColormap &amp;<db:emphasis>map</db:emphasis>)</db:title>
<db:para>Construct a shallow copy of <db:code role="parameter">map</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QGLColormap">
<db:title>[noexcept] QGLColormap::~QGLColormap()</db:title>
<db:para>Dereferences the <db:link xlink:href="qglcolormap.xml" role="deprecated">QGLColormap</db:link> and deletes it if this was the last reference to it.</db:para>
</db:section>
<db:section xml:id="entryColor">
<db:title>QColor QGLColormap::entryColor(int <db:emphasis>idx</db:emphasis>) const</db:title>
<db:para>Returns the <db:link xlink:href="qcolor.xml#QRgb-typedef">QRgb</db:link> value in the colorcell with index <db:code role="parameter">idx</db:code>.</db:para>
</db:section>
<db:section xml:id="entryRgb">
<db:title>QRgb QGLColormap::entryRgb(int <db:emphasis>idx</db:emphasis>) const</db:title>
<db:para>Returns the <db:link xlink:href="qcolor.xml#QRgb-typedef">QRgb</db:link> value in the colorcell with index <db:code role="parameter">idx</db:code>.</db:para>
</db:section>
<db:section xml:id="find">
<db:title>int QGLColormap::find(QRgb <db:emphasis>color</db:emphasis>) const</db:title>
<db:para>Returns the index of the color <db:code role="parameter">color</db:code>. If <db:code role="parameter">color</db:code> is not in the map, -1 is returned.</db:para>
</db:section>
<db:section xml:id="findNearest">
<db:title>int QGLColormap::findNearest(QRgb <db:emphasis>color</db:emphasis>) const</db:title>
<db:para>Returns the index of the color that is the closest match to color <db:code role="parameter">color</db:code>.</db:para>
</db:section>
<db:section xml:id="isEmpty">
<db:title>bool QGLColormap::isEmpty() const</db:title>
<db:para>Returns <db:code>true</db:code> if the colormap is empty or it is not in use by a QGLWidget; otherwise returns <db:code>false</db:code>.</db:para>
<db:para>A colormap with no color values set is considered to be empty. For historical reasons, a colormap that has color values set but which is not in use by a QGLWidget is also considered empty.</db:para>
<db:para>Compare <db:link xlink:href="qglcolormap.xml#size">size</db:link>() with zero to determine if the colormap is empty regardless of whether it is in use by a QGLWidget or not.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qglcolormap.xml#size">size</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setEntries">
<db:title>void QGLColormap::setEntries(int <db:emphasis>count</db:emphasis>, const QRgb *<db:emphasis>colors</db:emphasis>, int <db:emphasis>base</db:emphasis> = 0)</db:title>
<db:para>Set an array of cells in this colormap. <db:code role="parameter">count</db:code> is the number of colors that should be set, <db:code role="parameter">colors</db:code> is the array of colors, and <db:code role="parameter">base</db:code> is the starting index. The first element in <db:code role="parameter">colors</db:code> is set at <db:code role="parameter">base</db:code> in the colormap.</db:para>
</db:section>
<db:section xml:id="setEntry">
<db:title>void QGLColormap::setEntry(int <db:emphasis>idx</db:emphasis>, QRgb <db:emphasis>color</db:emphasis>)</db:title>
<db:para>Set cell at index <db:code role="parameter">idx</db:code> in the colormap to color <db:code role="parameter">color</db:code>.</db:para>
</db:section>
<db:section xml:id="setEntry-1">
<db:title>void QGLColormap::setEntry(int <db:emphasis>idx</db:emphasis>, const QColor &amp;<db:emphasis>color</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Set the cell with index <db:code role="parameter">idx</db:code> in the colormap to color <db:code role="parameter">color</db:code>.</db:para>
</db:section>
<db:section xml:id="size">
<db:title>int QGLColormap::size() const</db:title>
<db:para>Returns the number of colorcells in the colormap.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QGLColormap &amp;QGLColormap::operator=(const QGLColormap &amp;<db:emphasis>map</db:emphasis>)</db:title>
<db:para>Assign a shallow copy of <db:code role="parameter">map</db:code> to this <db:link xlink:href="qglcolormap.xml" role="deprecated">QGLColormap</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
