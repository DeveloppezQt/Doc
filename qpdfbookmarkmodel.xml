<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QPdfBookmarkModel Class</db:title>
<db:productname>QtPdf</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Pdf Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qpdfbookmarkmodel.xml">QPdfBookmarkModel</db:link> class holds a tree of of links (anchors) within a PDF document, such as the table of contents.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPdfBookmarkModel</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstractitemmodel.xml" xlink:role="class">QAbstractItemModel</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This is used in the <db:link xlink:href="model-view-programming.xml">Model/View Programming</db:link> paradigm to display a table of contents in the form of a tree or list.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Role-enum">
<db:title>enum QPdfBookmarkModel::Role</db:title>
<db:enumsynopsis>
<db:enumname>Role</db:enumname>
<db:enumitem>
<db:enumidentifier>Title</db:enumidentifier>
<db:enumvalue>Qt::UserRole</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Level</db:enumidentifier>
<db:enumvalue>257</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Page</db:enumidentifier>
<db:enumvalue>258</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Location</db:enumidentifier>
<db:enumvalue>259</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Zoom</db:enumidentifier>
<db:enumvalue>260</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NRoles</db:enumidentifier>
<db:enumvalue>261</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfbookmarkmodel.xml">QPdfBookmarkModel</db:link></db:emphasis>::<db:emphasis role="bold">Role</db:emphasis>::Title</db:code></db:para>
</db:td>
<db:td><db:code>Qt::UserRole</db:code></db:td>
<db:td>
<db:para>The name of the bookmark for display.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfbookmarkmodel.xml">QPdfBookmarkModel</db:link></db:emphasis>::<db:emphasis role="bold">Role</db:emphasis>::Level</db:code></db:para>
</db:td>
<db:td><db:code>257</db:code></db:td>
<db:td>
<db:para>The level of indentation.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfbookmarkmodel.xml">QPdfBookmarkModel</db:link></db:emphasis>::<db:emphasis role="bold">Role</db:emphasis>::Page</db:code></db:para>
</db:td>
<db:td><db:code>258</db:code></db:td>
<db:td>
<db:para>The page number of the destination (int).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfbookmarkmodel.xml">QPdfBookmarkModel</db:link></db:emphasis>::<db:emphasis role="bold">Role</db:emphasis>::Location</db:code></db:para>
</db:td>
<db:td><db:code>259</db:code></db:td>
<db:td>
<db:para>The position of the destination (<db:link xlink:href="qpointf.xml">QPointF</db:link>).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfbookmarkmodel.xml">QPdfBookmarkModel</db:link></db:emphasis>::<db:emphasis role="bold">Role</db:emphasis>::Zoom</db:code></db:para>
</db:td>
<db:td><db:code>260</db:code></db:td>
<db:td>
<db:para>The suggested zoom level (qreal).</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QPdfBookmarkModel-1">
<db:title>[explicit] QPdfBookmarkModel::QPdfBookmarkModel(QObject *<db:emphasis>parent</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QPdfBookmarkModel</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QPdfBookmarkModel(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new bookmark model with parent object <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QPdfBookmarkModel">
<db:title>[override virtual] QPdfBookmarkModel::~QPdfBookmarkModel()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QPdfBookmarkModel</db:methodname>
<db:void/>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QPdfBookmarkModel() override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the model.</db:para>
</db:section>
<db:section xml:id="columnCount">
<db:title>[override virtual] int QPdfBookmarkModel::columnCount(const QModelIndex &amp;<db:emphasis>parent</db:emphasis> = QModelIndex()) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>columnCount</db:methodname>
<db:methodparam>
<db:type>const QModelIndex &amp;</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>QModelIndex()</db:initializer>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int columnCount(const QModelIndex &amp;parent) const override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qabstractitemmodel.xml#columnCount" role="function">QAbstractItemModel::columnCount(const QModelIndex &amp;parent) const</db:link>.</db:para>
</db:section>
<db:section xml:id="data">
<db:title>[override virtual] QVariant QPdfBookmarkModel::data(const QModelIndex &amp;<db:emphasis>index</db:emphasis>, int <db:emphasis>role</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QVariant</db:type>
<db:methodname>data</db:methodname>
<db:methodparam>
<db:type>const QModelIndex &amp;</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>role</db:parameter>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QVariant data(const QModelIndex &amp;index, int role) const override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qabstractitemmodel.xml#data" role="function">QAbstractItemModel::data(const QModelIndex &amp;index, int role) const</db:link>.</db:para>
</db:section>
<db:section xml:id="index">
<db:title>[override virtual] QModelIndex QPdfBookmarkModel::index(int <db:emphasis>row</db:emphasis>, int <db:emphasis>column</db:emphasis>, const QModelIndex &amp;<db:emphasis>parent</db:emphasis> = QModelIndex()) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QModelIndex</db:type>
<db:methodname>index</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>row</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>column</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QModelIndex &amp;</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>QModelIndex()</db:initializer>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QModelIndex index(int row, int column, const QModelIndex &amp;parent) const override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qabstractitemmodel.xml#index" role="function">QAbstractItemModel::index(int row, int column, const QModelIndex &amp;parent) const</db:link>.</db:para>
</db:section>
<db:section xml:id="parent">
<db:title>[override virtual] QModelIndex QPdfBookmarkModel::parent(const QModelIndex &amp;<db:emphasis>index</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QModelIndex</db:type>
<db:methodname>parent</db:methodname>
<db:methodparam>
<db:type>const QModelIndex &amp;</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QModelIndex parent(const QModelIndex &amp;index) const override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qabstractitemmodel.xml#parent" role="function">QAbstractItemModel::parent(const QModelIndex &amp;index) const</db:link>.</db:para>
</db:section>
<db:section xml:id="roleNames">
<db:title>[override virtual] QHash&lt;int, QByteArray&gt; QPdfBookmarkModel::roleNames() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QHash&lt;int, QByteArray&gt;</db:type>
<db:methodname>roleNames</db:methodname>
<db:void/>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QHash&lt;int, QByteArray&gt; roleNames() const override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qabstractitemmodel.xml#roleNames" role="function">QAbstractItemModel::roleNames() const</db:link>.</db:para>
</db:section>
<db:section xml:id="rowCount">
<db:title>[override virtual] int QPdfBookmarkModel::rowCount(const QModelIndex &amp;<db:emphasis>parent</db:emphasis> = QModelIndex()) const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>rowCount</db:methodname>
<db:methodparam>
<db:type>const QModelIndex &amp;</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>QModelIndex()</db:initializer>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int rowCount(const QModelIndex &amp;parent) const override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qabstractitemmodel.xml#rowCount" role="function">QAbstractItemModel::rowCount(const QModelIndex &amp;parent) const</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
