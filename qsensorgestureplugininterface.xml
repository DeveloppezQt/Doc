<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSensorGesturePluginInterface Class</db:title>
<db:productname>QtSensors</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Sensors Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qsensorgestureplugininterface.xml">QSensorGesturePluginInterface</db:link> class is the pure virtual interface to sensor gesture plugins.</db:para>
<db:para>This class was introduced in Qt 5.1.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSensorGesturePluginInterface</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += sensors</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSensorGesturePluginInterface is part of <db:simplelist><db:member>sensorgestures_recognizer</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qsensorgestureplugininterface.xml">QSensorGesturePluginInterface</db:link> class is implemented in sensor gesture plugins to register sensor gesture recognizers with <db:link xlink:href="qsensorgesturemanager.xml">QSensorGestureManager</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="sensorgesture-plugins-topics.xml">QtSensorGestures Plugins</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSensorGesturePluginInterface">
<db:title>QSensorGesturePluginInterface::QSensorGesturePluginInterface()</db:title>
<db:constructorsynopsis>
<db:methodname>QSensorGesturePluginInterface</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QSensorGesturePluginInterface()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Construct the <db:link xlink:href="qsensorgestureplugininterface.xml">QSensorGesturePluginInterface</db:link>.</db:para>
</db:section>
<db:section xml:id="dtor.QSensorGesturePluginInterface">
<db:title>[virtual] QSensorGesturePluginInterface::~QSensorGesturePluginInterface()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QSensorGesturePluginInterface</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QSensorGesturePluginInterface()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroy the <db:link xlink:href="qsensorgestureplugininterface.xml">QSensorGesturePluginInterface</db:link>.</db:para>
</db:section>
<db:section xml:id="createRecognizers">
<db:title>[pure virtual] QList&lt;QSensorGestureRecognizer *&gt; QSensorGesturePluginInterface::createRecognizers()</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>QList&lt;QSensorGestureRecognizer *&gt;</db:type>
<db:methodname>createRecognizers</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QSensorGestureRecognizer *&gt; createRecognizers() = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Called by the manager to create the recognizers. Plugins should initialize and register their recognizers using <db:link xlink:href="qsensorgesturemanager.xml#registerSensorGestureRecognizer">QSensorGestureManager::registerSensorGestureRecognizer</db:link>() here.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsensorgesturemanager.xml">QSensorGestureManager</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="name">
<db:title>[pure virtual] QString QSensorGesturePluginInterface::name() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>name</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString name() const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns this plugins name.</db:para>
</db:section>
<db:section xml:id="supportedIds">
<db:title>[pure virtual] QStringList QSensorGesturePluginInterface::supportedIds() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QStringList</db:type>
<db:methodname>supportedIds</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QStringList supportedIds() const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of the recognizer Id's that this plugin supports.</db:para>
</db:section>
</db:section>
</db:article>
