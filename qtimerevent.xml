<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QTimerEvent Class</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.2.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qtimerevent.xml">QTimerEvent</db:link> class contains parameters that describe a timer event.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QTimerEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qevent.xml" xlink:role="class">QEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QTimerEvent is part of <db:simplelist><db:member><db:link xlink:href="events.xml">Event Classes</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Timer events are sent at regular intervals to objects that have started one or more timers. Each timer has a unique identifier. A timer is started with <db:link xlink:href="qobject.xml#startTimer">QObject::startTimer</db:link>().</db:para>
<db:para>The <db:link xlink:href="qtimer.xml">QTimer</db:link> class provides a high-level programming interface that uses signals instead of events. It also provides single-shot timers.</db:para>
<db:para>The event handler <db:link xlink:href="qobject.xml#timerEvent">QObject::timerEvent</db:link>() receives timer events.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtimer.xml">QTimer</db:link></db:member>
<db:member><db:link xlink:href="qobject.xml#timerEvent">QObject::timerEvent</db:link>()</db:member>
<db:member><db:link xlink:href="qobject.xml#startTimer">QObject::startTimer</db:link>()</db:member>
<db:member><db:link xlink:href="qobject.xml#killTimer">QObject::killTimer</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QTimerEvent">
<db:title>[explicit] QTimerEvent::QTimerEvent(int <db:emphasis>timerId</db:emphasis>)</db:title>
<db:para>Constructs a timer event object with the timer identifier set to <db:code role="parameter">timerId</db:code>.</db:para>
</db:section>
<db:section xml:id="timerId">
<db:title>int QTimerEvent::timerId() const</db:title>
<db:para>Returns the unique timer identifier, which is the same identifier as returned from <db:link xlink:href="qobject.xml#startTimer">QObject::startTimer</db:link>().</db:para>
</db:section>
</db:section>
</db:article>
