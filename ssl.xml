<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Secure Sockets Layer (SSL) Classes</db:title>
<db:productname>QtNetwork</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Network Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Classes for secure communication over network sockets.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The classes below provide support for secure network communication using the Secure Sockets Layer (SSL) protocol, using the <db:link xlink:href="https://www.openssl.org/">OpenSSL Toolkit</db:link> to perform encryption and protocol handling.</db:para>
<db:para>From Qt version 5.15 onwards, the officially supported version for OpenSSL is 1.1.1 or later.</db:para>
<db:variablelist role="ssl">
<db:varlistentry>
<db:term><db:link xlink:href="qdtls.xml" xlink:role="class">QDtls</db:link></db:term>
<db:listitem>
<db:para>This class provides encryption for UDP sockets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdtlsclientverifier.xml" xlink:role="class">QDtlsClientVerifier</db:link></db:term>
<db:listitem>
<db:para>This class implements server-side DTLS cookie generation and verification.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdtlsclientverifier-generatorparameters.xml" xlink:role="class">QDtlsClientVerifier::GeneratorParameters</db:link></db:term>
<db:listitem>
<db:para>This class defines parameters for DTLS cookie generator.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qocspresponse.xml" xlink:role="class">QOcspResponse</db:link></db:term>
<db:listitem>
<db:para>This class represents Online Certificate Status Protocol response.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qssl.xml" xlink:role="namespace">QSsl</db:link></db:term>
<db:listitem>
<db:para>The QSsl namespace declares enums common to all SSL classes in Qt Network.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslcertificate.xml" xlink:role="class">QSslCertificate</db:link></db:term>
<db:listitem>
<db:para>The QSslCertificate class provides a convenient API for an X509 certificate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslcertificateextension.xml" xlink:role="class">QSslCertificateExtension</db:link></db:term>
<db:listitem>
<db:para>The QSslCertificateExtension class provides an API for accessing the extensions of an X509 certificate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslcipher.xml" xlink:role="class">QSslCipher</db:link></db:term>
<db:listitem>
<db:para>The QSslCipher class represents an SSL cryptographic cipher.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslconfiguration.xml" xlink:role="class">QSslConfiguration</db:link></db:term>
<db:listitem>
<db:para>The QSslConfiguration class holds the configuration and state of an SSL connection.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qssldiffiehellmanparameters.xml" xlink:role="class">QSslDiffieHellmanParameters</db:link></db:term>
<db:listitem>
<db:para>The QSslDiffieHellmanParameters class provides an interface for Diffie-Hellman parameters for servers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslellipticcurve.xml" xlink:role="class">QSslEllipticCurve</db:link></db:term>
<db:listitem>
<db:para>Represents an elliptic curve for use by elliptic-curve cipher algorithms.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslerror.xml" xlink:role="class">QSslError</db:link></db:term>
<db:listitem>
<db:para>The QSslError class provides an SSL error.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslkey.xml" xlink:role="class">QSslKey</db:link></db:term>
<db:listitem>
<db:para>The QSslKey class provides an interface for private and public keys.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslpresharedkeyauthenticator.xml" xlink:role="class">QSslPreSharedKeyAuthenticator</db:link></db:term>
<db:listitem>
<db:para>The QSslPreSharedKeyAuthenticator class provides authentication data for pre shared keys (PSK) ciphersuites.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslsocket.xml" xlink:role="class">QSslSocket</db:link></db:term>
<db:listitem>
<db:para>The QSslSocket class provides an SSL encrypted socket for both clients and servers.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslsocket.xml#AlertLevel-enum" xlink:role="enum">QSslSocket::AlertLevel</db:link></db:term>
<db:listitem>
<db:para>Describes the level of an alert message</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslsocket.xml#AlertType-enum" xlink:role="enum">QSslSocket::AlertType</db:link></db:term>
<db:listitem>
<db:para>Enumerates possible codes that an alert message can have</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdtls.xml#HandshakeState-enum" xlink:role="enum">QDtls::HandshakeState</db:link></db:term>
<db:listitem>
<db:para>Describes the current state of DTLS handshake.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslsocket.xml#ImplementedClass-enum" xlink:role="enum">QSslSocket::ImplementedClass</db:link></db:term>
<db:listitem>
<db:para>Enumerates classes that a TLS backend implements</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdtls.xml#QDtlsError-enum" xlink:role="enum">QDtls::QDtlsError</db:link></db:term>
<db:listitem>
<db:para>Describes errors that can be found by QDtls and QDtlsClientVerifier.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qocspresponse.xml#QOcspCertificateStatus-enum" xlink:role="enum">QOcspResponse::QOcspCertificateStatus</db:link></db:term>
<db:listitem>
<db:para>Describes the Online Certificate Status</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qocspresponse.xml#QOcspRevocationReason-enum" xlink:role="enum">QOcspResponse::QOcspRevocationReason</db:link></db:term>
<db:listitem>
<db:para>Describes the reason for revocation</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslsocket.xml#SupportedFeature-enum" xlink:role="enum">QSslSocket::SupportedFeature</db:link></db:term>
<db:listitem>
<db:para>Enumerates possible features that a TLS backend supports</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="enabling-and-disabling-ssl-support">
<db:title>Enabling and Disabling SSL Support</db:title>
<db:para>When building Qt from source, the configuration system checks for the presence of the openssl/opensslv.h header provided by source or developer packages of OpenSSL.</db:para>
<db:para>By default, an SSL-enabled Qt library dynamically loads any installed OpenSSL library at run-time. However, it is possible to link against the library at compile-time by configuring Qt with the -openssl-linked option.</db:para>
<db:para>When building a version of Qt linked against OpenSSL, Qt's build system will use CMake's FindOpenSSL command to find OpenSSL in several standard locations. You can set the CMake variable OPENSSL_ROOT_DIR to force a specific location.</db:para>
<db:para>For example:</db:para>
<db:programlisting language="cpp">configure -openssl-linked -- -D OPENSSL_ROOT_DIR=&amp;lt;openssl_dir&amp;gt;
</db:programlisting>
<db:para>To disable SSL support in a Qt build, configure Qt with the -no-openssl option.</db:para>
</db:section>
<db:section xml:id="datagram-transport-layer-security">
<db:title>Datagram Transport Layer Security</db:title>
<db:para>Datagram Transport Layer Security (DTLS) is a protocol that enables security for datagram-based applications, providing them with protection against eavesdropping, tampering, or message forgery. The DTLS protocol is based on the stream-oriented Transport Layer Security (TLS) protocol. <db:link xlink:href="qtnetwork-module.xml">QtNetwork</db:link> enables the use of DTLS with User Datagram Protocol (UDP), as defined by <db:link xlink:href="https://tools.ietf.org/html/rfc6347">RFC 6347</db:link>.</db:para>
</db:section>
<db:section xml:id="import-and-export-restrictions">
<db:title>Import and Export Restrictions</db:title>
<db:para>Qt binary installers include the OpenSSL libraries used by <db:link xlink:href="qtnetwork-module.xml">QtNetwork</db:link>. However, those are not automatically deployed with applications that are built with Qt. Import and export restrictions apply for some types of software, and for some parts of the world. Developers wishing to use SSL communication in their deployed applications should either ensure that their users have the appropriate libraries installed, or they should consult a suitably qualified legal professional to ensure that applications using code from the OpenSSL project are correctly certified for import and export in relevant regions of the world.</db:para>
</db:section>
</db:article>
