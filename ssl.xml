<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Secure Sockets Layer (SSL) Classes</db:title>
<db:productname>QtNetwork</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Network Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Classes for secure communication over network sockets.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The classes below provide support for secure network communication using the Secure Sockets Layer (SSL) protocol, using the OpenSSL Toolkit (<db:link xlink:href="http://www.openssl.org/">http://www.openssl.org/</db:link>) to perform encryption and protocol handling.</db:para>
<db:variablelist role="ssl">
<db:varlistentry>
<db:term><db:link xlink:href="qssl.xml" xlink:role="namespace">QSsl</db:link></db:term>
<db:listitem>
<db:para>The QSsl namespace declares enums common to all SSL classes in Qt Network.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslcertificate.xml" xlink:role="class">QSslCertificate</db:link></db:term>
<db:listitem>
<db:para>The QSslCertificate class provides a convenient API for an X509 certificate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslcertificateextension.xml" xlink:role="class">QSslCertificateExtension</db:link></db:term>
<db:listitem>
<db:para>The QSslCertificateExtension class provides an API for accessing the extensions of an X509 certificate.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslcipher.xml" xlink:role="class">QSslCipher</db:link></db:term>
<db:listitem>
<db:para>The QSslCipher class represents an SSL cryptographic cipher.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslconfiguration.xml" xlink:role="class">QSslConfiguration</db:link></db:term>
<db:listitem>
<db:para>The QSslConfiguration class holds the configuration and state of an SSL connection</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslellipticcurve.xml" xlink:role="class">QSslEllipticCurve</db:link></db:term>
<db:listitem>
<db:para>Represents an elliptic curve for use by elliptic-curve cipher algorithms.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslerror.xml" xlink:role="class">QSslError</db:link></db:term>
<db:listitem>
<db:para>The QSslError class provides an SSL error.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslkey.xml" xlink:role="class">QSslKey</db:link></db:term>
<db:listitem>
<db:para>The QSslKey class provides an interface for private and public keys.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslpresharedkeyauthenticator.xml" xlink:role="class">QSslPreSharedKeyAuthenticator</db:link></db:term>
<db:listitem>
<db:para>The QSslPreSharedKeyAuthenticator class provides authentication data for pre shared keys (PSK) ciphersuites.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsslsocket.xml" xlink:role="class">QSslSocket</db:link></db:term>
<db:listitem>
<db:para>The QSslSocket class provides an SSL encrypted socket for both clients and servers.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para>See the <db:link xlink:href="build-sources.xml#openssl-version-1-0-0-or-later">OpenSSL Compatibility</db:link> page for information about the versions of OpenSSL that are known to work with Qt.</db:para>
<db:section xml:id="enabling-and-disabling-ssl-support">
<db:title>Enabling and Disabling SSL Support</db:title>
<db:para>When building Qt from source, the configuration system checks for the presence of the openssl/opensslv.h header provided by source or developer packages of OpenSSL.</db:para>
<db:para>By default, an SSL-enabled Qt library dynamically loads any installed OpenSSL library at run-time. However, it is possible to link against the library at compile-time by configuring Qt with the -openssl-linked option.</db:para>
<db:para>When building a version of Qt linked against OpenSSL, the build system will attempt to link with libssl and libcrypt libraries located in the default location on the developer's system. This location is configurable: set the OPENSSL_LIBS environment variable to contain the linker options required to link Qt against the installed library. For example, on a Unix/Linux system:</db:para>
<db:programlisting language="cpp">OPENSSL_LIBS='-L/opt/ssl/lib -lssl -lcrypto' ./configure -openssl-linked
</db:programlisting>
<db:para>To disable SSL support in a Qt build, configure Qt with the -no-openssl option.</db:para>
</db:section>
<db:section xml:id="licensing-information">
<db:title>Licensing Information</db:title>
<db:note>
<db:para>Due to import and export restrictions in some parts of the world, we are unable to supply the OpenSSL Toolkit with Qt packages. Developers wishing to use SSL communication in their deployed applications should either ensure that their users have the appropriate libraries installed, or they should consult a suitably qualified legal professional to ensure that applications using code from the OpenSSL project are correctly certified for import and export in relevant regions of the world.</db:para>
</db:note>
<db:para>When the Qt Network module is built with SSL support, the library is linked against OpenSSL in a way that requires OpenSSL license compliance.</db:para>
</db:section>
</db:article>
