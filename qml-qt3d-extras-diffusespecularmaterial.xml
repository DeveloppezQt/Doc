<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>DiffuseSpecularMaterial QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.15.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qml-qt3d-extras-diffusespecularmaterial.xml">DiffuseSpecularMaterial</db:link> class provides a default implementation of the phong lighting effect.</db:para>
<db:para>This type was introduced in Qt 5.10.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Extras 2.15</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.10</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml">QDiffuseSpecularMaterial</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The phong lighting effect is based on the combination of 3 lighting components ambient, diffuse and specular. The relative strengths of these components are controlled by means of their reflectivity coefficients which are modelled as RGB triplets:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Ambient is the color that is emitted by an object without any other light source.</db:para>
</db:listitem>
<db:listitem>
<db:para>Diffuse is the color that is emitted for rough surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>Specular is the color emitted for shiny surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>The shininess of a surface is controlled by a float property.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>This material uses an effect with a single render pass approach and performs per fragment lighting. Techniques are provided for OpenGL 2, OpenGL 3 or above as well as OpenGL ES 2.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="alphaBlending-prop">
<db:title>alphaBlending : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>alphaBlending</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Indicates if the alpha information coming from the diffuse property will be taken into account during rendering. Defaults to false.</db:para>
</db:section>
<db:section xml:id="ambient-prop">
<db:title>ambient : color</db:title>
<db:fieldsynopsis>
<db:type>color</db:type>
<db:varname>ambient</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the ambient color that is emitted by an object without any other light source.</db:para>
</db:section>
<db:section xml:id="diffuse-prop">
<db:title>diffuse : var</db:title>
<db:fieldsynopsis>
<db:type>var</db:type>
<db:varname>diffuse</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the diffuse color of the material that is emitted for rough surface reflections with the lights. This can be either a plain color value or a texture.</db:para>
</db:section>
<db:section xml:id="normal-prop">
<db:title>normal : var</db:title>
<db:fieldsynopsis>
<db:type>var</db:type>
<db:varname>normal</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current normal map texture of the material. This can only be a texture, otherwise it is ignored. By default this map is not set.</db:para>
</db:section>
<db:section xml:id="shininess-prop">
<db:title>shininess : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>shininess</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the shininess exponent. Higher values of shininess result in a smaller and brighter highlight.</db:para>
<db:para>Defaults to 150.0.</db:para>
</db:section>
<db:section xml:id="specular-prop">
<db:title>specular : var</db:title>
<db:fieldsynopsis>
<db:type>var</db:type>
<db:varname>specular</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the specular color of the material that is emitted for shiny surface reflections with the lights. This can be either a plain color value or a texture.</db:para>
</db:section>
<db:section xml:id="textureScale-prop">
<db:title>textureScale : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>textureScale</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current texture scale. It is applied as a multiplier to texture coordinates at render time. Defaults to 1.0.</db:para>
<db:para>When used in conjunction with WrapMode.Repeat, textureScale provides a simple way to tile a texture across a surface. For example, a texture scale of <db:code>4.0</db:code> would result in 16 (4x4) tiles.</db:para>
</db:section>
</db:section>
</db:article>
