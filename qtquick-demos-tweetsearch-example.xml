<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Demo - Tweet Search</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A Twitter search client with 3D effects.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquick-demo-tweetsearch-med-1.png"/>
</db:imageobject>
</db:mediaobject>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquick-demo-tweetsearch-med-2.png"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:emphasis>Tweet Search</db:emphasis> is a QML application that searches items posted to Twitter service using a number of query parameters. Search can be done for tweets from a specified user, a hashtag, or a search phrase.</db:para>
<db:para>The search result is a list of items showing the contents of the tweet as well as the name and image of the user who posted it. Hashtags, names and links in the content are clickable. Clicking on the image will flip the item to reveal more information.</db:para>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="http://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
<db:para>Tweet Search uses Twitter API v1.1 for running seaches.</db:para>
</db:section>
<db:section xml:id="request-authentication">
<db:title>Request Authentication</db:title>
<db:para>Each request must be authenticated on behalf of the application. For demonstration purposes, the application uses a hard-coded token for identifying itself to the Twitter service. However, this token is subject to rate limits for the number of requests as well as possible expiration.</db:para>
<db:para>If you are having authentication or rate limit problems running the demo, obtain a set of application-specific tokens (consumer key and consumer secret) by registering a new application on <db:link xlink:href="https://dev.twitter.com/apps">https://dev.twitter.com/apps</db:link>.</db:para>
<db:para>Type in the two token values in <db:emphasis>TweetsModel.qml</db:emphasis>:</db:para>
<db:programlisting language="qml">    property string consumerKey : &quot;&quot;
    property string consumerSecret : &quot;&quot;
</db:programlisting>
<db:para>Rebuild and run the demo.</db:para>
</db:section>
<db:section xml:id="json-parsing">
<db:title>JSON Parsing</db:title>
<db:para>Search results are returned in JSON (JavaScript Object Notation) format. <db:code>TweetsModel</db:code> uses an <db:link xlink:href="qtqml-javascript-qmlglobalobject.xml#xmlhttprequest">XMLHTTPRequest</db:link> object to send an HTTP GET request, and calls JSON.parse() on the returned text string to convert it to a JavaScript object. Each object representing a tweet is then added to a <db:link xlink:href="qtquick-modelviewsdata-modelview.xml#listmodel">ListModel</db:link>:</db:para>
<db:programlisting language="qml">        var req = new XMLHttpRequest;
        req.open(&quot;GET&quot;, &quot;https://api.twitter.com/1.1/search/tweets.json?from=&quot; + from +
                        &quot;&amp;count=10&amp;q=&quot; + encodePhrase(phrase));
        req.setRequestHeader(&quot;Authorization&quot;, &quot;Bearer &quot; + bearerToken);
        req.onreadystatechange = function() {
            status = req.readyState;
            if (status === XMLHttpRequest.DONE) {
                var objectArray = JSON.parse(req.responseText);
                if (objectArray.errors !== undefined)
                    console.log(&quot;Error fetching tweets: &quot; + objectArray.errors[0].message)
                else {
                    for (var key in objectArray.statuses) {
                        var jsonObject = objectArray.statuses[key];
                        tweets.append(jsonObject);
                    }
                }
                if (wasLoading == true)
                    wrapper.isLoaded()
            }
            wasLoading = (status === XMLHttpRequest.LOADING);
        }
        req.send();
</db:programlisting>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/FlipBar.qml">demos/tweetsearch/content/FlipBar.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/LineInput.qml">demos/tweetsearch/content/LineInput.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/ListFooter.qml">demos/tweetsearch/content/ListFooter.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/ListHeader.qml">demos/tweetsearch/content/ListHeader.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/SearchDelegate.qml">demos/tweetsearch/content/SearchDelegate.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/TweetDelegate.qml">demos/tweetsearch/content/TweetDelegate.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/TweetsModel.qml">demos/tweetsearch/content/TweetsModel.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/tweetsearch.js">demos/tweetsearch/content/tweetsearch.js</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/main.cpp">demos/tweetsearch/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/tweetsearch.pro">demos/tweetsearch/tweetsearch.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/tweetsearch.qml">demos/tweetsearch/tweetsearch.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/tweetsearch.qmlproject">demos/tweetsearch/tweetsearch.qmlproject</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/tweetsearch.qrc">demos/tweetsearch/tweetsearch.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Images:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/resources/anonymous.png">demos/tweetsearch/content/resources/anonymous.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/resources/bird-anim-sprites.png">demos/tweetsearch/content/resources/bird-anim-sprites.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/resources/icon-clear.png">demos/tweetsearch/content/resources/icon-clear.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/resources/icon-loading.png">demos/tweetsearch/content/resources/icon-loading.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/resources/icon-refresh.png">demos/tweetsearch/content/resources/icon-refresh.png</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="demos/tweetsearch/content/resources/icon-search.png">demos/tweetsearch/content/resources/icon-search.png</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmlapplications.xml">QML Applications</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section></db:section></db:article>
