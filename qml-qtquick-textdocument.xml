<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>TextDocument QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A wrapper around <db:link xlink:href="qml-qtquick-textedit.xml">TextEdit</db:link>'s backing <db:link xlink:href="qtextdocument.xml">QTextDocument</db:link>.</db:para>
<db:para><db:emphasis role="bold">This type is under development and is subject to change.</db:emphasis></db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In C++:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qquicktextdocument.xml">QQuickTextDocument</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Preliminary</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para><db:emphasis role="bold">This type is under development and is subject to change.</db:emphasis></db:para>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>To load text into the document, set the <db:link xlink:href="qml-qtquick-textdocument.xml#source-prop">source</db:link> property. If the user then modifies the text and wants to save the same document, call <db:link xlink:href="qml-qtquick-textdocument.xml#save-method">save</db:link>() to save it to the same source again (only if <db:link xlink:href="qurl.xml#isLocalFile">it's a local file</db:link>). Or call <db:link xlink:href="qml-qtquick-textdocument.xml#saveAs-method">saveAs</db:link>() to save it to a different file.</db:para>
<db:para>This class cannot be instantiated in QML, but is available from <db:link xlink:href="qml-qtquick-textedit.xml#textDocument-prop">TextEdit::textDocument</db:link>.</db:para>
<db:note>
<db:para>All loading and saving is done synchronously for now. This may block the UI if the <db:link xlink:href="qml-qtquick-textdocument.xml#source-prop">source</db:link> is a slow network drive. This may be improved in future versions of Qt.</db:para>
</db:note>
<db:note>
<db:para>This API is considered tech preview and may change in future versions of Qt.</db:para>
</db:note>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="errorString-prop">
<db:title>[read-only, preliminary] errorString : string</db:title>
<db:para><db:emphasis role="bold">This property is under development and is subject to change.</db:emphasis></db:para>
<db:para>This property holds a human-readable string describing the error that occurred during loading or saving, if any; otherwise, an empty string.</db:para>
<db:para>This property was introduced in Qt 6.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-textdocument.xml#status-prop">status</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-textdocument.xml#source-prop">source</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-textdocument.xml#save-method">save</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-textdocument.xml#saveAs-method">saveAs</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="modified-prop">
<db:title>[preliminary] modified : bool</db:title>
<db:para><db:emphasis role="bold">This property is under development and is subject to change.</db:emphasis></db:para>
<db:para>This property holds whether the document has been modified by the user since the last time it was loaded or saved. By default, this property is false.</db:para>
<db:para>As with <db:link xlink:href="qtextdocument.xml#modified-prop">QTextDocument::modified</db:link>, you can set the modified property: for example, set it to false to allow setting the <db:link xlink:href="qml-qtquick-textdocument.xml#source-prop">source</db:link> property to a different URL (thus discarding the user's changes).</db:para>
<db:para>This property was introduced in Qt 6.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextdocument.xml#modified-prop">QTextDocument::modified</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="source-prop">
<db:title>[preliminary] source : url</db:title>
<db:para><db:emphasis role="bold">This property is under development and is subject to change.</db:emphasis></db:para>
<db:para><db:link xlink:href="qquicktextdocument.xml">QQuickTextDocument</db:link> can handle any text format supported by Qt, loaded from any URL scheme supported by Qt.</db:para>
<db:para>The URL may be absolute, or relative to the URL of the component.</db:para>
<db:para>The source property cannot be changed while the document's <db:link xlink:href="qml-qtquick-textdocument.xml#modified-prop">modified</db:link> state is true. If the user has modified the document contents, you should prompt the user whether to <db:link xlink:href="qml-qtquick-textdocument.xml#save-method">save</db:link>(), or else discard changes by setting modified = false before setting the source property to a different URL.</db:para>
<db:para>This property was introduced in Qt 6.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextdocumentwriter.xml#supportedDocumentFormats">QTextDocumentWriter::supportedDocumentFormats</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="status-prop">
<db:title>[read-only, preliminary] status : enumeration</db:title>
<db:para><db:emphasis role="bold">This property is under development and is subject to change.</db:emphasis></db:para>
<db:para>This property holds the status of document loading or saving. It can be one of:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>TextDocument.Null</db:para>
</db:td>
<db:td>
<db:para>No file has been loaded</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>TextDocument.Loading</db:para>
</db:td>
<db:td>
<db:para>Reading from <db:link xlink:href="qml-qtquick-textdocument.xml#source-prop">source</db:link> has begun</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>TextDocument.Loaded</db:para>
</db:td>
<db:td>
<db:para>Reading has successfully finished</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>TextDocument.Saving</db:para>
</db:td>
<db:td>
<db:para>File writing has begun after <db:link xlink:href="qml-qtquick-textdocument.xml#save-method">save</db:link>() or <db:link xlink:href="qml-qtquick-textdocument.xml#saveAs-method">saveAs</db:link>()</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>TextDocument.Saved</db:para>
</db:td>
<db:td>
<db:para>Writing has successfully finished</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>TextDocument.ReadError</db:para>
</db:td>
<db:td>
<db:para>An error occurred while reading from <db:link xlink:href="qml-qtquick-textdocument.xml#source-prop">source</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>TextDocument.WriteError</db:para>
</db:td>
<db:td>
<db:para>An error occurred in <db:link xlink:href="qml-qtquick-textdocument.xml#save-method">save</db:link>() or <db:link xlink:href="qml-qtquick-textdocument.xml#saveAs-method">saveAs</db:link>()</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>TextDocument.NonLocalFileError</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qtquick-textdocument.xml#saveAs-method">saveAs</db:link>() was called with a URL pointing to a remote resource rather than a local file</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Use this status to provide an update or respond to the status change in some way. For example, you could:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Trigger a state change:</db:para>
<db:programlisting language="qml">State {
    name: 'loaded'
    when: textEdit.textDocument.status == textEdit.textDocument.Loaded
}
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>Implement an onStatusChanged signal handler:</db:para>
<db:programlisting language="qml">TextEdit {
    onStatusChanged: {
        if (textDocument.status === textDocument.Loaded)
            console.log('Loaded')
    }
}
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>Bind to the status value:</db:para>
<db:programlisting language="qml">TextEdit {
    id: edit
    width: 300
    height: 200
    textFormat: TextEdit.MarkdownText
    textDocument.source: &quot;example.md&quot;
    wrapMode: TextEdit.WordWrap

    Text {
        anchors {
            bottom: parent.bottom
            right: parent.right
        }
        color: edit.textDocument.status === TextDocument.Loaded ? &quot;darkolivegreen&quot; : &quot;tomato&quot;
        text:
            switch (edit.textDocument.status) {
            case TextDocument.Loading:
                return qsTr(&quot;Loading &quot;) + edit.textDocument.source
            case TextDocument.Loaded:
                return qsTr(&quot;Loaded &quot;) + edit.textDocument.source
            default:
                return edit.textDocument.errorString
            }
    }
}
</db:programlisting>
</db:listitem>
</db:itemizedlist>
<db:para>This property was introduced in Qt 6.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-textdocument.xml#errorString-prop">errorString</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-textdocument.xml#source-prop">source</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-textdocument.xml#save-method">save</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-textdocument.xml#saveAs-method">saveAs</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="save-method">
<db:title>[preliminary] void save()</db:title>
<db:para><db:emphasis role="bold">This method is under development and is subject to change.</db:emphasis></db:para>
<db:para>Saves the contents to the same file and format specified by <db:link xlink:href="qml-qtquick-textdocument.xml#source-prop">source</db:link>.</db:para>
<db:note>
<db:para>You can save only to a <db:link xlink:href="qurl.xml#isLocalFile">file on a mounted filesystem</db:link>.</db:para>
</db:note>
<db:para>This method was introduced in Qt 6.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-textdocument.xml#source-prop">source</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-textdocument.xml#saveAs-method">saveAs</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="saveAs-method">
<db:title>[preliminary] void saveAs(url <db:emphasis>url</db:emphasis>)</db:title>
<db:para><db:emphasis role="bold">This method is under development and is subject to change.</db:emphasis></db:para>
<db:para>Saves the contents to the file and format specified by <db:code role="parameter">url</db:code>.</db:para>
<db:para>The file extension in <db:code role="parameter">url</db:code> specifies the file format (as determined by <db:link xlink:href="qmimedatabase.xml#mimeTypeForUrl">QMimeDatabase::mimeTypeForUrl</db:link>()).</db:para>
<db:note>
<db:para>You can save only to a <db:link xlink:href="qurl.xml#isLocalFile">file on a mounted filesystem</db:link>.</db:para>
</db:note>
<db:para>This method was introduced in Qt 6.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-textdocument.xml#source-prop">source</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-textdocument.xml#save-method">save</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
