<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QRandomGenerator64 Class</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qrandomgenerator64.xml">QRandomGenerator64</db:link> class allows one to obtain 64-bit random values from a high-quality, seed-less Random Number Generator.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QRandomGenerator64</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Core)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Core)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qrandomgenerator.xml" xlink:role="class">QRandomGenerator</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qrandomgenerator64.xml">QRandomGenerator64</db:link> is a simple adaptor class around <db:link xlink:href="qrandomgenerator.xml">QRandomGenerator</db:link>, making the <db:link xlink:href="qrandomgenerator.xml#generate64">QRandomGenerator::generate64</db:link>() function the default for <db:link xlink:href="qrandomgenerator64.xml#operator-28-29">operator</db:link>()(), instead of the function that returns 32-bit quantities. This class is intended to be used in conjunction with Standard Library algorithms that need 64-bit quantities instead of 32-bit ones.</db:para>
<db:para>In all other aspects, the class is the same. Please refer to <db:link xlink:href="qrandomgenerator.xml">QRandomGenerator</db:link>'s documentation for more information.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrandomgenerator.xml">QRandomGenerator</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="result_type-typedef">
<db:title>QRandomGenerator64::result_type</db:title>
<db:typedefsynopsis>
<db:typedefname>result_type</db:typedefname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:typedefsynopsis>
<db:para>A typedef to the type that <db:link xlink:href="qrandomgenerator64.xml#operator-28-29">operator</db:link>() returns. That is, quint64.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrandomgenerator64.xml#operator-28-29">operator</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="generate">
<db:title>quint64 QRandomGenerator64::generate()</db:title>
<db:methodsynopsis>
<db:type>quint64</db:type>
<db:methodname>generate</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint64 generate()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Generates one 64-bit random value and returns it.</db:para>
<db:para>Note about casting to a signed integer: all bits returned by this function are random, so there's a 50% chance that the most significant bit will be set. If you wish to cast the returned value to qint64 and keep it positive, you should mask the sign bit off:</db:para>
<db:programlisting language="cpp">    qint64 value = QRandomGenerator64::global()-&amp;gt;generate() &amp;amp; std::numeric_limits&amp;lt;qint64&amp;gt;::max();
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrandomgenerator.xml">QRandomGenerator</db:link></db:member>
<db:member><db:link xlink:href="qrandomgenerator.xml#generate64">QRandomGenerator::generate64</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-28-29">
<db:title>QRandomGenerator64::result_type QRandomGenerator64::operator()()</db:title>
<db:methodsynopsis>
<db:type>QRandomGenerator64::result_type</db:type>
<db:methodname>operator()</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRandomGenerator64::result_type operator()()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Generates a 64-bit random quantity and returns it.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrandomgenerator.xml#generate">QRandomGenerator::generate</db:link>()</db:member>
<db:member><db:link xlink:href="qrandomgenerator.xml#generate64">QRandomGenerator::generate64</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
