<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QIcon Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qicon.xml">QIcon</db:link> class provides scalable icons in different modes and states.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QIcon</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QIcon is part of <db:simplelist><db:member><db:link xlink:href="painting.xml">Painting Classes</db:link></db:member><db:member>shared</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qicon.xml">QIcon</db:link> can generate smaller, larger, active, and disabled pixmaps from the set of pixmaps it is given. Such pixmaps are used by Qt UI components to show an icon representing a particular action.</db:para>
<db:section xml:id="creating-an-icon-from-image-files">
<db:title>Creating an icon from image files</db:title>
<db:para>The simplest way to construct a <db:link xlink:href="qicon.xml">QIcon</db:link> is to create one from one or several image files or resources. For example:</db:para>
<db:programlisting language="cpp">QToolButton *button = new QToolButton;
button-&amp;gt;setIcon(QIcon(&quot;open.png&quot;));
</db:programlisting>
<db:para><db:link xlink:href="qicon.xml">QIcon</db:link> can store several images for different states, and Qt will select the image that is the closest match for the action's current state.</db:para>
<db:programlisting language="cpp">QIcon openIcon(&quot;open.png&quot;);
openIcon.addFile(&quot;open-disabled.png&quot;, QIcon::Disabled);
</db:programlisting>
<db:para>Qt will generate the required icon styles and sizes when needed, e.g. the pixmap for the <db:link xlink:href="qicon.xml#Mode-enum">QIcon::Disabled</db:link> state might be generated by graying out one of the provided pixmaps.</db:para>
<db:para>To clear the icon, simply set a null icon in its place:</db:para>
<db:programlisting language="cpp">button-&amp;gt;setIcon(QIcon());
</db:programlisting>
<db:para>Use the <db:link xlink:href="qimagereader.xml#supportedImageFormats">QImageReader::supportedImageFormats</db:link>() and <db:link xlink:href="qimagewriter.xml#supportedImageFormats">QImageWriter::supportedImageFormats</db:link>() functions to retrieve a complete list of the supported file formats.</db:para>
</db:section>
<db:section xml:id="creating-an-icon-from-a-theme-or-icon-library">
<db:title>Creating an icon from a theme or icon library</db:title>
<db:para>The most convenient way to construct an icon is by using the <db:link xlink:href="qicon.xml#fromTheme">fromTheme</db:link>() factory function. Qt implements access to the native icon library on platforms that support the <db:link xlink:href="https://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html">Freedesktop Icon Theme Specification</db:link>. Since Qt 6.7, Qt also provides access to the native icon library on macOS, iOS, and Windows 10 and 11. On Android, Qt can access icons from the Material design system as long as the <db:link xlink:href="https://github.com/google/material-design-icons/tree/master/font">MaterialIcons-Regular</db:link> font is available on the system, or bundled as a resource at <db:code>:/qt-project.org/icons/MaterialIcons-Regular.ttf</db:code> with the application.</db:para>
<db:programlisting language="cpp">QIcon undoicon = QIcon::fromTheme(QIcon::ThemeIcon::EditUndo);
</db:programlisting>
<db:para>Applications can use the same theming specification to provide their own icon library. See below for an example theme description and the corresponding directory structure for the image files. Icons from an application-provided theme take precedence over the native icon library.</db:para>
<db:para>In addition, it is possible to provide custom <db:link xlink:href="qiconengine.xml">icon engines</db:link>. This allows applications to customize every aspect of generated icons. With <db:link xlink:href="qiconengineplugin.xml">QIconEnginePlugin</db:link> it is possible to register different icon engines for different file suffixes, making it possible for third parties to provide additional icon engines to those included with Qt.</db:para>
</db:section>
<db:section xml:id="making-classes-that-use-qicon">
<db:title>Making Classes that Use QIcon</db:title>
<db:para>If you write your own widgets that have an option to set a small pixmap, consider allowing a <db:link xlink:href="qicon.xml">QIcon</db:link> to be set for that pixmap. The Qt class <db:link xlink:href="qtoolbutton.xml">QToolButton</db:link> is an example of such a widget.</db:para>
<db:para>Provide a method to set a <db:link xlink:href="qicon.xml">QIcon</db:link>, and paint the <db:link xlink:href="qicon.xml">QIcon</db:link> with <db:link xlink:href="qicon.xml#paint">paint</db:link>, choosing the appropriate parameters based on the current state of your widget. For example:</db:para>
<db:programlisting language="cpp">void MyWidget::drawIcon(QPainter *painter, const QRect &amp;amp;rect)
{
    icon.paint(painter, rect, Qt::AlignCenter, isEnabled() ? QIcon::Normal
                                                           : QIcon::Disabled,
                                               isChecked() ? QIcon::On
                                                           : QIcon::Off);
}
</db:programlisting>
<db:para>When you retrieve a pixmap using pixmap(<db:link xlink:href="qsize.xml">QSize</db:link>, Mode, State), and no pixmap for this given size, mode and state has been added with <db:link xlink:href="qicon.xml#addFile">addFile</db:link>() or <db:link xlink:href="qicon.xml#addPixmap">addPixmap</db:link>(), then <db:link xlink:href="qicon.xml">QIcon</db:link> will generate one on the fly. This pixmap generation happens in a <db:link xlink:href="qiconengine.xml">QIconEngine</db:link>. The default engine scales pixmaps down if required, but never up, and it uses the current style to calculate a disabled appearance.</db:para>
<db:para>You might also make use of the <db:code>Active</db:code> mode, perhaps making your widget <db:code>Active</db:code> when the mouse is over the widget (see <db:link xlink:href="qwidget.xml#enterEvent">QWidget::enterEvent</db:link>()), while the mouse is pressed pending the release that will activate the function, or when it is the currently selected item. If the widget can be toggled, the &quot;On&quot; mode might be used to draw a different icon.</db:para>
<db:mediaobject>
<db:alt>QIcon</db:alt>
<db:imageobject>
<db:imagedata fileref="images/icon.png"/>
</db:imageobject>
</db:mediaobject>
<db:note>
<db:para><db:link xlink:href="qicon.xml">QIcon</db:link> needs a <db:link xlink:href="qguiapplication.xml">QGuiApplication</db:link> instance before the icon is created.</db:para>
</db:note>
</db:section>
<db:section xml:id="high-dpi-icons">
<db:title>High DPI Icons</db:title>
<db:para>Icons that are provided by the native icon library are usually based on vector graphics, and will automatically be rendered in the appropriate resolution.</db:para>
<db:para>When providing your own image files via <db:link xlink:href="qicon.xml#addFile">addFile</db:link>(), then <db:link xlink:href="qicon.xml">QIcon</db:link> will use Qt's <db:link xlink:href="qimagereader.xml#high-resolution-versions-of-images">&quot;@nx&quot; high DPI syntax</db:link>. This is useful if you have your own custom directory structure and do not use follow <db:link xlink:href="https://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html">Freedesktop Icon Theme Specification</db:link>.</db:para>
<db:para>When providing an application theme, then you need to follow the Icon Theme Specification to specify which files to use for different resolutions. To make <db:link xlink:href="qicon.xml">QIcon</db:link> use the high DPI version of an image, add an additional entry to the appropriate <db:code>index.theme</db:code> file:</db:para>
<db:programlisting language="cpp" role="bad">[Icon Theme]
Name=Test
Comment=Test Theme

Directories=32x32/actions,32x32@2/actions

[32x32/actions]
Size=32
Context=Actions
Type=Fixed

# High DPI version of the entry above.
[32x32@2/actions]
Size=32
Scale=2
Type=Fixed
</db:programlisting>
<db:para>Your icon theme directory would then look something like this:</db:para>
<db:programlisting language="cpp" role="bad">├── 32x32
│   └── actions
│       └── appointment-new.png
├── 32x32@2
│   └── actions
│       └── appointment-new.png
└── index.theme
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Mode-enum">
<db:title>enum QIcon::Mode</db:title>
<db:enumsynopsis>
<db:enumname>Mode</db:enumname>
<db:enumitem>
<db:enumidentifier>Normal</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Disabled</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Active</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Selected</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum type describes the mode for which a pixmap is intended to be used. The currently defined modes are:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::Normal</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Display the pixmap when the user is not interacting with the icon, but the functionality represented by the icon is available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::Disabled</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Display the pixmap when the functionality represented by the icon is not available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::Active</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Display the pixmap when the functionality represented by the icon is available and the user is interacting with the icon, for example, moving the mouse over it or clicking it.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::Selected</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Display the pixmap when the item represented by the icon is selected.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="State-enum">
<db:title>enum QIcon::State</db:title>
<db:enumsynopsis>
<db:enumname>State</db:enumname>
<db:enumitem>
<db:enumidentifier>On</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Off</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the state for which a pixmap is intended to be used. The <db:emphasis>state</db:emphasis> can be:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::Off</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Display the pixmap when the widget is in an &quot;off&quot; state</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::On</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Display the pixmap when the widget is in an &quot;on&quot; state</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="ThemeIcon-enum">
<db:title>[since 6.7] enum QIcon::ThemeIcon</db:title>
<db:enumsynopsis>
<db:enumname>ThemeIcon</db:enumname>
<db:enumitem>
<db:enumidentifier>AddressBookNew</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ApplicationExit</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AppointmentNew</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CallStart</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CallStop</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ContactNew</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DocumentNew</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DocumentOpen</db:enumidentifier>
<db:enumvalue>7</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DocumentOpenRecent</db:enumidentifier>
<db:enumvalue>8</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DocumentPageSetup</db:enumidentifier>
<db:enumvalue>9</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DocumentPrint</db:enumidentifier>
<db:enumvalue>10</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DocumentPrintPreview</db:enumidentifier>
<db:enumvalue>11</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DocumentProperties</db:enumidentifier>
<db:enumvalue>12</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DocumentRevert</db:enumidentifier>
<db:enumvalue>13</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DocumentSave</db:enumidentifier>
<db:enumvalue>14</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DocumentSaveAs</db:enumidentifier>
<db:enumvalue>15</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DocumentSend</db:enumidentifier>
<db:enumvalue>16</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>EditClear</db:enumidentifier>
<db:enumvalue>17</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>EditCopy</db:enumidentifier>
<db:enumvalue>18</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>EditCut</db:enumidentifier>
<db:enumvalue>19</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>EditDelete</db:enumidentifier>
<db:enumvalue>20</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>EditFind</db:enumidentifier>
<db:enumvalue>21</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>EditPaste</db:enumidentifier>
<db:enumvalue>22</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>EditRedo</db:enumidentifier>
<db:enumvalue>23</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>EditSelectAll</db:enumidentifier>
<db:enumvalue>24</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>EditUndo</db:enumidentifier>
<db:enumvalue>25</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FolderNew</db:enumidentifier>
<db:enumvalue>26</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FormatIndentLess</db:enumidentifier>
<db:enumvalue>27</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FormatIndentMore</db:enumidentifier>
<db:enumvalue>28</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FormatJustifyCenter</db:enumidentifier>
<db:enumvalue>29</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FormatJustifyFill</db:enumidentifier>
<db:enumvalue>30</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FormatJustifyLeft</db:enumidentifier>
<db:enumvalue>31</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FormatJustifyRight</db:enumidentifier>
<db:enumvalue>32</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FormatTextDirectionLtr</db:enumidentifier>
<db:enumvalue>33</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FormatTextDirectionRtl</db:enumidentifier>
<db:enumvalue>34</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FormatTextBold</db:enumidentifier>
<db:enumvalue>35</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FormatTextItalic</db:enumidentifier>
<db:enumvalue>36</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FormatTextUnderline</db:enumidentifier>
<db:enumvalue>37</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FormatTextStrikethrough</db:enumidentifier>
<db:enumvalue>38</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>GoDown</db:enumidentifier>
<db:enumvalue>39</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>GoHome</db:enumidentifier>
<db:enumvalue>40</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>GoNext</db:enumidentifier>
<db:enumvalue>41</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>GoPrevious</db:enumidentifier>
<db:enumvalue>42</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>GoUp</db:enumidentifier>
<db:enumvalue>43</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>HelpAbout</db:enumidentifier>
<db:enumvalue>44</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>HelpFaq</db:enumidentifier>
<db:enumvalue>45</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>InsertImage</db:enumidentifier>
<db:enumvalue>46</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>InsertLink</db:enumidentifier>
<db:enumvalue>47</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>InsertText</db:enumidentifier>
<db:enumvalue>48</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ListAdd</db:enumidentifier>
<db:enumvalue>49</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ListRemove</db:enumidentifier>
<db:enumvalue>50</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MailForward</db:enumidentifier>
<db:enumvalue>51</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MailMarkImportant</db:enumidentifier>
<db:enumvalue>52</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MailMarkRead</db:enumidentifier>
<db:enumvalue>53</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MailMarkUnread</db:enumidentifier>
<db:enumvalue>54</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MailMessageNew</db:enumidentifier>
<db:enumvalue>55</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MailReplyAll</db:enumidentifier>
<db:enumvalue>56</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MailReplySender</db:enumidentifier>
<db:enumvalue>57</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MailSend</db:enumidentifier>
<db:enumvalue>58</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaEject</db:enumidentifier>
<db:enumvalue>59</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaPlaybackPause</db:enumidentifier>
<db:enumvalue>60</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaPlaybackStart</db:enumidentifier>
<db:enumvalue>61</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaPlaybackStop</db:enumidentifier>
<db:enumvalue>62</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaRecord</db:enumidentifier>
<db:enumvalue>63</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaSeekBackward</db:enumidentifier>
<db:enumvalue>64</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaSeekForward</db:enumidentifier>
<db:enumvalue>65</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaSkipBackward</db:enumidentifier>
<db:enumvalue>66</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaSkipForward</db:enumidentifier>
<db:enumvalue>67</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ObjectRotateLeft</db:enumidentifier>
<db:enumvalue>68</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ObjectRotateRight</db:enumidentifier>
<db:enumvalue>69</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ProcessStop</db:enumidentifier>
<db:enumvalue>70</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SystemLockScreen</db:enumidentifier>
<db:enumvalue>71</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SystemLogOut</db:enumidentifier>
<db:enumvalue>72</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SystemSearch</db:enumidentifier>
<db:enumvalue>73</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SystemReboot</db:enumidentifier>
<db:enumvalue>74</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SystemShutdown</db:enumidentifier>
<db:enumvalue>75</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ToolsCheckSpelling</db:enumidentifier>
<db:enumvalue>76</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ViewFullscreen</db:enumidentifier>
<db:enumvalue>77</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ViewRefresh</db:enumidentifier>
<db:enumvalue>78</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ViewRestore</db:enumidentifier>
<db:enumvalue>79</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>WindowClose</db:enumidentifier>
<db:enumvalue>80</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>WindowNew</db:enumidentifier>
<db:enumvalue>81</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ZoomFitBest</db:enumidentifier>
<db:enumvalue>82</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ZoomIn</db:enumidentifier>
<db:enumvalue>83</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ZoomOut</db:enumidentifier>
<db:enumvalue>84</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AudioCard</db:enumidentifier>
<db:enumvalue>85</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AudioInputMicrophone</db:enumidentifier>
<db:enumvalue>86</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Battery</db:enumidentifier>
<db:enumvalue>87</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraPhoto</db:enumidentifier>
<db:enumvalue>88</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraVideo</db:enumidentifier>
<db:enumvalue>89</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CameraWeb</db:enumidentifier>
<db:enumvalue>90</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Computer</db:enumidentifier>
<db:enumvalue>91</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DriveHarddisk</db:enumidentifier>
<db:enumvalue>92</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DriveOptical</db:enumidentifier>
<db:enumvalue>93</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>InputGaming</db:enumidentifier>
<db:enumvalue>94</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>InputKeyboard</db:enumidentifier>
<db:enumvalue>95</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>InputMouse</db:enumidentifier>
<db:enumvalue>96</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>InputTablet</db:enumidentifier>
<db:enumvalue>97</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaFlash</db:enumidentifier>
<db:enumvalue>98</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaOptical</db:enumidentifier>
<db:enumvalue>99</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaTape</db:enumidentifier>
<db:enumvalue>100</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MultimediaPlayer</db:enumidentifier>
<db:enumvalue>101</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NetworkWired</db:enumidentifier>
<db:enumvalue>102</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NetworkWireless</db:enumidentifier>
<db:enumvalue>103</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Phone</db:enumidentifier>
<db:enumvalue>104</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Printer</db:enumidentifier>
<db:enumvalue>105</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Scanner</db:enumidentifier>
<db:enumvalue>106</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>VideoDisplay</db:enumidentifier>
<db:enumvalue>107</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AppointmentMissed</db:enumidentifier>
<db:enumvalue>108</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AppointmentSoon</db:enumidentifier>
<db:enumvalue>109</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AudioVolumeHigh</db:enumidentifier>
<db:enumvalue>110</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AudioVolumeLow</db:enumidentifier>
<db:enumvalue>111</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AudioVolumeMedium</db:enumidentifier>
<db:enumvalue>112</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>AudioVolumeMuted</db:enumidentifier>
<db:enumvalue>113</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>BatteryCaution</db:enumidentifier>
<db:enumvalue>114</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>BatteryLow</db:enumidentifier>
<db:enumvalue>115</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DialogError</db:enumidentifier>
<db:enumvalue>116</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DialogInformation</db:enumidentifier>
<db:enumvalue>117</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DialogPassword</db:enumidentifier>
<db:enumvalue>118</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DialogQuestion</db:enumidentifier>
<db:enumvalue>119</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DialogWarning</db:enumidentifier>
<db:enumvalue>120</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FolderDragAccept</db:enumidentifier>
<db:enumvalue>121</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FolderOpen</db:enumidentifier>
<db:enumvalue>122</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FolderVisiting</db:enumidentifier>
<db:enumvalue>123</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ImageLoading</db:enumidentifier>
<db:enumvalue>124</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ImageMissing</db:enumidentifier>
<db:enumvalue>125</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MailAttachment</db:enumidentifier>
<db:enumvalue>126</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MailUnread</db:enumidentifier>
<db:enumvalue>127</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MailRead</db:enumidentifier>
<db:enumvalue>128</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MailReplied</db:enumidentifier>
<db:enumvalue>129</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaPlaylistRepeat</db:enumidentifier>
<db:enumvalue>130</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MediaPlaylistShuffle</db:enumidentifier>
<db:enumvalue>131</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NetworkOffline</db:enumidentifier>
<db:enumvalue>132</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PrinterPrinting</db:enumidentifier>
<db:enumvalue>133</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SecurityHigh</db:enumidentifier>
<db:enumvalue>134</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SecurityLow</db:enumidentifier>
<db:enumvalue>135</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SoftwareUpdateAvailable</db:enumidentifier>
<db:enumvalue>136</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SoftwareUpdateUrgent</db:enumidentifier>
<db:enumvalue>137</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SyncError</db:enumidentifier>
<db:enumvalue>138</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SyncSynchronizing</db:enumidentifier>
<db:enumvalue>139</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>UserAvailable</db:enumidentifier>
<db:enumvalue>140</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>UserOffline</db:enumidentifier>
<db:enumvalue>141</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>WeatherClear</db:enumidentifier>
<db:enumvalue>142</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>WeatherClearNight</db:enumidentifier>
<db:enumvalue>143</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>WeatherFewClouds</db:enumidentifier>
<db:enumvalue>144</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>WeatherFewCloudsNight</db:enumidentifier>
<db:enumvalue>145</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>WeatherFog</db:enumidentifier>
<db:enumvalue>146</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>WeatherShowers</db:enumidentifier>
<db:enumvalue>147</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>WeatherSnow</db:enumidentifier>
<db:enumvalue>148</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>WeatherStorm</db:enumidentifier>
<db:enumvalue>149</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NThemeIcons</db:enumidentifier>
<db:enumvalue>150</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum provides access to icons that are provided by most icon theme implementations.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::AddressBookNew</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The icon for the action to create a new address book.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ApplicationExit</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The icon for exiting an application.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::AppointmentNew</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The icon for the action to create a new appointment.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::CallStart</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>The icon for initiating or accepting a call.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::CallStop</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>The icon for stopping a current call.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ContactNew</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>The icon for the action to create a new contact.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DocumentNew</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>The icon for the action to create a new document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DocumentOpen</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>The icon for the action to open a document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DocumentOpenRecent</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>The icon for the action to open a document that was recently opened.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DocumentPageSetup</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>page setup</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DocumentPrint</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>print</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DocumentPrintPreview</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>print preview</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DocumentProperties</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>The icon for the action to view the properties of a document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DocumentRevert</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>The icon for the action of reverting to a previous version of a document.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DocumentSave</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>save</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DocumentSaveAs</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>save as</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DocumentSend</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>send</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::EditClear</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>clear</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::EditCopy</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>copy</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::EditCut</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>cut</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::EditDelete</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>delete</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::EditFind</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>find</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::EditPaste</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>paste</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::EditRedo</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>redo</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::EditSelectAll</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>select all</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::EditUndo</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>undo</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FolderNew</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
<db:td>
<db:para>The icon for creating a new folder.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FormatIndentLess</db:code></db:para>
</db:td>
<db:td><db:code>27</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>decrease indent formatting</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FormatIndentMore</db:code></db:para>
</db:td>
<db:td><db:code>28</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>increase indent formatting</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FormatJustifyCenter</db:code></db:para>
</db:td>
<db:td><db:code>29</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>center justification formatting</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FormatJustifyFill</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>fill justification formatting</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FormatJustifyLeft</db:code></db:para>
</db:td>
<db:td><db:code>31</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>left justification formatting</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FormatJustifyRight</db:code></db:para>
</db:td>
<db:td><db:code>32</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>right justification</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FormatTextDirectionLtr</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>left-to-right text formatting</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FormatTextDirectionRtl</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>right-to-left formatting</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FormatTextBold</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>bold text formatting</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FormatTextItalic</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>italic text formatting</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FormatTextUnderline</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>underlined text formatting</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FormatTextStrikethrough</db:code></db:para>
</db:td>
<db:td><db:code>38</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>strikethrough text formatting</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::GoDown</db:code></db:para>
</db:td>
<db:td><db:code>39</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>go down in a list</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::GoHome</db:code></db:para>
</db:td>
<db:td><db:code>40</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>go to home location</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::GoNext</db:code></db:para>
</db:td>
<db:td><db:code>41</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>go to the next item in a list</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::GoPrevious</db:code></db:para>
</db:td>
<db:td><db:code>42</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>go to the previous item in a list</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::GoUp</db:code></db:para>
</db:td>
<db:td><db:code>43</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>go up in a list</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::HelpAbout</db:code></db:para>
</db:td>
<db:td><db:code>44</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>About</db:emphasis> item in the Help menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::HelpFaq</db:code></db:para>
</db:td>
<db:td><db:code>45</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>FAQ</db:emphasis> item in the Help menu.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::InsertImage</db:code></db:para>
</db:td>
<db:td><db:code>46</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>insert image</db:emphasis> action of an application.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::InsertLink</db:code></db:para>
</db:td>
<db:td><db:code>47</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>insert link</db:emphasis> action of an application.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::InsertText</db:code></db:para>
</db:td>
<db:td><db:code>48</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>insert text</db:emphasis> action of an application.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ListAdd</db:code></db:para>
</db:td>
<db:td><db:code>49</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>add to list</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ListRemove</db:code></db:para>
</db:td>
<db:td><db:code>50</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>remove from list</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MailForward</db:code></db:para>
</db:td>
<db:td><db:code>51</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>forward</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MailMarkImportant</db:code></db:para>
</db:td>
<db:td><db:code>52</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>mark as important</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MailMarkRead</db:code></db:para>
</db:td>
<db:td><db:code>53</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>mark as read</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MailMarkUnread</db:code></db:para>
</db:td>
<db:td><db:code>54</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>mark as unread</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MailMessageNew</db:code></db:para>
</db:td>
<db:td><db:code>55</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>compose new mail</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MailReplyAll</db:code></db:para>
</db:td>
<db:td><db:code>56</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>reply to all</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MailReplySender</db:code></db:para>
</db:td>
<db:td><db:code>57</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>reply to sender</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MailSend</db:code></db:para>
</db:td>
<db:td><db:code>58</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>send</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaEject</db:code></db:para>
</db:td>
<db:td><db:code>59</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>eject</db:emphasis> action of a media player or file manager.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaPlaybackPause</db:code></db:para>
</db:td>
<db:td><db:code>60</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>pause</db:emphasis> action of a media player.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaPlaybackStart</db:code></db:para>
</db:td>
<db:td><db:code>61</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>start playback</db:emphasis> action of a media player.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaPlaybackStop</db:code></db:para>
</db:td>
<db:td><db:code>62</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>stop</db:emphasis> action of a media player.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaRecord</db:code></db:para>
</db:td>
<db:td><db:code>63</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>record</db:emphasis> action of a media application.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaSeekBackward</db:code></db:para>
</db:td>
<db:td><db:code>64</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>seek backward</db:emphasis> action of a media player.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaSeekForward</db:code></db:para>
</db:td>
<db:td><db:code>65</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>seek forward</db:emphasis> action of a media player.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaSkipBackward</db:code></db:para>
</db:td>
<db:td><db:code>66</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>skip backward</db:emphasis> action of a media player.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaSkipForward</db:code></db:para>
</db:td>
<db:td><db:code>67</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>skip forward</db:emphasis> action of a media player.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ObjectRotateLeft</db:code></db:para>
</db:td>
<db:td><db:code>68</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>rotate left</db:emphasis> action performed on an object.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ObjectRotateRight</db:code></db:para>
</db:td>
<db:td><db:code>69</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>rotate right</db:emphasis> action performed on an object.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ProcessStop</db:code></db:para>
</db:td>
<db:td><db:code>70</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>stop action in applications with</db:emphasis> actions that may take a while to process, such as web page loading in a browser.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::SystemLockScreen</db:code></db:para>
</db:td>
<db:td><db:code>71</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>lock screen</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::SystemLogOut</db:code></db:para>
</db:td>
<db:td><db:code>72</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>log out</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::SystemSearch</db:code></db:para>
</db:td>
<db:td><db:code>73</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>search</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::SystemReboot</db:code></db:para>
</db:td>
<db:td><db:code>74</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>reboot</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::SystemShutdown</db:code></db:para>
</db:td>
<db:td><db:code>75</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>shutdown</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ToolsCheckSpelling</db:code></db:para>
</db:td>
<db:td><db:code>76</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>check spelling</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ViewFullscreen</db:code></db:para>
</db:td>
<db:td><db:code>77</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>fullscreen</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ViewRefresh</db:code></db:para>
</db:td>
<db:td><db:code>78</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>refresh</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ViewRestore</db:code></db:para>
</db:td>
<db:td><db:code>79</db:code></db:td>
<db:td>
<db:para>The icon for leaving the fullscreen view.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::WindowClose</db:code></db:para>
</db:td>
<db:td><db:code>80</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>close window</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::WindowNew</db:code></db:para>
</db:td>
<db:td><db:code>81</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>new window</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ZoomFitBest</db:code></db:para>
</db:td>
<db:td><db:code>82</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>best fit</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ZoomIn</db:code></db:para>
</db:td>
<db:td><db:code>83</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>zoom in</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ZoomOut</db:code></db:para>
</db:td>
<db:td><db:code>84</db:code></db:td>
<db:td>
<db:para>The icon for the <db:emphasis>zoom out</db:emphasis> action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::AudioCard</db:code></db:para>
</db:td>
<db:td><db:code>85</db:code></db:td>
<db:td>
<db:para>The icon for the audio rendering device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::AudioInputMicrophone</db:code></db:para>
</db:td>
<db:td><db:code>86</db:code></db:td>
<db:td>
<db:para>The icon for the microphone audio input device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::Battery</db:code></db:para>
</db:td>
<db:td><db:code>87</db:code></db:td>
<db:td>
<db:para>The icon for the system battery device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::CameraPhoto</db:code></db:para>
</db:td>
<db:td><db:code>88</db:code></db:td>
<db:td>
<db:para>The icon for a digital still camera devices.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::CameraVideo</db:code></db:para>
</db:td>
<db:td><db:code>89</db:code></db:td>
<db:td>
<db:para>The icon for a video camera device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::CameraWeb</db:code></db:para>
</db:td>
<db:td><db:code>90</db:code></db:td>
<db:td>
<db:para>The icon for a web camera device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::Computer</db:code></db:para>
</db:td>
<db:td><db:code>91</db:code></db:td>
<db:td>
<db:para>The icon for the computing device as a whole.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DriveHarddisk</db:code></db:para>
</db:td>
<db:td><db:code>92</db:code></db:td>
<db:td>
<db:para>The icon for hard disk drives.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DriveOptical</db:code></db:para>
</db:td>
<db:td><db:code>93</db:code></db:td>
<db:td>
<db:para>The icon for optical media drives such as CD and DVD.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::InputGaming</db:code></db:para>
</db:td>
<db:td><db:code>94</db:code></db:td>
<db:td>
<db:para>The icon for the gaming input device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::InputKeyboard</db:code></db:para>
</db:td>
<db:td><db:code>95</db:code></db:td>
<db:td>
<db:para>The icon for the keyboard input device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::InputMouse</db:code></db:para>
</db:td>
<db:td><db:code>96</db:code></db:td>
<db:td>
<db:para>The icon for the mousing input device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::InputTablet</db:code></db:para>
</db:td>
<db:td><db:code>97</db:code></db:td>
<db:td>
<db:para>The icon for graphics tablet input devices.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaFlash</db:code></db:para>
</db:td>
<db:td><db:code>98</db:code></db:td>
<db:td>
<db:para>The icon for flash media, such as a memory stick.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaOptical</db:code></db:para>
</db:td>
<db:td><db:code>99</db:code></db:td>
<db:td>
<db:para>The icon for physical optical media such as CD and DVD.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaTape</db:code></db:para>
</db:td>
<db:td><db:code>100</db:code></db:td>
<db:td>
<db:para>The icon for generic physical tape media.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MultimediaPlayer</db:code></db:para>
</db:td>
<db:td><db:code>101</db:code></db:td>
<db:td>
<db:para>The icon for generic multimedia playing devices.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::NetworkWired</db:code></db:para>
</db:td>
<db:td><db:code>102</db:code></db:td>
<db:td>
<db:para>The icon for wired network connections.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::NetworkWireless</db:code></db:para>
</db:td>
<db:td><db:code>103</db:code></db:td>
<db:td>
<db:para>The icon for wireless network connections.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::Phone</db:code></db:para>
</db:td>
<db:td><db:code>104</db:code></db:td>
<db:td>
<db:para>The icon for phone devices.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::Printer</db:code></db:para>
</db:td>
<db:td><db:code>105</db:code></db:td>
<db:td>
<db:para>The icon for a printer device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::Scanner</db:code></db:para>
</db:td>
<db:td><db:code>106</db:code></db:td>
<db:td>
<db:para>The icon for a scanner device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::VideoDisplay</db:code></db:para>
</db:td>
<db:td><db:code>107</db:code></db:td>
<db:td>
<db:para>The icon for the monitor that video gets displayed on.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::AppointmentMissed</db:code></db:para>
</db:td>
<db:td><db:code>108</db:code></db:td>
<db:td>
<db:para>The icon for when an appointment was missed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::AppointmentSoon</db:code></db:para>
</db:td>
<db:td><db:code>109</db:code></db:td>
<db:td>
<db:para>The icon for when an appointment will occur soon.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::AudioVolumeHigh</db:code></db:para>
</db:td>
<db:td><db:code>110</db:code></db:td>
<db:td>
<db:para>The icon used to indicate high audio volume.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::AudioVolumeLow</db:code></db:para>
</db:td>
<db:td><db:code>111</db:code></db:td>
<db:td>
<db:para>The icon used to indicate low audio volume.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::AudioVolumeMedium</db:code></db:para>
</db:td>
<db:td><db:code>112</db:code></db:td>
<db:td>
<db:para>The icon used to indicate medium audio volume.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::AudioVolumeMuted</db:code></db:para>
</db:td>
<db:td><db:code>113</db:code></db:td>
<db:td>
<db:para>The icon used to indicate the muted state for audio playback.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::BatteryCaution</db:code></db:para>
</db:td>
<db:td><db:code>114</db:code></db:td>
<db:td>
<db:para>The icon used when the battery is below 40%.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::BatteryLow</db:code></db:para>
</db:td>
<db:td><db:code>115</db:code></db:td>
<db:td>
<db:para>The icon used when the battery is below 20%.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DialogError</db:code></db:para>
</db:td>
<db:td><db:code>116</db:code></db:td>
<db:td>
<db:para>The icon used when a dialog is opened to explain an error condition to the user.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DialogInformation</db:code></db:para>
</db:td>
<db:td><db:code>117</db:code></db:td>
<db:td>
<db:para>The icon used when a dialog is opened to give information to the user that may be pertinent to the requested action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DialogPassword</db:code></db:para>
</db:td>
<db:td><db:code>118</db:code></db:td>
<db:td>
<db:para>The icon used when a dialog requesting the authentication credentials for a user is opened.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DialogQuestion</db:code></db:para>
</db:td>
<db:td><db:code>119</db:code></db:td>
<db:td>
<db:para>The icon used when a dialog is opened to ask a simple question to the user.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::DialogWarning</db:code></db:para>
</db:td>
<db:td><db:code>120</db:code></db:td>
<db:td>
<db:para>The icon used when a dialog is opened to warn the user of impending issues with the requested action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FolderDragAccept</db:code></db:para>
</db:td>
<db:td><db:code>121</db:code></db:td>
<db:td>
<db:para>The icon used for a folder while an acceptable object is being dragged onto it.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FolderOpen</db:code></db:para>
</db:td>
<db:td><db:code>122</db:code></db:td>
<db:td>
<db:para>The icon used for folders, while their contents are being displayed within the same window.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::FolderVisiting</db:code></db:para>
</db:td>
<db:td><db:code>123</db:code></db:td>
<db:td>
<db:para>The icon used for folders, while their contents are being displayed in another window.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ImageLoading</db:code></db:para>
</db:td>
<db:td><db:code>124</db:code></db:td>
<db:td>
<db:para>The icon used while another image is being loaded.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::ImageMissing</db:code></db:para>
</db:td>
<db:td><db:code>125</db:code></db:td>
<db:td>
<db:para>The icon used when another image could not be loaded.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MailAttachment</db:code></db:para>
</db:td>
<db:td><db:code>126</db:code></db:td>
<db:td>
<db:para>The icon for a message that contains attachments.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MailUnread</db:code></db:para>
</db:td>
<db:td><db:code>127</db:code></db:td>
<db:td>
<db:para>The icon for an unread message.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MailRead</db:code></db:para>
</db:td>
<db:td><db:code>128</db:code></db:td>
<db:td>
<db:para>The icon for a read message.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MailReplied</db:code></db:para>
</db:td>
<db:td><db:code>129</db:code></db:td>
<db:td>
<db:para>The icon for a message that has been replied to.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaPlaylistRepeat</db:code></db:para>
</db:td>
<db:td><db:code>130</db:code></db:td>
<db:td>
<db:para>The icon for the repeat mode of a media player.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::MediaPlaylistShuffle</db:code></db:para>
</db:td>
<db:td><db:code>131</db:code></db:td>
<db:td>
<db:para>The icon for the shuffle mode of a media player.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::NetworkOffline</db:code></db:para>
</db:td>
<db:td><db:code>132</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that the device is not connected to the network.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::PrinterPrinting</db:code></db:para>
</db:td>
<db:td><db:code>133</db:code></db:td>
<db:td>
<db:para>The icon used while a print job is successfully being spooled to a printing device.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::SecurityHigh</db:code></db:para>
</db:td>
<db:td><db:code>134</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that the security level of an item is known to be high.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::SecurityLow</db:code></db:para>
</db:td>
<db:td><db:code>135</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that the security level of an item is known to be low.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::SoftwareUpdateAvailable</db:code></db:para>
</db:td>
<db:td><db:code>136</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that an update is available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::SoftwareUpdateUrgent</db:code></db:para>
</db:td>
<db:td><db:code>137</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that an urgent update is available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::SyncError</db:code></db:para>
</db:td>
<db:td><db:code>138</db:code></db:td>
<db:td>
<db:para>The icon used when an error occurs while attempting to synchronize data across devices.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::SyncSynchronizing</db:code></db:para>
</db:td>
<db:td><db:code>139</db:code></db:td>
<db:td>
<db:para>The icon used while data is successfully synchronizing across devices.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::UserAvailable</db:code></db:para>
</db:td>
<db:td><db:code>140</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that a user is available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::UserOffline</db:code></db:para>
</db:td>
<db:td><db:code>141</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that a user is not available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::WeatherClear</db:code></db:para>
</db:td>
<db:td><db:code>142</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that the sky is clear.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::WeatherClearNight</db:code></db:para>
</db:td>
<db:td><db:code>143</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that the sky is clear during the night.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::WeatherFewClouds</db:code></db:para>
</db:td>
<db:td><db:code>144</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that the sky is partly cloudy.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::WeatherFewCloudsNight</db:code></db:para>
</db:td>
<db:td><db:code>145</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that the sky is partly cloudy during the night.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::WeatherFog</db:code></db:para>
</db:td>
<db:td><db:code>146</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that the weather is foggy.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::WeatherShowers</db:code></db:para>
</db:td>
<db:td><db:code>147</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that rain showers are occurring.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::WeatherSnow</db:code></db:para>
</db:td>
<db:td><db:code>148</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that snow is falling.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qicon.xml">QIcon</db:link></db:emphasis>::<db:emphasis role="bold">ThemeIcon</db:emphasis>::WeatherStorm</db:code></db:para>
</db:td>
<db:td><db:code>149</db:code></db:td>
<db:td>
<db:para>The icon used to indicate that the weather is stormy.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This enum was introduced or modified in Qt 6.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#creating-an-icon-from-a-theme-or-icon-library">QIcon#Creating an icon from a theme or icon library</db:link></db:member>
<db:member><db:link xlink:href="qicon.xml#fromTheme">fromTheme</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="fromTheme-2">
<db:title>[static, since 6.7] QIcon QIcon::fromTheme(QIcon::ThemeIcon <db:emphasis>icon</db:emphasis>)</db:title>
<db:bridgehead renderas="sect2" xml:id="fromTheme-3">[static, since 6.7] QIcon QIcon::fromTheme(QIcon::ThemeIcon <db:emphasis>icon</db:emphasis>, const QIcon &amp;<db:emphasis>fallback</db:emphasis>)</db:bridgehead>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns the <db:link xlink:href="qicon.xml">QIcon</db:link> corresponding to <db:code role="parameter">icon</db:code> in the <db:link xlink:href="qicon.xml#themeName">current icon theme</db:link>.</db:para>
<db:para>If the current theme does not provide an icon for <db:code role="parameter">icon</db:code>, the <db:link xlink:href="qicon.xml#fallbackThemeName">fallback icon theme</db:link> is consulted, before falling back to looking up standalone icon files in the <db:link xlink:href="qicon.xml#fallbackSearchPaths">fallback icon search path</db:link>. Finally, the platform's native icon library is consulted.</db:para>
<db:para>If no icon is found and a <db:code role="parameter">fallback</db:code> is provided, <db:code role="parameter">fallback</db:code> is returned. This is useful to provide a guaranteed fallback, regardless of whether the current set of icon themes and fallbacks paths support the requested icon.</db:para>
<db:para>If no icon is found and no <db:code role="parameter">fallback</db:code> is provided, a default constructed, empty <db:link xlink:href="qicon.xml">QIcon</db:link> is returned.</db:para>
<db:para>This function was introduced in Qt 6.7.</db:para>
</db:section>
<db:section xml:id="QIcon">
<db:title>QIcon::QIcon()</db:title>
<db:constructorsynopsis>
<db:methodname>QIcon</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QIcon()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a null icon.</db:para>
</db:section>
<db:section xml:id="QIcon-1">
<db:title>QIcon::QIcon(const QPixmap &amp;<db:emphasis>pixmap</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QIcon</db:methodname>
<db:methodparam>
<db:type>const QPixmap &amp;</db:type>
<db:parameter>pixmap</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QIcon(const QPixmap &amp;pixmap)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an icon from a <db:code role="parameter">pixmap</db:code>.</db:para>
</db:section>
<db:section xml:id="QIcon-4">
<db:title>[explicit] QIcon::QIcon(const QString &amp;<db:emphasis>fileName</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QIcon</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>fileName</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">4</db:synopsisinfo>
<db:synopsisinfo role="signature">QIcon(const QString &amp;fileName)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an icon from the file with the given <db:code role="parameter">fileName</db:code>. The file will be loaded on demand.</db:para>
<db:para>If <db:code role="parameter">fileName</db:code> contains a relative path (e.g. the filename only) the relevant file must be found relative to the runtime working directory.</db:para>
<db:para>The file name can refer to an actual file on disk or to one of the application's embedded resources. See the <db:link xlink:href="resources.xml">Resource System</db:link> overview for details on how to embed images and other resource files in the application's executable.</db:para>
<db:para>Use the <db:link xlink:href="qimagereader.xml#supportedImageFormats">QImageReader::supportedImageFormats</db:link>() and <db:link xlink:href="qimagewriter.xml#supportedImageFormats">QImageWriter::supportedImageFormats</db:link>() functions to retrieve a complete list of the supported file formats.</db:para>
</db:section>
<db:section xml:id="QIcon-5">
<db:title>[explicit] QIcon::QIcon(QIconEngine *<db:emphasis>engine</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QIcon</db:methodname>
<db:methodparam>
<db:type>QIconEngine *</db:type>
<db:parameter>engine</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">5</db:synopsisinfo>
<db:synopsisinfo role="signature">QIcon(QIconEngine *engine)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates an icon with a specific icon <db:code role="parameter">engine</db:code>. The icon takes ownership of the engine.</db:para>
</db:section>
<db:section xml:id="QIcon-2">
<db:title>QIcon::QIcon(const QIcon &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QIcon</db:methodname>
<db:methodparam>
<db:type>const QIcon &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QIcon(const QIcon &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code>. This is very fast.</db:para>
</db:section>
<db:section xml:id="QIcon-3">
<db:title>QIcon::QIcon(QIcon &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QIcon</db:methodname>
<db:methodparam>
<db:type>QIcon &amp;&amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">move-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">3</db:synopsisinfo>
<db:synopsisinfo role="signature">QIcon(QIcon &amp;&amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Move-constructs a <db:link xlink:href="qicon.xml">QIcon</db:link> instance, making it point to the same object that <db:code role="parameter">other</db:code> was pointing to.</db:para>
</db:section>
<db:section xml:id="dtor.QIcon">
<db:title>QIcon::~QIcon()</db:title>
<db:destructorsynopsis>
<db:methodname>~QIcon</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QIcon()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the icon.</db:para>
</db:section>
<db:section xml:id="actualSize">
<db:title>QSize QIcon::actualSize(const QSize &amp;<db:emphasis>size</db:emphasis>, QIcon::Mode <db:emphasis>mode</db:emphasis> = Normal, QIcon::State <db:emphasis>state</db:emphasis> = Off) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QSize</db:type>
<db:methodname>actualSize</db:methodname>
<db:methodparam>
<db:type>const QSize &amp;</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::Mode</db:type>
<db:parameter>mode</db:parameter>
<db:initializer>Normal</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::State</db:type>
<db:parameter>state</db:parameter>
<db:initializer>Off</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QSize actualSize(const QSize &amp;size, QIcon::Mode mode, QIcon::State state) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the actual size of the icon for the requested <db:code role="parameter">size</db:code>, <db:code role="parameter">mode</db:code>, and <db:code role="parameter">state</db:code>. The result might be smaller than requested, but never larger. The returned size is in device-independent pixels (This is relevant for high-dpi pixmaps.)</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#pixmap">pixmap</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#paint">paint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addFile">
<db:title>void QIcon::addFile(const QString &amp;<db:emphasis>fileName</db:emphasis>, const QSize &amp;<db:emphasis>size</db:emphasis> = QSize(), QIcon::Mode <db:emphasis>mode</db:emphasis> = Normal, QIcon::State <db:emphasis>state</db:emphasis> = Off)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addFile</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>fileName</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QSize &amp;</db:type>
<db:parameter>size</db:parameter>
<db:initializer>QSize()</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::Mode</db:type>
<db:parameter>mode</db:parameter>
<db:initializer>Normal</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::State</db:type>
<db:parameter>state</db:parameter>
<db:initializer>Off</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addFile(const QString &amp;fileName, const QSize &amp;size, QIcon::Mode mode, QIcon::State state)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Adds an image from the file with the given <db:code role="parameter">fileName</db:code> to the icon, as a specialization for <db:code role="parameter">size</db:code>, <db:code role="parameter">mode</db:code> and <db:code role="parameter">state</db:code>. The file will be loaded on demand. Note: custom icon engines are free to ignore additionally added pixmaps.</db:para>
<db:para>If <db:code role="parameter">fileName</db:code> contains a relative path (e.g. the filename only) the relevant file must be found relative to the runtime working directory.</db:para>
<db:para>The file name can refer to an actual file on disk or to one of the application's embedded resources. See the <db:link xlink:href="resources.xml">Resource System</db:link> overview for details on how to embed images and other resource files in the application's executable.</db:para>
<db:para>Use the <db:link xlink:href="qimagereader.xml#supportedImageFormats">QImageReader::supportedImageFormats</db:link>() and <db:link xlink:href="qimagewriter.xml#supportedImageFormats">QImageWriter::supportedImageFormats</db:link>() functions to retrieve a complete list of the supported file formats.</db:para>
<db:para>If a high resolution version of the image exists (identified by the suffix <db:code>@2x</db:code> on the base name), it is automatically loaded and added with the <db:emphasis>device pixel ratio</db:emphasis> set to a value of 2. This can be disabled by setting the environment variable <db:code>QT_HIGHDPI_DISABLE_2X_IMAGE_LOADING</db:code> (see <db:link xlink:href="qimagereader.xml">QImageReader</db:link>).</db:para>
<db:note>
<db:para>When you add a non-empty filename to a <db:link xlink:href="qicon.xml">QIcon</db:link>, the icon becomes non-null, even if the file doesn't exist or points to a corrupt file.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#addPixmap">addPixmap</db:link>()</db:member>
<db:member><db:link xlink:href="qpixmap.xml#devicePixelRatio">QPixmap::devicePixelRatio</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addPixmap">
<db:title>void QIcon::addPixmap(const QPixmap &amp;<db:emphasis>pixmap</db:emphasis>, QIcon::Mode <db:emphasis>mode</db:emphasis> = Normal, QIcon::State <db:emphasis>state</db:emphasis> = Off)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addPixmap</db:methodname>
<db:methodparam>
<db:type>const QPixmap &amp;</db:type>
<db:parameter>pixmap</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::Mode</db:type>
<db:parameter>mode</db:parameter>
<db:initializer>Normal</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::State</db:type>
<db:parameter>state</db:parameter>
<db:initializer>Off</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addPixmap(const QPixmap &amp;pixmap, QIcon::Mode mode, QIcon::State state)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Adds <db:code role="parameter">pixmap</db:code> to the icon, as a specialization for <db:code role="parameter">mode</db:code> and <db:code role="parameter">state</db:code>.</db:para>
<db:para>Custom icon engines are free to ignore additionally added pixmaps.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#addFile">addFile</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="availableSizes">
<db:title>QList&lt;QSize&gt; QIcon::availableSizes(QIcon::Mode <db:emphasis>mode</db:emphasis> = Normal, QIcon::State <db:emphasis>state</db:emphasis> = Off) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QList&lt;QSize&gt;</db:type>
<db:methodname>availableSizes</db:methodname>
<db:methodparam>
<db:type>QIcon::Mode</db:type>
<db:parameter>mode</db:parameter>
<db:initializer>Normal</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::State</db:type>
<db:parameter>state</db:parameter>
<db:initializer>Off</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QSize&gt; availableSizes(QIcon::Mode mode, QIcon::State state) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of available icon sizes for the specified <db:code role="parameter">mode</db:code> and <db:code role="parameter">state</db:code>.</db:para>
</db:section>
<db:section xml:id="cacheKey">
<db:title>qint64 QIcon::cacheKey() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>qint64</db:type>
<db:methodname>cacheKey</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qint64 cacheKey() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a number that identifies the contents of this <db:link xlink:href="qicon.xml">QIcon</db:link> object. Distinct <db:link xlink:href="qicon.xml">QIcon</db:link> objects can have the same key if they refer to the same contents.</db:para>
<db:para>The cacheKey() will change when the icon is altered via <db:link xlink:href="qicon.xml#addPixmap">addPixmap</db:link>() or <db:link xlink:href="qicon.xml#addFile">addFile</db:link>().</db:para>
<db:para>Cache keys are mostly useful in conjunction with caching.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpixmap.xml#cacheKey">QPixmap::cacheKey</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fallbackSearchPaths">
<db:title>[static] QStringList QIcon::fallbackSearchPaths()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QStringList</db:type>
<db:methodname>fallbackSearchPaths</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QStringList fallbackSearchPaths()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the fallback search paths for icons.</db:para>
<db:para>The fallback search paths are consulted for standalone icon files if the <db:link xlink:href="qicon.xml#themeName">current icon theme</db:link> or <db:link xlink:href="qicon.xml#fallbackThemeName">fallback icon theme</db:link> do not provide results for an icon lookup.</db:para>
<db:para>If not set, the fallback search paths will be defined by the platform.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#setFallbackSearchPaths">setFallbackSearchPaths</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#themeSearchPaths">themeSearchPaths</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fallbackThemeName">
<db:title>[static] QString QIcon::fallbackThemeName()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QString</db:type>
<db:methodname>fallbackThemeName</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString fallbackThemeName()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the name of the fallback icon theme.</db:para>
<db:para>If not set, the fallback icon theme will be defined by the platform.</db:para>
<db:note>
<db:para>Platform fallback icon themes are only implemented on <db:link xlink:href="https://freedesktop.org/">Freedesktop</db:link> based systems at the moment, and the icon theme depends on your desktop settings.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#setFallbackThemeName">setFallbackThemeName</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#themeName">themeName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fromTheme">
<db:title>[static] QIcon QIcon::fromTheme(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QIcon</db:type>
<db:methodname>fromTheme</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QIcon fromTheme(const QString &amp;name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the <db:link xlink:href="qicon.xml">QIcon</db:link> corresponding to <db:code role="parameter">name</db:code> in the <db:link xlink:href="qicon.xml#themeName">current icon theme</db:link>.</db:para>
<db:para>If the current theme does not provide an icon for <db:code role="parameter">name</db:code>, the <db:link xlink:href="qicon.xml#fallbackThemeName">fallback icon theme</db:link> is consulted, before falling back to looking up standalone icon files in the <db:link xlink:href="qicon.xml#fallbackSearchPaths">fallback icon search path</db:link>. Finally, the platform's native icon library is consulted.</db:para>
<db:para>To fetch an icon from the current icon theme:</db:para>
<db:programlisting language="cpp">QIcon undoicon = QIcon::fromTheme(QIcon::ThemeIcon::EditUndo);
</db:programlisting>
<db:para>If an <db:link xlink:href="qicon.xml#themeName">icon theme</db:link> has not been explicitly set via <db:link xlink:href="qicon.xml#setThemeName">setThemeName</db:link>() a platform defined icon theme will be used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#themeName">themeName</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#fallbackThemeName">fallbackThemeName</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#setThemeName">setThemeName</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#themeSearchPaths">themeSearchPaths</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#fallbackSearchPaths">fallbackSearchPaths</db:link>()</db:member>
<db:member><db:link xlink:href="https://specifications.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html">Freedesktop Icon Naming Specification</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fromTheme-1">
<db:title>[static] QIcon QIcon::fromTheme(const QString &amp;<db:emphasis>name</db:emphasis>, const QIcon &amp;<db:emphasis>fallback</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QIcon</db:type>
<db:methodname>fromTheme</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QIcon &amp;</db:type>
<db:parameter>fallback</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QIcon fromTheme(const QString &amp;name, const QIcon &amp;fallback)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns the <db:link xlink:href="qicon.xml">QIcon</db:link> corresponding to <db:code role="parameter">name</db:code> in the <db:link xlink:href="qicon.xml#themeName">current icon theme</db:link>.</db:para>
<db:para>If the current theme does not provide an icon for <db:code role="parameter">name</db:code>, the <db:link xlink:href="qicon.xml#fallbackThemeName">fallback icon theme</db:link> is consulted, before falling back to looking up standalone icon files in the <db:link xlink:href="qicon.xml#fallbackSearchPaths">fallback icon search path</db:link>. Finally, the platform's native icon library is consulted.</db:para>
<db:para>If no icon is found <db:code role="parameter">fallback</db:code> is returned.</db:para>
<db:para>This is useful to provide a guaranteed fallback, regardless of whether the current set of icon themes and fallbacks paths support the requested icon.</db:para>
<db:para>For example:</db:para>
<db:programlisting language="cpp">QIcon undoicon = QIcon::fromTheme(QIcon::ThemeIcon::EditUndo, QIcon(&quot;:/undo.png&quot;));
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#fallbackThemeName">fallbackThemeName</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#fallbackSearchPaths">fallbackSearchPaths</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hasThemeIcon">
<db:title>[static] bool QIcon::hasThemeIcon(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>bool</db:type>
<db:methodname>hasThemeIcon</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool hasThemeIcon(const QString &amp;name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if there is an icon available for <db:code role="parameter">name</db:code> in the current icon theme or any of the fallbacks, as described by <db:link xlink:href="qicon.xml#fromTheme">fromTheme</db:link>(), otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#themeSearchPaths">themeSearchPaths</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#fromTheme">fromTheme</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#setThemeName">setThemeName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hasThemeIcon-1">
<db:title>[static, since 6.7] bool QIcon::hasThemeIcon(QIcon::ThemeIcon <db:emphasis>icon</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>bool</db:type>
<db:methodname>hasThemeIcon</db:methodname>
<db:methodparam>
<db:type>QIcon::ThemeIcon</db:type>
<db:parameter>icon</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">bool hasThemeIcon(QIcon::ThemeIcon icon)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns <db:code>true</db:code> if there is an icon available for <db:code role="parameter">icon</db:code> in the current icon theme or any of the fallbacks, as described by <db:link xlink:href="qicon.xml#fromTheme">fromTheme</db:link>(), otherwise returns <db:code>false</db:code>.</db:para>
<db:para>This function was introduced in Qt 6.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#fromTheme">fromTheme</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isMask">
<db:title>bool QIcon::isMask() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isMask</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isMask() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if this icon has been marked as a mask image. Certain platforms render mask icons differently (for example, menu icons on macOS).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#setIsMask">setIsMask</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isNull">
<db:title>bool QIcon::isNull() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isNull</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isNull() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if the icon is empty; otherwise returns <db:code>false</db:code>.</db:para>
<db:para>An icon is empty if it has neither a pixmap nor a filename.</db:para>
<db:para>Note: Even a non-null icon might not be able to create valid pixmaps, eg. if the file does not exist or cannot be read.</db:para>
</db:section>
<db:section xml:id="name">
<db:title>QString QIcon::name() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>name</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString name() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the name used to create the icon, if available.</db:para>
<db:para>Depending on the way the icon was created, it may have an associated name. This is the case for icons created with <db:link xlink:href="qicon.xml#fromTheme">fromTheme</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#fromTheme">fromTheme</db:link>()</db:member>
<db:member><db:link xlink:href="qiconengine.xml#iconName">QIconEngine::iconName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="paint">
<db:title>void QIcon::paint(QPainter *<db:emphasis>painter</db:emphasis>, const QRect &amp;<db:emphasis>rect</db:emphasis>, Qt::Alignment <db:emphasis>alignment</db:emphasis> = Qt::AlignCenter, QIcon::Mode <db:emphasis>mode</db:emphasis> = Normal, QIcon::State <db:emphasis>state</db:emphasis> = Off) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:void/>
<db:methodname>paint</db:methodname>
<db:methodparam>
<db:type>QPainter *</db:type>
<db:parameter>painter</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>rect</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>Qt::Alignment</db:type>
<db:parameter>alignment</db:parameter>
<db:initializer>Qt::AlignCenter</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::Mode</db:type>
<db:parameter>mode</db:parameter>
<db:initializer>Normal</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::State</db:type>
<db:parameter>state</db:parameter>
<db:initializer>Off</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void paint(QPainter *painter, const QRect &amp;rect, Qt::Alignment alignment, QIcon::Mode mode, QIcon::State state) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Uses the <db:code role="parameter">painter</db:code> to paint the icon with specified <db:code role="parameter">alignment</db:code>, required <db:code role="parameter">mode</db:code>, and <db:code role="parameter">state</db:code> into the rectangle <db:code role="parameter">rect</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#actualSize">actualSize</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#pixmap">pixmap</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="paint-1">
<db:title>void QIcon::paint(QPainter *<db:emphasis>painter</db:emphasis>, int <db:emphasis>x</db:emphasis>, int <db:emphasis>y</db:emphasis>, int <db:emphasis>w</db:emphasis>, int <db:emphasis>h</db:emphasis>, Qt::Alignment <db:emphasis>alignment</db:emphasis> = Qt::AlignCenter, QIcon::Mode <db:emphasis>mode</db:emphasis> = Normal, QIcon::State <db:emphasis>state</db:emphasis> = Off) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:void/>
<db:methodname>paint</db:methodname>
<db:methodparam>
<db:type>QPainter *</db:type>
<db:parameter>painter</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>w</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>h</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>Qt::Alignment</db:type>
<db:parameter>alignment</db:parameter>
<db:initializer>Qt::AlignCenter</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::Mode</db:type>
<db:parameter>mode</db:parameter>
<db:initializer>Normal</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::State</db:type>
<db:parameter>state</db:parameter>
<db:initializer>Off</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">void paint(QPainter *painter, int x, int y, int w, int h, Qt::Alignment alignment, QIcon::Mode mode, QIcon::State state) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This is an overloaded function.</db:para>
<db:para>Paints the icon into the rectangle <db:link xlink:href="qrect.xml">QRect</db:link>(<db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">w</db:code>, <db:code role="parameter">h</db:code>).</db:para>
</db:section>
<db:section xml:id="pixmap">
<db:title>QPixmap QIcon::pixmap(const QSize &amp;<db:emphasis>size</db:emphasis>, QIcon::Mode <db:emphasis>mode</db:emphasis> = Normal, QIcon::State <db:emphasis>state</db:emphasis> = Off) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPixmap</db:type>
<db:methodname>pixmap</db:methodname>
<db:methodparam>
<db:type>const QSize &amp;</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::Mode</db:type>
<db:parameter>mode</db:parameter>
<db:initializer>Normal</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::State</db:type>
<db:parameter>state</db:parameter>
<db:initializer>Off</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPixmap pixmap(const QSize &amp;size, QIcon::Mode mode, QIcon::State state) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a pixmap with the requested <db:code role="parameter">size</db:code>, <db:code role="parameter">mode</db:code>, and <db:code role="parameter">state</db:code>, generating one if necessary. The pixmap might be smaller than requested, but never larger, unless the device-pixel ratio of the returned pixmap is larger than 1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#actualSize">actualSize</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#paint">paint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pixmap-1">
<db:title>QPixmap QIcon::pixmap(int <db:emphasis>w</db:emphasis>, int <db:emphasis>h</db:emphasis>, QIcon::Mode <db:emphasis>mode</db:emphasis> = Normal, QIcon::State <db:emphasis>state</db:emphasis> = Off) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPixmap</db:type>
<db:methodname>pixmap</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>w</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>h</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::Mode</db:type>
<db:parameter>mode</db:parameter>
<db:initializer>Normal</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::State</db:type>
<db:parameter>state</db:parameter>
<db:initializer>Off</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QPixmap pixmap(int w, int h, QIcon::Mode mode, QIcon::State state) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns a pixmap of size <db:link xlink:href="qsize.xml">QSize</db:link>(<db:code role="parameter">w</db:code>, <db:code role="parameter">h</db:code>). The pixmap might be smaller than requested, but never larger, unless the device-pixel ratio of the returned pixmap is larger than 1.</db:para>
</db:section>
<db:section xml:id="pixmap-2">
<db:title>QPixmap QIcon::pixmap(int <db:emphasis>extent</db:emphasis>, QIcon::Mode <db:emphasis>mode</db:emphasis> = Normal, QIcon::State <db:emphasis>state</db:emphasis> = Off) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPixmap</db:type>
<db:methodname>pixmap</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>extent</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::Mode</db:type>
<db:parameter>mode</db:parameter>
<db:initializer>Normal</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::State</db:type>
<db:parameter>state</db:parameter>
<db:initializer>Off</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QPixmap pixmap(int extent, QIcon::Mode mode, QIcon::State state) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns a pixmap of size <db:link xlink:href="qsize.xml">QSize</db:link>(<db:code role="parameter">extent</db:code>, <db:code role="parameter">extent</db:code>). The pixmap might be smaller than requested, but never larger, unless the device-pixel ratio of the returned pixmap is larger than 1.</db:para>
</db:section>
<db:section xml:id="pixmap-3">
<db:title>[since 6.0] QPixmap QIcon::pixmap(const QSize &amp;<db:emphasis>size</db:emphasis>, qreal <db:emphasis>devicePixelRatio</db:emphasis>, QIcon::Mode <db:emphasis>mode</db:emphasis> = Normal, QIcon::State <db:emphasis>state</db:emphasis> = Off) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPixmap</db:type>
<db:methodname>pixmap</db:methodname>
<db:methodparam>
<db:type>const QSize &amp;</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>devicePixelRatio</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::Mode</db:type>
<db:parameter>mode</db:parameter>
<db:initializer>Normal</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::State</db:type>
<db:parameter>state</db:parameter>
<db:initializer>Off</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">3</db:synopsisinfo>
<db:synopsisinfo role="signature">QPixmap pixmap(const QSize &amp;size, qreal devicePixelRatio, QIcon::Mode mode, QIcon::State state) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns a pixmap with the requested <db:code role="parameter">size</db:code>, <db:code role="parameter">devicePixelRatio</db:code>, <db:code role="parameter">mode</db:code>, and <db:code role="parameter">state</db:code>, generating one with the given <db:code role="parameter">mode</db:code> and <db:code role="parameter">state</db:code> if necessary. The pixmap might be smaller than requested, but never larger, unless the device-pixel ratio of the returned pixmap is larger than 1.</db:para>
<db:para>This function was introduced in Qt 6.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#actualSize">actualSize</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#paint">paint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFallbackSearchPaths">
<db:title>[static] void QIcon::setFallbackSearchPaths(const QStringList &amp;<db:emphasis>paths</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:void/>
<db:methodname>setFallbackSearchPaths</db:methodname>
<db:methodparam>
<db:type>const QStringList &amp;</db:type>
<db:parameter>paths</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setFallbackSearchPaths(const QStringList &amp;paths)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the fallback search paths for icons to <db:code role="parameter">paths</db:code>.</db:para>
<db:para>The fallback search paths are consulted for standalone icon files if the <db:link xlink:href="qicon.xml#themeName">current icon theme</db:link> or <db:link xlink:href="qicon.xml#fallbackThemeName">fallback icon theme</db:link> do not provide results for an icon lookup.</db:para>
<db:para>For example:</db:para>
<db:programlisting language="cpp">QIcon::setFallbackSearchPaths(QIcon::fallbackSearchPaths() &amp;lt;&amp;lt; &quot;my/search/path&quot;);
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#fallbackSearchPaths">fallbackSearchPaths</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#setThemeSearchPaths">setThemeSearchPaths</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFallbackThemeName">
<db:title>[static] void QIcon::setFallbackThemeName(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:void/>
<db:methodname>setFallbackThemeName</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setFallbackThemeName(const QString &amp;name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the fallback icon theme to <db:code role="parameter">name</db:code>.</db:para>
<db:para>The fallback icon theme is consulted for icons not provided by the <db:link xlink:href="qicon.xml#themeName">current icon theme</db:link>, or if the <db:link xlink:href="qicon.xml#themeName">current icon theme</db:link> does not exist.</db:para>
<db:para>The <db:code role="parameter">name</db:code> should correspond to theme in the same format as documented by <db:link xlink:href="qicon.xml#setThemeName">setThemeName</db:link>(), and will be looked up in <db:link xlink:href="qicon.xml#themeSearchPaths">themeSearchPaths</db:link>().</db:para>
<db:note>
<db:para>Fallback icon themes should be set before creating <db:link xlink:href="qguiapplication.xml">QGuiApplication</db:link>, to ensure correct initialization.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#fallbackThemeName">fallbackThemeName</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#themeSearchPaths">themeSearchPaths</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#themeName">themeName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setIsMask">
<db:title>void QIcon::setIsMask(bool <db:emphasis>isMask</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setIsMask</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>isMask</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setIsMask(bool isMask)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Indicate that this icon is a mask image(boolean <db:code role="parameter">isMask</db:code>), and hence can potentially be modified based on where it's displayed.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#isMask">isMask</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setThemeName">
<db:title>[static] void QIcon::setThemeName(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:void/>
<db:methodname>setThemeName</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setThemeName(const QString &amp;name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the current icon theme to <db:code role="parameter">name</db:code>.</db:para>
<db:para>The theme will be will be looked up in <db:link xlink:href="qicon.xml#themeSearchPaths">themeSearchPaths</db:link>().</db:para>
<db:para>At the moment the only supported icon theme format is the <db:link xlink:href="https://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html">Freedesktop Icon Theme Specification</db:link>. The <db:code role="parameter">name</db:code> should correspond to a directory name in the themeSearchPath() containing an <db:code>index.theme</db:code> file describing its contents.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#themeSearchPaths">themeSearchPaths</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#themeName">themeName</db:link>()</db:member>
<db:member><db:link xlink:href="https://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html">Freedesktop Icon Theme Specification</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setThemeSearchPaths">
<db:title>[static] void QIcon::setThemeSearchPaths(const QStringList &amp;<db:emphasis>paths</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:void/>
<db:methodname>setThemeSearchPaths</db:methodname>
<db:methodparam>
<db:type>const QStringList &amp;</db:type>
<db:parameter>paths</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setThemeSearchPaths(const QStringList &amp;paths)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the search paths for icon themes to <db:code role="parameter">paths</db:code>.</db:para>
<db:para>The content of <db:code role="parameter">paths</db:code> should follow the theme format documented by <db:link xlink:href="qicon.xml#setThemeName">setThemeName</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#themeSearchPaths">themeSearchPaths</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#fromTheme">fromTheme</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#setThemeName">setThemeName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="swap">
<db:title>void QIcon::swap(QIcon &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>swap</db:methodname>
<db:methodparam>
<db:type>QIcon &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void swap(QIcon &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Swaps icon <db:code role="parameter">other</db:code> with this icon. This operation is very fast and never fails.</db:para>
</db:section>
<db:section xml:id="themeName">
<db:title>[static] QString QIcon::themeName()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QString</db:type>
<db:methodname>themeName</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString themeName()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the name of the current icon theme.</db:para>
<db:para>If not set, the current icon theme will be defined by the platform.</db:para>
<db:note>
<db:para>Platform icon themes are only implemented on <db:link xlink:href="https://freedesktop.org/">Freedesktop</db:link> based systems at the moment, and the icon theme depends on your desktop settings.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#setThemeName">setThemeName</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#themeSearchPaths">themeSearchPaths</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#fromTheme">fromTheme</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#hasThemeIcon">hasThemeIcon</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="themeSearchPaths">
<db:title>[static] QStringList QIcon::themeSearchPaths()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QStringList</db:type>
<db:methodname>themeSearchPaths</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QStringList themeSearchPaths()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the search paths for icon themes.</db:para>
<db:para>The default search paths will be defined by the platform. All platforms will also have the resource directory <db:code>:\icons</db:code> as a fallback.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#setThemeSearchPaths">setThemeSearchPaths</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#fromTheme">fromTheme</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#setThemeName">setThemeName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-QVariant">
<db:title>QVariant QIcon::operator QVariant() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QVariant</db:type>
<db:methodname>operator QVariant</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QVariant operator QVariant() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the icon as a <db:link xlink:href="qvariant.xml">QVariant</db:link>.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QIcon &amp;QIcon::operator=(const QIcon &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QIcon &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QIcon &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QIcon &amp; operator=(const QIcon &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Assigns the <db:code role="parameter">other</db:code> icon to this icon and returns a reference to this icon.</db:para>
</db:section>
<db:section xml:id="operator-eq-1">
<db:title>QIcon &amp;QIcon::operator=(QIcon &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QIcon &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>QIcon &amp;&amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">move-assign</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QIcon &amp; operator=(QIcon &amp;&amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Move-assigns <db:code role="parameter">other</db:code> to this <db:link xlink:href="qicon.xml">QIcon</db:link> instance.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-lt-lt-1">
<db:title>QDataStream &amp;operator&lt;&lt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, const QIcon &amp;<db:emphasis>icon</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QDataStream &amp;</db:type>
<db:methodname>operator&lt;&lt;</db:methodname>
<db:methodparam>
<db:type>QDataStream &amp;</db:type>
<db:parameter>stream</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QIcon &amp;</db:type>
<db:parameter>icon</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QDataStream &amp; operator&lt;&lt;(QDataStream &amp;stream, const QIcon &amp;icon)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Writes the given <db:code role="parameter">icon</db:code> to the given <db:code role="parameter">stream</db:code> as a PNG image. If the icon contains more than one image, all images will be written to the stream. Note that writing the stream to a file will not produce a valid image file.</db:para>
</db:section>
<db:section xml:id="operator-gt-gt-1">
<db:title>QDataStream &amp;operator&gt;&gt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, QIcon &amp;<db:emphasis>icon</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QDataStream &amp;</db:type>
<db:methodname>operator&gt;&gt;</db:methodname>
<db:methodparam>
<db:type>QDataStream &amp;</db:type>
<db:parameter>stream</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QIcon &amp;</db:type>
<db:parameter>icon</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QDataStream &amp; operator&gt;&gt;(QDataStream &amp;stream, QIcon &amp;icon)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reads an image, or a set of images, from the given <db:code role="parameter">stream</db:code> into the given <db:code role="parameter">icon</db:code>.</db:para>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for QIcon</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qicon.xml">QIcon</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-member-function-documentation">
<db:title>Obsolete Member Function Documentation</db:title>
<db:section xml:id="actualSize-1">
<db:title>QSize QIcon::actualSize(QWindow *<db:emphasis>window</db:emphasis>, const QSize &amp;<db:emphasis>size</db:emphasis>, QIcon::Mode <db:emphasis>mode</db:emphasis> = Normal, QIcon::State <db:emphasis>state</db:emphasis> = Off) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QSize</db:type>
<db:methodname>actualSize</db:methodname>
<db:methodparam>
<db:type>QWindow *</db:type>
<db:parameter>window</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QSize &amp;</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::Mode</db:type>
<db:parameter>mode</db:parameter>
<db:initializer>Normal</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::State</db:type>
<db:parameter>state</db:parameter>
<db:initializer>Off</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QSize actualSize(QWindow *window, const QSize &amp;size, QIcon::Mode mode, QIcon::State state) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function is deprecated since 6.0. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qicon.xml#actualSize">actualSize</db:link>(size) instead.</db:para>
<db:para>Returns the actual size of the icon for the requested <db:code role="parameter">window</db:code> <db:code role="parameter">size</db:code>, <db:code role="parameter">mode</db:code>, and <db:code role="parameter">state</db:code>.</db:para>
<db:para>The pixmap can be smaller than the requested size. The returned size is in device-independent pixels (This is relevant for high-dpi pixmaps.)</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#actualSize">actualSize</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#pixmap">pixmap</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#paint">paint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pixmap-4">
<db:title>QPixmap QIcon::pixmap(QWindow *<db:emphasis>window</db:emphasis>, const QSize &amp;<db:emphasis>size</db:emphasis>, QIcon::Mode <db:emphasis>mode</db:emphasis> = Normal, QIcon::State <db:emphasis>state</db:emphasis> = Off) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPixmap</db:type>
<db:methodname>pixmap</db:methodname>
<db:methodparam>
<db:type>QWindow *</db:type>
<db:parameter>window</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QSize &amp;</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::Mode</db:type>
<db:parameter>mode</db:parameter>
<db:initializer>Normal</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>QIcon::State</db:type>
<db:parameter>state</db:parameter>
<db:initializer>Off</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">4</db:synopsisinfo>
<db:synopsisinfo role="signature">QPixmap pixmap(QWindow *window, const QSize &amp;size, QIcon::Mode mode, QIcon::State state) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function is deprecated since 6.0. We strongly advise against using it in new code.</db:para>
<db:para>Use pixmap(size, devicePixelRatio) instead.</db:para>
<db:para>Returns a pixmap with the requested <db:code role="parameter">window</db:code> <db:code role="parameter">size</db:code>, <db:code role="parameter">mode</db:code>, and <db:code role="parameter">state</db:code>, generating one if necessary.</db:para>
<db:para>The pixmap can be smaller than the requested size. If <db:code role="parameter">window</db:code> is on a high-dpi display the pixmap can be larger. In that case it will have a devicePixelRatio larger than 1.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qicon.xml#actualSize">actualSize</db:link>()</db:member>
<db:member><db:link xlink:href="qicon.xml#paint">paint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:section>
</db:article>
