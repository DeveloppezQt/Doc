<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>&lt;QtEndian&gt; - Endian Conversion Functions</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The &lt;QtEndian&gt; header provides functions to convert between little and big endian representations of numbers.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QtEndian</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>&lt;QtEndian&gt; is part of <db:simplelist><db:member>funclists</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="function-documentation">
<db:title>Function Documentation</db:title>
<db:section xml:id="qFromBigEndian">
<db:title>[since 4.3] quint8 qFromBigEndian(const uchar *<db:emphasis>src</db:emphasis>)</db:title>
<db:para>Reads a big-endian number from memory location <db:code role="parameter">src</db:code> and returns the number in the host byte order representation. On CPU architectures where the host byte order is little-endian (such as x86) this will swap the byte order; otherwise it will just read from <db:code role="parameter">src</db:code>.</db:para>
<db:note>
<db:para>Template type T can either be a qint16, qint32 or qint64. Other types of integers, e.g., qlong, are not applicable.</db:para>
</db:note>
<db:para>There are no data alignment constraints for <db:code role="parameter">src</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtendian.xml#qFromLittleEndian">qFromLittleEndian</db:link>()</db:member>
<db:member><db:link xlink:href="">qToBigEndian()</db:link></db:member>
<db:member><db:link xlink:href="">qToLittleEndian()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qFromLittleEndian">
<db:title>[since 4.3] quint8 qFromLittleEndian(const uchar *<db:emphasis>src</db:emphasis>)</db:title>
<db:para>Reads a little-endian number from memory location <db:code role="parameter">src</db:code> and returns the number in the host byte order representation. On CPU architectures where the host byte order is big-endian (such as PowerPC) this will swap the byte order; otherwise it will just read from <db:code role="parameter">src</db:code>.</db:para>
<db:note>
<db:para>Template type T can either be a qint16, qint32 or qint64. Other types of integers, e.g., qlong, are not applicable.</db:para>
</db:note>
<db:para>There are no data alignment constraints for <db:code role="parameter">src</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.3.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtendian.xml#qFromBigEndian">qFromBigEndian</db:link>()</db:member>
<db:member><db:link xlink:href="">qToBigEndian()</db:link></db:member>
<db:member><db:link xlink:href="">qToLittleEndian()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
