<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QML Poster Example</db:title>
<db:productname>QtNfc</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt NFC Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A QML example about reading and displaying NFC Data Exchange Format (NDEF) messages.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/legal
**
** This file is part of the QtNfc module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of Digia Plc and its Subsidiary(-ies) nor the names
**     of its contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.0
import QtNfc 5.2

Rectangle {
    id: root
    width: 640
    height: 360

    NearField {
        id: nearfield

        filter: [
            NdefFilter { type: &quot;U&quot;; typeNameFormat: NearFiledRecord.NfcRtd; minimum: 1; maximum: 1 },
            NdefFilter { type: &quot;T&quot;; typeNameFormat: NearFiledRecord.NfcRtd; minimum: 1 }
        ]

        onMessageRecordsChanged: {
            posterText.text = &quot;&quot;;
            posterImage.source = &quot;&quot;;
            posterUrl.text = &quot;&quot;;

            var currentLocaleMatch = NdefTextRecord.LocaleMatchedNone;
            var i;
            for (i = 0; i &lt; messageRecords.length; ++i) {
                if (messageRecords[i].recordType == &quot;urn:nfc:wkt:T&quot;) {
                    if (messageRecords[i].localeMatch &gt; currentLocaleMatch) {
                        currentLocaleMatch = messageRecords[i].localeMatch;
                        posterText.text = messageRecords[i].text;
                    }
                } else if (messageRecords[i].recordType == &quot;urn:nfc:wkt:U&quot;) {
                    posterUrl.text = messageRecords[i].uri;
                } else if (messageRecords[i].recordType.substr(0, 19) == &quot;urn:nfc:mime:image/&quot;) {
                    posterImage.source = messageRecords[i].uri;
                }
            }

            root.state = &quot;show&quot;;
        }
    }

    Text {
        id: touchText
        anchors.horizontalCenter: parent.horizontalCenter
        anchors.verticalCenter: parent.verticalCenter
        text: &quot;Touch an NFC tag&quot;
        font.bold: true
        font.pointSize: 18
    }

    Text {
        id: posterText
        anchors.horizontalCenter: parent.right
        anchors.horizontalCenterOffset: - parent.width / 4
        y: -height
        font.bold: true
        font.pointSize: 18
    }

    Image {
        id: posterImage
        scale: Image.PreserveAspectFit
        height:  parent.height * 0.8
        width: height * sourceSize.width / sourceSize.height
        anchors.verticalCenter: parent.verticalCenter
        x: -width
        smooth: true
    }

    Text {
        id: posterUrl
        anchors.horizontalCenter: parent.right
        anchors.horizontalCenterOffset: - parent.width / 4
        y: parent.height
        font.italic: true
        font.pointSize: 14
    }

    MouseArea {
        id: openMouseArea
        anchors.fill: parent
        enabled: root.state == &quot;show&quot;

        onClicked: Qt.openUrlExternally(posterUrl.text)

        Rectangle {
            id: testTouch
            width: 50
            height: 50
            color: &quot;lightsteelblue&quot;
            opacity: 0.3
            anchors.top:  parent.top
            anchors.right: close.left
            anchors.rightMargin: 10

            MouseArea {
                id: touchMouseArea
                anchors.fill: parent

                onClicked: {
                    if (root.state == &quot;&quot;) {
                        root.state = &quot;show&quot;;
                    } else {
                        root.state = &quot;&quot;;
                    }
                }
            }
        }

        Rectangle {
            id: close
            width: 50
            height: 50
            color: &quot;black&quot;
            radius: 0
            opacity: 0.3
            anchors.top: parent.top
            anchors.topMargin: 0
            anchors.right: parent.right
            anchors.rightMargin: 0

            MouseArea {
                id: closeMouseArea
                anchors.fill: parent

                onClicked: Qt.quit();
            }
        }
    }

    states: [
        State {
            name: &quot;show&quot;
            PropertyChanges { target: posterText; y: root.height / 3 }
            PropertyChanges { target: posterUrl; y: 2 * root.height / 3 }
            PropertyChanges { target: posterImage; x: root.width / 20 }
            PropertyChanges { target: touchText; opacity: 0 }
        }
    ]

    transitions: [
        Transition {
            PropertyAnimation { easing.type: Easing.OutQuad; properties: &quot;x,y&quot; }
            PropertyAnimation { property: &quot;opacity&quot;; duration: 125 }
        }
    ]
}

</db:programlisting>
</db:article>
