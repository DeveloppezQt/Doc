<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QBarSet Class</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qbarset-qtcharts.xml">QBarSet</db:link> class represents one set of bars in a bar chart.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QBarSet</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtcharts-barset.xml" xlink:role="">BarSet</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A bar set contains one data value for each category. The first value of a set is assumed to belong to the first category, the second one to the second category, and so on. If the set has fewer values than there are categories, the missing values are assumed to be located at the end of the set. For missing values in the middle of a set, the numerical value of zero is used. Labels for zero value sets are not shown.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractbarseries-qtcharts.xml">QAbstractBarSeries</db:link></db:member>
<db:member><db:link xlink:href="qbarseries-qtcharts.xml">QBarSeries</db:link></db:member>
<db:member><db:link xlink:href="qstackedbarseries-qtcharts.xml">QStackedBarSeries</db:link></db:member>
<db:member><db:link xlink:href="qpercentbarseries-qtcharts.xml">QPercentBarSeries</db:link></db:member>
<db:member><db:link xlink:href="qhorizontalbarseries-qtcharts.xml">QHorizontalBarSeries</db:link></db:member>
<db:member><db:link xlink:href="qhorizontalstackedbarseries-qtcharts.xml">QHorizontalStackedBarSeries</db:link></db:member>
<db:member><db:link xlink:href="qhorizontalpercentbarseries-qtcharts.xml">QHorizontalPercentBarSeries</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="borderColor-prop">
<db:title>borderColor : QColor</db:title>
<db:para>This property holds the line (pen) color of the bar set.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#borderColor">borderColor</db:link></db:emphasis>()</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#setBorderColor">setBorderColor</db:link></db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#borderColorChanged">borderColorChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="brush-prop">
<db:title>brush : QBrush</db:title>
<db:para>This property holds the brush used to fill the bars in the bar set.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#brush">brush</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#setBrush">setBrush</db:link></db:emphasis>(const <db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> &amp;<db:emphasis>brush</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#brushChanged">brushChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="color-prop">
<db:title>color : QColor</db:title>
<db:para>This property holds the fill (brush) color of the bar set.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#color">color</db:link></db:emphasis>()</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#setColor">setColor</db:link></db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#colorChanged">colorChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="label-prop">
<db:title>label : QString</db:title>
<db:para>This property holds the label of the bar set.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#label">label</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#setLabel">setLabel</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis>label</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#labelChanged">labelChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelBrush-prop">
<db:title>labelBrush : QBrush</db:title>
<db:para>This property holds the brush used to draw the bar set's label.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#labelBrush">labelBrush</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#setLabelBrush">setLabelBrush</db:link></db:emphasis>(const <db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> &amp;<db:emphasis>brush</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#labelBrushChanged">labelBrushChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelColor-prop">
<db:title>labelColor : QColor</db:title>
<db:para>This property holds the text (label) color of the bar set.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#labelColor">labelColor</db:link></db:emphasis>()</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#setLabelColor">setLabelColor</db:link></db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#labelColorChanged">labelColorChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qcolor.xml">QColor</db:link></db:type> <db:emphasis>color</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelFont-prop">
<db:title>labelFont : QFont</db:title>
<db:para>This property holds the font used to draw the bar set's label.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#labelFont">labelFont</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#setLabelFont">setLabelFont</db:link></db:emphasis>(const <db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> &amp;<db:emphasis>font</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#labelFontChanged">labelFontChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="pen-prop">
<db:title>pen : QPen</db:title>
<db:para>This property holds the pen used to draw the lines of bars in the bar set.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#pen">pen</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#setPen">setPen</db:link></db:emphasis>(const <db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> &amp;<db:emphasis>pen</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qbarset-qtcharts.xml#penChanged">penChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QBarSet">
<db:title>[explicit] QBarSet::QBarSet(const QString <db:emphasis>label</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a bar set with the label <db:code role="parameter">label</db:code> and the parent <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QBarSet">
<db:title>[virtual noexcept] QBarSet::~QBarSet()</db:title>
<db:para>Removes the bar set.</db:para>
</db:section>
<db:section xml:id="append">
<db:title>void QBarSet::append(const QList&lt;qreal&gt; &amp;<db:emphasis>values</db:emphasis>)</db:title>
<db:para>Appends the list of real values specified by <db:code role="parameter">values</db:code> to the end of the bar set.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member>append()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="append-1">
<db:title>void QBarSet::append(const qreal <db:emphasis>value</db:emphasis>)</db:title>
<db:para>Appends the new value specified by <db:code role="parameter">value</db:code> to the end of the bar set.</db:para>
</db:section>
<db:section xml:id="at">
<db:title>qreal QBarSet::at(const int <db:emphasis>index</db:emphasis>) const</db:title>
<db:para>Returns the value specified by <db:code role="parameter">index</db:code> from the bar set. If the index is out of bounds, 0.0 is returned.</db:para>
</db:section>
<db:section xml:id="borderColor">
<db:title>QColor QBarSet::borderColor()</db:title>
<db:para>Returns the line color for the bar set.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qbarset-qtcharts.xml#borderColor-prop">borderColor</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setBorderColor">setBorderColor</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="borderColorChanged">
<db:title>void QBarSet::borderColorChanged(QColor <db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the line (pen) color of the bar set changes to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qbarset-qtcharts.xml#borderColor-prop">borderColor</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="brush">
<db:title>QBrush QBarSet::brush() const</db:title>
<db:para>Returns the brush used to fill the bars in the bar set.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qbarset-qtcharts.xml#brush-prop">brush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setBrush">setBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="brushChanged">
<db:title>void QBarSet::brushChanged()</db:title>
<db:para>This signal is emitted when the brush used to draw the bar set changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qbarset-qtcharts.xml#brush-prop">brush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#brush">brush</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clicked">
<db:title>void QBarSet::clicked(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user clicks the bar specified by <db:code role="parameter">index</db:code> in a bar set.</db:para>
</db:section>
<db:section xml:id="color">
<db:title>QColor QBarSet::color()</db:title>
<db:para>Returns the fill color for the bar set.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qbarset-qtcharts.xml#color-prop">color</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setColor">setColor</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="colorChanged">
<db:title>void QBarSet::colorChanged(QColor <db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the fill (brush) color of the bar set changes to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qbarset-qtcharts.xml#color-prop">color</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="count">
<db:title>int QBarSet::count() const</db:title>
<db:para>Returns the number of values in a bar set.</db:para>
</db:section>
<db:section xml:id="deselectAllBars">
<db:title>[since 6.2] void QBarSet::deselectAllBars()</db:title>
<db:para>Deselects all bars in the series.</db:para>
<db:note>
<db:para>Emits QBarSet::selectedBarsChanged.</db:para>
</db:note>
<db:para>This function was introduced in Qt 6.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setBarSelected">setBarSelected</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="deselectBar">
<db:title>[since 6.2] void QBarSet::deselectBar(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Deselects the bar at <db:code role="parameter">index</db:code>.</db:para>
<db:note>
<db:para>Emits QBarSet::selectedBarsChanged.</db:para>
</db:note>
<db:para>This function was introduced in Qt 6.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setBarSelected">setBarSelected</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="deselectBars">
<db:title>[since 6.2] void QBarSet::deselectBars(const QList&lt;int&gt; &amp;<db:emphasis>indexes</db:emphasis>)</db:title>
<db:para>Marks multiple bars passed in an <db:code role="parameter">indexes</db:code> list as deselected.</db:para>
<db:note>
<db:para>Emits QBarSet::selectedBarsChanged.</db:para>
</db:note>
<db:para>This function was introduced in Qt 6.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setBarSelected">setBarSelected</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="doubleClicked">
<db:title>void QBarSet::doubleClicked(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user double-clicks the bar specified by <db:code role="parameter">index</db:code> in a bar set.</db:para>
</db:section>
<db:section xml:id="hovered">
<db:title>void QBarSet::hovered(bool <db:emphasis>status</db:emphasis>, int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted when a mouse is hovered over the bar specified by <db:code role="parameter">index</db:code> in a bar set. When the mouse moves over the bar, <db:code role="parameter">status</db:code> turns <db:code>true</db:code>, and when the mouse moves away again, it turns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="insert">
<db:title>void QBarSet::insert(const int <db:emphasis>index</db:emphasis>, const qreal <db:emphasis>value</db:emphasis>)</db:title>
<db:para>Inserts <db:code role="parameter">value</db:code> in the position specified by <db:code role="parameter">index</db:code>. The values following the inserted value are moved up one position.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#remove">remove</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isBarSelected">
<db:title>[since 6.2] bool QBarSet::isBarSelected(int <db:emphasis>index</db:emphasis>) const</db:title>
<db:para>Returns <db:code>true</db:code> if the bar at the given <db:code role="parameter">index</db:code> is among selected bars and <db:code>false</db:code> otherwise.</db:para>
<db:note>
<db:para>Selected bars are drawn using the selected color if it was specified using <db:link xlink:href="qbarset-qtcharts.xml#setSelectedColor">QBarSet::setSelectedColor</db:link>.</db:para>
</db:note>
<db:para>This function was introduced in Qt 6.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#selectedBars">selectedBars</db:link>()</db:member>
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setBarSelected">setBarSelected</db:link>()</db:member>
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setSelectedColor">setSelectedColor</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="label">
<db:title>QString QBarSet::label() const</db:title>
<db:para>Returns the label of the bar set.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qbarset-qtcharts.xml#label-prop">label</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setLabel">setLabel</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelBrush">
<db:title>QBrush QBarSet::labelBrush() const</db:title>
<db:para>Returns the brush used to draw values on top of this bar set.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qbarset-qtcharts.xml#labelBrush-prop">labelBrush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setLabelBrush">setLabelBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelBrushChanged">
<db:title>void QBarSet::labelBrushChanged()</db:title>
<db:para>This signal is emitted when the brush used to draw the bar set's label changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qbarset-qtcharts.xml#labelBrush-prop">labelBrush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#labelBrush">labelBrush</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelChanged">
<db:title>void QBarSet::labelChanged()</db:title>
<db:para>This signal is emitted when the label of the bar set changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qbarset-qtcharts.xml#label-prop">label</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#label">label</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelColor">
<db:title>QColor QBarSet::labelColor()</db:title>
<db:para>Returns the text color for the bar set.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qbarset-qtcharts.xml#labelColor-prop">labelColor</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setLabelColor">setLabelColor</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelColorChanged">
<db:title>void QBarSet::labelColorChanged(QColor <db:emphasis>color</db:emphasis>)</db:title>
<db:para>This signal is emitted when the text (label) color of the bar set changes to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qbarset-qtcharts.xml#labelColor-prop">labelColor</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="labelFont">
<db:title>QFont QBarSet::labelFont() const</db:title>
<db:para>Returns the pen used to draw values on top of this bar set.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qbarset-qtcharts.xml#labelFont-prop">labelFont</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setLabelFont">setLabelFont</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelFontChanged">
<db:title>void QBarSet::labelFontChanged()</db:title>
<db:para>This signal is emitted when the font of the bar set's label changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qbarset-qtcharts.xml#labelFont-prop">labelFont</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#labelBrush">labelBrush</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pen">
<db:title>QPen QBarSet::pen() const</db:title>
<db:para>Returns the pen used to draw the lines in the bar set.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qbarset-qtcharts.xml#pen-prop">pen</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setPen">setPen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="penChanged">
<db:title>void QBarSet::penChanged()</db:title>
<db:para>This signal is emitted when the pen used to draw the bar set changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qbarset-qtcharts.xml#pen-prop">pen</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#pen">pen</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pressed">
<db:title>void QBarSet::pressed(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user clicks the bar specified by <db:code role="parameter">index</db:code> in a bar set and holds down the mouse button.</db:para>
</db:section>
<db:section xml:id="released">
<db:title>void QBarSet::released(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user releases the mouse press on the bar specified by <db:code role="parameter">index</db:code> in a bar set.</db:para>
</db:section>
<db:section xml:id="remove">
<db:title>void QBarSet::remove(const int <db:emphasis>index</db:emphasis>, const int <db:emphasis>count</db:emphasis> = 1)</db:title>
<db:para>Removes the number of values specified by <db:code role="parameter">count</db:code> from the bar set starting with the value specified by <db:code role="parameter">index</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#insert">insert</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="replace">
<db:title>void QBarSet::replace(const int <db:emphasis>index</db:emphasis>, const qreal <db:emphasis>value</db:emphasis>)</db:title>
<db:para>Adds the value specified by <db:code role="parameter">value</db:code> to the bar set at the position specified by <db:code role="parameter">index</db:code>.</db:para>
</db:section>
<db:section xml:id="selectAllBars">
<db:title>[since 6.2] void QBarSet::selectAllBars()</db:title>
<db:para>Marks all bars in the series as selected.</db:para>
<db:note>
<db:para>Emits QBarSet::selectedBarsChanged.</db:para>
</db:note>
<db:para>This function was introduced in Qt 6.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setBarSelected">setBarSelected</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectBar">
<db:title>[since 6.2] void QBarSet::selectBar(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>Marks the bar at <db:code role="parameter">index</db:code> as selected.</db:para>
<db:note>
<db:para>Emits QBarSet::selectedBarsChanged.</db:para>
</db:note>
<db:para>This function was introduced in Qt 6.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setBarSelected">setBarSelected</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectBars">
<db:title>[since 6.2] void QBarSet::selectBars(const QList&lt;int&gt; &amp;<db:emphasis>indexes</db:emphasis>)</db:title>
<db:para>Marks multiple bars passed in an <db:code role="parameter">indexes</db:code> list as selected.</db:para>
<db:note>
<db:para>Emits QBarSet::selectedBarsChanged.</db:para>
</db:note>
<db:para>This function was introduced in Qt 6.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setBarSelected">setBarSelected</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectedBars">
<db:title>[since 6.2] QList&lt;int&gt; QBarSet::selectedBars() const</db:title>
<db:para>Returns a list of bars marked as selected.</db:para>
<db:para>This function was introduced in Qt 6.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setBarSelected">setBarSelected</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectedColor">
<db:title>[since 6.2] QColor QBarSet::selectedColor() const</db:title>
<db:para>Returns the color of the selected bars.</db:para>
<db:para>This is the fill (brush) color of bars marked as selected. If not specified, value of <db:link xlink:href="qbarset-qtcharts.xml#color">QBarSet::color</db:link> is used as default.</db:para>
<db:para>This function was introduced in Qt 6.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setSelectedColor">setSelectedColor</db:link>()</db:member>
<db:member><db:link xlink:href="qbarset-qtcharts.xml#color">color</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBarSelected">
<db:title>[since 6.2] void QBarSet::setBarSelected(int <db:emphasis>index</db:emphasis>, bool <db:emphasis>selected</db:emphasis>)</db:title>
<db:para>Marks the bar at <db:code role="parameter">index</db:code> as either selected or deselected as specified by <db:code role="parameter">selected</db:code>.</db:para>
<db:note>
<db:para>Selected bars are drawn using the selected color if it was specified. Emits QBarSet::selectedBarsChanged.</db:para>
</db:note>
<db:para>This function was introduced in Qt 6.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#isBarSelected">isBarSelected</db:link>()</db:member>
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setSelectedColor">setSelectedColor</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBorderColor">
<db:title>void QBarSet::setBorderColor(QColor <db:emphasis>color</db:emphasis>)</db:title>
<db:para>Sets the line color for the bar set to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qbarset-qtcharts.xml#borderColor-prop">borderColor</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#borderColor">borderColor</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBrush">
<db:title>void QBarSet::setBrush(const QBrush &amp;<db:emphasis>brush</db:emphasis>)</db:title>
<db:para>Sets the brush used to fill the bars in the bar set to <db:code role="parameter">brush</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qbarset-qtcharts.xml#brush-prop">brush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#brush">brush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setColor">
<db:title>void QBarSet::setColor(QColor <db:emphasis>color</db:emphasis>)</db:title>
<db:para>Sets the fill color for the bar set to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qbarset-qtcharts.xml#color-prop">color</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#color">color</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLabel">
<db:title>void QBarSet::setLabel(const QString <db:emphasis>label</db:emphasis>)</db:title>
<db:para>Sets <db:code role="parameter">label</db:code> as the new label for the bar set.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qbarset-qtcharts.xml#label-prop">label</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#label">label</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLabelBrush">
<db:title>void QBarSet::setLabelBrush(const QBrush &amp;<db:emphasis>brush</db:emphasis>)</db:title>
<db:para>Sets the brush used to draw values on top of this bar set to <db:code role="parameter">brush</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qbarset-qtcharts.xml#labelBrush-prop">labelBrush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#labelBrush">labelBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLabelColor">
<db:title>void QBarSet::setLabelColor(QColor <db:emphasis>color</db:emphasis>)</db:title>
<db:para>Sets the text color for the bar set to <db:code role="parameter">color</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qbarset-qtcharts.xml#labelColor-prop">labelColor</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#labelColor">labelColor</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLabelFont">
<db:title>void QBarSet::setLabelFont(const QFont &amp;<db:emphasis>font</db:emphasis>)</db:title>
<db:para>Sets the font used to draw values on top of this bar set to <db:code role="parameter">font</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qbarset-qtcharts.xml#labelFont-prop">labelFont</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#labelFont">labelFont</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPen">
<db:title>void QBarSet::setPen(const QPen &amp;<db:emphasis>pen</db:emphasis>)</db:title>
<db:para>Sets the pen used to draw the lines in the bar set to <db:code role="parameter">pen</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qbarset-qtcharts.xml#pen-prop">pen</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#pen">pen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSelectedColor">
<db:title>[since 6.2] void QBarSet::setSelectedColor(const QColor &amp;<db:emphasis>color</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">color</db:code> of the selected bars.</db:para>
<db:para>This function was introduced in Qt 6.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#selectedColor">selectedColor</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sum">
<db:title>qreal QBarSet::sum() const</db:title>
<db:para>Returns the sum of all values in the bar set.</db:para>
</db:section>
<db:section xml:id="toggleSelection">
<db:title>[since 6.2] void QBarSet::toggleSelection(const QList&lt;int&gt; &amp;<db:emphasis>indexes</db:emphasis>)</db:title>
<db:para>Changes the selection state of bars at the given <db:code role="parameter">indexes</db:code> to the opposite one.</db:para>
<db:note>
<db:para>Emits QBarSet::selectedBarsChanged.</db:para>
</db:note>
<db:para>This function was introduced in Qt 6.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#setBarSelected">setBarSelected</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="valueChanged">
<db:title>void QBarSet::valueChanged(int <db:emphasis>index</db:emphasis>)</db:title>
<db:para>This signal is emitted when the value at the position specified by <db:code role="parameter">index</db:code> is modified.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#at">at</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="valuesAdded">
<db:title>void QBarSet::valuesAdded(int <db:emphasis>index</db:emphasis>, int <db:emphasis>count</db:emphasis>)</db:title>
<db:para>This signal is emitted when new values are added to the bar set. <db:code role="parameter">index</db:code> indicates the position of the first inserted value, and <db:code role="parameter">count</db:code> is the number of inserted values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#append">append</db:link>()</db:member>
<db:member><db:link xlink:href="qbarset-qtcharts.xml#insert">insert</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="valuesRemoved">
<db:title>void QBarSet::valuesRemoved(int <db:emphasis>index</db:emphasis>, int <db:emphasis>count</db:emphasis>)</db:title>
<db:para>This signal is emitted when values are removed from the bar set. <db:code role="parameter">index</db:code> indicates the position of the first removed value, and <db:code role="parameter">count</db:code> is the number of removed values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#remove">remove</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-lt-lt">
<db:title>QBarSet &amp;QBarSet::operator&lt;&lt;(const qreal &amp;<db:emphasis>value</db:emphasis>)</db:title>
<db:para>A convenience operator for appending the real value specified by <db:code role="parameter">value</db:code> to the end of the bar set.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qbarset-qtcharts.xml#append">append</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-5b-5d">
<db:title>qreal QBarSet::operator[](const int <db:emphasis>index</db:emphasis>) const</db:title>
<db:para>Returns the value of the bar set specified by <db:code role="parameter">index</db:code>. If the index is out of bounds, 0.0 is returned.</db:para>
</db:section>
</db:section>
</db:article>
