<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>FontLoader QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Allows fonts to be loaded by URL.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>FontLoader is part of <db:simplelist><db:member>qtquick-text-utility</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtquick-fontloader.xml">FontLoader</db:link> type is used to load fonts by URL.</db:para>
<db:para>The <db:link xlink:href="qml-qtquick-fontloader.xml#status-prop">status</db:link> indicates when the font has been loaded, which is useful for fonts loaded from remote sources.</db:para>
<db:para>For example:</db:para>
<db:programlisting language="qml">import QtQuick 2.0

Column {
    FontLoader { id: webFont; source: &quot;http://www.mysite.com/myfont.ttf&quot; }

    Text { text: &quot;Fancy font&quot;; font: webFont.font }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-text-example.xml#fonts">Qt Quick Examples - Text Fonts</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="font-prop">
<db:title>[since 6.0] font : font</db:title>
<db:fieldsynopsis>
<db:type>font</db:type>
<db:varname>font</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a default query for the loaded font.</db:para>
<db:para>You can use this to select the font if other properties than just the family name are needed to disambiguate. You can either specify the font using individual properties:</db:para>
<db:programlisting language="qml">Item {
    width: 200; height: 50

    FontLoader {
        id: webFont
        source: &quot;http://www.mysite.com/myfont.ttf&quot;
    }
    Text {
        text: &quot;Fancy font&quot;
        font.family: webFont.font.family
        font.weight: webFont.font.weight
        font.styleName: webFont.font.styleName
        font.pixelSize: 24
    }
}
</db:programlisting>
<db:para>Or you can set the full font query directly:</db:para>
<db:programlisting language="qml">Item {
    width: 200; height: 50

    FontLoader {
        id: webFont
        source: &quot;http://www.mysite.com/myfont.ttf&quot;
    }
    Text {
        text: &quot;Fancy font&quot;
        font: webFont.font
    }
}
</db:programlisting>
<db:para>In this case, the default font query will be used with no modifications (so font size, for instance, will be the system default).</db:para>
<db:para>This property was introduced in Qt 6.0.</db:para>
</db:section>
<db:section xml:id="name-prop">
<db:title>[read-only] name : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>name</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the name of the font family. It is set automatically when a font is loaded using the <db:link xlink:href="qml-qtquick-fontloader.xml#source-prop">source</db:link> property.</db:para>
<db:para>This is equivalent to the family property of the <db:link xlink:href="qml-qtquick-fontloader.xml">FontLoader</db:link>'s <db:link xlink:href="qml-qtquick-fontloader.xml#font-prop">font</db:link> property.</db:para>
<db:para>Use this to set the font.family property of a Text item.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="qml">Item {
    width: 200; height: 50

    FontLoader {
        id: webFont
        source: &quot;http://www.mysite.com/myfont.ttf&quot;
    }
    Text {
        text: &quot;Fancy font&quot;
        font.family: webFont.name
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="source-prop">
<db:title>source : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>source</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The URL of the font to load.</db:para>
</db:section>
<db:section xml:id="status-prop">
<db:title>status : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>status</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the status of font loading. It can be one of:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>FontLoader.Null</db:para>
</db:td>
<db:td>
<db:para>no font has been set</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FontLoader.Ready</db:para>
</db:td>
<db:td>
<db:para>the font has been loaded</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FontLoader.Loading</db:para>
</db:td>
<db:td>
<db:para>the font is currently being loaded</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FontLoader.Error</db:para>
</db:td>
<db:td>
<db:para>an error occurred while loading the font</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Use this status to provide an update or respond to the status change in some way. For example, you could:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Trigger a state change:</db:para>
<db:programlisting language="qml">State { name: 'loaded'; when: loader.status == FontLoader.Ready }
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>Implement an onStatusChanged signal handler:</db:para>
<db:programlisting language="qml">FontLoader {
    id: loader
    onStatusChanged: if (loader.status == FontLoader.Ready) console.log('Loaded')
}
</db:programlisting>
</db:listitem>
<db:listitem>
<db:para>Bind to the status value:</db:para>
<db:programlisting language="qml">Text { text: loader.status == FontLoader.Ready ? 'Loaded' : 'Not loaded' }
</db:programlisting>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:article>
