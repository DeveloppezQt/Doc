<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QStyleOptionTab Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link> class is used to describe the parameters for drawing a tab bar.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QStyleOptionTab</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qstyleoption.xml" xlink:role="class">QStyleOption</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link> class is used for drawing several built-in Qt widgets including <db:link xlink:href="qtabbar.xml">QTabBar</db:link> and the panel for <db:link xlink:href="qtabwidget.xml">QTabWidget</db:link>.</db:para>
<db:para>An instance of the <db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link> class has <db:link xlink:href="qstyleoption.xml#type-var">type</db:link> <db:link xlink:href="qstyleoption.xml#OptionType-enum">SO_Tab</db:link> and <db:link xlink:href="qstyleoption.xml#version-var">version</db:link> 3. The type is used internally by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link>, its subclasses, and <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>() to determine the type of style option. In general you do not need to worry about this unless you want to create your own <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass and your own styles. The version is used by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclasses to implement extensions without breaking compatibility. If you use <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>(), you normally do not need to check it.</db:para>
<db:para>For performance reasons, there are few member functions and the access to the member variables is direct (i.e., using the <db:code>.</db:code> or <db:code>-&gt;</db:code> operator). This makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="CornerWidget-enum">
<db:title>enum QStyleOptionTab::CornerWidget</db:title>
<db:bridgehead renderas="sect2">flags QStyleOptionTab::CornerWidgets</db:bridgehead>
<db:para>These flags indicate the corner widgets in a tab.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::NoCornerWidgets</db:code></db:para>
</db:td>
<db:td><db:code>0x00</db:code></db:td>
<db:td>
<db:para>There are no corner widgets</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::LeftCornerWidget</db:code></db:para>
</db:td>
<db:td><db:code>0x01</db:code></db:td>
<db:td>
<db:para>Left corner widget</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::RightCornerWidget</db:code></db:para>
</db:td>
<db:td><db:code>0x02</db:code></db:td>
<db:td>
<db:para>Right corner widget</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>CornerWidgets</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;CornerWidget&gt;. </db:code>It stores an OR combination of <db:code>CornerWidget</db:code> values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptiontab.xml#cornerWidgets-var">cornerWidgets</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="SelectedPosition-enum">
<db:title>enum QStyleOptionTab::SelectedPosition</db:title>
<db:para>This enum describes the position of the selected tab. Some styles need to draw a tab differently depending on whether or not it is adjacent to the selected tab.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::NotAdjacent</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The tab is not adjacent to a selected tab (or is the selected tab).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::NextIsSelected</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The next tab (typically the tab on the right) is selected.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::PreviousIsSelected</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The previous tab (typically the tab on the left) is selected.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptiontab.xml#selectedPosition-var">selectedPosition</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="StyleOptionType-enum">
<db:title>enum QStyleOptionTab::StyleOptionType</db:title>
<db:para>This enum is used to hold information about the type of the style option, and is defined for each <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::Type</db:code></db:para>
</db:td>
<db:td><db:code>SO_Tab</db:code></db:td>
<db:td>
<db:para>The type of style option provided (<db:link xlink:href="qstyleoption.xml#OptionType-enum">SO_Tab</db:link> for this class).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The type is used internally by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link>, its subclasses, and <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>() to determine the type of style option. In general you do not need to worry about this unless you want to create your own <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass and your own styles.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptiontab.xml#StyleOptionVersion-enum">StyleOptionVersion</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="StyleOptionVersion-enum">
<db:title>enum QStyleOptionTab::StyleOptionVersion</db:title>
<db:para>This enum is used to hold information about the version of the style option, and is defined for each <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::Version</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>3</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The version is used by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclasses to implement extensions without breaking compatibility. If you use <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>(), you normally do not need to check it.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptiontab.xml#StyleOptionType-enum">StyleOptionType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="TabFeature-enum">
<db:title>enum QStyleOptionTab::TabFeature</db:title>
<db:bridgehead renderas="sect2">flags QStyleOptionTab::TabFeatures</db:bridgehead>
<db:para>Describes the various features that a tab button can have.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::None</db:code></db:para>
</db:td>
<db:td><db:code>0x00</db:code></db:td>
<db:td>
<db:para>A normal tab button.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::HasFrame</db:code></db:para>
</db:td>
<db:td><db:code>0x01</db:code></db:td>
<db:td>
<db:para>The tab button is positioned on a tab frame</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>TabFeatures</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;TabFeature&gt;. </db:code>It stores an OR combination of <db:code>TabFeature</db:code> values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptiontoolbar.xml#features-var">QStyleOptionToolBar::features</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="TabPosition-enum">
<db:title>enum QStyleOptionTab::TabPosition</db:title>
<db:para>This enum describes the position of the tab.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::Beginning</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The tab is the first tab in the tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::Middle</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The tab is neither the first nor the last tab in the tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::End</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The tab is the last tab in the tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::OnlyOneTab</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>The tab is both the first and the last tab in the tab bar.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:emphasis>::Moving (since Qt 6.6)</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>The tab is moving by mouse drag or animation.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptiontab.xml#position-var">position</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QStyleOptionTab">
<db:title>QStyleOptionTab::QStyleOptionTab()</db:title>
<db:para>Constructs a <db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link> object, initializing the members variables to their default values.</db:para>
</db:section>
<db:section xml:id="QStyleOptionTab-1">
<db:title>QStyleOptionTab::QStyleOptionTab(const QStyleOptionTab &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a copy of the <db:code role="parameter">other</db:code> style option.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-variable-documentation">
<db:title>Member Variable Documentation</db:title>
<db:section xml:id="cornerWidgets-var">
<db:title>QStyleOptionTab::CornerWidgets QStyleOptionTab::cornerWidgets</db:title>
<db:para>This variable holds an OR combination of <db:link xlink:href="qstyleoptiontab.xml#CornerWidget-enum">CornerWidget</db:link> values indicating the corner widgets of the tab bar</db:para>
<db:para>The default value is <db:link xlink:href="qstyleoptiontab.xml#CornerWidget-enum">NoCornerWidgets</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoptiontab.xml#CornerWidget-enum">CornerWidget</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="documentMode-var">
<db:title>bool QStyleOptionTab::documentMode</db:title>
<db:para>This variable holds whether the tabbar is in document mode.</db:para>
<db:para>The default value is false;</db:para>
</db:section>
<db:section xml:id="icon-var">
<db:title>QIcon QStyleOptionTab::icon</db:title>
<db:para>This variable holds the icon for the tab</db:para>
<db:para>The default value is an empty icon, i.e. an icon with neither a pixmap nor a filename.</db:para>
</db:section>
<db:section xml:id="iconSize-var">
<db:title>QSize QStyleOptionTab::iconSize</db:title>
<db:para>This variable holds the size for the icons</db:para>
<db:para>The default value is <db:link xlink:href="qsize.xml">QSize</db:link>(-1, -1), i.e. an invalid size; use <db:link xlink:href="qstyle.xml#pixelMetric">QStyle::pixelMetric</db:link>() to find the default icon size for tab bars.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabbar.xml#iconSize-prop">QTabBar::iconSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="leftButtonSize-var">
<db:title>QSize QStyleOptionTab::leftButtonSize</db:title>
<db:para>This variable holds the size for the left widget on the tab.</db:para>
<db:para>The default value is <db:link xlink:href="qsize.xml">QSize</db:link>(-1, -1), i.e. an invalid size;</db:para>
</db:section>
<db:section xml:id="position-var">
<db:title>QStyleOptionTab::TabPosition QStyleOptionTab::position</db:title>
<db:para>This variable holds the position of the tab in the tab bar</db:para>
<db:para>The default value is <db:link xlink:href="qstyleoptiontab.xml#TabPosition-enum">Beginning</db:link>, i.e. the tab is the first tab in the tab bar.</db:para>
</db:section>
<db:section xml:id="rightButtonSize-var">
<db:title>QSize QStyleOptionTab::rightButtonSize</db:title>
<db:para>This variable holds the size for the right widget on the tab.</db:para>
<db:para>The default value is <db:link xlink:href="qsize.xml">QSize</db:link>(-1, -1), i.e. an invalid size;</db:para>
</db:section>
<db:section xml:id="row-var">
<db:title>int QStyleOptionTab::row</db:title>
<db:para>This variable holds which row the tab is currently in</db:para>
<db:para>The default value is 0, indicating the front row. Currently this property can only be 0.</db:para>
</db:section>
<db:section xml:id="selectedPosition-var">
<db:title>QStyleOptionTab::SelectedPosition QStyleOptionTab::selectedPosition</db:title>
<db:para>This variable holds the position of the selected tab in relation to this tab</db:para>
<db:para>The default value is <db:link xlink:href="qstyleoptiontab.xml#SelectedPosition-enum">NotAdjacent</db:link>, i.e. the tab is not adjacent to a selected tab nor is it the selected tab.</db:para>
</db:section>
<db:section xml:id="shape-var">
<db:title>QTabBar::Shape QStyleOptionTab::shape</db:title>
<db:para>This variable holds the tab shape used to draw the tab; by default <db:link xlink:href="qtabbar.xml#Shape-enum">QTabBar::RoundedNorth</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtabbar.xml#Shape-enum">QTabBar::Shape</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="tabIndex-var">
<db:title>int QStyleOptionTab::tabIndex</db:title>
<db:para>This variable holds the index for the tab being represented.</db:para>
<db:para>The default value is -1, i.e. a tab not on a tabbar;</db:para>
</db:section>
<db:section xml:id="text-var">
<db:title>QString QStyleOptionTab::text</db:title>
<db:para>This variable holds the text of the tab</db:para>
<db:para>The default value is an empty string.</db:para>
</db:section>
</db:section>
</db:article>
