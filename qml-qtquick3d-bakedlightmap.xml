<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>BakedLightmap QML Type</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Specifies baked lightmap settings for a model.</db:para>
<db:para>This type was introduced in Qt 6.4.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick3D</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.4</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qml-qtquick3d-bakedlightmap.xml">BakedLightmap</db:link> object can be used to enable:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>persistently storing the baked lightmap data - during baking, or</db:para>
</db:listitem>
<db:listitem>
<db:para>loading the previously generated and stored lightmaps - at run time.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>A Model with <db:link xlink:href="qml-qtquick3d-model.xml#usedInBakedLighting-prop">usedInBakedLighting</db:link> set to true is considered to be part of the raytraced scene when baking lightmaps, meaning the model's geometry and material contribute to direct and indirect lighting. This on its own does not however enable generating, including full calculation of bounced indirect lighting, and finally saving a lightmap for the model. To do that, the model also needs to be associated with an <db:link xlink:href="qml-qtquick3d-bakedlightmap.xml#enabled-prop">enabled</db:link> <db:link xlink:href="qml-qtquick3d-bakedlightmap.xml">BakedLightmap</db:link> object with a unique key set.</db:para>
<db:para>When running in normal mode, the same <db:link xlink:href="qml-qtquick3d-bakedlightmap.xml">BakedLightmap</db:link> object indicates that the Model has lightmap data, and that the engine should attempt to load this data (based on the unique key) and use it when rendering.</db:para>
<db:para>For more information on how to bake lightmaps, see the <db:link xlink:href="qml-qtquick3d-lightmapper.xml">Lightmapper</db:link> documentation.</db:para>
<db:note>
<db:para>As of Qt 6.4, lightmap baking is in an early technical preview state. Changes to features, quality, and API are likely happen in future releases.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-lightmapper.xml">Lightmapper</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-model.xml#usedInBakedLighting-prop">Model::usedInBakedLighting</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="enabled-prop">
<db:title>enabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>enabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>When false, the lightmap generated for the model is not stored during lightmap baking, even though <db:link xlink:href="qml-qtquick3d-bakedlightmap.xml#key-prop">key</db:link> is set to a non-empty value.</db:para>
<db:para>The default value is true.</db:para>
</db:section>
<db:section xml:id="key-prop">
<db:title>key : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>key</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>When non-empty and <db:link xlink:href="qml-qtquick3d-bakedlightmap.xml#enabled-prop">enabled</db:link> is true, the lightmap generated for the model is stored persistently during lightmap baking. The value should be a unique string that is fit to be included in the name of a file in the filesystem. No other Model in the scene must use the same key.</db:para>
<db:para>The default value is empty.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-bakedlightmap.xml#loadPrefix-prop">loadPrefix</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="loadPrefix-prop">
<db:title>loadPrefix : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>loadPrefix</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>When non-empty, the value is prepended as a path to the value of <db:link xlink:href="qml-qtquick3d-bakedlightmap.xml#key-prop">key</db:link> when loading the lightmap for the Model. This allows shipping the generated lightmaps in different location than they were written to, for example as embedded resources via the Qt resource system.</db:para>
<db:para>For example, the following enables lightmap generation for a static model, using a unique key for identifying the lightmap data between baking and real runs of the application. Once baking is performed, the generated file can be listed in the application's CMake project as a resource under the <db:code>/lightmaps</db:code> PREFIX, letting the build process pick up the file and include it in the executable.</db:para>
<db:programlisting language="qml">Model {
    source: &quot;model.mesh&quot;
    y: 10
    bakedLightmap: BakedLightmap {
        key: &quot;model34156&quot;
        loadPrefix: &quot;qrc:/lightmaps&quot;
        // will attempt to load from :/lightmaps/qlm_model34156.exr at run time
    }
}
</db:programlisting>
<db:para>The default value is empty.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-bakedlightmap.xml#key-prop">key</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
