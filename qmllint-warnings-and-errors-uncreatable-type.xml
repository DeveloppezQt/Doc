<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Uncreatable type</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Qml Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>[uncreatable-type] Types that can't be created.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>This warning category is spelled [uncreatable-type] by qmllint.</db:para>
<db:section xml:id="namespace-must-start-with-an-upper-case-letter">
<db:title>Namespace must start with an upper case letter</db:title>
<db:section xml:id="what-happened">
<db:title>What happened?</db:title>
<db:para>You used a QML object from a lower-case namespace.</db:para>
</db:section>
<db:section xml:id="why-is-this-bad">
<db:title>Why is this bad?</db:title>
<db:para>The QML language forbids lower-case namespaces.</db:para>
</db:section>
<db:section xml:id="example">
<db:title>Example</db:title>
<db:programlisting language="qml">import QtQuick as quick

quick.Item { ... }
</db:programlisting>
<db:para>To fix the warning, rename the namespace to start with a capital letter:</db:para>
<db:programlisting language="qml">import QtQuick as Quick

Quick.Item { ... }
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="singleton-type-is-not-creatable">
<db:title>Singleton type is not creatable</db:title>
<db:section xml:id="singleton-type-is-not-creatable-what-happened-5">
<db:title>What happened?</db:title>
<db:para>You tried to instantiate a QML object from a <db:link xlink:href="qml-singleton.xml">singleton type</db:link>.</db:para>
</db:section>
<db:section xml:id="singleton-type-is-not-creatable-why-is-this-bad-6">
<db:title>Why is this bad?</db:title>
<db:para>The QML language forbids instantiations of singletons.</db:para>
</db:section>
<db:section xml:id="singleton-type-is-not-creatable-example-7">
<db:title>Example</db:title>
<db:programlisting language="qml">import QtQuick

Item {
    Qt { // note: Qt is a singleton type
        id: qt
    }

    property string someProperty: qt.uiLanguage
}
</db:programlisting>
<db:para>To fix the warning, use the singleton directly without instantiating it:</db:para>
<db:programlisting language="qml">import QtQuick

Item {
    property string someProperty: Qt.uiLanguage
}
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="type-is-not-creatable">
<db:title>Type is not creatable</db:title>
<db:section xml:id="type-is-not-creatable-what-happened-9">
<db:title>What happened?</db:title>
<db:para>You tried to instantiate a QML object from an <db:link xlink:href="qqmlintegration-h.xml#QML_UNCREATABLE">uncreatable type</db:link>.</db:para>
</db:section>
<db:section xml:id="type-is-not-creatable-why-is-this-bad-10">
<db:title>Why is this bad?</db:title>
<db:para>Uncreatable types are specifically marked to forbid instantiations. You might be misusing a type that should only be used as an attached type or as an interface.</db:para>
</db:section>
<db:section xml:id="type-is-not-creatable-example-11">
<db:title>Example</db:title>
<db:section xml:id="attached-type-misuse">
<db:title>Attached type misuse</db:title>
<db:programlisting language="qml">import QtQuick

Item {
    Keys {
        onPressed: function (key) { ... }
    }
}
</db:programlisting>
<db:para>To fix the warning, use the Keys attached type instead of instantiating it:</db:para>
<db:programlisting language="qml">import QtQuick

Item {
    Keys.onPressed: function (key) { ... }
}
</db:programlisting>
</db:section>
<db:section xml:id="interface-misuse">
<db:title>Interface misuse</db:title>
<db:programlisting language="qml">import QtQuick

Item {
    property PointerHandler myHandler: PointerHandler {}
}
</db:programlisting>
<db:para>To fix the warning, use a more specific derived type like TapHandler:</db:para>
<db:programlisting language="qml">import QtQuick

Item {
    property PointerHandler myHandler: TapHandler {}
}
</db:programlisting>
</db:section>
</db:section>
</db:section>
</db:article>
