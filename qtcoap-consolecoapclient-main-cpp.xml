<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Console CoAP Client Example</db:title>
<db:productname>QtCoap</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt CoAP Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Creating a simple console application that communicates with a CoAP server.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">// Copyright (C) 2017 Witekio.
// Copyright (C) 2018 The Qt Company Ltd.
// SPDX-License-Identifier: LicenseRef-Qt-Commercial OR GPL-3.0-only

#include &quot;coaphandler.h&quot;

#include &amp;lt;QCoreApplication&amp;gt;
#include &amp;lt;QCommandLineParser&amp;gt;
#include &amp;lt;QUrl&amp;gt;

int main(int argc, char *argv[])
{
    QCoreApplication a(argc, argv);

    QCommandLineParser parser;
    parser.setApplicationDescription(&quot;Qt CoAP test application&quot;);
    parser.addHelpOption();
    parser.addPositionalArgument(&quot;url&quot;,
                                 &quot;The targeted coap resource URL, e.g. 'coap://10.10.10.10/myresource'&quot;);
    parser.addOption({&quot;get&quot;, &quot;Use GET method for the request. This is the default method&quot;});
    parser.addOption({&quot;post&quot;, &quot;Use POST method for the request&quot;});
    parser.addOption({&quot;put&quot;, &quot;Use PUT method for the request&quot;});
    parser.addOption({&quot;delete&quot;, &quot;Use DELETE method for the request&quot;});
    parser.addOption({&quot;observe&quot;, &quot;Observe a resource&quot;});
    parser.addOption({&quot;discover&quot;, &quot;Discover available resources&quot;});

    parser.process(a);

    if (parser.positionalArguments().isEmpty()) {
        qWarning(&quot;Please provide an url for the request&quot;);
        parser.showHelp(1);
    }

    QUrl url = parser.positionalArguments().first();
    if (!url.isValid()) {
        qWarning(&quot;The url provided is not valid.&quot;);
        parser.showHelp(1);
    }

    CoapHandler handler;
    if (parser.isSet(&quot;get&quot;))        handler.runGet(url);
    if (parser.isSet(&quot;post&quot;))       handler.runPost(url);
    if (parser.isSet(&quot;put&quot;))        handler.runPut(url);
    if (parser.isSet(&quot;delete&quot;))     handler.runDelete(url);
    if (parser.isSet(&quot;observe&quot;))    handler.runObserve(url);
    if (parser.isSet(&quot;discover&quot;))   handler.runDiscover(url);

    return a.exec();
}

</db:programlisting>
</db:article>
