<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QMetalRoughMaterial Class</db:title>
<db:subtitle>Qt3DExtras::QMetalRoughMaterial</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.15.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qt3dextras-qmetalroughmaterial.xml">QMetalRoughMaterial</db:link> provides a default implementation of PBR lighting.</db:para>
<db:para>This class was introduced in Qt 5.9.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QMetalRoughMaterial</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.9</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dextras</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dextras-qtexturedmetalroughmaterial.xml" xlink:role="class">Qt3DExtras::QTexturedMetalRoughMaterial</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-extras-metalroughmaterial.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qmaterial.xml" xlink:role="class">Qt3DRender::QMaterial</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dextras-qtexturedmetalroughmaterial.xml" xlink:role="class">Qt3DExtras::QTexturedMetalRoughMaterial</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QMetalRoughMaterial is part of <db:simplelist><db:member>qt3d-extras-materials</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This material uses an effect with a single render pass approach and performs per fragment lighting. Techniques are provided for OpenGL 3 and OpenGL ES 3.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="ambientOcclusion-prop">
<db:title>ambientOcclusion : QVariant</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVariant</db:type>
<db:varname>ambientOcclusion</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">ambientOcclusion</db:synopsisinfo>
<db:synopsisinfo role="setter">setAmbientOcclusion</db:synopsisinfo>
<db:synopsisinfo role="notifier">ambientOcclusionChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current ambient occlusion map texture of the material. This can only be a texture, otherwise it is ignored. By default this map is not set.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> <db:emphasis role="bold">ambientOcclusion</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setAmbientOcclusion</db:emphasis>(const <db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> &amp;<db:emphasis>ambientOcclusion</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">ambientOcclusionChanged</db:emphasis>(const <db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> &amp;<db:emphasis>ambientOcclusion</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="baseColor-prop">
<db:title>baseColor : QVariant</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVariant</db:type>
<db:varname>baseColor</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">baseColor</db:synopsisinfo>
<db:synopsisinfo role="setter">setBaseColor</db:synopsisinfo>
<db:synopsisinfo role="notifier">baseColorChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current base color of the material. This can be either a plain color value or a texture. By default the value of this property is &quot;grey&quot;.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> <db:emphasis role="bold">baseColor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setBaseColor</db:emphasis>(const <db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> &amp;<db:emphasis>baseColor</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">baseColorChanged</db:emphasis>(const <db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> &amp;<db:emphasis>baseColor</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="metalness-prop">
<db:title>metalness : QVariant</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVariant</db:type>
<db:varname>metalness</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">metalness</db:synopsisinfo>
<db:synopsisinfo role="setter">setMetalness</db:synopsisinfo>
<db:synopsisinfo role="notifier">metalnessChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current metalness level of the material, as a value between 0 (purely dielectric, the default) and 1 (purely metallic). This can be either a plain uniform value or a texture. By default the value of this property is 0.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> <db:emphasis role="bold">metalness</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMetalness</db:emphasis>(const <db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> &amp;<db:emphasis>metalness</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">metalnessChanged</db:emphasis>(const <db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> &amp;<db:emphasis>metalness</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="normal-prop">
<db:title>normal : QVariant</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVariant</db:type>
<db:varname>normal</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">normal</db:synopsisinfo>
<db:synopsisinfo role="setter">setNormal</db:synopsisinfo>
<db:synopsisinfo role="notifier">normalChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current normal map texture of the material. This can only be a texture, otherwise it is ignored. By default this map is not set.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> <db:emphasis role="bold">normal</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setNormal</db:emphasis>(const <db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> &amp;<db:emphasis>normal</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">normalChanged</db:emphasis>(const <db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> &amp;<db:emphasis>normal</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="roughness-prop">
<db:title>roughness : QVariant</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QVariant</db:type>
<db:varname>roughness</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">roughness</db:synopsisinfo>
<db:synopsisinfo role="setter">setRoughness</db:synopsisinfo>
<db:synopsisinfo role="notifier">roughnessChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current roughness level of the material. This can be either a plain uniform value or a texture. By default the value of this property is 0.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> <db:emphasis role="bold">roughness</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setRoughness</db:emphasis>(const <db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> &amp;<db:emphasis>roughness</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">roughnessChanged</db:emphasis>(const <db:type><db:link xlink:href="qvariant.xml">QVariant</db:link></db:type> &amp;<db:emphasis>roughness</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="textureScale-prop">
<db:title>textureScale : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>textureScale</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">textureScale</db:synopsisinfo>
<db:synopsisinfo role="setter">setTextureScale</db:synopsisinfo>
<db:synopsisinfo role="notifier">textureScaleChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current texture scale. It is applied as a multiplier to texture coordinates at render time. Defaults to 1.0.</db:para>
<db:para>When used in conjunction with QTextureWrapMode::Repeat, textureScale provides a simple way to tile a texture across a surface. For example, a texture scale of <db:code>4.0</db:code> would result in 16 (4x4) tiles.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">textureScale</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTextureScale</db:emphasis>(<db:type>float</db:type> <db:emphasis>textureScale</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">textureScaleChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>textureScale</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QMetalRoughMaterial">
<db:title>[explicit] QMetalRoughMaterial::QMetalRoughMaterial(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QMetalRoughMaterial</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QNode *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QMetalRoughMaterial(Qt3DCore::QNode *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qt3dextras-qmetalroughmaterial.xml">QMetalRoughMaterial</db:link> instance with parent object <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QMetalRoughMaterial">
<db:title>[virtual] QMetalRoughMaterial::~QMetalRoughMaterial()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QMetalRoughMaterial</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QMetalRoughMaterial()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the <db:link xlink:href="qt3dextras-qmetalroughmaterial.xml">QMetalRoughMaterial</db:link> instance.</db:para>
</db:section>
</db:section>
</db:article>
