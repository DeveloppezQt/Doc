<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QGraphicsItemAnimation Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgraphicsitemanimation.xml">QGraphicsItemAnimation</db:link> class provides simple animation support for <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>.</db:para>
<db:para><db:emphasis role="bold">This class is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
<db:para>This class was introduced in Qt 4.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGraphicsItemAnimation</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGraphicsItemAnimation is part of <db:simplelist><db:member>graphicsview-api</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para><db:emphasis role="bold">This class is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qgraphicsitemanimation.xml">QGraphicsItemAnimation</db:link> class animates a <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link>. You can schedule changes to the item's transformation matrix at specified steps. The <db:link xlink:href="qgraphicsitemanimation.xml">QGraphicsItemAnimation</db:link> class has a current step value. When this value changes the transformations scheduled at that step are performed. The current step of the animation is set with the <db:code>setStep()</db:code> function.</db:para>
<db:para><db:link xlink:href="qgraphicsitemanimation.xml">QGraphicsItemAnimation</db:link> will do a simple linear interpolation between the nearest adjacent scheduled changes to calculate the matrix. For instance, if you set the position of an item at values 0.0 and 1.0, the animation will show the item moving in a straight line between these positions. The same is true for scaling and rotation.</db:para>
<db:para>It is usual to use the class with a <db:link xlink:href="qtimeline.xml">QTimeLine</db:link>. The timeline's <db:link xlink:href="qtimeline.xml#valueChanged">valueChanged</db:link>() signal is then connected to the <db:code>setStep()</db:code> slot. For example, you can set up an item for rotation by calling <db:code>setRotationAt()</db:code> for different step values. The animations timeline is set with the <db:link xlink:href="qgraphicsitemanimation.xml#setTimeLine">setTimeLine</db:link>() function.</db:para>
<db:para>An example animation with a timeline follows:</db:para>
<db:programlisting language="cpp">    QGraphicsItem *ball = new QGraphicsEllipseItem(0, 0, 20, 20);

    QTimeLine *timer = new QTimeLine(5000);
    timer-&gt;setFrameRange(0, 100);

    QGraphicsItemAnimation *animation = new QGraphicsItemAnimation;
    animation-&gt;setItem(ball);
    animation-&gt;setTimeLine(timer);

    for (int i = 0; i &lt; 200; ++i)
        animation-&gt;setPosAt(i / 200.0, QPointF(i, i));

    QGraphicsScene *scene = new QGraphicsScene();
    scene-&gt;setSceneRect(0, 0, 250, 250);
    scene-&gt;addItem(ball);

    QGraphicsView *view = new QGraphicsView(scene);
    view-&gt;show();

    timer-&gt;start();
</db:programlisting>
<db:para>Note that steps lie between 0.0 and 1.0. It may be necessary to use <db:link xlink:href="">setUpdateInterval()</db:link>. The default update interval is 40 ms. A scheduled transformation cannot be removed when set, so scheduling several transformations of the same kind (e.g., rotations) at the same step is not recommended.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtimeline.xml">QTimeLine</db:link></db:member>
<db:member><db:link xlink:href="graphicsview.xml">Graphics View Framework</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGraphicsItemAnimation">
<db:title>QGraphicsItemAnimation::QGraphicsItemAnimation(QObject *<db:emphasis>parent</db:emphasis> = 0)</db:title>
<db:para>Constructs an animation object with the given <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QGraphicsItemAnimation">
<db:title>[virtual noexcept] QGraphicsItemAnimation::~QGraphicsItemAnimation()</db:title>
<db:para>Destroys the animation object.</db:para>
</db:section>
<db:section xml:id="afterAnimationStep">
<db:title>[virtual protected] void QGraphicsItemAnimation::afterAnimationStep(qreal <db:emphasis>step</db:emphasis>)</db:title>
<db:para>This method is meant to be overridden in subclasses that need to execute additional code after a new step has taken place. The animation <db:code role="parameter">step</db:code> is provided for use in cases where the action depends on its value.</db:para>
</db:section>
<db:section xml:id="beforeAnimationStep">
<db:title>[virtual protected] void QGraphicsItemAnimation::beforeAnimationStep(qreal <db:emphasis>step</db:emphasis>)</db:title>
<db:para>This method is meant to be overridden by subclassed that needs to execute additional code before a new step takes place. The animation <db:code role="parameter">step</db:code> is provided for use in cases where the action depends on its value.</db:para>
</db:section>
<db:section xml:id="clear">
<db:title>void QGraphicsItemAnimation::clear()</db:title>
<db:para>Clears the scheduled transformations used for the animation, but retains the item and timeline.</db:para>
</db:section>
<db:section xml:id="horizontalScaleAt">
<db:title>qreal QGraphicsItemAnimation::horizontalScaleAt(qreal <db:emphasis>step</db:emphasis>) const</db:title>
<db:para>Returns the horizontal scale for the item at the specified <db:code role="parameter">step</db:code> value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setScaleAt">setScaleAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="horizontalShearAt">
<db:title>qreal QGraphicsItemAnimation::horizontalShearAt(qreal <db:emphasis>step</db:emphasis>) const</db:title>
<db:para>Returns the horizontal shear for the item at the specified <db:code role="parameter">step</db:code> value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setShearAt">setShearAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="item">
<db:title>QGraphicsItem *QGraphicsItemAnimation::item() const</db:title>
<db:para>Returns the item on which the animation object operates.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setItem">setItem</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="matrixAt">
<db:title>QMatrix QGraphicsItemAnimation::matrixAt(qreal <db:emphasis>step</db:emphasis>) const</db:title>
<db:para>Returns the matrix used to transform the item at the specified <db:code role="parameter">step</db:code> value.</db:para>
</db:section>
<db:section xml:id="posAt">
<db:title>QPointF QGraphicsItemAnimation::posAt(qreal <db:emphasis>step</db:emphasis>) const</db:title>
<db:para>Returns the position of the item at the given <db:code role="parameter">step</db:code> value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setPosAt">setPosAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="posList">
<db:title>QList&lt;QPair&lt;qreal, QPointF&gt;&gt; QGraphicsItemAnimation::posList() const</db:title>
<db:para>Returns all explicitly inserted positions.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#posAt">posAt</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setPosAt">setPosAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rotationAt">
<db:title>qreal QGraphicsItemAnimation::rotationAt(qreal <db:emphasis>step</db:emphasis>) const</db:title>
<db:para>Returns the angle at which the item is rotated at the specified <db:code role="parameter">step</db:code> value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setRotationAt">setRotationAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rotationList">
<db:title>QList&lt;QPair&lt;qreal, qreal&gt;&gt; QGraphicsItemAnimation::rotationList() const</db:title>
<db:para>Returns all explicitly inserted rotations.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#rotationAt">rotationAt</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setRotationAt">setRotationAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="scaleList">
<db:title>QList&lt;QPair&lt;qreal, QPointF&gt;&gt; QGraphicsItemAnimation::scaleList() const</db:title>
<db:para>Returns all explicitly inserted scales.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#verticalScaleAt">verticalScaleAt</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#horizontalScaleAt">horizontalScaleAt</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setScaleAt">setScaleAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setItem">
<db:title>void QGraphicsItemAnimation::setItem(QGraphicsItem *<db:emphasis>item</db:emphasis>)</db:title>
<db:para>Sets the specified <db:code role="parameter">item</db:code> to be used in the animation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#item">item</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPosAt">
<db:title>void QGraphicsItemAnimation::setPosAt(qreal <db:emphasis>step</db:emphasis>, const QPointF &amp;<db:emphasis>point</db:emphasis>)</db:title>
<db:para>Sets the position of the item at the given <db:code role="parameter">step</db:code> value to the <db:code role="parameter">point</db:code> specified.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#posAt">posAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setRotationAt">
<db:title>void QGraphicsItemAnimation::setRotationAt(qreal <db:emphasis>step</db:emphasis>, qreal <db:emphasis>angle</db:emphasis>)</db:title>
<db:para>Sets the rotation of the item at the given <db:code role="parameter">step</db:code> value to the <db:code role="parameter">angle</db:code> specified.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#rotationAt">rotationAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setScaleAt">
<db:title>void QGraphicsItemAnimation::setScaleAt(qreal <db:emphasis>step</db:emphasis>, qreal <db:emphasis>sx</db:emphasis>, qreal <db:emphasis>sy</db:emphasis>)</db:title>
<db:para>Sets the scale of the item at the given <db:code role="parameter">step</db:code> value using the horizontal and vertical scale factors specified by <db:code role="parameter">sx</db:code> and <db:code role="parameter">sy</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#verticalScaleAt">verticalScaleAt</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#horizontalScaleAt">horizontalScaleAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setShearAt">
<db:title>void QGraphicsItemAnimation::setShearAt(qreal <db:emphasis>step</db:emphasis>, qreal <db:emphasis>sh</db:emphasis>, qreal <db:emphasis>sv</db:emphasis>)</db:title>
<db:para>Sets the shear of the item at the given <db:code role="parameter">step</db:code> value using the horizontal and vertical shear factors specified by <db:code role="parameter">sh</db:code> and <db:code role="parameter">sv</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#verticalShearAt">verticalShearAt</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#horizontalShearAt">horizontalShearAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setStep">
<db:title>void QGraphicsItemAnimation::setStep(qreal <db:emphasis>step</db:emphasis>)</db:title>
<db:para>Sets the current <db:code role="parameter">step</db:code> value for the animation, causing the transformations scheduled at this step to be performed.</db:para>
</db:section>
<db:section xml:id="setTimeLine">
<db:title>void QGraphicsItemAnimation::setTimeLine(QTimeLine *<db:emphasis>timeLine</db:emphasis>)</db:title>
<db:para>Sets the timeline object used to control the rate of animation to the <db:code role="parameter">timeLine</db:code> specified.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#timeLine">timeLine</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTranslationAt">
<db:title>void QGraphicsItemAnimation::setTranslationAt(qreal <db:emphasis>step</db:emphasis>, qreal <db:emphasis>dx</db:emphasis>, qreal <db:emphasis>dy</db:emphasis>)</db:title>
<db:para>Sets the translation of the item at the given <db:code role="parameter">step</db:code> value using the horizontal and vertical coordinates specified by <db:code role="parameter">dx</db:code> and <db:code role="parameter">dy</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#xTranslationAt">xTranslationAt</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#yTranslationAt">yTranslationAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="shearList">
<db:title>QList&lt;QPair&lt;qreal, QPointF&gt;&gt; QGraphicsItemAnimation::shearList() const</db:title>
<db:para>Returns all explicitly inserted shears.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#verticalShearAt">verticalShearAt</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#horizontalShearAt">horizontalShearAt</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setShearAt">setShearAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="timeLine">
<db:title>QTimeLine *QGraphicsItemAnimation::timeLine() const</db:title>
<db:para>Returns the timeline object used to control the rate at which the animation occurs.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setTimeLine">setTimeLine</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="translationList">
<db:title>QList&lt;QPair&lt;qreal, QPointF&gt;&gt; QGraphicsItemAnimation::translationList() const</db:title>
<db:para>Returns all explicitly inserted translations.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#xTranslationAt">xTranslationAt</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#yTranslationAt">yTranslationAt</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setTranslationAt">setTranslationAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="verticalScaleAt">
<db:title>qreal QGraphicsItemAnimation::verticalScaleAt(qreal <db:emphasis>step</db:emphasis>) const</db:title>
<db:para>Returns the vertical scale for the item at the specified <db:code role="parameter">step</db:code> value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setScaleAt">setScaleAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="verticalShearAt">
<db:title>qreal QGraphicsItemAnimation::verticalShearAt(qreal <db:emphasis>step</db:emphasis>) const</db:title>
<db:para>Returns the vertical shear for the item at the specified <db:code role="parameter">step</db:code> value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setShearAt">setShearAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="xTranslationAt">
<db:title>qreal QGraphicsItemAnimation::xTranslationAt(qreal <db:emphasis>step</db:emphasis>) const</db:title>
<db:para>Returns the horizontal translation of the item at the specified <db:code role="parameter">step</db:code> value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setTranslationAt">setTranslationAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="yTranslationAt">
<db:title>qreal QGraphicsItemAnimation::yTranslationAt(qreal <db:emphasis>step</db:emphasis>) const</db:title>
<db:para>Returns the vertical translation of the item at the specified <db:code role="parameter">step</db:code> value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsitemanimation.xml#setTranslationAt">setTranslationAt</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for QGraphicsItemAnimation</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qgraphicsitemanimation.xml">QGraphicsItemAnimation</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-member-function-documentation">
<db:title>Obsolete Member Function Documentation</db:title>
<db:section xml:id="reset">
<db:title>[deprecated] void QGraphicsItemAnimation::reset()</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Resets the item to its starting position and transformation.</db:para>
<db:para>You can call <db:link xlink:href="qgraphicsitemanimation.xml#setStep">setStep</db:link>(0) instead.</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
