<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Simple Text Viewer Example</db:title>
<db:productname>QtAssistant</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Assistant Manual</db:titleabbrev>
<db:abstract>
<db:para>Using <db:emphasis>Qt Assistant</db:emphasis> as a customized help viewer for your application.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &lt;QtCore/QByteArray&gt;
#include &lt;QtCore/QDir&gt;
#include &lt;QtCore/QLibraryInfo&gt;
#include &lt;QtCore/QProcess&gt;

#include &lt;QtWidgets/QMessageBox&gt;

#include &quot;assistant.h&quot;

Assistant::Assistant()
    : proc(0)
{
}

Assistant::~Assistant()
{
    if (proc &amp;&amp; proc-&gt;state() == QProcess::Running) {
        proc-&gt;terminate();
        proc-&gt;waitForFinished(3000);
    }
    delete proc;
}

void Assistant::showDocumentation(const QString &amp;page)
{
    if (!startAssistant())
        return;

    QByteArray ba(&quot;SetSource &quot;);
    ba.append(&quot;qthelp://org.qt-project.examples.simpletextviewer/doc/&quot;);

    proc-&gt;write(ba + page.toLocal8Bit() + '\n');
}

bool Assistant::startAssistant()
{
    if (!proc)
        proc = new QProcess();

    if (proc-&gt;state() != QProcess::Running) {
        QString app = QLibraryInfo::location(QLibraryInfo::BinariesPath) + QDir::separator();
#if !defined(Q_OS_MAC)
        app += QLatin1String(&quot;assistant&quot;);
#else
        app += QLatin1String(&quot;Assistant.app/Contents/MacOS/Assistant&quot;);
#endif

        QStringList args;
        args &lt;&lt; QLatin1String(&quot;-collectionFile&quot;)
            &lt;&lt; QLibraryInfo::location(QLibraryInfo::ExamplesPath)
            + QLatin1String(&quot;/assistant/simpletextviewer/documentation/simpletextviewer.qhc&quot;)
            &lt;&lt; QLatin1String(&quot;-enableRemoteControl&quot;);

        proc-&gt;start(app, args);

        if (!proc-&gt;waitForStarted()) {
            QMessageBox::critical(0, QObject::tr(&quot;Simple Text Viewer&quot;),
                QObject::tr(&quot;Unable to launch Qt Assistant (%1)&quot;).arg(app));
            return false;
        }
    }
    return true;
}

</db:programlisting>
</db:article>
