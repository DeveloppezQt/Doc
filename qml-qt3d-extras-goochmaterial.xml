<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>GoochMaterial QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qml-qt3d-extras-goochmaterial.xml">GoochMaterial</db:link> provides a material that implements the Gooch shading model, popular in CAD and CAM applications.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Extras 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-material.xml">Material</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The Gooch lighting model uses both color and brightness to help show the curvature of 3D surfaces. This is often better than models such as Phong that rely purely upon changes in brightness. In situations such as in CAD and CAM applications where photorealism is not a goal, the Gooch shading model in conjunction with some kind of silhouette edge inking is a popular solution.</db:para>
<db:para>The Gooch lighting model is explained fully in the <db:link xlink:href="http://www.cs.northwestern.edu/~ago820/SIG98/abstract.html">original Gooch paper</db:link>. The Gooch model mixes a diffuse object color with a user-provided cool color and warm color to produce the end points of a color ramp that is used to shade the object based upon the cosine of the angle between the vector from the fragment to the light source and the fragment's normal vector. Optionally, a specular highlight can be added on top. The relative contributions to the cool and warm colors by the diffuse color are controlled by the alpha and beta properties respecitvely.</db:para>
<db:para>This material uses an effect with a single render pass approach and performs per fragment lighting. Techniques are provided for OpenGL 2, OpenGL 3 or above as well as OpenGL ES 2.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="alpha-prop">
<db:title>alpha : real</db:title>
<db:para>Holds the current alpha value. The start point of the color ramp used by the Gooch shader is calculated as {c = cool + alpha * diffuse}.</db:para>
</db:section>
<db:section xml:id="beta-prop">
<db:title>beta : real</db:title>
<db:para>Holds the current beta value. The start point of the color ramp used by the Gooch shader is calculated as {c = warm + beta * diffuse}.</db:para>
</db:section>
<db:section xml:id="coolColor-prop">
<db:title>coolColor : color</db:title>
<db:para>Holds the current coolColor color.</db:para>
</db:section>
<db:section xml:id="diffuse-prop">
<db:title>diffuse : color</db:title>
<db:para>Holds the current diffuse color.</db:para>
</db:section>
<db:section xml:id="shininess-prop">
<db:title>shininess : real</db:title>
<db:para>Holds the current shininess value. Higher values of shininess result in a smaller and brighter highlight.</db:para>
</db:section>
<db:section xml:id="specular-prop">
<db:title>specular : color</db:title>
<db:para>Holds the current specular color.</db:para>
</db:section>
<db:section xml:id="warmColor-prop">
<db:title>warmColor : color</db:title>
<db:para>Holds the current warmColor color.</db:para>
</db:section>
</db:section>
</db:article>
