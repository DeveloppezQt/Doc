<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Demo - Maroon in Trouble</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A Qt Quick game for touch devices that uses <db:link xlink:href="qml-qtquick-spritesequence.xml">SpriteSequence</db:link>, <db:link xlink:href="qml-qtquick-particles-particlesystem.xml">ParticleSystem</db:link>, Emitter, and Wander types to animate objects and the <db:link xlink:href="qml-qtmultimedia-soundeffect.xml">SoundEffect</db:link> type to play sound effects.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.0
import QtQuick.Particles 2.0
import &quot;logic.js&quot; as Logic

Item {
    id: gameOverScreen
    width: 320
    height: 400
    property GameCanvas gameCanvas

    Image {
        id: img
        source: &quot;gfx/text-gameover.png&quot;
        anchors.centerIn: parent
    }

    ParticleSystem {
        anchors.fill: parent
        ImageParticle {
            id: cloud
            source: &quot;gfx/cloud.png&quot;
            alphaVariation: 0.25
            opacity: 0.25
        }

        Wander {
            xVariance: 100;
            pace: 1;
        }

        Emitter {
            id: cloudLeft
            width: 160
            height: 160
            anchors.right: parent.left
            emitRate: 0.5
            lifeSpan: 12000
            velocity: PointDirection{ x: 64; xVariation: 2; yVariation: 2 }
            size: 160
        }

        Emitter {
            id: cloudRight
            width: 160
            height: 160
            anchors.left: parent.right
            emitRate: 0.5
            lifeSpan: 12000
            velocity: PointDirection{ x: -64; xVariation: 2; yVariation: 2 }
            size: 160
        }
    }

    Text {
        visible: gameCanvas != undefined
        text: &quot;You saved &quot; + gameCanvas.score + &quot; fishes!&quot;
        anchors.top: img.bottom
        anchors.topMargin: 12
        anchors.horizontalCenter: parent.horizontalCenter
        font.bold: true
        color: &quot;#000000&quot;
        opacity: 0.5
    }

    Image {
        source: &quot;gfx/button-play.png&quot;
        anchors.bottom: parent.bottom
        anchors.bottomMargin: 0
        MouseArea {
            anchors.fill: parent
            onClicked: gameCanvas.gameOver = false//This will actually trigger the state change in main.qml
        }
    }
}

</db:programlisting>
</db:article>
