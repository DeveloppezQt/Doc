<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>AudioEngine QML Type</db:title>
<db:productname>QtSpatialAudio</db:productname>
<db:edition>Technology Preview</db:edition>
<db:titleabbrev>Qt Spatial Audio Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qml-qtquick3d-spatialaudio-audioengine.xml">AudioEngine</db:link> manages sound objects inside a 3D scene.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick3D.SpatialAudio</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>AudioEngine is part of <db:simplelist><db:member>quick3d_spatialaudio</db:member><db:member>multimedia_audio_qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick3d-spatialaudio-audioengine.xml">AudioEngine</db:link> manages sound objects inside a 3D scene. You can add <db:link xlink:href="qml-qtquick3d-spatialaudio-spatialsound.xml">SpatialSound</db:link> objects to the scene to define sounds that happen at a specified location in 3D space. <db:link xlink:href="qml-qtquick3d-spatialaudio-ambientsound.xml">AmbientSound</db:link> allows you to add a stereo overlay (for example voice over or a sound track).</db:para>
<db:para>You can use <db:link xlink:href="qml-qtquick3d-spatialaudio-audiolistener.xml">AudioListener</db:link> to define the position of the person listening to the sound field relative to the sound sources. Sound sources will be less audible if the listener is further away from source. They will also get mapped to the corresponding loudspeakers depending on the direction between listener and source. In many cases, the <db:link xlink:href="qml-qtquick3d-spatialaudio-audiolistener.xml">AudioListener</db:link> object can simply be instantiated as a child object of the <db:link xlink:href="qtquick3d-qmlmodule.xml">QtQuick3D</db:link>.Camera object.</db:para>
<db:para>Create <db:link xlink:href="qml-qtquick3d-spatialaudio-audioroom.xml">AudioRoom</db:link> objcects to simulate the sound (reflections and reverb) of a room with certain dimensions and different types of walls.</db:para>
<db:para><db:link xlink:href="qml-qtquick3d-spatialaudio-audioengine.xml">AudioEngine</db:link> does offer a mode where Qt is using simulating the effects of the ear using head related impulse reponse functions (see also https://en.wikipedia.org/wiki/Sound_localization) to localize the sound in 3D space when using headphones and create a spatial audio effect through headphones.</db:para>
<db:para>As the rest of Qt Quick 3D, the audio engine uses a coordinate system that is in centimeters by default. The axes are defined so that positive x points to the right, positive y points up and positive z points backwards.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="masterVolume-prop">
<db:title>masterVolume : float</db:title>
<db:fieldsynopsis>
<db:type>float</db:type>
<db:varname>masterVolume</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets or returns overall volume being used to render the sound field.</db:para>
</db:section>
<db:section xml:id="outputDevice-prop">
<db:title>outputDevice : QtMultimedia.AudioDevice</db:title>
<db:fieldsynopsis>
<db:type>QtMultimedia.AudioDevice</db:type>
<db:varname>outputDevice</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets or returns the device that is being used for outputting the sound field.</db:para>
</db:section>
<db:section xml:id="outputMode-prop">
<db:title>outputMode : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>outputMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets or retrieves the current output mode of the engine.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Property value</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>Surround</db:para>
</db:td>
<db:td>
<db:para>Map the sounds to the loudspeaker configuration of the output device. This is normally a stereo or surround speaker setup.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Stereo</db:para>
</db:td>
<db:td>
<db:para>Map the sounds to the stereo loudspeaker configuration of the output device. This will ignore any additional speakers and only use the left and right channels to create a stero rendering of the sound field.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Headphone</db:para>
</db:td>
<db:td>
<db:para>Use Headphone spatialization to create a 3D audio effect when listening to the sound field through headphones.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
</db:article>
