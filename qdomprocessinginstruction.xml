<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QDomProcessingInstruction Class</db:title>
<db:productname>QtXml</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt XML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdomprocessinginstruction.xml">QDomProcessingInstruction</db:link> class represents an XML processing instruction.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDomProcessingInstruction</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Xml)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Xml)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qdomnode.xml" xlink:role="class">QDomNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QDomProcessingInstruction is part of <db:simplelist><db:member><db:link xlink:href="xml-tools.xml">XML Classes</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Processing instructions are used in XML to keep processor-specific information in the text of the document.</db:para>
<db:para>The XML declaration that appears at the top of an XML document, typically <db:code>&lt;?xml version='1.0' encoding='UTF-8'?&gt;</db:code>, is treated by QDom as a processing instruction. This is unfortunate, since the XML declaration is not a processing instruction; among other differences, it cannot be inserted into a document anywhere but on the first line.</db:para>
<db:para>Do not use this function to create an xml declaration, since although it has the same syntax as a processing instruction, it isn't, and might not be treated by QDom as such.</db:para>
<db:para>The content of the processing instruction is retrieved with <db:link xlink:href="qdomprocessinginstruction.xml#data">data</db:link>() and set with <db:link xlink:href="qdomprocessinginstruction.xml#setData">setData</db:link>(). The processing instruction's target is retrieved with <db:link xlink:href="qdomprocessinginstruction.xml#target">target</db:link>().</db:para>
<db:para>For further information about the Document Object Model see <db:link xlink:href="http://www.w3.org/TR/REC-DOM-Level-1/">Level 1</db:link> and <db:link xlink:href="http://www.w3.org/TR/DOM-Level-2-Core/">Level 2 Core</db:link>. For a more general introduction of the DOM implementation see the <db:link xlink:href="qdomdocument.xml">QDomDocument</db:link> documentation.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QDomProcessingInstruction">
<db:title>QDomProcessingInstruction::QDomProcessingInstruction()</db:title>
<db:constructorsynopsis>
<db:methodname>QDomProcessingInstruction</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QDomProcessingInstruction()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an empty processing instruction. Use <db:link xlink:href="qdomdocument.xml#createProcessingInstruction">QDomDocument::createProcessingInstruction</db:link>() to create a processing instruction with content.</db:para>
</db:section>
<db:section xml:id="QDomProcessingInstruction-1">
<db:title>QDomProcessingInstruction::QDomProcessingInstruction(const QDomProcessingInstruction &amp;<db:emphasis>x</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QDomProcessingInstruction</db:methodname>
<db:methodparam>
<db:type>const QDomProcessingInstruction &amp;</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QDomProcessingInstruction(const QDomProcessingInstruction &amp;x)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a copy of <db:code role="parameter">x</db:code>.</db:para>
<db:para>The data of the copy is shared (shallow copy): modifying one node will also change the other. If you want to make a deep copy, use <db:link xlink:href="qdomnode.xml#cloneNode">cloneNode</db:link>().</db:para>
</db:section>
<db:section xml:id="data">
<db:title>QString QDomProcessingInstruction::data() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>data</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString data() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the content of this processing instruction.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdomprocessinginstruction.xml#setData">setData</db:link>()</db:member>
<db:member><db:link xlink:href="qdomprocessinginstruction.xml#target">target</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="nodeType">
<db:title>QDomNode::NodeType QDomProcessingInstruction::nodeType() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QDomNode::NodeType</db:type>
<db:methodname>nodeType</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QDomNode::NodeType nodeType() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns ProcessingInstructionNode.</db:para>
</db:section>
<db:section xml:id="setData">
<db:title>void QDomProcessingInstruction::setData(const QString &amp;<db:emphasis>d</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setData</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>d</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setData(const QString &amp;d)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the data contained in the processing instruction to <db:code role="parameter">d</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdomprocessinginstruction.xml#data">data</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="target">
<db:title>QString QDomProcessingInstruction::target() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>target</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString target() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the target of this processing instruction.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdomprocessinginstruction.xml#data">data</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QDomProcessingInstruction &amp;QDomProcessingInstruction::operator=(const QDomProcessingInstruction &amp;<db:emphasis>x</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QDomProcessingInstruction &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QDomProcessingInstruction &amp;</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QDomProcessingInstruction &amp; operator=(const QDomProcessingInstruction &amp;x)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Assigns <db:code role="parameter">x</db:code> to this processing instruction.</db:para>
<db:para>The data of the copy is shared (shallow copy): modifying one node will also change the other. If you want to make a deep copy, use <db:link xlink:href="qdomnode.xml#cloneNode">cloneNode</db:link>().</db:para>
</db:section>
</db:section>
</db:article>
