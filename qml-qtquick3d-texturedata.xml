<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>TextureData QML Type</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Base type for custom texture data.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick3D</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick3d-helpers-proceduralskytexturedata.xml" xlink:role="">ProceduralSkyTextureData</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Object3D</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qquick3dtexturedata.xml">QQuick3DTextureData</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Custom texture data allows using application-generated texture data, that can possibly change dynamically as well. To use custom texture data set the <db:link xlink:href="qml-qtquick3d-texture.xml#textureData-prop">textureData</db:link> property of <db:link xlink:href="qml-qtquick3d-texture.xml">Texture</db:link> to reference a <db:link xlink:href="qml-qtquick3d-texturedata.xml">TextureData</db:link> object.</db:para>
<db:para>Custom Texture data is implemented in C++ by creating a <db:link xlink:href="qquick3dtexturedata.xml">QQuick3DTextureData</db:link> instance, often subclassing it. The <db:link xlink:href="qquick3dtexturedata.xml">QQuick3DTextureData</db:link> type is registered to QML under the name of <db:link xlink:href="qml-qtquick3d-texturedata.xml">TextureData</db:link>. Once the subclass is registered to QML, Texture objects can start referencing it.</db:para>
<db:para>An example of when to use this API is when there is a need to procedurally generate a texture at runtime rather than loading a static image from a file.</db:para>
<db:programlisting language="cpp">import MyCustomTexture 1.0

Model {
    source: &quot;#Cube&quot;
    materials: [
        DefaultMaterial {
            diffuseMap: diffuseMapCustomTexture
        }
    ]
}

Texture {
    id: diffuseMapCustomTexture
    textureData: MyCustomTextureData {

    }
}

</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-texture.xml">Texture</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:article>
