<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Radio QML Type</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>Access radio functionality from a QML application.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtMultimedia 5.12</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Item</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Radio is part of <db:simplelist><db:member>multimedia_qml</db:member><db:member>multimedia_radio_qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:programlisting language="qml">Rectangle {
    width: 320
    height: 480

    Radio {
        id: radio
        band: Radio.FM
    }

    MouseArea {
        x: 0; y: 0
        height: parent.height
        width: parent.width / 2

        onClicked: radio.scanDown()
    }

    MouseArea {
        x: parent.width / 2; y: 0
        height: parent.height
        width: parent.width / 2

        onClicked: radio.scanUp()
    }
}
</db:programlisting>
<db:para>You can use <db:code>Radio</db:code> to tune the radio and get information about the signal. You can also use the Radio to get information about tuning, for instance the frequency steps supported for tuning.</db:para>
<db:para>The corresponding <db:link xlink:href="qml-qtmultimedia-radiodata.xml">RadioData</db:link> gives RDS information about the current radio station. The best way to access the <db:link xlink:href="qml-qtmultimedia-radiodata.xml">RadioData</db:link> for the current Radio is to use the <db:code>radioData</db:code> property.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="radiooverview.xml">Radio Overview</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="antennaConnected-prop">
<db:title>[read-only] antennaConnected : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>antennaConnected</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property is true if there is an antenna connected. Otherwise it will be false.</db:para>
</db:section>
<db:section xml:id="availability-prop">
<db:title>[read-only] availability : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>availability</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns the availability state of the radio.</db:para>
<db:para>This is one of:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Value</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>Available</db:para>
</db:td>
<db:td>
<db:para>The radio is available to use</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Busy</db:para>
</db:td>
<db:td>
<db:para>The radio is usually available to use, but is currently busy. This can happen when some other process needs to use the audio hardware.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Unavailable</db:para>
</db:td>
<db:td>
<db:para>The radio is not available to use (there may be no radio hardware)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>ResourceMissing</db:para>
</db:td>
<db:td>
<db:para>There is one or more resources missing, so the radio cannot be used. It may be possible to try again at a later time. This can occur if there is no antenna connected - see the <db:link xlink:href="qml-qtmultimedia-radio.xml#antennaConnected-prop">antennaConnected</db:link> property as well.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="band-prop">
<db:title>band : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>band</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the frequency band used for the radio, which can be specified as any one of the values in the table below.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Value</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>AM</db:para>
</db:td>
<db:td>
<db:para>520 to 1610 kHz, 9 or 10kHz channel spacing, extended 1610 to 1710 kHz</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>FM</db:para>
</db:td>
<db:td>
<db:para>87.5 to 108.0 MHz, except Japan 76-90 MHz</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>SW</db:para>
</db:td>
<db:td>
<db:para>1.711 to 30.0 MHz, divided into 15 bands. 5kHz channel spacing</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>LW</db:para>
</db:td>
<db:td>
<db:para>148.5 to 283.5 kHz, 9kHz channel spacing (Europe, Africa, Asia)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>FM2</db:para>
</db:td>
<db:td>
<db:para>range not defined, used when area supports more than one FM range</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="frequency-prop">
<db:title>frequency : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>frequency</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Sets the frequency in Hertz that the radio is tuned to. The frequency must be within the frequency range for the current band, otherwise it will be changed to be within the frequency range.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-radio.xml#maximumFrequency-prop">maximumFrequency</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-radio.xml#minimumFrequency-prop">minimumFrequency</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="frequencyStep-prop">
<db:title>[read-only] frequencyStep : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>frequencyStep</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The number of Hertz for each step when tuning the radio manually. The value is for the current <db:link xlink:href="qml-qtmultimedia-radio.xml#band-prop">band</db:link>.</db:para>
</db:section>
<db:section xml:id="maximumFrequency-prop">
<db:title>[read-only] maximumFrequency : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>maximumFrequency</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The maximum frequency for the current <db:link xlink:href="qml-qtmultimedia-radio.xml#band-prop">band</db:link>.</db:para>
</db:section>
<db:section xml:id="minimumFrequency-prop">
<db:title>[read-only] minimumFrequency : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>minimumFrequency</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The minimum frequency for the current <db:link xlink:href="qml-qtmultimedia-radio.xml#band-prop">band</db:link>.</db:para>
</db:section>
<db:section xml:id="muted-prop">
<db:title>muted : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>muted</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property reflects whether the radio is muted or not.</db:para>
</db:section>
<db:section xml:id="searching-prop">
<db:title>[read-only] searching : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>searching</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property is true if the radio is currently searching for radio stations, for instance using the <db:link xlink:href="qml-qtmultimedia-radio.xml#scanUp-method">scanUp</db:link>, <db:link xlink:href="qml-qtmultimedia-radio.xml#scanDown-method">scanDown</db:link>, and <db:link xlink:href="qml-qtmultimedia-radio.xml#searchAllStations-method">searchAllStations</db:link> methods. Once the search completes, or if it is cancelled using <db:link xlink:href="qml-qtmultimedia-radio.xml#cancelScan-method">cancelScan</db:link>, this property will be false.</db:para>
</db:section>
<db:section xml:id="signalStrength-prop">
<db:title>[read-only] signalStrength : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>signalStrength</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The strength of the current radio signal as a percentage where 0% equals no signal, and 100% is a very good signal.</db:para>
</db:section>
<db:section xml:id="state-prop">
<db:title>[read-only] state : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>state</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the current state of the Radio.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Value</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>ActiveState</db:para>
</db:td>
<db:td>
<db:para>The radio is started and active</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>StoppedState</db:para>
</db:td>
<db:td>
<db:para>The radio is stopped</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-radio.xml#start-method">start</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-radio.xml#stop-method">stop</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="stereo-prop">
<db:title>[read-only] stereo : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>stereo</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the radio is receiving a stereo signal or not. If <db:link xlink:href="qml-qtmultimedia-radio.xml#stereoMode-prop">stereoMode</db:link> is set to ForceMono the value will always be false. Likewise, it will always be true if <db:link xlink:href="qml-qtmultimedia-radio.xml#stereoMode-prop">stereoMode</db:link> is set to ForceStereo.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-radio.xml#stereoMode-prop">stereoMode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="stereoMode-prop">
<db:title>stereoMode : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>stereoMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the stereo mode of the radio, which can be set to any one of the values in the table below.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Value</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>Auto</db:para>
</db:td>
<db:td>
<db:para>Uses stereo mode matching the station</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>ForceStereo</db:para>
</db:td>
<db:td>
<db:para>Forces the radio to play the station in stereo, converting the sound signal if necessary</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>ForceMono</db:para>
</db:td>
<db:td>
<db:para>Forces the radio to play the station in mono, converting the sound signal if necessary</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="volume-prop">
<db:title>volume : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>volume</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Set this property to control the volume of the radio. The valid range of the volume is from 0 to 100.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="stationFound-signal">
<db:title>stationFound(int <db:emphasis>frequency</db:emphasis>, string <db:emphasis>stationId</db:emphasis>)</db:title>
<db:para>This signal is emitted when a new radio station is found. This signal is only emitted if <db:link xlink:href="qml-qtmultimedia-radio.xml#searchAllStations-method">searchAllStations</db:link> is called with <db:code>SearchGetStationId</db:code>.</db:para>
<db:para>The <db:code role="parameter">frequency</db:code> is returned in Hertz, and the <db:code role="parameter">stationId</db:code> corresponds to the station Id in the <db:link xlink:href="qml-qtmultimedia-radiodata.xml">RadioData</db:link> for this radio station.</db:para>
<db:para>The corresponding handler is <db:code>onStationFound</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onStationFound</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="cancelScan-method">
<db:title>cancelScan()</db:title>
<db:para>Cancel the current scan. Will also cancel a search started with <db:link xlink:href="qml-qtmultimedia-radio.xml#searchAllStations-method">searchAllStations</db:link>.</db:para>
</db:section>
<db:section xml:id="scanDown-method">
<db:title>scanDown()</db:title>
<db:para>Searches backward in the frequency range for the current band.</db:para>
</db:section>
<db:section xml:id="scanUp-method">
<db:title>scanUp()</db:title>
<db:para>Searches forward in the frequency range for the current band.</db:para>
</db:section>
<db:section xml:id="searchAllStations-method">
<db:title>searchAllStations(enumeration <db:emphasis>searchMode</db:emphasis>)</db:title>
<db:para>Start searching the complete frequency range for the current band, and save all the radio stations found. The search mode can be either of the values described in the table below.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Value</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>SearchFast</db:para>
</db:td>
<db:td>
<db:para>Stores each radio station for later retrival and tuning</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>SearchGetStationId</db:para>
</db:td>
<db:td>
<db:para>Does the same as SearchFast, but also emits the station Id with the <db:link xlink:href="qml-qtmultimedia-radio.xml#stationFound-signal">stationFound</db:link> signal.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The snippet below uses <db:code>searchAllStations</db:code> with <db:code>SearchGetStationId</db:code> to receive all the radio stations in the current band, and store them in a <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>. The station Id is shown to the user and if the user presses a station, the radio is tuned to this station.</db:para>
<db:programlisting language="qml">Item {
    width: 640
    height: 360

    Radio {
        id: radio
        onStationFound: radioStations.append({&quot;frequency&quot;: frequency, &quot;stationId&quot;: stationId})
    }

    ListModel {
        id: radioStations
    }

    ListView {
        model: radioStations
        delegate: Rectangle {
                MouseArea {
                    anchors.fill: parent
                    onClicked: radio.frequency = frequency
                }

                Text {
                    anchors.fill: parent
                    text: stationId
                }
            }
    }

    Rectangle {
        MouseArea {
            anchors.fill: parent
            onClicked: radio.searchAllStations(Radio.SearchGetStationId)
        }
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="start-method">
<db:title>start()</db:title>
<db:para>Starts the radio. If the radio is available, as determined by the <db:link xlink:href="qml-qtmultimedia-radio.xml#availability-prop">availability</db:link> property, this will result in the <db:link xlink:href="qml-qtmultimedia-radio.xml#state-prop">state</db:link> becoming <db:code>ActiveState</db:code>.</db:para>
</db:section>
<db:section xml:id="stop-method">
<db:title>stop()</db:title>
<db:para>Stops the radio. After calling this method the <db:link xlink:href="qml-qtmultimedia-radio.xml#state-prop">state</db:link> will be <db:code>StoppedState</db:code>.</db:para>
</db:section>
<db:section xml:id="tuneDown-method">
<db:title>tuneDown()</db:title>
<db:para>Decrements the frequency by the frequency step for the current band. If the frequency is already set to the minimum frequency, calling this function has no effect.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-radio.xml#band-prop">band</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-radio.xml#frequencyStep-prop">frequencyStep</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-radio.xml#minimumFrequency-prop">minimumFrequency</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="tuneUp-method">
<db:title>tuneUp()</db:title>
<db:para>Increments the frequency by the frequency step for the current band. If the frequency is already set to the maximum frequency, calling this function has no effect.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-radio.xml#band-prop">band</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-radio.xml#frequencyStep-prop">frequencyStep</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-radio.xml#maximumFrequency-prop">maximumFrequency</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
