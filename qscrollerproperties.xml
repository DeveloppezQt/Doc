<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QScrollerProperties Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link> class stores the settings for a <db:link xlink:href="qscroller.xml">QScroller</db:link>.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QScrollerProperties</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link> class stores the parameters used by <db:link xlink:href="qscroller.xml">QScroller</db:link>.</db:para>
<db:para>The default settings are platform dependent so that Qt emulates the platform behaviour for kinetic scrolling.</db:para>
<db:para>As a convention the <db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link> are in physical units (meter, seconds) and are converted by <db:link xlink:href="qscroller.xml">QScroller</db:link> using the current DPI.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscroller.xml">QScroller</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="FrameRates-enum">
<db:title>enum QScrollerProperties::FrameRates</db:title>
<db:para>This enum describes the available frame rates used while dragging or scrolling.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::Fps60</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>60 frames per second</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::Fps30</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>30 frames per second</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::Fps20</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>20 frames per second</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::Standard</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>the default value is 60 frames per second (which corresponds to <db:link xlink:href="qabstractanimation.xml">QAbstractAnimation</db:link>).</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="OvershootPolicy-enum">
<db:title>enum QScrollerProperties::OvershootPolicy</db:title>
<db:para>This enum describes the various modes of overshooting.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::OvershootWhenScrollable</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Overshooting is possible when the content is scrollable. This is the default.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::OvershootAlwaysOff</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Overshooting is never enabled, even when the content is scrollable.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::OvershootAlwaysOn</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Overshooting is always enabled, even when the content is not scrollable.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="ScrollMetric-enum">
<db:title>enum QScrollerProperties::ScrollMetric</db:title>
<db:para>This enum contains the different scroll metric types. When not indicated otherwise the <db:link xlink:href="qscrollerproperties.xml#setScrollMetric">setScrollMetric</db:link> function expects a <db:link xlink:href="qvariant.xml">QVariant</db:link> of type qreal.</db:para>
<db:para>See the <db:link xlink:href="qscroller.xml">QScroller</db:link> documentation for further details of the concepts behind the different values.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::MousePressEventDelay</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>This is the time a mouse press event is delayed when starting a flick gesture in [s]. If the gesture is triggered within that time, no mouse press or release is sent to the scrolled object. If it triggers after that delay the delayed mouse press plus a faked release event at global position QPoint(-QWIDGETSIZE_MAX, -QWIDGETSIZE_MAX) is sent. If the gesture is canceled, then both the delayed mouse press plus the real release event are delivered.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::DragStartDistance</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>This is the minimum distance the touch or mouse point needs to be moved before the flick gesture is triggered in m.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::DragVelocitySmoothingFactor</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>A value that describes to which extent new drag velocities are included in the final scrolling velocity. This value should be in the range between 0 and 1. The lower the value, the more smoothing is applied to the dragging velocity.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::AxisLockThreshold</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Restricts the movement to one axis if the movement is inside an angle around the axis. The threshold must be in the range 0 to 1.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::ScrollingCurve</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>The <db:link xlink:href="qeasingcurve.xml">QEasingCurve</db:link> used when decelerating the scrolling velocity after an user initiated flick. Please note that this is the easing curve for the positions, <db:emphasis role="bold">not</db:emphasis> the velocity: the default is <db:link xlink:href="qeasingcurve.xml#Type-enum">QEasingCurve::OutQuad</db:link>, which results in a linear decrease in velocity (1st derivative) and a constant deceleration (2nd derivative).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::DecelerationFactor</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>This factor influences how long it takes the scroller to decelerate to 0 velocity. The actual value depends on the chosen ScrollingCurve. For most types the value should be in the range from 0.1 to 2.0</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::MinimumVelocity</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>The minimum velocity that is needed after ending the touch or releasing the mouse to start scrolling in m/s.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::MaximumVelocity</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>This is the maximum velocity that can be reached in m/s.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::MaximumClickThroughVelocity</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>This is the maximum allowed scroll speed for a click-through in m/s. This means that a click on a currently (slowly) scrolling object will not only stop the scrolling but the click event will also be delivered to the UI control. This is useful when using exponential-type scrolling curves.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::AcceleratingFlickMaximumTime</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>This is the maximum time in seconds that a flick gesture can take to be recognized as an accelerating flick. If set to zero no such gesture is detected. An &quot;accelerating flick&quot; is a flick gesture executed on an already scrolling object. In such cases the scrolling speed is multiplied by AcceleratingFlickSpeedupFactor in order to accelerate it.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::AcceleratingFlickSpeedupFactor</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>The current speed is multiplied by this number if an accelerating flick is detected. Should be &gt;= 1.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::SnapPositionRatio</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>This is the distance that the user must drag the area between two snap points in order to snap it to the next position. 0.33 means that the scroll must only reach one third of the distance between two snap points to snap to the next one. The ratio must be between 0 and 1.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::SnapTime</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>This is the time factor for the scrolling curve. A lower value means that the scrolling will take longer. The scrolling distance is independent of this value.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::OvershootDragResistanceFactor</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>This value is the factor between the mouse dragging and the actual scroll area movement (during overshoot). The factor must be between 0 and 1.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::OvershootDragDistanceFactor</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>This is the maximum distance for overshoot movements while dragging. The actual overshoot distance is calculated by multiplying this value with the viewport size of the scrolled object. The factor must be between 0 and 1.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::OvershootScrollDistanceFactor</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>This is the maximum distance for overshoot movements while scrolling. The actual overshoot distance is calculated by multiplying this value with the viewport size of the scrolled object. The factor must be between 0 and 1.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::OvershootScrollTime</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>This is the time in seconds that is used to play the complete overshoot animation.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::HorizontalOvershootPolicy</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>This is the horizontal overshooting policy (see <db:link xlink:href="qscrollerproperties.xml#OvershootPolicy-enum">OvershootPolicy</db:link>).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::VerticalOvershootPolicy</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td>
<db:para>This is the horizontal overshooting policy (see <db:link xlink:href="qscrollerproperties.xml#OvershootPolicy-enum">OvershootPolicy</db:link>).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::FrameRate</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>This is the frame rate which should be used while dragging or scrolling. <db:link xlink:href="qscroller.xml">QScroller</db:link> uses a <db:link xlink:href="qabstractanimation.xml">QAbstractAnimation</db:link> timer internally to sync all scrolling operations to other animations that might be active at the same time. If the standard value of 60 frames per second is too fast, it can be lowered with this setting, while still being in-sync with <db:link xlink:href="qabstractanimation.xml">QAbstractAnimation</db:link>. Please note that only the values of the <db:link xlink:href="qscrollerproperties.xml#FrameRates-enum">FrameRates</db:link> enum are allowed here.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link></db:emphasis>::ScrollMetricCount</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>This is always the last entry.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QScrollerProperties">
<db:title>QScrollerProperties::QScrollerProperties()</db:title>
<db:para>Constructs new scroller properties.</db:para>
</db:section>
<db:section xml:id="QScrollerProperties-1">
<db:title>QScrollerProperties::QScrollerProperties(const QScrollerProperties &amp;<db:emphasis>sp</db:emphasis>)</db:title>
<db:para>Constructs a copy of <db:code role="parameter">sp</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QScrollerProperties">
<db:title>[virtual noexcept] QScrollerProperties::~QScrollerProperties()</db:title>
<db:para>Destroys the scroller properties.</db:para>
</db:section>
<db:section xml:id="scrollMetric">
<db:title>QVariant QScrollerProperties::scrollMetric(QScrollerProperties::ScrollMetric <db:emphasis>metric</db:emphasis>) const</db:title>
<db:para>Query the <db:code role="parameter">metric</db:code> value of the scroller properties.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscrollerproperties.xml#setScrollMetric">setScrollMetric</db:link>()</db:member>
<db:member><db:link xlink:href="qscrollerproperties.xml#ScrollMetric-enum">ScrollMetric</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDefaultScrollerProperties">
<db:title>[static] void QScrollerProperties::setDefaultScrollerProperties(const QScrollerProperties &amp;<db:emphasis>sp</db:emphasis>)</db:title>
<db:para>Sets the scroller properties for all new <db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link> objects to <db:code role="parameter">sp</db:code>.</db:para>
<db:para>Use this function to override the platform default properties returned by the default constructor. If you only want to change the scroller properties of a single scroller, use <db:link xlink:href="qscroller.xml#scrollerProperties-prop">QScroller::setScrollerProperties</db:link>()</db:para>
<db:note>
<db:para>Calling this function will not change the content of already existing <db:link xlink:href="qscrollerproperties.xml">QScrollerProperties</db:link> objects.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscrollerproperties.xml#unsetDefaultScrollerProperties">unsetDefaultScrollerProperties</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setScrollMetric">
<db:title>void QScrollerProperties::setScrollMetric(QScrollerProperties::ScrollMetric <db:emphasis>metric</db:emphasis>, const QVariant &amp;<db:emphasis>value</db:emphasis>)</db:title>
<db:para>Set a specific value of the <db:code role="parameter">metric</db:code> ScrollerMetric to <db:code role="parameter">value</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscrollerproperties.xml#scrollMetric">scrollMetric</db:link>()</db:member>
<db:member><db:link xlink:href="qscrollerproperties.xml#ScrollMetric-enum">ScrollMetric</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="unsetDefaultScrollerProperties">
<db:title>[static] void QScrollerProperties::unsetDefaultScrollerProperties()</db:title>
<db:para>Sets the scroller properties returned by the default constructor back to the platform default properties.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscrollerproperties.xml#setDefaultScrollerProperties">setDefaultScrollerProperties</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QScrollerProperties::operator!=(const QScrollerProperties &amp;<db:emphasis>sp</db:emphasis>) const</db:title>
<db:para>Returns true if these scroller properties are different from <db:code role="parameter">sp</db:code>; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QScrollerProperties &amp;QScrollerProperties::operator=(const QScrollerProperties &amp;<db:emphasis>sp</db:emphasis>)</db:title>
<db:para>Assigns <db:code role="parameter">sp</db:code> to these scroller properties and returns a reference to these scroller properties.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QScrollerProperties::operator==(const QScrollerProperties &amp;<db:emphasis>sp</db:emphasis>) const</db:title>
<db:para>Returns true if these scroller properties are equal to <db:code role="parameter">sp</db:code>; otherwise returns false.</db:para>
</db:section>
</db:section>
</db:article>
