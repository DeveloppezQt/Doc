<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QItemModelSurfaceDataProxy Class</db:title>
<db:productname>QtDataVis3D</db:productname>
<db:edition>Qt Data Visualization | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Data Visualization Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Proxy class for presenting data in item models with <db:link xlink:href="q3dsurface-qtdatavis.xml">Q3DSurface</db:link>.</db:para>
<db:para>This class was introduced in QtDataVisualization 1.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QItemModelSurfaceDataProxy</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtDataVisualization 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS DataVisualization)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::DataVisualization)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += datavisualization</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtdatavisualization-itemmodelsurfacedataproxy.xml" xlink:role="">ItemModelSurfaceDataProxy</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qsurfacedataproxy-qtdatavis.xml" xlink:role="class">QSurfaceDataProxy</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml">QItemModelSurfaceDataProxy</db:link> allows you to use <db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link> derived models as a data source for <db:link xlink:href="q3dsurface-qtdatavis.xml">Q3DSurface</db:link>. It uses the defined mappings to map data from the model to rows, columns, and surface points of <db:link xlink:href="q3dsurface-qtdatavis.xml">Q3DSurface</db:link> graph.</db:para>
<db:para>Data is resolved asynchronously whenever the mapping or the model changes. <db:link xlink:href="qsurfacedataproxy-qtdatavis.xml#arrayReset">QSurfaceDataProxy::arrayReset</db:link>() is emitted when the data has been resolved. However, when <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#useModelCategories-prop">useModelCategories</db:link> property is set to <db:code>true</db:code>, single item changes are resolved synchronously, unless the same frame also contains a change that causes the whole model to be resolved.</db:para>
<db:para>Mappings can be used in the following ways:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>If <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#useModelCategories-prop">useModelCategories</db:link> property is set to <db:code>true</db:code>, this proxy will map rows and columns of <db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link> to rows and columns of <db:link xlink:href="q3dsurface-qtdatavis.xml">Q3DSurface</db:link>, and uses the value returned for <db:link xlink:href="qt.xml#ItemDataRole-enum">Qt::DisplayRole</db:link> as Y-position by default. Row and column headers are used for Z-position and X-position by default, if they can be converted to floats. Otherwise row and column indices are used. The Y-position role to be used can be redefined if <db:link xlink:href="qt.xml#ItemDataRole-enum">Qt::DisplayRole</db:link> is not suitable. The Z-position and X-position roles to be used can be redefined if the headers or indices are not suitable.</db:para>
</db:listitem>
<db:listitem>
<db:para>For models that do not have data already neatly sorted into rows and columns, such as <db:link xlink:href="qabstractlistmodel.xml">QAbstractListModel</db:link> based models, you can define a role from the model to map for each of row, column and Y-position.</db:para>
</db:listitem>
<db:listitem>
<db:para>If you do not want to include all data contained in the model, or the autogenerated rows and columns are not ordered as you wish, you can specify which rows and columns should be included and in which order by defining an explicit list of categories for either or both of rows and columns.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>For example, assume that you have a custom <db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link> storing surface topography data. Each item in the model has the roles &quot;longitude&quot;, &quot;latitude&quot;, and &quot;height&quot;. The item model already contains the data properly sorted so that longitudes and latitudes are first encountered in correct order, which enables us to utilize the row and column category autogeneration. You could do the following to display the data in a surface graph:</db:para>
<db:programlisting language="cpp">QItemModelSurfaceDataProxy *proxy = new QItemModelSurfaceDataProxy(customModel,
                                                                   QStringLiteral(&quot;longitude&quot;), // Row role
                                                                   QStringLiteral(&quot;latitude&quot;), // Column role
                                                                   QStringLiteral(&quot;height&quot;)); // Y-position role
</db:programlisting>
<db:para>If the fields of the model do not contain the data in the exact format you need, you can specify a search pattern regular expression and a replace rule for each role to get the value in a format you need. For more information how the replace using regular expressions works, see <db:link xlink:href="qstring.xml#replace">QString::replace</db:link>(const <db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link> &amp;rx, const <db:link xlink:href="qstring.xml">QString</db:link> &amp;after) function documentation. Note that using regular expressions has an impact on the performance, so it's more efficient to utilize item models where doing search and replace is not necessary to get the desired values.</db:para>
<db:para>For example about using the search patterns in conjunction with the roles, see <db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml">ItemModelBarDataProxy</db:link> usage in <db:link xlink:href="qtdatavis3d-qmlbars-example.xml">Simple Bar Graph</db:link> example.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtdatavisualization-data-handling.xml">Qt Data Visualization Data Handling</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="MultiMatchBehavior-enum">
<db:title>enum QItemModelSurfaceDataProxy::MultiMatchBehavior</db:title>
<db:para>Behavior types for <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#multiMatchBehavior-prop">QItemModelSurfaceDataProxy::multiMatchBehavior</db:link> property.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml">QItemModelSurfaceDataProxy</db:link></db:emphasis>::MMBFirst</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The position values are taken from the first item in the item model that matches each row/column combination.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml">QItemModelSurfaceDataProxy</db:link></db:emphasis>::MMBLast</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The position values are taken from the last item in the item model that matches each row/column combination.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml">QItemModelSurfaceDataProxy</db:link></db:emphasis>::MMBAverage</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The position values from all items matching each row/column combination are averaged together and the averages are used as the surface point position.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml">QItemModelSurfaceDataProxy</db:link></db:emphasis>::MMBCumulativeY</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>For X and Z values this acts just like <db:code>MMBAverage</db:code>, but Y values are added together instead of averaged and the total is used as the surface point Y position.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="autoColumnCategories-prop">
<db:title>autoColumnCategories : bool</db:title>
<db:para>This property holds whether column categories are generated automatically.</db:para>
<db:para>When set to <db:code>true</db:code>, the mapping ignores any explicitly set column categories and overwrites them with automatically generated ones whenever the data from the model is resolved. Defaults to <db:code>true</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">autoColumnCategories</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setAutoColumnCategories</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enable</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">autoColumnCategoriesChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enable</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="autoRowCategories-prop">
<db:title>autoRowCategories : bool</db:title>
<db:para>This property holds whether row categories are generated automatically.</db:para>
<db:para>When set to <db:code>true</db:code>, the mapping ignores any explicitly set row categories and overwrites them with automatically generated ones whenever the data from the model is resolved. Defaults to <db:code>true</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">autoRowCategories</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setAutoRowCategories</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enable</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">autoRowCategoriesChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enable</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="columnCategories-prop">
<db:title>columnCategories : QStringList</db:title>
<db:para>This property holds the column categories for the mapping.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstringlist.xml">QStringList</db:link></db:type> <db:emphasis role="bold">columnCategories</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setColumnCategories</db:emphasis>(const <db:type><db:link xlink:href="qstringlist.xml">QStringList</db:link></db:type> &amp;<db:emphasis>categories</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">columnCategoriesChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="columnRole-prop">
<db:title>columnRole : QString</db:title>
<db:para>This property holds the item model role to map to the column category.</db:para>
<db:para>In addition to defining which column the data belongs to, the value indicated by the column role is also set as the X-coordinate value of <db:link xlink:href="qsurfacedataitem-qtdatavis.xml">QSurfaceDataItem</db:link> when model data is resolved, unless a separate x position role is also defined.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">columnRole</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setColumnRole</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>role</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">columnRoleChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>role</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="columnRolePattern-prop">
<db:title>columnRolePattern : QRegularExpression</db:title>
<db:para>This property holds whether a search and replace is done on the value mapped by the column role before it is used as a column category.</db:para>
<db:para>This property specifies the regular expression to find the portion of the mapped value to replace and the <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#columnRoleReplace-prop">columnRoleReplace</db:link> property contains the replacement string.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> <db:emphasis role="bold">columnRolePattern</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setColumnRolePattern</db:emphasis>(const <db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> &amp;<db:emphasis>pattern</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">columnRolePatternChanged</db:emphasis>(const <db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> &amp;<db:emphasis>pattern</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#columnRole-prop">columnRole</db:link></db:member>
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#columnRoleReplace-prop">columnRoleReplace</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="columnRoleReplace-prop">
<db:title>columnRoleReplace : QString</db:title>
<db:para>This property holds the replace content to be used in conjunction with a column role pattern.</db:para>
<db:para>Defaults to an empty string. For more information on how the search and replace using regular expressions works, see the <db:link xlink:href="qstring.xml#replace">QString::replace</db:link>(const <db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link> &amp;rx, const <db:link xlink:href="qstring.xml">QString</db:link> &amp;after) function documentation.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">columnRoleReplace</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setColumnRoleReplace</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>replace</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">columnRoleReplaceChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>replace</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#columnRole-prop">columnRole</db:link></db:member>
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#columnRolePattern-prop">columnRolePattern</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="itemModel-prop">
<db:title>itemModel : QAbstractItemModel*</db:title>
<db:para>This property holds the item model used as a data source for the 3D surface.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link></db:type> *<db:emphasis role="bold">itemModel</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#setItemModel">setItemModel</db:link></db:emphasis>(<db:type><db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link></db:type> *<db:emphasis>itemModel</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">itemModelChanged</db:emphasis>(const <db:type><db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link></db:type> *<db:emphasis>itemModel</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="multiMatchBehavior-prop">
<db:title>multiMatchBehavior : MultiMatchBehavior</db:title>
<db:para>How multiple matches for each row/column combination are handled.</db:para>
<db:para>Defaults to <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#MultiMatchBehavior-enum">MMBLast</db:link>.</db:para>
<db:para>For example, you might have an item model with timestamped data taken at irregular intervals and you want to visualize an average position of data items on each hour with a surface graph. This can be done by specifying row and column categories so that each surface point represents an hour, and setting this property to <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#MultiMatchBehavior-enum">MMBAverage</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#MultiMatchBehavior-enum">QItemModelSurfaceDataProxy::MultiMatchBehavior</db:link></db:type> <db:emphasis role="bold">multiMatchBehavior</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMultiMatchBehavior</db:emphasis>(<db:type><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#MultiMatchBehavior-enum">QItemModelSurfaceDataProxy::MultiMatchBehavior</db:link></db:type> <db:emphasis>behavior</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">multiMatchBehaviorChanged</db:emphasis>(<db:type><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#MultiMatchBehavior-enum">QItemModelSurfaceDataProxy::MultiMatchBehavior</db:link></db:type> <db:emphasis>behavior</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="rowCategories-prop">
<db:title>rowCategories : QStringList</db:title>
<db:para>This property holds the row categories for the mapping.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstringlist.xml">QStringList</db:link></db:type> <db:emphasis role="bold">rowCategories</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setRowCategories</db:emphasis>(const <db:type><db:link xlink:href="qstringlist.xml">QStringList</db:link></db:type> &amp;<db:emphasis>categories</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">rowCategoriesChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="rowRole-prop">
<db:title>rowRole : QString</db:title>
<db:para>This property holds the item model role to map to the row category.</db:para>
<db:para>In addition to defining which row the data belongs to, the value indicated by the row role is also set as the Z-coordinate value of <db:link xlink:href="qsurfacedataitem-qtdatavis.xml">QSurfaceDataItem</db:link> when model data is resolved, unless a separate z position role is also defined.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">rowRole</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setRowRole</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>role</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">rowRoleChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>role</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="rowRolePattern-prop">
<db:title>rowRolePattern : QRegularExpression</db:title>
<db:para>This property holds whether a search and replace is performed on the value mapped by the row role before it is used as a row category.</db:para>
<db:para>This property specifies the regular expression to find the portion of the mapped value to replace and the <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#rowRoleReplace-prop">rowRoleReplace</db:link> property contains the replacement string.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> <db:emphasis role="bold">rowRolePattern</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setRowRolePattern</db:emphasis>(const <db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> &amp;<db:emphasis>pattern</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">rowRolePatternChanged</db:emphasis>(const <db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> &amp;<db:emphasis>pattern</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#rowRole-prop">rowRole</db:link></db:member>
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#rowRoleReplace-prop">rowRoleReplace</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rowRoleReplace-prop">
<db:title>rowRoleReplace : QString</db:title>
<db:para>This property holds the replace content to be used in conjunction with the row role pattern.</db:para>
<db:para>Defaults to an empty string. For more information on how the search and replace using regular expressions works, see <db:link xlink:href="qstring.xml#replace">QString::replace</db:link>(const <db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link> &amp;rx, const <db:link xlink:href="qstring.xml">QString</db:link> &amp;after) function documentation.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">rowRoleReplace</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setRowRoleReplace</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>replace</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">rowRoleReplaceChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>replace</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#rowRole-prop">rowRole</db:link></db:member>
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#rowRolePattern-prop">rowRolePattern</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="useModelCategories-prop">
<db:title>useModelCategories : bool</db:title>
<db:para>This property holds whether row and column roles and categories are used for mapping.</db:para>
<db:para>When set to <db:code>true</db:code>, the mapping ignores row and column roles and categories, and uses the rows and columns from the model instead. Defaults to <db:code>false</db:code>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">useModelCategories</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setUseModelCategories</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enable</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">useModelCategoriesChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enable</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="xPosRole-prop">
<db:title>xPosRole : QString</db:title>
<db:para>This property holds the item model role to map to the X position.</db:para>
<db:para>If this role is not defined, <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#columnRole-prop">columnRole</db:link> is used to determine the X-coordinate value of the resolved <db:link xlink:href="qsurfacedataitem-qtdatavis.xml">QSurfaceDataItem</db:link> objects.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">xPosRole</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setXPosRole</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>role</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">xPosRoleChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>role</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="xPosRolePattern-prop">
<db:title>xPosRolePattern : QRegularExpression</db:title>
<db:para>This property holds whether a search and replace is done on the value mapped by the x position role before it is used as an item position value.</db:para>
<db:para>This property specifies the regular expression to find the portion of the mapped value to replace and the <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#xPosRoleReplace-prop">xPosRoleReplace</db:link> property contains the replacement string.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> <db:emphasis role="bold">xPosRolePattern</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setXPosRolePattern</db:emphasis>(const <db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> &amp;<db:emphasis>pattern</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">xPosRolePatternChanged</db:emphasis>(const <db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> &amp;<db:emphasis>pattern</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#xPosRole-prop">xPosRole</db:link></db:member>
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#xPosRoleReplace-prop">xPosRoleReplace</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="xPosRoleReplace-prop">
<db:title>xPosRoleReplace : QString</db:title>
<db:para>This property holds the replace content to be used in conjunction with an x position role pattern.</db:para>
<db:para>Defaults to an empty string. For more information on how the search and replace using regular expressions works, see the <db:link xlink:href="qstring.xml#replace">QString::replace</db:link>(const <db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link> &amp;rx, const <db:link xlink:href="qstring.xml">QString</db:link> &amp;after) function documentation.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">xPosRoleReplace</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setXPosRoleReplace</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>replace</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">xPosRoleReplaceChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>replace</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#xPosRole-prop">xPosRole</db:link></db:member>
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#xPosRolePattern-prop">xPosRolePattern</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="yPosRole-prop">
<db:title>yPosRole : QString</db:title>
<db:para>This property holds the item model role to map to the Y position.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">yPosRole</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setYPosRole</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>role</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">yPosRoleChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>role</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="yPosRolePattern-prop">
<db:title>yPosRolePattern : QRegularExpression</db:title>
<db:para>This property holds whether a search and replace is done on the value mapped by the y position role before it is used as an item position value.</db:para>
<db:para>This property specifies the regular expression to find the portion of the mapped value to replace and the <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#yPosRoleReplace-prop">yPosRoleReplace</db:link> property contains the replacement string.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> <db:emphasis role="bold">yPosRolePattern</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setYPosRolePattern</db:emphasis>(const <db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> &amp;<db:emphasis>pattern</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">yPosRolePatternChanged</db:emphasis>(const <db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> &amp;<db:emphasis>pattern</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#yPosRole-prop">yPosRole</db:link></db:member>
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#yPosRoleReplace-prop">yPosRoleReplace</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="yPosRoleReplace-prop">
<db:title>yPosRoleReplace : QString</db:title>
<db:para>This property holds the replace content to be used in conjunction with an y position role pattern.</db:para>
<db:para>Defaults to an empty string. For more information on how the search and replace using regular expressions works, see the <db:link xlink:href="qstring.xml#replace">QString::replace</db:link>(const <db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link> &amp;rx, const <db:link xlink:href="qstring.xml">QString</db:link> &amp;after) function documentation.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">yPosRoleReplace</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setYPosRoleReplace</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>replace</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">yPosRoleReplaceChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>replace</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#yPosRole-prop">yPosRole</db:link></db:member>
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#yPosRolePattern-prop">yPosRolePattern</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="zPosRole-prop">
<db:title>zPosRole : QString</db:title>
<db:para>This property holds the item model role to map to the Z position.</db:para>
<db:para>If this role is not defined, <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#rowRole-prop">rowRole</db:link> is used to determine the Z-coordinate value of resolved <db:link xlink:href="qsurfacedataitem-qtdatavis.xml">QSurfaceDataItem</db:link> objects.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">zPosRole</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setZPosRole</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>role</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">zPosRoleChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>role</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="zPosRolePattern-prop">
<db:title>zPosRolePattern : QRegularExpression</db:title>
<db:para>This property holds whether a search and replace is done on the value mapped by the z position role before it is used as an item position value.</db:para>
<db:para>This property specifies the regular expression to find the portion of the mapped value to replace and the <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#zPosRoleReplace-prop">zPosRoleReplace</db:link> property contains the replacement string.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> <db:emphasis role="bold">zPosRolePattern</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setZPosRolePattern</db:emphasis>(const <db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> &amp;<db:emphasis>pattern</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">zPosRolePatternChanged</db:emphasis>(const <db:type><db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link></db:type> &amp;<db:emphasis>pattern</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#zPosRole-prop">zPosRole</db:link></db:member>
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#zPosRoleReplace-prop">zPosRoleReplace</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="zPosRoleReplace-prop">
<db:title>zPosRoleReplace : QString</db:title>
<db:para>This property holds the replace content to be used in conjunction with a z position role pattern.</db:para>
<db:para>Defaults to an empty string. For more information on how the search and replace using regular expressions works, see the <db:link xlink:href="qstring.xml#replace">QString::replace</db:link>(const <db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link> &amp;rx, const <db:link xlink:href="qstring.xml">QString</db:link> &amp;after) function documentation.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">zPosRoleReplace</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setZPosRoleReplace</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>replace</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">zPosRoleReplaceChanged</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>replace</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#zPosRole-prop">zPosRole</db:link></db:member>
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#zPosRolePattern-prop">zPosRolePattern</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QItemModelSurfaceDataProxy">
<db:title>[explicit] QItemModelSurfaceDataProxy::QItemModelSurfaceDataProxy(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml">QItemModelSurfaceDataProxy</db:link> with optional <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="QItemModelSurfaceDataProxy-1">
<db:title>[explicit] QItemModelSurfaceDataProxy::QItemModelSurfaceDataProxy(QAbstractItemModel *<db:emphasis>itemModel</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml">QItemModelSurfaceDataProxy</db:link> with <db:code role="parameter">itemModel</db:code> and optional <db:code role="parameter">parent</db:code>. Proxy doesn't take ownership of the <db:code role="parameter">itemModel</db:code>, as typically item models are owned by other controls.</db:para>
</db:section>
<db:section xml:id="QItemModelSurfaceDataProxy-2">
<db:title>[explicit] QItemModelSurfaceDataProxy::QItemModelSurfaceDataProxy(QAbstractItemModel *<db:emphasis>itemModel</db:emphasis>, const QString &amp;<db:emphasis>yPosRole</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml">QItemModelSurfaceDataProxy</db:link> with <db:code role="parameter">itemModel</db:code> and optional <db:code role="parameter">parent</db:code>. Proxy doesn't take ownership of the <db:code role="parameter">itemModel</db:code>, as typically item models are owned by other controls. The <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#yPosRole-prop">yPosRole</db:link> role is set to <db:code role="parameter">yPosRole</db:code>. This constructor is meant to be used with models that have data properly sorted in rows and columns already, so it also sets <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#useModelCategories-prop">useModelCategories</db:link> property to <db:code>true</db:code>.</db:para>
</db:section>
<db:section xml:id="QItemModelSurfaceDataProxy-3">
<db:title>[explicit] QItemModelSurfaceDataProxy::QItemModelSurfaceDataProxy(QAbstractItemModel *<db:emphasis>itemModel</db:emphasis>, const QString &amp;<db:emphasis>rowRole</db:emphasis>, const QString &amp;<db:emphasis>columnRole</db:emphasis>, const QString &amp;<db:emphasis>yPosRole</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml">QItemModelSurfaceDataProxy</db:link> with <db:code role="parameter">itemModel</db:code> and optional <db:code role="parameter">parent</db:code>. Proxy doesn't take ownership of the <db:code role="parameter">itemModel</db:code>, as typically item models are owned by other controls. The role mappings are set with <db:code role="parameter">rowRole</db:code>, <db:code role="parameter">columnRole</db:code>, and <db:code role="parameter">yPosRole</db:code>. The <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#zPosRole-prop">zPosRole</db:link> and the <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#xPosRole-prop">xPosRole</db:link> are set to <db:code role="parameter">rowRole</db:code> and <db:code role="parameter">columnRole</db:code>, respectively.</db:para>
</db:section>
<db:section xml:id="QItemModelSurfaceDataProxy-4">
<db:title>[explicit] QItemModelSurfaceDataProxy::QItemModelSurfaceDataProxy(QAbstractItemModel *<db:emphasis>itemModel</db:emphasis>, const QString &amp;<db:emphasis>rowRole</db:emphasis>, const QString &amp;<db:emphasis>columnRole</db:emphasis>, const QString &amp;<db:emphasis>xPosRole</db:emphasis>, const QString &amp;<db:emphasis>yPosRole</db:emphasis>, const QString &amp;<db:emphasis>zPosRole</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml">QItemModelSurfaceDataProxy</db:link> with <db:code role="parameter">itemModel</db:code> and optional <db:code role="parameter">parent</db:code>. Proxy doesn't take ownership of the <db:code role="parameter">itemModel</db:code>, as typically item models are owned by other controls. The role mappings are set with <db:code role="parameter">rowRole</db:code>, <db:code role="parameter">columnRole</db:code>, <db:code role="parameter">xPosRole</db:code>, <db:code role="parameter">yPosRole</db:code>, and <db:code role="parameter">zPosRole</db:code>.</db:para>
</db:section>
<db:section xml:id="QItemModelSurfaceDataProxy-5">
<db:title>[explicit] QItemModelSurfaceDataProxy::QItemModelSurfaceDataProxy(QAbstractItemModel *<db:emphasis>itemModel</db:emphasis>, const QString &amp;<db:emphasis>rowRole</db:emphasis>, const QString &amp;<db:emphasis>columnRole</db:emphasis>, const QString &amp;<db:emphasis>yPosRole</db:emphasis>, const QStringList &amp;<db:emphasis>rowCategories</db:emphasis>, const QStringList &amp;<db:emphasis>columnCategories</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml">QItemModelSurfaceDataProxy</db:link> with <db:code role="parameter">itemModel</db:code> and optional <db:code role="parameter">parent</db:code>. Proxy doesn't take ownership of the <db:code role="parameter">itemModel</db:code>, as typically item models are owned by other controls. The role mappings are set with <db:code role="parameter">rowRole</db:code>, <db:code role="parameter">columnRole</db:code>, and <db:code role="parameter">yPosRole</db:code>. The <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#zPosRole-prop">zPosRole</db:link> and the <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#xPosRole-prop">xPosRole</db:link> are set to <db:code role="parameter">rowRole</db:code> and <db:code role="parameter">columnRole</db:code>, respectively. Row and column categories are set with <db:code role="parameter">rowCategories</db:code> and <db:code role="parameter">columnCategories</db:code>. This constructor also sets <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#autoRowCategories-prop">autoRowCategories</db:link> and <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#autoColumnCategories-prop">autoColumnCategories</db:link> to false.</db:para>
</db:section>
<db:section xml:id="QItemModelSurfaceDataProxy-6">
<db:title>[explicit] QItemModelSurfaceDataProxy::QItemModelSurfaceDataProxy(QAbstractItemModel *<db:emphasis>itemModel</db:emphasis>, const QString &amp;<db:emphasis>rowRole</db:emphasis>, const QString &amp;<db:emphasis>columnRole</db:emphasis>, const QString &amp;<db:emphasis>xPosRole</db:emphasis>, const QString &amp;<db:emphasis>yPosRole</db:emphasis>, const QString &amp;<db:emphasis>zPosRole</db:emphasis>, const QStringList &amp;<db:emphasis>rowCategories</db:emphasis>, const QStringList &amp;<db:emphasis>columnCategories</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml">QItemModelSurfaceDataProxy</db:link> with <db:code role="parameter">itemModel</db:code> and optional <db:code role="parameter">parent</db:code>. Proxy doesn't take ownership of the <db:code role="parameter">itemModel</db:code>, as typically item models are owned by other controls. The role mappings are set with <db:code role="parameter">rowRole</db:code>, <db:code role="parameter">columnRole</db:code>, <db:code role="parameter">xPosRole</db:code>, <db:code role="parameter">yPosRole</db:code>, and <db:code role="parameter">zPosRole</db:code>. Row and column categories are set with <db:code role="parameter">rowCategories</db:code> and <db:code role="parameter">columnCategories</db:code>. This constructor also sets <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#autoRowCategories-prop">autoRowCategories</db:link> and <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#autoColumnCategories-prop">autoColumnCategories</db:link> to false.</db:para>
</db:section>
<db:section xml:id="dtor.QItemModelSurfaceDataProxy">
<db:title>[virtual noexcept] QItemModelSurfaceDataProxy::~QItemModelSurfaceDataProxy()</db:title>
<db:para>Destroys <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml">QItemModelSurfaceDataProxy</db:link>.</db:para>
</db:section>
<db:section xml:id="columnCategoryIndex">
<db:title>int QItemModelSurfaceDataProxy::columnCategoryIndex(const QString &amp;<db:emphasis>category</db:emphasis>)</db:title>
<db:para>Returns the index of the specified <db:code role="parameter">category</db:code> in the column categories list. If the category is not found, -1 is returned.</db:para>
<db:note>
<db:para>If the automatic column categories generation is in use, this method will not return a valid index before the data in the model is resolved for the first time.</db:para>
</db:note>
</db:section>
<db:section xml:id="remap">
<db:title>void QItemModelSurfaceDataProxy::remap(const QString &amp;<db:emphasis>rowRole</db:emphasis>, const QString &amp;<db:emphasis>columnRole</db:emphasis>, const QString &amp;<db:emphasis>xPosRole</db:emphasis>, const QString &amp;<db:emphasis>yPosRole</db:emphasis>, const QString &amp;<db:emphasis>zPosRole</db:emphasis>, const QStringList &amp;<db:emphasis>rowCategories</db:emphasis>, const QStringList &amp;<db:emphasis>columnCategories</db:emphasis>)</db:title>
<db:para>Changes <db:code role="parameter">rowRole</db:code>, <db:code role="parameter">columnRole</db:code>, <db:code role="parameter">xPosRole</db:code>, <db:code role="parameter">yPosRole</db:code>, <db:code role="parameter">zPosRole</db:code>, <db:code role="parameter">rowCategories</db:code> and <db:code role="parameter">columnCategories</db:code> to the mapping.</db:para>
</db:section>
<db:section xml:id="rowCategoryIndex">
<db:title>int QItemModelSurfaceDataProxy::rowCategoryIndex(const QString &amp;<db:emphasis>category</db:emphasis>)</db:title>
<db:para>Returns the index of the specified <db:code role="parameter">category</db:code> in the row categories list. If the row categories list is empty, -1 is returned.</db:para>
<db:note>
<db:para>If the automatic row categories generation is in use, this method will not return a valid index before the data in the model is resolved for the first time.</db:para>
</db:note>
</db:section>
<db:section xml:id="setItemModel">
<db:title>void QItemModelSurfaceDataProxy::setItemModel(QAbstractItemModel *<db:emphasis>itemModel</db:emphasis>)</db:title>
<db:para>Sets the item model to <db:code role="parameter">itemModel</db:code>. Does not take ownership of the model, but does connect to it to listen for changes.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#itemModel-prop">itemModel</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qitemmodelsurfacedataproxy-qtdatavis.xml#itemModel-prop">itemModel</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
