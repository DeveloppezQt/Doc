<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSerialPortInfo Class</db:title>
<db:productname>QtSerialPort</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Serial Port Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides information about existing serial ports.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSerialPortInfo</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS SerialPort)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::SerialPort)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += serialport</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSerialPortInfo is part of <db:simplelist><db:member>serialport-main</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Use the static <db:link xlink:href="qserialportinfo.xml#availablePorts">availablePorts</db:link>() function to generate a list of <db:link xlink:href="qserialportinfo.xml">QSerialPortInfo</db:link> objects. Each <db:link xlink:href="qserialportinfo.xml">QSerialPortInfo</db:link> object in the list represents a single serial port and can be queried for the <db:link xlink:href="qserialportinfo.xml#portName">port name</db:link>, <db:link xlink:href="qserialportinfo.xml#systemLocation">system location</db:link>, <db:link xlink:href="qserialportinfo.xml#description">description</db:link>, <db:link xlink:href="qserialportinfo.xml#manufacturer">manufacturer</db:link>, and some other hardware parameters. The <db:link xlink:href="qserialportinfo.xml">QSerialPortInfo</db:link> class can also be used as an input parameter for the <db:link xlink:href="qserialport.xml#setPort">setPort</db:link>() method of the <db:link xlink:href="qserialport.xml">QSerialPort</db:link> class.</db:para>
<db:section xml:id="example-usage">
<db:title>Example Usage</db:title>
<db:para>The example code enumerates all available serial ports and prints their parameters to console:</db:para>
<db:programlisting language="cpp">    const auto serialPortInfos = QSerialPortInfo::availablePorts();
    for (const QSerialPortInfo &amp;amp;portInfo : serialPortInfos) {
        qDebug() &amp;lt;&amp;lt; &quot;\n&quot;
                 &amp;lt;&amp;lt; &quot;Port:&quot; &amp;lt;&amp;lt; portInfo.portName() &amp;lt;&amp;lt; &quot;\n&quot;
                 &amp;lt;&amp;lt; &quot;Location:&quot; &amp;lt;&amp;lt; portInfo.systemLocation() &amp;lt;&amp;lt; &quot;\n&quot;
                 &amp;lt;&amp;lt; &quot;Description:&quot; &amp;lt;&amp;lt; portInfo.description() &amp;lt;&amp;lt; &quot;\n&quot;
                 &amp;lt;&amp;lt; &quot;Manufacturer:&quot; &amp;lt;&amp;lt; portInfo.manufacturer() &amp;lt;&amp;lt; &quot;\n&quot;
                 &amp;lt;&amp;lt; &quot;Serial number:&quot; &amp;lt;&amp;lt; portInfo.serialNumber() &amp;lt;&amp;lt; &quot;\n&quot;
                 &amp;lt;&amp;lt; &quot;Vendor Identifier:&quot;
                 &amp;lt;&amp;lt; (portInfo.hasVendorIdentifier()
                     ? QByteArray::number(portInfo.vendorIdentifier(), 16)
                     : QByteArray()) &amp;lt;&amp;lt; &quot;\n&quot;
                 &amp;lt;&amp;lt; &quot;Product Identifier:&quot;
                 &amp;lt;&amp;lt; (portInfo.hasProductIdentifier()
                     ? QByteArray::number(portInfo.productIdentifier(), 16)
                     : QByteArray());
    }
</db:programlisting>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qserialport.xml">QSerialPort</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSerialPortInfo">
<db:title>QSerialPortInfo::QSerialPortInfo()</db:title>
<db:constructorsynopsis>
<db:methodname>QSerialPortInfo</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QSerialPortInfo()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an empty <db:link xlink:href="qserialportinfo.xml">QSerialPortInfo</db:link> object.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qserialportinfo.xml#isNull">isNull</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QSerialPortInfo-1">
<db:title>[explicit] QSerialPortInfo::QSerialPortInfo(const QSerialPort &amp;<db:emphasis>port</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QSerialPortInfo</db:methodname>
<db:methodparam>
<db:type>const QSerialPort &amp;</db:type>
<db:parameter>port</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QSerialPortInfo(const QSerialPort &amp;port)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qserialportinfo.xml">QSerialPortInfo</db:link> object from serial <db:code role="parameter">port</db:code>.</db:para>
</db:section>
<db:section xml:id="QSerialPortInfo-2">
<db:title>[explicit] QSerialPortInfo::QSerialPortInfo(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QSerialPortInfo</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QSerialPortInfo(const QString &amp;name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qserialportinfo.xml">QSerialPortInfo</db:link> object from serial port <db:code role="parameter">name</db:code>.</db:para>
<db:para>This constructor finds the relevant serial port among the available ones according to the port name <db:code role="parameter">name</db:code>, and constructs the serial port info instance for that port.</db:para>
</db:section>
<db:section xml:id="QSerialPortInfo-3">
<db:title>QSerialPortInfo::QSerialPortInfo(const QSerialPortInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QSerialPortInfo</db:methodname>
<db:methodparam>
<db:type>const QSerialPortInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">3</db:synopsisinfo>
<db:synopsisinfo role="signature">QSerialPortInfo(const QSerialPortInfo &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QSerialPortInfo">
<db:title>QSerialPortInfo::~QSerialPortInfo()</db:title>
<db:destructorsynopsis>
<db:methodname>~QSerialPortInfo</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QSerialPortInfo()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the <db:link xlink:href="qserialportinfo.xml">QSerialPortInfo</db:link> object. References to the values in the object become invalid.</db:para>
</db:section>
<db:section xml:id="availablePorts">
<db:title>[static] QList&lt;QSerialPortInfo&gt; QSerialPortInfo::availablePorts()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QList&lt;QSerialPortInfo&gt;</db:type>
<db:methodname>availablePorts</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;QSerialPortInfo&gt; availablePorts()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of available serial ports on the system.</db:para>
</db:section>
<db:section xml:id="description">
<db:title>QString QSerialPortInfo::description() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>description</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString description() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the description string of the serial port, if available; otherwise returns an empty string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qserialportinfo.xml#manufacturer">manufacturer</db:link>()</db:member>
<db:member><db:link xlink:href="qserialportinfo.xml#serialNumber">serialNumber</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hasProductIdentifier">
<db:title>bool QSerialPortInfo::hasProductIdentifier() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>hasProductIdentifier</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool hasProductIdentifier() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if there is a valid <db:code>16-bit</db:code> product number present; otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qserialportinfo.xml#productIdentifier">productIdentifier</db:link>()</db:member>
<db:member><db:link xlink:href="qserialportinfo.xml#vendorIdentifier">vendorIdentifier</db:link>()</db:member>
<db:member><db:link xlink:href="qserialportinfo.xml#hasVendorIdentifier">hasVendorIdentifier</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hasVendorIdentifier">
<db:title>bool QSerialPortInfo::hasVendorIdentifier() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>hasVendorIdentifier</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool hasVendorIdentifier() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if there is a valid <db:code>16-bit</db:code> vendor number present; otherwise returns <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qserialportinfo.xml#vendorIdentifier">vendorIdentifier</db:link>()</db:member>
<db:member><db:link xlink:href="qserialportinfo.xml#productIdentifier">productIdentifier</db:link>()</db:member>
<db:member><db:link xlink:href="qserialportinfo.xml#hasProductIdentifier">hasProductIdentifier</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isNull">
<db:title>bool QSerialPortInfo::isNull() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isNull</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isNull() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns whether this <db:link xlink:href="qserialportinfo.xml">QSerialPortInfo</db:link> object holds a serial port definition.</db:para>
</db:section>
<db:section xml:id="manufacturer">
<db:title>QString QSerialPortInfo::manufacturer() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>manufacturer</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString manufacturer() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the manufacturer string of the serial port, if available; otherwise returns an empty string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qserialportinfo.xml#description">description</db:link>()</db:member>
<db:member><db:link xlink:href="qserialportinfo.xml#serialNumber">serialNumber</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="portName">
<db:title>QString QSerialPortInfo::portName() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>portName</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString portName() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the name of the serial port.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qserialportinfo.xml#systemLocation">systemLocation</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="productIdentifier">
<db:title>quint16 QSerialPortInfo::productIdentifier() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint16</db:type>
<db:methodname>productIdentifier</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint16 productIdentifier() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the 16-bit product number for the serial port, if available; otherwise returns zero.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qserialportinfo.xml#hasProductIdentifier">hasProductIdentifier</db:link>()</db:member>
<db:member><db:link xlink:href="qserialportinfo.xml#vendorIdentifier">vendorIdentifier</db:link>()</db:member>
<db:member><db:link xlink:href="qserialportinfo.xml#hasVendorIdentifier">hasVendorIdentifier</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="serialNumber">
<db:title>QString QSerialPortInfo::serialNumber() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>serialNumber</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString serialNumber() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the serial number string of the serial port, if available; otherwise returns an empty string.</db:para>
<db:note>
<db:para>The serial number may include letters.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qserialportinfo.xml#description">description</db:link>()</db:member>
<db:member><db:link xlink:href="qserialportinfo.xml#manufacturer">manufacturer</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="standardBaudRates">
<db:title>[static] QList&lt;qint32&gt; QSerialPortInfo::standardBaudRates()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QList&lt;qint32&gt;</db:type>
<db:methodname>standardBaudRates</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QList&lt;qint32&gt; standardBaudRates()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a list of available standard baud rates supported by the target platform.</db:para>
</db:section>
<db:section xml:id="swap">
<db:title>void QSerialPortInfo::swap(QSerialPortInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>swap</db:methodname>
<db:methodparam>
<db:type>QSerialPortInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void swap(QSerialPortInfo &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Swaps <db:link xlink:href="qserialportinfo.xml">QSerialPortInfo</db:link> <db:code role="parameter">other</db:code> with this <db:link xlink:href="qserialportinfo.xml">QSerialPortInfo</db:link>. This operation is very fast and never fails.</db:para>
</db:section>
<db:section xml:id="systemLocation">
<db:title>QString QSerialPortInfo::systemLocation() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>systemLocation</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString systemLocation() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the system location of the serial port.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qserialportinfo.xml#portName">portName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="vendorIdentifier">
<db:title>quint16 QSerialPortInfo::vendorIdentifier() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint16</db:type>
<db:methodname>vendorIdentifier</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint16 vendorIdentifier() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the 16-bit vendor number for the serial port, if available; otherwise returns zero.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qserialportinfo.xml#hasVendorIdentifier">hasVendorIdentifier</db:link>()</db:member>
<db:member><db:link xlink:href="qserialportinfo.xml#productIdentifier">productIdentifier</db:link>()</db:member>
<db:member><db:link xlink:href="qserialportinfo.xml#hasProductIdentifier">hasProductIdentifier</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QSerialPortInfo &amp;QSerialPortInfo::operator=(const QSerialPortInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QSerialPortInfo &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QSerialPortInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QSerialPortInfo &amp; operator=(const QSerialPortInfo &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the <db:link xlink:href="qserialportinfo.xml">QSerialPortInfo</db:link> object to be equal to <db:code role="parameter">other</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
