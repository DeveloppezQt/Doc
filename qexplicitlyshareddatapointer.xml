<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QExplicitlySharedDataPointer Class</db:title>
<db:subtitle>template &lt;typename T&gt; class QExplicitlySharedDataPointer</db:subtitle>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qexplicitlyshareddatapointer.xml">QExplicitlySharedDataPointer</db:link> class represents a pointer to an explicitly shared object.</db:para>
<db:para>This class was introduced in Qt 4.4.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QExplicitlySharedDataPointer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qexplicitlyshareddatapointer.xml">QExplicitlySharedDataPointer</db:link>&lt;T&gt; makes writing your own explicitly shared classes easy. <db:link xlink:href="qexplicitlyshareddatapointer.xml">QExplicitlySharedDataPointer</db:link> implements <db:link xlink:href="threads-reentrancy.xml">thread-safe</db:link> reference counting, ensuring that adding QExplicitlySharedDataPointers to your <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link> classes won't make them non-reentrant.</db:para>
<db:para>Except for one big difference, <db:link xlink:href="qexplicitlyshareddatapointer.xml">QExplicitlySharedDataPointer</db:link> is just like <db:link xlink:href="qshareddatapointer.xml">QSharedDataPointer</db:link>. The big difference is that member functions of <db:link xlink:href="qexplicitlyshareddatapointer.xml">QExplicitlySharedDataPointer</db:link> <db:emphasis>do not</db:emphasis> do the automatic <db:emphasis>copy on write</db:emphasis> operation (detach()) that non-const members of <db:link xlink:href="qshareddatapointer.xml">QSharedDataPointer</db:link> do before allowing the shared data object to be modified. There is a detach() function available, but if you really want to detach(), you have to call it yourself. This means that QExplicitlySharedDataPointers behave like regular C++ pointers, except that by doing reference counting and not deleting the shared data object until the reference count is 0, they avoid the dangling pointer problem.</db:para>
<db:para>It is instructive to compare <db:link xlink:href="qexplicitlyshareddatapointer.xml">QExplicitlySharedDataPointer</db:link> with <db:link xlink:href="qshareddatapointer.xml">QSharedDataPointer</db:link> by way of an example. Consider the <db:link xlink:href="qshareddatapointer.xml#employee-example">Employee example</db:link> in <db:link xlink:href="qshareddatapointer.xml">QSharedDataPointer</db:link>, modified to use explicit sharing as explained in the discussion <db:link xlink:href="qshareddatapointer.xml#implicit-vs-explicit-sharing">Implicit vs Explicit Sharing</db:link>.</db:para>
<db:para>Note that if you use this class but find you are calling detach() a lot, you probably should be using <db:link xlink:href="qshareddatapointer.xml">QSharedDataPointer</db:link> instead.</db:para>
<db:para>In the member function documentation, <db:emphasis>d pointer</db:emphasis> always refers to the internal pointer to the shared data object.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qshareddata.xml">QSharedData</db:link></db:member>
<db:member><db:link xlink:href="qshareddatapointer.xml">QSharedDataPointer</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Type-typedef">
<db:title>QExplicitlySharedDataPointer::Type</db:title>
<db:para>This is the type of the shared data object. The <db:emphasis>d pointer</db:emphasis> points to an object of this type.</db:para>
</db:section>
</db:section>
</db:article>
