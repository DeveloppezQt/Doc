<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QXmlNamePool Class</db:title>
<db:productname>QtXmlPatterns</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt XML Patterns Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qxmlnamepool.xml">QXmlNamePool</db:link> class is a table of shared strings referenced by instances of <db:link xlink:href="qxmlname.xml">QXmlName</db:link>.</db:para>
<db:para>This class was introduced in Qt 4.4.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QXmlNamePool</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += xmlpatterns</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QXmlNamePool is part of <db:simplelist><db:member>xml-tools</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qxmlnamepool.xml">QXmlNamePool</db:link> is used to optimize operations on instances of <db:link xlink:href="qxmlname.xml">QXmlName</db:link>. An instance of <db:link xlink:href="qxmlname.xml">QXmlName</db:link> represents an XML name in a way that allows the XML name to be compared and passed around efficiently. The efficiency is achieved by storing the strings comprising the XML names in an instance of <db:link xlink:href="qxmlnamepool.xml">QXmlNamePool</db:link>, where they are mapped to binary identifiers, which are then packed into a key which is stored in the <db:link xlink:href="qxmlname.xml">QXmlName</db:link>.</db:para>
<db:para>This means that each instance of <db:link xlink:href="qxmlname.xml">QXmlName</db:link> is tied to the name pool it was created with, and that name pool should be kept in scope and used to create all instances of <db:link xlink:href="qxmlname.xml">QXmlName</db:link> that might be compared. Note also that the name pool is required if you must reconstitute the <db:link xlink:href="qxmlname.xml">QXmlName</db:link> as text, or if you must access any of its component strings, so although instances of <db:link xlink:href="qxmlname.xml">QXmlName</db:link> can be compared without reference to a name pool, the name pool must be kept in scope if the name's strings must be accessed later.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qxmlname.xml">QXmlName</db:link></db:member>
<db:member><db:link xlink:href="qxmlquery.xml#namePool">QXmlQuery::namePool</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QXmlNamePool">
<db:title>QXmlNamePool::QXmlNamePool()</db:title>
<db:constructorsynopsis>
<db:methodname>QXmlNamePool</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QXmlNamePool()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an empty name pool.</db:para>
</db:section>
<db:section xml:id="QXmlNamePool-1">
<db:title>QXmlNamePool::QXmlNamePool(const QXmlNamePool &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QXmlNamePool</db:methodname>
<db:methodparam>
<db:type>const QXmlNamePool &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QXmlNamePool(const QXmlNamePool &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a copy of the <db:code role="parameter">other</db:code> name pool.</db:para>
</db:section>
<db:section xml:id="dtor.QXmlNamePool">
<db:title>QXmlNamePool::~QXmlNamePool()</db:title>
<db:destructorsynopsis>
<db:methodname>~QXmlNamePool</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QXmlNamePool()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the name pool. Instances of <db:link xlink:href="qxmlname.xml">QXmlName</db:link> constructed with this name pool can still be compared after this destructor is called, but their text strings cannot be accessed.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QXmlNamePool &amp;QXmlNamePool::operator=(const QXmlNamePool &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QXmlNamePool &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QXmlNamePool &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QXmlNamePool &amp; operator=(const QXmlNamePool &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Assigns the <db:code role="parameter">other</db:code> name pool to this one.</db:para>
</db:section>
</db:section>
</db:article>
