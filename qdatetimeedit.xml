<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QDateTimeEdit Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link> class provides a widget for editing dates and times.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDateTimeEdit</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstractspinbox.xml" xlink:role="class">QAbstractSpinBox</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qdateedit.xml" xlink:role="class">QDateEdit</db:link> and <db:link xlink:href="qtimeedit.xml" xlink:role="class">QTimeEdit</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QDateTimeEdit is part of <db:simplelist><db:member>basicwidgets</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link> allows the user to edit dates by using the keyboard or the arrow keys to increase and decrease date and time values. The arrow keys can be used to move from section to section within the <db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link> box. Dates and times appear in accordance with the format set; see setDisplayFormat().</db:para>
<db:programlisting language="cpp">QDateTimeEdit *dateEdit = new QDateTimeEdit(QDate::currentDate());
dateEdit-&gt;setMinimumDate(QDate::currentDate().addDays(-365));
dateEdit-&gt;setMaximumDate(QDate::currentDate().addDays(365));
dateEdit-&gt;setDisplayFormat(&quot;yyyy.MM.dd&quot;);
</db:programlisting>
<db:para>Here we've created a new <db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link> object initialized with today's date, and restricted the valid date range to today plus or minus 365 days. We've set the order to month, day, year.</db:para>
<db:para>The minimum value for <db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link> is 14 September 1752. You can change this by calling setMinimumDate(), taking into account that the minimum value for <db:link xlink:href="qdate.xml">QDate</db:link> is 2 January 4713BC.</db:para>
<db:para>Other useful functions are setMaximumDate(), setMinimumTime() and setMaximumTime().</db:para>
<db:section xml:id="using-a-pop-up-calendar-widget">
<db:title>Using a Pop-up Calendar Widget</db:title>
<db:para><db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link> can be configured to allow a <db:link xlink:href="qcalendarwidget.xml">QCalendarWidget</db:link> to be used to select dates. This is enabled by setting the calendarPopup property. Additionally, you can supply a custom calendar widget for use as the calendar pop-up by calling the <db:link xlink:href="qdatetimeedit.xml#setCalendarWidget">setCalendarWidget</db:link>() function. The existing calendar widget can be retrieved with <db:link xlink:href="qdatetimeedit.xml#calendarWidget">calendarWidget</db:link>().</db:para>
<db:informaltable style="generic" width="100%">
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/windowsvista-datetimeedit.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of a Windows Vista style date time editing widget</db:para>
</db:td>
<db:td>
<db:para>A date time editing widget shown in the <db:link xlink:href="gallery-windowsvista.xml">Windows Vista widget style</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/macintosh-datetimeedit.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of a Macintosh style date time editing widget</db:para>
</db:td>
<db:td>
<db:para>A date time editing widget shown in the <db:link xlink:href="gallery-macintosh.xml">Macintosh widget style</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/fusion-datetimeedit.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of a Fusion style date time editing widget</db:para>
</db:td>
<db:td>
<db:para>A date time editing widget shown in the <db:link xlink:href="gallery-fusion.xml">Fusion widget style</db:link>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdateedit.xml">QDateEdit</db:link></db:member>
<db:member><db:link xlink:href="qtimeedit.xml">QTimeEdit</db:link></db:member>
<db:member><db:link xlink:href="qdate.xml">QDate</db:link></db:member>
<db:member><db:link xlink:href="qtime.xml">QTime</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Section-enum">
<db:title>enum QDateTimeEdit::Section</db:title>
<db:bridgehead renderas="sect2">flags QDateTimeEdit::Sections</db:bridgehead>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link></db:emphasis>::NoSection</db:code></db:para>
</db:td>
<db:td><db:code>0x0000</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link></db:emphasis>::AmPmSection</db:code></db:para>
</db:td>
<db:td><db:code>0x0001</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link></db:emphasis>::MSecSection</db:code></db:para>
</db:td>
<db:td><db:code>0x0002</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link></db:emphasis>::SecondSection</db:code></db:para>
</db:td>
<db:td><db:code>0x0004</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link></db:emphasis>::MinuteSection</db:code></db:para>
</db:td>
<db:td><db:code>0x0008</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link></db:emphasis>::HourSection</db:code></db:para>
</db:td>
<db:td><db:code>0x0010</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link></db:emphasis>::DaySection</db:code></db:para>
</db:td>
<db:td><db:code>0x0100</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link></db:emphasis>::MonthSection</db:code></db:para>
</db:td>
<db:td><db:code>0x0200</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link></db:emphasis>::YearSection</db:code></db:para>
</db:td>
<db:td><db:code>0x0400</db:code></db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>Sections</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;Section&gt;. </db:code>It stores an OR combination of <db:code>Section</db:code> values.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QDateTimeEdit">
<db:title>[explicit] QDateTimeEdit::QDateTimeEdit(QWidget *<db:emphasis>parent</db:emphasis> = 0)</db:title>
<db:para>Constructs an empty date time editor with a <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="QDateTimeEdit-1">
<db:title>[explicit] QDateTimeEdit::QDateTimeEdit(const QDate &amp;<db:emphasis>date</db:emphasis>, QWidget *<db:emphasis>parent</db:emphasis> = 0)</db:title>
<db:para>Constructs an empty date time editor with a <db:code role="parameter">parent</db:code>. The value is set to <db:code role="parameter">date</db:code>.</db:para>
</db:section>
<db:section xml:id="QDateTimeEdit-2">
<db:title>[explicit] QDateTimeEdit::QDateTimeEdit(const QDateTime &amp;<db:emphasis>datetime</db:emphasis>, QWidget *<db:emphasis>parent</db:emphasis> = 0)</db:title>
<db:para>Constructs an empty date time editor with a <db:code role="parameter">parent</db:code>. The value is set to <db:code role="parameter">datetime</db:code>.</db:para>
</db:section>
<db:section xml:id="QDateTimeEdit-3">
<db:title>[explicit] QDateTimeEdit::QDateTimeEdit(const QTime &amp;<db:emphasis>time</db:emphasis>, QWidget *<db:emphasis>parent</db:emphasis> = 0)</db:title>
<db:para>Constructs an empty date time editor with a <db:code role="parameter">parent</db:code>. The value is set to <db:code role="parameter">time</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QDateTimeEdit">
<db:title>[virtual noexcept] QDateTimeEdit::~QDateTimeEdit()</db:title>
<db:para>Destructor.</db:para>
</db:section>
<db:section xml:id="calendarWidget">
<db:title>[since 4.4] QCalendarWidget *QDateTimeEdit::calendarWidget() const</db:title>
<db:para>Returns the calendar widget for the editor if calendarPopup is set to true and (sections() &amp; <db:link xlink:href="qdatetimeedit.xml#Section-enum">DateSections_Mask</db:link>) != 0.</db:para>
<db:para>This function creates and returns a calendar widget if none has been set.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdatetimeedit.xml#setCalendarWidget">setCalendarWidget</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clear">
<db:title>[override virtual] void QDateTimeEdit::clear()</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#clear" role="function">QAbstractSpinBox::clear()</db:link>.</db:para>
</db:section>
<db:section xml:id="date">
<db:title>QDate QDateTimeEdit::date() const</db:title>
<db:para>Returns the date of the date time edit.</db:para>
</db:section>
<db:section xml:id="dateChanged">
<db:title>void QDateTimeEdit::dateChanged(const QDate &amp;<db:emphasis>date</db:emphasis>)</db:title>
<db:para>This signal is emitted whenever the date is changed. The new date is passed in <db:code role="parameter">date</db:code>.</db:para>
</db:section>
<db:section xml:id="dateTimeChanged">
<db:title>void QDateTimeEdit::dateTimeChanged(const QDateTime &amp;<db:emphasis>datetime</db:emphasis>)</db:title>
<db:para>This signal is emitted whenever the date or time is changed. The new date and time is passed in <db:code role="parameter">datetime</db:code>.</db:para>
</db:section>
<db:section xml:id="dateTimeFromText">
<db:title>[virtual protected] QDateTime QDateTimeEdit::dateTimeFromText(const QString &amp;<db:emphasis>text</db:emphasis>) const</db:title>
<db:para>Returns an appropriate datetime for the given <db:code role="parameter">text</db:code>.</db:para>
<db:para>This virtual function is used by the datetime edit whenever it needs to interpret text entered by the user as a value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdatetimeedit.xml#textFromDateTime">textFromDateTime</db:link>()</db:member>
<db:member><db:link xlink:href="qdatetimeedit.xml#validate">validate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="event">
<db:title>[override virtual] bool QDateTimeEdit::event(QEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#event" role="function">QAbstractSpinBox::event(QEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="fixup">
<db:title>[override virtual protected] void QDateTimeEdit::fixup(QString &amp;<db:emphasis>input</db:emphasis>) const</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#fixup" role="function">QAbstractSpinBox::fixup(QString &amp;input) const</db:link>.</db:para>
</db:section>
<db:section xml:id="focusInEvent">
<db:title>[override virtual protected] void QDateTimeEdit::focusInEvent(QFocusEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#focusInEvent" role="function">QAbstractSpinBox::focusInEvent(QFocusEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="focusNextPrevChild">
<db:title>[override virtual protected] bool QDateTimeEdit::focusNextPrevChild(bool <db:emphasis>next</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#focusNextPrevChild" role="function">QWidget::focusNextPrevChild(bool next)</db:link>.</db:para>
</db:section>
<db:section xml:id="initStyleOption">
<db:title>[protected] void QDateTimeEdit::initStyleOption(QStyleOptionSpinBox *<db:emphasis>option</db:emphasis>) const</db:title>
<db:para>Initialize <db:code role="parameter">option</db:code> with the values from this QDataTimeEdit. This method is useful for subclasses when they need a <db:link xlink:href="qstyleoptionspinbox.xml">QStyleOptionSpinBox</db:link>, but don't want to fill in all the information themselves.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#initFrom">QStyleOption::initFrom</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="keyPressEvent">
<db:title>[override virtual protected] void QDateTimeEdit::keyPressEvent(QKeyEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#keyPressEvent" role="function">QAbstractSpinBox::keyPressEvent(QKeyEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="mousePressEvent">
<db:title>[override virtual protected] void QDateTimeEdit::mousePressEvent(QMouseEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#mousePressEvent" role="function">QAbstractSpinBox::mousePressEvent(QMouseEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="paintEvent">
<db:title>[override virtual protected] void QDateTimeEdit::paintEvent(QPaintEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#paintEvent" role="function">QAbstractSpinBox::paintEvent(QPaintEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="sectionAt">
<db:title>[since 4.3] QDateTimeEdit::Section QDateTimeEdit::sectionAt(int <db:emphasis>index</db:emphasis>) const</db:title>
<db:para>Returns the Section at <db:code role="parameter">index</db:code>.</db:para>
<db:para>If the format is 'yyyy/MM/dd', sectionAt(0) returns <db:link xlink:href="qdatetimeedit.xml#Section-enum">YearSection</db:link>, sectionAt(1) returns <db:link xlink:href="qdatetimeedit.xml#Section-enum">MonthSection</db:link>, and sectionAt(2) returns <db:link xlink:href="qdatetimeedit.xml#Section-enum">YearSection</db:link>,</db:para>
<db:para>This function was introduced in Qt 4.3.</db:para>
</db:section>
<db:section xml:id="sectionText">
<db:title>QString QDateTimeEdit::sectionText(QDateTimeEdit::Section <db:emphasis>section</db:emphasis>) const</db:title>
<db:para>Returns the text from the given <db:code role="parameter">section</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">currentSection()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCalendarWidget">
<db:title>[since 4.4] void QDateTimeEdit::setCalendarWidget(QCalendarWidget *<db:emphasis>calendarWidget</db:emphasis>)</db:title>
<db:para>Sets the given <db:code role="parameter">calendarWidget</db:code> as the widget to be used for the calendar pop-up. The editor does not automatically take ownership of the calendar widget.</db:para>
<db:note>
<db:para>calendarPopup must be set to true before setting the calendar widget.</db:para>
</db:note>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdatetimeedit.xml#calendarWidget">calendarWidget</db:link>()</db:member>
<db:member>calendarPopup</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDateRange">
<db:title>void QDateTimeEdit::setDateRange(const QDate &amp;<db:emphasis>min</db:emphasis>, const QDate &amp;<db:emphasis>max</db:emphasis>)</db:title>
<db:para>Convenience function to set minimum and maximum date with one function call.</db:para>
<db:programlisting language="cpp">setDateRange(min, max);
</db:programlisting>
<db:para>is analogous to:</db:para>
<db:programlisting language="cpp">setMinimumDate(min);
setMaximumDate(max);
</db:programlisting>
<db:para>If either <db:code role="parameter">min</db:code> or <db:code role="parameter">max</db:code> are not valid, this function does nothing.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">setMinimumDate()</db:link></db:member>
<db:member><db:link xlink:href="">maximumDate()</db:link></db:member>
<db:member><db:link xlink:href="">setMaximumDate()</db:link></db:member>
<db:member><db:link xlink:href="">clearMinimumDate()</db:link></db:member>
<db:member><db:link xlink:href="">setMinimumTime()</db:link></db:member>
<db:member><db:link xlink:href="">maximumTime()</db:link></db:member>
<db:member><db:link xlink:href="">setMaximumTime()</db:link></db:member>
<db:member><db:link xlink:href="">clearMinimumTime()</db:link></db:member>
<db:member><db:link xlink:href="qdate.xml#isValid">QDate::isValid</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDateTimeRange">
<db:title>[since 4.4] void QDateTimeEdit::setDateTimeRange(const QDateTime &amp;<db:emphasis>min</db:emphasis>, const QDateTime &amp;<db:emphasis>max</db:emphasis>)</db:title>
<db:para>Convenience function to set minimum and maximum date time with one function call.</db:para>
<db:programlisting language="cpp">setDateTimeRange(min, max);
</db:programlisting>
<db:para>is analogous to:</db:para>
<db:programlisting language="cpp">setMinimumDateTime(min);
setMaximumDateTime(max);
</db:programlisting>
<db:para>If either <db:code role="parameter">min</db:code> or <db:code role="parameter">max</db:code> are not valid, this function does nothing.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">setMinimumDate()</db:link></db:member>
<db:member><db:link xlink:href="">maximumDate()</db:link></db:member>
<db:member><db:link xlink:href="">setMaximumDate()</db:link></db:member>
<db:member><db:link xlink:href="">clearMinimumDate()</db:link></db:member>
<db:member><db:link xlink:href="">setMinimumTime()</db:link></db:member>
<db:member><db:link xlink:href="">maximumTime()</db:link></db:member>
<db:member><db:link xlink:href="">setMaximumTime()</db:link></db:member>
<db:member><db:link xlink:href="">clearMinimumTime()</db:link></db:member>
<db:member><db:link xlink:href="qdatetime.xml#isValid">QDateTime::isValid</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSelectedSection">
<db:title>[since 4.2] void QDateTimeEdit::setSelectedSection(QDateTimeEdit::Section <db:emphasis>section</db:emphasis>)</db:title>
<db:para>Selects <db:code role="parameter">section</db:code>. If <db:code role="parameter">section</db:code> doesn't exist in the currently displayed sections, this function does nothing. If <db:code role="parameter">section</db:code> is <db:link xlink:href="qdatetimeedit.xml#Section-enum">NoSection</db:link>, this function will unselect all text in the editor. Otherwise, this function will move the cursor and the current section to the selected section.</db:para>
<db:para>This function was introduced in Qt 4.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">currentSection()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTimeRange">
<db:title>void QDateTimeEdit::setTimeRange(const QTime &amp;<db:emphasis>min</db:emphasis>, const QTime &amp;<db:emphasis>max</db:emphasis>)</db:title>
<db:para>Convenience function to set minimum and maximum time with one function call.</db:para>
<db:programlisting language="cpp">setTimeRange(min, max);
</db:programlisting>
<db:para>is analogous to:</db:para>
<db:programlisting language="cpp">setMinimumTime(min);
setMaximumTime(max);
</db:programlisting>
<db:para>If either <db:code role="parameter">min</db:code> or <db:code role="parameter">max</db:code> are not valid, this function does nothing.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">setMinimumDate()</db:link></db:member>
<db:member><db:link xlink:href="">maximumDate()</db:link></db:member>
<db:member><db:link xlink:href="">setMaximumDate()</db:link></db:member>
<db:member><db:link xlink:href="">clearMinimumDate()</db:link></db:member>
<db:member><db:link xlink:href="">setMinimumTime()</db:link></db:member>
<db:member><db:link xlink:href="">maximumTime()</db:link></db:member>
<db:member><db:link xlink:href="">setMaximumTime()</db:link></db:member>
<db:member><db:link xlink:href="">clearMinimumTime()</db:link></db:member>
<db:member><db:link xlink:href="qtime.xml#isValid">QTime::isValid</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sizeHint">
<db:title>[override virtual] QSize QDateTimeEdit::sizeHint() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#sizeHint" role="function">QAbstractSpinBox::sizeHint() const</db:link>.</db:para>
</db:section>
<db:section xml:id="stepBy">
<db:title>[override virtual] void QDateTimeEdit::stepBy(int <db:emphasis>steps</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#stepBy" role="function">QAbstractSpinBox::stepBy(int steps)</db:link>.</db:para>
</db:section>
<db:section xml:id="stepEnabled">
<db:title>[override virtual protected] QAbstractSpinBox::StepEnabled QDateTimeEdit::stepEnabled() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#stepEnabled" role="function">QAbstractSpinBox::stepEnabled() const</db:link>.</db:para>
</db:section>
<db:section xml:id="textFromDateTime">
<db:title>[virtual protected] QString QDateTimeEdit::textFromDateTime(const QDateTime &amp;<db:emphasis>dateTime</db:emphasis>) const</db:title>
<db:para>This virtual function is used by the date time edit whenever it needs to display <db:code role="parameter">dateTime</db:code>.</db:para>
<db:para>If you reimplement this, you may also need to reimplement <db:link xlink:href="qdatetimeedit.xml#validate">validate</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdatetimeedit.xml#dateTimeFromText">dateTimeFromText</db:link>()</db:member>
<db:member><db:link xlink:href="qdatetimeedit.xml#validate">validate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="time">
<db:title>QTime QDateTimeEdit::time() const</db:title>
<db:para>Returns the time of the date time edit.</db:para>
</db:section>
<db:section xml:id="timeChanged">
<db:title>void QDateTimeEdit::timeChanged(const QTime &amp;<db:emphasis>time</db:emphasis>)</db:title>
<db:para>This signal is emitted whenever the time is changed. The new time is passed in <db:code role="parameter">time</db:code>.</db:para>
</db:section>
<db:section xml:id="validate">
<db:title>[override virtual protected] QValidator::State QDateTimeEdit::validate(QString &amp;<db:emphasis>text</db:emphasis>, int &amp;<db:emphasis>pos</db:emphasis>) const</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#validate" role="function">QAbstractSpinBox::validate(QString &amp;input, int &amp;pos) const</db:link>.</db:para>
</db:section>
<db:section xml:id="wheelEvent">
<db:title>[override virtual protected] void QDateTimeEdit::wheelEvent(QWheelEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#wheelEvent" role="function">QAbstractSpinBox::wheelEvent(QWheelEvent *event)</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
