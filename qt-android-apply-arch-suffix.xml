<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>qt_android_apply_arch_suffix</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Configures the target binary's name to include an architecture-specific suffix.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="qt6-android-apply-arch-suffix"/>
<db:para>Configures the target binary's name to include an architecture-specific suffix.</db:para>
<db:para>The command is defined in the Core component of the Qt6 package, which can be loaded like so:</db:para>
<db:programlisting language="cpp" role="bad">find_package(Qt6 REQUIRED COMPONENTS Core)
</db:programlisting>
<db:para>This command was introduced in Qt 6.0.</db:para>
<db:note>
<db:para>This command is in technology preview and may change in future releases.</db:para>
</db:note>
<db:note>
<db:para>This command should only be called if targeting the Android platform.</db:para>
</db:note>
<db:section xml:id="synopsis">
<db:title>Synopsis</db:title>
<db:programlisting language="cpp" role="bad">qt_android_apply_arch_suffix(target)
</db:programlisting>
<db:para>If <db:link xlink:href="">versionless commands</db:link> are disabled, use qt6_android_apply_arch_suffix() instead. It supports the same set of arguments as this command.</db:para>
</db:section>
<db:section xml:id="description">
<db:title>Description</db:title>
<db:para>The CMake SUFFIX target property controls the suffix used on the file name of the target's built binary. This command is a convenience for setting that property to an architecture-specific value. This is useful when installing multiple builds for different Android architectures into the same install location, as it prevents the libraries for different architectures from overwriting each other.</db:para>
</db:section>
</db:article>
