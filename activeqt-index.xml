<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Active Qt</db:title>
<db:productname>ActiveQt</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>ActiveQt</db:titleabbrev>
<db:abstract>
<db:para>Provides ActiveX and COM integration on Windows.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt's ActiveX and COM support enables Qt for Windows developers to:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Access and use ActiveX controls and COM objects provided by any ActiveX server in their Qt applications.</db:para>
</db:listitem>
<db:listitem>
<db:para>Make their Qt applications available as COM servers, with any number of Qt objects and widgets as COM objects and ActiveX controls.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>For more information about using ActiveX with Qt, see <db:link xlink:href="activeqt-server.xml">Building ActiveX servers in Qt</db:link>.</db:para>
<db:para>The ActiveQt framework consists of two modules:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>The <db:link xlink:href="activeqt-container.xml">QAxContainer</db:link> module is a static library that implements a <db:link xlink:href="qobject.xml">QObject</db:link> subclass, <db:link xlink:href="qaxobject.xml">QAxObject</db:link>, and a <db:link xlink:href="qwidget.xml">QWidget</db:link> subclass, <db:link xlink:href="qaxwidget.xml">QAxWidget</db:link>, which act as containers for COM objects and ActiveX controls.</db:para>
</db:listitem>
<db:listitem>
<db:para>The <db:link xlink:href="activeqt-server.xml">QAxServer</db:link> module is a static library that implements functionality for in-process and executable COM servers. This module provides the <db:link xlink:href="qaxaggregated.xml">QAxAggregated</db:link>, <db:link xlink:href="qaxbindable.xml">QAxBindable</db:link>, and <db:link xlink:href="qaxfactory.xml">QAxFactory</db:link> classes.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>A set of <db:link xlink:href="activeqt-tools.xml">tools</db:link> is provided to simplify the developing and building of Qt projects that use ActiveX.</db:para>
<db:section xml:id="using-the-module">
<db:title>Using the Module</db:title>
<db:para>Using a Qt module's C++ API requires linking against the module library, either directly or through other dependencies. Several build tools have dedicated support for this, including <db:link xlink:href="https://cmake.org/cmake/help/latest/">CMake</db:link> and <db:link xlink:href="qmake-manual.xml">qmake</db:link>.</db:para>
<db:section xml:id="building-with-cmake">
<db:title>Building with CMake</db:title>
<db:para>Use the <db:code>find_package()</db:code> command to locate the needed module components in the <db:code>Qt6</db:code> package:</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS AxContainer AxServer)
target_link_libraries(mytarget PRIVATE Qt6::AxContainer Qt6::AxServer)
</db:programlisting>
<db:para>For more details, see the <db:link xlink:href="cmake-manual.xml">Build with CMake</db:link> overview.</db:para>
</db:section>
<db:section xml:id="building-with-qmake">
<db:title>Building with qmake</db:title>
<db:para>To configure the modules for building with qmake, add the module as a value of the <db:code>QT</db:code> variable in the project's .pro file:</db:para>
<db:programlisting language="cpp">QT += axcontainer axserver
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="articles-and-guides">
<db:title>Articles and Guides</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="activeqt-tools.xml">Tools for ActiveQt</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="activeqt-container.xml">Using ActiveX controls and COM in Qt</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="activeqt-server.xml">Building ActiveX servers in Qt</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:anchor xml:id="activeqt-examples"/>
</db:section>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="activeqt-activeqt-qutlook-example.xml">Qutlook Example (ActiveQt)</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="activeqt-activeqt-comapp-example.xml">COM App Example (ActiveQt)</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="activeqt-activeqt-wrapper-example.xml">Wrapper Example (ActiveQt)</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="activeqt-activeqt-simple-example.xml">Simple Example (ActiveQt)</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="reference">
<db:title>Reference</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qaxcontainer-module.xml">QAxContainer C++ Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qaxserver-module.xml">QAxServer C++ Classes</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="licenses-and-attributions">
<db:title>Licenses and Attributions</db:title>
<db:para>The <db:link xlink:href="qaxcontainer-module.xml">QAxContainer</db:link> and <db:link xlink:href="qaxserver-module.xml">QAxServer</db:link> modules are available under commercial licenses from <db:link xlink:href="http://www.qt.io/about-us/">The Qt Company</db:link>. In addition, they are available under the <db:link xlink:href="https://spdx.org/licenses/BSD-3-Clause.html">BSD 3-clause &quot;New&quot; or &quot;Revised&quot; License</db:link>:</db:para>
<db:para>See <db:link xlink:href="licensing.xml">Qt Licensing</db:link> for further details.</db:para>
</db:section>
</db:article>
