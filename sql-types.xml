<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Data Types for Qt-supported Database Systems</db:title>
<db:productname>QtSql</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt SQL Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Recommended data types for database systems.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="recommended-data-types-for-qt-supported-database-systems">
<db:title>Recommended Data Types for Qt-Supported Database Systems</db:title>
<db:para>This table shows the recommended data types for extracting data from the databases supported in Qt. Note that types used in Qt are not necessarily valid as input types to a specific database system. e.g., A double might work perfectly as input for floating point records in a particular database, but not necessarily as a storage format for output from that database, because it would be stored with 64-bit precision in C++.</db:para>
<db:section xml:id="ibm-db2-data-types">
<db:title>IBM DB2 Data Types</db:title>
<db:informaltable style="generic" width="90%">
<db:thead>
<db:tr>
<db:th>
<db:para>IBM DB2 data type</db:para>
</db:th>
<db:th>
<db:para>SQL type description</db:para>
</db:th>
<db:th>
<db:para>Recommended input (C++ or Qt data type)</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>SMALLINT</db:para>
</db:td>
<db:td>
<db:para>16-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint16</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTEGER</db:para>
</db:td>
<db:td>
<db:para>32-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint32</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BIGINT</db:para>
</db:td>
<db:td>
<db:para>64-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint64</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>REAL</db:para>
</db:td>
<db:td>
<db:para>32-bit Single-precision floating point</db:para>
</db:td>
<db:td>
<db:para>typedef qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DOUBLE PRECISION</db:para>
</db:td>
<db:td>
<db:para>64-bit Double-precision floating point</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link> for high precision doubles, otherwise qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>FLOAT</db:para>
</db:td>
<db:td>
<db:para>64-bit Double-precision floating point</db:para>
</db:td>
<db:td>
<db:para>typedef qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CHAR</db:para>
</db:td>
<db:td>
<db:para>Fixed-length, null-terminated character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>VARCHAR</db:para>
</db:td>
<db:td>
<db:para>Null-terminated varying length string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>LONG VARCHAR</db:para>
</db:td>
<db:td>
<db:para>Not null-terminated varying length character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BLOB</db:para>
</db:td>
<db:td>
<db:para>Not null-terminated varying binary string with 4-byte string length indicator</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CLOB</db:para>
</db:td>
<db:td>
<db:para>Character large string object</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DATE</db:para>
</db:td>
<db:td>
<db:para>Null-terminated character string of the following format: yyyy-mm-dd</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdate.xml">QDate</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIME</db:para>
</db:td>
<db:td>
<db:para>Null-terminated character string of the following format: hh.mm.ss</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qtime.xml">QTime</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIMESTAMP</db:para>
</db:td>
<db:td>
<db:para>Null-terminated character string of the following format: yyyy-mm-dd-hh.mm.ss.nnnnnn</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdatetime.xml">QDateTime</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="borland-interbase-data-types">
<db:title>Borland InterBase Data Types</db:title>
<db:informaltable style="generic" width="90%">
<db:thead>
<db:tr>
<db:th>
<db:para>Borland InterBase data type</db:para>
</db:th>
<db:th>
<db:para>SQL type description</db:para>
</db:th>
<db:th>
<db:para>Recommended input (C++ or Qt data type)</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>BOOLEAN</db:para>
</db:td>
<db:td>
<db:para>Boolean</db:para>
</db:td>
<db:td>
<db:para>bool</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TINYINT</db:para>
</db:td>
<db:td>
<db:para>8 bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint8</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>SMALLINT</db:para>
</db:td>
<db:td>
<db:para>16-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint16</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTEGER</db:para>
</db:td>
<db:td>
<db:para>32-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint32</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BIGINT LONG</db:para>
</db:td>
<db:td>
<db:para>64-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint64</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>REAL FLOAT</db:para>
</db:td>
<db:td>
<db:para>32-bit floating point</db:para>
</db:td>
<db:td>
<db:para>typedef qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>FLOAT</db:para>
</db:td>
<db:td>
<db:para>64-bit floating point</db:para>
</db:td>
<db:td>
<db:para>typedef qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DOUBLE</db:para>
</db:td>
<db:td>
<db:para>64-bit floating point</db:para>
</db:td>
<db:td>
<db:para>typedef qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DOUBLE PRECISION</db:para>
</db:td>
<db:td>
<db:para>64-bit Double-precision floating point</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link> for high precision doubles, otherwise qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>VARCHAR STRING</db:para>
</db:td>
<db:td>
<db:para>Character string, Unicode</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CLOB</db:para>
</db:td>
<db:td>
<db:para>Character large string object</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DATE</db:para>
</db:td>
<db:td>
<db:para>Displays date. Format: 'yyyy-mm-dd'</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdate.xml">QDate</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIME</db:para>
</db:td>
<db:td>
<db:para>Displays time. Format is 'hh:mm:ss' in 24-hour format</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qtime.xml">QTime</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIMESTAMP</db:para>
</db:td>
<db:td>
<db:para>Displays a timestamp. Format is 'yyyy-mm-dd hh:mm:ss'</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdatetime.xml">QDateTime</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="mysql-data-types">
<db:title>MySQL Data Types</db:title>
<db:informaltable style="generic" width="90%">
<db:thead>
<db:tr>
<db:th>
<db:para>MySQL data type</db:para>
</db:th>
<db:th>
<db:para>SQL type description</db:para>
</db:th>
<db:th>
<db:para>Recommended input (C++ or Qt data type)</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>TINYINT</db:para>
</db:td>
<db:td>
<db:para>8 bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint8</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TINYINT UNSIGNED</db:para>
</db:td>
<db:td>
<db:para>8 bit unsigned integer</db:para>
</db:td>
<db:td>
<db:para>typedef quint8</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>SMALLINT</db:para>
</db:td>
<db:td>
<db:para>16-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint16</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>SMALLINT UNSIGNED</db:para>
</db:td>
<db:td>
<db:para>16-bit unsigned integer</db:para>
</db:td>
<db:td>
<db:para>typedef quint16</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INT</db:para>
</db:td>
<db:td>
<db:para>32-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint32</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INT UNSIGNED</db:para>
</db:td>
<db:td>
<db:para>32-bit unsigned integer</db:para>
</db:td>
<db:td>
<db:para>typedef quint32</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BIGINT</db:para>
</db:td>
<db:td>
<db:para>64-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint64</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>FLOAT</db:para>
</db:td>
<db:td>
<db:para>32-bit Floating Point</db:para>
</db:td>
<db:td>
<db:para>typedef qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DOUBLE</db:para>
</db:td>
<db:td>
<db:para>64-bit Floating Point</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link> for high precision doubles, otherwise qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CHAR</db:para>
</db:td>
<db:td>
<db:para>Character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>VARCHAR</db:para>
</db:td>
<db:td>
<db:para>Character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TINYTEXT</db:para>
</db:td>
<db:td>
<db:para>Character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TEXT</db:para>
</db:td>
<db:td>
<db:para>Character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>MEDIUMTEXT</db:para>
</db:td>
<db:td>
<db:para>Character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>LONGTEXT</db:para>
</db:td>
<db:td>
<db:para>Character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CLOB</db:para>
</db:td>
<db:td>
<db:para>Character large string object</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>all BLOB types</db:para>
</db:td>
<db:td>
<db:para>BLOB</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DATE</db:para>
</db:td>
<db:td>
<db:para>Date without Time</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdate.xml">QDate</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DATETIME</db:para>
</db:td>
<db:td>
<db:para>Date and Time</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdatetime.xml">QDateTime</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIMESTAMP</db:para>
</db:td>
<db:td>
<db:para>Date and Time</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdatetime.xml">QDateTime</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIME</db:para>
</db:td>
<db:td>
<db:para>Time</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qtime.xml">QTime</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>YEAR</db:para>
</db:td>
<db:td>
<db:para>Year (int)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdatetime.xml">QDateTime</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>ENUM</db:para>
</db:td>
<db:td>
<db:para>Enumeration of Value Set</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="oracle-call-interface-data-types">
<db:title>Oracle Call Interface Data Types</db:title>
<db:informaltable style="generic" width="90%">
<db:thead>
<db:tr>
<db:th>
<db:para>Oracle Call Interface data type</db:para>
</db:th>
<db:th>
<db:para>SQL type description</db:para>
</db:th>
<db:th>
<db:para>Recommended input (C++ or Qt data type)</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>NUMBER</db:para>
</db:td>
<db:td>
<db:para>FLOAT, DOUBLE, PRECISIONc REAL</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link> for high precision doubles, otherwise qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>NUMBER(38)</db:para>
</db:td>
<db:td>
<db:para>INTEGER INT SMALLINT</db:para>
</db:td>
<db:td>
<db:para>typedef qint8/16/32/64</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>NUMBER(p,s)</db:para>
</db:td>
<db:td>
<db:para>NUMERIC(p,s) DECIMAL(p,s)a</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>NVARCHAR2(n)</db:para>
</db:td>
<db:td>
<db:para>Character string (NATIONAL CHARACTER VARYING(n) NATIONAL CHAR VARYING(n) NCHAR VARYING(n))</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>NCHAR(n)</db:para>
</db:td>
<db:td>
<db:para>Character string (NATIONAL CHARACTER(n) NATIONAL CHAR(n) NCHAR(n))</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CHAR(n)</db:para>
</db:td>
<db:td>
<db:para>Character string (CHARACTER(n) CHAR(n))</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CLOB</db:para>
</db:td>
<db:td>
<db:para>Character large string object</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BLOB</db:para>
</db:td>
<db:td>
<db:para>A binary large object</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIMESTAMP</db:para>
</db:td>
<db:td>
<db:para>Year, month, and day values of date, as well as hour, minute, and second values of time</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdatetime.xml">QDateTime</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="odbc-data-types">
<db:title>ODBC Data Types</db:title>
<db:informaltable style="generic" width="90%">
<db:thead>
<db:tr>
<db:th>
<db:para>ODBC data type</db:para>
</db:th>
<db:th>
<db:para>SQL type description</db:para>
</db:th>
<db:th>
<db:para>Recommended input (C++ or Qt data type)</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>BIT</db:para>
</db:td>
<db:td>
<db:para>Boolean</db:para>
</db:td>
<db:td>
<db:para>BOOL</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TINYINT</db:para>
</db:td>
<db:td>
<db:para>8 bit integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint8</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>SMALLINT</db:para>
</db:td>
<db:td>
<db:para>16-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint16</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTEGER</db:para>
</db:td>
<db:td>
<db:para>32-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint32</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BIGINT</db:para>
</db:td>
<db:td>
<db:para>64-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint64</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>REAL</db:para>
</db:td>
<db:td>
<db:para>32-bit Single-precision floating point</db:para>
</db:td>
<db:td>
<db:para>typedef qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>FLOAT</db:para>
</db:td>
<db:td>
<db:para>64-bit Double floating point</db:para>
</db:td>
<db:td>
<db:para>typedef qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DOUBLE</db:para>
</db:td>
<db:td>
<db:para>64-bit Double floating point</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link> for high precision doubles, otherwise qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CHAR</db:para>
</db:td>
<db:td>
<db:para>Character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>VARCHAR</db:para>
</db:td>
<db:td>
<db:para>Character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>LONGVARCHAR</db:para>
</db:td>
<db:td>
<db:para>Character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CLOB</db:para>
</db:td>
<db:td>
<db:para>Character large string object</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DATE</db:para>
</db:td>
<db:td>
<db:para>Character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdate.xml">QDate</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIME</db:para>
</db:td>
<db:td>
<db:para>Character Time, Character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qtime.xml">QTime</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIMESTAMP</db:para>
</db:td>
<db:td>
<db:para>Character Time, Character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdatetime.xml">QDateTime</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="postgresql-data-types">
<db:title>PostgreSQL Data Types</db:title>
<db:informaltable style="generic" width="90%">
<db:thead>
<db:tr>
<db:th>
<db:para>PostgreSQL data type</db:para>
</db:th>
<db:th>
<db:para>SQL type description</db:para>
</db:th>
<db:th>
<db:para>Recommended input (C++ or Qt data type)</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>BOOLEAN</db:para>
</db:td>
<db:td>
<db:para>Boolean</db:para>
</db:td>
<db:td>
<db:para>bool</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>SMALLINT</db:para>
</db:td>
<db:td>
<db:para>16-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint16</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTEGER</db:para>
</db:td>
<db:td>
<db:para>32-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint32</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BIGINT</db:para>
</db:td>
<db:td>
<db:para>64-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint64</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>REAL</db:para>
</db:td>
<db:td>
<db:para>32-bit variable-precision floating point</db:para>
</db:td>
<db:td>
<db:para>typedef qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DOUBLE PRECISION</db:para>
</db:td>
<db:td>
<db:para>64-bit variable-precision floating point</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link> for high precision doubles, otherwise qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DECIMAL VARIABLE</db:para>
</db:td>
<db:td>
<db:para>user-specified precision, exact</db:para>
</db:td>
<db:td>
<db:para>typedef qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>NUMERIC VARIABLE</db:para>
</db:td>
<db:td>
<db:para>user-specified precision, exact</db:para>
</db:td>
<db:td>
<db:para>typedef qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>VARCHAR</db:para>
</db:td>
<db:td>
<db:para>variable-length character string</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CHARACTER</db:para>
</db:td>
<db:td>
<db:para>Character string of fixed-length</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TEXT</db:para>
</db:td>
<db:td>
<db:para>Character string of variable-length</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CLOB</db:para>
</db:td>
<db:td>
<db:para>Character large string object</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIMESTAMP</db:para>
</db:td>
<db:td>
<db:para>8 bytes, both date and time</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdatetime.xml">QDateTime</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIMESTAMP</db:para>
</db:td>
<db:td>
<db:para>8 bytes, both date and time, with time zone</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdatetime.xml">QDateTime</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DATE</db:para>
</db:td>
<db:td>
<db:para>4 bytes, dates only</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdate.xml">QDate</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIME</db:para>
</db:td>
<db:td>
<db:para>8 bytes, times of day only 00:00:00.00 - 23:59:59.99</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qtime.xml">QTime</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIME</db:para>
</db:td>
<db:td>
<db:para>12 bytes times of day only, with time zone 00:00:00.00+12</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdatetime.xml">QDateTime</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="qsqlite-sqlite-version-3-data-types">
<db:title>QSQLITE SQLite version 3 Data Types</db:title>
<db:informaltable style="generic" width="90%">
<db:thead>
<db:tr>
<db:th>
<db:para>QSQLITE SQLite version 3 data type</db:para>
</db:th>
<db:th>
<db:para>SQL type description</db:para>
</db:th>
<db:th>
<db:para>Recommended input (C++ or Qt data type)</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>NULL</db:para>
</db:td>
<db:td>
<db:para>NULL value.</db:para>
</db:td>
<db:td>
<db:para>NULL</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTEGER</db:para>
</db:td>
<db:td>
<db:para>Signed integer, stored in 8, 16, 24, 32, 48, or 64-bits depending on the magnitude of the value.</db:para>
</db:td>
<db:td>
<db:para>typedef qint8/16/32/64</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>REAL</db:para>
</db:td>
<db:td>
<db:para>64-bit floating point value.</db:para>
</db:td>
<db:td>
<db:para>typedef qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TEXT</db:para>
</db:td>
<db:td>
<db:para>Character string (UTF-8, UTF-16BE or UTF-16-LE).</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CLOB</db:para>
</db:td>
<db:td>
<db:para>Character large string object</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BLOB</db:para>
</db:td>
<db:td>
<db:para>The value is a BLOB of data, stored exactly as it was input.</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="mimer-sql-data-types">
<db:title>Mimer SQL Data Types</db:title>
<db:informaltable style="generic" width="90%">
<db:thead>
<db:tr>
<db:th>
<db:para>Mimer SQL type</db:para>
</db:th>
<db:th>
<db:para>SQL type description</db:para>
</db:th>
<db:th>
<db:para>Recommended input (C++ or Qt data type)</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>SMALLINT</db:para>
</db:td>
<db:td>
<db:para>16-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint16</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTEGER</db:para>
</db:td>
<db:td>
<db:para>32-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint32</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTEGER(n)</db:para>
</db:td>
<db:td>
<db:para>Integer with up to 45 digits precision</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BIGINT</db:para>
</db:td>
<db:td>
<db:para>64-bit signed integer</db:para>
</db:td>
<db:td>
<db:para>typedef qint64</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>REAL</db:para>
</db:td>
<db:td>
<db:para>32-bit Single-precision IEEE floating point</db:para>
</db:td>
<db:td>
<db:para>typedef float</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DOUBLE PRECISION</db:para>
</db:td>
<db:td>
<db:para>64-bit Double-precision IEEE floating point</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link> for high precision doubles, otherwise qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>FLOAT</db:para>
</db:td>
<db:td>
<db:para>64-bit Double-precision IEEE floating point</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link> for high precision doubles, otherwise qreal</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>FLOAT(n)</db:para>
</db:td>
<db:td>
<db:para>Floating point with up to 45 digits precision</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DECIMAL(p,s)</db:para>
</db:td>
<db:td>
<db:para>Decimal with up to 45 digits precision and scale</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CHAR</db:para>
</db:td>
<db:td>
<db:para>Fixed-length character Latin-1 string (CHAR or character)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>VARCHAR</db:para>
</db:td>
<db:td>
<db:para>Variable length Latin-1 string (VARCHAR or CHARACTER VARYING)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>NCHAR</db:para>
</db:td>
<db:td>
<db:para>Fixed-length Unicode string (NCHAR or NATIONAL CHARACTER)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>NVARCHAR</db:para>
</db:td>
<db:td>
<db:para>Variable length Unicode string (NVARCHAR or NATIONAL CHARACTER VARYING)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BINARY</db:para>
</db:td>
<db:td>
<db:para>Fixed length binary data</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>VARBINARY</db:para>
</db:td>
<db:td>
<db:para>Variable length binary data (VARBINARY or BINARY VARYING)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BLOB</db:para>
</db:td>
<db:td>
<db:para>Binary large object (BLOB or BINARY LARGE OBJECT)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qbytearray.xml">QByteArray</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>CLOB</db:para>
</db:td>
<db:td>
<db:para>Latin-1 character large object (CLOB or CHARACTER LARGE OBJECT)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>NCLOB</db:para>
</db:td>
<db:td>
<db:para>Unicode character large object (NCLOB or NATIONAL CHARACTER LARGE OBJECT)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>DATE</db:para>
</db:td>
<db:td>
<db:para>Date consisting of year, month, and day</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdate.xml">QDate</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIME</db:para>
</db:td>
<db:td>
<db:para>Time consisting of hours, minute, seconds with optional fractional seconds</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qtime.xml">QTime</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>TIMESTAMP</db:para>
</db:td>
<db:td>
<db:para>Date and time with optional fractional seconds</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qdatetime.xml">QDateTime</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BUILTIN.UUID</db:para>
</db:td>
<db:td>
<db:para>Universally unique identifier</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="quuid.xml">QUuid</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BOOLEAN</db:para>
</db:td>
<db:td>
<db:para>Boolean</db:para>
</db:td>
<db:td>
<db:para>bool</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTERVAL YEAR(7)</db:para>
</db:td>
<db:td>
<db:para>Year, format '±yyyyyyy' (max precision)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTERVAL YEAR(7) TO MONTH</db:para>
</db:td>
<db:td>
<db:para>Year to month, format '±yyyyyyy-mm' (max precision)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTERVAL MONTH(7)</db:para>
</db:td>
<db:td>
<db:para>Month, format '±mmmmmmm' (max precision)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTERVAL DAY(7)</db:para>
</db:td>
<db:td>
<db:para>Day, format '±ddddddd' (max precision)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTERVAL DAY(7) TO HOUR</db:para>
</db:td>
<db:td>
<db:para>Day to hour, format '±ddddddd hh' (max precision)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTERVAL DAY(7) TO MINUTE</db:para>
</db:td>
<db:td>
<db:para>Day to minute, format '±ddddddd hh:mm' (max precision)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTERVAL DAY(7) TO SECOND(9)</db:para>
</db:td>
<db:td>
<db:para>Day to second, format '±ddddddd hh:mm:ss[.fffffffff]' (max precision)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTERVAL HOUR(8)</db:para>
</db:td>
<db:td>
<db:para>Hour, format '±hhhhhhhh' (max precision)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTERVAL HOUR(8) TO MINUTE</db:para>
</db:td>
<db:td>
<db:para>Hour to minute, format '±hhhhhhhh:mm' (max precision)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTERVAL HOUR(8) TO SECOND(9)</db:para>
</db:td>
<db:td>
<db:para>Hour to second, format '±hhhhhhhh:mm:ss[.fffffffff]' (max precision)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTERVAL MINUTE(10)</db:para>
</db:td>
<db:td>
<db:para>Minute, format '±mmmmmmmmmm' (max precision)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTERVAL MINUTE(10) TO SECOND(9)</db:para>
</db:td>
<db:td>
<db:para>Minute to second, format '±mmmmmmmmmm:ss[.fffffffff]' (max precision)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INTERVAL SECOND(12,9)</db:para>
</db:td>
<db:td>
<db:para>Second, format '±ssssssssssss[.fffffffff]' (max precision)</db:para>
</db:td>
<db:td>
<db:para>Mapped to <db:link xlink:href="qstring.xml">QString</db:link></db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
</db:article>
