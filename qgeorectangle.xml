<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGeoRectangle Class</db:title>
<db:productname>QtPositioning</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Positioning Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgeorectangle.xml">QGeoRectangle</db:link> class defines a rectangular geographic area.</db:para>
<db:para>This class was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGeoRectangle</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += positioning</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qgeoshape.xml" xlink:role="class">QGeoShape</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGeoRectangle is part of <db:simplelist><db:member>QtPositioning-positioning</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The rectangle is defined in terms of a <db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link> which specifies the top left coordinate of the rectangle and a <db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link> which specifies the bottom right coordinate of the rectangle.</db:para>
<db:para>A geo rectangle is considered invalid if the top left or bottom right coordinates are invalid or if the top left coordinate is south of the bottom right coordinate.</db:para>
<db:para>Geo rectangles can never cross the poles.</db:para>
<db:para>Several methods behave as though the geo rectangle is defined in terms of a center coordinate, the width of the geo rectangle in degrees and the height of the geo rectangle in degrees.</db:para>
<db:para>If the height or center of a geo rectangle is adjusted such that it would cross one of the poles the height is modified such that the geo rectangle touches but does not cross the pole and that the center coordinate is still in the center of the geo rectangle.</db:para>
<db:para>This class is a <db:link xlink:href="qobject.xml#Q_GADGET">Q_GADGET</db:link> since Qt 5.5. It can be <db:link xlink:href="positioning-cpp-qml.xml#direct-c-value-integration-in-qtpositioning">directly used from C++ and QML</db:link>.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="bottomLeft-prop">
<db:title>[since 5.5] bottomLeft : QGeoCoordinate</db:title>
<db:para>This property holds the bottom left coorindate of this geo rectangle.</db:para>
<db:para>While this property is introduced in Qt 5.5, the related accessor functions exist since the first version of this class.</db:para>
<db:para>This property was introduced in Qt 5.5.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#bottomLeft">bottomLeft</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#setBottomLeft">setBottomLeft</db:link></db:emphasis>(const <db:type><db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link></db:type> &amp;<db:emphasis>bottomLeft</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="bottomRight-prop">
<db:title>[since 5.5] bottomRight : QGeoCoordinate</db:title>
<db:para>This property holds the bottom right coordinate of this geo rectangle.</db:para>
<db:para>While this property is introduced in Qt 5.5, the related accessor functions exist since the first version of this class.</db:para>
<db:para>This property was introduced in Qt 5.5.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#bottomRight">bottomRight</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#setBottomRight">setBottomRight</db:link></db:emphasis>(const <db:type><db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link></db:type> &amp;<db:emphasis>bottomRight</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="center-prop">
<db:title>[since 5.5] center : QGeoCoordinate</db:title>
<db:para>This property holds the center of this geo rectangle.</db:para>
<db:para>While this property is introduced in Qt 5.5, the related accessor functions exist since the first version of this class.</db:para>
<db:para>This property was introduced in Qt 5.5.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#center">center</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#setCenter">setCenter</db:link></db:emphasis>(const <db:type><db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link></db:type> &amp;<db:emphasis>center</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoshape.xml#center">QGeoShape::center</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="height-prop">
<db:title>[since 5.5] height : double</db:title>
<db:para>This property holds the height of this geo rectangle in degrees.</db:para>
<db:para>The property value is undefined if this geo rectangle is invalid.</db:para>
<db:para>If the new height is less than 0.0 or if this geo rectangle is invalid, the property is not changed. To set up the values of an invalid geo rectangle based on the center, width, and height, you should use <db:link xlink:href="qgeorectangle.xml#setCenter">setCenter</db:link>() first to make the geo rectangle valid.</db:para>
<db:para>If the change in height would cause the geo rectangle to cross a pole, the height is adjusted such that the geo rectangle only touches the pole.</db:para>
<db:para>This change is done such that the center coordinate is still at the center of the geo rectangle, which may result in a geo rectangle with a smaller height than expected.</db:para>
<db:para>180.0 is the height used only if the new height is greater or equal than 180.</db:para>
<db:para>While this property is introduced in Qt 5.5, the related accessor functions exist since the first version of this class.</db:para>
<db:para>This property was introduced in Qt 5.5.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>double</db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#height">height</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#setHeight">setHeight</db:link></db:emphasis>(<db:type>double</db:type> <db:emphasis>degreesHeight</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="topLeft-prop">
<db:title>[since 5.5] topLeft : QGeoCoordinate</db:title>
<db:para>This property holds the top left coordinate of this geo rectangle.</db:para>
<db:para>While this property is introduced in Qt 5.5, the related accessor functions exist since the first version of this class.</db:para>
<db:para>This property was introduced in Qt 5.5.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#topLeft">topLeft</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#setTopLeft">setTopLeft</db:link></db:emphasis>(const <db:type><db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link></db:type> &amp;<db:emphasis>topLeft</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="topRight-prop">
<db:title>[since 5.5] topRight : QGeoCoordinate</db:title>
<db:para>This property holds the top right coordinate of this geo rectangle.</db:para>
<db:para>While this property is introduced in Qt 5.5, the related accessor functions exist since the first version of this class.</db:para>
<db:para>This property was introduced in Qt 5.5.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#topRight">topRight</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#setTopRight">setTopRight</db:link></db:emphasis>(const <db:type><db:link xlink:href="qgeocoordinate.xml">QGeoCoordinate</db:link></db:type> &amp;<db:emphasis>topRight</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="width-prop">
<db:title>[since 5.5] width : double</db:title>
<db:para>This property holds the width of this geo rectangle in degrees.</db:para>
<db:para>The property value is undefined if this geo rectangle is invalid.</db:para>
<db:para>If the new width is less than 0.0 or if this geo rectangle is invalid, this function does nothing. To set up the values of an invalid geo rectangle based on the center, width, and height, you should use <db:link xlink:href="qgeorectangle.xml#setCenter">setCenter</db:link>() first to make the geo rectangle valid.</db:para>
<db:para>360.0 is the width used only if the new width is equal or greater than 360. In such cases the leftmost longitude of the geo rectangle is set to -180.0 degrees and the rightmost longitude of the geo rectangle is set to 180.0 degrees.</db:para>
<db:para>While this property is introduced in Qt 5.5, the related accessor functions exist since the first version of this class.</db:para>
<db:para>This property was introduced in Qt 5.5.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>double</db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#width">width</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qgeorectangle.xml#setWidth">setWidth</db:link></db:emphasis>(<db:type>double</db:type> <db:emphasis>degreesWidth</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGeoRectangle">
<db:title>QGeoRectangle::QGeoRectangle()</db:title>
<db:para>Constructs a new, invalid geo rectangle.</db:para>
</db:section>
<db:section xml:id="QGeoRectangle-2">
<db:title>QGeoRectangle::QGeoRectangle(const QGeoShape &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a geo rectangle from the contents of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="QGeoRectangle-3">
<db:title>QGeoRectangle::QGeoRectangle(const QList&lt;QGeoCoordinate&gt; &amp;<db:emphasis>coordinates</db:emphasis>)</db:title>
<db:para>Constructs a new geo rectangle, of minimum size, containing all of the <db:code role="parameter">coordinates</db:code>.</db:para>
</db:section>
<db:section xml:id="QGeoRectangle-4">
<db:title>QGeoRectangle::QGeoRectangle(const QGeoCoordinate &amp;<db:emphasis>topLeft</db:emphasis>, const QGeoCoordinate &amp;<db:emphasis>bottomRight</db:emphasis>)</db:title>
<db:para>Constructs a new geo rectangle with a top left coordinate <db:code role="parameter">topLeft</db:code> and a bottom right coordinate <db:code role="parameter">bottomRight</db:code>.</db:para>
</db:section>
<db:section xml:id="QGeoRectangle-5">
<db:title>QGeoRectangle::QGeoRectangle(const QGeoCoordinate &amp;<db:emphasis>center</db:emphasis>, double <db:emphasis>degreesWidth</db:emphasis>, double <db:emphasis>degreesHeight</db:emphasis>)</db:title>
<db:para>Constructs a new geo rectangle centered at <db:code role="parameter">center</db:code> with a width in degrees of <db:code role="parameter">degreesWidth</db:code> and a height in degrees of <db:code role="parameter">degreesHeight</db:code>.</db:para>
<db:para>If <db:code role="parameter">degreesHeight</db:code> would take the geo rectangle beyond one of the poles, the height of the geo rectangle will be truncated such that the geo rectangle only extends up to the pole. The center of the geo rectangle will be unchanged, and the height will be adjusted such that the center point is at the center of the truncated geo rectangle.</db:para>
</db:section>
<db:section xml:id="QGeoRectangle-1">
<db:title>QGeoRectangle::QGeoRectangle(const QGeoRectangle &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a geo rectangle from the contents of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QGeoRectangle">
<db:title>[noexcept] QGeoRectangle::~QGeoRectangle()</db:title>
<db:para>Destroys this geo rectangle.</db:para>
</db:section>
<db:section xml:id="bottomLeft">
<db:title>QGeoCoordinate QGeoRectangle::bottomLeft() const</db:title>
<db:para>Returns the bottom left coordinate of this geo rectangle.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qgeorectangle.xml#bottomLeft-prop">bottomLeft</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#setBottomLeft">setBottomLeft</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="bottomRight">
<db:title>QGeoCoordinate QGeoRectangle::bottomRight() const</db:title>
<db:para>Returns the bottom right coordinate of this geo rectangle.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qgeorectangle.xml#bottomRight-prop">bottomRight</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#setBottomRight">setBottomRight</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="center">
<db:title>QGeoCoordinate QGeoRectangle::center() const</db:title>
<db:para>Returns the center of this geo rectangle. Equivalent to <db:link xlink:href="qgeoshape.xml#center">QGeoShape::center</db:link>().</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qgeorectangle.xml#center-prop">center</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#setCenter">setCenter</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contains">
<db:title>bool QGeoRectangle::contains(const QGeoRectangle &amp;<db:emphasis>rectangle</db:emphasis>) const</db:title>
<db:para>Returns whether the geo rectangle <db:code role="parameter">rectangle</db:code> is contained within this geo rectangle.</db:para>
</db:section>
<db:section xml:id="height">
<db:title>double QGeoRectangle::height() const</db:title>
<db:para>Returns the height of this geo rectangle in degrees.</db:para>
<db:para>The return value is undefined if this geo rectangle is invalid.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qgeorectangle.xml#height-prop">height</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#setHeight">setHeight</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="intersects">
<db:title>bool QGeoRectangle::intersects(const QGeoRectangle &amp;<db:emphasis>rectangle</db:emphasis>) const</db:title>
<db:para>Returns whether the geo rectangle <db:code role="parameter">rectangle</db:code> intersects this geo rectangle.</db:para>
<db:para>If the top or bottom edges of both geo rectangles are at one of the poles the geo rectangles are considered to be intersecting, since the longitude is irrelevant when the edges are at the pole.</db:para>
</db:section>
<db:section xml:id="setBottomLeft">
<db:title>void QGeoRectangle::setBottomLeft(const QGeoCoordinate &amp;<db:emphasis>bottomLeft</db:emphasis>)</db:title>
<db:para>Sets the bottom left coordinate of this geo rectangle to <db:code role="parameter">bottomLeft</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qgeorectangle.xml#bottomLeft-prop">bottomLeft</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#bottomLeft">bottomLeft</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBottomRight">
<db:title>void QGeoRectangle::setBottomRight(const QGeoCoordinate &amp;<db:emphasis>bottomRight</db:emphasis>)</db:title>
<db:para>Sets the bottom right coordinate of this geo rectangle to <db:code role="parameter">bottomRight</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qgeorectangle.xml#bottomRight-prop">bottomRight</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#bottomRight">bottomRight</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCenter">
<db:title>void QGeoRectangle::setCenter(const QGeoCoordinate &amp;<db:emphasis>center</db:emphasis>)</db:title>
<db:para>Sets the center of this geo rectangle to <db:code role="parameter">center</db:code>.</db:para>
<db:para>If this causes the geo rectangle to cross on of the poles the height of the geo rectangle will be truncated such that the geo rectangle only extends up to the pole. The center of the geo rectangle will be unchanged, and the height will be adjusted such that the center point is at the center of the truncated geo rectangle.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qgeorectangle.xml#center-prop">center</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#center">center</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setHeight">
<db:title>void QGeoRectangle::setHeight(double <db:emphasis>degreesHeight</db:emphasis>)</db:title>
<db:para>Sets the height of this geo rectangle in degrees to <db:code role="parameter">degreesHeight</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qgeorectangle.xml#height-prop">height</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#height">height</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTopLeft">
<db:title>void QGeoRectangle::setTopLeft(const QGeoCoordinate &amp;<db:emphasis>topLeft</db:emphasis>)</db:title>
<db:para>Sets the top left coordinate of this geo rectangle to <db:code role="parameter">topLeft</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qgeorectangle.xml#topLeft-prop">topLeft</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#topLeft">topLeft</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTopRight">
<db:title>void QGeoRectangle::setTopRight(const QGeoCoordinate &amp;<db:emphasis>topRight</db:emphasis>)</db:title>
<db:para>Sets the top right coordinate of this geo rectangle to <db:code role="parameter">topRight</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qgeorectangle.xml#topRight-prop">topRight</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#topRight">topRight</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setWidth">
<db:title>void QGeoRectangle::setWidth(double <db:emphasis>degreesWidth</db:emphasis>)</db:title>
<db:para>Sets the width of this geo rectangle in degrees to <db:code role="parameter">degreesWidth</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qgeorectangle.xml#width-prop">width</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#width">width</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="toString">
<db:title>[since 5.5] QString QGeoRectangle::toString() const</db:title>
<db:para>Returns the geo rectangle properties as a string.</db:para>
<db:para>This function was introduced in Qt 5.5.</db:para>
</db:section>
<db:section xml:id="topLeft">
<db:title>QGeoCoordinate QGeoRectangle::topLeft() const</db:title>
<db:para>Returns the top left coordinate of this geo rectangle.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qgeorectangle.xml#topLeft-prop">topLeft</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#setTopLeft">setTopLeft</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="topRight">
<db:title>QGeoCoordinate QGeoRectangle::topRight() const</db:title>
<db:para>Returns the top right coordinate of this geo rectangle.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qgeorectangle.xml#topRight-prop">topRight</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#setTopRight">setTopRight</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="translate">
<db:title>void QGeoRectangle::translate(double <db:emphasis>degreesLatitude</db:emphasis>, double <db:emphasis>degreesLongitude</db:emphasis>)</db:title>
<db:para>Translates this geo rectangle by <db:code role="parameter">degreesLatitude</db:code> northwards and <db:code role="parameter">degreesLongitude</db:code> eastwards.</db:para>
<db:para>Negative values of <db:code role="parameter">degreesLatitude</db:code> and <db:code role="parameter">degreesLongitude</db:code> correspond to southward and westward translation respectively.</db:para>
<db:para>If the translation would have caused the geo rectangle to cross a pole the geo rectangle will be translated until the top or bottom edge of the geo rectangle touches the pole but not further.</db:para>
</db:section>
<db:section xml:id="translated">
<db:title>QGeoRectangle QGeoRectangle::translated(double <db:emphasis>degreesLatitude</db:emphasis>, double <db:emphasis>degreesLongitude</db:emphasis>) const</db:title>
<db:para>Returns a copy of this geo rectangle translated by <db:code role="parameter">degreesLatitude</db:code> northwards and <db:code role="parameter">degreesLongitude</db:code> eastwards.</db:para>
<db:para>Negative values of <db:code role="parameter">degreesLatitude</db:code> and <db:code role="parameter">degreesLongitude</db:code> correspond to southward and westward translation respectively.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#translate">translate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="united">
<db:title>QGeoRectangle QGeoRectangle::united(const QGeoRectangle &amp;<db:emphasis>rectangle</db:emphasis>) const</db:title>
<db:para>Returns the smallest geo rectangle which contains both this geo rectangle and <db:code role="parameter">rectangle</db:code>.</db:para>
<db:para>If the centers of the two geo rectangles are separated by exactly 180.0 degrees then the width is set to 360.0 degrees with the leftmost longitude set to -180.0 degrees and the rightmost longitude set to 180.0 degrees. This is done to ensure that the result is independent of the order of the operands.</db:para>
</db:section>
<db:section xml:id="width">
<db:title>double QGeoRectangle::width() const</db:title>
<db:para>Returns the width of this geo rectangle in degrees.</db:para>
<db:para>The return value is undefined if this geo rectangle is invalid.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qgeorectangle.xml#width-prop">width</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeorectangle.xml#setWidth">setWidth</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QGeoRectangle::operator!=(const QGeoRectangle &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns whether this geo rectangle is not equal to <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QGeoRectangle &amp;QGeoRectangle::operator=(const QGeoRectangle &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns <db:code role="parameter">other</db:code> to this geo rectangle and returns a reference to this geo rectangle.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QGeoRectangle::operator==(const QGeoRectangle &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns whether this geo rectangle is equal to <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-7c">
<db:title>QGeoRectangle QGeoRectangle::operator|(const QGeoRectangle &amp;<db:emphasis>rectangle</db:emphasis>) const</db:title>
<db:para>Returns the smallest geo rectangle which contains both this geo rectangle and <db:code role="parameter">rectangle</db:code>.</db:para>
<db:para>If the centers of the two geo rectangles are separated by exactly 180.0 degrees then the width is set to 360.0 degrees with the leftmost longitude set to -180.0 degrees and the rightmost longitude set to 180.0 degrees. This is done to ensure that the result is independent of the order of the operands.</db:para>
</db:section>
<db:section xml:id="operator-7c-eq">
<db:title>QGeoRectangle &amp;QGeoRectangle::operator|=(const QGeoRectangle &amp;<db:emphasis>rectangle</db:emphasis>)</db:title>
<db:para>Returns the smallest geo rectangle which contains both this geo rectangle and <db:code role="parameter">rectangle</db:code>.</db:para>
<db:para>If the centers of the two geo rectangles are separated by exactly 180.0 degrees then the width is set to 360.0 degrees with the leftmost longitude set to -180.0 degrees and the rightmost longitude set to 180.0 degrees. This is done to ensure that the result is independent of the order of the operands.</db:para>
</db:section>
</db:section>
</db:article>
