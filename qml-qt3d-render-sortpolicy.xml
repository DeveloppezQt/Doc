<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>SortPolicy QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides storage for the sort types to be used.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Render 2.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>FrameGraphNode</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qsortpolicy.xml">QSortPolicy</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qml-qt3d-render-sortpolicy.xml">SortPolicy</db:link> class stores the sorting type used by the FrameGraph. The sort types determine how drawable entities are sorted before drawing to determine the drawing order. When <db:link xlink:href="qml-qt3d-render-sortpolicy.xml">SortPolicy</db:link> is present in the FrameGraph, the sorting mechanism is determined by the <db:link xlink:href="qml-qt3d-render-sortpolicy.xml#sortTypes-prop">sortTypes</db:link> list. Multiple sort types can be used simultaneously. If <db:link xlink:href="qml-qt3d-render-sortpolicy.xml">SortPolicy</db:link> is not present in the FrameGraph, entities are drawn in the order they appear in the entity hierarchy.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="sortTypes-prop">
<db:title>sortTypes : list&lt;int&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;int&gt;</db:type>
<db:varname>sortTypes</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the sorting types to be used.</db:para>
<db:para>This list can include the following values:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>StateChangeCost - sort the objects so as to minimize the cost of changing from the currently rendered state</db:para>
</db:listitem>
<db:listitem>
<db:para>BackToFront - sort the objects from back to front based on inverted z order. More accurately, the sorting key is the z component of the projection of the camera-to-object-center vector onto the camera's view vector.</db:para>
</db:listitem>
<db:listitem>
<db:para>Material - sort the objects based on their material (shader) value.</db:para>
</db:listitem>
<db:listitem>
<db:para>FrontToBack - sort the objects from front to back. The opposite of BackToFront.</db:para>
</db:listitem>
<db:listitem>
<db:para>[since 5.14] Texture - sort the objects to minimize texture changes.</db:para>
</db:listitem>
<db:listitem>
<db:para>[since 5.15] Uniform - sort the objects to minimize uniform changes.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:article>
