<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Thermostat</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A user interface for a home thermostat, implemented in Qt Quick. It demonstrates how to create responsive applications that scale from large desktop displays to mobile and small embedded displays.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Light theme</db:para>
</db:th>
<db:th>
<db:para>Dark theme</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/small_light.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/small_dark.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/mobile_light.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/mobile_dark.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/desktop_light.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/desktop_dark.png"/>
</db:imageobject>
</db:inlinemediaobject></db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para><db:emphasis>Thermostat</db:emphasis> demonstrates a sample thermostat application that is fully responsive. The example can be run and edited in both <db:link xlink:href="https://www.qt.io/product/ui-design-tools">Qt Design Studio</db:link> and <db:link xlink:href="http://doc.qt.io/qtcreator/creator-configuring.html">Qt Creator</db:link>. It shows how to implement different designs depending on the window size.</db:para>
<db:section xml:id="responsive-design">
<db:title>Responsive Design</db:title>
<db:para>As mentioned above, the application has support for a variety of display sizes.It can scale dynamically when the user changes the window size, or the application will select the correct sizes based on the available display on mobile targets. Properties that specify the display size and control which layout is currently in use have been created in Constants.qml to achieve this behavior.</db:para>
<db:programlisting language="cpp">    property bool isBigDesktopLayout: true
    property bool isSmallDesktopLayout: false
    property bool isMobileLayout: false
    property bool isSmallLayout: false
</db:programlisting>
<db:para>In App.qml, the properties were bound to the window height and width at application startup.</db:para>
<db:programlisting language="cpp">    Component.onCompleted: function() {
        Constants.isBigDesktopLayout = Qt.binding( function(){
            return window.width &amp;gt;= Constants.width &amp;amp;&amp;amp; window.width &amp;gt;= window.height
        })
        Constants.isSmallDesktopLayout = Qt.binding( function(){
            return window.width &amp;gt;= 647 &amp;amp;&amp;amp; window.width &amp;lt; Constants.width &amp;amp;&amp;amp; window.width &amp;gt;= window.height
        })
        Constants.isMobileLayout = Qt.binding( function(){
            return window.width &amp;lt; window.height
        })
        Constants.isSmallLayout = Qt.binding( function(){
            return window.width &amp;lt; 647 &amp;amp;&amp;amp; window.width &amp;gt;= window.height
        })
    }
</db:programlisting>
<db:para>The states are then used to control the properties of the component such as width, height, fontSize, position, layout (column or row), etc.</db:para>
<db:programlisting language="cpp">    states: [
        State {
            name: &quot;desktopLayout&quot;
            when: Constants.isBigDesktopLayout || Constants.isSmallDesktopLayout
            PropertyChanges {
                target: statistics
                leftPadding: 53
                rightPadding: 53
                topPadding: 23
                bottomPadding: 43
            }
            PropertyChanges {
                target: scrollView
                isBackgroundVisible: false
                delegateWidth: 350
                delegateHeight: 182
                statisticsChartWidth: 1098
                statisticsChartHeight: 647
            }
        },
        State {
            name: &quot;mobileLayout&quot;
            when: Constants.isMobileLayout
            PropertyChanges {
                target: statistics
                leftPadding: 0
                rightPadding: 0
                topPadding: 0
                bottomPadding: 43
            }
            PropertyChanges {
                target: scrollView
                isBackgroundVisible: false
                delegateWidth: 327
                delegateHeight: 100
                statisticsChartWidth: 327
                statisticsChartHeight: 383
            }
        },
        State {
            name: &quot;smallLayout&quot;
            when: Constants.isSmallLayout
            PropertyChanges {
                target: statistics
                leftPadding: 0
                rightPadding: 0
                topPadding: 0
                bottomPadding: 43
            }
            PropertyChanges {
                target: scrollView
                isBackgroundVisible: true
                delegateWidth: 332
                delegateHeight: 80
                statisticsChartWidth: 401
                statisticsChartHeight: 280
            }
        }
    ]
</db:programlisting>
</db:section>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtdoc.git/tree/examples/demos/thermostat?h=6.7">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
