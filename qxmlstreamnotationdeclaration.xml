<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QXmlStreamNotationDeclaration Class</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.15.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qxmlstreamnotationdeclaration.xml">QXmlStreamNotationDeclaration</db:link> class represents a DTD notation declaration.</db:para>
<db:para>This class was introduced in Qt 4.3.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QXmlStreamNotationDeclaration</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.3</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QXmlStreamNotationDeclaration is part of <db:simplelist><db:member>xml-tools</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>An notation declaration consists of a <db:link xlink:href="qxmlstreamnotationdeclaration.xml#name">name</db:link>(), a <db:link xlink:href="qxmlstreamnotationdeclaration.xml#systemId">systemId</db:link>(), and a <db:link xlink:href="qxmlstreamnotationdeclaration.xml#publicId">publicId</db:link>().</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QXmlStreamNotationDeclaration">
<db:title>QXmlStreamNotationDeclaration::QXmlStreamNotationDeclaration()</db:title>
<db:constructorsynopsis>
<db:methodname>QXmlStreamNotationDeclaration</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QXmlStreamNotationDeclaration()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates an empty notation declaration.</db:para>
</db:section>
<db:section xml:id="QXmlStreamNotationDeclaration-1">
<db:title>QXmlStreamNotationDeclaration::QXmlStreamNotationDeclaration(const QXmlStreamNotationDeclaration &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QXmlStreamNotationDeclaration</db:methodname>
<db:methodparam>
<db:type>const QXmlStreamNotationDeclaration &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QXmlStreamNotationDeclaration(const QXmlStreamNotationDeclaration &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QXmlStreamNotationDeclaration">
<db:title>QXmlStreamNotationDeclaration::~QXmlStreamNotationDeclaration()</db:title>
<db:destructorsynopsis>
<db:methodname>~QXmlStreamNotationDeclaration</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QXmlStreamNotationDeclaration()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destructs this notation declaration.</db:para>
</db:section>
<db:section xml:id="name">
<db:title>QStringRef QXmlStreamNotationDeclaration::name() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QStringRef</db:type>
<db:methodname>name</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QStringRef name() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the notation name.</db:para>
</db:section>
<db:section xml:id="publicId">
<db:title>QStringRef QXmlStreamNotationDeclaration::publicId() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QStringRef</db:type>
<db:methodname>publicId</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QStringRef publicId() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the public identifier.</db:para>
</db:section>
<db:section xml:id="systemId">
<db:title>QStringRef QXmlStreamNotationDeclaration::systemId() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QStringRef</db:type>
<db:methodname>systemId</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QStringRef systemId() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the system identifier.</db:para>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QXmlStreamNotationDeclaration::operator!=(const QXmlStreamNotationDeclaration &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator!=</db:methodname>
<db:methodparam>
<db:type>const QXmlStreamNotationDeclaration &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator!=(const QXmlStreamNotationDeclaration &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Compares this notation declaration with <db:code role="parameter">other</db:code> and returns true if they are not equal; otherwise returns false.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QXmlStreamNotationDeclaration &amp;QXmlStreamNotationDeclaration::operator=(const QXmlStreamNotationDeclaration &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QXmlStreamNotationDeclaration &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QXmlStreamNotationDeclaration &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QXmlStreamNotationDeclaration &amp; operator=(const QXmlStreamNotationDeclaration &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Assigns <db:code role="parameter">other</db:code> to this notation declaration.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QXmlStreamNotationDeclaration::operator==(const QXmlStreamNotationDeclaration &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>const QXmlStreamNotationDeclaration &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(const QXmlStreamNotationDeclaration &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Compares this notation declaration with <db:code role="parameter">other</db:code> and returns true if they are equal; otherwise returns false.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="QXmlStreamNotationDeclarations-typedef">
<db:title>QXmlStreamNotationDeclarations</db:title>
<db:typedefsynopsis>
<db:typedefname>QXmlStreamNotationDeclarations</db:typedefname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:typedefsynopsis>
<db:para>Synonym for <db:link xlink:href="qvector.xml">QVector</db:link>&lt;<db:link xlink:href="qxmlstreamnotationdeclaration.xml">QXmlStreamNotationDeclaration</db:link>&gt;.</db:para>
</db:section>
</db:section>
</db:article>
