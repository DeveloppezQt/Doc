<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QQuickStyle Class</db:title>
<db:productname>QtQuickControls2</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 2 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The QQQuickStyle class allows configuring the application style.</db:para>
<db:para>This class was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QQuickStyle</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qquickstyle.xml">QQuickStyle</db:link> provides API for querying and configuring the application <db:link xlink:href="qtquickcontrols2-styles.xml">styles</db:link> of Qt Quick Controls 2.</db:para>
<db:programlisting language="cpp">#include &lt;QGuiApplication&gt;
#include &lt;QQmlApplicationEngine&gt;
#include &lt;QQuickStyle&gt;

int main(int argc, char *argv[])
{
    QGuiApplication::setAttribute(Qt::AA_EnableHighDpiScaling);
    QGuiApplication app(argc, argv);

    QQuickStyle::setStyle(&quot;Material&quot;);

    QQmlApplicationEngine engine;
    engine.load(QUrl(&quot;qrc:/main.qml&quot;));

    return app.exec();
}
</db:programlisting>
<db:note>
<db:para>The style must be configured <db:emphasis role="bold">before</db:emphasis> loading QML that imports Qt Quick Controls 2. It is not possible to change the style after the QML types have been registered.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols2-styles.xml">Styling Qt Quick Controls 2</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="name">
<db:title>[static] QString QQuickStyle::name()</db:title>
<db:para>Returns the name of the application style.</db:para>
<db:note>
<db:para>The application style can be specified by passing a <db:code>-style</db:code> command line argument. Therefore <db:code>name()</db:code> may not return a fully resolved value if called before constructing a <db:link xlink:href="qguiapplication.xml">QGuiApplication</db:link>.</db:para>
</db:note>
</db:section>
<db:section xml:id="path">
<db:title>[static] QString QQuickStyle::path()</db:title>
<db:para>Returns the path of an overridden application style, or an empty string if the style is one of the built-in Qt Quick Controls 2 styles.</db:para>
<db:note>
<db:para>The application style can be specified by passing a <db:code>-style</db:code> command line argument. Therefore <db:code>path()</db:code> may not return a fully resolved value if called before constructing a <db:link xlink:href="qguiapplication.xml">QGuiApplication</db:link>.</db:para>
</db:note>
</db:section>
<db:section xml:id="setStyle">
<db:title>[static] void QQuickStyle::setStyle(const QString &amp;<db:emphasis>style</db:emphasis>)</db:title>
<db:para>Sets the application style to <db:code role="parameter">style</db:code>.</db:para>
<db:note>
<db:para>The style must be configured <db:emphasis role="bold">before</db:emphasis> loading QML that imports Qt Quick Controls 2. It is not possible to change the style after the QML types have been registered.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
