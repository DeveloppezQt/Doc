<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt QML QML Types</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>List of QML types provided by the Qt QML module.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="details"/>
<db:para>The <db:link xlink:href="qtqml-index.xml">Qt Qml</db:link> module provides the definition and implementation of various convenience types that can be used with the QML language. This includes elementary QML types, which can provide the basis for further extensions to the QML language. The <db:link xlink:href="qml-qtqml-qtobject.xml">QtObject</db:link> and <db:link xlink:href="qml-qtqml-component.xml">Component</db:link> object types are non-visual and provide building-blocks for extensions to QML.</db:para>
<db:section xml:id="importing-qtqml">
<db:title>Importing QtQml</db:title>
<db:para>The types provided by the <db:code>QtQml</db:code> module are only available in a QML document if that document imports the <db:code>QtQml</db:code> namespace (or if the document imports the <db:code>QtQuick</db:code> namespace, as noted below).</db:para>
<db:para>To use the module, import the <db:code>QtQml</db:code> module with the following statement:</db:para>
<db:programlisting language="qml">import QtQml
</db:programlisting>
<db:para>Many clients will never need to use the <db:code>QtQml</db:code> module directly, but will rather import it indirectly via the <db:code>QtQuick</db:code> module as follows:</db:para>
<db:programlisting language="qml">import QtQuick
</db:programlisting>
<db:para>See the <db:link xlink:href="qtquick-index.xml">Qt Quick</db:link> module documentation for more information about its types.</db:para>
<db:para>The QML types for creating lists and models, such as <db:link xlink:href="qml-qtqml-models-listmodel.xml">ListModel</db:link> and <db:link xlink:href="qml-qtqml-models-listelement.xml">ListElement</db:link>, belong to a submodule, <db:link xlink:href="qtqml-models-qmlmodule.xml">QtQml.Models</db:link>.</db:para>
<db:para>The <db:link xlink:href="qml-qtqml-workerscript-workerscript.xml">WorkerScript</db:link> QML type belongs to the submodule <db:link xlink:href="qtqml-workerscript-qmlmodule.xml">QtQml.WorkerScript</db:link>.</db:para>
<db:para>Both, <db:link xlink:href="qtqml-models-qmlmodule.xml">QtQml.Models</db:link> and <db:link xlink:href="qtqml-workerscript-qmlmodule.xml">QtQml.WorkerScript</db:link> are automatically imported whenever you import <db:code>QtQml</db:code>. All their types are then available, too.</db:para>
<db:para>The <db:link xlink:href="qtquick-index.xml">Qt Quick</db:link> module automatically imports <db:code>QtQml</db:code> and, transitively, <db:link xlink:href="qtqml-models-qmlmodule.xml">QtQml.Models</db:link> and <db:link xlink:href="qtqml-workerscript-qmlmodule.xml">QtQml.WorkerScript</db:link>, making all their types available whenever you import <db:code>QtQuick</db:code>.</db:para>
</db:section>
<db:section xml:id="value-types">
<db:title>Value Types</db:title>
<db:para>The following <db:link xlink:href="qtqml-typesystem-valuetypes.xml">QML Value Types</db:link> are provided:</db:para>
<db:variablelist role="qtqmlvaluetypes">
<db:varlistentry>
<db:term><db:link xlink:href="qml-point.xml" xlink:role="">point</db:link></db:term>
<db:listitem>
<db:para>a value with x and y attributes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-rect.xml" xlink:role="">rect</db:link></db:term>
<db:listitem>
<db:para>a value with x, y, width and height attributes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-size.xml" xlink:role="">size</db:link></db:term>
<db:listitem>
<db:para>a value with width and height attributes.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="sequence-types">
<db:title>Sequence Types</db:title>
<db:para>The following <db:link xlink:href="qtqml-typesystem-sequencetypes.xml">QML sequence types</db:link> are provided by the Qt QML module in addition to the ones registered with each value type and object type:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:code>std::vector&lt;QString&gt;</db:code></db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>std::vector&lt;QUrl&gt;</db:code></db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>std::vector&lt;bool&gt;</db:code></db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>std::vector&lt;int&gt;</db:code></db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>std::vector&lt;float&gt;</db:code></db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>std::vector&lt;double&gt;</db:code></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="object-types">
<db:title>Object Types</db:title>
<db:para>The following <db:link xlink:href="qtqml-typesystem-objecttypes.xml">QML object types</db:link> are provided:</db:para>
</db:section>
<db:section>
<db:title>Contents</db:title>
<db:variablelist role="members">
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtqml-binding.xml" xlink:role="">Binding</db:link></db:term>
<db:listitem>
<db:para>Enables the arbitrary creation of property bindings.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtqml-component.xml" xlink:role="">Component</db:link></db:term>
<db:listitem>
<db:para>Encapsulates a QML component definition.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtqml-connections.xml" xlink:role="">Connections</db:link></db:term>
<db:listitem>
<db:para>Describes generalized connections to signals.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtqml-date.xml" xlink:role="">Date</db:link></db:term>
<db:listitem>
<db:para>Provides date functions.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtqml-locale.xml" xlink:role="">Locale</db:link></db:term>
<db:listitem>
<db:para>Provides locale specific properties and formatted data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtqml-loggingcategory.xml" xlink:role="">LoggingCategory</db:link></db:term>
<db:listitem>
<db:para>Defines a logging category in QML.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtqml-number.xml" xlink:role="">Number</db:link></db:term>
<db:listitem>
<db:para>The Number object provides represents a number value.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtqml-qt.xml" xlink:role="">Qt</db:link></db:term>
<db:listitem>
<db:para>Provides a global object with useful enums and functions from Qt.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtqml-qtobject.xml" xlink:role="">QtObject</db:link></db:term>
<db:listitem>
<db:para>A basic QML type.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtqml-timer.xml" xlink:role="">Timer</db:link></db:term>
<db:listitem>
<db:para>Triggers a handler at a specified interval.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qml-qtqml-xmlhttprequest.xml" xlink:role="">XMLHttpRequest</db:link></db:term>
<db:listitem>
<db:para>Object for sending requests to a server.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
</db:article>
