<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAudioEncoderSettingsControl Class</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qaudioencodersettingscontrol.xml">QAudioEncoderSettingsControl</db:link> class provides access to the settings of a media service that performs audio encoding.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAudioEncoderSettingsControl</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += multimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qmediacontrol.xml" xlink:role="class">QMediaControl</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QAudioEncoderSettingsControl is part of <db:simplelist><db:member>multimedia_control</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>If a <db:link xlink:href="qmediaservice.xml">QMediaService</db:link> supports encoding audio data it will implement <db:link xlink:href="qaudioencodersettingscontrol.xml">QAudioEncoderSettingsControl</db:link>. This control provides information about the limits of restricted audio encoder options and allows the selection of a set of audio encoder settings as specified in a <db:link xlink:href="qaudioencodersettings.xml">QAudioEncoderSettings</db:link> object.</db:para>
<db:para>The functionality provided by this control is exposed to application code through the <db:link xlink:href="qmediarecorder.xml">QMediaRecorder</db:link> class.</db:para>
<db:para>The interface name of <db:link xlink:href="qaudioencodersettingscontrol.xml">QAudioEncoderSettingsControl</db:link> is <db:code>org.qt-project.qt.audioencodersettingscontrol/5.0</db:code> as defined in <db:link xlink:href="qaudioencodersettingscontrol.xml#QAudioEncoderSettingsControl_iid">QAudioEncoderSettingsControl_iid</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediaservice.xml#requestControl">QMediaService::requestControl</db:link>()</db:member>
<db:member><db:link xlink:href="qmediarecorder.xml">QMediaRecorder</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QAudioEncoderSettingsControl">
<db:title>[explicit protected] QAudioEncoderSettingsControl::QAudioEncoderSettingsControl(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Create a new audio encoder settings control object with the given <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QAudioEncoderSettingsControl">
<db:title>[virtual noexcept] QAudioEncoderSettingsControl::~QAudioEncoderSettingsControl()</db:title>
<db:para>Destroys the audio encoder settings control.</db:para>
</db:section>
<db:section xml:id="audioSettings">
<db:title>[pure virtual] QAudioEncoderSettings QAudioEncoderSettingsControl::audioSettings() const</db:title>
<db:para>Returns the audio encoder settings.</db:para>
<db:para>The returned value may be different tha passed to <db:link xlink:href="qaudioencodersettingscontrol.xml#setAudioSettings">QAudioEncoderSettingsControl::setAudioSettings</db:link>() if the settings contains the default or undefined parameters. In this case if the undefined parameters are already resolved, they should be returned.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettingscontrol.xml#setAudioSettings">setAudioSettings</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="codecDescription">
<db:title>[pure virtual] QString QAudioEncoderSettingsControl::codecDescription(const QString &amp;<db:emphasis>codec</db:emphasis>) const</db:title>
<db:para>Returns description of audio <db:code role="parameter">codec</db:code>.</db:para>
</db:section>
<db:section xml:id="setAudioSettings">
<db:title>[pure virtual] void QAudioEncoderSettingsControl::setAudioSettings(const QAudioEncoderSettings &amp;<db:emphasis>settings</db:emphasis>)</db:title>
<db:para>Sets the selected audio <db:code role="parameter">settings</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaudioencodersettingscontrol.xml#audioSettings">audioSettings</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="supportedAudioCodecs">
<db:title>[pure virtual] QStringList QAudioEncoderSettingsControl::supportedAudioCodecs() const</db:title>
<db:para>Returns the list of supported audio codec names.</db:para>
</db:section>
<db:section xml:id="supportedSampleRates">
<db:title>[pure virtual] QList&lt;int&gt; QAudioEncoderSettingsControl::supportedSampleRates(const QAudioEncoderSettings &amp;<db:emphasis>settings</db:emphasis> = QAudioEncoderSettings(), bool *<db:emphasis>continuous</db:emphasis> = Q_NULLPTR) const</db:title>
<db:para>Returns the list of supported audio sample rates, if known.</db:para>
<db:para>If non null audio <db:code role="parameter">settings</db:code> parameter is passed, the returned list is reduced to sample rates supported with partial settings applied.</db:para>
<db:para>It can be used for example to query the list of sample rates, supported by specific audio codec.</db:para>
<db:para>If the encoder supports arbitrary sample rates within the supported rates range, *<db:code role="parameter">continuous</db:code> is set to true, otherwise *<db:code role="parameter">continuous</db:code> is set to false.</db:para>
</db:section>
</db:section>
<db:section xml:id="macro-documentation">
<db:title>Macro Documentation</db:title>
<db:section xml:id="QAudioEncoderSettingsControl_iid">
<db:title>QAudioEncoderSettingsControl_iid</db:title>
<db:para><db:code>org.qt-project.qt.audioencodersettingscontrol/5.0</db:code></db:para>
<db:para>Defines the interface name of the <db:link xlink:href="qaudioencodersettingscontrol.xml">QAudioEncoderSettingsControl</db:link> class.</db:para>
</db:section>
</db:section>
</db:article>
