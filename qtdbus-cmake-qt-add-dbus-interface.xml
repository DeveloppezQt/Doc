<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>qt_add_dbus_interface</db:title>
<db:productname>QtDBus</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt D-Bus Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Generates C++ sources implementing an interface for a D-Bus interface description file.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Generates C++ sources implementing an interface for a D-Bus interface description file.</db:para>
<db:para>The command is defined in the DBus component of the Qt6 package. Load the package with:</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS DBus)
</db:programlisting>
<db:para>This command was introduced in Qt 6.0.</db:para>
<db:section xml:id="synopsis">
<db:title>Synopsis</db:title>
<db:programlisting language="cpp" role="bad">qt_add_dbus_interface(&amp;lt;VAR&amp;gt; dbus_spec basename)
</db:programlisting>
<db:para>If <db:link xlink:href="cmake-qt5-and-qt6-compatibility.xml#versionless-commands">versionless commands</db:link> are disabled, use qt6_add_dbus_interface() instead. It supports the same set of arguments as this command.</db:para>
</db:section>
<db:section xml:id="description">
<db:title>Description</db:title>
<db:para>Generates C++ sources implementing an interface for a D-Bus interface description file defined in dbus_spec. The generated files are named after basename: basename.h, basename.cpp, basename.moc. The paths of the files are added to &lt;VAR&gt;.</db:para>
<db:para>The function sets up a call to the <db:link xlink:href="qdbusxml2cpp.xml">Qt D-Bus XML compiler (qdbusxml2cpp)</db:link> in interface (proxy) mode. By default, qdbusxml2cpp generates a C++ class named after the interface name, with a namespaced alias:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>D-Bus Interface Name</db:para>
</db:th>
<db:th>
<db:para>Class name</db:para>
</db:th>
<db:th>
<db:para>Namespaced name</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>org.example.chat</db:para>
</db:td>
<db:td>
<db:para>OrgExampleChatInterface</db:para>
</db:td>
<db:td>
<db:para>org.example.chat</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="options">
<db:title>Options</db:title>
<db:para>Options can be set using set_source_files_properties on the dbus_spec:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Option</db:para>
</db:th>
<db:th>
<db:para>Value</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>CLASSNAME</db:para>
</db:td>
<db:td>
<db:para>class_name</db:para>
</db:td>
<db:td>
<db:para>Override the default interface class name with class_name.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>NO_NAMESPACE</db:para>
</db:td>
<db:td>
<db:para>boolean</db:para>
</db:td>
<db:td>
<db:para>Do not generate the namespaced name if set to ON.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>INCLUDE</db:para>
</db:td>
<db:td>
<db:para>path</db:para>
</db:td>
<db:td>
<db:para>Add an #include &quot;path&quot; in the generated code.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:article>
