<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Demo - Tweet Search</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.5.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A Twitter search client with 3D effects.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.0

Rectangle {
    color: &quot;#d6d6d6&quot;
    width: parent.width
    height: childrenRect.height
    z: 2
    Connections {
        target: mainListView
        onAutoSearch: {
            if (type == 'tag') {
                tagSearch.open()
                tagSearch.searchText = str
            } else if (type == 'user'){
                userSearch.open()
                userSearch.searchText = str
            } else {
                wordSearch.open()
                wordSearch.searchText = str
            }
        }
    }

    Column {
        width: parent.width

        SearchDelegate {
            id: wordSearch
            label: &quot;Search word...&quot;
            placeHolder: &quot;Enter word&quot;
            onHasOpened: {
                tagSearch.close()
                userSearch.close()
            }
            onOk: {
                mainListView.positionViewAtBeginning()
                mainListView.clear()
                tweetsModel.from = &quot;&quot;
                tweetsModel.phrase = searchText
            }
        }

        SearchDelegate {
            id: userSearch
            label: &quot;From user...&quot;
            placeHolder: &quot;@username&quot;
            prefix: &quot;@&quot;
            onHasOpened:{
                tagSearch.close()
                wordSearch.close()
            }
            onOk: {
                mainListView.positionViewAtBeginning()
                mainListView.clear()
                tweetsModel.phrase = &quot;&quot;
                tweetsModel.from = searchText
            }
        }

        SearchDelegate {
            id: tagSearch
            label: &quot;Search hashtag...&quot;
            placeHolder: &quot;#hashtag&quot;
            prefix: &quot;#&quot;
            onHasOpened:{
                userSearch.close()
                wordSearch.close()
            }
            onOk: {
                mainListView.positionViewAtBeginning()
                mainListView.clear()
                tweetsModel.from = &quot;&quot;
                tweetsModel.phrase = &quot;#&quot; + searchText
            }
        }

        SpriteSequence {
            id: sprite
            anchors.horizontalCenter: parent.horizontalCenter
            width: 320
            height: 300
            running: true
            interpolate: false
            Sprite {
                name: &quot;bird&quot;
                source: &quot;resources/bird-anim-sprites.png&quot;
                frameCount: 1
                frameRate: 1
                frameWidth: 320
                frameHeight: 300
                to: { &quot;bird&quot;:10, &quot;trill&quot;:1, &quot;blink&quot;:1 }
            }
            Sprite {
                name: &quot;trill&quot;
                source: &quot;resources/bird-anim-sprites.png&quot;
                frameCount: 5
                frameRate: 3
                frameWidth: 320
                frameHeight: 300
                to: {&quot;bird&quot;:1}
            }
            Sprite {
                name: &quot;blink&quot;
                source: &quot;resources/bird-anim-sprites.png&quot;
                frameCount: 1
                frameRate: 3
                frameWidth: 320
                frameHeight: 300
                frameX: 1600
                to: {&quot;bird&quot;:1}
            }
        }
    }
}

</db:programlisting>
</db:article>
