<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGraphicsSceneDragDropEvent Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgraphicsscenedragdropevent.xml">QGraphicsSceneDragDropEvent</db:link> class provides events for drag and drop in the graphics view framework.</db:para>
<db:para>This class was introduced in Qt 4.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGraphicsSceneDragDropEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qgraphicssceneevent.xml" xlink:role="class">QGraphicsSceneEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGraphicsSceneDragDropEvent is part of <db:simplelist><db:member>graphicsview-api</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qgraphicsview.xml">QGraphicsView</db:link> inherits the drag and drop functionality provided by <db:link xlink:href="qwidget.xml">QWidget</db:link>. When it receives a drag and drop event, it translates it to a <db:link xlink:href="qgraphicsscenedragdropevent.xml">QGraphicsSceneDragDropEvent</db:link>.</db:para>
<db:para><db:link xlink:href="qgraphicsscenedragdropevent.xml">QGraphicsSceneDragDropEvent</db:link> stores events of type GraphicsSceneDragEnter, GraphicsSceneDragLeave, GraphicsSceneDragMove, or GraphicsSceneDrop.</db:para>
<db:para><db:link xlink:href="qgraphicsscenedragdropevent.xml">QGraphicsSceneDragDropEvent</db:link> contains the position of the mouse cursor in both item, scene, and screen coordinates; this can be retrieved with <db:link xlink:href="qgraphicsscenedragdropevent.xml#pos">pos</db:link>(), <db:link xlink:href="qgraphicsscenedragdropevent.xml#scenePos">scenePos</db:link>(), and <db:link xlink:href="qgraphicsscenedragdropevent.xml#screenPos">screenPos</db:link>().</db:para>
<db:para>The scene sends the event to the first <db:link xlink:href="qgraphicsitem.xml">QGraphicsItem</db:link> under the mouse cursor that accepts drops; a graphics item is set to accept drops with <db:link xlink:href="qgraphicsitem.xml#setAcceptDrops">setAcceptDrops</db:link>().</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="dtor.QGraphicsSceneDragDropEvent">
<db:title>[virtual noexcept] QGraphicsSceneDragDropEvent::~QGraphicsSceneDragDropEvent()</db:title>
<db:para>Destroys the object.</db:para>
</db:section>
<db:section xml:id="acceptProposedAction">
<db:title>void QGraphicsSceneDragDropEvent::acceptProposedAction()</db:title>
<db:para>Sets the proposed action as accepted, i.e, the drop action is set to the proposed action. This is equal to:</db:para>
<db:programlisting language="cpp">setDropAction(proposedAction());

</db:programlisting>
<db:para>When using this function, one should not call accept().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#dropAction">dropAction</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#setDropAction">setDropAction</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#proposedAction">proposedAction</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="buttons">
<db:title>Qt::MouseButtons QGraphicsSceneDragDropEvent::buttons() const</db:title>
<db:para>Returns a <db:link xlink:href="qt.xml#MouseButton-enum">Qt::MouseButtons</db:link> value indicating which buttons were pressed on the mouse when this mouse event was generated.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt.xml#MouseButton-enum">Qt::MouseButtons</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dropAction">
<db:title>Qt::DropAction QGraphicsSceneDragDropEvent::dropAction() const</db:title>
<db:para>Returns the action that was performed in this drag and drop. This should be set by the receiver of the drop and is returned by <db:link xlink:href="qdrag.xml#exec">QDrag::exec</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#setDropAction">setDropAction</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#acceptProposedAction">acceptProposedAction</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mimeData">
<db:title>const QMimeData *QGraphicsSceneDragDropEvent::mimeData() const</db:title>
<db:para>This function returns the MIME data of the event.</db:para>
</db:section>
<db:section xml:id="modifiers">
<db:title>Qt::KeyboardModifiers QGraphicsSceneDragDropEvent::modifiers() const</db:title>
<db:para>Returns the keyboard modifiers that were pressed when the drag and drop event was created.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt.xml#KeyboardModifier-enum">Qt::KeyboardModifiers</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pos">
<db:title>QPointF QGraphicsSceneDragDropEvent::pos() const</db:title>
<db:para>Returns the mouse position of the event relative to the view that sent the event.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsview.xml">QGraphicsView</db:link></db:member>
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#screenPos">screenPos</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#scenePos">scenePos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="possibleActions">
<db:title>Qt::DropActions QGraphicsSceneDragDropEvent::possibleActions() const</db:title>
<db:para>Returns the possible drop actions that the drag and drop can result in.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt.xml#DropAction-enum">Qt::DropActions</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="proposedAction">
<db:title>Qt::DropAction QGraphicsSceneDragDropEvent::proposedAction() const</db:title>
<db:para>Returns the drop action that is proposed, i.e., preferred. The action must be one of the possible actions as defined by possibleActions().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt.xml#DropAction-enum">Qt::DropAction</db:link></db:member>
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#possibleActions">possibleActions</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="scenePos">
<db:title>QPointF QGraphicsSceneDragDropEvent::scenePos() const</db:title>
<db:para>Returns the position of the mouse in scene coordinates.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#pos">pos</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#screenPos">screenPos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="screenPos">
<db:title>QPoint QGraphicsSceneDragDropEvent::screenPos() const</db:title>
<db:para>Returns the position of the mouse relative to the screen.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#pos">pos</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#scenePos">scenePos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDropAction">
<db:title>void QGraphicsSceneDragDropEvent::setDropAction(Qt::DropAction <db:emphasis>action</db:emphasis>)</db:title>
<db:para>This function lets the receiver of the drop set the drop action that was performed to <db:code role="parameter">action</db:code>, which should be one of the <db:link xlink:href="qgraphicsscenedragdropevent.xml#possibleActions">possible actions</db:link>. Call accept() in stead of acceptProposedAction() if you use this function.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#dropAction">dropAction</db:link>()</db:member>
<db:member><db:link xlink:href="qevent.xml#accept">accept</db:link>()</db:member>
<db:member><db:link xlink:href="qgraphicsscenedragdropevent.xml#possibleActions">possibleActions</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="source">
<db:title>QWidget *QGraphicsSceneDragDropEvent::source() const</db:title>
<db:para>This function returns the <db:link xlink:href="qgraphicsview.xml">QGraphicsView</db:link> that created the <db:link xlink:href="qgraphicsscenedragdropevent.xml">QGraphicsSceneDragDropEvent</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
