<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QOpenGLFunctions Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link> class provides cross-platform access to the OpenGL ES 2.0 API.</db:para>
<db:para>This class was introduced in Qt 5.0.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QOpenGLFunctions</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qopenglextrafunctions.xml" xlink:role="class">QOpenGLExtraFunctions</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QOpenGLFunctions is part of <db:simplelist><db:member><db:link xlink:href="painting-3d.xml">Rendering in 3D</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>OpenGL ES 2.0 defines a subset of the OpenGL specification that is common across many desktop and embedded OpenGL implementations. However, it can be difficult to use the functions from that subset because they need to be resolved manually on desktop systems.</db:para>
<db:para><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link> provides a guaranteed API that is available on all OpenGL systems and takes care of function resolution on systems that need it. The recommended way to use <db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link> is by direct inheritance:</db:para>
<db:programlisting language="cpp">class MyGLWindow : public QWindow, protected QOpenGLFunctions
{
    Q_OBJECT
public:
    explicit MyGLWindow(QScreen *screen = nullptr);

protected:
    void initializeGL();
    void paintGL();

    QOpenGLContext *m_context;
};

MyGLWindow::MyGLWindow(QScreen *screen)
  : QWindow(screen)
{
    setSurfaceType(OpenGLSurface);
    create();

    // Create an OpenGL context
    m_context = new QOpenGLContext;
    m_context-&amp;gt;create();

    // Setup scene and render it
    initializeGL();
    paintGL();
};

void MyGLWindow::initializeGL()
{
    m_context-&amp;gt;makeCurrent(this);
    initializeOpenGLFunctions();
}
</db:programlisting>
<db:para>The <db:code>paintGL()</db:code> function can then use any of the OpenGL ES 2.0 functions without explicit resolution, such as <db:link xlink:href="qopenglfunctions.xml#glActiveTexture">glActiveTexture</db:link>() in the following example:</db:para>
<db:programlisting language="cpp">void MyGLWindow::paintGL()
{
    m_context-&amp;gt;makeCurrent(this);
    glActiveTexture(GL_TEXTURE1);
    glBindTexture(GL_TEXTURE_2D, textureId);
    // ...
    m_context-&amp;gt;swapBuffers(this);
    m_context-&amp;gt;doneCurrent();
}
</db:programlisting>
<db:para><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link> can also be used directly for ad-hoc invocation of OpenGL ES 2.0 functions on all platforms:</db:para>
<db:programlisting language="cpp">QOpenGLFunctions glFuncs(QOpenGLContext::currentContext());
glFuncs.glActiveTexture(GL_TEXTURE1);
</db:programlisting>
<db:para>An alternative approach is to query the context's associated <db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link> instance. This is somewhat faster than the previous approach due to avoiding the creation of a new instance, but the difference is fairly small since the internal data structures are shared, and function resolving happens only once for a given context, regardless of the number of <db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link> instances initialized for it.</db:para>
<db:programlisting language="cpp">QOpenGLFunctions *glFuncs = QOpenGLContext::currentContext()-&amp;gt;functions();
glFuncs-&amp;gt;glActiveTexture(GL_TEXTURE1);
</db:programlisting>
<db:para><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link> provides wrappers for all OpenGL ES 2.0 functions, including the common subset of OpenGL 1.x and ES 2.0. While such functions, for example <db:link xlink:href="qopenglfunctions.xml#glClear">glClear</db:link>() or <db:link xlink:href="qopenglfunctions.xml#glDrawArrays">glDrawArrays</db:link>(), can be called also directly, as long as the application links to the platform-specific OpenGL library, calling them via <db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link> enables the possibility of dynamically loading the OpenGL implementation.</db:para>
<db:para>The <db:link xlink:href="qopenglfunctions.xml#hasOpenGLFeature">hasOpenGLFeature</db:link>() and <db:link xlink:href="qopenglfunctions.xml#openGLFeatures">openGLFeatures</db:link>() functions can be used to determine if the OpenGL implementation has a major OpenGL ES 2.0 feature. For example, the following checks if non power of two textures are available:</db:para>
<db:programlisting language="cpp">QOpenGLFunctions funcs(QOpenGLContext::currentContext());
bool npot = funcs.hasOpenGLFeature(QOpenGLFunctions::NPOTTextures);
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopenglcontext.xml">QOpenGLContext</db:link></db:member>
<db:member><db:link xlink:href="qsurfaceformat.xml">QSurfaceFormat</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="OpenGLFeature-enum">
<db:title>enum QOpenGLFunctions::OpenGLFeature</db:title>
<db:bridgehead renderas="sect2">flags QOpenGLFunctions::OpenGLFeatures</db:bridgehead>
<db:enumsynopsis>
<db:enumname>OpenGLFeature</db:enumname>
<db:enumitem>
<db:enumidentifier>Multitexture</db:enumidentifier>
<db:enumvalue>0x0001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Shaders</db:enumidentifier>
<db:enumvalue>0x0002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Buffers</db:enumidentifier>
<db:enumvalue>0x0004</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Framebuffers</db:enumidentifier>
<db:enumvalue>0x0008</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>BlendColor</db:enumidentifier>
<db:enumvalue>0x0010</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>BlendEquation</db:enumidentifier>
<db:enumvalue>0x0020</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>BlendEquationSeparate</db:enumidentifier>
<db:enumvalue>0x0040</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>BlendFuncSeparate</db:enumidentifier>
<db:enumvalue>0x0080</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>BlendSubtract</db:enumidentifier>
<db:enumvalue>0x0100</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CompressedTextures</db:enumidentifier>
<db:enumvalue>0x0200</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Multisample</db:enumidentifier>
<db:enumvalue>0x0400</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>StencilSeparate</db:enumidentifier>
<db:enumvalue>0x0800</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NPOTTextures</db:enumidentifier>
<db:enumvalue>0x1000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NPOTTextureRepeat</db:enumidentifier>
<db:enumvalue>0x2000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FixedFunctionPipeline</db:enumidentifier>
<db:enumvalue>0x4000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>TextureRGFormats</db:enumidentifier>
<db:enumvalue>0x8000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MultipleRenderTargets</db:enumidentifier>
<db:enumvalue>0x10000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>BlendEquationAdvanced</db:enumidentifier>
<db:enumvalue>0x20000</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:typedefsynopsis>
<db:typedefname>QOpenGLFunctions::OpenGLFeatures</db:typedefname>
</db:typedefsynopsis>
<db:para>This enum defines OpenGL and OpenGL ES features whose presence may depend on the implementation.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::Multitexture</db:code></db:para>
</db:td>
<db:td><db:code>0x0001</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qopenglfunctions.xml#glActiveTexture">glActiveTexture</db:link>() function is available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::Shaders</db:code></db:para>
</db:td>
<db:td><db:code>0x0002</db:code></db:td>
<db:td>
<db:para>Shader functions are available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::Buffers</db:code></db:para>
</db:td>
<db:td><db:code>0x0004</db:code></db:td>
<db:td>
<db:para>Vertex and index buffer functions are available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::Framebuffers</db:code></db:para>
</db:td>
<db:td><db:code>0x0008</db:code></db:td>
<db:td>
<db:para>Framebuffer object functions are available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::BlendColor</db:code></db:para>
</db:td>
<db:td><db:code>0x0010</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qopenglfunctions.xml#glBlendColor">glBlendColor</db:link>() is available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::BlendEquation</db:code></db:para>
</db:td>
<db:td><db:code>0x0020</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qopenglfunctions.xml#glBlendEquation">glBlendEquation</db:link>() is available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::BlendEquationSeparate</db:code></db:para>
</db:td>
<db:td><db:code>0x0040</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qopenglfunctions.xml#glBlendEquationSeparate">glBlendEquationSeparate</db:link>() is available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::BlendEquationAdvanced</db:code></db:para>
</db:td>
<db:td><db:code>0x20000</db:code></db:td>
<db:td>
<db:para>Advanced blend equations are available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::BlendFuncSeparate</db:code></db:para>
</db:td>
<db:td><db:code>0x0080</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qopenglfunctions.xml#glBlendFuncSeparate">glBlendFuncSeparate</db:link>() is available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::BlendSubtract</db:code></db:para>
</db:td>
<db:td><db:code>0x0100</db:code></db:td>
<db:td>
<db:para>Blend subtract mode is available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::CompressedTextures</db:code></db:para>
</db:td>
<db:td><db:code>0x0200</db:code></db:td>
<db:td>
<db:para>Compressed texture functions are available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::Multisample</db:code></db:para>
</db:td>
<db:td><db:code>0x0400</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qopenglfunctions.xml#glSampleCoverage">glSampleCoverage</db:link>() function is available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::StencilSeparate</db:code></db:para>
</db:td>
<db:td><db:code>0x0800</db:code></db:td>
<db:td>
<db:para>Separate stencil functions are available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::NPOTTextures</db:code></db:para>
</db:td>
<db:td><db:code>0x1000</db:code></db:td>
<db:td>
<db:para>Non power of two textures are available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::NPOTTextureRepeat</db:code></db:para>
</db:td>
<db:td><db:code>0x2000</db:code></db:td>
<db:td>
<db:para>Non power of two textures can use GL_REPEAT as wrap parameter.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::FixedFunctionPipeline</db:code></db:para>
</db:td>
<db:td><db:code>0x4000</db:code></db:td>
<db:td>
<db:para>The fixed function pipeline is available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::TextureRGFormats</db:code></db:para>
</db:td>
<db:td><db:code>0x8000</db:code></db:td>
<db:td>
<db:para>The GL_RED and GL_RG texture formats are available.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link></db:emphasis>::MultipleRenderTargets</db:code></db:para>
</db:td>
<db:td><db:code>0x10000</db:code></db:td>
<db:td>
<db:para>Multiple color attachments to framebuffer objects are available.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>OpenGLFeatures</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;OpenGLFeature&gt;. </db:code>It stores an OR combination of <db:code>OpenGLFeature</db:code> values.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QOpenGLFunctions">
<db:title>QOpenGLFunctions::QOpenGLFunctions()</db:title>
<db:constructorsynopsis>
<db:methodname>QOpenGLFunctions</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpenGLFunctions()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a default function resolver. The resolver cannot be used until <db:link xlink:href="qopenglfunctions.xml#initializeOpenGLFunctions">initializeOpenGLFunctions</db:link>() is called to specify the context.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopenglfunctions.xml#initializeOpenGLFunctions">initializeOpenGLFunctions</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QOpenGLFunctions-1">
<db:title>[explicit] QOpenGLFunctions::QOpenGLFunctions(QOpenGLContext *<db:emphasis>context</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QOpenGLFunctions</db:methodname>
<db:methodparam>
<db:type>QOpenGLContext *</db:type>
<db:parameter>context</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpenGLFunctions(QOpenGLContext *context)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a function resolver for <db:code role="parameter">context</db:code>. If <db:code role="parameter">context</db:code> is <db:code>nullptr</db:code>, then the resolver will be created for the current <db:link xlink:href="qopenglcontext.xml">QOpenGLContext</db:link>.</db:para>
<db:para>The context or another context in the group must be current.</db:para>
<db:para>An object constructed in this way can only be used with <db:code role="parameter">context</db:code> and other contexts that share with it. Use <db:link xlink:href="qopenglfunctions.xml#initializeOpenGLFunctions">initializeOpenGLFunctions</db:link>() to change the object's context association.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopenglfunctions.xml#initializeOpenGLFunctions">initializeOpenGLFunctions</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dtor.QOpenGLFunctions">
<db:title>QOpenGLFunctions::~QOpenGLFunctions()</db:title>
<db:destructorsynopsis>
<db:methodname>~QOpenGLFunctions</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QOpenGLFunctions()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys this function resolver.</db:para>
</db:section>
<db:section xml:id="glActiveTexture">
<db:title>void QOpenGLFunctions::glActiveTexture(GLenum <db:emphasis>texture</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glActiveTexture</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>texture</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glActiveTexture(GLenum texture)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glActiveTexture(<db:code role="parameter">texture</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glActiveTexture.xhtml">glActiveTexture()</db:link>.</db:para>
</db:section>
<db:section xml:id="glAttachShader">
<db:title>void QOpenGLFunctions::glAttachShader(GLuint <db:emphasis>program</db:emphasis>, GLuint <db:emphasis>shader</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glAttachShader</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>shader</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glAttachShader(GLuint program, GLuint shader)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glAttachShader(<db:code role="parameter">program</db:code>, <db:code role="parameter">shader</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glAttachShader.xhtml">glAttachShader()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glBindAttribLocation">
<db:title>void QOpenGLFunctions::glBindAttribLocation(GLuint <db:emphasis>program</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>, const char *<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBindAttribLocation</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const char *</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBindAttribLocation(GLuint program, GLuint index, const char *name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBindAttribLocation(<db:code role="parameter">program</db:code>, <db:code role="parameter">index</db:code>, <db:code role="parameter">name</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBindAttribLocation.xhtml">glBindAttribLocation()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glBindBuffer">
<db:title>void QOpenGLFunctions::glBindBuffer(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>buffer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBindBuffer</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>buffer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBindBuffer(GLenum target, GLuint buffer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBindBuffer(<db:code role="parameter">target</db:code>, <db:code role="parameter">buffer</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBindBuffer.xhtml">glBindBuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBindFramebuffer">
<db:title>void QOpenGLFunctions::glBindFramebuffer(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>framebuffer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBindFramebuffer</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>framebuffer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBindFramebuffer(GLenum target, GLuint framebuffer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBindFramebuffer(<db:code role="parameter">target</db:code>, <db:code role="parameter">framebuffer</db:code>).</db:para>
<db:para>Note that Qt will translate a <db:code role="parameter">framebuffer</db:code> argument of 0 to the currently bound <db:link xlink:href="qopenglcontext.xml">QOpenGLContext</db:link>'s defaultFramebufferObject().</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBindFramebuffer.xhtml">glBindFramebuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBindRenderbuffer">
<db:title>void QOpenGLFunctions::glBindRenderbuffer(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>renderbuffer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBindRenderbuffer</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>renderbuffer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBindRenderbuffer(GLenum target, GLuint renderbuffer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBindRenderbuffer(<db:code role="parameter">target</db:code>, <db:code role="parameter">renderbuffer</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBindRenderbuffer.xhtml">glBindRenderbuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBindTexture">
<db:title>[since 5.3] void QOpenGLFunctions::glBindTexture(GLenum <db:emphasis>target</db:emphasis>, GLuint <db:emphasis>texture</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBindTexture</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>texture</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBindTexture(GLenum target, GLuint texture)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBindTexture(<db:code role="parameter">target</db:code>, <db:code role="parameter">texture</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBindTexture.xhtml">glBindTexture()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glBlendColor">
<db:title>void QOpenGLFunctions::glBlendColor(GLclampf <db:emphasis>red</db:emphasis>, GLclampf <db:emphasis>green</db:emphasis>, GLclampf <db:emphasis>blue</db:emphasis>, GLclampf <db:emphasis>alpha</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBlendColor</db:methodname>
<db:methodparam>
<db:type>GLclampf</db:type>
<db:parameter>red</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLclampf</db:type>
<db:parameter>green</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLclampf</db:type>
<db:parameter>blue</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLclampf</db:type>
<db:parameter>alpha</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBlendColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBlendColor(<db:code role="parameter">red</db:code>, <db:code role="parameter">green</db:code>, <db:code role="parameter">blue</db:code>, <db:code role="parameter">alpha</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBlendColor.xhtml">glBlendColor()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBlendEquation">
<db:title>void QOpenGLFunctions::glBlendEquation(GLenum <db:emphasis>mode</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBlendEquation</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBlendEquation(GLenum mode)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBlendEquation(<db:code role="parameter">mode</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBlendEquation.xhtml">glBlendEquation()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBlendEquationSeparate">
<db:title>void QOpenGLFunctions::glBlendEquationSeparate(GLenum <db:emphasis>modeRGB</db:emphasis>, GLenum <db:emphasis>modeAlpha</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBlendEquationSeparate</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>modeRGB</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>modeAlpha</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBlendEquationSeparate(<db:code role="parameter">modeRGB</db:code>, <db:code role="parameter">modeAlpha</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBlendEquationSeparate.xhtml">glBlendEquationSeparate()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBlendFunc">
<db:title>[since 5.3] void QOpenGLFunctions::glBlendFunc(GLenum <db:emphasis>sfactor</db:emphasis>, GLenum <db:emphasis>dfactor</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBlendFunc</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>sfactor</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>dfactor</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBlendFunc(GLenum sfactor, GLenum dfactor)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBlendFunc(<db:code role="parameter">sfactor</db:code>, <db:code role="parameter">dfactor</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBlendFunc.xhtml">glBlendFunc()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glBlendFuncSeparate">
<db:title>void QOpenGLFunctions::glBlendFuncSeparate(GLenum <db:emphasis>srcRGB</db:emphasis>, GLenum <db:emphasis>dstRGB</db:emphasis>, GLenum <db:emphasis>srcAlpha</db:emphasis>, GLenum <db:emphasis>dstAlpha</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBlendFuncSeparate</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>srcRGB</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>dstRGB</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>srcAlpha</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>dstAlpha</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBlendFuncSeparate(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBlendFuncSeparate(<db:code role="parameter">srcRGB</db:code>, <db:code role="parameter">dstRGB</db:code>, <db:code role="parameter">srcAlpha</db:code>, <db:code role="parameter">dstAlpha</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBlendFuncSeparate.xhtml">glBlendFuncSeparate()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBufferData">
<db:title>void QOpenGLFunctions::glBufferData(GLenum <db:emphasis>target</db:emphasis>, qopengl_GLsizeiptr <db:emphasis>size</db:emphasis>, const void *<db:emphasis>data</db:emphasis>, GLenum <db:emphasis>usage</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBufferData</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>qopengl_GLsizeiptr</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>data</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>usage</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBufferData(GLenum target, qopengl_GLsizeiptr size, const void *data, GLenum usage)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBufferData(<db:code role="parameter">target</db:code>, <db:code role="parameter">size</db:code>, <db:code role="parameter">data</db:code>, <db:code role="parameter">usage</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBufferData.xhtml">glBufferData()</db:link>.</db:para>
</db:section>
<db:section xml:id="glBufferSubData">
<db:title>void QOpenGLFunctions::glBufferSubData(GLenum <db:emphasis>target</db:emphasis>, qopengl_GLintptr <db:emphasis>offset</db:emphasis>, qopengl_GLsizeiptr <db:emphasis>size</db:emphasis>, const void *<db:emphasis>data</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glBufferSubData</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>qopengl_GLintptr</db:type>
<db:parameter>offset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>qopengl_GLsizeiptr</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>data</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glBufferSubData(GLenum target, qopengl_GLintptr offset, qopengl_GLsizeiptr size, const void *data)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glBufferSubData(<db:code role="parameter">target</db:code>, <db:code role="parameter">offset</db:code>, <db:code role="parameter">size</db:code>, <db:code role="parameter">data</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glBufferSubData.xhtml">glBufferSubData()</db:link>.</db:para>
</db:section>
<db:section xml:id="glCheckFramebufferStatus">
<db:title>GLenum QOpenGLFunctions::glCheckFramebufferStatus(GLenum <db:emphasis>target</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLenum</db:type>
<db:methodname>glCheckFramebufferStatus</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLenum glCheckFramebufferStatus(GLenum target)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCheckFramebufferStatus(<db:code role="parameter">target</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCheckFramebufferStatus.xhtml">glCheckFramebufferStatus()</db:link>.</db:para>
</db:section>
<db:section xml:id="glClear">
<db:title>[since 5.3] void QOpenGLFunctions::glClear(GLbitfield <db:emphasis>mask</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glClear</db:methodname>
<db:methodparam>
<db:type>GLbitfield</db:type>
<db:parameter>mask</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glClear(GLbitfield mask)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glClear(<db:code role="parameter">mask</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glClear.xhtml">glClear()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glClearColor">
<db:title>[since 5.3] void QOpenGLFunctions::glClearColor(GLclampf <db:emphasis>red</db:emphasis>, GLclampf <db:emphasis>green</db:emphasis>, GLclampf <db:emphasis>blue</db:emphasis>, GLclampf <db:emphasis>alpha</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glClearColor</db:methodname>
<db:methodparam>
<db:type>GLclampf</db:type>
<db:parameter>red</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLclampf</db:type>
<db:parameter>green</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLclampf</db:type>
<db:parameter>blue</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLclampf</db:type>
<db:parameter>alpha</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glClearColor(<db:code role="parameter">red</db:code>, <db:code role="parameter">green</db:code>, <db:code role="parameter">blue</db:code>, <db:code role="parameter">alpha</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glClearColor.xhtml">glClearColor()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glClearDepthf">
<db:title>void QOpenGLFunctions::glClearDepthf(GLclampf <db:emphasis>depth</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glClearDepthf</db:methodname>
<db:methodparam>
<db:type>GLclampf</db:type>
<db:parameter>depth</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glClearDepthf(GLclampf depth)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glClearDepth(<db:code role="parameter">depth</db:code>) on desktop OpenGL systems and glClearDepthf(<db:code role="parameter">depth</db:code>) on embedded OpenGL ES systems.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glClearDepthf.xhtml">glClearDepthf()</db:link>.</db:para>
</db:section>
<db:section xml:id="glClearStencil">
<db:title>[since 5.3] void QOpenGLFunctions::glClearStencil(GLint <db:emphasis>s</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glClearStencil</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>s</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glClearStencil(GLint s)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glClearStencil(<db:code role="parameter">s</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glClearStencil.xhtml">glClearStencil()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glColorMask">
<db:title>[since 5.3] void QOpenGLFunctions::glColorMask(GLboolean <db:emphasis>red</db:emphasis>, GLboolean <db:emphasis>green</db:emphasis>, GLboolean <db:emphasis>blue</db:emphasis>, GLboolean <db:emphasis>alpha</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glColorMask</db:methodname>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>red</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>green</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>blue</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>alpha</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glColorMask(<db:code role="parameter">red</db:code>, <db:code role="parameter">green</db:code>, <db:code role="parameter">blue</db:code>, <db:code role="parameter">alpha</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glColorMask.xhtml">glColorMask()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glCompileShader">
<db:title>void QOpenGLFunctions::glCompileShader(GLuint <db:emphasis>shader</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glCompileShader</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>shader</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glCompileShader(GLuint shader)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCompileShader(<db:code role="parameter">shader</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCompileShader.xhtml">glCompileShader()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glCompressedTexImage2D">
<db:title>void QOpenGLFunctions::glCompressedTexImage2D(GLenum <db:emphasis>target</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLenum <db:emphasis>internalformat</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLint <db:emphasis>border</db:emphasis>, GLsizei <db:emphasis>imageSize</db:emphasis>, const void *<db:emphasis>data</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glCompressedTexImage2D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>border</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>imageSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>data</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCompressedTexImage2D(<db:code role="parameter">target</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">border</db:code>, <db:code role="parameter">imageSize</db:code>, <db:code role="parameter">data</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCompressedTexImage2D.xhtml">glCompressedTexImage2D()</db:link>.</db:para>
</db:section>
<db:section xml:id="glCompressedTexSubImage2D">
<db:title>void QOpenGLFunctions::glCompressedTexSubImage2D(GLenum <db:emphasis>target</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLint <db:emphasis>xoffset</db:emphasis>, GLint <db:emphasis>yoffset</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLenum <db:emphasis>format</db:emphasis>, GLsizei <db:emphasis>imageSize</db:emphasis>, const void *<db:emphasis>data</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glCompressedTexSubImage2D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>xoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>yoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>imageSize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>data</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCompressedTexSubImage2D(<db:code role="parameter">target</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">xoffset</db:code>, <db:code role="parameter">yoffset</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">format</db:code>, <db:code role="parameter">imageSize</db:code>, <db:code role="parameter">data</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCompressedTexSubImage2D.xhtml">glCompressedTexSubImage2D()</db:link>.</db:para>
</db:section>
<db:section xml:id="glCopyTexImage2D">
<db:title>[since 5.3] void QOpenGLFunctions::glCopyTexImage2D(GLenum <db:emphasis>target</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLenum <db:emphasis>internalformat</db:emphasis>, GLint <db:emphasis>x</db:emphasis>, GLint <db:emphasis>y</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLint <db:emphasis>border</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glCopyTexImage2D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>border</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCopyTexImage2D(<db:code role="parameter">target</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">border</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCopyTexImage2D.xhtml">glCopyTexImage2D()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glCopyTexSubImage2D">
<db:title>[since 5.3] void QOpenGLFunctions::glCopyTexSubImage2D(GLenum <db:emphasis>target</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLint <db:emphasis>xoffset</db:emphasis>, GLint <db:emphasis>yoffset</db:emphasis>, GLint <db:emphasis>x</db:emphasis>, GLint <db:emphasis>y</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glCopyTexSubImage2D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>xoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>yoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCopyTexSubImage2D(<db:code role="parameter">target</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">xoffset</db:code>, <db:code role="parameter">yoffset</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCopyTexSubImage2D.xhtml">glCopyTexSubImage2D()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glCreateProgram">
<db:title>GLuint QOpenGLFunctions::glCreateProgram()</db:title>
<db:methodsynopsis>
<db:type>GLuint</db:type>
<db:methodname>glCreateProgram</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLuint glCreateProgram()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCreateProgram().</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCreateProgram.xhtml">glCreateProgram()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glCreateShader">
<db:title>GLuint QOpenGLFunctions::glCreateShader(GLenum <db:emphasis>type</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLuint</db:type>
<db:methodname>glCreateShader</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLuint glCreateShader(GLenum type)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCreateShader(<db:code role="parameter">type</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCreateShader.xhtml">glCreateShader()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glCullFace">
<db:title>[since 5.3] void QOpenGLFunctions::glCullFace(GLenum <db:emphasis>mode</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glCullFace</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glCullFace(GLenum mode)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glCullFace(<db:code role="parameter">mode</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glCullFace.xhtml">glCullFace()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glDeleteBuffers">
<db:title>void QOpenGLFunctions::glDeleteBuffers(GLsizei <db:emphasis>n</db:emphasis>, const GLuint *<db:emphasis>buffers</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDeleteBuffers</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>buffers</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDeleteBuffers(GLsizei n, const GLuint *buffers)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDeleteBuffers(<db:code role="parameter">n</db:code>, <db:code role="parameter">buffers</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDeleteBuffers.xhtml">glDeleteBuffers()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDeleteFramebuffers">
<db:title>void QOpenGLFunctions::glDeleteFramebuffers(GLsizei <db:emphasis>n</db:emphasis>, const GLuint *<db:emphasis>framebuffers</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDeleteFramebuffers</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>framebuffers</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDeleteFramebuffers(GLsizei n, const GLuint *framebuffers)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDeleteFramebuffers(<db:code role="parameter">n</db:code>, <db:code role="parameter">framebuffers</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDeleteFramebuffers.xhtml">glDeleteFramebuffers()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDeleteProgram">
<db:title>void QOpenGLFunctions::glDeleteProgram(GLuint <db:emphasis>program</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDeleteProgram</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDeleteProgram(GLuint program)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDeleteProgram(<db:code role="parameter">program</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDeleteProgram.xhtml">glDeleteProgram()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glDeleteRenderbuffers">
<db:title>void QOpenGLFunctions::glDeleteRenderbuffers(GLsizei <db:emphasis>n</db:emphasis>, const GLuint *<db:emphasis>renderbuffers</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDeleteRenderbuffers</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>renderbuffers</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDeleteRenderbuffers(GLsizei n, const GLuint *renderbuffers)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDeleteRenderbuffers(<db:code role="parameter">n</db:code>, <db:code role="parameter">renderbuffers</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDeleteRenderbuffers.xhtml">glDeleteRenderbuffers()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDeleteShader">
<db:title>void QOpenGLFunctions::glDeleteShader(GLuint <db:emphasis>shader</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDeleteShader</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>shader</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDeleteShader(GLuint shader)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDeleteShader(<db:code role="parameter">shader</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDeleteShader.xhtml">glDeleteShader()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glDeleteTextures">
<db:title>[since 5.3] void QOpenGLFunctions::glDeleteTextures(GLsizei <db:emphasis>n</db:emphasis>, const GLuint *<db:emphasis>textures</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDeleteTextures</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>textures</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDeleteTextures(GLsizei n, const GLuint *textures)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDeleteTextures(<db:code role="parameter">n</db:code>, <db:code role="parameter">textures</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDeleteTextures.xhtml">glDeleteTextures()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glDepthFunc">
<db:title>[since 5.3] void QOpenGLFunctions::glDepthFunc(GLenum <db:emphasis>func</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDepthFunc</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>func</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDepthFunc(GLenum func)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDepthFunc(<db:code role="parameter">func</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDepthFunc.xhtml">glDepthFunc()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glDepthMask">
<db:title>[since 5.3] void QOpenGLFunctions::glDepthMask(GLboolean <db:emphasis>flag</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDepthMask</db:methodname>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>flag</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDepthMask(GLboolean flag)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDepthMask(<db:code role="parameter">flag</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDepthMask.xhtml">glDepthMask()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glDepthRangef">
<db:title>void QOpenGLFunctions::glDepthRangef(GLclampf <db:emphasis>zNear</db:emphasis>, GLclampf <db:emphasis>zFar</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDepthRangef</db:methodname>
<db:methodparam>
<db:type>GLclampf</db:type>
<db:parameter>zNear</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLclampf</db:type>
<db:parameter>zFar</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDepthRangef(GLclampf zNear, GLclampf zFar)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDepthRange(<db:code role="parameter">zNear</db:code>, <db:code role="parameter">zFar</db:code>) on desktop OpenGL systems and glDepthRangef(<db:code role="parameter">zNear</db:code>, <db:code role="parameter">zFar</db:code>) on embedded OpenGL ES systems.</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDepthRangef.xhtml">glDepthRangef()</db:link>.</db:para>
</db:section>
<db:section xml:id="glDetachShader">
<db:title>void QOpenGLFunctions::glDetachShader(GLuint <db:emphasis>program</db:emphasis>, GLuint <db:emphasis>shader</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDetachShader</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>shader</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDetachShader(GLuint program, GLuint shader)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDetachShader(<db:code role="parameter">program</db:code>, <db:code role="parameter">shader</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDetachShader.xhtml">glDetachShader()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glDisable">
<db:title>[since 5.3] void QOpenGLFunctions::glDisable(GLenum <db:emphasis>cap</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDisable</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>cap</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDisable(GLenum cap)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDisable(<db:code role="parameter">cap</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glEnable.xhtml">glDisable()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glDisableVertexAttribArray">
<db:title>void QOpenGLFunctions::glDisableVertexAttribArray(GLuint <db:emphasis>index</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDisableVertexAttribArray</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDisableVertexAttribArray(GLuint index)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDisableVertexAttribArray(<db:code role="parameter">index</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glEnableVertexAttribArray.xhtml">glDisableVertexAttribArray()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glDrawArrays">
<db:title>[since 5.3] void QOpenGLFunctions::glDrawArrays(GLenum <db:emphasis>mode</db:emphasis>, GLint <db:emphasis>first</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDrawArrays</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>first</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDrawArrays(GLenum mode, GLint first, GLsizei count)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDrawArrays(<db:code role="parameter">mode</db:code>, <db:code role="parameter">first</db:code>, <db:code role="parameter">count</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDrawArrays.xhtml">glDrawArrays()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glDrawElements">
<db:title>[since 5.3] void QOpenGLFunctions::glDrawElements(GLenum <db:emphasis>mode</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, const GLvoid *<db:emphasis>indices</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glDrawElements</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLvoid *</db:type>
<db:parameter>indices</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glDrawElements(<db:code role="parameter">mode</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">indices</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glDrawElements.xhtml">glDrawElements()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glEnable">
<db:title>[since 5.3] void QOpenGLFunctions::glEnable(GLenum <db:emphasis>cap</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glEnable</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>cap</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glEnable(GLenum cap)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glEnable(<db:code role="parameter">cap</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glEnable.xhtml">glEnable()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glEnableVertexAttribArray">
<db:title>void QOpenGLFunctions::glEnableVertexAttribArray(GLuint <db:emphasis>index</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glEnableVertexAttribArray</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glEnableVertexAttribArray(GLuint index)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glEnableVertexAttribArray(<db:code role="parameter">index</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glEnableVertexAttribArray.xhtml">glEnableVertexAttribArray()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glFinish">
<db:title>[since 5.3] void QOpenGLFunctions::glFinish()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glFinish</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glFinish()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glFinish().</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glFinish.xhtml">glFinish()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glFlush">
<db:title>[since 5.3] void QOpenGLFunctions::glFlush()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glFlush</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glFlush()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glFlush().</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glFlush.xhtml">glFlush()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glFramebufferRenderbuffer">
<db:title>void QOpenGLFunctions::glFramebufferRenderbuffer(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>attachment</db:emphasis>, GLenum <db:emphasis>renderbuffertarget</db:emphasis>, GLuint <db:emphasis>renderbuffer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glFramebufferRenderbuffer</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>attachment</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>renderbuffertarget</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>renderbuffer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glFramebufferRenderbuffer(<db:code role="parameter">target</db:code>, <db:code role="parameter">attachment</db:code>, <db:code role="parameter">renderbuffertarget</db:code>, <db:code role="parameter">renderbuffer</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glFramebufferRenderbuffer.xhtml">glFramebufferRenderbuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glFramebufferTexture2D">
<db:title>void QOpenGLFunctions::glFramebufferTexture2D(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>attachment</db:emphasis>, GLenum <db:emphasis>textarget</db:emphasis>, GLuint <db:emphasis>texture</db:emphasis>, GLint <db:emphasis>level</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glFramebufferTexture2D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>attachment</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>textarget</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>texture</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glFramebufferTexture2D(<db:code role="parameter">target</db:code>, <db:code role="parameter">attachment</db:code>, <db:code role="parameter">textarget</db:code>, <db:code role="parameter">texture</db:code>, <db:code role="parameter">level</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glFramebufferTexture2D.xhtml">glFramebufferTexture2D()</db:link>.</db:para>
</db:section>
<db:section xml:id="glFrontFace">
<db:title>[since 5.3] void QOpenGLFunctions::glFrontFace(GLenum <db:emphasis>mode</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glFrontFace</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glFrontFace(GLenum mode)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glFrontFace(<db:code role="parameter">mode</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glFrontFace.xhtml">glFrontFace()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glGenBuffers">
<db:title>void QOpenGLFunctions::glGenBuffers(GLsizei <db:emphasis>n</db:emphasis>, GLuint *<db:emphasis>buffers</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGenBuffers</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>buffers</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGenBuffers(GLsizei n, GLuint *buffers)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGenBuffers(<db:code role="parameter">n</db:code>, <db:code role="parameter">buffers</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGenBuffers.xhtml">glGenBuffers()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGenFramebuffers">
<db:title>void QOpenGLFunctions::glGenFramebuffers(GLsizei <db:emphasis>n</db:emphasis>, GLuint *<db:emphasis>framebuffers</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGenFramebuffers</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>framebuffers</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGenFramebuffers(GLsizei n, GLuint *framebuffers)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGenFramebuffers(<db:code role="parameter">n</db:code>, <db:code role="parameter">framebuffers</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGenFramebuffers.xhtml">glGenFramebuffers()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGenRenderbuffers">
<db:title>void QOpenGLFunctions::glGenRenderbuffers(GLsizei <db:emphasis>n</db:emphasis>, GLuint *<db:emphasis>renderbuffers</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGenRenderbuffers</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>renderbuffers</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGenRenderbuffers(GLsizei n, GLuint *renderbuffers)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGenRenderbuffers(<db:code role="parameter">n</db:code>, <db:code role="parameter">renderbuffers</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGenRenderbuffers.xhtml">glGenRenderbuffers()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGenTextures">
<db:title>[since 5.3] void QOpenGLFunctions::glGenTextures(GLsizei <db:emphasis>n</db:emphasis>, GLuint *<db:emphasis>textures</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGenTextures</db:methodname>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>textures</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGenTextures(GLsizei n, GLuint *textures)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGenTextures(<db:code role="parameter">n</db:code>, <db:code role="parameter">textures</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGenTextures.xhtml">glGenTextures()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glGenerateMipmap">
<db:title>void QOpenGLFunctions::glGenerateMipmap(GLenum <db:emphasis>target</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGenerateMipmap</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGenerateMipmap(GLenum target)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGenerateMipmap(<db:code role="parameter">target</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGenerateMipmap.xhtml">glGenerateMipmap()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetActiveAttrib">
<db:title>void QOpenGLFunctions::glGetActiveAttrib(GLuint <db:emphasis>program</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>, GLsizei <db:emphasis>bufsize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, GLint *<db:emphasis>size</db:emphasis>, GLenum *<db:emphasis>type</db:emphasis>, char *<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetActiveAttrib</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufsize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum *</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>char *</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufsize, GLsizei *length, GLint *size, GLenum *type, char *name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetActiveAttrib(<db:code role="parameter">program</db:code>, <db:code role="parameter">index</db:code>, <db:code role="parameter">bufsize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">size</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">name</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetActiveAttrib.xhtml">glGetActiveAttrib()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetActiveUniform">
<db:title>void QOpenGLFunctions::glGetActiveUniform(GLuint <db:emphasis>program</db:emphasis>, GLuint <db:emphasis>index</db:emphasis>, GLsizei <db:emphasis>bufsize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, GLint *<db:emphasis>size</db:emphasis>, GLenum *<db:emphasis>type</db:emphasis>, char *<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetActiveUniform</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufsize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum *</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>char *</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetActiveUniform(GLuint program, GLuint index, GLsizei bufsize, GLsizei *length, GLint *size, GLenum *type, char *name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetActiveUniform(<db:code role="parameter">program</db:code>, <db:code role="parameter">index</db:code>, <db:code role="parameter">bufsize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">size</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">name</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetActiveUniform.xhtml">glGetActiveUniform()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetAttachedShaders">
<db:title>void QOpenGLFunctions::glGetAttachedShaders(GLuint <db:emphasis>program</db:emphasis>, GLsizei <db:emphasis>maxcount</db:emphasis>, GLsizei *<db:emphasis>count</db:emphasis>, GLuint *<db:emphasis>shaders</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetAttachedShaders</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>maxcount</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint *</db:type>
<db:parameter>shaders</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetAttachedShaders(GLuint program, GLsizei maxcount, GLsizei *count, GLuint *shaders)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetAttachedShaders(<db:code role="parameter">program</db:code>, <db:code role="parameter">maxcount</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">shaders</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetAttachedShaders.xhtml">glGetAttachedShaders()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetAttribLocation">
<db:title>GLint QOpenGLFunctions::glGetAttribLocation(GLuint <db:emphasis>program</db:emphasis>, const char *<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLint</db:type>
<db:methodname>glGetAttribLocation</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const char *</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLint glGetAttribLocation(GLuint program, const char *name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetAttribLocation(<db:code role="parameter">program</db:code>, <db:code role="parameter">name</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetAttribLocation.xhtml">glGetAttribLocation()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetBooleanv">
<db:title>[since 5.3] void QOpenGLFunctions::glGetBooleanv(GLenum <db:emphasis>pname</db:emphasis>, GLboolean *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetBooleanv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetBooleanv(GLenum pname, GLboolean *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetBooleanv(<db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGet.xhtml">glGetBooleanv()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glGetBufferParameteriv">
<db:title>void QOpenGLFunctions::glGetBufferParameteriv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetBufferParameteriv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetBufferParameteriv(GLenum target, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetBufferParameteriv(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetBufferParameter.xhtml">glGetBufferParameteriv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetError">
<db:title>[since 5.3] GLenum QOpenGLFunctions::glGetError()</db:title>
<db:methodsynopsis>
<db:type>GLenum</db:type>
<db:methodname>glGetError</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLenum glGetError()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetError().</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetError.xhtml">glGetError()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glGetFloatv">
<db:title>[since 5.3] void QOpenGLFunctions::glGetFloatv(GLenum <db:emphasis>pname</db:emphasis>, GLfloat *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetFloatv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetFloatv(GLenum pname, GLfloat *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetFloatv(<db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGet.xhtml">glGetFloatv()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glGetFramebufferAttachmentParameteriv">
<db:title>void QOpenGLFunctions::glGetFramebufferAttachmentParameteriv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>attachment</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetFramebufferAttachmentParameteriv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>attachment</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetFramebufferAttachmentParameteriv(<db:code role="parameter">target</db:code>, <db:code role="parameter">attachment</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetFramebufferAttachmentParameteriv.xhtml">glGetFramebufferAttachmentParameteriv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetIntegerv">
<db:title>[since 5.3] void QOpenGLFunctions::glGetIntegerv(GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetIntegerv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetIntegerv(GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetIntegerv(<db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGet.xhtml">glGetIntegerv()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glGetProgramInfoLog">
<db:title>void QOpenGLFunctions::glGetProgramInfoLog(GLuint <db:emphasis>program</db:emphasis>, GLsizei <db:emphasis>bufsize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, char *<db:emphasis>infolog</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetProgramInfoLog</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufsize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>char *</db:type>
<db:parameter>infolog</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetProgramInfoLog(GLuint program, GLsizei bufsize, GLsizei *length, char *infolog)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetProgramInfoLog(<db:code role="parameter">program</db:code>, <db:code role="parameter">bufsize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">infolog</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetProgramInfoLog.xhtml">glGetProgramInfoLog()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetProgramiv">
<db:title>void QOpenGLFunctions::glGetProgramiv(GLuint <db:emphasis>program</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetProgramiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetProgramiv(GLuint program, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetProgramiv(<db:code role="parameter">program</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetProgramiv.xhtml">glGetProgramiv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetRenderbufferParameteriv">
<db:title>void QOpenGLFunctions::glGetRenderbufferParameteriv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetRenderbufferParameteriv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetRenderbufferParameteriv(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetRenderbufferParameteriv.xhtml">glGetRenderbufferParameteriv()</db:link>.</db:para>
</db:section>
<db:section xml:id="glGetShaderInfoLog">
<db:title>void QOpenGLFunctions::glGetShaderInfoLog(GLuint <db:emphasis>shader</db:emphasis>, GLsizei <db:emphasis>bufsize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, char *<db:emphasis>infolog</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetShaderInfoLog</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>shader</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufsize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>char *</db:type>
<db:parameter>infolog</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetShaderInfoLog(GLuint shader, GLsizei bufsize, GLsizei *length, char *infolog)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetShaderInfoLog(<db:code role="parameter">shader</db:code>, <db:code role="parameter">bufsize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">infolog</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetShaderInfoLog.xhtml">glGetShaderInfoLog()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetShaderPrecisionFormat">
<db:title>void QOpenGLFunctions::glGetShaderPrecisionFormat(GLenum <db:emphasis>shadertype</db:emphasis>, GLenum <db:emphasis>precisiontype</db:emphasis>, GLint *<db:emphasis>range</db:emphasis>, GLint *<db:emphasis>precision</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetShaderPrecisionFormat</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>shadertype</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>precisiontype</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>range</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>precision</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetShaderPrecisionFormat(<db:code role="parameter">shadertype</db:code>, <db:code role="parameter">precisiontype</db:code>, <db:code role="parameter">range</db:code>, <db:code role="parameter">precision</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetShaderPrecisionFormat.xhtml">glGetShaderPrecisionFormat()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetShaderSource">
<db:title>void QOpenGLFunctions::glGetShaderSource(GLuint <db:emphasis>shader</db:emphasis>, GLsizei <db:emphasis>bufsize</db:emphasis>, GLsizei *<db:emphasis>length</db:emphasis>, char *<db:emphasis>source</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetShaderSource</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>shader</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>bufsize</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>char *</db:type>
<db:parameter>source</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetShaderSource(GLuint shader, GLsizei bufsize, GLsizei *length, char *source)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetShaderSource(<db:code role="parameter">shader</db:code>, <db:code role="parameter">bufsize</db:code>, <db:code role="parameter">length</db:code>, <db:code role="parameter">source</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetShaderSource.xhtml">glGetShaderSource()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetShaderiv">
<db:title>void QOpenGLFunctions::glGetShaderiv(GLuint <db:emphasis>shader</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetShaderiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>shader</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetShaderiv(GLuint shader, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetShaderiv(<db:code role="parameter">shader</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetShaderiv.xhtml">glGetShaderiv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetString">
<db:title>[since 5.3] const GLubyte *QOpenGLFunctions::glGetString(GLenum <db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>const GLubyte *</db:type>
<db:methodname>glGetString</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">const GLubyte * glGetString(GLenum name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetString(<db:code role="parameter">name</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetString.xhtml">glGetString()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glGetTexParameterfv">
<db:title>[since 5.3] void QOpenGLFunctions::glGetTexParameterfv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLfloat *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetTexParameterfv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetTexParameterfv(GLenum target, GLenum pname, GLfloat *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetTexParameterfv(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetTexParameter.xhtml">glGetTexParameterfv()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glGetTexParameteriv">
<db:title>[since 5.3] void QOpenGLFunctions::glGetTexParameteriv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetTexParameteriv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetTexParameteriv(GLenum target, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetTexParameteriv(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetTexParameter.xhtml">glGetTexParameteriv()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glGetUniformLocation">
<db:title>GLint QOpenGLFunctions::glGetUniformLocation(GLuint <db:emphasis>program</db:emphasis>, const char *<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLint</db:type>
<db:methodname>glGetUniformLocation</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const char *</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLint glGetUniformLocation(GLuint program, const char *name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetUniformLocation(<db:code role="parameter">program</db:code>, <db:code role="parameter">name</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetUniformLocation.xhtml">glGetUniformLocation()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetUniformfv">
<db:title>void QOpenGLFunctions::glGetUniformfv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLfloat *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetUniformfv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetUniformfv(GLuint program, GLint location, GLfloat *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetUniformfv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetUniform.xhtml">glGetUniformfv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetUniformiv">
<db:title>void QOpenGLFunctions::glGetUniformiv(GLuint <db:emphasis>program</db:emphasis>, GLint <db:emphasis>location</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetUniformiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetUniformiv(GLuint program, GLint location, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetUniformiv(<db:code role="parameter">program</db:code>, <db:code role="parameter">location</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetUniform.xhtml">glGetUniformiv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetVertexAttribPointerv">
<db:title>void QOpenGLFunctions::glGetVertexAttribPointerv(GLuint <db:emphasis>index</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, void **<db:emphasis>pointer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetVertexAttribPointerv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>void **</db:type>
<db:parameter>pointer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetVertexAttribPointerv(GLuint index, GLenum pname, void **pointer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetVertexAttribPointerv(<db:code role="parameter">index</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">pointer</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetVertexAttribPointerv.xhtml">glGetVertexAttribPointerv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetVertexAttribfv">
<db:title>void QOpenGLFunctions::glGetVertexAttribfv(GLuint <db:emphasis>index</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLfloat *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetVertexAttribfv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetVertexAttribfv(<db:code role="parameter">index</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetVertexAttrib.xhtml">glGetVertexAttribfv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glGetVertexAttribiv">
<db:title>void QOpenGLFunctions::glGetVertexAttribiv(GLuint <db:emphasis>index</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glGetVertexAttribiv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>index</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glGetVertexAttribiv(GLuint index, GLenum pname, GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glGetVertexAttribiv(<db:code role="parameter">index</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glGetVertexAttrib.xhtml">glGetVertexAttribiv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glHint">
<db:title>[since 5.3] void QOpenGLFunctions::glHint(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>mode</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glHint</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>mode</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glHint(GLenum target, GLenum mode)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glHint(<db:code role="parameter">target</db:code>, <db:code role="parameter">mode</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glHint.xhtml">glHint()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glIsBuffer">
<db:title>GLboolean QOpenGLFunctions::glIsBuffer(GLuint <db:emphasis>buffer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsBuffer</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>buffer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsBuffer(GLuint buffer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsBuffer(<db:code role="parameter">buffer</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsBuffer.xhtml">glIsBuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glIsEnabled">
<db:title>[since 5.3] GLboolean QOpenGLFunctions::glIsEnabled(GLenum <db:emphasis>cap</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsEnabled</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>cap</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsEnabled(GLenum cap)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsEnabled(<db:code role="parameter">cap</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsEnabled.xhtml">glIsEnabled()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glIsFramebuffer">
<db:title>GLboolean QOpenGLFunctions::glIsFramebuffer(GLuint <db:emphasis>framebuffer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsFramebuffer</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>framebuffer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsFramebuffer(GLuint framebuffer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsFramebuffer(<db:code role="parameter">framebuffer</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsFramebuffer.xhtml">glIsFramebuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glIsProgram">
<db:title>GLboolean QOpenGLFunctions::glIsProgram(GLuint <db:emphasis>program</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsProgram</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsProgram(GLuint program)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsProgram(<db:code role="parameter">program</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsProgram.xhtml">glIsProgram()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glIsRenderbuffer">
<db:title>GLboolean QOpenGLFunctions::glIsRenderbuffer(GLuint <db:emphasis>renderbuffer</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsRenderbuffer</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>renderbuffer</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsRenderbuffer(GLuint renderbuffer)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsRenderbuffer(<db:code role="parameter">renderbuffer</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsRenderbuffer.xhtml">glIsRenderbuffer()</db:link>.</db:para>
</db:section>
<db:section xml:id="glIsShader">
<db:title>GLboolean QOpenGLFunctions::glIsShader(GLuint <db:emphasis>shader</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsShader</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>shader</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsShader(GLuint shader)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsShader(<db:code role="parameter">shader</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsShader.xhtml">glIsShader()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glIsTexture">
<db:title>[since 5.3] GLboolean QOpenGLFunctions::glIsTexture(GLuint <db:emphasis>texture</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>GLboolean</db:type>
<db:methodname>glIsTexture</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>texture</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">GLboolean glIsTexture(GLuint texture)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glIsTexture(<db:code role="parameter">texture</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glIsTexture.xhtml">glIsTexture()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glLineWidth">
<db:title>[since 5.3] void QOpenGLFunctions::glLineWidth(GLfloat <db:emphasis>width</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glLineWidth</db:methodname>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glLineWidth(GLfloat width)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glLineWidth(<db:code role="parameter">width</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glLineWidth.xhtml">glLineWidth()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glLinkProgram">
<db:title>void QOpenGLFunctions::glLinkProgram(GLuint <db:emphasis>program</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glLinkProgram</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glLinkProgram(GLuint program)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glLinkProgram(<db:code role="parameter">program</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glLinkProgram.xhtml">glLinkProgram()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glPixelStorei">
<db:title>[since 5.3] void QOpenGLFunctions::glPixelStorei(GLenum <db:emphasis>pname</db:emphasis>, GLint <db:emphasis>param</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glPixelStorei</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>param</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glPixelStorei(GLenum pname, GLint param)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glPixelStorei(<db:code role="parameter">pname</db:code>, <db:code role="parameter">param</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glPixelStorei.xhtml">glPixelStorei()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glPolygonOffset">
<db:title>[since 5.3] void QOpenGLFunctions::glPolygonOffset(GLfloat <db:emphasis>factor</db:emphasis>, GLfloat <db:emphasis>units</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glPolygonOffset</db:methodname>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>factor</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>units</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glPolygonOffset(GLfloat factor, GLfloat units)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glPolygonOffset(<db:code role="parameter">factor</db:code>, <db:code role="parameter">units</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glPolygonOffset.xhtml">glPolygonOffset()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glReadPixels">
<db:title>[since 5.3] void QOpenGLFunctions::glReadPixels(GLint <db:emphasis>x</db:emphasis>, GLint <db:emphasis>y</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLenum <db:emphasis>format</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, GLvoid *<db:emphasis>pixels</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glReadPixels</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLvoid *</db:type>
<db:parameter>pixels</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glReadPixels(<db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">format</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">pixels</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glReadPixels.xhtml">glReadPixels()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glReleaseShaderCompiler">
<db:title>void QOpenGLFunctions::glReleaseShaderCompiler()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glReleaseShaderCompiler</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glReleaseShaderCompiler()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glReleaseShaderCompiler().</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glReleaseShaderCompiler.xhtml">glReleaseShaderCompiler()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glRenderbufferStorage">
<db:title>void QOpenGLFunctions::glRenderbufferStorage(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>internalformat</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glRenderbufferStorage</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glRenderbufferStorage(<db:code role="parameter">target</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glRenderbufferStorage.xhtml">glRenderbufferStorage()</db:link>.</db:para>
</db:section>
<db:section xml:id="glSampleCoverage">
<db:title>void QOpenGLFunctions::glSampleCoverage(GLclampf <db:emphasis>value</db:emphasis>, GLboolean <db:emphasis>invert</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glSampleCoverage</db:methodname>
<db:methodparam>
<db:type>GLclampf</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>invert</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glSampleCoverage(GLclampf value, GLboolean invert)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glSampleCoverage(<db:code role="parameter">value</db:code>, <db:code role="parameter">invert</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSampleCoverage.xhtml">glSampleCoverage()</db:link>.</db:para>
</db:section>
<db:section xml:id="glScissor">
<db:title>[since 5.3] void QOpenGLFunctions::glScissor(GLint <db:emphasis>x</db:emphasis>, GLint <db:emphasis>y</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glScissor</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glScissor(GLint x, GLint y, GLsizei width, GLsizei height)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glScissor(<db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glScissor.xhtml">glScissor()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glShaderBinary">
<db:title>void QOpenGLFunctions::glShaderBinary(GLint <db:emphasis>n</db:emphasis>, const GLuint *<db:emphasis>shaders</db:emphasis>, GLenum <db:emphasis>binaryformat</db:emphasis>, const void *<db:emphasis>binary</db:emphasis>, GLint <db:emphasis>length</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glShaderBinary</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>n</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLuint *</db:type>
<db:parameter>shaders</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>binaryformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>binary</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glShaderBinary(GLint n, const GLuint *shaders, GLenum binaryformat, const void *binary, GLint length)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glShaderBinary(<db:code role="parameter">n</db:code>, <db:code role="parameter">shaders</db:code>, <db:code role="parameter">binaryformat</db:code>, <db:code role="parameter">binary</db:code>, <db:code role="parameter">length</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glShaderBinary.xhtml">glShaderBinary()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glShaderSource">
<db:title>void QOpenGLFunctions::glShaderSource(GLuint <db:emphasis>shader</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const char **<db:emphasis>string</db:emphasis>, const GLint *<db:emphasis>length</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glShaderSource</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>shader</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const char **</db:type>
<db:parameter>string</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>length</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glShaderSource(GLuint shader, GLsizei count, const char **string, const GLint *length)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glShaderSource(<db:code role="parameter">shader</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">string</db:code>, <db:code role="parameter">length</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glShaderSource.xhtml">glShaderSource()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glStencilFunc">
<db:title>[since 5.3] void QOpenGLFunctions::glStencilFunc(GLenum <db:emphasis>func</db:emphasis>, GLint <db:emphasis>ref</db:emphasis>, GLuint <db:emphasis>mask</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glStencilFunc</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>func</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>ref</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>mask</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glStencilFunc(GLenum func, GLint ref, GLuint mask)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glStencilFunc(<db:code role="parameter">func</db:code>, <db:code role="parameter">ref</db:code>, <db:code role="parameter">mask</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glStencilFunc.xhtml">glStencilFunc()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glStencilFuncSeparate">
<db:title>void QOpenGLFunctions::glStencilFuncSeparate(GLenum <db:emphasis>face</db:emphasis>, GLenum <db:emphasis>func</db:emphasis>, GLint <db:emphasis>ref</db:emphasis>, GLuint <db:emphasis>mask</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glStencilFuncSeparate</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>face</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>func</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>ref</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>mask</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glStencilFuncSeparate(<db:code role="parameter">face</db:code>, <db:code role="parameter">func</db:code>, <db:code role="parameter">ref</db:code>, <db:code role="parameter">mask</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glStencilFuncSeparate.xhtml">glStencilFuncSeparate()</db:link>.</db:para>
</db:section>
<db:section xml:id="glStencilMask">
<db:title>[since 5.3] void QOpenGLFunctions::glStencilMask(GLuint <db:emphasis>mask</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glStencilMask</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>mask</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glStencilMask(GLuint mask)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glStencilMask(<db:code role="parameter">mask</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glStencilMask.xhtml">glStencilMask()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glStencilMaskSeparate">
<db:title>void QOpenGLFunctions::glStencilMaskSeparate(GLenum <db:emphasis>face</db:emphasis>, GLuint <db:emphasis>mask</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glStencilMaskSeparate</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>face</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>mask</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glStencilMaskSeparate(GLenum face, GLuint mask)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glStencilMaskSeparate(<db:code role="parameter">face</db:code>, <db:code role="parameter">mask</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glStencilMaskSeparate.xhtml">glStencilMaskSeparate()</db:link>.</db:para>
</db:section>
<db:section xml:id="glStencilOp">
<db:title>[since 5.3] void QOpenGLFunctions::glStencilOp(GLenum <db:emphasis>fail</db:emphasis>, GLenum <db:emphasis>zfail</db:emphasis>, GLenum <db:emphasis>zpass</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glStencilOp</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>fail</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>zfail</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>zpass</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glStencilOp(GLenum fail, GLenum zfail, GLenum zpass)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glStencilOp(<db:code role="parameter">fail</db:code>, <db:code role="parameter">zfail</db:code>, <db:code role="parameter">zpass</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glStencilOp.xhtml">glStencilOp()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glStencilOpSeparate">
<db:title>void QOpenGLFunctions::glStencilOpSeparate(GLenum <db:emphasis>face</db:emphasis>, GLenum <db:emphasis>fail</db:emphasis>, GLenum <db:emphasis>zfail</db:emphasis>, GLenum <db:emphasis>zpass</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glStencilOpSeparate</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>face</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>fail</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>zfail</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>zpass</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glStencilOpSeparate(GLenum face, GLenum fail, GLenum zfail, GLenum zpass)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glStencilOpSeparate(<db:code role="parameter">face</db:code>, <db:code role="parameter">fail</db:code>, <db:code role="parameter">zfail</db:code>, <db:code role="parameter">zpass</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glStencilOpSeparate.xhtml">glStencilOpSeparate()</db:link>.</db:para>
</db:section>
<db:section xml:id="glTexImage2D">
<db:title>[since 5.3] void QOpenGLFunctions::glTexImage2D(GLenum <db:emphasis>target</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLint <db:emphasis>internalformat</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLint <db:emphasis>border</db:emphasis>, GLenum <db:emphasis>format</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, const GLvoid *<db:emphasis>pixels</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexImage2D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>internalformat</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>border</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLvoid *</db:type>
<db:parameter>pixels</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexImage2D(<db:code role="parameter">target</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">internalformat</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">border</db:code>, <db:code role="parameter">format</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">pixels</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexImage2D.xhtml">glTexImage2D()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glTexParameterf">
<db:title>[since 5.3] void QOpenGLFunctions::glTexParameterf(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLfloat <db:emphasis>param</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexParameterf</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>param</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexParameterf(GLenum target, GLenum pname, GLfloat param)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexParameterf(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">param</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexParameter.xhtml">glTexParameterf()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glTexParameterfv">
<db:title>[since 5.3] void QOpenGLFunctions::glTexParameterfv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, const GLfloat *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexParameterfv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexParameterfv(GLenum target, GLenum pname, const GLfloat *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexParameterfv(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexParameter.xhtml">glTexParameterfv()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glTexParameteri">
<db:title>[since 5.3] void QOpenGLFunctions::glTexParameteri(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, GLint <db:emphasis>param</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexParameteri</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>param</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexParameteri(GLenum target, GLenum pname, GLint param)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexParameteri(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">param</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexParameter.xhtml">glTexParameteri()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glTexParameteriv">
<db:title>[since 5.3] void QOpenGLFunctions::glTexParameteriv(GLenum <db:emphasis>target</db:emphasis>, GLenum <db:emphasis>pname</db:emphasis>, const GLint *<db:emphasis>params</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexParameteriv</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>pname</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>params</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexParameteriv(GLenum target, GLenum pname, const GLint *params)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexParameteriv(<db:code role="parameter">target</db:code>, <db:code role="parameter">pname</db:code>, <db:code role="parameter">params</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexParameter.xhtml">glTexParameteriv()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glTexSubImage2D">
<db:title>[since 5.3] void QOpenGLFunctions::glTexSubImage2D(GLenum <db:emphasis>target</db:emphasis>, GLint <db:emphasis>level</db:emphasis>, GLint <db:emphasis>xoffset</db:emphasis>, GLint <db:emphasis>yoffset</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>, GLenum <db:emphasis>format</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, const GLvoid *<db:emphasis>pixels</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glTexSubImage2D</db:methodname>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>target</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>level</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>xoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>yoffset</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLvoid *</db:type>
<db:parameter>pixels</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glTexSubImage2D(<db:code role="parameter">target</db:code>, <db:code role="parameter">level</db:code>, <db:code role="parameter">xoffset</db:code>, <db:code role="parameter">yoffset</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>, <db:code role="parameter">format</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">pixels</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexSubImage2D.xhtml">glTexSubImage2D()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="glUniform1f">
<db:title>void QOpenGLFunctions::glUniform1f(GLint <db:emphasis>location</db:emphasis>, GLfloat <db:emphasis>x</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform1f</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform1f(GLint location, GLfloat x)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform1f(<db:code role="parameter">location</db:code>, <db:code role="parameter">x</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform1f()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform1fv">
<db:title>void QOpenGLFunctions::glUniform1fv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLfloat *<db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform1fv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform1fv(GLint location, GLsizei count, const GLfloat *v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform1fv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">v</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform1fv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform1i">
<db:title>void QOpenGLFunctions::glUniform1i(GLint <db:emphasis>location</db:emphasis>, GLint <db:emphasis>x</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform1i</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform1i(GLint location, GLint x)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform1i(<db:code role="parameter">location</db:code>, <db:code role="parameter">x</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform1i()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform1iv">
<db:title>void QOpenGLFunctions::glUniform1iv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLint *<db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform1iv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform1iv(GLint location, GLsizei count, const GLint *v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform1iv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">v</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform1iv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform2f">
<db:title>void QOpenGLFunctions::glUniform2f(GLint <db:emphasis>location</db:emphasis>, GLfloat <db:emphasis>x</db:emphasis>, GLfloat <db:emphasis>y</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform2f</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform2f(GLint location, GLfloat x, GLfloat y)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform2f(<db:code role="parameter">location</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform2f()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform2fv">
<db:title>void QOpenGLFunctions::glUniform2fv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLfloat *<db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform2fv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform2fv(GLint location, GLsizei count, const GLfloat *v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform2fv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">v</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform2fv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform2i">
<db:title>void QOpenGLFunctions::glUniform2i(GLint <db:emphasis>location</db:emphasis>, GLint <db:emphasis>x</db:emphasis>, GLint <db:emphasis>y</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform2i</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform2i(GLint location, GLint x, GLint y)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform2i(<db:code role="parameter">location</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform2i()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform2iv">
<db:title>void QOpenGLFunctions::glUniform2iv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLint *<db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform2iv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform2iv(GLint location, GLsizei count, const GLint *v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform2iv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">v</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform2iv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform3f">
<db:title>void QOpenGLFunctions::glUniform3f(GLint <db:emphasis>location</db:emphasis>, GLfloat <db:emphasis>x</db:emphasis>, GLfloat <db:emphasis>y</db:emphasis>, GLfloat <db:emphasis>z</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform3f</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>z</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform3f(GLint location, GLfloat x, GLfloat y, GLfloat z)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform3f(<db:code role="parameter">location</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">z</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform3f()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform3fv">
<db:title>void QOpenGLFunctions::glUniform3fv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLfloat *<db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform3fv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform3fv(GLint location, GLsizei count, const GLfloat *v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform3fv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">v</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform3fv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform3i">
<db:title>void QOpenGLFunctions::glUniform3i(GLint <db:emphasis>location</db:emphasis>, GLint <db:emphasis>x</db:emphasis>, GLint <db:emphasis>y</db:emphasis>, GLint <db:emphasis>z</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform3i</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>z</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform3i(GLint location, GLint x, GLint y, GLint z)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform3i(<db:code role="parameter">location</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">z</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform3i()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform3iv">
<db:title>void QOpenGLFunctions::glUniform3iv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLint *<db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform3iv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform3iv(GLint location, GLsizei count, const GLint *v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform3iv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">v</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform3iv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform4f">
<db:title>void QOpenGLFunctions::glUniform4f(GLint <db:emphasis>location</db:emphasis>, GLfloat <db:emphasis>x</db:emphasis>, GLfloat <db:emphasis>y</db:emphasis>, GLfloat <db:emphasis>z</db:emphasis>, GLfloat <db:emphasis>w</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform4f</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>z</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>w</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform4f(GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform4f(<db:code role="parameter">location</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">z</db:code>, <db:code role="parameter">w</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform4f()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform4fv">
<db:title>void QOpenGLFunctions::glUniform4fv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLfloat *<db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform4fv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform4fv(GLint location, GLsizei count, const GLfloat *v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform4fv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">v</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform4fv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform4i">
<db:title>void QOpenGLFunctions::glUniform4i(GLint <db:emphasis>location</db:emphasis>, GLint <db:emphasis>x</db:emphasis>, GLint <db:emphasis>y</db:emphasis>, GLint <db:emphasis>z</db:emphasis>, GLint <db:emphasis>w</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform4i</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>z</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>w</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform4i(GLint location, GLint x, GLint y, GLint z, GLint w)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform4i(<db:code role="parameter">location</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">z</db:code>, <db:code role="parameter">w</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform4i()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniform4iv">
<db:title>void QOpenGLFunctions::glUniform4iv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, const GLint *<db:emphasis>v</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniform4iv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLint *</db:type>
<db:parameter>v</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniform4iv(GLint location, GLsizei count, const GLint *v)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniform4iv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">v</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniform4iv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniformMatrix2fv">
<db:title>void QOpenGLFunctions::glUniformMatrix2fv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniformMatrix2fv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniformMatrix2fv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniformMatrix2fv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniformMatrix3fv">
<db:title>void QOpenGLFunctions::glUniformMatrix3fv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniformMatrix3fv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniformMatrix3fv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniformMatrix3fv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUniformMatrix4fv">
<db:title>void QOpenGLFunctions::glUniformMatrix4fv(GLint <db:emphasis>location</db:emphasis>, GLsizei <db:emphasis>count</db:emphasis>, GLboolean <db:emphasis>transpose</db:emphasis>, const GLfloat *<db:emphasis>value</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUniformMatrix4fv</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>location</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>count</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>transpose</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>value</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUniformMatrix4fv(<db:code role="parameter">location</db:code>, <db:code role="parameter">count</db:code>, <db:code role="parameter">transpose</db:code>, <db:code role="parameter">value</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml">glUniformMatrix4fv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glUseProgram">
<db:title>void QOpenGLFunctions::glUseProgram(GLuint <db:emphasis>program</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glUseProgram</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glUseProgram(GLuint program)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glUseProgram(<db:code role="parameter">program</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUseProgram.xhtml">glUseProgram()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glValidateProgram">
<db:title>void QOpenGLFunctions::glValidateProgram(GLuint <db:emphasis>program</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glValidateProgram</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>program</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glValidateProgram(GLuint program)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glValidateProgram(<db:code role="parameter">program</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glValidateProgram.xhtml">glValidateProgram()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glVertexAttrib1f">
<db:title>void QOpenGLFunctions::glVertexAttrib1f(GLuint <db:emphasis>indx</db:emphasis>, GLfloat <db:emphasis>x</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttrib1f</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>indx</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttrib1f(GLuint indx, GLfloat x)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttrib1f(<db:code role="parameter">indx</db:code>, <db:code role="parameter">x</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml">glVertexAttrib1f()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glVertexAttrib1fv">
<db:title>void QOpenGLFunctions::glVertexAttrib1fv(GLuint <db:emphasis>indx</db:emphasis>, const GLfloat *<db:emphasis>values</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttrib1fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>indx</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>values</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttrib1fv(GLuint indx, const GLfloat *values)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttrib1fv(<db:code role="parameter">indx</db:code>, <db:code role="parameter">values</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml">glVertexAttrib1fv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glVertexAttrib2f">
<db:title>void QOpenGLFunctions::glVertexAttrib2f(GLuint <db:emphasis>indx</db:emphasis>, GLfloat <db:emphasis>x</db:emphasis>, GLfloat <db:emphasis>y</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttrib2f</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>indx</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttrib2f(GLuint indx, GLfloat x, GLfloat y)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttrib2f(<db:code role="parameter">indx</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml">glVertexAttrib2f()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glVertexAttrib2fv">
<db:title>void QOpenGLFunctions::glVertexAttrib2fv(GLuint <db:emphasis>indx</db:emphasis>, const GLfloat *<db:emphasis>values</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttrib2fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>indx</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>values</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttrib2fv(GLuint indx, const GLfloat *values)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttrib2fv(<db:code role="parameter">indx</db:code>, <db:code role="parameter">values</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml">glVertexAttrib2fv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glVertexAttrib3f">
<db:title>void QOpenGLFunctions::glVertexAttrib3f(GLuint <db:emphasis>indx</db:emphasis>, GLfloat <db:emphasis>x</db:emphasis>, GLfloat <db:emphasis>y</db:emphasis>, GLfloat <db:emphasis>z</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttrib3f</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>indx</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>z</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttrib3f(GLuint indx, GLfloat x, GLfloat y, GLfloat z)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttrib3f(<db:code role="parameter">indx</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">z</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml">glVertexAttrib3f()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glVertexAttrib3fv">
<db:title>void QOpenGLFunctions::glVertexAttrib3fv(GLuint <db:emphasis>indx</db:emphasis>, const GLfloat *<db:emphasis>values</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttrib3fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>indx</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>values</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttrib3fv(GLuint indx, const GLfloat *values)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttrib3fv(<db:code role="parameter">indx</db:code>, <db:code role="parameter">values</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml">glVertexAttrib3fv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glVertexAttrib4f">
<db:title>void QOpenGLFunctions::glVertexAttrib4f(GLuint <db:emphasis>indx</db:emphasis>, GLfloat <db:emphasis>x</db:emphasis>, GLfloat <db:emphasis>y</db:emphasis>, GLfloat <db:emphasis>z</db:emphasis>, GLfloat <db:emphasis>w</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttrib4f</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>indx</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>z</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLfloat</db:type>
<db:parameter>w</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttrib4f(GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttrib4f(<db:code role="parameter">indx</db:code>, <db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">z</db:code>, <db:code role="parameter">w</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml">glVertexAttrib4f()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glVertexAttrib4fv">
<db:title>void QOpenGLFunctions::glVertexAttrib4fv(GLuint <db:emphasis>indx</db:emphasis>, const GLfloat *<db:emphasis>values</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttrib4fv</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>indx</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const GLfloat *</db:type>
<db:parameter>values</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttrib4fv(GLuint indx, const GLfloat *values)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttrib4fv(<db:code role="parameter">indx</db:code>, <db:code role="parameter">values</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml">glVertexAttrib4fv()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glVertexAttribPointer">
<db:title>void QOpenGLFunctions::glVertexAttribPointer(GLuint <db:emphasis>indx</db:emphasis>, GLint <db:emphasis>size</db:emphasis>, GLenum <db:emphasis>type</db:emphasis>, GLboolean <db:emphasis>normalized</db:emphasis>, GLsizei <db:emphasis>stride</db:emphasis>, const void *<db:emphasis>ptr</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glVertexAttribPointer</db:methodname>
<db:methodparam>
<db:type>GLuint</db:type>
<db:parameter>indx</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLenum</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLboolean</db:type>
<db:parameter>normalized</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>stride</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const void *</db:type>
<db:parameter>ptr</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glVertexAttribPointer(GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *ptr)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glVertexAttribPointer(<db:code role="parameter">indx</db:code>, <db:code role="parameter">size</db:code>, <db:code role="parameter">type</db:code>, <db:code role="parameter">normalized</db:code>, <db:code role="parameter">stride</db:code>, <db:code role="parameter">ptr</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribPointer.xhtml">glVertexAttribPointer()</db:link>.</db:para>
<db:para>This convenience function will do nothing on OpenGL ES 1.x systems.</db:para>
</db:section>
<db:section xml:id="glViewport">
<db:title>[since 5.3] void QOpenGLFunctions::glViewport(GLint <db:emphasis>x</db:emphasis>, GLint <db:emphasis>y</db:emphasis>, GLsizei <db:emphasis>width</db:emphasis>, GLsizei <db:emphasis>height</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>glViewport</db:methodname>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>x</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLint</db:type>
<db:parameter>y</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>width</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>GLsizei</db:type>
<db:parameter>height</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void glViewport(GLint x, GLint y, GLsizei width, GLsizei height)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Convenience function that calls glViewport(<db:code role="parameter">x</db:code>, <db:code role="parameter">y</db:code>, <db:code role="parameter">width</db:code>, <db:code role="parameter">height</db:code>).</db:para>
<db:para>For more information, see the OpenGL ES 3.X documentation for <db:link xlink:href="https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glViewport.xhtml">glViewport()</db:link>.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="hasOpenGLFeature">
<db:title>bool QOpenGLFunctions::hasOpenGLFeature(QOpenGLFunctions::OpenGLFeature <db:emphasis>feature</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>hasOpenGLFeature</db:methodname>
<db:methodparam>
<db:type>QOpenGLFunctions::OpenGLFeature</db:type>
<db:parameter>feature</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool hasOpenGLFeature(QOpenGLFunctions::OpenGLFeature feature) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if <db:code role="parameter">feature</db:code> is present on this system's OpenGL implementation; false otherwise.</db:para>
<db:para>It is assumed that the <db:link xlink:href="qopenglcontext.xml">QOpenGLContext</db:link> associated with this function resolver is current.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopenglfunctions.xml#openGLFeatures">openGLFeatures</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="initializeOpenGLFunctions">
<db:title>void QOpenGLFunctions::initializeOpenGLFunctions()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>initializeOpenGLFunctions</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void initializeOpenGLFunctions()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Initializes OpenGL function resolution for the current context.</db:para>
<db:para>After calling this function, the <db:link xlink:href="qopenglfunctions.xml">QOpenGLFunctions</db:link> object can only be used with the current context and other contexts that share with it. Call initializeOpenGLFunctions() again to change the object's context association.</db:para>
</db:section>
<db:section xml:id="openGLFeatures">
<db:title>QOpenGLFunctions::OpenGLFeatures QOpenGLFunctions::openGLFeatures() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QOpenGLFunctions::OpenGLFeatures</db:type>
<db:methodname>openGLFeatures</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QOpenGLFunctions::OpenGLFeatures openGLFeatures() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the set of features that are present on this system's OpenGL implementation.</db:para>
<db:para>It is assumed that the <db:link xlink:href="qopenglcontext.xml">QOpenGLContext</db:link> associated with this function resolver is current.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qopenglfunctions.xml#hasOpenGLFeature">hasOpenGLFeature</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
