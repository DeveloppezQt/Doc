<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt3DExtras Namespace</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Contains classes from the Qt3DExtras module.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Qt3DExtras</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3dextras)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3dextras)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dextras</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Qt3DExtras is part of <db:simplelist><db:member>qt3d-namespaces</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qabstractcameracontroller.xml" xlink:role="class">QAbstractCameraController</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qabstractcameracontroller.xml">QAbstractCameraController</db:link> class provides basic functionality for camera controllers.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qconegeometry.xml" xlink:role="class">QConeGeometry</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qconegeometry.xml">QConeGeometry</db:link> class allows creation of a cone in 3D space.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qconegeometryview.xml" xlink:role="class">QConeGeometryView</db:link></db:title>
<db:para>A conical mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qconemesh.xml" xlink:role="class">QConeMesh</db:link></db:title>
<db:para>A conical mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qcuboidgeometry.xml" xlink:role="class">QCuboidGeometry</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qcuboidgeometry.xml">QCuboidGeometry</db:link> class allows creation of a cuboid in 3D space.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qcuboidgeometryview.xml" xlink:role="class">QCuboidGeometryView</db:link></db:title>
<db:para>A cuboid mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qcuboidmesh.xml" xlink:role="class">QCuboidMesh</db:link></db:title>
<db:para>A cuboid mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qcylindergeometry.xml" xlink:role="class">QCylinderGeometry</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qcylindergeometry.xml">QCylinderGeometry</db:link> class allows creation of a cylinder in 3D space.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qcylindergeometryview.xml" xlink:role="class">QCylinderGeometryView</db:link></db:title>
<db:para>A cylindrical mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qcylindermesh.xml" xlink:role="class">QCylinderMesh</db:link></db:title>
<db:para>A cylindrical mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml" xlink:role="class">QDiffuseSpecularMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml">QDiffuseSpecularMaterial</db:link> class provides a default implementation of the phong lighting effect.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qextrudedtextgeometry.xml" xlink:role="class">QExtrudedTextGeometry</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qextrudedtextgeometry.xml">QExtrudedTextGeometry</db:link> class allows creation of a 3D extruded text in 3D space.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qextrudedtextmesh.xml" xlink:role="class">QExtrudedTextMesh</db:link></db:title>
<db:para>A 3D extruded Text mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qfirstpersoncameracontroller.xml" xlink:role="class">QFirstPersonCameraController</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qfirstpersoncameracontroller.xml">QFirstPersonCameraController</db:link> class allows controlling the scene camera from the first person perspective.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qforwardrenderer.xml" xlink:role="class">QForwardRenderer</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qforwardrenderer.xml">QForwardRenderer</db:link> provides a default <db:link xlink:href="qt3drender-framegraph.xml">FrameGraph</db:link> implementation of a forward renderer.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qgoochmaterial.xml" xlink:role="class">QGoochMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qgoochmaterial.xml">QGoochMaterial</db:link> provides a material that implements the Gooch shading model, popular in CAD and CAM applications.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qmetalroughmaterial.xml" xlink:role="class">QMetalRoughMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qmetalroughmaterial.xml">QMetalRoughMaterial</db:link> provides a default implementation of PBR lighting.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qmorphphongmaterial.xml" xlink:role="class">QMorphPhongMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qmorphphongmaterial.xml">QMorphPhongMaterial</db:link> class provides a default implementation of the phong lighting effect.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qorbitcameracontroller.xml" xlink:role="class">QOrbitCameraController</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qorbitcameracontroller.xml">QOrbitCameraController</db:link> class allows controlling the scene camera along orbital path.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qpervertexcolormaterial.xml" xlink:role="class">QPerVertexColorMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qpervertexcolormaterial.xml">QPerVertexColorMaterial</db:link> class provides a default implementation for rendering the color properties set for each vertex.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qplanegeometry.xml" xlink:role="class">QPlaneGeometry</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qplanegeometry.xml">QPlaneGeometry</db:link> class allows creation of a plane in 3D space.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qplanegeometryview.xml" xlink:role="class">QPlaneGeometryView</db:link></db:title>
<db:para>A square planar mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qplanemesh.xml" xlink:role="class">QPlaneMesh</db:link></db:title>
<db:para>A square planar mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qskyboxentity.xml" xlink:role="class">QSkyboxEntity</db:link></db:title>
<db:para><db:link xlink:href="qt3dextras-qskyboxentity.xml">Qt3DExtras::QSkyboxEntity</db:link> is a convenience <db:link xlink:href="qt3dcore-qentity.xml">Qt3DCore::QEntity</db:link> subclass that can be used to insert a skybox in a 3D scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qspheregeometry.xml" xlink:role="class">QSphereGeometry</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qspheregeometry.xml">QSphereGeometry</db:link> class allows creation of a sphere in 3D space.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qspheregeometryview.xml" xlink:role="class">QSphereGeometryView</db:link></db:title>
<db:para>A spherical mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qspheremesh.xml" xlink:role="class">QSphereMesh</db:link></db:title>
<db:para>A spherical mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qtext2dentity.xml" xlink:role="class">QText2DEntity</db:link></db:title>
<db:para><db:link xlink:href="qt3dextras-qtext2dentity.xml">QText2DEntity</db:link> allows creation of a 2D text in 3D space.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qtexturematerial.xml" xlink:role="class">QTextureMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qtexturematerial.xml">QTextureMaterial</db:link> provides a default implementation of a simple unlit texture material.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qtorusgeometry.xml" xlink:role="class">QTorusGeometry</db:link></db:title>
<db:para>The <db:link xlink:href="qt3dextras-qtorusgeometry.xml">QTorusGeometry</db:link> class allows creation of a torus in 3D space.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qtorusgeometryview.xml" xlink:role="class">QTorusGeometryView</db:link></db:title>
<db:para>A toroidal mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3dextras-qtorusmesh.xml" xlink:role="class">QTorusMesh</db:link></db:title>
<db:para>A toroidal mesh.</db:para>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for Qt3DExtras</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qt3dextras.xml">Qt3DExtras</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-classes">
<db:title>Obsolete Classes</db:title>
<db:section>
<db:title>[deprecated] class Qt3DExtras::QDiffuseMapMaterial</db:title>
<db:para><db:emphasis role="bold">This class is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
<db:para>This class is deprecated; use <db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml">Qt3DExtras::QDiffuseSpecularMaterial</db:link> instead.</db:para>
<db:para>The specular lighting effect is based on the combination of 3 lighting components ambient, diffuse and specular. The relative strengths of these components are controlled by means of their reflectivity coefficients which are modelled as RGB triplets:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Ambient is the color that is emitted by an object without any other light source.</db:para>
</db:listitem>
<db:listitem>
<db:para>Diffuse is the color that is emitted for rought surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>Specular is the color emitted for shiny surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>The shininess of a surface is controlled by a float property.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>This material uses an effect with a single render pass approach and performs per fragment lighting. Techniques are provided for OpenGL 2, OpenGL 3 or above as well as OpenGL ES 2.</db:para>
</db:section>
<db:section>
<db:title>[deprecated] class Qt3DExtras::QDiffuseSpecularMapMaterial</db:title>
<db:para><db:emphasis role="bold">This class is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
<db:para>This class is deprecated; use <db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml">Qt3DExtras::QDiffuseSpecularMaterial</db:link> instead.</db:para>
<db:para>The specular lighting effect is based on the combination of 3 lighting components ambient, diffuse and specular. The relative strengths of these components are controlled by means of their reflectivity coefficients which are modelled as RGB triplets:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Ambient is the color that is emitted by an object without any other light source.</db:para>
</db:listitem>
<db:listitem>
<db:para>Diffuse is the color that is emitted for rough surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>Specular is the color emitted for shiny surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>The shininess of a surface is controlled by a float property.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>This material uses an effect with a single render pass approach and performs per fragment lighting. Techniques are provided for OpenGL 2, OpenGL 3 or above as well as OpenGL ES 2.</db:para>
</db:section>
<db:section>
<db:title>[deprecated] class Qt3DExtras::QNormalDiffuseMapAlphaMaterial</db:title>
<db:para><db:emphasis role="bold">This class is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
<db:para>This class is deprecated; use <db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml">Qt3DExtras::QDiffuseSpecularMaterial</db:link> instead.</db:para>
<db:para>The specular lighting effect is based on the combination of 3 lighting components ambient, diffuse and specular. The relative strengths of these components are controlled by means of their reflectivity coefficients which are modelled as RGB triplets:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Ambient is the color that is emitted by an object without any other light source.</db:para>
</db:listitem>
<db:listitem>
<db:para>Diffuse is the color that is emitted for rought surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>Specular is the color emitted for shiny surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>The shininess of a surface is controlled by a float property.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>This material uses an effect with a single render pass approach and performs per fragment lighting. Techniques are provided for OpenGL 2, OpenGL 3 or above as well as OpenGL ES 2.</db:para>
</db:section>
<db:section>
<db:title>[deprecated] class Qt3DExtras::QNormalDiffuseMapMaterial</db:title>
<db:para><db:emphasis role="bold">This class is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
<db:para>This class is deprecated; use <db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml">QDiffuseSpecularMaterial</db:link> instead.</db:para>
<db:para>The specular lighting effect is based on the combination of 3 lighting components ambient, diffuse and specular. The relative strengths of these components are controlled by means of their reflectivity coefficients which are modelled as RGB triplets:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Ambient is the color that is emitted by an object without any other light source.</db:para>
</db:listitem>
<db:listitem>
<db:para>Diffuse is the color that is emitted for rought surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>Specular is the color emitted for shiny surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>The shininess of a surface is controlled by a float property.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>This material uses an effect with a single render pass approach and performs per fragment lighting. Techniques are provided for OpenGL 2, OpenGL 3 or above as well as OpenGL ES 2.</db:para>
</db:section>
<db:section>
<db:title>[deprecated] class Qt3DExtras::QNormalDiffuseSpecularMapMaterial</db:title>
<db:para><db:emphasis role="bold">This class is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
<db:para>This class is deprecated; use <db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml">QDiffuseSpecularMaterial</db:link> instead.</db:para>
<db:para>The specular lighting effect is based on the combination of 3 lighting components ambient, diffuse and specular. The relative strengths of these components are controlled by means of their reflectivity coefficients which are modelled as RGB triplets:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Ambient is the color that is emitted by an object without any other light source.</db:para>
</db:listitem>
<db:listitem>
<db:para>Diffuse is the color that is emitted for rought surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>Specular is the color emitted for shiny surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>The shininess of a surface is controlled by a float property.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>This material uses an effect with a single render pass approach and performs per fragment lighting. Techniques are provided for OpenGL 2, OpenGL 3 or above as well as OpenGL ES 2.</db:para>
</db:section>
<db:section>
<db:title>[deprecated] class Qt3DExtras::QPhongAlphaMaterial</db:title>
<db:para><db:emphasis role="bold">This class is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
<db:para>This class is deprecated; use <db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml">QDiffuseSpecularMaterial</db:link> instead.</db:para>
<db:para>The phong lighting effect is based on the combination of 3 lighting components ambient, diffuse and specular. The relative strengths of these components are controlled by means of their reflectivity coefficients which are modelled as RGB triplets:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Ambient is the color that is emitted by an object without any other light source.</db:para>
</db:listitem>
<db:listitem>
<db:para>Diffuse is the color that is emitted for rought surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>Specular is the color emitted for shiny surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>The shininess of a surface is controlled by a float property.</db:para>
</db:listitem>
<db:listitem>
<db:para>Alpha is the transparency of the surface between 0 (fully transparent) and 1 (opaque).</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>This material uses an effect with a single render pass approach and performs per fragment lighting. Techniques are provided for OpenGL 2, OpenGL 3 or above as well as OpenGL ES 2.</db:para>
</db:section>
<db:section>
<db:title>[deprecated] class Qt3DExtras::QPhongMaterial</db:title>
<db:para><db:emphasis role="bold">This class is deprecated. We strongly advise against using it in new code.</db:emphasis></db:para>
<db:para>This class is deprecated; use <db:link xlink:href="qt3dextras-qdiffusespecularmaterial.xml">QDiffuseSpecularMaterial</db:link> instead.</db:para>
<db:para>The phong lighting effect is based on the combination of 3 lighting components ambient, diffuse and specular. The relative strengths of these components are controlled by means of their reflectivity coefficients which are modelled as RGB triplets:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Ambient is the color that is emitted by an object without any other light source.</db:para>
</db:listitem>
<db:listitem>
<db:para>Diffuse is the color that is emitted for rought surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>Specular is the color emitted for shiny surface reflections with the lights.</db:para>
</db:listitem>
<db:listitem>
<db:para>The shininess of a surface is controlled by a float property.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>This material uses an effect with a single render pass approach and performs per fragment lighting. Techniques are provided for OpenGL 2, OpenGL 3 or above as well as OpenGL ES 2.</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
