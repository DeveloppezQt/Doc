<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QtShellSurface QML Type</db:title>
<db:productname>QtWaylandCompositor</db:productname>
<db:edition>Qt Wayland Compositor | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Wayland Compositor Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides a simple way to identify and resize a surface.</db:para>
<db:para>This type was introduced in Qt 6.3.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtWayland.Compositor.QtShell</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.3</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This type is part of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshell.xml">QtShell</db:link> extension and provides a way to extend the functionality of an existing <db:link xlink:href="qml-qtwayland-compositor-waylandsurface.xml">WaylandSurface</db:link> with window management functionality.</db:para>
<db:para>The <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link> type holds the core functionality needed to create a compositor that supports the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshell.xml">QtShell</db:link> extension. It can be used directly, or via the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link> type, depending on what the needs of the compositor are. The <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link> type has default behaviors and convenience APIs for working with <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link> objects.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="active-prop">
<db:title>active : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>active</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the surface is currently considered active.</db:para>
<db:note>
<db:para>There are no restrictions in <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link> that prevents multiple surfaces from being active simultaneously. Such logic must either be implemented by the compositor itself, or by using the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellchrome.xml">QtShellChrome</db:link> type, which will automatically manage the activation state of surfaces.</db:para>
</db:note>
</db:section>
<db:section xml:id="capabilities-prop">
<db:title>capabilities : enum</db:title>
<db:fieldsynopsis>
<db:type>enum</db:type>
<db:varname>capabilities</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the capabilities of the compositor. By default, no special capabilities are enabled.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link>.InteractiveMove The client can trigger a server-side interactive move operation using <db:link xlink:href="qwindow.xml#startSystemMove">QWindow::startSystemMove</db:link>(). The compositor will be notified of this through the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml#startMove-signal">startMove</db:link>() signal.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link>.InteractiveResize The client can trigger a server-side interactive resize operation using <db:link xlink:href="qwindow.xml#startSystemResize">QWindow::startSystemResize</db:link>(). The compositor will be notified of this through the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml#startResize-signal">startResize</db:link>() signal.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="frameMarginBottom-prop">
<db:title>frameMarginBottom : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>frameMarginBottom</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This holds the window frame margin below the surface.</db:para>
</db:section>
<db:section xml:id="frameMarginLeft-prop">
<db:title>frameMarginLeft : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>frameMarginLeft</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This holds the window frame margin to the left of the surface.</db:para>
</db:section>
<db:section xml:id="frameMarginRight-prop">
<db:title>frameMarginRight : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>frameMarginRight</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This holds the window frame margin to the right of the surface.</db:para>
</db:section>
<db:section xml:id="frameMarginTop-prop">
<db:title>frameMarginTop : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>frameMarginTop</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This holds the window frame margin above the surface.</db:para>
</db:section>
<db:section xml:id="maximumSize-prop">
<db:title>maximumSize : size</db:title>
<db:fieldsynopsis>
<db:type>size</db:type>
<db:varname>maximumSize</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The maximum size of the window if the client has specified one. Otherwise an invalid size.</db:para>
</db:section>
<db:section xml:id="minimumSize-prop">
<db:title>minimumSize : size</db:title>
<db:fieldsynopsis>
<db:type>size</db:type>
<db:varname>minimumSize</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The minimum size of the window if the client has specified one. Otherwise an invalid size.</db:para>
</db:section>
<db:section xml:id="surface-prop">
<db:title>surface : WaylandSurface</db:title>
<db:fieldsynopsis>
<db:type>WaylandSurface</db:type>
<db:varname>surface</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the surface associated with this <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link>.</db:para>
</db:section>
<db:section xml:id="windowFlags-prop">
<db:title>windowFlags : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>windowFlags</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the window flags of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link>.</db:para>
</db:section>
<db:section xml:id="windowGeometry-prop">
<db:title>windowGeometry : rect</db:title>
<db:fieldsynopsis>
<db:type>rect</db:type>
<db:varname>windowGeometry</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the window geometry of the shell surface.</db:para>
</db:section>
<db:section xml:id="windowPosition-prop">
<db:title>windowPosition : point</db:title>
<db:fieldsynopsis>
<db:type>point</db:type>
<db:varname>windowPosition</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the position of the shell surface relative to its output.</db:para>
</db:section>
<db:section xml:id="windowState-prop">
<db:title>windowState : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>windowState</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the window state of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link>.</db:para>
<db:note>
<db:para>When <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml#requestWindowGeometry-method">requestWindowGeometry</db:link>() is called to update state of the surface, the <db:code>windowState</db:code> property will not be updated until the client has acknowledged the state change.</db:para>
</db:note>
</db:section>
<db:section xml:id="windowTitle-prop">
<db:title>windowTitle : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>windowTitle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the window title of the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link>.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="startMove-signal">
<db:title>void startMove()</db:title>
<db:para>The client has requested an interactive move operation in the compositor by calling <db:link xlink:href="qwindow.xml#startSystemMove">QWindow::startSystemMove</db:link>().</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onStartMove</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml#capabilities-prop">capabilities</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="startResize-signal">
<db:title>void startResize(enum <db:emphasis>edges</db:emphasis>)</db:title>
<db:para>The client has requested an interactive resize operation in the compositor by calling <db:link xlink:href="qwindow.xml#startSystemResize">QWindow::startSystemResize</db:link>().</db:para>
<db:para>The <db:code role="parameter">edges</db:code> provides information about which edge of the window should be moved during the resize. It is a mask of the following values:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Qt.TopEdge</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.LeftEdge</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.RightEdge</db:para>
</db:listitem>
<db:listitem>
<db:para>Qt.BottomEdge</db:para>
</db:listitem>
</db:itemizedlist>
<db:note>
<db:para>The corresponding handler is <db:code>onStartResize</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml#capabilities-prop">capabilities</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="initialize-method">
<db:title>void initialize(QtShell <db:emphasis>qtShell</db:emphasis>, WaylandSurface <db:emphasis>surface</db:emphasis>, WaylandResource <db:emphasis>resource</db:emphasis>)</db:title>
<db:para>Initializes the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link>, associating it with the given <db:code role="parameter">qtShell</db:code>, <db:code role="parameter">surface</db:code>, and <db:code role="parameter">resource</db:code>.</db:para>
</db:section>
<db:section xml:id="requestWindowGeometry-method">
<db:title>void requestWindowGeometry(int <db:emphasis>windowState</db:emphasis>, rect <db:emphasis>windowGeometry</db:emphasis>)</db:title>
<db:para>Requests a new <db:code role="parameter">windowState</db:code> and <db:code role="parameter">windowGeometry</db:code> for the <db:link xlink:href="qml-qtwayland-compositor-qtshell-qtshellsurface.xml">QtShellSurface</db:link>. The state and geometry is updated when the client has acknowledged the request (at which point it is safe to assume that the surface's buffer has been resized if necessary).</db:para>
</db:section>
<db:section xml:id="sendClose-method">
<db:title>void sendClose()</db:title>
<db:para>Requests that the client application closes itself.</db:para>
</db:section>
</db:section>
</db:article>
