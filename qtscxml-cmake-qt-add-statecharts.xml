<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>qt_add_statecharts</db:title>
<db:productname>QtScxml</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt SCXML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt SCXML Reference Documentation.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="qt6-add-statecharts"/>
<db:section xml:id="description">
<db:title>Description</db:title>
<db:para>The <db:code>qt6_add_statecharts</db:code> macro instructs CMake to invoke the qscxmlc tool to read the provided .scxml files and produce C++ source and header files, that contain the classes that implement the state machines as defined in SCXML.</db:para>
</db:section>
<db:section xml:id="synopsis">
<db:title>Synopsis</db:title>
<db:programlisting language="cpp" role="bad">qt6_add_statecharts(&amp;lt;TARGET&amp;gt; file1.scxml [file2.scxml ...]
                    [OPTIONS ...])
</db:programlisting>
<db:para>For further instructions, options and examples please refer to <db:link xlink:href="qscxmlc.xml">Using the Qt SCXML Compiler (qscxmlc)</db:link></db:para>
</db:section>
</db:article>
