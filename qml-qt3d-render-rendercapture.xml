<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>RenderCapture QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Capture rendering.</db:para>
<db:para>This type was introduced in Qt 5.8.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Render 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-framegraphnode.xml">FrameGraphNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In C++:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qrendercapture.xml">QRenderCapture</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="requestCapture-method">
<db:title>RenderCaptureReply requestCapture(int <db:emphasis>captureId</db:emphasis>)</db:title>
<db:para>Used to request render capture. User can specify a <db:code role="parameter">captureId</db:code> to identify the request. The requestId does not have to be unique. Only one render capture result is produced per requestCapture call even if the frame graph has multiple leaf nodes. The function returns a QRenderCaptureReply object, which receives the captured image when it is done. The user is reponsible for deallocating the returned object.</db:para>
</db:section>
</db:section>
</db:article>
