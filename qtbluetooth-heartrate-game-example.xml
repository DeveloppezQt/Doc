<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Bluetooth Low Energy Heart Rate Game</db:title>
<db:productname>QtBluetooth</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Bluetooth Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A game demonstrating the interaction with a Bluetooth Low Energy Heart Rate device/service.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Bluetooth Low Energy Heart Rate Game shows how to develop a Bluetooth Low Energy application using the <db:link xlink:href="qtbluetooth-module.xml">Qt Bluetooth API</db:link>. The application covers the scanning for Bluetooth Low Energy devices, connecting to a Heart Rate service on the device, writing characteristics and descriptors, and receiving updates from the device once the heart rate has changed.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/heartgame-start.webp"/>
</db:imageobject>
</db:mediaobject>
<db:para>The example introduces the following Qt classes:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qlowenergycontroller.xml">QLowEnergyController</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qlowenergyservice.xml">QLowEnergyService</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qlowenergycharacteristic.xml">QLowEnergyCharacteristic</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qlowenergydescriptor.xml">QLowEnergyDescriptor</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>A Bluetooth Low Energy device with a Heart Rate service is required for this application to work. An alternative might be a programmable Bluetooth Low Energy device which might simulate the service. You can also use the <db:link xlink:href="qtbluetooth-heartrate-server-example.xml">Heart Rate server</db:link> example for that purpose. If no such device is available, a demo mode is available which creates and displays random values. This demo mode is enabled by passing <db:code>--simulator</db:code> on the command line.</db:para>
<db:para>The goal of the game is to increase the measured heart rate as much as possible.</db:para>
<db:para>A detailed explanation of the APIs used in this example is given in the <db:link xlink:href="qtbluetooth-le-overview.xml#using-qt-bluetooth-low-energy-api">Using Qt Bluetooth Low Energy API</db:link> section of the <db:link xlink:href="qtbluetooth-index.xml">Qt Bluetooth</db:link> module documentation.</db:para>
<db:para>The <db:link xlink:href="qtbluetooth-lowenergyscanner-example.xml">Bluetooth Low Energy Scanner</db:link> example might be more suitable if a heart rate device is not available. The scanner example works with any type of Bluetooth Low Energy peripheral device.</db:para>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="https://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:guilabel>Welcome</db:guilabel> mode and select the example from <db:guilabel>Examples</db:guilabel>. For more information, visit <db:link xlink:href="https://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section xml:id="checking-bluetooth-permissions">
<db:title>Checking Bluetooth Permissions</db:title>
<db:para>Before the application can start using Bluetooth, we have to check that appropriate permissions were granted:</db:para>
<db:programlisting language="cpp">QBluetoothPermission permission{};
permission.setCommunicationModes(QBluetoothPermission::Access);
switch (qApp-&amp;gt;checkPermission(permission)) {
case Qt::PermissionStatus::Undetermined:
    qApp-&amp;gt;requestPermission(permission, this, &amp;amp;DeviceFinder::startSearch);
    return;
case Qt::PermissionStatus::Denied:
    setError(tr(&quot;Bluetooth permissions not granted!&quot;));
    setIcon(IconError);
    return;
case Qt::PermissionStatus::Granted:
    break; // proceed to search
}
</db:programlisting>
</db:section>
<db:section xml:id="visual-tour">
<db:title>Visual Tour</db:title>
<db:para>The application searches for all Bluetooth Low Energy peripheral devices in the vicinity. It is assumed that the remote devices advertise their presence. The found devices are presented in a list. Note that all found Bluetooth Low Energy devices are listed even if they do not offer a Heart Rate service.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/heartgame-search.webp"/>
</db:imageobject>
</db:mediaobject>
<db:para>After the user has selected a target device, the example connects to its Heart Rate service if one is available. It automatically enables notification updates for the Heart Rate value and presents the current value on the screen.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/heartgame-running.webp"/>
</db:imageobject>
</db:mediaobject>
<db:para>Once the monitoring process is finished, a small summary of the received values is presented.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/heartgame-result.webp"/>
</db:imageobject>
</db:mediaobject>
</db:section>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtconnectivity.git/tree/examples/bluetooth/heartrate-game?h=6.6">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
