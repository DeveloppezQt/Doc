<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>date QML Value Type</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 5.14.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>a date value.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The date type refers to a date value, including the time of the day.</db:para>
<db:para>To create a date value, specify it as a &quot;YYYY-MM-DDThh:mm:ss.zzzZ&quot; string. (The T is literal, YYYY is a full year number, MM and DD are month and day numbers, hh, mm and ss are hours, minutes and seconds, with .zzz as milliseconds and Z as time-zone offset. The T and following time are optional. If they are omitted, the date is handled as the start of UTC's day, which falls on other dates in some time-zones. When T is included, the :ss.zzz or just .zzz part can be omitted. With or without those, the zone offset can be omitted, in which case local time is used.) For example:</db:para>
<db:programlisting language="qml">MyDatePicker { minDate: &quot;2000-01-01 0:0&quot;; maxDate: &quot;2020-12-31 23:59&quot; }
</db:programlisting>
<db:para>To read a date value returned from a C++ extension class, use <db:link xlink:href="qml-qtqml-qt.xml#formatDate-method">Qt.formatDate</db:link>() and <db:link xlink:href="qml-qtqml-qt.xml#formatDateTime-method">Qt.formatDateTime</db:link>().</db:para>
<db:para>When integrating with C++, note that any QDate or QDateTime value <db:link xlink:href="qtqml-cppintegration-data.xml">passed into QML from C++</db:link> is automatically converted into a date value, and vice-versa. Note, however, that converting a QDate will result in UTC's start of the day, which falls on a different date in some other time-zones. It is usually more robust to convert the QDate via a QDateTime explicitly, specifying local-time or a relevant time-zone and selecting a time of day (such as noon) that reliably exists (daylight-savings transitions skip an hour, near one end or the other of a day).</db:para>
<db:para>This basic type is provided by the QML language. It can be implicitly converted to a <db:link xlink:href="qml-qtqml-date.xml">Date</db:link> object.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtqml-date.xml">QML Date object</db:link></db:member>
<db:member><db:link xlink:href="qtqml-typesystem-basictypes.xml">QML Basic Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:article>
