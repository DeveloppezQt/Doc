<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QModbusExceptionResponse Class</db:title>
<db:productname>QtSerialBus</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Serial Bus Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qmodbusexceptionresponse.xml">QModbusExceptionResponse</db:link> is a container class containing the function and error code inside a Modbus ADU.</db:para>
<db:para>This class was introduced in Qt 5.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QModbusExceptionResponse</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += serialbus</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qmodbusresponse.xml" xlink:role="class">QModbusResponse</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A typical <db:link xlink:href="qmodbusexceptionresponse.xml">QModbusExceptionResponse</db:link> response can looks like this:</db:para>
<db:programlisting language="cpp">QModbusExceptionResponse exception(QModbusExceptionResponse::ReportServerId,
    QModbusExceptionResponse::ServerDeviceFailure);
</db:programlisting>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QModbusExceptionResponse">
<db:title>[noexcept] QModbusExceptionResponse::QModbusExceptionResponse()</db:title>
<db:para>Constructs an invalid <db:link xlink:href="qmodbusexceptionresponse.xml">QModbusExceptionResponse</db:link>.</db:para>
</db:section>
<db:section xml:id="QModbusExceptionResponse-1">
<db:title>QModbusExceptionResponse::QModbusExceptionResponse(const QModbusPdu &amp;<db:emphasis>pdu</db:emphasis>)</db:title>
<db:para>Constructs a copy of <db:code role="parameter">pdu</db:code>.</db:para>
</db:section>
<db:section xml:id="QModbusExceptionResponse-2">
<db:title>QModbusExceptionResponse::QModbusExceptionResponse(QModbusPdu::FunctionCode <db:emphasis>code</db:emphasis>, QModbusPdu::ExceptionCode <db:emphasis>ec</db:emphasis>)</db:title>
<db:para>Constructs a <db:link xlink:href="qmodbusexceptionresponse.xml">QModbusExceptionResponse</db:link> with function code set to <db:code role="parameter">code</db:code> and exception error code set to <db:code role="parameter">ec</db:code>.</db:para>
</db:section>
<db:section xml:id="setExceptionCode">
<db:title>void QModbusExceptionResponse::setExceptionCode(QModbusPdu::ExceptionCode <db:emphasis>ec</db:emphasis>)</db:title>
<db:para>Sets the response's exception code to <db:code role="parameter">ec</db:code>.</db:para>
</db:section>
<db:section xml:id="setFunctionCode">
<db:title>[override virtual] void QModbusExceptionResponse::setFunctionCode(QModbusPdu::FunctionCode <db:emphasis>c</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qmodbuspdu.xml#setFunctionCode" role="function">QModbusPdu::setFunctionCode(QModbusPdu::FunctionCode code)</db:link>.</db:para>
<db:para>Sets the response's function code to <db:code role="parameter">c</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
