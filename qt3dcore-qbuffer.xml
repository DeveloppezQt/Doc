<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QBuffer Class</db:title>
<db:subtitle>Qt3DCore::QBuffer</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides a data store for raw data to later be used as vertices or uniforms.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Qt3DCore/QBuffer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3DCore)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3DCore)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dcore</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-core-buffer.xml" xlink:role="">Buffer</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qnode.xml" xlink:role="class">Qt3DCore::QNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Data can be provided directly using <db:link xlink:href="qt3dcore-qbuffer.xml#setData">QBuffer::setData</db:link>().</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="AccessType-enum">
<db:title>enum QBuffer::AccessType</db:title>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link></db:emphasis>::Write</db:code></db:para>
</db:td>
<db:td><db:code>0x1</db:code></db:td>
<db:td>
<db:para>Write access</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link></db:emphasis>::Read</db:code></db:para>
</db:td>
<db:td><db:code>0x2</db:code></db:td>
<db:td>
<db:para>Read access</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link></db:emphasis>::ReadWrite</db:code></db:para>
</db:td>
<db:td><db:code>Write|Read</db:code></db:td>
<db:td>
<db:para>Write|Read</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="UsageType-enum">
<db:title>enum QBuffer::UsageType</db:title>
<db:para>The type of the usage.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link></db:emphasis>::StreamDraw</db:code></db:para>
</db:td>
<db:td><db:code>0x88E0</db:code></db:td>
<db:td>
<db:para>GL_STREAM_DRAW</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link></db:emphasis>::StreamRead</db:code></db:para>
</db:td>
<db:td><db:code>0x88E1</db:code></db:td>
<db:td>
<db:para>GL_STREAM_READ</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link></db:emphasis>::StreamCopy</db:code></db:para>
</db:td>
<db:td><db:code>0x88E2</db:code></db:td>
<db:td>
<db:para>GL_STREAM_COPY</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link></db:emphasis>::StaticDraw</db:code></db:para>
</db:td>
<db:td><db:code>0x88E4</db:code></db:td>
<db:td>
<db:para>GL_STATIC_DRAW</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link></db:emphasis>::StaticRead</db:code></db:para>
</db:td>
<db:td><db:code>0x88E5</db:code></db:td>
<db:td>
<db:para>GL_STATIC_READ</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link></db:emphasis>::StaticCopy</db:code></db:para>
</db:td>
<db:td><db:code>0x88E6</db:code></db:td>
<db:td>
<db:para>GL_STATIC_COPY</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link></db:emphasis>::DynamicDraw</db:code></db:para>
</db:td>
<db:td><db:code>0x88E8</db:code></db:td>
<db:td>
<db:para>GL_DYNAMIC_DRAW</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link></db:emphasis>::DynamicRead</db:code></db:para>
</db:td>
<db:td><db:code>0x88E9</db:code></db:td>
<db:td>
<db:para>GL_DYNAMIC_READ</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link></db:emphasis>::DynamicCopy</db:code></db:para>
</db:td>
<db:td><db:code>0x88EA</db:code></db:td>
<db:td>
<db:para>GL_DYNAMIC_COPY</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="accessType-prop">
<db:title>accessType : AccessType</db:title>
<db:para>Returns the <db:link xlink:href="qt3dcore-qbuffer.xml#AccessType-enum">AccessType</db:link> of the buffer.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qbuffer.xml#AccessType-enum">Qt3DCore::QBuffer::AccessType</db:link></db:type> <db:emphasis role="bold">accessType</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setAccessType</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qbuffer.xml#AccessType-enum">Qt3DCore::QBuffer::AccessType</db:link></db:type> <db:emphasis>access</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">accessTypeChanged</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qbuffer.xml#AccessType-enum">Qt3DCore::QBuffer::AccessType</db:link></db:type> <db:emphasis>access</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3dcore-qbuffer.xml#AccessType-enum">QBuffer::AccessType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="usage-prop">
<db:title>usage : UsageType</db:title>
<db:para>Holds the buffer usage.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qbuffer.xml#UsageType-enum">Qt3DCore::QBuffer::UsageType</db:link></db:type> <db:emphasis role="bold">usage</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setUsage</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qbuffer.xml#UsageType-enum">Qt3DCore::QBuffer::UsageType</db:link></db:type> <db:emphasis>usage</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">usageChanged</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qbuffer.xml#UsageType-enum">Qt3DCore::QBuffer::UsageType</db:link></db:type> <db:emphasis>usage</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QBuffer">
<db:title>[explicit] QBuffer::QBuffer(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a new <db:link xlink:href="qt3dcore-qbuffer.xml">QBuffer</db:link> with <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="data">
<db:title>QByteArray QBuffer::data() const</db:title>
<db:para>Returns the data.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3dcore-qbuffer.xml#setData">setData</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dataAvailable">
<db:title>void QBuffer::dataAvailable()</db:title>
<db:para>This signal is emitted when data becomes available.</db:para>
</db:section>
<db:section xml:id="dataChanged">
<db:title>void QBuffer::dataChanged(const QByteArray &amp;<db:emphasis>bytes</db:emphasis>)</db:title>
<db:para>This signal is emitted with <db:code role="parameter">bytes</db:code> when data changes.</db:para>
</db:section>
<db:section xml:id="setData">
<db:title>void QBuffer::setData(const QByteArray &amp;<db:emphasis>bytes</db:emphasis>)</db:title>
<db:para>Sets <db:code role="parameter">bytes</db:code> as data.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3dcore-qbuffer.xml#data">data</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="updateData">
<db:title>void QBuffer::updateData(int <db:emphasis>offset</db:emphasis>, const QByteArray &amp;<db:emphasis>bytes</db:emphasis>)</db:title>
<db:para>Updates the data by replacing it with <db:code role="parameter">bytes</db:code> at <db:code role="parameter">offset</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
