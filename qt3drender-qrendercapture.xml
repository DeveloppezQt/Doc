<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QRenderCapture Class</db:title>
<db:subtitle>Qt3DRender::QRenderCapture</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Frame graph node for render capture.</db:para>
<db:para>This class was introduced in Qt 5.8.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Qt3DRender/QRenderCapture</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-rendercapture.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qframegraphnode.xml" xlink:role="class">Qt3DRender::QFrameGraphNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qt3drender-qrendercapture.xml">QRenderCapture</db:link> is used to capture rendering into an image at any render stage. Capturing must be initiated by the user and one image is returned per capture request. User can issue multiple render capture requests simultaniously, but only one request is served per <db:link xlink:href="qt3drender-qrendercapture.xml">QRenderCapture</db:link> instance per frame.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QRenderCapture">
<db:title>[explicit] QRenderCapture::QRenderCapture(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QRenderCapture</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QNode *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QRenderCapture(Qt3DCore::QNode *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>The constructor creates an instance with the specified <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="requestCapture-1">
<db:title>Qt3DRender::QRenderCaptureReply *QRenderCapture::requestCapture()</db:title>
<db:methodsynopsis>
<db:type>Qt3DRender::QRenderCaptureReply *</db:type>
<db:methodname>requestCapture</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">Qt3DRender::QRenderCaptureReply * requestCapture()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Used to request render capture. Only one render capture result is produced per requestCapture call even if the frame graph has multiple leaf nodes. The function returns a <db:link xlink:href="qt3drender-qrendercapturereply.xml">QRenderCaptureReply</db:link> object, which receives the captured image when it is done. The user is responsible for deallocating the returned object by calling deleterLater().</db:para>
</db:section>
<db:section xml:id="requestCapture-2">
<db:title>Qt3DRender::QRenderCaptureReply *QRenderCapture::requestCapture(const QRect &amp;<db:emphasis>rect</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>Qt3DRender::QRenderCaptureReply *</db:type>
<db:methodname>requestCapture</db:methodname>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>rect</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">Qt3DRender::QRenderCaptureReply * requestCapture(const QRect &amp;rect)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Used to request render capture from a specified <db:code role="parameter">rect</db:code>. Only one render capture result is produced per requestCapture call even if the frame graph has multiple leaf nodes. The function returns a <db:link xlink:href="qt3drender-qrendercapturereply.xml">QRenderCaptureReply</db:link> object, which receives the captured image when it is done. The user is responsible for deallocating the returned object by calling deleteLater().</db:para>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for QRenderCapture</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qt3drender-qrendercapture.xml">QRenderCapture</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-member-function-documentation">
<db:title>Obsolete Member Function Documentation</db:title>
<db:section xml:id="requestCapture">
<db:title>Qt3DRender::QRenderCaptureReply *QRenderCapture::requestCapture(int <db:emphasis>captureId</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>Qt3DRender::QRenderCaptureReply *</db:type>
<db:methodname>requestCapture</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>captureId</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">Qt3DRender::QRenderCaptureReply * requestCapture(int captureId)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Used to request render capture. User can specify a <db:code role="parameter">captureId</db:code> to identify the request. The requestId does not have to be unique. Only one render capture result is produced per requestCapture call even if the frame graph has multiple leaf nodes. The function returns a <db:link xlink:href="qt3drender-qrendercapturereply.xml">QRenderCaptureReply</db:link> object, which receives the captured image when it is done. The user is responsible for deallocating the returned object by calling deleteLater().</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
