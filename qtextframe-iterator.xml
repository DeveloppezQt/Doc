<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>iterator Class</db:title>
<db:subtitle>QTextFrame::iterator</db:subtitle>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The iterator class provides an iterator for reading the contents of a <db:link xlink:href="qtextframe.xml">QTextFrame</db:link>.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>iterator</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>iterator is part of <db:simplelist><db:member><db:link xlink:href="richtext-processing.xml">Rich Text Processing APIs</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A frame consists of an arbitrary sequence of <db:link xlink:href="qtextblock.xml">QTextBlock</db:link>s and child <db:link xlink:href="qtextframe.xml">QTextFrame</db:link>s. This class provides a way to iterate over the child objects of a frame, and read their contents. It does not provide a way to modify the contents of the frame.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="iterator">
<db:title>[constexpr noexcept] iterator::iterator()</db:title>
<db:para>Constructs an invalid iterator.</db:para>
</db:section>
<db:section xml:id="atEnd">
<db:title>bool iterator::atEnd() const</db:title>
<db:para>Returns <db:code>true</db:code> if the current item is the last item in the text frame.</db:para>
</db:section>
<db:section xml:id="currentBlock">
<db:title>QTextBlock iterator::currentBlock() const</db:title>
<db:para>Returns the current block the iterator points to. If the iterator points to a child frame, the returned block is invalid.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe-iterator.xml#currentFrame">currentFrame</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="currentFrame">
<db:title>QTextFrame *iterator::currentFrame() const</db:title>
<db:para>Returns the current frame pointed to by the iterator, or <db:code>nullptr</db:code> if the iterator currently points to a block.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe-iterator.xml#currentBlock">currentBlock</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="parentFrame">
<db:title>QTextFrame *iterator::parentFrame() const</db:title>
<db:para>Returns the parent frame of the current frame.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe-iterator.xml#currentFrame">currentFrame</db:link>()</db:member>
<db:member><db:link xlink:href="qtextframe.xml#parentFrame">QTextFrame::parentFrame</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool iterator::operator!=(const QTextFrame::iterator &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if the iterator is different from the <db:code role="parameter">other</db:code> iterator; otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-2b-2b">
<db:title>QTextFrame::iterator &amp;iterator::operator++()</db:title>
<db:para>Moves the iterator to the next frame or block.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe-iterator.xml#currentBlock">currentBlock</db:link>()</db:member>
<db:member><db:link xlink:href="qtextframe-iterator.xml#currentFrame">currentFrame</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-2b-2b-1">
<db:title>QTextFrame::iterator iterator::operator++(<db:emphasis>int</db:emphasis>)</db:title>
<db:para>The postfix <db:code>++</db:code> operator (<db:code>i++</db:code>) advances the iterator to the next item in the text frame, and returns an iterator to the old item.</db:para>
</db:section>
<db:section xml:id="operator--">
<db:title>QTextFrame::iterator &amp;iterator::operator--()</db:title>
<db:para>Moves the iterator to the previous frame or block.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtextframe-iterator.xml#currentBlock">currentBlock</db:link>()</db:member>
<db:member><db:link xlink:href="qtextframe-iterator.xml#currentFrame">currentFrame</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator---1">
<db:title>QTextFrame::iterator iterator::operator--(<db:emphasis>int</db:emphasis>)</db:title>
<db:para>The postfix <db:code>--</db:code> operator (<db:code>i--</db:code>) makes the preceding item in the current frame, and returns an iterator to the old item.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool iterator::operator==(const QTextFrame::iterator &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if the iterator is the same as the <db:code role="parameter">other</db:code> iterator; otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
