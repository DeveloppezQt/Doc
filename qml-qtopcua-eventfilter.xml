<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>EventFilter QML Type</db:title>
<db:productname>QtOpcUa</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>An OPC UA module for Qt</db:titleabbrev>
<db:abstract>
<db:para>Defines an <db:link xlink:href="qml-qtopcua-eventfilter.xml">EventFilter</db:link> for a monitored item.</db:para>
<db:para>This type was introduced in QtOpcUa 5.13.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtOpcUa</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtOpcUa 5.13</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>An event filter is required for monitoring events on the server. It consists of <db:code>select</db:code> clauses and a <db:code>where</db:code> clause.</db:para>
<db:para>The <db:code>select</db:code> clauses are used to specify the data the user wants to receive when an event occurs. It consists of <db:link xlink:href="qml-qtopcua-simpleattributeoperand.xml">SimpleAttributeOperand</db:link> simple attribute operands which select attributes of child nodes of an event type, for example the value attribute of the &quot;Message&quot; property of BaseEventType.</db:para>
<db:para>The <db:code>where</db:code> clause is used to restrict the reported events by matching against certain criteria. Several operators and four different operand types allow filtering based on the values of the attributes of the child nodes of an event type.</db:para>
<db:para>The select clause consists of an array of <db:link xlink:href="qml-qtopcua-simpleattributeoperand.xml">SimpleAttributeOperand</db:link>. The where clause consists of an array of <db:link xlink:href="qml-qtopcua-simpleattributeoperand.xml">SimpleAttributeOperand</db:link>, <db:link xlink:href="qml-qtopcua-literaloperand.xml">LiteralOperand</db:link>, <db:link xlink:href="qml-qtopcua-elementoperand.xml">ElementOperand</db:link> or <db:link xlink:href="qml-qtopcua-attributeoperand.xml">AttributeOperand</db:link>.</db:para>
<db:para>The following <db:link xlink:href="qml-qtopcua-eventfilter.xml">EventFilter</db:link> tells the server to report the value of the &quot;Message&quot; field for events that have a &quot;Severity&quot; field with value &gt;= 500:</db:para>
<db:programlisting language="cpp">import QtOpcUa as QtOpcUa
QtOpcUa.Node {
    ...

    eventFilter: QtOpcUa.EventFilter {
        select: [
                  QtOpcUa.SimpleAttributeOperand {
                    browsePath: [
                                  QtOpcUa.NodeId {
                                      identifier: &quot;Severity&quot;
                                      ns: &quot;http://opcfoundation.org/UA/&quot;
                                  }
                                ]
                  },
                  QtOpcUa.SimpleAttributeOperand {
                    browsePath: [
                                  QtOpcUa.NodeId {
                                      identifier: &quot;Message&quot;
                                      ns: &quot;http://opcfoundation.org/UA/&quot;
                                  }
                                ]
                  }
        ]

        where: [
            QtOpcUa.FilterElement {
                operator: QtOpcUa.FilterElement.GreaterThanOrEqual
                firstOperand: QtOpcUa.SimpleAttributeOperand {
                    browsePath: [
                                  QtOpcUa.NodeId {
                                      identifier: &quot;Severity&quot;
                                      ns: &quot;http://opcfoundation.org/UA/&quot;
                                  }
                                ]
                }
                secondOperand: QtOpcUa.LiteralOperand {
                                value: 700
                                type: QtOpcUa.Constants.UInt16
                 }
            }
        ]
    }
}
</db:programlisting>
<db:para>For a more complex example with two conditions, see QOpcUaElementOperand.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtopcua-filterelement.xml">FilterElement</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="select-prop">
<db:title>select : list&lt;SimpleAttributeOperand&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;SimpleAttributeOperand&gt;</db:type>
<db:varname>select</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Selected event fields that shall be included when a new event is reported.</db:para>
</db:section>
<db:section xml:id="where-prop">
<db:title>where : list&lt;FilterElement&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;FilterElement&gt;</db:type>
<db:varname>where</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Content filter used to restrict the reported events to events matching certain criteria.</db:para>
</db:section>
</db:section>
</db:article>
