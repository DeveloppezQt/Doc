<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QLCDNumber Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> widget displays a number with LCD-like digits.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QLCDNumber</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qframe.xml" xlink:role="class">QFrame</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QLCDNumber is part of <db:simplelist><db:member>basicwidgets</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/windows-lcdnumber.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>It can display a number in just about any size. It can display decimal, hexadecimal, octal or binary numbers. It is easy to connect to data sources using the <db:link xlink:href="qlcdnumber.xml#display">display</db:link>() slot, which is overloaded to take any of five argument types.</db:para>
<db:para>There are also slots to change the base with <db:link xlink:href="qlcdnumber.xml#mode-prop">setMode</db:link>() and the decimal point with <db:link xlink:href="qlcdnumber.xml#smallDecimalPoint-prop">setSmallDecimalPoint</db:link>().</db:para>
<db:para><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> emits the <db:link xlink:href="qlcdnumber.xml#overflow">overflow</db:link>() signal when it is asked to display something beyond its range. The range is set by <db:link xlink:href="qlcdnumber.xml#setDigitCount">setDigitCount</db:link>(), but <db:link xlink:href="qlcdnumber.xml#smallDecimalPoint-prop">setSmallDecimalPoint</db:link>() also influences it. If the display is set to hexadecimal, octal or binary, the integer equivalent of the value is displayed.</db:para>
<db:para>These digits and other symbols can be shown: 0/O, 1, 2, 3, 4, 5/S, 6, 7, 8, 9/g, minus, decimal point, A, B, C, D, E, F, h, H, L, o, P, r, u, U, Y, colon, degree sign (which is specified as single quote in the string) and space. <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> substitutes spaces for illegal characters.</db:para>
<db:para>It is not possible to retrieve the contents of a <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> object, although you can retrieve the numeric value with <db:link xlink:href="qlcdnumber.xml#value-prop">value</db:link>(). If you really need the text, we recommend that you connect the signals that feed the <db:link xlink:href="qlcdnumber.xml#display">display</db:link>() slot to another slot as well and store the value there.</db:para>
<db:para>Incidentally, <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> is the very oldest part of Qt, tracing its roots back to a BASIC program on the <db:link xlink:href="http://www.nvg.ntnu.no/sinclair/computers/zxspectrum/zxspectrum.htm">Sinclair Spectrum</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlabel.xml">QLabel</db:link></db:member>
<db:member><db:link xlink:href="qframe.xml">QFrame</db:link></db:member>
<db:member><db:link xlink:href="qtwidgets-widgets-digitalclock-example.xml">Digital Clock Example</db:link></db:member>
<db:member><db:link xlink:href="qtwidgets-widgets-tetrix-example.xml">Tetrix Example</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Mode-enum">
<db:title>enum QLCDNumber::Mode</db:title>
<db:enumsynopsis>
<db:enumname>Mode</db:enumname>
<db:enumitem>
<db:enumidentifier>Hex</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Dec</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Oct</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Bin</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This type determines how numbers are shown.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Hex</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Hexadecimal</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Dec</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Decimal</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Oct</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Octal</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Bin</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Binary</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>If the display is set to hexadecimal, octal or binary, the integer equivalent of the value is displayed.</db:para>
</db:section>
<db:section xml:id="SegmentStyle-enum">
<db:title>enum QLCDNumber::SegmentStyle</db:title>
<db:enumsynopsis>
<db:enumname>SegmentStyle</db:enumname>
<db:enumitem>
<db:enumidentifier>Outline</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Filled</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Flat</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This type determines the visual appearance of the <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> widget.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Outline</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>gives raised segments filled with the background color.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Filled</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>gives raised segments filled with the windowText color.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Flat</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>gives flat segments filled with the windowText color.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="digitCount-prop">
<db:title>digitCount : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>digitCount</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">digitCount</db:synopsisinfo>
<db:synopsisinfo role="setter">setDigitCount</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the current number of digits displayed</db:para>
<db:para>Corresponds to the current number of digits. If <db:link xlink:href="qlcdnumber.xml#smallDecimalPoint-prop">QLCDNumber::smallDecimalPoint</db:link> is false, the decimal point occupies one digit position.</db:para>
<db:para>By default, this property contains a value of 5.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml#digitCount">digitCount</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml#setDigitCount">setDigitCount</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>numDigits</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#smallDecimalPoint-prop">smallDecimalPoint</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="intValue-prop">
<db:title>intValue : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>intValue</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">intValue</db:synopsisinfo>
<db:synopsisinfo role="setter">display</db:synopsisinfo>
<db:synopsisinfo role="setter">display</db:synopsisinfo>
<db:synopsisinfo role="setter">display</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the displayed value rounded to the nearest integer</db:para>
<db:para>This property corresponds to the nearest integer to the current value displayed by the LCDNumber. This is the value used for hexadecimal, octal and binary modes.</db:para>
<db:para>If the displayed value is not a number, the property has a value of 0.</db:para>
<db:para>By default, this property contains a value of 0.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">intValue</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml#display">display</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>s</db:emphasis>)</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml#display-1">display</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>num</db:emphasis>)</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml#display-2">display</db:link></db:emphasis>(<db:type>double</db:type> <db:emphasis>num</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="mode-prop">
<db:title>mode : Mode</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Mode</db:type>
<db:varname>mode</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">mode</db:synopsisinfo>
<db:synopsisinfo role="setter">setMode</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the current display mode (number base)</db:para>
<db:para>Corresponds to the current display mode, which is one of Bin, Oct, Dec (the default) and Hex. Dec mode can display floating point values, the other modes display the integer equivalent.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qlcdnumber.xml#Mode-enum">QLCDNumber::Mode</db:link></db:type> <db:emphasis role="bold">mode</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMode</db:emphasis>(<db:emphasis>QLCDNumber::Mode</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#smallDecimalPoint-prop">smallDecimalPoint</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setHexMode">setHexMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setDecMode">setDecMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setOctMode">setOctMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setBinMode">setBinMode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="segmentStyle-prop">
<db:title>segmentStyle : SegmentStyle</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>SegmentStyle</db:type>
<db:varname>segmentStyle</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">segmentStyle</db:synopsisinfo>
<db:synopsisinfo role="setter">setSegmentStyle</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the style of the LCDNumber</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Style</db:para>
</db:th>
<db:th>
<db:para>Result</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>Outline</db:para>
</db:td>
<db:td>
<db:para>Produces raised segments filled with the background color</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Filled (this is the default).</db:para>
</db:td>
<db:td>
<db:para>Produces raised segments filled with the foreground color.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Flat</db:para>
</db:td>
<db:td>
<db:para>Produces flat segments filled with the foreground color.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Outline and Filled will additionally use <db:link xlink:href="qpalette.xml#light">QPalette::light</db:link>() and <db:link xlink:href="qpalette.xml#dark">QPalette::dark</db:link>() for shadow effects.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qlcdnumber.xml#SegmentStyle-enum">QLCDNumber::SegmentStyle</db:link></db:type> <db:emphasis role="bold">segmentStyle</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSegmentStyle</db:emphasis>(<db:emphasis>QLCDNumber::SegmentStyle</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="smallDecimalPoint-prop">
<db:title>smallDecimalPoint : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>smallDecimalPoint</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">smallDecimalPoint</db:synopsisinfo>
<db:synopsisinfo role="setter">setSmallDecimalPoint</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the style of the decimal point</db:para>
<db:para>If true the decimal point is drawn between two digit positions. Otherwise it occupies a digit position of its own, i.e. is drawn in a digit position. The default is false.</db:para>
<db:para>The inter-digit space is made slightly wider when the decimal point is drawn between the digits.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">smallDecimalPoint</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSmallDecimalPoint</db:emphasis>(<db:emphasis>bool</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#mode-prop">mode</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="value-prop">
<db:title>value : double</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>double</db:type>
<db:varname>value</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">value</db:synopsisinfo>
<db:synopsisinfo role="setter">display</db:synopsisinfo>
<db:synopsisinfo role="setter">display</db:synopsisinfo>
<db:synopsisinfo role="setter">display</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the displayed value</db:para>
<db:para>This property corresponds to the current value displayed by the LCDNumber.</db:para>
<db:para>If the displayed value is not a number, the property has a value of 0.</db:para>
<db:para>By default, this property contains a value of 0.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>double</db:type> <db:emphasis role="bold">value</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml#display">display</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>s</db:emphasis>)</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml#display-1">display</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>num</db:emphasis>)</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml#display-2">display</db:link></db:emphasis>(<db:type>double</db:type> <db:emphasis>num</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QLCDNumber">
<db:title>[explicit] QLCDNumber::QLCDNumber(QWidget *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QLCDNumber</db:methodname>
<db:methodparam>
<db:type>QWidget *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QLCDNumber(QWidget *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an LCD number, sets the number of digits to 5, the base to decimal, the decimal point mode to 'small' and the frame style to a raised box. The <db:link xlink:href="qlcdnumber.xml#segmentStyle-prop">segmentStyle</db:link>() is set to Outline.</db:para>
<db:para>The <db:code role="parameter">parent</db:code> argument is passed to the <db:link xlink:href="qframe.xml">QFrame</db:link> constructor.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#setDigitCount">setDigitCount</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#smallDecimalPoint-prop">setSmallDecimalPoint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QLCDNumber-1">
<db:title>[explicit] QLCDNumber::QLCDNumber(uint <db:emphasis>numDigits</db:emphasis>, QWidget *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QLCDNumber</db:methodname>
<db:methodparam>
<db:type>uint</db:type>
<db:parameter>numDigits</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QWidget *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QLCDNumber(uint numDigits, QWidget *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an LCD number, sets the number of digits to <db:code role="parameter">numDigits</db:code>, the base to decimal, the decimal point mode to 'small' and the frame style to a raised box. The <db:link xlink:href="qlcdnumber.xml#segmentStyle-prop">segmentStyle</db:link>() is set to Filled.</db:para>
<db:para>The <db:code role="parameter">parent</db:code> argument is passed to the <db:link xlink:href="qframe.xml">QFrame</db:link> constructor.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#setDigitCount">setDigitCount</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#smallDecimalPoint-prop">setSmallDecimalPoint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dtor.QLCDNumber">
<db:title>[virtual] QLCDNumber::~QLCDNumber()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QLCDNumber</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QLCDNumber()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the LCD number.</db:para>
</db:section>
<db:section xml:id="checkOverflow">
<db:title>bool QLCDNumber::checkOverflow(double <db:emphasis>num</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>checkOverflow</db:methodname>
<db:methodparam>
<db:type>double</db:type>
<db:parameter>num</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool checkOverflow(double num) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if <db:code role="parameter">num</db:code> is too big to be displayed in its entirety; otherwise returns false.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#display">display</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#digitCount">digitCount</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#smallDecimalPoint-prop">smallDecimalPoint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="checkOverflow-1">
<db:title>bool QLCDNumber::checkOverflow(int <db:emphasis>num</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>checkOverflow</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>num</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">bool checkOverflow(int num) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns true if <db:code role="parameter">num</db:code> is too big to be displayed in its entirety; otherwise returns false.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#display">display</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#digitCount">digitCount</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#smallDecimalPoint-prop">smallDecimalPoint</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="digitCount">
<db:title>int QLCDNumber::digitCount() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>int</db:type>
<db:methodname>digitCount</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">digitCount</db:synopsisinfo>
<db:synopsisinfo role="signature">int digitCount() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the current number of digits.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qlcdnumber.xml#digitCount-prop">digitCount</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#setDigitCount">setDigitCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="display">
<db:title>void QLCDNumber::display(const QString &amp;<db:emphasis>s</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>display</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>s</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">intValue,value</db:synopsisinfo>
<db:synopsisinfo role="signature">void display(const QString &amp;s)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Displays the number represented by the string <db:code role="parameter">s</db:code>.</db:para>
<db:para>This version of the function disregards <db:link xlink:href="qlcdnumber.xml#mode-prop">mode</db:link>() and <db:link xlink:href="qlcdnumber.xml#smallDecimalPoint-prop">smallDecimalPoint</db:link>().</db:para>
<db:para>These digits and other symbols can be shown: 0/O, 1, 2, 3, 4, 5/S, 6, 7, 8, 9/g, minus, decimal point, A, B, C, D, E, F, h, H, L, o, P, r, u, U, Y, colon, degree sign (which is specified as single quote in the string) and space. <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> substitutes spaces for illegal characters.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qlcdnumber.xml#intValue-prop">intValue</db:link>. </db:para>
<db:para>Setter function for property <db:link xlink:href="qlcdnumber.xml#value-prop">value</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="display-1">
<db:title>void QLCDNumber::display(int <db:emphasis>num</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>display</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>num</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="associated-property">intValue,value</db:synopsisinfo>
<db:synopsisinfo role="signature">void display(int num)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This is an overloaded function.</db:para>
<db:para>Displays the number <db:code role="parameter">num</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qlcdnumber.xml#intValue-prop">intValue</db:link>. </db:para>
<db:para>Setter function for property <db:link xlink:href="qlcdnumber.xml#value-prop">value</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="display-2">
<db:title>void QLCDNumber::display(double <db:emphasis>num</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>display</db:methodname>
<db:methodparam>
<db:type>double</db:type>
<db:parameter>num</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="associated-property">intValue,value</db:synopsisinfo>
<db:synopsisinfo role="signature">void display(double num)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This is an overloaded function.</db:para>
<db:para>Displays the number <db:code role="parameter">num</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qlcdnumber.xml#intValue-prop">intValue</db:link>. </db:para>
<db:para>Setter function for property <db:link xlink:href="qlcdnumber.xml#value-prop">value</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="event">
<db:title>[override virtual protected] bool QLCDNumber::event(QEvent *<db:emphasis>e</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>bool</db:type>
<db:methodname>event</db:methodname>
<db:methodparam>
<db:type>QEvent *</db:type>
<db:parameter>e</db:parameter>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool event(QEvent *e) override</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qframe.xml#event" role="function">QFrame::event(QEvent *e)</db:link>.</db:para>
</db:section>
<db:section xml:id="overflow">
<db:title>void QLCDNumber::overflow()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>overflow</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void overflow()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted whenever the <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> is asked to display a too-large number or a too-long string.</db:para>
<db:para>It is never emitted by <db:link xlink:href="qlcdnumber.xml#setDigitCount">setDigitCount</db:link>().</db:para>
</db:section>
<db:section xml:id="paintEvent">
<db:title>[override virtual protected] void QLCDNumber::paintEvent(<db:emphasis>QPaintEvent *</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:void/>
<db:methodname>paintEvent</db:methodname>
<db:methodparam>
<db:type>QPaintEvent *</db:type>
<db:parameter></db:parameter>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void paintEvent(QPaintEvent *) override</db:synopsisinfo>
<db:synopsisinfo role="access">protected</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qframe.xml#paintEvent" role="function">QFrame::paintEvent(QPaintEvent *)</db:link>.</db:para>
</db:section>
<db:section xml:id="setBinMode">
<db:title>void QLCDNumber::setBinMode()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setBinMode</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setBinMode()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Calls <db:link xlink:href="qlcdnumber.xml#mode-prop">setMode</db:link>(Bin). Provided for convenience (e.g. for connecting buttons to it).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#mode-prop">setMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setHexMode">setHexMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setDecMode">setDecMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setOctMode">setOctMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#mode-prop">mode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDecMode">
<db:title>void QLCDNumber::setDecMode()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setDecMode</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setDecMode()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Calls <db:link xlink:href="qlcdnumber.xml#mode-prop">setMode</db:link>(Dec). Provided for convenience (e.g. for connecting buttons to it).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#mode-prop">setMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setHexMode">setHexMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setOctMode">setOctMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setBinMode">setBinMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#mode-prop">mode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDigitCount">
<db:title>void QLCDNumber::setDigitCount(int <db:emphasis>numDigits</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setDigitCount</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>numDigits</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">digitCount</db:synopsisinfo>
<db:synopsisinfo role="signature">void setDigitCount(int numDigits)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the current number of digits to <db:code role="parameter">numDigits</db:code>. Must be in the range 0..99.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qlcdnumber.xml#digitCount-prop">digitCount</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#digitCount">digitCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setHexMode">
<db:title>void QLCDNumber::setHexMode()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setHexMode</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setHexMode()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Calls <db:link xlink:href="qlcdnumber.xml#mode-prop">setMode</db:link>(Hex). Provided for convenience (e.g. for connecting buttons to it).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#mode-prop">setMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setDecMode">setDecMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setOctMode">setOctMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setBinMode">setBinMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#mode-prop">mode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setOctMode">
<db:title>void QLCDNumber::setOctMode()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setOctMode</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setOctMode()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Calls <db:link xlink:href="qlcdnumber.xml#mode-prop">setMode</db:link>(Oct). Provided for convenience (e.g. for connecting buttons to it).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#mode-prop">setMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setHexMode">setHexMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setDecMode">setDecMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setBinMode">setBinMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#mode-prop">mode</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sizeHint">
<db:title>[override virtual] QSize QLCDNumber::sizeHint() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QSize</db:type>
<db:methodname>sizeHint</db:methodname>
<db:void/>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QSize sizeHint() const override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qframe.xml#sizeHint" role="function">QFrame::sizeHint() const</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
