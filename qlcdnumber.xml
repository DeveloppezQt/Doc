<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QLCDNumber Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> widget displays a number with LCD-like digits.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QLCDNumber</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qframe.xml" xlink:role="class">QFrame</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QLCDNumber is part of <db:simplelist><db:member>basicwidgets</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>It can display a number in just about any size. It can display decimal, hexadecimal, octal or binary numbers. It is easy to connect to data sources using the <db:link xlink:href="qlcdnumber.xml#display">display</db:link>() slot, which is overloaded to take any of five argument types.</db:para>
<db:para>There are also slots to change the base with setMode() and the decimal point with setSmallDecimalPoint().</db:para>
<db:para><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> emits the <db:link xlink:href="qlcdnumber.xml#overflow">overflow</db:link>() signal when it is asked to display something beyond its range. The range is set by <db:link xlink:href="qlcdnumber.xml#setDigitCount">setDigitCount</db:link>(), but setSmallDecimalPoint() also influences it. If the display is set to hexadecimal, octal or binary, the integer equivalent of the value is displayed.</db:para>
<db:para>These digits and other symbols can be shown: 0/O, 1, 2, 3, 4, 5/S, 6, 7, 8, 9/g, minus, decimal point, A, B, C, D, E, F, h, H, L, o, P, r, u, U, Y, colon, degree sign (which is specified as single quote in the string) and space. <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> substitutes spaces for illegal characters.</db:para>
<db:para>It is not possible to retrieve the contents of a <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> object, although you can retrieve the numeric value with value(). If you really need the text, we recommend that you connect the signals that feed the <db:link xlink:href="qlcdnumber.xml#display">display</db:link>() slot to another slot as well and store the value there.</db:para>
<db:para>Incidentally, <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> is the very oldest part of Qt, tracing its roots back to a BASIC program on the <db:link xlink:href="http://www.nvg.ntnu.no/sinclair/computers/zxspectrum/zxspectrum.htm">Sinclair Spectrum</db:link>.</db:para>
<db:informaltable style="generic">
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/windows-lcdnumber.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of a Windows style LCD number widget <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/windowsvista-lcdnumber.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of a Windows Vista style LCD number widget <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/macintosh-lcdnumber.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of a Macintosh style LCD number widget <db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/fusion-lcdnumber.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of a Fusion style LCD number widget</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>LCD number widgets shown in various widget styles (from left to right): <db:link xlink:href="gallery-windows.xml">Windows</db:link>, <db:link xlink:href="gallery-windowsvista.xml">Windows Vista</db:link>, <db:link xlink:href="gallery-macintosh.xml">Macintosh</db:link>, <db:link xlink:href="gallery-fusion.xml">Fusion</db:link>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlabel.xml">QLabel</db:link></db:member>
<db:member><db:link xlink:href="qframe.xml">QFrame</db:link></db:member>
<db:member><db:link xlink:href="qtwidgets-widgets-digitalclock-example.xml">Digital Clock Example</db:link></db:member>
<db:member><db:link xlink:href="qtwidgets-widgets-tetrix-example.xml">Tetrix Example</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Mode-enum">
<db:title>enum QLCDNumber::Mode</db:title>
<db:para>This type determines how numbers are shown.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Hex</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Hexadecimal</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Dec</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Decimal</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Oct</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Octal</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Bin</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Binary</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>If the display is set to hexadecimal, octal or binary, the integer equivalent of the value is displayed.</db:para>
</db:section>
<db:section xml:id="SegmentStyle-enum">
<db:title>enum QLCDNumber::SegmentStyle</db:title>
<db:para>This type determines the visual appearance of the <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> widget.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Outline</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>gives raised segments filled with the background color.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Filled</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>gives raised segments filled with the windowText color.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link></db:emphasis>::Flat</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>gives flat segments filled with the windowText color.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QLCDNumber">
<db:title>[explicit] QLCDNumber::QLCDNumber(QWidget *<db:emphasis>parent</db:emphasis> = 0)</db:title>
<db:para>Constructs an LCD number, sets the number of digits to 5, the base to decimal, the decimal point mode to 'small' and the frame style to a raised box. The segmentStyle() is set to <db:code>Outline</db:code>.</db:para>
<db:para>The <db:code role="parameter">parent</db:code> argument is passed to the <db:link xlink:href="qframe.xml">QFrame</db:link> constructor.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#setDigitCount">setDigitCount</db:link>()</db:member>
<db:member><db:link xlink:href="">setSmallDecimalPoint()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QLCDNumber-1">
<db:title>[explicit] QLCDNumber::QLCDNumber(uint <db:emphasis>numDigits</db:emphasis>, QWidget *<db:emphasis>parent</db:emphasis> = 0)</db:title>
<db:para>Constructs an LCD number, sets the number of digits to <db:code role="parameter">numDigits</db:code>, the base to decimal, the decimal point mode to 'small' and the frame style to a raised box. The segmentStyle() is set to <db:code>Filled</db:code>.</db:para>
<db:para>The <db:code role="parameter">parent</db:code> argument is passed to the <db:link xlink:href="qframe.xml">QFrame</db:link> constructor.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#setDigitCount">setDigitCount</db:link>()</db:member>
<db:member><db:link xlink:href="">setSmallDecimalPoint()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dtor.QLCDNumber">
<db:title>[virtual noexcept] QLCDNumber::~QLCDNumber()</db:title>
<db:para>Destroys the LCD number.</db:para>
</db:section>
<db:section xml:id="checkOverflow">
<db:title>bool QLCDNumber::checkOverflow(double <db:emphasis>num</db:emphasis>) const</db:title>
<db:para>Returns true if <db:code role="parameter">num</db:code> is too big to be displayed in its entirety; otherwise returns false.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#display">display</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#digitCount">digitCount</db:link>()</db:member>
<db:member><db:link xlink:href="">smallDecimalPoint()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="checkOverflow-1">
<db:title>bool QLCDNumber::checkOverflow(int <db:emphasis>num</db:emphasis>) const</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns true if <db:code role="parameter">num</db:code> is too big to be displayed in its entirety; otherwise returns false.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#display">display</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#digitCount">digitCount</db:link>()</db:member>
<db:member><db:link xlink:href="">smallDecimalPoint()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="digitCount">
<db:title>int QLCDNumber::digitCount() const</db:title>
<db:para>Returns the current number of digits.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#setDigitCount">setDigitCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="display">
<db:title>void QLCDNumber::display(const QString &amp;<db:emphasis>s</db:emphasis>)</db:title>
<db:para>Displays the number represented by the string <db:code role="parameter">s</db:code>.</db:para>
<db:para>This version of the function disregards mode() and smallDecimalPoint().</db:para>
<db:para>These digits and other symbols can be shown: 0/O, 1, 2, 3, 4, 5/S, 6, 7, 8, 9/g, minus, decimal point, A, B, C, D, E, F, h, H, L, o, P, r, u, U, Y, colon, degree sign (which is specified as single quote in the string) and space. <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> substitutes spaces for illegal characters.</db:para>
</db:section>
<db:section xml:id="display-1">
<db:title>void QLCDNumber::display(double <db:emphasis>num</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Displays the number <db:code role="parameter">num</db:code>.</db:para>
</db:section>
<db:section xml:id="display-2">
<db:title>void QLCDNumber::display(int <db:emphasis>num</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Displays the number <db:code role="parameter">num</db:code>.</db:para>
</db:section>
<db:section xml:id="event">
<db:title>[override virtual protected] bool QLCDNumber::event(QEvent *<db:emphasis>e</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qframe.xml#event" role="function">QFrame::event(QEvent *e)</db:link>.</db:para>
</db:section>
<db:section xml:id="overflow">
<db:title>void QLCDNumber::overflow()</db:title>
<db:para>This signal is emitted whenever the <db:link xlink:href="qlcdnumber.xml">QLCDNumber</db:link> is asked to display a too-large number or a too-long string.</db:para>
<db:para>It is never emitted by <db:link xlink:href="qlcdnumber.xml#setDigitCount">setDigitCount</db:link>().</db:para>
</db:section>
<db:section xml:id="paintEvent">
<db:title>[override virtual protected] void QLCDNumber::paintEvent(<db:emphasis>QPaintEvent *</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qframe.xml#paintEvent" role="function">QFrame::paintEvent(QPaintEvent *)</db:link>.</db:para>
</db:section>
<db:section xml:id="setBinMode">
<db:title>void QLCDNumber::setBinMode()</db:title>
<db:para>Calls setMode(Bin). Provided for convenience (e.g. for connecting buttons to it).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">setMode()</db:link></db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setHexMode">setHexMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setDecMode">setDecMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setOctMode">setOctMode</db:link>()</db:member>
<db:member><db:link xlink:href="">mode()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDecMode">
<db:title>void QLCDNumber::setDecMode()</db:title>
<db:para>Calls setMode(Dec). Provided for convenience (e.g. for connecting buttons to it).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">setMode()</db:link></db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setHexMode">setHexMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setOctMode">setOctMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setBinMode">setBinMode</db:link>()</db:member>
<db:member><db:link xlink:href="">mode()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDigitCount">
<db:title>void QLCDNumber::setDigitCount(int <db:emphasis>numDigits</db:emphasis>)</db:title>
<db:para>Sets the current number of digits to <db:code role="parameter">numDigits</db:code>. Must be in the range 0..99.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlcdnumber.xml#digitCount">digitCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setHexMode">
<db:title>void QLCDNumber::setHexMode()</db:title>
<db:para>Calls setMode(Hex). Provided for convenience (e.g. for connecting buttons to it).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">setMode()</db:link></db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setDecMode">setDecMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setOctMode">setOctMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setBinMode">setBinMode</db:link>()</db:member>
<db:member><db:link xlink:href="">mode()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setOctMode">
<db:title>void QLCDNumber::setOctMode()</db:title>
<db:para>Calls setMode(Oct). Provided for convenience (e.g. for connecting buttons to it).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">setMode()</db:link></db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setHexMode">setHexMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setDecMode">setDecMode</db:link>()</db:member>
<db:member><db:link xlink:href="qlcdnumber.xml#setBinMode">setBinMode</db:link>()</db:member>
<db:member><db:link xlink:href="">mode()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sizeHint">
<db:title>[override virtual] QSize QLCDNumber::sizeHint() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qframe.xml#sizeHint" role="function">QFrame::sizeHint() const</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
