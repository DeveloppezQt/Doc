<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>kmap2qmap</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Reference Documentation.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>kmap2qmap is a tool to generate keymaps for use on Embedded Linux. The source files have to be in standard Linux kmap format that is e.g. understood by the kernel's loadkeys command. This means you can use the following sources to generate qmap files:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>The <db:link xlink:href="http://lct.sourceforge.net/">Linux Console Tools (LCT)</db:link> project.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="http://www.x.org/">Xorg</db:link> X11 keymaps can be converted to the kmap format with the ckbcomp utility.</db:para>
</db:listitem>
<db:listitem>
<db:para>Since kmap files are plain text files, they can also be hand crafted.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The generated qmap files are size optimized binary files.</db:para>
<db:para>kmap2qmap is a command line program, that needs at least 2 files as parameters. The last one will be the generated .qmap file, while all the others will be parsed as input .kmap files. For example:</db:para>
<db:programlisting language="cpp">kmap2qmap i386/qwertz/de-latin1-nodeadkeys.kmap include/compose.latin1.inc de-latin1-nodeadkeys.qmap
</db:programlisting>
<db:para>kmap2qmap does not support all the (pseudo) symbols that the Linux kernel supports. If you are converting a standard keymap you will get a lot of warnings for things like Show_Registers, Hex_A, etc.: you can safely ignore those.</db:para>
<db:para>It also doesn't support numeric symbols (e.g. keycode 1 = 4242, instead of keycode 1 = colon), since these are deprecated and can change from one kernel version to the other.</db:para>
</db:article>
