<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QColorTransform Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qcolortransform.xml">QColorTransform</db:link> class is a transformation between color spaces.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QColorTransform</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QColorTransform is part of <db:simplelist><db:member><db:link xlink:href="painting.xml">Painting Classes</db:link></db:member><db:member>appearance</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qcolortransform.xml">QColorTransform</db:link> is an instantiation of a transformation between color spaces. It can be applied on color and pixels to convert them from one color space to another.</db:para>
<db:para>Setting up a <db:link xlink:href="qcolortransform.xml">QColorTransform</db:link> takes some preprocessing, so keeping around QColorTransforms that you need often is recommended, instead of generating them on the fly.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="isIdentity">
<db:title>[since 6.4] bool QColorTransform::isIdentity() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isIdentity</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isIdentity() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if the color transform is the identity transform.</db:para>
<db:para>This function was introduced in Qt 6.4.</db:para>
</db:section>
<db:section xml:id="map">
<db:title>QRgb QColorTransform::map(QRgb <db:emphasis>argb</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgb</db:type>
<db:methodname>map</db:methodname>
<db:methodparam>
<db:type>QRgb</db:type>
<db:parameter>argb</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgb map(QRgb argb) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Applies the color transformation on the <db:link xlink:href="qcolor.xml#QRgb-typedef">QRgb</db:link> value <db:code role="parameter">argb</db:code>.</db:para>
<db:para>The input should be opaque or unpremultiplied.</db:para>
</db:section>
<db:section xml:id="map-1">
<db:title>QRgba64 QColorTransform::map(QRgba64 <db:emphasis>rgba64</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgba64</db:type>
<db:methodname>map</db:methodname>
<db:methodparam>
<db:type>QRgba64</db:type>
<db:parameter>rgba64</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgba64 map(QRgba64 rgba64) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Applies the color transformation on the <db:link xlink:href="qrgba64.xml">QRgba64</db:link> value <db:code role="parameter">rgba64</db:code>.</db:para>
<db:para>The input should be opaque or unpremultiplied.</db:para>
</db:section>
<db:section xml:id="map-2">
<db:title>[since 6.4] QRgbaFloat16 QColorTransform::map(QRgbaFloat16 <db:emphasis>rgbafp16</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgbaFloat16</db:type>
<db:methodname>map</db:methodname>
<db:methodparam>
<db:type>QRgbaFloat16</db:type>
<db:parameter>rgbafp16</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat16 map(QRgbaFloat16 rgbafp16) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Applies the color transformation on the <db:link xlink:href="qrgbafloat.xml#QRgbaFloat16-typedef">QRgbaFloat16</db:link> value <db:code role="parameter">rgbafp16</db:code>.</db:para>
<db:para>The input should be opaque or unpremultiplied.</db:para>
<db:para>This function was introduced in Qt 6.4.</db:para>
</db:section>
<db:section xml:id="map-3">
<db:title>[since 6.4] QRgbaFloat32 QColorTransform::map(QRgbaFloat32 <db:emphasis>rgbafp32</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRgbaFloat32</db:type>
<db:methodname>map</db:methodname>
<db:methodparam>
<db:type>QRgbaFloat32</db:type>
<db:parameter>rgbafp32</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">3</db:synopsisinfo>
<db:synopsisinfo role="signature">QRgbaFloat32 map(QRgbaFloat32 rgbafp32) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Applies the color transformation on the <db:link xlink:href="qrgbafloat.xml#QRgbaFloat32-typedef">QRgbaFloat32</db:link> value <db:code role="parameter">rgbafp32</db:code>.</db:para>
<db:para>The input should be opaque or unpremultiplied.</db:para>
<db:para>This function was introduced in Qt 6.4.</db:para>
</db:section>
<db:section xml:id="map-4">
<db:title>QColor QColorTransform::map(const QColor &amp;<db:emphasis>color</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QColor</db:type>
<db:methodname>map</db:methodname>
<db:methodparam>
<db:type>const QColor &amp;</db:type>
<db:parameter>color</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">4</db:synopsisinfo>
<db:synopsisinfo role="signature">QColor map(const QColor &amp;color) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Applies the color transformation on the <db:link xlink:href="qcolor.xml">QColor</db:link> value <db:code role="parameter">color</db:code>.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-not-eq">
<db:title>[since 6.4] bool operator!=(const QColorTransform &amp;<db:emphasis>ct1</db:emphasis>, const QColorTransform &amp;<db:emphasis>ct2</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>operator!=</db:methodname>
<db:methodparam>
<db:type>const QColorTransform &amp;</db:type>
<db:parameter>ct1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QColorTransform &amp;</db:type>
<db:parameter>ct2</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator!=(const QColorTransform &amp;ct1, const QColorTransform &amp;ct2)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if <db:code role="parameter">ct1</db:code> does not define the same transformation as <db:code role="parameter">ct2</db:code>.</db:para>
<db:para>This function was introduced in Qt 6.4.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>[since 6.4] bool operator==(const QColorTransform &amp;<db:emphasis>ct1</db:emphasis>, const QColorTransform &amp;<db:emphasis>ct2</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>const QColorTransform &amp;</db:type>
<db:parameter>ct1</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QColorTransform &amp;</db:type>
<db:parameter>ct2</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(const QColorTransform &amp;ct1, const QColorTransform &amp;ct2)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if <db:code role="parameter">ct1</db:code> defines the same color transformation as <db:code role="parameter">ct2</db:code>.</db:para>
<db:para>This function was introduced in Qt 6.4.</db:para>
</db:section>
</db:section>
</db:article>
