<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>GeocodeModel QML Type</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link> type provides support for searching operations related to geographic information.</db:para>
<db:para>This type was introduced in Qt Location 5.5.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtLocation 5.3</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt Location 5.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>GeocodeModel is part of <db:simplelist><db:member>qml-QtLocation5-geocoding</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link> type is used as part of a model/view grouping to match addresses or search strings with geographic locations. How the geographic locations generated are used or displayed is decided by any Views attached to the <db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link> (for example a <db:link xlink:href="qml-qtlocation-mapitemview.xml">MapItemView</db:link> or <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>).</db:para>
<db:para>Like <db:link xlink:href="qml-qtlocation-map.xml">Map</db:link> and <db:link xlink:href="qml-qtlocation-routemodel.xml">RouteModel</db:link>, all the data for a <db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link> to work comes from a services plugin. This is contained in the <db:link xlink:href="qml-qtlocation-geocodemodel.xml#plugin-prop">plugin</db:link> property, and this must be set before the <db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link> can do any useful work.</db:para>
<db:para>Once the plugin is set, the <db:link xlink:href="qml-qtlocation-geocodemodel.xml#query-prop">query</db:link> property can be used to specify the address or search string to match. If <db:link xlink:href="qml-qtlocation-geocodemodel.xml#autoUpdate-prop">autoUpdate</db:link> is enabled, the Model will update its output automatically. Otherwise, the <db:link xlink:href="qml-qtlocation-geocodemodel.xml#update-method">update</db:link> method may be used. By default, <db:link xlink:href="qml-qtlocation-geocodemodel.xml#autoUpdate-prop">autoUpdate</db:link> is disabled.</db:para>
<db:para>The data stored and returned in the <db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link> consists of <db:link xlink:href="mobiledevelopment.xml#location">Location</db:link> objects, as a list with the role name &quot;locationData&quot;. See the documentation for <db:link xlink:href="mobiledevelopment.xml#location">Location</db:link> for further details on its structure and contents.</db:para>
<db:section xml:id="example-usage">
<db:title>Example Usage</db:title>
<db:para>The following snippet is two-part, showing firstly the declaration of objects, and secondly a short piece of procedural code using it. We set the geocodeModel's <db:link xlink:href="qml-qtlocation-geocodemodel.xml#autoUpdate-prop">autoUpdate</db:link> property to false, and call <db:link xlink:href="qml-qtlocation-geocodemodel.xml#update-method">update</db:link> once the query is set up. In this case, as we use a string value in <db:link xlink:href="qml-qtlocation-geocodemodel.xml#query-prop">query</db:link>, only one update would occur, even with <db:link xlink:href="qml-qtlocation-geocodemodel.xml#autoUpdate-prop">autoUpdate</db:link> enabled. However, if we provided an <db:link xlink:href="qml-qtpositioning-address.xml">Address</db:link> object we may inadvertently trigger multiple requests whilst setting its properties.</db:para>
<db:programlisting language="cpp">Plugin {
    id: aPlugin
}

GeocodeModel {
    id: geocodeModel
    plugin: aPlugin
    autoUpdate: false
}
</db:programlisting>
<db:programlisting language="cpp">{
    geocodeModel.query = &quot;53 Brandl St, Eight Mile Plains, Australia&quot;
    geocodeModel.update()
}
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="autoUpdate-prop">
<db:title>autoUpdate : bool</db:title>
<db:para>This property controls whether the Model automatically updates in response to changes in its attached query. The default value of this property is false.</db:para>
<db:para>If setting this value to 'true' and using an Address or <db:link xlink:href="qml-coordinate.xml">coordinate</db:link> as the query, note that any change at all in the object's properties will trigger a new request to be sent. If you are adjusting many properties of the object whilst autoUpdate is enabled, this can generate large numbers of useless (and later discarded) requests.</db:para>
</db:section>
<db:section xml:id="bounds-prop">
<db:title>bounds : geoshape</db:title>
<db:para>This property holds the bounding area used to limit the results to those within the area. This is particularly useful if query is only partially filled out, as the service will attempt to (reverse) geocode all matches for the specified data.</db:para>
<db:para>Accepted types are <db:link xlink:href="qml-georectangle.xml">georectangle</db:link> and <db:link xlink:href="qml-geocircle.xml">geocircle</db:link>.</db:para>
</db:section>
<db:section xml:id="count-prop">
<db:title>[read-only] count : int</db:title>
<db:para>This property holds how many locations the model currently has. Amongst other uses, you can use this value when accessing locations via the <db:link xlink:href="qml-qtlocation-geocodemodel.xml#get-method">GeocodeModel::get</db:link> -method.</db:para>
</db:section>
<db:section xml:id="error-prop">
<db:title>[read-only] error : enumeration</db:title>
<db:para>This read-only property holds the latest error value of the geocoding request.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.NoError - No error has occurred.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.CombinationError - An error occurred while results where being combined from multiple sources.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.CommunicationError - An error occurred while communicating with the service provider.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.EngineNotSetError - The model's plugin property was not set or there is no geocoding manager associated with the plugin.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.MissingRequiredParameterError - A required parameter was not specified.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.ParseError - The response from the service provider was in an unrecognizable format.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.UnknownError - An error occurred which does not fit into any of the other categories.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.UnknownParameterError - The plugin did not recognize one of the parameters it was given.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.UnsupportedOptionError - The requested operation is not supported by the geocoding provider. This may happen when the loaded engine does not support a particular geocoding request such as reverse geocoding.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="errorString-prop">
<db:title>[read-only] errorString : string</db:title>
<db:para>This read-only property holds the textual presentation of the latest geocoding error. If no error has occurred or the model has been reset, an empty string is returned.</db:para>
<db:para>An empty string may also be returned if an error occurred which has no associated textual representation.</db:para>
</db:section>
<db:section xml:id="limit-prop">
<db:title>limit : int</db:title>
<db:para>This property holds the maximum number of results. The limit and <db:link xlink:href="qml-qtlocation-geocodemodel.xml#offset-prop">offset</db:link> values are only applicable with free string geocoding (that is they are not considered when using addresses or coordinates in the search query).</db:para>
<db:para>If limit is -1 the entire result set will be returned, otherwise at most limit results will be returned. The limit and <db:link xlink:href="qml-qtlocation-geocodemodel.xml#offset-prop">offset</db:link> results can be used together to implement paging.</db:para>
</db:section>
<db:section xml:id="offset-prop">
<db:title>offset : int</db:title>
<db:para>This property tells not to return the first 'offset' number of the results. The <db:link xlink:href="qml-qtlocation-geocodemodel.xml#limit-prop">limit</db:link> and offset values are only applicable with free string geocoding (that is they are not considered when using addresses or coordinates in the search query).</db:para>
<db:para>The <db:link xlink:href="qml-qtlocation-geocodemodel.xml#limit-prop">limit</db:link> and offset results can be used together to implement paging.</db:para>
</db:section>
<db:section xml:id="plugin-prop">
<db:title>plugin : Plugin</db:title>
<db:para>This property holds the plugin that provides the actual geocoding service. Note that all plugins do not necessarily provide geocoding (could for example provide only routing or maps).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtlocation-plugin.xml">Plugin</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="query-prop">
<db:title>query : QVariant</db:title>
<db:para>This property holds the data of the geocoding request. The property accepts three types of queries which determine both the data and the type of action to be performed:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Address - Geocoding (address to coordinate)</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-coordinate.xml">coordinate</db:link> - Reverse geocoding (coordinate to address)</db:para>
</db:listitem>
<db:listitem>
<db:para>string - Geocoding (address to coordinate)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="status-prop">
<db:title>[read-only] status : enumeration</db:title>
<db:para>This read-only property holds the current status of the model.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.Null - No geocode requests have been issued or <db:link xlink:href="qml-qtlocation-geocodemodel.xml#reset-method">reset</db:link> has been called.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.Ready - Geocode request(s) have finished successfully.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.Loading - Geocode request has been issued but not yet finished</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.Error - Geocoding error has occurred, details are in <db:link xlink:href="qml-qtlocation-geocodemodel.xml#error-prop">error</db:link> and <db:link xlink:href="qml-qtlocation-geocodemodel.xml#errorString-prop">errorString</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="locationsChanged-signal">
<db:title>locationsChanged()</db:title>
<db:para>This signal is emitted when locations in the model have changed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onLocationsChanged</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtlocation-geocodemodel.xml#count-prop">count</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="cancel-method">
<db:title>void cancel()</db:title>
<db:para>Cancels any outstanding requests and clears errors. Model status will be set to either <db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.Null or <db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.Ready.</db:para>
</db:section>
<db:section xml:id="get-method">
<db:title>Location get(<db:emphasis>int</db:emphasis>)</db:title>
<db:para>Returns the Location at given index. Use <db:link xlink:href="qml-qtlocation-geocodemodel.xml#count-prop">count</db:link> property to check the amount of locations available. The locations are indexed from zero, so the accessible range is 0...(count - 1).</db:para>
<db:para>If you access out of bounds, a zero (null object) is returned and a warning is issued.</db:para>
</db:section>
<db:section xml:id="reset-method">
<db:title>void reset()</db:title>
<db:para>Resets the model. All location data is cleared, any outstanding requests are aborted and possible errors are cleared. Model status will be set to <db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link>.Null</db:para>
</db:section>
<db:section xml:id="update-method">
<db:title>void update()</db:title>
<db:para>Instructs the <db:link xlink:href="qml-qtlocation-geocodemodel.xml">GeocodeModel</db:link> to update its data. This is most useful when <db:link xlink:href="qml-qtlocation-geocodemodel.xml#autoUpdate-prop">autoUpdate</db:link> is disabled, to force a refresh when the query has been changed.</db:para>
</db:section>
</db:section>
</db:article>
