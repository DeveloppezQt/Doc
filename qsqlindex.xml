<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSqlIndex Class</db:title>
<db:productname>QtSql</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt SQL Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qsqlindex.xml">QSqlIndex</db:link> class provides functions to manipulate and describe database indexes.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSqlIndex</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += sql</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qsqlrecord.xml" xlink:role="class">QSqlRecord</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSqlIndex is part of <db:simplelist><db:member><db:link xlink:href="database.xml">Database Classes</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>An <db:emphasis>index</db:emphasis> refers to a single table or view in a database. Information about the fields that comprise the index can be used to generate SQL statements.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSqlIndex-1">
<db:title>[explicit] QSqlIndex::QSqlIndex(const QString &amp;<db:emphasis>cursorname</db:emphasis> = QString(), const QString &amp;<db:emphasis>name</db:emphasis> = QString())</db:title>
<db:para>Constructs an empty index using the cursor name <db:code role="parameter">cursorname</db:code> and index name <db:code role="parameter">name</db:code>.</db:para>
</db:section>
<db:section xml:id="QSqlIndex">
<db:title>QSqlIndex::QSqlIndex(const QSqlIndex &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QSqlIndex">
<db:title>[noexcept] QSqlIndex::~QSqlIndex()</db:title>
<db:para>Destroys the object and frees any allocated resources.</db:para>
</db:section>
<db:section xml:id="append">
<db:title>void QSqlIndex::append(const QSqlField &amp;<db:emphasis>field</db:emphasis>)</db:title>
<db:para>Appends the field <db:code role="parameter">field</db:code> to the list of indexed fields. The field is appended with an ascending sort order.</db:para>
</db:section>
<db:section xml:id="append-1">
<db:title>void QSqlIndex::append(const QSqlField &amp;<db:emphasis>field</db:emphasis>, bool <db:emphasis>desc</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Appends the field <db:code role="parameter">field</db:code> to the list of indexed fields. The field is appended with an ascending sort order, unless <db:code role="parameter">desc</db:code> is true.</db:para>
</db:section>
<db:section xml:id="cursorName">
<db:title>QString QSqlIndex::cursorName() const</db:title>
<db:para>Returns the name of the cursor which the index is associated with.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsqlindex.xml#setCursorName">setCursorName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isDescending">
<db:title>bool QSqlIndex::isDescending(int <db:emphasis>i</db:emphasis>) const</db:title>
<db:para>Returns <db:code>true</db:code> if field <db:code role="parameter">i</db:code> in the index is sorted in descending order; otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="name">
<db:title>QString QSqlIndex::name() const</db:title>
<db:para>Returns the name of the index.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsqlindex.xml#setName">setName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setCursorName">
<db:title>void QSqlIndex::setCursorName(const QString &amp;<db:emphasis>cursorName</db:emphasis>)</db:title>
<db:para>Sets the name of the cursor that the index is associated with to <db:code role="parameter">cursorName</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsqlindex.xml#cursorName">cursorName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDescending">
<db:title>void QSqlIndex::setDescending(int <db:emphasis>i</db:emphasis>, bool <db:emphasis>desc</db:emphasis>)</db:title>
<db:para>If <db:code role="parameter">desc</db:code> is true, field <db:code role="parameter">i</db:code> is sorted in descending order. Otherwise, field <db:code role="parameter">i</db:code> is sorted in ascending order (the default). If the field does not exist, nothing happens.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsqlindex.xml#isDescending">isDescending</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setName">
<db:title>void QSqlIndex::setName(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Sets the name of the index to <db:code role="parameter">name</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsqlindex.xml#name">name</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QSqlIndex &amp;QSqlIndex::operator=(const QSqlIndex &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Sets the index equal to <db:code role="parameter">other</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
