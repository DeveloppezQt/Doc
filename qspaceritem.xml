<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSpacerItem Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qspaceritem.xml">QSpacerItem</db:link> class provides blank space in a layout.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSpacerItem</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qlayoutitem.xml" xlink:role="class">QLayoutItem</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSpacerItem is part of <db:simplelist><db:member>geomanagement</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Normally, you don't need to use this class directly. Qt's built-in layout managers provide the following functions for manipulating empty space in layouts:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Class</db:para>
</db:th>
<db:th>
<db:para>Functions</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qhboxlayout.xml">QHBoxLayout</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qboxlayout.xml#addSpacing">addSpacing</db:link>(), <db:link xlink:href="qboxlayout.xml#addStretch">addStretch</db:link>(), <db:link xlink:href="qboxlayout.xml#insertSpacing">insertSpacing</db:link>(), <db:link xlink:href="qboxlayout.xml#insertStretch">insertStretch</db:link>()</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qgridlayout.xml">QGridLayout</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qgridlayout.xml#setRowMinimumHeight">setRowMinimumHeight</db:link>(), <db:link xlink:href="qgridlayout.xml#setRowStretch">setRowStretch</db:link>(), <db:link xlink:href="qgridlayout.xml#setColumnMinimumWidth">setColumnMinimumWidth</db:link>(), <db:link xlink:href="qgridlayout.xml#setColumnStretch">setColumnStretch</db:link>()</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlayout.xml">QLayout</db:link></db:member>
<db:member><db:link xlink:href="qwidgetitem.xml">QWidgetItem</db:link></db:member>
<db:member><db:link xlink:href="qlayoutitem.xml#spacerItem">QLayoutItem::spacerItem</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSpacerItem">
<db:title>QSpacerItem::QSpacerItem(int <db:emphasis>w</db:emphasis>, int <db:emphasis>h</db:emphasis>, QSizePolicy::Policy <db:emphasis>hPolicy</db:emphasis> = QSizePolicy::Minimum, QSizePolicy::Policy <db:emphasis>vPolicy</db:emphasis> = QSizePolicy::Minimum)</db:title>
<db:para>Constructs a spacer item with preferred width <db:code role="parameter">w</db:code>, preferred height <db:code role="parameter">h</db:code>, horizontal size policy <db:code role="parameter">hPolicy</db:code> and vertical size policy <db:code role="parameter">vPolicy</db:code>.</db:para>
<db:para>The default values provide a gap that is able to stretch if nothing else wants the space.</db:para>
</db:section>
<db:section xml:id="dtor.QSpacerItem">
<db:title>[virtual noexcept] QSpacerItem::~QSpacerItem()</db:title>
<db:para>Destructor.</db:para>
</db:section>
<db:section xml:id="changeSize">
<db:title>void QSpacerItem::changeSize(int <db:emphasis>w</db:emphasis>, int <db:emphasis>h</db:emphasis>, QSizePolicy::Policy <db:emphasis>hPolicy</db:emphasis> = QSizePolicy::Minimum, QSizePolicy::Policy <db:emphasis>vPolicy</db:emphasis> = QSizePolicy::Minimum)</db:title>
<db:para>Changes this spacer item to have preferred width <db:code role="parameter">w</db:code>, preferred height <db:code role="parameter">h</db:code>, horizontal size policy <db:code role="parameter">hPolicy</db:code> and vertical size policy <db:code role="parameter">vPolicy</db:code>.</db:para>
<db:para>The default values provide a gap that is able to stretch if nothing else wants the space.</db:para>
<db:para>Note that if changeSize() is called after the spacer item has been added to a layout, it is necessary to invalidate the layout in order for the spacer item's new size to take effect.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlayoutitem.xml#invalidate">QSpacerItem::invalidate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="expandingDirections">
<db:title>[override virtual] Qt::Orientations QSpacerItem::expandingDirections() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qlayoutitem.xml#expandingDirections" role="function">QLayoutItem::expandingDirections() const</db:link>.</db:para>
</db:section>
<db:section xml:id="geometry">
<db:title>[override virtual] QRect QSpacerItem::geometry() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qlayoutitem.xml#geometry" role="function">QLayoutItem::geometry() const</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qspaceritem.xml#setGeometry">setGeometry</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isEmpty">
<db:title>[override virtual] bool QSpacerItem::isEmpty() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qlayoutitem.xml#isEmpty" role="function">QLayoutItem::isEmpty() const</db:link>.</db:para>
<db:para>Returns <db:code>true</db:code>.</db:para>
</db:section>
<db:section xml:id="maximumSize">
<db:title>[override virtual] QSize QSpacerItem::maximumSize() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qlayoutitem.xml#maximumSize" role="function">QLayoutItem::maximumSize() const</db:link>.</db:para>
</db:section>
<db:section xml:id="minimumSize">
<db:title>[override virtual] QSize QSpacerItem::minimumSize() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qlayoutitem.xml#minimumSize" role="function">QLayoutItem::minimumSize() const</db:link>.</db:para>
</db:section>
<db:section xml:id="setGeometry">
<db:title>[override virtual] void QSpacerItem::setGeometry(const QRect &amp;<db:emphasis>r</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qlayoutitem.xml#setGeometry" role="function">QLayoutItem::setGeometry(const QRect &amp;r)</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qspaceritem.xml#geometry">geometry</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sizeHint">
<db:title>[override virtual] QSize QSpacerItem::sizeHint() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qlayoutitem.xml#sizeHint" role="function">QLayoutItem::sizeHint() const</db:link>.</db:para>
</db:section>
<db:section xml:id="sizePolicy">
<db:title>QSizePolicy QSpacerItem::sizePolicy() const</db:title>
<db:para>Returns the size policy of this item.</db:para>
</db:section>
<db:section xml:id="spacerItem">
<db:title>[override virtual] QSpacerItem *QSpacerItem::spacerItem()</db:title>
<db:para>Reimplements: <db:link xlink:href="qlayoutitem.xml#spacerItem" role="function">QLayoutItem::spacerItem()</db:link>.</db:para>
<db:para>Returns a pointer to this object.</db:para>
</db:section>
</db:section>
</db:article>
