<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QNativeGestureEvent Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qnativegestureevent.xml">QNativeGestureEvent</db:link> class contains parameters that describe a gesture event.</db:para>
<db:para>This class was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QNativeGestureEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qsinglepointevent.xml" xlink:role="class">QSinglePointEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QNativeGestureEvent is part of <db:simplelist><db:member>events</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Native gesture events are generated by the operating system, typically by interpreting touch events. Gesture events are high-level events such as zoom or rotate.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Event Type</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
<db:th>
<db:para>Touch sequence</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qt.xml#NativeGestureType-enum">Qt::ZoomNativeGesture</db:link></db:para>
</db:td>
<db:td>
<db:para>Magnification delta in percent.</db:para>
</db:td>
<db:td>
<db:para>macOS: Two-finger pinch.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qt.xml#NativeGestureType-enum">Qt::SmartZoomNativeGesture</db:link></db:para>
</db:td>
<db:td>
<db:para>Boolean magnification state.</db:para>
</db:td>
<db:td>
<db:para>macOS: Two-finger douple tap (trackpad) / One-finger douple tap (magic mouse).</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qt.xml#NativeGestureType-enum">Qt::RotateNativeGesture</db:link></db:para>
</db:td>
<db:td>
<db:para>Rotation delta in degrees.</db:para>
</db:td>
<db:td>
<db:para>macOS: Two-finger rotate.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>In addition, BeginNativeGesture and EndNativeGesture are sent before and after gesture event streams:</db:para>
<db:para>BeginNativeGesture ZoomNativeGesture ZoomNativeGesture ZoomNativeGesture EndNativeGesture</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt.xml#NativeGestureType-enum">Qt::NativeGestureType</db:link></db:member>
<db:member><db:link xlink:href="qgestureevent.xml">QGestureEvent</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QNativeGestureEvent-2">
<db:title>[since 5.10] QNativeGestureEvent::QNativeGestureEvent(Qt::NativeGestureType <db:emphasis>type</db:emphasis>, const QPointingDevice *<db:emphasis>device</db:emphasis>, const QPointF &amp;<db:emphasis>localPos</db:emphasis>, const QPointF &amp;<db:emphasis>scenePos</db:emphasis>, const QPointF &amp;<db:emphasis>globalPos</db:emphasis>, qreal <db:emphasis>realValue</db:emphasis>, quint64 <db:emphasis>sequenceId</db:emphasis>, quint64 <db:emphasis>intValue</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QNativeGestureEvent</db:methodname>
<db:methodparam>
<db:type>Qt::NativeGestureType</db:type>
<db:parameter>type</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPointingDevice *</db:type>
<db:parameter>device</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPointF &amp;</db:type>
<db:parameter>localPos</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPointF &amp;</db:type>
<db:parameter>scenePos</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QPointF &amp;</db:type>
<db:parameter>globalPos</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>realValue</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>quint64</db:type>
<db:parameter>sequenceId</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>quint64</db:type>
<db:parameter>intValue</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">2</db:synopsisinfo>
<db:synopsisinfo role="signature">QNativeGestureEvent(Qt::NativeGestureType type, const QPointingDevice *device, const QPointF &amp;localPos, const QPointF &amp;scenePos, const QPointF &amp;globalPos, qreal realValue, quint64 sequenceId, quint64 intValue)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a native gesture event of type <db:code role="parameter">type</db:code> originating from <db:code role="parameter">device</db:code>.</db:para>
<db:para>The points <db:code role="parameter">localPos</db:code>, <db:code role="parameter">scenePos</db:code> and <db:code role="parameter">globalPos</db:code> specify the gesture position relative to the receiving widget or item, window, and screen or desktop, respectively.</db:para>
<db:para><db:code role="parameter">realValue</db:code> is the macOS event parameter, <db:code role="parameter">sequenceId</db:code> and <db:code role="parameter">intValue</db:code> are the Windows event parameters.</db:para>
<db:para>This function was introduced in Qt 5.10.</db:para>
</db:section>
<db:section xml:id="gestureType">
<db:title>[since 5.2] Qt::NativeGestureType QNativeGestureEvent::gestureType() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>Qt::NativeGestureType</db:type>
<db:methodname>gestureType</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">Qt::NativeGestureType gestureType() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the gesture type.</db:para>
<db:para>This function was introduced in Qt 5.2.</db:para>
</db:section>
<db:section xml:id="globalPos">
<db:title>[since 5.2] const QPoint QNativeGestureEvent::globalPos() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>const QPoint</db:type>
<db:methodname>globalPos</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">const QPoint globalPos() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the position of the gesture as a <db:link xlink:href="qpointf.xml">QPointF</db:link> in screen coordinates</db:para>
<db:para>This function was introduced in Qt 5.2.</db:para>
</db:section>
<db:section xml:id="localPos">
<db:title>[since 5.2] QPointF QNativeGestureEvent::localPos() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPointF</db:type>
<db:methodname>localPos</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPointF localPos() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the position of the gesture as a <db:link xlink:href="qpointf.xml">QPointF</db:link>, relative to the widget or item that received the event.</db:para>
<db:para>This function was introduced in Qt 5.2.</db:para>
</db:section>
<db:section xml:id="pos">
<db:title>[since 5.2] const QPoint QNativeGestureEvent::pos() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>const QPoint</db:type>
<db:methodname>pos</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">const QPoint pos() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the position of the mouse cursor, relative to the widget or item that received the event.</db:para>
<db:para>This function was introduced in Qt 5.2.</db:para>
</db:section>
<db:section xml:id="screenPos">
<db:title>[since 5.2] QPointF QNativeGestureEvent::screenPos() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPointF</db:type>
<db:methodname>screenPos</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPointF screenPos() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the position of the gesture as a <db:link xlink:href="qpointf.xml">QPointF</db:link> in screen coordinates.</db:para>
<db:para>This function was introduced in Qt 5.2.</db:para>
</db:section>
<db:section xml:id="value">
<db:title>[since 5.2] qreal QNativeGestureEvent::value() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>qreal</db:type>
<db:methodname>value</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qreal value() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the gesture value. The value should be interpreted based on the gesture type. For example, a Zoom gesture provides a scale factor while a Rotate gesture provides a rotation delta.</db:para>
<db:para>This function was introduced in Qt 5.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnativegestureevent.xml">QNativeGestureEvent</db:link></db:member>
<db:member><db:link xlink:href="qnativegestureevent.xml#gestureType">gestureType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="windowPos">
<db:title>[since 5.2] QPointF QNativeGestureEvent::windowPos() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPointF</db:type>
<db:methodname>windowPos</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPointF windowPos() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the position of the gesture as a <db:link xlink:href="qpointf.xml">QPointF</db:link>, relative to the window that received the event.</db:para>
<db:para>This function was introduced in Qt 5.2.</db:para>
</db:section>
</db:section>
</db:article>
