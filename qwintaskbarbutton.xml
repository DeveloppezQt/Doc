<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QWinTaskbarButton Class</db:title>
<db:productname>QtWinExtras</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Windows Extras Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qwintaskbarbutton.xml">QWinTaskbarButton</db:link> class represents the Windows taskbar button for a top-level window (Windows 7 and newer).</db:para>
<db:para>This class was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QWinTaskbarButton</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += winextras</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qwintaskbarbutton.xml">QWinTaskbarButton</db:link> class enables you to set overlay icons on a taskbar button, and provides access to its progress indicator.</db:para>
<db:para>An overlay icon indicates change in the state of an application, whereas a progress indicator shows how time-consuming tasks are progressing.</db:para>
<db:mediaobject>
<db:alt>Taskbar Button</db:alt>
<db:imageobject>
<db:imagedata fileref="images/taskbar-button.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The following example code illustrates how to use the <db:link xlink:href="qwintaskbarbutton.xml">QWinTaskbarButton</db:link> and <db:link xlink:href="qwintaskbarprogress.xml">QWinTaskbarProgress</db:link> classes to adjust the look of the taskbar button:</db:para>
<db:programlisting language="cpp">    QWinTaskbarButton *button = new QWinTaskbarButton(widget);
    button-&gt;setWindow(widget-&gt;windowHandle());
    button-&gt;setOverlayIcon(QIcon(&quot;:/loading.png&quot;));

    QWinTaskbarProgress *progress = button-&gt;progress();
    progress-&gt;setVisible(true);
    progress-&gt;setValue(50);
</db:programlisting>
<db:note>
<db:para><db:link xlink:href="qwidget.xml#windowHandle">QWidget::windowHandle</db:link>() returns a valid instance of a <db:link xlink:href="qwindow.xml">QWindow</db:link> only after the widget has been shown. It is therefore recommended to delay the initialization of the <db:link xlink:href="qwintaskbarbutton.xml">QWinTaskbarButton</db:link> instances until <db:link xlink:href="qwidget.xml#showEvent">QWidget::showEvent</db:link>().</db:para>
</db:note>
<db:note>
<db:para>The class wraps API only available since Windows 7. Instantiating it on Windows XP or Windows Vista causes a runtime warning.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwintaskbarprogress.xml">QWinTaskbarProgress</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="overlayAccessibleDescription-prop">
<db:title>overlayAccessibleDescription : QString</db:title>
<db:para>This property holds the description of the overlay for accessibility purposes</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">overlayAccessibleDescription</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setOverlayAccessibleDescription</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>description</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwintaskbarbutton.xml#overlayIcon-prop">overlayIcon</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="overlayIcon-prop">
<db:title>overlayIcon : QIcon</db:title>
<db:para>This property holds the overlay icon of the taskbar button</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qicon.xml">QIcon</db:link></db:type> <db:emphasis role="bold">overlayIcon</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setOverlayIcon</db:emphasis>(const <db:type><db:link xlink:href="qicon.xml">QIcon</db:link></db:type> &amp;<db:emphasis>icon</db:emphasis>)</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">clearOverlayIcon</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="progress-prop">
<db:title>[read-only] progress : QWinTaskbarProgress* const</db:title>
<db:para>This property holds the progress indicator of the taskbar button</db:para>
<db:note>
<db:para>The progress indicator is not <db:link xlink:href="qwintaskbarprogress.xml#visible-prop">visible</db:link> by default.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qwintaskbarprogress.xml">QWinTaskbarProgress</db:link></db:type> *<db:emphasis role="bold">progress</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="window-prop">
<db:title>window : QWindow*</db:title>
<db:para>This property holds the window whose taskbar button is manipulated</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qwindow.xml">QWindow</db:link></db:type> *<db:emphasis role="bold">window</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setWindow</db:emphasis>(<db:type><db:link xlink:href="qwindow.xml">QWindow</db:link></db:type> *<db:emphasis>window</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QWinTaskbarButton">
<db:title>[explicit] QWinTaskbarButton::QWinTaskbarButton(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs a <db:link xlink:href="qwintaskbarbutton.xml">QWinTaskbarButton</db:link> with the specified <db:code role="parameter">parent</db:code>.</db:para>
<db:para>If <db:code role="parameter">parent</db:code> is an instance of <db:link xlink:href="qwindow.xml">QWindow</db:link>, it is automatically assigned as the taskbar button's <db:link xlink:href="qwintaskbarbutton.xml#window-prop">window</db:link>.</db:para>
</db:section>
<db:section xml:id="dtor.QWinTaskbarButton">
<db:title>[virtual noexcept] QWinTaskbarButton::~QWinTaskbarButton()</db:title>
<db:para>Destroys the <db:link xlink:href="qwintaskbarbutton.xml">QWinTaskbarButton</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
