<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Positioning (QML)</db:title>
<db:productname>QtPositioning</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Positioning Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Location Positioning API enables location positioning by means of GPS or an NMEA data source.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="location-positioning">
<db:title>Location Positioning</db:title>
<db:para>Location data involves a precisely specified position on the Earth's surface — as provided by a latitude-longitude coordinate — along with associated data, such as:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>The date and time at which the position was reported</db:para>
</db:listitem>
<db:listitem>
<db:para>The velocity of the device that reported the position</db:para>
</db:listitem>
<db:listitem>
<db:para>The altitude of the reported position (height above sea level)</db:para>
</db:listitem>
<db:listitem>
<db:para>The bearing of the device in degrees, relative to true north</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>For more information see <db:link xlink:href="http://en.wikipedia.org/wiki/Geographic_coordinate">Geographic Coordinate</db:link>.</db:para>
<db:para>This data can be extracted through a variety of methods. One of the most well known methods of positioning is GPS (Global Positioning System), a publicly available system that uses radiowave signals received from Earth-orbiting satellites to calculate the precise position and time of the receiver. Another popular method is 'Cell Identifier Positioning', which uses the cell identifier of the cell site that is currently serving the receiving device to calculate its approximate location. These and other positioning methods can all be used with the Location API; the only requirement for a location data source within the API is that it provides a latitude-longitude coordinate with a date/time value, with the option of providing the other attributes listed above.</db:para>
<db:section xml:id="coordinate">
<db:title>Coordinate</db:title>
<db:para>The <db:link xlink:href="qml-coordinate.xml">coordinate</db:link> is a basic unit of geographical information. The <db:link xlink:href="qml-coordinate.xml">coordinate</db:link> type has attributes to hold the <db:code>latitude</db:code>, <db:code>longitude</db:code> and <db:code>altitude</db:code>.</db:para>
</db:section>
<db:section xml:id="position">
<db:title>Position</db:title>
<db:para>The three dimensional position of an object such as a mobile device can be specified by giving the latitude, longitude and altitude. That is the values held in the l {coordinate} type. Additionally for computation of future positions we would like to know if the object is moving, what <db:link xlink:href="qml-qtpositioning-position.xml#speed-prop">speed</db:link> it is doing and what is the <db:link xlink:href="qml-qtpositioning-position.xml#timestamp-prop">timestamp</db:link> of the last position data. Position therefore includes values for the <db:link xlink:href="qml-qtpositioning-position.xml#coordinate-prop">coordinate</db:link>, <db:link xlink:href="qml-qtpositioning-position.xml#speed-prop">speed</db:link> and a <db:link xlink:href="qml-qtpositioning-position.xml#timestamp-prop">timestamp</db:link>. <db:link xlink:href="qml-qtpositioning-position.xml">Position</db:link> also takes responsibility for validation of sensible values for these properties. These are exposed as the <db:link xlink:href="qml-qtpositioning-position.xml#latitudeValid-prop">latitudeValid</db:link>, <db:link xlink:href="qml-qtpositioning-position.xml#longitudeValid-prop">longitudeValid</db:link>, <db:link xlink:href="qml-qtpositioning-position.xml#altitudeValid-prop">altitudeValid</db:link>, <db:link xlink:href="qml-qtpositioning-position.xml#speedValid-prop">speedValid</db:link>, <db:link xlink:href="qml-qtpositioning-position.xml#horizontalAccuracyValid-prop">horizontalAccuracyValid</db:link>, and <db:link xlink:href="qml-qtpositioning-position.xml#verticalAccuracyValid-prop">verticalAccuracyValid</db:link> properties.</db:para>
</db:section>
<db:section xml:id="positionsource">
<db:title>PositionSource</db:title>
<db:para>We have a Position type, a <db:link xlink:href="qml-coordinate.xml">coordinate</db:link> type but where does the data come from? Also it is a good idea to be able to indicate alternative sources. Perhaps instead of directly picking up GPS satellites it might be desirable to do some testing using a datafile.</db:para>
<db:para>The <db:link xlink:href="qml-qtpositioning-positionsource.xml">PositionSource</db:link> type provides the developer with control, within the limits allowed by the platform, of the source of the geographical data. Apart from tradtional sources such as GPS and cell data the positional data can be sourced from a logfile which is in NMEA format.</db:para>
<db:para><db:link xlink:href="http://en.wikipedia.org/wiki/NMEA">NMEA</db:link> is a common text-based protocol for specifying navigational data. For convenience, the <db:link xlink:href="qml-qtpositioning-positionsource.xml#nmeaSource-prop">nmeaSource</db:link> property is provided to enable QML applications to read NMEA data from a log file or a TCP socket, the source will emit updates according to the time stamp of each NMEA sentence to produce a &quot;replay&quot; of the recorded data. To use a TCP socket set the &quot;socket&quot; uri scheme.</db:para>
<db:programlisting language="cpp">PositionSource {
    nmeaSource: &quot;socket://127.0.0.1:12345&quot;
}
</db:programlisting>
</db:section>
<db:section xml:id="geoflickr-example">
<db:title><db:emphasis role="bold">GeoFlickr Example</db:emphasis></db:title>
<db:para>The <db:link xlink:href="qtpositioning-geoflickr-example.xml">GeoFlickr Example</db:link> uses the Location to download thumbnail images from Flickr relevant to the current location.</db:para>
</db:section>
</db:section>
</db:article>
