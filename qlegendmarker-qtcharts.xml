<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QLegendMarker Class</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qlegendmarker-qtcharts.xml">QLegendMarker</db:link> class is an abstract object that can be used to access markers within a legend.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QLegendMarker</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qarealegendmarker-qtcharts.xml" xlink:role="class">QAreaLegendMarker</db:link>, <db:link xlink:href="qbarlegendmarker-qtcharts.xml" xlink:role="class">QBarLegendMarker</db:link>, <db:link xlink:href="qboxplotlegendmarker-qtcharts.xml" xlink:role="class">QBoxPlotLegendMarker</db:link>, <db:link xlink:href="qcandlesticklegendmarker-qtcharts.xml" xlink:role="class">QCandlestickLegendMarker</db:link>, <db:link xlink:href="qpielegendmarker-qtcharts.xml" xlink:role="class">QPieLegendMarker</db:link>, and <db:link xlink:href="qxylegendmarker-qtcharts.xml" xlink:role="class">QXYLegendMarker</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A legend marker consists of an icon and a label. The icon color corresponds to the color used to draw a series and the label displays the name of the series (or the label of the slice for a pie series or bar set for a bar series). A legend marker is always related to one series, slice, or bar set.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/examples_percentbarchart_legend.png"/>
</db:imageobject>
</db:mediaobject>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlegend-qtcharts.xml">QLegend</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="LegendMarkerType-enum">
<db:title>enum QLegendMarker::LegendMarkerType</db:title>
<db:para>The type of the legend marker object.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml">QLegendMarker</db:link></db:emphasis>::LegendMarkerTypeArea</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>A legend marker for an area series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml">QLegendMarker</db:link></db:emphasis>::LegendMarkerTypeBar</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>A legend marker for a bar set.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml">QLegendMarker</db:link></db:emphasis>::LegendMarkerTypePie</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>A legend marker for a pie slice.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml">QLegendMarker</db:link></db:emphasis>::LegendMarkerTypeXY</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>A legend marker for a line, spline, or scatter series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml">QLegendMarker</db:link></db:emphasis>::LegendMarkerTypeBoxPlot</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>A legend marker for a box plot series.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml">QLegendMarker</db:link></db:emphasis>::LegendMarkerTypeCandlestick</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>A legend marker for a candlestick series.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="brush-prop">
<db:title>brush : QBrush</db:title>
<db:para>This property holds the brush used to fill the icon.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#brush">brush</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#setBrush">setBrush</db:link></db:emphasis>(const <db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> &amp;<db:emphasis>brush</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#brushChanged">brushChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="font-prop">
<db:title>font : QFont</db:title>
<db:para>This property holds the font of the label.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#font">font</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#setFont">setFont</db:link></db:emphasis>(const <db:type><db:link xlink:href="qfont.xml">QFont</db:link></db:type> &amp;<db:emphasis>font</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#fontChanged">fontChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="label-prop">
<db:title>label : QString</db:title>
<db:para>This property holds the text shown in the legend for a legend marker.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#label">label</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#setLabel">setLabel</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>label</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#labelChanged">labelChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelBrush-prop">
<db:title>labelBrush : QBrush</db:title>
<db:para>This property holds the brush of the label.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#labelBrush">labelBrush</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#setLabelBrush">setLabelBrush</db:link></db:emphasis>(const <db:type><db:link xlink:href="qbrush.xml">QBrush</db:link></db:type> &amp;<db:emphasis>brush</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#labelBrushChanged">labelBrushChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="pen-prop">
<db:title>pen : QPen</db:title>
<db:para>This property holds the pen used to draw the outline of the icon.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#pen">pen</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#setPen">setPen</db:link></db:emphasis>(const <db:type><db:link xlink:href="qpen.xml">QPen</db:link></db:type> &amp;<db:emphasis>pen</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#penChanged">penChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="shape-prop">
<db:title>shape : QLegend::MarkerShape</db:title>
<db:para>The shape of the legend marker. Defaults to <db:link xlink:href="qlegend-qtcharts.xml#MarkerShape-enum">QLegend::MarkerShapeDefault</db:link>, which indicates the shape is determined by <db:link xlink:href="qlegend-qtcharts.xml#markerShape-prop">QLegend::markerShape</db:link> property.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qlegend-qtcharts.xml#MarkerShape-enum">QLegend::MarkerShape</db:link></db:type> <db:emphasis role="bold">shape</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setShape</db:emphasis>(<db:type><db:link xlink:href="qlegend-qtcharts.xml#MarkerShape-enum">QLegend::MarkerShape</db:link></db:type> <db:emphasis>shape</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">shapeChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="visible-prop">
<db:title>visible : bool</db:title>
<db:para>This property holds the visibility of the legend marker.</db:para>
<db:para>The visibility affects both the legend marker label and the icon.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#isVisible">isVisible</db:link></db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#setVisible">setVisible</db:link></db:emphasis>(<db:type>bool</db:type> <db:emphasis>visible</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qlegendmarker-qtcharts.xml#visibleChanged">visibleChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="dtor.QLegendMarker">
<db:title>[virtual noexcept] QLegendMarker::~QLegendMarker()</db:title>
<db:para>Removes the legend marker.</db:para>
</db:section>
<db:section xml:id="brush">
<db:title>QBrush QLegendMarker::brush() const</db:title>
<db:para>Returns the brush used to fill the icon.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qlegendmarker-qtcharts.xml#brush-prop">brush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlegendmarker-qtcharts.xml#setBrush">setBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="brushChanged">
<db:title>void QLegendMarker::brushChanged()</db:title>
<db:para>This signal is emitted when the brush of the legend marker has changed.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qlegendmarker-qtcharts.xml#brush-prop">brush</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="clicked">
<db:title>void QLegendMarker::clicked()</db:title>
<db:para>This signal is emitted when the legend marker is clicked.</db:para>
</db:section>
<db:section xml:id="font">
<db:title>QFont QLegendMarker::font() const</db:title>
<db:para>Retuns the font of the label.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qlegendmarker-qtcharts.xml#font-prop">font</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlegendmarker-qtcharts.xml#setFont">setFont</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fontChanged">
<db:title>void QLegendMarker::fontChanged()</db:title>
<db:para>This signal is emitted when the (label) font of the legend marker has changed.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qlegendmarker-qtcharts.xml#font-prop">font</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="hovered">
<db:title>void QLegendMarker::hovered(bool <db:emphasis>status</db:emphasis>)</db:title>
<db:para>This signal is emitted when a mouse is hovered over the legend marker. When the mouse moves over the marker, <db:code role="parameter">status</db:code> turns <db:code>true</db:code>, and when the mouse moves away again, it turns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="isVisible">
<db:title>bool QLegendMarker::isVisible() const</db:title>
<db:para>Returns the visibility of the marker.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qlegendmarker-qtcharts.xml#visible-prop">visible</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="label">
<db:title>QString QLegendMarker::label() const</db:title>
<db:para>Returns the label of the marker.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qlegendmarker-qtcharts.xml#label-prop">label</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlegendmarker-qtcharts.xml#setLabel">setLabel</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelBrush">
<db:title>QBrush QLegendMarker::labelBrush() const</db:title>
<db:para>Returns the brush that is used to draw the label.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qlegendmarker-qtcharts.xml#labelBrush-prop">labelBrush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlegendmarker-qtcharts.xml#setLabelBrush">setLabelBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelBrushChanged">
<db:title>void QLegendMarker::labelBrushChanged()</db:title>
<db:para>This signal is emitted when the label brush of the legend marker has changed.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qlegendmarker-qtcharts.xml#labelBrush-prop">labelBrush</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="labelChanged">
<db:title>void QLegendMarker::labelChanged()</db:title>
<db:para>This signal is emitted when the label of the legend marker has changed.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qlegendmarker-qtcharts.xml#label-prop">label</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="pen">
<db:title>QPen QLegendMarker::pen() const</db:title>
<db:para>Returns the pen used to draw the outline of the icon.</db:para>
<db:note>
<db:para>Getter function for property <db:link xlink:href="qlegendmarker-qtcharts.xml#pen-prop">pen</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlegendmarker-qtcharts.xml#setPen">setPen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="penChanged">
<db:title>void QLegendMarker::penChanged()</db:title>
<db:para>This signal is emitted when the pen of the legend marker has changed.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qlegendmarker-qtcharts.xml#pen-prop">pen</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="series">
<db:title>[pure virtual] QAbstractSeries *QLegendMarker::series()</db:title>
<db:para>Returns a pointer to the series that is related to this legend marker. A legend marker is always related to a series.</db:para>
</db:section>
<db:section xml:id="setBrush">
<db:title>void QLegendMarker::setBrush(const QBrush &amp;<db:emphasis>brush</db:emphasis>)</db:title>
<db:para>Sets the brush used to fill the icon to <db:code role="parameter">brush</db:code>.</db:para>
<db:note>
<db:para>Changing the color of the series also changes the color of the icon.</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qlegendmarker-qtcharts.xml#brush-prop">brush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlegendmarker-qtcharts.xml#brush">brush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFont">
<db:title>void QLegendMarker::setFont(const QFont &amp;<db:emphasis>font</db:emphasis>)</db:title>
<db:para>Sets the font of the label to <db:code role="parameter">font</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qlegendmarker-qtcharts.xml#font-prop">font</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlegendmarker-qtcharts.xml#font">font</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLabel">
<db:title>void QLegendMarker::setLabel(const QString &amp;<db:emphasis>label</db:emphasis>)</db:title>
<db:para>Sets the label of the marker to <db:code role="parameter">label</db:code>.</db:para>
<db:note>
<db:para>Changing the name of a series also changes the label of its marker.</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qlegendmarker-qtcharts.xml#label-prop">label</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlegendmarker-qtcharts.xml#label">label</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setLabelBrush">
<db:title>void QLegendMarker::setLabelBrush(const QBrush &amp;<db:emphasis>brush</db:emphasis>)</db:title>
<db:para>Sets the the brush used to draw to label to <db:code role="parameter">brush</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qlegendmarker-qtcharts.xml#labelBrush-prop">labelBrush</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlegendmarker-qtcharts.xml#labelBrush">labelBrush</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPen">
<db:title>void QLegendMarker::setPen(const QPen &amp;<db:emphasis>pen</db:emphasis>)</db:title>
<db:para>Sets the <db:code role="parameter">pen</db:code> used to draw the outline of the icon to <db:code role="parameter">pen</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qlegendmarker-qtcharts.xml#pen-prop">pen</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlegendmarker-qtcharts.xml#pen">pen</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setVisible">
<db:title>void QLegendMarker::setVisible(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:para>Sets the marker's visibility to <db:code role="parameter">visible</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qlegendmarker-qtcharts.xml#visible-prop">visible</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlegendmarker-qtcharts.xml#isVisible">isVisible</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="type">
<db:title>[pure virtual] QLegendMarker::LegendMarkerType QLegendMarker::type()</db:title>
<db:para>Returns the type of the legend marker for the related series, pie slice, or bar set.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlegendmarker-qtcharts.xml#LegendMarkerType-enum">LegendMarkerType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="visibleChanged">
<db:title>void QLegendMarker::visibleChanged()</db:title>
<db:para>This signal is emitted when the visibility of the legend marker has changed.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qlegendmarker-qtcharts.xml#visible-prop">visible</db:link>. </db:para>
</db:note>
</db:section>
</db:section>
</db:article>
