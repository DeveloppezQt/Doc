<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Control QML Type</db:title>
<db:productname>QtQuickControls2</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 2 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The base type of user interface controls.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml" xlink:role="">AbstractButton</db:link>, <db:link xlink:href="qml-qtquick-controls2-busyindicator.xml" xlink:role="">BusyIndicator</db:link>, <db:link xlink:href="qml-qtquick-controls2-combobox.xml" xlink:role="">ComboBox</db:link>, <db:link xlink:href="qml-qtquick-controls2-container.xml" xlink:role="">Container</db:link>, <db:link xlink:href="qml-qt-labs-calendar2-dayofweekrow.xml" xlink:role="">DayOfWeekRow</db:link>, <db:link xlink:href="qml-qtquick-controls2-dial.xml" xlink:role="">Dial</db:link>, <db:link xlink:href="qml-qt-labs-calendar2-monthgrid.xml" xlink:role="">MonthGrid</db:link>, <db:link xlink:href="qml-qtquick-controls2-page.xml" xlink:role="">Page</db:link>, <db:link xlink:href="qml-qtquick-controls2-pageindicator.xml" xlink:role="">PageIndicator</db:link>, <db:link xlink:href="qml-qtquick-controls2-pane.xml" xlink:role="">Pane</db:link>, <db:link xlink:href="qml-qtquick-controls2-progressbar.xml" xlink:role="">ProgressBar</db:link>, <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml" xlink:role="">RangeSlider</db:link>, <db:link xlink:href="qml-qtquick-controls2-scrollbar.xml" xlink:role="">ScrollBar</db:link>, <db:link xlink:href="qml-qtquick-controls2-scrollindicator.xml" xlink:role="">ScrollIndicator</db:link>, <db:link xlink:href="qml-qtquick-controls2-slider.xml" xlink:role="">Slider</db:link>, <db:link xlink:href="qml-qtquick-controls2-spinbox.xml" xlink:role="">SpinBox</db:link>, <db:link xlink:href="qml-qtquick-controls2-stackview.xml" xlink:role="">StackView</db:link>, <db:link xlink:href="qml-qtquick-controls2-tumbler.xml" xlink:role="">Tumbler</db:link>, and <db:link xlink:href="qml-qt-labs-calendar2-weeknumbercolumn.xml" xlink:role="">WeekNumberColumn</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-item.xml">Item</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Control is the base type of user interface controls. It receives input events from the window system, and paints a representation of itself on the screen.</db:para>
<db:section xml:id="control-layout">
<db:title>Control Layout</db:title>
<db:para>The following diagram illustrates the layout of a typical control:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-control.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The <db:link xlink:href="qml-qtquick-item.xml#implicitWidth-prop">implicitWidth</db:link> and <db:link xlink:href="qml-qtquick-item.xml#implicitHeight-prop">implicitHeight</db:link> of a control are typically based on the implicit sizes of the background and the content item plus any <db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">padding</db:link>. These properties determine how large the control will be when no explicit <db:link xlink:href="qml-qtquick-item.xml#width-prop">width</db:link> or <db:link xlink:href="qml-qtquick-item.xml#height-prop">height</db:link> is specified.</db:para>
<db:para>The <db:link xlink:href="qml-qtquick-controls2-control.xml#background-prop">background</db:link> item fills the entire width and height of the control, unless an explicit size has been given for it.</db:para>
<db:para>The geometry of the <db:link xlink:href="qml-qtquick-controls2-control.xml#contentItem-prop">contentItem</db:link> is determined by the padding.</db:para>
</db:section>
<db:section xml:id="event-handling">
<db:title>Event Handling</db:title>
<db:para>All controls, except non-interactive indicators, do not let clicks and touches through to items below them. For example, if <db:link xlink:href="qml-qtquick-controls2-pane.xml">Pane</db:link> is used as the <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#header-attached-prop">header</db:link> or <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#footer-attached-prop">footer</db:link> of <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link>, items underneath it will not get mouse or touch events.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-container.xml">Container</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="availableHeight-prop">
<db:title>[read-only] availableHeight : real</db:title>
<db:para>This property holds the height available to the <db:link xlink:href="qml-qtquick-controls2-control.xml#contentItem-prop">contentItem</db:link> after deducting vertical padding from the <db:link xlink:href="qml-qtquick-item.xml#height-prop">height</db:link> of the control.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#topPadding-prop">topPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#bottomPadding-prop">bottomPadding</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="availableWidth-prop">
<db:title>[read-only] availableWidth : real</db:title>
<db:para>This property holds the width available to the <db:link xlink:href="qml-qtquick-controls2-control.xml#contentItem-prop">contentItem</db:link> after deducting horizontal padding from the <db:link xlink:href="qml-qtquick-item.xml#width-prop">width</db:link> of the control.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#leftPadding-prop">leftPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#rightPadding-prop">rightPadding</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="background-prop">
<db:title>background : Item</db:title>
<db:para>This property holds the background item.</db:para>
<db:programlisting language="cpp">Button {
    id: control
    text: qsTr(&quot;Button&quot;)
    background: Rectangle {
        implicitWidth: 100
        implicitHeight: 40
        opacity: enabled ? 1 : 0.3
        color: control.down ? &quot;#d0d0d0&quot; : &quot;#e0e0e0&quot;
    }
}
</db:programlisting>
<db:note>
<db:para>If the background item has no explicit size specified, it automatically follows the control's size. In most cases, there is no need to specify width or height for a background item.</db:para>
</db:note>
<db:note>
<db:para>Most controls use the implicit size of the background item to calculate the implicit size of the control itself. If you replace the background item with a custom one, you should also consider providing a sensible implicit size for it (unless it is an item like <db:link xlink:href="qml-qtquick-image.xml">Image</db:link> which has its own implicit size).</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="bottomPadding-prop">
<db:title>bottomPadding : real</db:title>
<db:para>This property holds the bottom padding.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#topPadding-prop">topPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#availableHeight-prop">availableHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contentItem-prop">
<db:title>contentItem : Item</db:title>
<db:para>This property holds the visual content item.</db:para>
<db:note>
<db:para>The content item is automatically resized to fit within the <db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">padding</db:link> of the control.</db:para>
</db:note>
<db:note>
<db:para>Most controls use the implicit size of the content item to calculate the implicit size of the control itself. If you replace the content item with a custom one, you should also consider providing a sensible implicit size for it (unless it is an item like <db:link xlink:href="whatsnew50.xml#text">Text</db:link> which has its own implicit size).</db:para>
</db:note>
<db:programlisting language="cpp">Button {
    id: control
    text: qsTr(&quot;Button&quot;)
    contentItem: Label {
        text: control.text
        font: control.font
        verticalAlignment: Text.AlignVCenter
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">padding</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="focusPolicy-prop">
<db:title>focusPolicy : enumeration</db:title>
<db:para>This property determines the way the control accepts focus.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Qt.TabFocus</db:para>
</db:td>
<db:td>
<db:para>The control accepts focus by tabbing.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.ClickFocus</db:para>
</db:td>
<db:td>
<db:para>The control accepts focus by clicking.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.StrongFocus</db:para>
</db:td>
<db:td>
<db:para>The control accepts focus by both tabbing and clicking.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.WheelFocus</db:para>
</db:td>
<db:td>
<db:para>The control accepts focus by tabbing, clicking, and using the mouse wheel.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.NoFocus</db:para>
</db:td>
<db:td>
<db:para>The control does not accept focus.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="focusReason-prop">
<db:title>[read-only] focusReason : enumeration</db:title>
<db:para>This property holds the reason of the last focus change.</db:para>
<db:note>
<db:para>This property does not indicate whether the control has <db:link xlink:href="qml-qtquick-item.xml#activeFocus-prop">active focus</db:link>, but the reason why the control either gained or lost focus.</db:para>
</db:note>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Qt.MouseFocusReason</db:para>
</db:td>
<db:td>
<db:para>A mouse action occurred.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.TabFocusReason</db:para>
</db:td>
<db:td>
<db:para>The Tab key was pressed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.BacktabFocusReason</db:para>
</db:td>
<db:td>
<db:para>A Backtab occurred. The input for this may include the Shift or Control keys; e.g. Shift+Tab.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.ActiveWindowFocusReason</db:para>
</db:td>
<db:td>
<db:para>The window system made this window either active or inactive.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.PopupFocusReason</db:para>
</db:td>
<db:td>
<db:para>The application opened/closed a pop-up that grabbed/released the keyboard focus.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.ShortcutFocusReason</db:para>
</db:td>
<db:td>
<db:para>The user typed a label's buddy shortcut</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.MenuBarFocusReason</db:para>
</db:td>
<db:td>
<db:para>The menu bar took focus.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.OtherFocusReason</db:para>
</db:td>
<db:td>
<db:para>Another reason, usually application-specific.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#visualFocus-prop">visualFocus</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-item.xml#activeFocus-prop">Item::activeFocus</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="font-prop">
<db:title>font : font</db:title>
<db:para>This property holds the font currently set for the control.</db:para>
<db:para>This property describes the control's requested font. The font is used by the control's style when rendering standard components, and is available as a means to ensure that custom controls can maintain consistency with the native platform's native look and feel. It's common that different platforms, or different styles, define different fonts for an application.</db:para>
<db:para>The default font depends on the system environment. <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link> maintains a system/theme font which serves as a default for all controls. There may also be special font defaults for certain types of controls. You can also set the default font for controls by passing a custom font to <db:link xlink:href="qguiapplication.xml#setFont">QGuiApplication::setFont</db:link>(), before loading the QML. Finally, the font is matched against Qt's font database to find the best match.</db:para>
<db:para>Control propagates explicit font properties from parent to children. If you change a specific property on a control's font, that property propagates to all of the control's children, overriding any system defaults for that property.</db:para>
<db:programlisting language="cpp">Page {
    font.family: &quot;Courier&quot;

    Column {
        Label {
            text: qsTr(&quot;This will use Courier...&quot;)
        }

        Switch {
            text: qsTr(&quot;... and so will this&quot;)
        }
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="hoverEnabled-prop">
<db:title>hoverEnabled : bool</db:title>
<db:para>This property determines whether the control accepts hover events. The default value is <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#hovered-prop">hovered</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="hovered-prop">
<db:title>[read-only] hovered : bool</db:title>
<db:para>This property holds whether the control is hovered.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#hoverEnabled-prop">hoverEnabled</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="leftPadding-prop">
<db:title>leftPadding : real</db:title>
<db:para>This property holds the left padding.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#rightPadding-prop">rightPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#availableWidth-prop">availableWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="locale-prop">
<db:title>locale : Locale</db:title>
<db:para>This property holds the locale of the control. It contains locale specific properties for formatting data and numbers. Unless a special locale has been set, this is either the parent's locale or the default locale.</db:para>
<db:para>Control propagates explicit locale properties from parent to children. If you change a specific property on a control's locale, that property propagates to all of the control's children, overriding any system defaults for that property.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#mirrored-prop">mirrored</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layoutmirroring.xml">LayoutMirroring</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mirrored-prop">
<db:title>[read-only] mirrored : bool</db:title>
<db:para>This property holds whether the control is mirrored.</db:para>
<db:para>This property is provided for convenience. A control is considered mirrored when its visual layout direction is right-to-left; that is, when using a right-to-left locale or when <db:link xlink:href="qml-qtquick-layoutmirroring.xml#enabled-prop">LayoutMirroring.enabled</db:link> is <db:code>true</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#locale-prop">locale</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layoutmirroring.xml">LayoutMirroring</db:link></db:member>
<db:member><db:link xlink:href="qtquick-positioning-righttoleft.xml">Right-to-left User Interfaces</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="padding-prop">
<db:title>padding : real</db:title>
<db:para>This property holds the default padding.</db:para>
<db:para>Padding adds a space between each edge of the content item and the background item, effectively controlling the size of the content item. To specify a padding value for a specific edge of the control, set its relevant property:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-control.xml#leftPadding-prop">leftPadding</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-control.xml#rightPadding-prop">rightPadding</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-control.xml#topPadding-prop">topPadding</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-control.xml#bottomPadding-prop">bottomPadding</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#availableWidth-prop">availableWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#availableHeight-prop">availableHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#topPadding-prop">topPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#leftPadding-prop">leftPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#rightPadding-prop">rightPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#bottomPadding-prop">bottomPadding</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rightPadding-prop">
<db:title>rightPadding : real</db:title>
<db:para>This property holds the right padding.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#leftPadding-prop">leftPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#availableWidth-prop">availableWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="spacing-prop">
<db:title>spacing : real</db:title>
<db:para>This property holds the spacing.</db:para>
<db:para>Spacing is useful for controls that have multiple or repetitive building blocks. For example, some styles use spacing to determine the distance between the text and indicator of <db:link xlink:href="qml-qtquick-controls2-checkbox.xml">CheckBox</db:link>. Spacing is not enforced by Control, so each style may interpret it differently, and some may ignore it altogether.</db:para>
</db:section>
<db:section xml:id="topPadding-prop">
<db:title>topPadding : real</db:title>
<db:para>This property holds the top padding.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#bottomPadding-prop">bottomPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#availableHeight-prop">availableHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="visualFocus-prop">
<db:title>[read-only] visualFocus : bool</db:title>
<db:para>This property holds whether the control has visual focus. This property is <db:code>true</db:code> when the control has active focus and the focus reason is either <db:code>Qt.TabFocusReason</db:code>, <db:code>Qt.BacktabFocusReason</db:code>, or <db:code>Qt.ShortcutFocusReason</db:code>.</db:para>
<db:para>In general, for visualizing key focus, this property is preferred over <db:link xlink:href="qml-qtquick-item.xml#activeFocus-prop">Item::activeFocus</db:link>. This ensures that key focus is only visualized when interacting with keys - not when interacting via touch or mouse.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#focusReason-prop">focusReason</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-item.xml#activeFocus-prop">Item::activeFocus</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="wheelEnabled-prop">
<db:title>wheelEnabled : bool</db:title>
<db:para>This property determines whether the control handles wheel events. The default value is <db:code>false</db:code>.</db:para>
<db:note>
<db:para>Care must be taken when enabling wheel events for controls within scrollable items such as <db:link xlink:href="qml-qtquick-flickable.xml">Flickable</db:link>, as the control will consume the events and hence interrupt scrolling of the Flickable.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
