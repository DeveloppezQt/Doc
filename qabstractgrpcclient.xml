<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAbstractGrpcClient Class</db:title>
<db:productname>QtGrpc</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GRPC Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qabstractgrpcclient.xml">QAbstractGrpcClient</db:link> class is bridge between gRPC clients and channels.</db:para>
<db:para>This class was introduced in Qt 6.5.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAbstractGrpcClient</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Grpc)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Grpc)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qabstractgrpcclient.xml">QAbstractGrpcClient</db:link> provides a set of functions for client classes generated out of protobuf services. <db:link xlink:href="qabstractgrpcclient.xml">QAbstractGrpcClient</db:link> enforces thread safety for startStream() and call() methods of generated clients.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="attachChannel">
<db:title>void QAbstractGrpcClient::attachChannel(const std::shared_ptr&lt;QAbstractGrpcChannel&gt; &amp;<db:emphasis>channel</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>attachChannel</db:methodname>
<db:methodparam>
<db:type>const std::shared_ptr&lt;QAbstractGrpcChannel&gt; &amp;</db:type>
<db:parameter>channel</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void attachChannel(const std::shared_ptr&lt;QAbstractGrpcChannel&gt; &amp;channel)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Attaches <db:code role="parameter">channel</db:code> to client as transport layer for gRPC.</db:para>
<db:para>Parameters and return values will be serialized to the channel in a format it supports.</db:para>
<db:note>
<db:para><db:emphasis role="bold">Warning</db:emphasis>: Qt GRPC doesn't guarantee thread safety on the channel level. You have to invoke the channel-related functions on the same thread as <db:link xlink:href="qabstractgrpcclient.xml">QAbstractGrpcClient</db:link>.</db:para>
</db:note>
</db:section>
</db:section>
</db:article>
