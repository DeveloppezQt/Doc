<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Planets Example</db:title>
<db:productname>QtCanvas3D</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Canvas 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates combining Qt Quick and three.js rendering.</db:para>
<db:para>This documentation was introduced in QtCanvas3D 1.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QtCanvas3D module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.0
import QtCanvas3D 1.0

import &quot;planets.js&quot; as GLCode

Item {
    id: mainview
    width: 1280
    height: 768
    visible: true
    property int focusedPlanet: 100
    property int oldPlanet: 0
    property real xLookAtOffset: 0
    property real yLookAtOffset: 0
    property real zLookAtOffset: 0
    property real xCameraOffset: 0
    property real yCameraOffset: 0
    property real zCameraOffset: 0
    property real cameraNear: 0
    property int sliderLength: (width &lt; height) ? width / 2 : height / 2
    property real textSize: (sliderLength &lt; 320) ? (sliderLength / 20) : 16
    property real planetButtonSize: (height &lt; 768) ? (height / 11) : 70

    NumberAnimation {
        id: lookAtOffsetAnimation
        target: mainview
        properties: &quot;xLookAtOffset, yLookAtOffset, zLookAtOffset&quot;
        to: 0
        easing.type: Easing.InOutQuint
        duration: 1250
    }

    NumberAnimation {
        id: cameraOffsetAnimation
        target: mainview
        properties: &quot;xCameraOffset, yCameraOffset, zCameraOffset&quot;
        to: 0
        easing.type: Easing.InOutQuint
        duration: 2500
    }

    Behavior on cameraNear {
        PropertyAnimation {
            easing.type: Easing.InOutQuint
            duration: 2500
        }
    }
    onFocusedPlanetChanged: {
        if (focusedPlanet == 100) {
            info.opacity = 0;
            updatePlanetInfo();
        } else {
            updatePlanetInfo();
            info.opacity = 0.5;
        }

        GLCode.prepareFocusedPlanetAnimation();

        lookAtOffsetAnimation.restart();
        cameraOffsetAnimation.restart();
    }
    Canvas3D {
        id: canvas3d
        anchors.fill: parent
        onInitializeGL: {
            GLCode.initializeGL(canvas3d, eventSource, mainview);
        }
        onPaintGL: {
            GLCode.paintGL(canvas3d);
            fpsDisplay.fps = canvas3d.fps;
        }

        onResizeGL: {
            GLCode.onResizeGL(canvas3d);
        }
        ControlEventSource {
            anchors.fill: parent
            focus: true
            id: eventSource
        }
    }
    ListModel {
        id: planetModel

        ListElement {
            name: &quot;Sun&quot;
            radius: &quot;109 x Earth&quot;
            temperature: &quot;5 778 K&quot;
            orbitalPeriod: &quot;&quot;
            distance: &quot;&quot;
            planetImageSource: &quot;images/sun.png&quot;
            planetNumber: 0
        }
        ListElement {
            name: &quot;Mercury&quot;
            radius: &quot;0.3829 x Earth&quot;
            temperature: &quot;80-700 K&quot;
            orbitalPeriod: &quot;87.969 d&quot;
            distance: &quot;0.387 098 AU&quot;
            planetImageSource: &quot;images/mercury.png&quot;
            planetNumber: 1
        }
        ListElement {
            name: &quot;Venus&quot;
            radius: &quot;0.9499 x Earth&quot;
            temperature: &quot;737 K&quot;
            orbitalPeriod: &quot;224.701 d&quot;
            distance: &quot;0.723 327 AU&quot;
            planetImageSource: &quot;images/venus.png&quot;
            planetNumber: 2
        }
        ListElement {
            name: &quot;Earth&quot;
            radius: &quot;6 378.1 km&quot;
            temperature: &quot;184-330 K&quot;
            orbitalPeriod: &quot;365.256 d&quot;
            distance: &quot;149598261 km (1 AU)&quot;
            planetImageSource: &quot;images/earth.png&quot;
            planetNumber: 3
        }
        ListElement {
            name: &quot;Mars&quot;
            radius: &quot;0.533 x Earth&quot;
            temperature: &quot;130-308 K&quot;
            orbitalPeriod: &quot;686.971 d&quot;
            distance: &quot;1.523679 AU&quot;
            planetImageSource: &quot;images/mars.png&quot;
            planetNumber: 4
        }
        ListElement {
            name: &quot;Jupiter&quot;
            radius: &quot;11.209 x Earth&quot;
            temperature: &quot;112-165 K&quot;
            orbitalPeriod: &quot;4332.59 d&quot;
            distance: &quot;5.204267 AU&quot;
            planetImageSource: &quot;images/jupiter.png&quot;
            planetNumber: 5
        }
        ListElement {
            name: &quot;Saturn&quot;
            radius: &quot;9.4492 x Earth&quot;
            temperature: &quot;84-134 K&quot;
            orbitalPeriod: &quot;10759.22 d&quot;
            distance: &quot;9.5820172 AU&quot;
            planetImageSource: &quot;images/saturn.png&quot;
            planetNumber: 6
        }
        ListElement {
            name: &quot;Uranus&quot;
            radius: &quot;4.007 x Earth&quot;
            temperature: &quot;49-76 K&quot;
            orbitalPeriod: &quot;30687.15 d&quot;
            distance: &quot;19.189253 AU&quot;
            planetImageSource: &quot;images/uranus.png&quot;
            planetNumber: 7
        }
        ListElement {
            name: &quot;Neptune&quot;
            radius: &quot;3.883 x Earth&quot;
            temperature: &quot;55-72 K&quot;
            orbitalPeriod: &quot;60190.03 d&quot;
            distance: &quot;30.070900 AU&quot;
            planetImageSource: &quot;images/neptune.png&quot;
            planetNumber: 8
        }
        ListElement {
            name: &quot;Solar System&quot;
            planetImageSource: &quot;&quot;
            planetNumber: 100 // Defaults to solar system
        }
    }

    Component {
        id: planetButtonDelegate
        PlanetButton {
            source: planetImageSource
            text: name
            focusPlanet: planetNumber
            planetSelector: mainview
            buttonSize: planetButtonSize
            fontSize: textSize
        }
    }

    ListView {
        id: planetButtonView
        anchors.top: parent.top
        anchors.right: parent.right
        anchors.bottom: parent.bottom
        anchors.rightMargin: planetButtonSize / 5
        anchors.bottomMargin: planetButtonSize / 7
        spacing: planetButtonSize / 7
        width: planetButtonSize * 1.4
        interactive: false
        model: planetModel
        delegate: planetButtonDelegate
    }

    InfoSheet {
        id: info
        width: 400
        anchors.right: planetButtonView.left
        anchors.rightMargin: 10
        opacity: 0.5

        // Set initial information for Solar System
        planet: &quot;Solar System&quot;
        exampleDetails: &quot;This example shows a 3D model of the Solar&lt;/p&gt;&quot; +
                        &quot;&lt;p&gt;System comprised of the Sun and the eight&lt;/p&gt;&quot; +
                        &quot;&lt;p&gt;planets orbiting the Sun.&lt;/p&gt;&lt;/br&gt;&quot; +
                        &quot;&lt;p&gt;The example is implemented using QtCanvas3D,&lt;/p&gt;&quot; +
                        &quot;&lt;p&gt;three.js and _RingGeometry() method from&lt;/p&gt;&quot; +
                        &quot;&lt;p&gt;threex.planets extension.&lt;/p&gt;&lt;/br&gt;&quot; +
                        &quot;&lt;p&gt;The textures and images used in the example&lt;/p&gt;&quot; +
                        &quot;&lt;p&gt;are Copyright (c) by James Hastings-Trew,&lt;/p&gt;&quot; +
                        &quot;&lt;a href=\&quot;http://planetpixelemporium.com/planets.html\&quot;&gt;&quot; +
                        &quot;http://planetpixelemporium.com/planets.html&lt;/a&gt;&quot;
    }

    function updatePlanetInfo() {

        info.width = 200;

        if (focusedPlanet !== 100) {
            info.planet = planetModel.get(focusedPlanet).name
            info.radius = planetModel.get(focusedPlanet).radius
            info.temperature = planetModel.get(focusedPlanet).temperature
            info.orbitalPeriod = planetModel.get(focusedPlanet).orbitalPeriod
            info.distance = planetModel.get(focusedPlanet).distance
        }
    }

    StyledSlider {
        id: speedSlider
        anchors.top: parent.top
        anchors.topMargin: 10
        anchors.horizontalCenter: parent.horizontalCenter
        width: sliderLength
        value: 0.2
        minimumValue: 0
        maximumValue: 1
        onValueChanged: GLCode.onSpeedChanged(value);
    }
    Text {
        anchors.right: speedSlider.left
        anchors.verticalCenter: speedSlider.verticalCenter
        anchors.rightMargin: 10
        font.family: &quot;Helvetica&quot;
        font.pixelSize: textSize
        font.weight: Font.Light
        color: &quot;white&quot;
        text: &quot;Rotation Speed&quot;
    }

    StyledSlider {
        id: scaleSlider
        anchors.bottom: parent.bottom
        anchors.bottomMargin: 10
        anchors.horizontalCenter: parent.horizontalCenter
        width: sliderLength
        value: 1200
        minimumValue: 1
        maximumValue: 2000
        onValueChanged: GLCode.setScale(value);
    }
    Text {
        anchors.right: scaleSlider.left
        anchors.verticalCenter: scaleSlider.verticalCenter
        anchors.rightMargin: 10
        font.family: &quot;Helvetica&quot;
        font.pixelSize: textSize
        font.weight: Font.Light
        color: &quot;white&quot;
        text: &quot;Planet Size&quot;
    }

    StyledSlider {
        id: distanceSlider
        anchors.left: parent.left
        anchors.leftMargin: 10
        anchors.verticalCenter: parent.verticalCenter
        orientation: Qt.Vertical
        height: sliderLength
        value: 1
        minimumValue: 1
        maximumValue: 2
        onValueChanged: GLCode.setCameraDistance(value);
    }
    Text {
        y: distanceSlider.y + distanceSlider.height + width + 10
        x: distanceSlider.x + 30 - textSize
        transform: Rotation {
            origin.x: 0;
            origin.y: 0;
            angle: -90
        }
        font.family: &quot;Helvetica&quot;
        font.pixelSize: textSize
        font.weight: Font.Light
        color: &quot;white&quot;
        text: &quot;Viewing Distance&quot;
    }

    // FPS display, initially hidden, clicking will show it
    FpsDisplay {
        id: fpsDisplay
        anchors.left: parent.left
        anchors.top: parent.top
        width: 32
        height: 64
        hidden: true
    }
}

</db:programlisting>
</db:article>
