<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>XmlListModel QML Type</db:title>
<db:productname>QtQmlXmlListModel</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML XmlListModel Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>For specifying a read-only model using XML data.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQml.XmlListModel</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>To use this element, you will need to import the module with the following line:</db:para>
<db:programlisting language="cpp">import QtQml.XmlListModel
</db:programlisting>
<db:para><db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml">XmlListModel</db:link> is used to create a read-only model from XML data. It can be used as a data source for view elements (such as <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>, <db:link xlink:href="qml-qtquick-pathview.xml">PathView</db:link>, <db:link xlink:href="qml-qtquick-gridview.xml">GridView</db:link>) and other elements that interact with model data (such as Repeater).</db:para>
<db:note>
<db:para>This model <db:emphasis role="bold">does not</db:emphasis> support the XPath queries. It supports simple slash-separated paths and, optionally, one attribute for each element.</db:para>
</db:note>
<db:para>For example, if there is an XML document at https://www.qt.io/blog/rss.xml like this:</db:para>
<db:programlisting language="cpp">&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;rss version=&quot;2.0&quot;&amp;gt;
  ...
  &amp;lt;channel&amp;gt;
    &amp;lt;item&amp;gt;
      &amp;lt;title&amp;gt;Qt 6.0.2 Released&amp;lt;/title&amp;gt;
      &amp;lt;link&amp;gt;https://www.qt.io/blog/qt-6.0.2-released&amp;lt;/link&amp;gt;
      &amp;lt;pubDate&amp;gt;Wed, 03 Mar 2021 12:40:43 GMT&amp;lt;/pubDate&amp;gt;
    &amp;lt;/item&amp;gt;
    &amp;lt;item&amp;gt;
      &amp;lt;title&amp;gt;Qt 6.1 Beta Released&amp;lt;/title&amp;gt;
      &amp;lt;link&amp;gt;https://www.qt.io/blog/qt-6.1-beta-released&amp;lt;/link&amp;gt;
      &amp;lt;pubDate&amp;gt;Tue, 02 Mar 2021 13:05:47 GMT&amp;lt;/pubDate&amp;gt;
    &amp;lt;/item&amp;gt;
    &amp;lt;item&amp;gt;
      &amp;lt;title&amp;gt;Qt Creator 4.14.1 released&amp;lt;/title&amp;gt;
      &amp;lt;link&amp;gt;https://www.qt.io/blog/qt-creator-4.14.1-released&amp;lt;/link&amp;gt;
      &amp;lt;pubDate&amp;gt;Wed, 24 Feb 2021 13:53:21 GMT&amp;lt;/pubDate&amp;gt;
    &amp;lt;/item&amp;gt;
  &amp;lt;/channel&amp;gt;
&amp;lt;/rss&amp;gt;
</db:programlisting>
<db:para>A <db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml">XmlListModel</db:link> could create a model from this data, like this:</db:para>
<db:programlisting language="qml">import QtQml.XmlListModel

XmlListModel {
    id: xmlModel
    source: &quot;https://www.qt.io/blog/rss.xml&quot;
    query: &quot;/rss/channel/item&quot;

    XmlListModelRole { name: &quot;title&quot;; elementName: &quot;title&quot; }
    XmlListModelRole { name: &quot;pubDate&quot;; elementName: &quot;pubDate&quot; }
    XmlListModelRole { name: &quot;link&quot;; elementName: &quot;link&quot; }
}
</db:programlisting>
<db:para>The <db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml#query-prop">query</db:link> value of &quot;/rss/channel/item&quot; specifies that the <db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml">XmlListModel</db:link> should generate a model item for each <db:code>&lt;item&gt;</db:code> in the XML document.</db:para>
<db:para>The <db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodelrole.xml">XmlListModelRole</db:link> objects define the model item attributes. Here, each model item will have <db:code>title</db:code>, <db:code>pubDate</db:code> and <db:code>link</db:code> attributes that match the <db:code>title</db:code>, <db:code>pubDate</db:code> and <db:code>link</db:code> values of its corresponding <db:code>&lt;item&gt;</db:code>. (See <db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodelrole.xml">XmlListModelRole</db:link> documentation for more examples.)</db:para>
<db:para>The model could be used in a <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>, like this:</db:para>
<db:programlisting language="qml">ListView {
    width: 180; height: 300
    model: xmlModel
    delegate: Text { text: title + &quot;: &quot; + pubDate + &quot;; link: &quot; + link }
}
</db:programlisting>
<db:para>The <db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml">XmlListModel</db:link> data is loaded asynchronously, and <db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml#status-prop">status</db:link> is set to <db:code>XmlListModel.Ready</db:code> when loading is complete. Note this means when <db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml">XmlListModel</db:link> is used for a view, the view is not populated until the model is loaded.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="count-prop">
<db:title>count : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>count</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The number of data entries in the model.</db:para>
</db:section>
<db:section xml:id="progress-prop">
<db:title>progress : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>progress</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This indicates the current progress of the downloading of the XML data source. This value ranges from 0.0 (no data downloaded) to 1.0 (all data downloaded). If the XML data is not from a remote source, the progress becomes 1.0 as soon as the data is read.</db:para>
<db:para>Note that when the progress is 1.0, the XML data has been downloaded, but it is yet to be loaded into the model at this point. Use the status property to find out when the XML data has been read and loaded into the model.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml#status-prop">status</db:link></db:member>
<db:member><db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml#source-prop">source</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="query-prop">
<db:title>query : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>query</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>A string representing the base path for creating model items from this model's <db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodelrole.xml">XmlListModelRole</db:link> objects. The query should start with <db:code>'/'</db:code>.</db:para>
</db:section>
<db:section xml:id="roles-prop">
<db:title>roles : list&lt;XmlListModelRole&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;XmlListModelRole&gt;</db:type>
<db:varname>roles</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The roles to make available for this model.</db:para>
</db:section>
<db:section xml:id="source-prop">
<db:title>source : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>source</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The location of the XML data source.</db:para>
</db:section>
<db:section xml:id="status-prop">
<db:title>status : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>status</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies the model loading status, which can be one of the following:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml">XmlListModel</db:link>.Null - No XML data has been set for this model.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml">XmlListModel</db:link>.Ready - The XML data has been loaded into the model.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml">XmlListModel</db:link>.Loading - The model is in the process of reading and loading XML data.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml">XmlListModel</db:link>.Error - An error occurred while the model was loading. See <db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml#errorString-method">errorString</db:link>() for details about the error.</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml#progress-prop">progress</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="errorString-method">
<db:title>errorString()</db:title>
<db:para>Returns a string description of the last error that occurred if <db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml#status-prop">status</db:link> is <db:link xlink:href="qml-qtqml-xmllistmodel-xmllistmodel.xml">XmlListModel</db:link>.Error.</db:para>
</db:section>
<db:section xml:id="reload-method">
<db:title>reload()</db:title>
<db:para>Reloads the model.</db:para>
</db:section>
</db:section>
</db:article>
