<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>AnimationController QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A controller type for animations.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Animation 2.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3danimation-qanimationcontroller.xml">QAnimationController</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qt3d-animation-animationcontroller.xml">AnimationController</db:link> type controls the selection and playback of animations. The type can be used to find all animations from Entity tree and create <db:link xlink:href="qml-qt3d-animation-animationgroup.xml">AnimationGroups</db:link> from the animations with the same name. The user can select which animation group is currently controlled with the animation controller by setting the active animation. The animation position is then propagated to that group after scaling and offsetting the provided position value with the <db:link xlink:href="qml-qt3d-animation-animationcontroller.xml#positionScale-prop">positionScale</db:link> and <db:link xlink:href="qml-qt3d-animation-animationcontroller.xml#positionOffset-prop">positionOffset</db:link> values.</db:para>
<db:note>
<db:para>that the animation controller doesn't have internal timer, but instead the user is responsible for updating the position property in timely manner.</db:para>
</db:note>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="activeAnimationGroup-prop">
<db:title>activeAnimationGroup : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>activeAnimationGroup</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the currectly active animation group.</db:para>
</db:section>
<db:section xml:id="animationGroups-prop">
<db:title>animationGroups : list&lt;AnimationGroup&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;AnimationGroup&gt;</db:type>
<db:varname>animationGroups</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the list of animation groups in the controller.</db:para>
</db:section>
<db:section xml:id="entity-prop">
<db:title>entity : Entity</db:title>
<db:fieldsynopsis>
<db:type>Entity</db:type>
<db:varname>entity</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the entity animations are gathered and grouped from. If the controller already holds animations, they are cleared.</db:para>
</db:section>
<db:section xml:id="position-prop">
<db:title>position : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>position</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current position of the animation. When the position is set, it is scaled and offset with <db:link xlink:href="qml-qt3d-animation-animationcontroller.xml#positionScale-prop">positionScale</db:link>/<db:link xlink:href="qml-qt3d-animation-animationcontroller.xml#positionOffset-prop">positionOffset</db:link> and propagated to the active animation group.</db:para>
</db:section>
<db:section xml:id="positionOffset-prop">
<db:title>positionOffset : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>positionOffset</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the position offset of the animation.</db:para>
</db:section>
<db:section xml:id="positionScale-prop">
<db:title>positionScale : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>positionScale</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the position scale of the animation.</db:para>
</db:section>
<db:section xml:id="recursive-prop">
<db:title>recursive : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>recursive</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds whether the recursively search the entity tree when gathering animations from the entity. If set to true, the animations are searched also from the child entities of the entity. If set to false, only the entity passed to the controller is searched.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="getAnimationIndex-method">
<db:title>int getAnimationIndex(<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Returns the index of the animation with <db:code role="parameter">name</db:code>. Returns -1 if no <db:link xlink:href="qml-qt3d-animation-animationgroup.xml">AnimationGroup</db:link> with the given name is found.</db:para>
</db:section>
<db:section xml:id="getGroup-method">
<db:title>AnimationGroup getGroup(<db:emphasis>index</db:emphasis>)</db:title>
<db:para>Returns the <db:link xlink:href="qml-qt3d-animation-animationgroup.xml">AnimationGroup</db:link> with the given <db:code role="parameter">index</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
