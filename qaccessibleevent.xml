<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAccessibleEvent Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qaccessibleevent.xml">QAccessibleEvent</db:link> class is the base class for accessibility notifications.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAccessibleEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qaccessiblestatechangeevent.xml" xlink:role="class">QAccessibleStateChangeEvent</db:link>, <db:link xlink:href="qaccessibletablemodelchangeevent.xml" xlink:role="class">QAccessibleTableModelChangeEvent</db:link>, <db:link xlink:href="qaccessibletextcursorevent.xml" xlink:role="class">QAccessibleTextCursorEvent</db:link>, and <db:link xlink:href="qaccessiblevaluechangeevent.xml" xlink:role="class">QAccessibleValueChangeEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QAccessibleEvent is part of <db:simplelist><db:member>accessibility</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This class is used with <db:link xlink:href="qaccessible.xml#updateAccessibility">QAccessible::updateAccessibility</db:link>().</db:para>
<db:para>The event type is one of the values of <db:link xlink:href="qaccessible.xml#Event-enum">QAccessible::Event</db:link>. There are a number of subclasses that should be used to provide more details about the event.</db:para>
<db:para>For example to notify about a focus change when re-implementing <db:link xlink:href="qwidget.xml#setFocus">QWidget::setFocus</db:link>, the event could be used as follows:</db:para>
<db:programlisting language="cpp">void MyWidget::setFocus(Qt::FocusReason reason)
{
    // handle custom focus setting...
    QAccessibleEvent event(f, QAccessible::Focus);
    QAccessible::updateAccessibility(&amp;event);
}
</db:programlisting>
<db:para>To enable in process screen readers, all events must be sent after the change has happened.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QAccessibleEvent">
<db:title>QAccessibleEvent::QAccessibleEvent(QAccessibleInterface *<db:emphasis>iface</db:emphasis>, QAccessible::Event <db:emphasis>type</db:emphasis>)</db:title>
<db:para>Constructs a <db:link xlink:href="qaccessibleevent.xml">QAccessibleEvent</db:link> to notify that <db:code role="parameter">interface</db:code> has changed. The event <db:code role="parameter">type</db:code> describes what changed. Use this function if you already have a <db:link xlink:href="qaccessibleinterface.xml">QAccessibleInterface</db:link> or no <db:link xlink:href="qobject.xml">QObject</db:link>, otherwise consider the overload taking a <db:link xlink:href="qobject.xml">QObject</db:link> parameter as it might be cheaper.</db:para>
</db:section>
<db:section xml:id="QAccessibleEvent-1">
<db:title>QAccessibleEvent::QAccessibleEvent(QObject *<db:emphasis>object</db:emphasis>, QAccessible::Event <db:emphasis>type</db:emphasis>)</db:title>
<db:para>Constructs a <db:link xlink:href="qaccessibleevent.xml">QAccessibleEvent</db:link> to notify that <db:code role="parameter">object</db:code> has changed. The event <db:code role="parameter">type</db:code> describes what changed.</db:para>
</db:section>
<db:section xml:id="dtor.QAccessibleEvent">
<db:title>[virtual noexcept] QAccessibleEvent::~QAccessibleEvent()</db:title>
<db:para>Destroys the event.</db:para>
</db:section>
<db:section xml:id="accessibleInterface">
<db:title>[virtual] QAccessibleInterface *QAccessibleEvent::accessibleInterface() const</db:title>
<db:para>Returns the <db:link xlink:href="qaccessibleinterface.xml">QAccessibleInterface</db:link> associated with the event. The caller of this function takes ownership of the returned interface.</db:para>
</db:section>
<db:section xml:id="child">
<db:title>int QAccessibleEvent::child() const</db:title>
<db:para>Returns the child index.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaccessibleevent.xml#setChild">setChild</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="object">
<db:title>QObject *QAccessibleEvent::object() const</db:title>
<db:para>Returns the event object.</db:para>
</db:section>
<db:section xml:id="setChild">
<db:title>void QAccessibleEvent::setChild(int <db:emphasis>child</db:emphasis>)</db:title>
<db:para>Sets the child index to <db:code role="parameter">child</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qaccessibleevent.xml#child">child</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="type">
<db:title>QAccessible::Event QAccessibleEvent::type() const</db:title>
<db:para>Returns the event type.</db:para>
</db:section>
</db:section>
</db:article>
