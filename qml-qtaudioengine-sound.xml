<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Sound QML Type</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>Define a variety of samples and parameters to be used for <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link>.</db:para>
<db:para><db:emphasis role="bold">This type is under development and is subject to change.</db:emphasis></db:para>
<db:para>This type was introduced in Qt 5.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtAudioEngine 1.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-item.xml">Item</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Sound is part of <db:simplelist><db:member>multimedia_audioengine</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Preliminary</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para><db:emphasis role="bold">This type is under development and is subject to change.</db:emphasis></db:para>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Sound can be accessed through QtAudioEngine::AudioEngine::sounds with its unique name and must be defined inside <db:link xlink:href="qml-qtaudioengine-audioengine.xml">AudioEngine</db:link> or be added to it using <db:link xlink:href="qml-qtaudioengine-audioengine.xml#addSound-method">AudioEngine.addSound</db:link>() if <db:link xlink:href="qml-qtaudioengine-sound.xml">Sound</db:link> is created dynamically.</db:para>
<db:programlisting language="qml">Rectangle {
    color:&quot;white&quot;
    width: 300
    height: 500

    AudioEngine {
        id:audioengine

        AudioSample {
            name:&quot;explosion01&quot;
            source: &quot;explosion-01.wav&quot;
        }

        AudioSample {
            name:&quot;explosion02&quot;
            source: &quot;explosion-02.wav&quot;
        }

        Sound {
            name:&quot;explosion&quot;
            playType: Sound.Random
            PlayVariation {
                sample:&quot;explosion01&quot;
                minPitch: 0.8
                maxPitch: 1.1
            }
            PlayVariation {
                sample:&quot;explosion02&quot;
                minGain: 1.1
                maxGain: 1.5
            }
        }
    }
    MouseArea {
        anchors.fill: parent
        onPressed: {
            audioengine.sounds[&quot;explosion&quot;].play();
        }
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="attenuationModel-prop">
<db:title>attenuationModel : string</db:title>
<db:para>This property specifies which attenuation model this sound will apply.</db:para>
</db:section>
<db:section xml:id="category-prop">
<db:title>category : string</db:title>
<db:para>This property specifies which <db:link xlink:href="qml-qtaudioengine-audiocategory.xml">AudioCategory</db:link> this sound belongs to.</db:para>
</db:section>
<db:section xml:id="cone.innerAngle-prop">
<db:title>cone.innerAngle : real</db:title>
<db:para>This property holds the innerAngle for Sound definition. The range is [0, 360] degree. There is no directional attenuation within innerAngle.</db:para>
</db:section>
<db:section xml:id="cone.outerAngle-prop">
<db:title>cone.outerAngle : real</db:title>
<db:para>This property holds the outerAngle for Sound definition. The range is [0, 360] degree. All audio output from this sound will be attenuated by outerGain outside outerAngle.</db:para>
</db:section>
<db:section xml:id="cone.outerGain-prop">
<db:title>cone.outerGain : real</db:title>
<db:para>This property holds attenuation value for directional attenuation of this sound. The range is [0, 1]. All audio output from this sound will be attenuated by outerGain outside outerAngle.</db:para>
</db:section>
<db:section xml:id="name-prop">
<db:title>name : string</db:title>
<db:para>This property holds the name of Sound, must be unique among all sounds and only defined once.</db:para>
</db:section>
<db:section xml:id="playType-prop">
<db:title>playType : enumeration</db:title>
<db:para>This property holds the playType. It can be one of:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Random - randomly picks up a play variation when playback is triggered</db:para>
</db:listitem>
<db:listitem>
<db:para>Sequential - plays each variation in sequence when playback is triggered</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The default value is Random.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="addPlayVariation-method">
<db:title>addPlayVariation(PlayVariation <db:emphasis>playVariation</db:emphasis>)</db:title>
<db:para>Adds the given <db:code role="parameter">playVariation</db:code> to sound. This can be used when the <db:link xlink:href="qml-qtaudioengine-playvariation.xml">PlayVariation</db:link> is created dynamically:</db:para>
<db:programlisting language="qml">import QtAudioEngine 1.1

AudioEngine {
    id: engine

    Component.onCompleted: {
        var playVariation = Qt.createQmlObject('import QtAudioEngine 1.1; PlayVariation {}', engine);
        playVariation.sample = &quot;sample&quot;;
        playVariation.minPitch = 0.8
        playVariation.maxPitch = 1.1

        var sound = Qt.createQmlObject('import QtAudioEngine 1.1; Sound {}', engine);
        sound.name = &quot;example&quot;;
        sound.addPlayVariation(playVariation);
        engine.addSound(sound);
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="newInstance-method">
<db:title>QtAudioEngine::SoundInstance newInstance()</db:title>
<db:para>Returns a new <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link>.</db:para>
</db:section>
<db:section xml:id="play-method">
<db:title>play()</db:title>
<db:para>Creates a new <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link> and starts playing. Position, direction and velocity are all set to <db:code>&quot;0,0,0&quot;</db:code>.</db:para>
</db:section>
<db:section xml:id="play-method-1">
<db:title>play(<db:emphasis>gain</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link> and starts playing with the adjusted <db:code role="parameter">gain</db:code>. Position, direction and velocity are all set to <db:code>&quot;0,0,0&quot;</db:code>.</db:para>
</db:section>
<db:section xml:id="play-method-2">
<db:title>play(<db:emphasis>position</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link> and starts playing with specified <db:code role="parameter">position</db:code>. Direction and velocity are all set to <db:code>&quot;0,0,0&quot;</db:code>.</db:para>
</db:section>
<db:section xml:id="play-method-3">
<db:title>play(<db:emphasis>gain</db:emphasis>, <db:emphasis>pitch</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link> and starts playing with the adjusted <db:code role="parameter">gain</db:code> and <db:code role="parameter">pitch</db:code>. Position, direction and velocity are all set to <db:code>&quot;0,0,0&quot;</db:code>.</db:para>
</db:section>
<db:section xml:id="play-method-4">
<db:title>play(<db:emphasis>position</db:emphasis>, <db:emphasis>velocity</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link> and starts playing with specified <db:code role="parameter">position</db:code> and <db:code role="parameter">velocity</db:code>. Direction is set to <db:code>&quot;0,0,0&quot;</db:code>.</db:para>
</db:section>
<db:section xml:id="play-method-5">
<db:title>play(<db:emphasis>position</db:emphasis>, <db:emphasis>gain</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link> and starts playing with specified <db:code role="parameter">position</db:code> and adjusted <db:code role="parameter">gain</db:code>. Direction and velocity are all set to <db:code>&quot;0,0,0&quot;</db:code>.</db:para>
</db:section>
<db:section xml:id="play-method-6">
<db:title>play(<db:emphasis>position</db:emphasis>, <db:emphasis>velocity</db:emphasis>, <db:emphasis>direction</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link> and starts playing with specified <db:code role="parameter">position</db:code>, <db:code role="parameter">velocity</db:code> and <db:code role="parameter">direction</db:code>.</db:para>
</db:section>
<db:section xml:id="play-method-7">
<db:title>play(<db:emphasis>position</db:emphasis>, <db:emphasis>velocity</db:emphasis>, <db:emphasis>gain</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link> and starts playing with specified <db:code role="parameter">position</db:code>, <db:code role="parameter">velocity</db:code> and adjusted <db:code role="parameter">gain</db:code>. Direction is set to <db:code>&quot;0,0,0&quot;</db:code>.</db:para>
</db:section>
<db:section xml:id="play-method-8">
<db:title>play(<db:emphasis>position</db:emphasis>, <db:emphasis>gain</db:emphasis>, <db:emphasis>pitch</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link> and starts playing with specified <db:code role="parameter">position</db:code>, adjusted <db:code role="parameter">gain</db:code> and <db:code role="parameter">pitch</db:code>. Direction and velocity are all set to <db:code>&quot;0,0,0&quot;</db:code>.</db:para>
</db:section>
<db:section xml:id="play-method-9">
<db:title>play(<db:emphasis>position</db:emphasis>, <db:emphasis>velocity</db:emphasis>, <db:emphasis>direction</db:emphasis>, <db:emphasis>gain</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link> and starts playing with specified <db:code role="parameter">position</db:code>, <db:code role="parameter">velocity</db:code>, <db:code role="parameter">direction</db:code> and adjusted <db:code role="parameter">gain</db:code>.</db:para>
</db:section>
<db:section xml:id="play-method-10">
<db:title>play(<db:emphasis>position</db:emphasis>, <db:emphasis>velocity</db:emphasis>, <db:emphasis>gain</db:emphasis>, <db:emphasis>pitch</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link> and starts playing with specified <db:code role="parameter">position</db:code>, <db:code role="parameter">velocity</db:code>, adjusted <db:code role="parameter">gain</db:code> and <db:code role="parameter">pitch</db:code>. Direction is set to <db:code>&quot;0,0,0&quot;</db:code>.</db:para>
</db:section>
<db:section xml:id="play-method-11">
<db:title>play(<db:emphasis>position</db:emphasis>, <db:emphasis>velocity</db:emphasis>, <db:emphasis>direction</db:emphasis>, <db:emphasis>gain</db:emphasis>, <db:emphasis>pitch</db:emphasis>)</db:title>
<db:para>Creates a new <db:link xlink:href="qml-qtaudioengine-soundinstance.xml">SoundInstance</db:link> and starts playing with specified <db:code role="parameter">position</db:code>, <db:code role="parameter">velocity</db:code>, <db:code role="parameter">direction</db:code>, adjusted <db:code role="parameter">gain</db:code> and <db:code role="parameter">pitch</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
