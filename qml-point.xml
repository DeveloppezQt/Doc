<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>point QML Value Type</db:title>
<db:productname>QtQml</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt QML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>a value with x and y attributes.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The point type refers to a value with x and y attributes.</db:para>
<db:para>To create a point value, specify it as a &quot;x,y&quot; string:</db:para>
<db:programlisting language="qml">CustomObject { myPointProperty: &quot;0,20&quot; }
</db:programlisting>
<db:para>Or use the <db:link xlink:href="qml-qtqml-qt.xml#point-method">Qt.point</db:link>() function:</db:para>
<db:programlisting language="qml">CustomObject { myPointProperty: Qt.point(0, 20) }
</db:programlisting>
<db:para>When integrating with C++, note that any <db:link xlink:href="qpoint.xml">QPoint</db:link> or <db:link xlink:href="qpointf.xml">QPointF</db:link> value <db:link xlink:href="qtqml-cppintegration-data.xml">passed into QML from C++</db:link> is automatically converted into a point value. When a point value is passed to C++, it is automatically converted into a <db:link xlink:href="qpointf.xml">QPointF</db:link> value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtqml-typesystem-basictypes.xml">QML Basic Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:article>
