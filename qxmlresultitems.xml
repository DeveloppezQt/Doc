<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QXmlResultItems Class</db:title>
<db:productname>QtXmlPatterns</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt XML Patterns Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qxmlresultitems.xml">QXmlResultItems</db:link> class iterates through the results of evaluating an XQuery in <db:link xlink:href="qxmlquery.xml">QXmlQuery</db:link>.</db:para>
<db:para>This class was introduced in Qt 4.4.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QXmlResultItems</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += xmlpatterns</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QXmlResultItems is part of <db:simplelist><db:member>xml-tools</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qxmlresultitems.xml">QXmlResultItems</db:link> presents the evaluation of an associated query as a sequence of <db:link xlink:href="qxmlitem.xml">QXmlItems</db:link>. The sequence is traversed by repeatedly calling <db:link xlink:href="qxmlresultitems.xml#next">next</db:link>(), which actually produces the sequence by lazy evaluation of the query.</db:para>
<db:programlisting language="cpp">QXmlQuery query;
query.setQuery(&quot;&lt;e/&gt;, 1, 'two'&quot;);
QXmlResultItems result;

if (query.isValid()) {
    query.evaluateTo(&amp;result);
    QXmlItem item(result.next());
    while (!item.isNull()) {
        // use item
        item = result.next();
    }
    if (result.hasError()) {
        /* Runtime error! */
    }
}
</db:programlisting>
<db:para>An effect of letting <db:link xlink:href="qxmlresultitems.xml#next">next</db:link>() produce the sequence by lazy evaluation is that a query error can occur on any call to <db:link xlink:href="qxmlresultitems.xml#next">next</db:link>(). If an error occurs, both <db:link xlink:href="qxmlresultitems.xml#next">next</db:link>() and <db:link xlink:href="qxmlresultitems.xml#current">current</db:link>() will return the null <db:link xlink:href="qxmlitem.xml">QXmlItem</db:link>, and <db:link xlink:href="qxmlresultitems.xml#hasError">hasError</db:link>() will return true.</db:para>
<db:para><db:link xlink:href="qxmlresultitems.xml">QXmlResultItems</db:link> can be thought of as an &quot;iterator&quot; that traverses the sequence of query results once, in the forward direction. Each call to <db:link xlink:href="qxmlresultitems.xml#next">next</db:link>() advances the iterator to the next <db:link xlink:href="qxmlitem.xml">QXmlItem</db:link> in the sequence and returns it, and <db:link xlink:href="qxmlresultitems.xml#current">current</db:link>() always returns the <db:link xlink:href="qxmlitem.xml">QXmlItem</db:link> that <db:link xlink:href="qxmlresultitems.xml#next">next</db:link>() returned the last time it was called.</db:para>
<db:note>
<db:para>When using the <db:link xlink:href="qxmlresultitems.xml">QXmlResultItems</db:link> overload of <db:link xlink:href="qxmlquery.xml#evaluateTo">QXmlQuery::evaluateTo</db:link>() to execute a query, it is advisable to create a new instance of this class for each new set of results rather than reusing an old instance.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qxmlitem.xml#isNode">QXmlItem::isNode</db:link>()</db:member>
<db:member><db:link xlink:href="qxmlitem.xml#isAtomicValue">QXmlItem::isAtomicValue</db:link>()</db:member>
<db:member><db:link xlink:href="qxmlnodemodelindex.xml">QXmlNodeModelIndex</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QXmlResultItems">
<db:title>QXmlResultItems::QXmlResultItems()</db:title>
<db:para>Constructs an instance of <db:link xlink:href="qxmlresultitems.xml">QXmlResultItems</db:link>.</db:para>
</db:section>
<db:section xml:id="dtor.QXmlResultItems">
<db:title>[virtual noexcept] QXmlResultItems::~QXmlResultItems()</db:title>
<db:para>Destroys this instance of <db:link xlink:href="qxmlresultitems.xml">QXmlResultItems</db:link>.</db:para>
</db:section>
<db:section xml:id="current">
<db:title>QXmlItem QXmlResultItems::current() const</db:title>
<db:para>Returns the current item. The current item is the last item that was produced and returned by <db:link xlink:href="qxmlresultitems.xml#next">next</db:link>().</db:para>
<db:para>Returns a null <db:link xlink:href="qxmlitem.xml">QXmlItem</db:link> if there is no associated <db:link xlink:href="qxmlquery.xml">QXmlQuery</db:link>.</db:para>
</db:section>
<db:section xml:id="hasError">
<db:title>bool QXmlResultItems::hasError() const</db:title>
<db:para>If an error occurred during evaluation of the query, true is returned.</db:para>
<db:para>Returns false if query evaluation has been done.</db:para>
</db:section>
<db:section xml:id="next">
<db:title>QXmlItem QXmlResultItems::next()</db:title>
<db:para>Returns the next result in the sequence produced by lazy evaluation of the associated query. When the returned <db:link xlink:href="qxmlitem.xml">QXmlItem</db:link> is null, either the evaluation terminated normally without producing another result, or an error occurred. Call <db:link xlink:href="qxmlresultitems.xml#hasError">hasError</db:link>() to determine whether the null item was caused by normal termination or by an error.</db:para>
<db:para>Returns a null <db:link xlink:href="qxmlitem.xml">QXmlItem</db:link> if there is no associated <db:link xlink:href="qxmlquery.xml">QXmlQuery</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
