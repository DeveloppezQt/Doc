<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt SCXML C++ Classes</db:title>
<db:productname>QtScxml</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt SCXML Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides classes to create and use state machines from SCXML files.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Provides classes to create and use state machines from SCXML files.</db:para>
<db:section xml:id="namespaces">
<db:title>Namespaces</db:title>
<db:variablelist role="namespaces">
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlexecutablecontent.xml" xlink:role="namespace">QScxmlExecutableContent</db:link></db:term>
<db:listitem>
<db:para>The QScxmlExecutableContent namespace contains various types used to interpret executable content in state machines.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlcompiler.xml" xlink:role="class">QScxmlCompiler</db:link></db:term>
<db:listitem>
<db:para>The QScxmlCompiler class is a compiler for SCXML files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlcompiler-loader.xml" xlink:role="class">QScxmlCompiler::Loader</db:link></db:term>
<db:listitem>
<db:para>The Loader class is a URI resolver and resource loader for an SCXML compiler.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlcppdatamodel.xml" xlink:role="class">QScxmlCppDataModel</db:link></db:term>
<db:listitem>
<db:para>The QScxmlCppDataModel class is a C++ data model for a Qt SCXML state machine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmldatamodel.xml" xlink:role="class">QScxmlDataModel</db:link></db:term>
<db:listitem>
<db:para>The QScxmlDataModel class is the data model base class for a Qt SCXML state machine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmldatamodel-foreachloopbody.xml" xlink:role="class">QScxmlDataModel::ForeachLoopBody</db:link></db:term>
<db:listitem>
<db:para>The ForeachLoopBody class represents a function to be executed on each iteration of an SCXML foreach loop.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmldynamicscxmlservicefactory.xml" xlink:role="class">QScxmlDynamicScxmlServiceFactory</db:link></db:term>
<db:listitem>
<db:para>The QScxmlDynamicScxmlServiceFactory class creates SCXML service instances from documents loaded at runtime.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlerror.xml" xlink:role="class">QScxmlError</db:link></db:term>
<db:listitem>
<db:para>The QScxmlError class describes the errors returned by the Qt SCXML state machine when parsing an SCXML file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlevent.xml" xlink:role="class">QScxmlEvent</db:link></db:term>
<db:listitem>
<db:para>The QScxmlEvent class is an event for a Qt SCXML state machine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlexecutablecontent-assignmentinfo.xml" xlink:role="class">QScxmlExecutableContent::AssignmentInfo</db:link></db:term>
<db:listitem>
<db:para>The AssingmentInfo class represents a data assignment.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlexecutablecontent-evaluatorinfo.xml" xlink:role="class">QScxmlExecutableContent::EvaluatorInfo</db:link></db:term>
<db:listitem>
<db:para>The EvaluatorInfo class represents a unit of executable content.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlexecutablecontent-foreachinfo.xml" xlink:role="class">QScxmlExecutableContent::ForeachInfo</db:link></db:term>
<db:listitem>
<db:para>The ForeachInfo class represents a foreach construct.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlexecutablecontent-invokeinfo.xml" xlink:role="class">QScxmlExecutableContent::InvokeInfo</db:link></db:term>
<db:listitem>
<db:para>The InvokeInfo class represents a service invocation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlexecutablecontent-parameterinfo.xml" xlink:role="class">QScxmlExecutableContent::ParameterInfo</db:link></db:term>
<db:listitem>
<db:para>The ParameterInfo class represents a parameter to a service invocation.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlinvokableservice.xml" xlink:role="class">QScxmlInvokableService</db:link></db:term>
<db:listitem>
<db:para>The QScxmlInvokableService class is the base class for services called from state machines.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlinvokableservicefactory.xml" xlink:role="class">QScxmlInvokableServiceFactory</db:link></db:term>
<db:listitem>
<db:para>The QScxmlInvokableServiceFactory class creates invokable service instances.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlnulldatamodel.xml" xlink:role="class">QScxmlNullDataModel</db:link></db:term>
<db:listitem>
<db:para>The QScxmlNullDataModel class is the null data model for a Qt SCXML stateMachine.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlstatemachine.xml" xlink:role="class">QScxmlStateMachine</db:link></db:term>
<db:listitem>
<db:para>The QScxmlStateMachine class provides an interface to the state machines created from SCXML files.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmlstaticscxmlservicefactory.xml" xlink:role="class">QScxmlStaticScxmlServiceFactory</db:link></db:term>
<db:listitem>
<db:para>The QScxmlStaticScxmlServiceFactory class creates SCXML service instances from precompiled documents.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qscxmltabledata.xml" xlink:role="class">QScxmlTableData</db:link></db:term>
<db:listitem>
<db:para>The QScxmlTableData class is used by compiled state machines.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>To use the module with cmake, use the <db:code>find_package()</db:code> command to locate the needed module components in the <db:code>Qt6</db:code> package:</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS Scxml)
target_link_libraries(mytarget PRIVATE Qt6::Scxml)
</db:programlisting>
<db:para>To configure the module for building with qmake, add the module as a value of the <db:code>QT</db:code> variable in the project's .pro file:</db:para>
<db:programlisting language="cpp">QT += scxml
</db:programlisting>
<db:para>For more information, see <db:link xlink:href="qtscxml-instantiating-state-machines.xml">Instantiating State Machines</db:link>.</db:para>
</db:section>
</db:article>
