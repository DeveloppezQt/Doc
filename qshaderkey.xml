<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QShaderKey Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Specifies the shading language, the version with flags, and the variant.</db:para>
<db:para>This class was introduced in Qt 6.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QShaderKey</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A default constructed <db:link xlink:href="qshaderkey.xml">QShaderKey</db:link> has source set to SpirvShader and sourceVersion set to 100. sourceVariant defaults to StandardShader.</db:para>
<db:note>
<db:para>This is a RHI API with limited compatibility guarantees, see <db:link xlink:href="qshader.xml">QShader</db:link> for details.</db:para>
</db:note>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QShaderKey">
<db:title>QShaderKey::QShaderKey(QShader::Source <db:emphasis>s</db:emphasis>, const QShaderVersion &amp;<db:emphasis>sver</db:emphasis>, QShader::Variant <db:emphasis>svar</db:emphasis> = QShader::StandardShader)</db:title>
<db:para>Constructs a new <db:link xlink:href="qshaderkey.xml">QShaderKey</db:link> with shader type <db:code role="parameter">s</db:code>, version <db:code role="parameter">sver</db:code>, and variant <db:code role="parameter">svar</db:code>.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-lt">
<db:title>[noexcept] bool operator&lt;(const QShaderKey &amp;<db:emphasis>lhs</db:emphasis>, const QShaderKey &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:para>Returns true if <db:code role="parameter">lhs</db:code> is smaller than <db:code role="parameter">rhs</db:code>.</db:para>
<db:para>Establishes a sorting order between the two keys <db:code role="parameter">lhs</db:code> and <db:code role="parameter">rhs</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq-10">
<db:title>[noexcept] bool operator==(const QShaderKey &amp;<db:emphasis>lhs</db:emphasis>, const QShaderKey &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:para>Returns <db:code>true</db:code> if the two <db:link xlink:href="qshaderkey.xml">QShaderKey</db:link> objects <db:code role="parameter">lhs</db:code> and <db:code role="parameter">rhs</db:code> are equal.</db:para>
</db:section>
</db:section>
</db:article>
