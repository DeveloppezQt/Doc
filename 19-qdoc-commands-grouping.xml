<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>Grouping Things</db:title>
<db:productname>QDoc</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>QDoc Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="18-qdoc-commands-relating.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Relating Things"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="20-qdoc-commands-namingthings.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="Naming Things"/></db:extendedlink>
<db:abstract>
<db:para>QDoc Manual.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>QDoc Manual</db:para>
<db:para>The grouping commands relate classes to defined groups and modules. The groups are used when generating lists of related classes in the documentation, while the modules are elements of Qt's structure.</db:para>
<db:section xml:id="commands">
<db:title>Commands</db:title>
<db:anchor xml:id="mainclass-command"/>
<db:section xml:id="mainclass">
<db:title>\mainclass</db:title>
<db:para>The \mainclass command relates the documented class to a group called mainclasses.</db:para>
<db:para>The command must stand on its own line.</db:para>
<db:programlisting language="cpp">/ *!
    \class QWidget qwidget.h
    \brief The QWidget class is the base class of
    all user interface objects.

    \mainclass

    ...
* /
</db:programlisting>
<db:para>This will include the <db:link xlink:href="qwidget.xml">QWidget</db:link> class in the <db:emphasis>mainclasses</db:emphasis> group, which means, for example, that the class will appear on the list created by calling the <db:link xlink:href="12-0-qdoc-commands-miscellaneous.xml#generatelist">\generatelist</db:link> command with the <db:code>mainclasses</db:code> argument:</db:para>
<db:para><db:link xlink:href="http://doc.qt.digia.com/4.0/mainclasses.html">http://doc.qt.digia.com/4.0/mainclasses.html</db:link></db:para>
<db:note>
<db:para>The Qt documentation no longer includes the <db:emphasis>mainclasses</db:emphasis> page.</db:para>
</db:note>
<db:para>See also <db:link xlink:href="12-0-qdoc-commands-miscellaneous.xml#generatelist">\generatelist</db:link>.</db:para>
<db:anchor xml:id="ingroup-command"/>
</db:section>
<db:section xml:id="ingroup">
<db:title>\ingroup</db:title>
<db:para>The \ingroup command indicates that the given overview or documented class belongs to a certain group of related docmentation.</db:para>
<db:para>A class or overview may belong to many groups.</db:para>
<db:para>The \ingroup command's argument is a group name, but note that the command considers the rest of the line as part of its argument. Make sure that the group name is followed by a linebreak.</db:para>
<db:programlisting language="cpp">/ *!
    \class QDir
    \brief The QDir class provides access to directory
           structures and their contents.

    \ingroup io
    ...
* /
</db:programlisting>
<db:para>This will include the <db:link xlink:href="qdir.xml">QDir</db:link> class in the <db:code>io</db:code> group, which means, for example, that <db:link xlink:href="qdir.xml">QDir</db:link> will appear on the list created by calling the <db:link xlink:href="13-qdoc-commands-topics.xml#group">\group</db:link> command with the <db:code>io</db:code> argument.</db:para>
<db:para>To list overviews that are related to a certain group, you must generate the list explicitly using the <db:link xlink:href="12-0-qdoc-commands-miscellaneous.xml#generatelist">\generatelist</db:link> command with the <db:code>related</db:code> argument.</db:para>
<db:para>See also <db:link xlink:href="13-qdoc-commands-topics.xml#group">\group</db:link>.</db:para>
<db:anchor xml:id="inmodule-command"/>
</db:section>
<db:section xml:id="inmodule">
<db:title>\inmodule</db:title>
<db:para>The \inmodule command relates a class to the module specified by the command's argument.</db:para>
<db:para>For the basic classes in Qt, a class's module is determined by its location, namely its directory. However, for extensions like ActiveQt and Qt Designer, a class must be related to a module explicitly.</db:para>
<db:para>The command's argument is a module name, but note that the command considers the rest of the line as part of its argument. Make sure that the module name is followed by a linebreak.</db:para>
<db:programlisting language="cpp">/*!
    \class QDesignerTaskMenuExtension
    \inmodule QtDesigner
* /
</db:programlisting>
<db:para>This ensures that the QDesignerTaskMenuExtension class is included in the Qt Designer module, which means, for example, that the class will appear on the list created by calling the <db:link xlink:href="12-0-qdoc-commands-miscellaneous.xml#generatelist">\generatelist</db:link> command with the <db:code>{classesbymodule QtDesigner}</db:code> argument.</db:para>
<db:para>See also <db:link xlink:href="13-qdoc-commands-topics.xml#module">\module</db:link> and <db:link xlink:href="12-0-qdoc-commands-miscellaneous.xml#generatelist">\generatelist</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
