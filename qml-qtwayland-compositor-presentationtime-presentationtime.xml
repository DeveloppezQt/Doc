<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>PresentationTime QML Type</db:title>
<db:productname>QtWaylandCompositor</db:productname>
<db:edition>Qt Wayland Compositor | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Wayland Compositor Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides tracking the timing when a frame is presented on screen.</db:para>
<db:para>This type was introduced in Qt 6.3.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtWayland.Compositor.PresentationTime</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.3</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtwayland-compositor-presentationtime-presentationtime.xml">PresentationTime</db:link> extension provides a way to track rendering timing for a surface. Client can request feedbacks associated with a surface, then compositor send events for the feedback with the time when the surface is presented on-screen.</db:para>
<db:para><db:link xlink:href="qml-qtwayland-compositor-presentationtime-presentationtime.xml">PresentationTime</db:link> corresponds to the Wayland <db:code>wp_presentation</db:code> interface.</db:para>
<db:para>To provide the functionality of the presentationtime extension in a compositor, create an instance of the <db:link xlink:href="qml-qtwayland-compositor-presentationtime-presentationtime.xml">PresentationTime</db:link> component and add it to the list of extensions supported by the compositor:</db:para>
<db:para>Then, call <db:link xlink:href="qml-qtwayland-compositor-presentationtime-presentationtime.xml#sendFeedback-method">sendFeedback</db:link>() when a surface is presented on screen. Usually, the timing can be obtained from drm page flip event.</db:para>
<db:programlisting language="qml">import QtWayland.Compositor.PresentationTime

WaylandCompositor {
    PresentationTime {
        id: presentationTime
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="sendFeedback-method">
<db:title>void sendFeedback(Window <db:emphasis>window</db:emphasis>, int <db:emphasis>sequence</db:emphasis>, int <db:emphasis>sec</db:emphasis>, int <db:emphasis>nsec</db:emphasis>)</db:title>
<db:para>Interface to notify that a frame is presented on screen using <db:code role="parameter">window</db:code>. If your platform supports DRM events, <db:code>page_flip_handler</db:code> is the proper timing to send it. The <db:code role="parameter">sequence</db:code> is the refresh counter. <db:code role="parameter">sec</db:code> and <db:code role="parameter">nsec</db:code> hold the seconds and nanoseconds parts of the presentation timestamp, respectively.</db:para>
</db:section>
</db:section>
</db:article>
