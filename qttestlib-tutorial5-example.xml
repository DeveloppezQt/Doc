<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Chapter 5: Writing a Benchmark</db:title>
<db:productname>QtTestLib</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Test Reference Documentation</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="qttestlib-tutorial4-example.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Chapter 4"/></db:extendedlink>
<db:abstract>
<db:para>How to write a benchmark.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>{Qt Test Tutorial}{Contents}</db:para>
<db:para>In this final chapter we will demonstrate how to write benchmarks using Qt Test.</db:para>
<db:section xml:id="writing-a-benchmark">
<db:title>Writing a Benchmark</db:title>
<db:para>To create a benchmark we extend a test function with a QBENCHMARK macro. A benchmark test function will then typically consist of setup code and a QBENCHMARK macro that contains the code to be measured. This test function benchmarks <db:link xlink:href="qstring.xml#localeAwareCompare">QString::localeAwareCompare</db:link>().</db:para>
<db:programlisting language="cpp">void TestBenchmark::simple()
{
    QString str1 = QLatin1String(&quot;This is a test string&quot;);
    QString str2 = QLatin1String(&quot;This is a test string&quot;);

    QCOMPARE(str1.localeAwareCompare(str2), 0);

    QBENCHMARK {
        str1.localeAwareCompare(str2);
    }
}
</db:programlisting>
<db:para>Setup can be done at the beginning of the function, the clock is not running at this point. The code inside the QBENCHMARK macro will be measured, and possibly repeated several times in order to get an accurate measurement.</db:para>
<db:para>Several <db:link xlink:href="qtest-overview.xml#testlib-benchmarking-measurement">back-ends</db:link> are available and can be selected on the command line.</db:para>
</db:section>
<db:section xml:id="data-functions">
<db:title>Data Functions</db:title>
<db:para>Data functions are useful for creating benchmarks that compare multiple data inputs, for example locale aware compare against standard compare.</db:para>
<db:programlisting language="cpp">void TestBenchmark::multiple_data()
{
    QTest::addColumn&lt;bool&gt;(&quot;useLocaleCompare&quot;);
    QTest::newRow(&quot;locale aware compare&quot;) &lt;&lt; true;
    QTest::newRow(&quot;standard compare&quot;) &lt;&lt; false;
}
</db:programlisting>
<db:para>The test function then uses the data to determine what to benchmark.</db:para>
<db:programlisting language="cpp">void TestBenchmark::multiple()
{
    QFETCH(bool, useLocaleCompare);
    QString str1 = QLatin1String(&quot;This is a test string&quot;);
    QString str2 = QLatin1String(&quot;This is a test string&quot;);

    int result;
    if (useLocaleCompare) {
        QBENCHMARK {
            result = str1.localeAwareCompare(str2);
        }
    } else {
        QBENCHMARK {
            result = (str1 == str2);
        }
    }
    Q_UNUSED(result);
}
</db:programlisting>
<db:para>The &quot;if (useLocaleCompare)&quot; switch is placed outside the QBENCHMARK macro to avoid measuring its overhead. Each benchmark test function can have one active QBENCHMARK macro.</db:para>
</db:section>
<db:section xml:id="external-tools">
<db:title>External Tools</db:title>
<db:para>Tools for handling and visualizing test data are available as part of the <db:link xlink:href="https://code.qt.io/cgit/%7bnon-gerrit%7d/qt-labs/qtestlib-tools.git/">qtestlib-tools</db:link> project. These include a tool for comparing performance data obtained from test runs and a utility to generate Web-based graphs of performance data.</db:para>
<db:para>See the <db:link xlink:href="http://blog.qt.io/blog/2008/12/05/qtestlib-now-with-nice-graphs-pointing-upwards/">qtestlib-tools announcement</db:link> for more information on these tools and a simple graphing example.</db:para>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="tutorial5/benchmarking.cpp">tutorial5/benchmarking.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="tutorial5/tutorial5.pro">tutorial5/tutorial5.pro</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
