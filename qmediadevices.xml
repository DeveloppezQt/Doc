<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QMediaDevices Class</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qmediadevices.xml">QMediaDevices</db:link> class provides information about available multimedia input and output devices.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QMediaDevices</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Multimedia)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Multimedia)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += multimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qtmultimedia-mediadevices.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QMediaDevices is part of <db:simplelist><db:member>multimedia</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qmediadevices.xml">QMediaDevices</db:link> class provides information about the available multimedia devices and the system defaults. It monitors the following three groups:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Audio input devices (Microphones)</db:para>
</db:listitem>
<db:listitem>
<db:para>Audio output devices (Speakers, Headsets)</db:para>
</db:listitem>
<db:listitem>
<db:para>Video input devices (Cameras)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para><db:link xlink:href="qmediadevices.xml">QMediaDevices</db:link> provides a separate list for each device group. If it detects that a new device has been connected to the system or an attached device has been disconnected from the system, it will update the corresponding device list and emit a signal notifying about the change.</db:para>
<db:para>The <db:link xlink:href="qmediadevices.xml#audioInputs-prop">QMediaDevices::audioInputs</db:link> and <db:link xlink:href="qmediadevices.xml#audioOutputs-prop">QMediaDevices::audioOutputs</db:link> functions can be used to enumerate all microphones and speakers/headsets on the system. This example first gets a list of all connected microphones, and then prints their identifier, description, and if it is the default device or not.</db:para>
<db:programlisting language="cpp">const QList&amp;lt;QAudioDevice&amp;gt; audioDevices = QMediaDevices::audioInputs();
for (const QAudioDevice &amp;amp;device : audioDevices)
{
    out &amp;lt;&amp;lt; &quot;ID: &quot; &amp;lt;&amp;lt; device.id() &amp;lt;&amp;lt; Qt::endl;
    out &amp;lt;&amp;lt; &quot;Description: &quot; &amp;lt;&amp;lt; device.description() &amp;lt;&amp;lt; Qt::endl;
    out &amp;lt;&amp;lt; &quot;Is default: &quot; &amp;lt;&amp;lt; (device.isDefault() ? &quot;Yes&quot; : &quot;No&quot;) &amp;lt;&amp;lt; Qt::endl;
}
</db:programlisting>
<db:para>Similarly, the <db:link xlink:href="qmediadevices.xml#videoInputs-prop">QMediaDevices::videoInputs</db:link> will return a list of all connected cameras. In this example we list all connected cameras and their identifier, description, and if it is the default camera or not.</db:para>
<db:programlisting language="cpp">const QList&amp;lt;QCameraDevice&amp;gt; videoDevices = QMediaDevices::videoInputs();
for (const QCameraDevice &amp;amp;device : videoDevices)
{
    out &amp;lt;&amp;lt; &quot;ID: &quot; &amp;lt;&amp;lt; device.id() &amp;lt;&amp;lt; Qt::endl;
    out &amp;lt;&amp;lt; &quot;Description: &quot; &amp;lt;&amp;lt; device.description() &amp;lt;&amp;lt; Qt::endl;
    out &amp;lt;&amp;lt; &quot;Is default: &quot; &amp;lt;&amp;lt; (device.isDefault() ? &quot;Yes&quot; : &quot;No&quot;) &amp;lt;&amp;lt; Qt::endl;
}
</db:programlisting>
<db:para><db:link xlink:href="qmediadevices.xml">QMediaDevices</db:link> monitors the system defaults for each device group. It will notify about any changes done through the system settings. For example, if the user selects a new default audio output in the system settings, <db:link xlink:href="qmediadevices.xml">QMediaDevices</db:link> will update the default audio output accordingly and emit a signal. If the system does not provide a default for a camera or an audio input, <db:link xlink:href="qmediadevices.xml">QMediaDevices</db:link> will select the first device from the list as the default device.</db:para>
<db:para>While using the default input and output devices is often sufficient for playing back or recording multimedia, there is often a need to explicitly select the device to be used.</db:para>
<db:para><db:link xlink:href="qmediadevices.xml">QMediaDevices</db:link> is a singleton object and all getters are thread-safe.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="audioInputs-prop">
<db:title>[read-only] audioInputs : const QList&lt;QAudioDevice&gt;</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QList&lt;QAudioDevice&gt;</db:type>
<db:varname>audioInputs</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">audioInputs</db:synopsisinfo>
<db:synopsisinfo role="notifier">audioInputsChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns a list of available audio input devices on the system.</db:para>
<db:para>Those devices are usually microphones. Devices can be either built-in, or connected through for example USB or Bluetooth.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qlist.xml">QList</db:link></db:type>&lt;<db:type><db:link xlink:href="qaudiodevice.xml">QAudioDevice</db:link></db:type>&gt; <db:emphasis role="bold">audioInputs</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qmediadevices.xml#audioInputsChanged">audioInputsChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="audioOutputs-prop">
<db:title>[read-only] audioOutputs : const QList&lt;QAudioDevice&gt;</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QList&lt;QAudioDevice&gt;</db:type>
<db:varname>audioOutputs</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">audioOutputs</db:synopsisinfo>
<db:synopsisinfo role="notifier">audioOutputsChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns a list of available audio output devices on the system.</db:para>
<db:para>Those devices are usually loudspeakers or head sets. Devices can be either built-in, or connected through for example USB or Bluetooth.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qlist.xml">QList</db:link></db:type>&lt;<db:type><db:link xlink:href="qaudiodevice.xml">QAudioDevice</db:link></db:type>&gt; <db:emphasis role="bold">audioOutputs</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qmediadevices.xml#audioOutputsChanged">audioOutputsChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="defaultAudioInput-prop">
<db:title>[read-only] defaultAudioInput : const QAudioDevice</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QAudioDevice</db:type>
<db:varname>defaultAudioInput</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">defaultAudioInput</db:synopsisinfo>
<db:synopsisinfo role="notifier">audioInputsChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns the default audio input device.</db:para>
<db:para>The default device can change during the runtime of the application. The <db:link xlink:href="qmediadevices.xml#audioInputsChanged">audioInputsChanged</db:link>() signal is emitted in this case.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qaudiodevice.xml">QAudioDevice</db:link></db:type> <db:emphasis role="bold">defaultAudioInput</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qmediadevices.xml#audioInputsChanged">audioInputsChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="defaultAudioOutput-prop">
<db:title>[read-only] defaultAudioOutput : const QAudioDevice</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QAudioDevice</db:type>
<db:varname>defaultAudioOutput</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">defaultAudioOutput</db:synopsisinfo>
<db:synopsisinfo role="notifier">audioOutputsChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns the default audio output device.</db:para>
<db:para>The default device can change during the runtime of the application. The <db:link xlink:href="qmediadevices.xml#audioOutputsChanged">audioOutputsChanged</db:link>() signal is emitted in this case.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qaudiodevice.xml">QAudioDevice</db:link></db:type> <db:emphasis role="bold">defaultAudioOutput</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qmediadevices.xml#audioOutputsChanged">audioOutputsChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="defaultVideoInput-prop">
<db:title>[read-only] defaultVideoInput : const QCameraDevice</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QCameraDevice</db:type>
<db:varname>defaultVideoInput</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">defaultVideoInput</db:synopsisinfo>
<db:synopsisinfo role="notifier">videoInputsChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns the default camera on the system.</db:para>
<db:note>
<db:para>The returned object should be checked using isNull() before being used, in case there is no default camera or no cameras at all.</db:para>
</db:note>
<db:para>The default device can change during the runtime of the application. The <db:link xlink:href="qmediadevices.xml#videoInputsChanged">videoInputsChanged</db:link>() signal is emitted in that case.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qcameradevice.xml">QCameraDevice</db:link></db:type> <db:emphasis role="bold">defaultVideoInput</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qmediadevices.xml#videoInputsChanged">videoInputsChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediadevices.xml#videoInputs-prop">videoInputs</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="videoInputs-prop">
<db:title>[read-only] videoInputs : const QList&lt;QCameraDevice&gt;</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QList&lt;QCameraDevice&gt;</db:type>
<db:varname>videoInputs</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">videoInputs</db:synopsisinfo>
<db:synopsisinfo role="notifier">videoInputsChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns a list of available cameras on the system.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qlist.xml">QList</db:link></db:type>&lt;<db:type><db:link xlink:href="qcameradevice.xml">QCameraDevice</db:link></db:type>&gt; <db:emphasis role="bold">videoInputs</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qmediadevices.xml#videoInputsChanged">videoInputsChanged</db:link></db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
</db:article>
