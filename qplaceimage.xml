<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QPlaceImage Class</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qplaceimage.xml">QPlaceImage</db:link> class represents a reference to an image.</db:para>
<db:para>This class was introduced in Qt 5.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPlaceImage</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += location</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qplacecontent.xml" xlink:role="class">QPlaceContent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QPlaceImage is part of <db:simplelist><db:member>QtLocation-places</db:member><db:member>QtLocation-places-data</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Each <db:link xlink:href="qplaceimage.xml">QPlaceImage</db:link> represents a set of metadata about an image such as it's url, identifier and MIME type. These are properties in addition to those provided by <db:link xlink:href="qplacecontent.xml">QPlaceContent</db:link>.</db:para>
<db:para>Note: The Places API only supports images as 'retrieve-only' objects. Submitting images to a provider is not a supported use case.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplacecontent.xml">QPlaceContent</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QPlaceImage">
<db:title>QPlaceImage::QPlaceImage()</db:title>
<db:para>Constructs an new <db:link xlink:href="qplaceimage.xml">QPlaceImage</db:link>.</db:para>
</db:section>
<db:section xml:id="QPlaceImage-1">
<db:title>QPlaceImage::QPlaceImage(const QPlaceContent &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code> if possible, otherwise constructs a default image.</db:para>
</db:section>
<db:section xml:id="dtor.QPlaceImage">
<db:title>[virtual noexcept] QPlaceImage::~QPlaceImage()</db:title>
<db:para>Destructor.</db:para>
</db:section>
<db:section xml:id="imageId">
<db:title>QString QPlaceImage::imageId() const</db:title>
<db:para>Returns the image's identifier.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceimage.xml#setImageId">setImageId</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mimeType">
<db:title>QString QPlaceImage::mimeType() const</db:title>
<db:para>Returns the image's MIME type.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceimage.xml#setMimeType">setMimeType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setImageId">
<db:title>void QPlaceImage::setImageId(const QString &amp;<db:emphasis>identifier</db:emphasis>)</db:title>
<db:para>Sets image's <db:code role="parameter">identifier</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceimage.xml#imageId">imageId</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setMimeType">
<db:title>void QPlaceImage::setMimeType(const QString &amp;<db:emphasis>type</db:emphasis>)</db:title>
<db:para>Sets image's MIME <db:code role="parameter">type</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceimage.xml#mimeType">mimeType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setUrl">
<db:title>void QPlaceImage::setUrl(const QUrl &amp;<db:emphasis>url</db:emphasis>)</db:title>
<db:para>Sets the image's <db:code role="parameter">url</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceimage.xml#url">url</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="url">
<db:title>QUrl QPlaceImage::url() const</db:title>
<db:para>Returns the image's url.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qplaceimage.xml#setUrl">setUrl</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
