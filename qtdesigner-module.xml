<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Designer C++ Classes</db:title>
<db:productname>QtDesigner</db:productname>
<db:edition>Qt 5.13.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Designer Manual</db:titleabbrev>
<db:abstract>
<db:para>Provides classes to create your own custom widget plugins for Qt Designer and classes to access Qt Designer components.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Provides classes to create your own custom widget plugins for Qt Designer and classes to access Qt Designer components.</db:para>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:variablelist role="classes">
<db:varlistentry>
<db:term><db:link xlink:href="qabstractextensionfactory.xml" xlink:role="class">QAbstractExtensionFactory</db:link></db:term>
<db:listitem>
<db:para>The QAbstractExtensionFactory class provides an interface for extension factories in Qt Designer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qabstractextensionmanager.xml" xlink:role="class">QAbstractExtensionManager</db:link></db:term>
<db:listitem>
<db:para>The QAbstractExtensionManager class provides an interface for extension managers in Qt Designer.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignercontainerextension.xml" xlink:role="class">QDesignerContainerExtension</db:link></db:term>
<db:listitem>
<db:para>The QDesignerContainerExtension class allows you to add pages to a custom multi-page container in Qt Designer's workspace.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignercustomwidgetcollectioninterface.xml" xlink:role="class">QDesignerCustomWidgetCollectionInterface</db:link></db:term>
<db:listitem>
<db:para>The QDesignerCustomWidgetCollectionInterface class allows you to include several custom widgets in one single library.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignercustomwidgetinterface.xml" xlink:role="class">QDesignerCustomWidgetInterface</db:link></db:term>
<db:listitem>
<db:para>The QDesignerCustomWidgetInterface class enables Qt Designer to access and construct custom widgets.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignerdynamicpropertysheetextension.xml" xlink:role="class">QDesignerDynamicPropertySheetExtension</db:link></db:term>
<db:listitem>
<db:para>The QDesignerDynamicPropertySheetExtension class allows you to manipulate a widget's dynamic properties in Qt Designer's property editor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignermembersheetextension.xml" xlink:role="class">QDesignerMemberSheetExtension</db:link></db:term>
<db:listitem>
<db:para>The QDesignerMemberSheetExtension class allows you to manipulate a widget's member functions which is displayed when configuring connections using Qt Designer's mode for editing signals and slots.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignerpropertysheetextension.xml" xlink:role="class">QDesignerPropertySheetExtension</db:link></db:term>
<db:listitem>
<db:para>The QDesignerPropertySheetExtension class allows you to manipulate a widget's properties which is displayed in Qt Designer's property editor.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdesignertaskmenuextension.xml" xlink:role="class">QDesignerTaskMenuExtension</db:link></db:term>
<db:listitem>
<db:para>The QDesignerTaskMenuExtension class allows you to add custom menu entries to Qt Designer's task menu.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:section>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>In addition, the QFormBuilder class provides the possibility of constructing user interfaces from UI files at run-time.</db:para>
<db:para>To include the definitions of the module classes, use the following directive:</db:para>
<db:programlisting language="cpp">#include &amp;lt;QtDesigner&amp;gt;
</db:programlisting>
<db:para>To link against the module, add this line to your <db:code>qmake</db:code> .pro file:</db:para>
<db:programlisting language="cpp">CONFIG += designer
</db:programlisting>
</db:section>
</db:article>
