<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>InstanceList QML Type</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Allows manually specifying instancing in QML.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick3D</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Instancing</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtquick3d-instancelist.xml">InstanceList</db:link> type makes it possible to define an instance table manually in QML.</db:para>
<db:para>The following example creates an instance table with two items:</db:para>
<db:programlisting language="qml">InstanceList {
    id: manualInstancing
    instances: [
        InstanceListEntry {
            position: Qt.vector3d(0, 0, -60)
            eulerRotation: Qt.vector3d(-10, 0, 30)
            color: &quot;red&quot;
        },
        InstanceListEntry {
            position: Qt.vector3d(50, 10, 100)
            eulerRotation: Qt.vector3d(0, 180, 0)
            color: &quot;green&quot;
        }
    ]
}
</db:programlisting>
<db:para>Each <db:link xlink:href="qml-qtquick3d-instancelistentry.xml">InstanceListEntry</db:link> is an object that can have property bindings and animations. This gives great flexibility, but also causes memory overhead. Therefore, it is not recommended to use <db:link xlink:href="qml-qtquick3d-instancelist.xml">InstanceList</db:link> for procedurally generated tables containing thousands (or millions) of instances. Also, any property change to an entry will cause the entire instance table to be recalculated and uploaded to the GPU.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-helpers-randominstancing.xml">RandomInstancing</db:link></db:member>
<db:member><db:link xlink:href="qquick3dinstancing.xml">QQuick3DInstancing</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="instanceCount-prop">
<db:title>[since 6.3] instanceCount : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>instanceCount</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This read-only property contains the number of instances in the list.</db:para>
<db:para>This property was introduced in Qt 6.3.</db:para>
</db:section>
<db:section xml:id="instances-prop">
<db:title>instances : List&lt;QtQuick3D::InstanceListEntry&gt;</db:title>
<db:fieldsynopsis>
<db:type>List&lt;QtQuick3D::InstanceListEntry&gt;</db:type>
<db:varname>instances</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property contains the list of instance definitions. Modifying this list, or any of its elements, will cause the instance table to be updated.</db:para>
</db:section>
</db:section>
</db:article>
