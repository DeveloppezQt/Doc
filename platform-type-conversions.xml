<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Type Conversions</db:title>
<db:productname>QtPlatformIntegration</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Integrating Qt with the native platform</db:titleabbrev>
<db:abstract>
<db:para>Integrating Qt with the native platform.</db:para></db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="details"/>
<db:para>Many of Qt's basic data types, such as <db:link xlink:href="qstring.xml">QString</db:link>, <db:link xlink:href="qpoint.xml">QPoint</db:link>, or <db:link xlink:href="qimage.xml">QImage</db:link>, provide conversions to and from the native equivalent types.</db:para>
<db:para>The following list enumerates all of the available type conversions:</db:para>
<db:variablelist role="members">
<db:varlistentry>
<db:term><db:link xlink:href="qbytearray.xml#fromCFData" xlink:role="function">QByteArray::fromCFData()</db:link></db:term>
<db:listitem>
<db:para>Constructs a new QByteArray containing a copy of the CFData data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearray.xml#fromNSData" xlink:role="function">QByteArray::fromNSData()</db:link></db:term>
<db:listitem>
<db:para>Constructs a new QByteArray containing a copy of the NSData data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearray.xml#fromRawCFData" xlink:role="function">QByteArray::fromRawCFData()</db:link></db:term>
<db:listitem>
<db:para>Constructs a QByteArray that uses the bytes of the CFData data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearray.xml#fromRawNSData" xlink:role="function">QByteArray::fromRawNSData()</db:link></db:term>
<db:listitem>
<db:para>Constructs a QByteArray that uses the bytes of the NSData data.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdatetime.xml#fromCFDate" xlink:role="function">QDateTime::fromCFDate()</db:link></db:term>
<db:listitem>
<db:para>Constructs a new QDateTime containing a copy of the CFDate date.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdatetime.xml#fromNSDate" xlink:role="function">QDateTime::fromNSDate()</db:link></db:term>
<db:listitem>
<db:para>Constructs a new QDateTime containing a copy of the NSDate date.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimage.xml#fromHBITMAP" xlink:role="function">QImage::fromHBITMAP()</db:link></db:term>
<db:listitem>
<db:para>Returns a QImage that is equivalent to the given hbitmap.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimage.xml#fromHICON" xlink:role="function">QImage::fromHICON()</db:link></db:term>
<db:listitem>
<db:para>Returns a QImage that is equivalent to the given icon.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpointf.xml#fromCGPoint" xlink:role="function">QPointF::fromCGPoint()</db:link></db:term>
<db:listitem>
<db:para>Creates a QRectF from CGPoint point.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrectf.xml#fromCGRect" xlink:role="function">QRectF::fromCGRect()</db:link></db:term>
<db:listitem>
<db:para>Creates a QRectF from CGRect rect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsizef.xml#fromCGSize" xlink:role="function">QSizeF::fromCGSize()</db:link></db:term>
<db:listitem>
<db:para>Creates a QRectF from size.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstring.xml#fromCFString" xlink:role="function">QString::fromCFString()</db:link></db:term>
<db:listitem>
<db:para>Constructs a new QString containing a copy of the string CFString.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstring.xml#fromNSString" xlink:role="function">QString::fromNSString()</db:link></db:term>
<db:listitem>
<db:para>Constructs a new QString containing a copy of the string NSString.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimezone.xml#fromCFTimeZone" xlink:role="function">QTimeZone::fromCFTimeZone()</db:link></db:term>
<db:listitem>
<db:para>Constructs a new QTimeZone containing a copy of the CFTimeZone timeZone.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimezone.xml#fromNSTimeZone" xlink:role="function">QTimeZone::fromNSTimeZone()</db:link></db:term>
<db:listitem>
<db:para>Constructs a new QTimeZone containing a copy of the NSTimeZone timeZone.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qurl.xml#fromCFURL" xlink:role="function">QUrl::fromCFURL()</db:link></db:term>
<db:listitem>
<db:para>Constructs a QUrl containing a copy of the CFURL url.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qurl.xml#fromNSURL" xlink:role="function">QUrl::fromNSURL()</db:link></db:term>
<db:listitem>
<db:para>Constructs a QUrl containing a copy of the NSURL url.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="quuid.xml#fromCFUUID" xlink:role="function">QUuid::fromCFUUID()</db:link></db:term>
<db:listitem>
<db:para>Constructs a new QUuid containing a copy of the uuid CFUUID.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="quuid.xml#fromNSUUID" xlink:role="function">QUuid::fromNSUUID()</db:link></db:term>
<db:listitem>
<db:para>Constructs a new QUuid containing a copy of the uuid NSUUID.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearray.xml#toCFData" xlink:role="function">QByteArray::toCFData()</db:link></db:term>
<db:listitem>
<db:para>Creates a CFData from a QByteArray.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearray.xml#toRawCFData" xlink:role="function">QByteArray::toRawCFData()</db:link></db:term>
<db:listitem>
<db:para>Constructs a CFData that uses the bytes of the QByteArray.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdatetime.xml#toCFDate" xlink:role="function">QDateTime::toCFDate()</db:link></db:term>
<db:listitem>
<db:para>Creates a CFDate from a QDateTime.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstring.xml#toCFString" xlink:role="function">QString::toCFString()</db:link></db:term>
<db:listitem>
<db:para>Creates a CFString from a QString.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringview.xml#toCFString" xlink:role="function">QStringView::toCFString()</db:link></db:term>
<db:listitem>
<db:para>Creates a CFString from this QStringView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimezone.xml#toCFTimeZone" xlink:role="function">QTimeZone::toCFTimeZone()</db:link></db:term>
<db:listitem>
<db:para>Creates a CFTimeZone from a QTimeZone.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qurl.xml#toCFURL" xlink:role="function">QUrl::toCFURL()</db:link></db:term>
<db:listitem>
<db:para>Creates a CFURL from a QUrl.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="quuid.xml#toCFUUID" xlink:role="function">QUuid::toCFUUID()</db:link></db:term>
<db:listitem>
<db:para>Creates a CFUUID from a QUuid.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimage.xml#toCGImage" xlink:role="function">QImage::toCGImage()</db:link></db:term>
<db:listitem>
<db:para>Creates a CGImage equivalent to this QImage.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpointf.xml#toCGPoint" xlink:role="function">QPointF::toCGPoint()</db:link></db:term>
<db:listitem>
<db:para>Creates a CGPoint from a QPointF.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qpoint.xml#toCGPoint" xlink:role="function">QPoint::toCGPoint()</db:link></db:term>
<db:listitem>
<db:para>Creates a CGPoint from a QPoint.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrect.xml#toCGRect" xlink:role="function">QRect::toCGRect()</db:link></db:term>
<db:listitem>
<db:para>Creates a CGRect from a QRect.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qrectf.xml#toCGRect" xlink:role="function">QRectF::toCGRect()</db:link></db:term>
<db:listitem>
<db:para>Creates a CGRect from a QRectF.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsize.xml#toCGSize" xlink:role="function">QSize::toCGSize()</db:link></db:term>
<db:listitem>
<db:para>Creates a CGSize from a QSize.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qsizef.xml#toCGSize" xlink:role="function">QSizeF::toCGSize()</db:link></db:term>
<db:listitem>
<db:para>Creates a CGSize from a QSizeF.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimage.xml#toHBITMAP" xlink:role="function">QImage::toHBITMAP()</db:link></db:term>
<db:listitem>
<db:para>Creates a HBITMAP equivalent of the QImage.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qimage.xml#toHICON" xlink:role="function">QImage::toHICON()</db:link></db:term>
<db:listitem>
<db:para>Creates a HICON equivalent of the QPixmap, applying the mask mask.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearray.xml#toNSData" xlink:role="function">QByteArray::toNSData()</db:link></db:term>
<db:listitem>
<db:para>Creates a NSData from a QByteArray.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qbytearray.xml#toRawNSData" xlink:role="function">QByteArray::toRawNSData()</db:link></db:term>
<db:listitem>
<db:para>Constructs a NSData that uses the bytes of the QByteArray.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qdatetime.xml#toNSDate" xlink:role="function">QDateTime::toNSDate()</db:link></db:term>
<db:listitem>
<db:para>Creates an NSDate from a QDateTime.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstring.xml#toNSString" xlink:role="function">QString::toNSString()</db:link></db:term>
<db:listitem>
<db:para>Creates a NSString from a QString.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qstringview.xml#toNSString" xlink:role="function">QStringView::toNSString()</db:link></db:term>
<db:listitem>
<db:para>Creates an NSString from this QStringView.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtimezone.xml#toNSTimeZone" xlink:role="function">QTimeZone::toNSTimeZone()</db:link></db:term>
<db:listitem>
<db:para>Creates an NSTimeZone from a QTimeZone.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qurl.xml#toNSURL" xlink:role="function">QUrl::toNSURL()</db:link></db:term>
<db:listitem>
<db:para>Creates a NSURL from a QUrl.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="quuid.xml#toNSUUID" xlink:role="function">QUuid::toNSUUID()</db:link></db:term>
<db:listitem>
<db:para>Creates a NSUUID from a QUuid.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
</db:article>
