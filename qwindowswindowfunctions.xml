<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QWindowsWindowFunctions Class</db:title>
<db:productname>QtPlatformHeaders</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Platform Headers Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qwindowswindowfunctions.xml">QWindowsWindowFunctions</db:link> class is an inline class containing miscellaneous functionality for Windows window specific functionality.</db:para>
<db:para>This class was introduced in Qt 5.5.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QWindowsWindowFunctions</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.5</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A common usage pattern is as follows:</db:para>
<db:programlisting language="cpp">int main(int argc, char **argv)
{
    QApplication app(argc, argv);

    QPushButton topLevelWidget(&quot;Hello World!&quot;);
    topLevelWidget.winId(); //have to create the QWindow

    QWindow *tlwWindow = topLevelWidget.windowHandle();

    QWindowsWindowFunctions::setTouchWindowTouchType(tlwWindow, QWindowsWindowFunctions::WantPalmTouch);

    topLevelWidget.show();

    return app.exec();
}
</db:programlisting>
<db:note>
<db:para>There is no binary compatibility guarantee for this class, meaning that an application using it is only guaranteed to work with the Qt version it was developed against.</db:para>
</db:note>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="SetHasBorderInFullScreen-typedef">
<db:title>QWindowsWindowFunctions::SetHasBorderInFullScreen</db:title>
<db:para>This is the typedef for the function returned by <db:link xlink:href="qguiapplication.xml#platformFunction">QGuiApplication::platformFunction</db:link> when passed <db:link xlink:href="qwindowswindowfunctions.xml#setHasBorderInFullScreenIdentifier">setHasBorderInFullScreenIdentifier</db:link>.</db:para>
</db:section>
<db:section xml:id="SetTouchWindowTouchType-typedef">
<db:title>QWindowsWindowFunctions::SetTouchWindowTouchType</db:title>
<db:para>This is the typedef for the function returned by <db:link xlink:href="qguiapplication.xml#platformFunction">QGuiApplication::platformFunction</db:link> when passed <db:link xlink:href="qwindowswindowfunctions.xml#setTouchWindowTouchTypeIdentifier">setTouchWindowTouchTypeIdentifier</db:link>.</db:para>
</db:section>
<db:section xml:id="TouchWindowTouchType-enum">
<db:title>enum QWindowsWindowFunctions::TouchWindowTouchType</db:title>
<db:bridgehead renderas="sect2">flags QWindowsWindowFunctions::TouchWindowTouchTypes</db:bridgehead>
<db:para>This enum represents the supported TouchWindow touch flags for RegisterTouchWindow().</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwindowswindowfunctions.xml">QWindowsWindowFunctions</db:link></db:emphasis>::NormalTouch</db:code></db:para>
</db:td>
<db:td><db:code>0x00000000</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwindowswindowfunctions.xml">QWindowsWindowFunctions</db:link></db:emphasis>::FineTouch</db:code></db:para>
</db:td>
<db:td><db:code>0x00000001</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwindowswindowfunctions.xml">QWindowsWindowFunctions</db:link></db:emphasis>::WantPalmTouch</db:code></db:para>
</db:td>
<db:td><db:code>0x00000002</db:code></db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>TouchWindowTouchTypes</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;TouchWindowTouchType&gt;. </db:code>It stores an OR combination of <db:code>TouchWindowTouchType</db:code> values.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="setHasBorderInFullScreen">
<db:title>[static, since 5.6] void QWindowsWindowFunctions::setHasBorderInFullScreen(QWindow *<db:emphasis>window</db:emphasis>, bool <db:emphasis>border</db:emphasis>)</db:title>
<db:para>This is a convenience function that can be used directly instead of resolving the function pointer. <db:code role="parameter">window</db:code> and <db:code role="parameter">border</db:code> will be relayed to the function retrieved by <db:link xlink:href="qguiapplication.xml">QGuiApplication</db:link>. When <db:code role="parameter">border</db:code> is true then it will enable the WS_BORDER flag in full screen mode to enable other top level windows inside the application to appear on top when required.</db:para>
<db:para>See also <db:link xlink:href="windows-issues.xml#fullscreen-opengl-based-windows">Fullscreen OpenGL Based Windows</db:link></db:para>
<db:para>This function was introduced in Qt 5.6.</db:para>
</db:section>
<db:section xml:id="setHasBorderInFullScreenIdentifier">
<db:title>[static, since 5.6] const QByteArray QWindowsWindowFunctions::setHasBorderInFullScreenIdentifier()</db:title>
<db:para>This function returns the bytearray that can be used to query <db:link xlink:href="qguiapplication.xml#platformFunction">QGuiApplication::platformFunction</db:link> to retrieve the <db:link xlink:href="qwindowswindowfunctions.xml#SetHasBorderInFullScreen-typedef">SetHasBorderInFullScreen</db:link> function.</db:para>
<db:para>This function was introduced in Qt 5.6.</db:para>
</db:section>
<db:section xml:id="setTouchWindowTouchType">
<db:title>[static] void QWindowsWindowFunctions::setTouchWindowTouchType(QWindow *<db:emphasis>window</db:emphasis>, QWindowsWindowFunctions::TouchWindowTouchTypes <db:emphasis>type</db:emphasis>)</db:title>
<db:para>This is a convenience function that can be used directly instead of resolving the function pointer. <db:code role="parameter">window</db:code> and <db:code role="parameter">type</db:code> will be relayed to the function retrieved by <db:link xlink:href="qguiapplication.xml">QGuiApplication</db:link></db:para>
</db:section>
<db:section xml:id="setTouchWindowTouchTypeIdentifier">
<db:title>[static] const QByteArray QWindowsWindowFunctions::setTouchWindowTouchTypeIdentifier()</db:title>
<db:para>This function returns the bytearray that can be used to query <db:link xlink:href="qguiapplication.xml#platformFunction">QGuiApplication::platformFunction</db:link> to retrieve the <db:link xlink:href="qwindowswindowfunctions.xml#SetTouchWindowTouchType-typedef">SetTouchWindowTouchType</db:link> function.</db:para>
</db:section>
</db:section>
</db:article>
