<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>&lt;QtResource&gt;</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Core Reference Documentation.</db:para></db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="macro-documentation">
<db:title>Macro Documentation</db:title>
<db:section xml:id="Q_CLEANUP_RESOURCE">
<db:title>void Q_CLEANUP_RESOURCE(<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Unloads the resources specified by the .qrc file with the base name <db:code role="parameter">name</db:code>.</db:para>
<db:para>Normally, Qt resources are unloaded automatically when the application terminates, but if the resources are located in a plugin that is being unloaded, call Q_CLEANUP_RESOURCE() to force removal of your resources.</db:para>
<db:note>
<db:para>This macro cannot be used in a namespace. Please see the <db:link xlink:href="qtresource-qtcore-proxy.xml#Q_INIT_RESOURCE">Q_INIT_RESOURCE</db:link> documentation for a workaround.</db:para>
</db:note>
<db:para>Example:</db:para>
<db:programlisting language="cpp">Q_CLEANUP_RESOURCE(myapp);
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtresource-qtcore-proxy.xml#Q_INIT_RESOURCE">Q_INIT_RESOURCE</db:link>()</db:member>
<db:member><db:link xlink:href="resources.xml">The Qt Resource System</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Q_INIT_RESOURCE">
<db:title>void Q_INIT_RESOURCE(<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Initializes the resources specified by the .qrc file with the specified base <db:code role="parameter">name</db:code>. Normally, when resources are built as part of the application, the resources are loaded automatically at startup. The Q_INIT_RESOURCE() macro is necessary on some platforms for resources stored in a static library.</db:para>
<db:para>For example, if your application's resources are listed in a file called myapp.qrc, you can ensure that the resources are initialized at startup by adding this line to your main() function:</db:para>
<db:programlisting language="cpp">Q_INIT_RESOURCE(myapp);
</db:programlisting>
<db:para>If the file name contains characters that cannot be part of a valid C++ function name (such as '-'), they have to be replaced by the underscore character ('_').</db:para>
<db:note>
<db:para>This macro cannot be used in a namespace. It should be called from main(). If that is not possible, the following workaround can be used to init the resource myapp from the function MyNamespace::myFunction:</db:para>
</db:note>
<db:programlisting language="cpp">inline void initMyResource() { Q_INIT_RESOURCE(myapp); }

namespace MyNamespace
{
    ...

    void myFunction()
    {
        initMyResource();
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtresource-qtcore-proxy.xml#Q_CLEANUP_RESOURCE">Q_CLEANUP_RESOURCE</db:link>()</db:member>
<db:member><db:link xlink:href="resources.xml">The Qt Resource System</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
