<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Screen Capture Example</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>Capturing a screen or window.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis>Screen Capture</db:emphasis> demonstrates how to capture a screen using <db:link xlink:href="qscreencapture.xml">QScreenCapture</db:link>. The example shows a list of screens and a live preview of the selected item using a <db:link xlink:href="qmediacapturesession.xml">QMediaCaptureSession</db:link> and a <db:link xlink:href="qvideowidget.xml">QVideoWidget</db:link>. There is also a button to start and stop the capturing.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/screencapture.jpg"/>
</db:imageobject>
</db:mediaobject>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="https://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:guilabel>Welcome</db:guilabel> mode and select the example from <db:guilabel>Examples</db:guilabel>. For more information, visit <db:link xlink:href="https://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section xml:id="application-structure">
<db:title>Application Structure</db:title>
<db:para>The example consists of two custom classes. The UI and all screen capture functionality is implemented in the class ScreenCapturePreview. The class ScreenListModel only serves as a model behind the <db:link xlink:href="qlistview.xml">QListView</db:link> widget. The main function creates a ScreenCapturePreview object, which in turn creates an instance of <db:link xlink:href="qscreencapture.xml">QScreenCapture</db:link>, <db:link xlink:href="qmediacapturesession.xml">QMediaCaptureSession</db:link> and <db:link xlink:href="qvideowidget.xml">QVideoWidget</db:link> in addition to all the UI widgets.</db:para>
<db:para>The list is populated with the return value of <db:link xlink:href="qguiapplication.xml#screens">QGuiApplication::screens</db:link>().</db:para>
<db:para>When a list item is selected, it is connected to the <db:link xlink:href="qscreencapture.xml">QScreenCapture</db:link> object with <db:link xlink:href="qscreencapture.xml#screen-prop">QScreenCapture::setScreen</db:link>(). The <db:link xlink:href="qscreencapture.xml">QScreenCapture</db:link> object is connected to the <db:link xlink:href="qmediacapturesession.xml">QMediaCaptureSession</db:link> object with <db:link xlink:href="qmediacapturesession.xml#screenCapture-prop">QMediaCaptureSession::setScreenCapture</db:link>(), which in turn is connected to the <db:link xlink:href="qvideowidget.xml">QVideoWidget</db:link> object with <db:link xlink:href="qmediacapturesession.xml#setVideoOutput">QMediaCaptureSession::setVideoOutput</db:link>(). Thus the screen capture output is previewed in the video widget on the right hand side of the UI.</db:para>
<db:para>The start/stop button calls <db:link xlink:href="qscreencapture.xml#start">QScreenCapture::start</db:link>() and <db:link xlink:href="qscreencapture.xml#stop">QScreenCapture::stop</db:link>().</db:para>
<db:para>A <db:link xlink:href="qmessagebox.xml">QMessageBox</db:link> pops up if the <db:link xlink:href="qscreencapture.xml#errorOccurred">QScreenCapture::errorOccurred</db:link> signal is emitted.</db:para>
</db:section>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtmultimedia.git/tree/examples/multimedia/screencapture?h=6.5">Example project @ code.qt.io</db:link></db:para>
</db:section>
</db:article>
