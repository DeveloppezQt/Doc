<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Creating Help Project Files</db:title>
<db:productname>QDoc</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>QDoc Manual</db:titleabbrev>
<db:extendedlink xlink:type="extended"><db:link xlink:to="22-qdoc-configuration-generalvariables.xml" xlink:type="arc" xlink:arcrole="prev" xlink:title="Generic Configuration Variables"/></db:extendedlink>
<db:extendedlink xlink:type="extended"><db:link xlink:to="23-qdoc-configuration-cppvariables.xml" xlink:type="arc" xlink:arcrole="next" xlink:title="C++ Specific Configuration Variables"/></db:extendedlink>
<db:abstract>
<db:para>QDoc Manual.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis role="bold">&lt;Unknown command&gt;<db:code>contentspage</db:code></db:emphasis>QDoc Manual</db:para>
<db:section xml:id="overview">
<db:title>Overview</db:title>
<db:para>Qt Assistant uses a system for managing Qt documentation that requires QDoc to generate inventories of files.</db:para>
<db:para>QDoc allows configuration variables to be used to specify which pages are to be used in each documentation set it generates. These are specified as subvariables of the qhp variable with each set declared using a unique identifier as a subvariable.</db:para>
<db:para>For example, the configuration file for the Qt Quick documentation set specifies information about the set as subvariables with the qhp.QtQuick prefix:</db:para>
<db:programlisting language="cpp" role="bad">qhp.projects = QtQuick

qhp.QtQuick.file                = qtquick.qhp
qhp.QtQuick.namespace           = org.qt-project.qtquick.$QT_VERSION_TAG
qhp.QtQuick.virtualFolder       = qtquick
qhp.QtQuick.indexTitle          = Qt Quick
qhp.QtQuick.indexRoot           =

qhp.QtQuick.filterAttributes    = qtquick $QT_VERSION qtrefdoc
qhp.QtQuick.customFilters.Qt.name = QtQuick $QT_VERSION
qhp.QtQuick.customFilters.Qt.filterAttributes = qtquick $QT_VERSION

qhp.QtQuick.subprojects         = qmltypes classes examples

qhp.QtQuick.subprojects.qmltypes.title = QML Types
qhp.QtQuick.subprojects.qmltypes.indexTitle = Qt Quick QML Types
qhp.QtQuick.subprojects.qmltypes.selectors = qmlclass
qhp.QtQuick.subprojects.qmltypes.sortPages = true

qhp.QtQuick.subprojects.classes.title = Classes
qhp.QtQuick.subprojects.classes.title = C++ Classes
qhp.QtQuick.subprojects.classes.indexTitle = Qt Quick C++ Classes
qhp.QtQuick.subprojects.classes.selectors = class fake:headerfile
qhp.QtQuick.subprojects.classes.sortPages = true

qhp.QtQuick.subprojects.examples.title = Examples
qhp.QtQuick.subprojects.examples.indexTitle = Qt Quick Examples and Tutorials
qhp.QtQuick.subprojects.examples.selectors = fake:example
</db:programlisting>
<db:para>The documentation set may include one or more subprojects, which are added to the table of contents under the name specified by title. The page in the documentation referred to by the indexTitle acts as the index page for the subproject. The page types to list under the subproject are specified by selectors. The entries are alphabetically sorted if sortPages is set to true.</db:para>
<db:section xml:id="using-selectors">
<db:title>Using Selectors</db:title>
<db:para>The selectors property specifies which page types are listed under the table of contents entry for a subproject. Multiple selectors can be listed, separated by whitespace.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Selector</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>namespace</db:para>
</db:td>
<db:td>
<db:para>Namespaces</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>class</db:para>
</db:td>
<db:td>
<db:para>Classes</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>qmltype</db:para>
</db:td>
<db:td>
<db:para>QML Types</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>qmlclass</db:para>
</db:td>
<db:td>
<db:para>Alias for qmltype.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>module[:name]</db:para>
</db:td>
<db:td>
<db:para>C++ modules or members of the module with a specified name.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>qmlmodule[:name]</db:para>
</db:td>
<db:td>
<db:para>QML modules or members of the module with a specified name.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>doc[:subtype]</db:para>
</db:td>
<db:td>
<db:para>Documentation pages with a specified subtype. Multiple subtypes can be listed as a comma-separated list.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>fake</db:para>
</db:td>
<db:td>
<db:para>Alias for doc.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>group[:groupname]</db:para>
</db:td>
<db:td>
<db:para>Documentation pages for members of a specified group, as added using the <db:link xlink:href="19-qdoc-commands-grouping.xml#ingroup-command">\ingroup</db:link> groupname command. Multiple group names can be listed as a comma-separated list. (Introduced in QDoc 5.6).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Available subtypes for the doc selector:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Subtype</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>example</db:para>
</db:td>
<db:td>
<db:para>Examples</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>headerfile</db:para>
</db:td>
<db:td>
<db:para>Header files</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>page</db:para>
</db:td>
<db:td>
<db:para>Documentation pages defined with the <db:link xlink:href="13-qdoc-commands-topics.xml#page-command">\page</db:link> command.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>For example, the following configuration would select example pages and pages that include the \ingroup tutorials command:</db:para>
<db:programlisting language="cpp" role="bad">qhp.QtQuickControls.subprojects = examples
qhp.QtQuickControls.subprojects.examples.title = Examples and Tutorials
qhp.QtQuickControls.subprojects.examples.indexTitle = Qt Quick Controls Examples
qhp.QtQuickControls.subprojects.examples.selectors = doc:example group:tutorials
qhp.QtQuickControls.subprojects.examples.sortPages = true
</db:programlisting>
</db:section>
<db:section xml:id="adding-table-of-contents">
<db:title>Adding Table of Contents</db:title>
<db:para>To create a table of contents for a manual, create a subproject with a type property and set it to manual. The page in the documentation referred to by the indexTitle property must contain a list of links that acts as a table of contents for the whole manual. QDoc will take the information in this list and create a table of contents for the subproject.</db:para>
<db:para>For example, the configuration file for Qt Creator defines only one subproject for its documentation, including all the documentation in a single manual:</db:para>
<db:programlisting language="cpp" role="bad">qhp.QtCreator.subprojects = manual
qhp.QtCreator.subprojects.manual.title = Qt Creator Manual
qhp.QtCreator.subprojects.manual.indexTitle = Qt Creator Manual
qhp.QtCreator.subprojects.manual.type = manual
</db:programlisting>
<db:para>In this example, the page entitled &quot;Qt Creator Manual&quot; contains a nested list of links to pages in the documentation which is duplicated in Qt Assistant's Contents tab.</db:para>
</db:section>
</db:section>
</db:article>
