<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>&lt;QtGlobal&gt; - Global Qt Declarations</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The &lt;QtGlobal&gt; header file includes an assortment of other headers.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QtGlobal</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>&lt;QtGlobal&gt; is part of <db:simplelist><db:member>funclists</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Up to Qt 6.5, most Qt header files included &lt;QtGlobal&gt;. Before Qt 6.5, &lt;QtGlobal&gt; defined an assortment of global declarations. Most of these have moved, at Qt 6.5, to separate headers, so that source code can include only what it needs, rather than the whole assortment. For now, &lt;QtGlobal&gt; includes those other headers (see next section), but future releases of Qt may remove some of these headers from &lt;QtGlobal&gt; or condition their inclusion on a version check. Likewise, in future releases, some Qt headers that currently include &lt;QtGlobal&gt; may stop doing so. The hope is that this will improve compilation times by avoiding global declarations when they are not used.</db:para>
<db:section xml:id="list-of-headers-extracted-from-qtglobal">
<db:title>List of Headers Extracted from &lt;QtGlobal&gt;</db:title>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Header</db:para>
</db:th>
<db:th>
<db:para>Summary</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>&lt;<db:link xlink:href="qflags.xml">QFlags</db:link>&gt;</db:para>
</db:td>
<db:td>
<db:para>Type-safe way of combining enum values</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qforeach-qtcore-proxy.xml">&lt;QForeach&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Qt's implementation of foreach and forever loops</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qfunctionpointer-qtcore-proxy.xml">&lt;QFunctionPointer&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Typedef for a pointer-to-function type</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qapplicationstatic.xml">&lt;QApplicationStatic&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>For <db:link xlink:href="qapplicationstatic.xml#Q_APPLICATION_STATIC">Q_APPLICATION_STATIC</db:link></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>&lt;<db:link xlink:href="qglobalstatic.xml">QGlobalStatic</db:link>&gt;</db:para>
</db:td>
<db:td>
<db:para>Thread-safe initialization of global static objects</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qoverload-qtcore-proxy.xml">&lt;QOverload&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Helpers for resolving member function overloads</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>&lt;<db:link xlink:href="qsysinfo.xml">QSysInfo</db:link>&gt;</db:para>
</db:td>
<db:td>
<db:para>A helper class to get system information</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtypeinfo-qtcore-proxy.xml">&lt;QTypeInfo&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Helpers to get type information</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtassert-qtcore-proxy.xml">&lt;QtAssert&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtassert-qtcore-proxy.xml#Q_ASSERT">Q_ASSERT</db:link> and other runtime checks</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtclasshelpermacros-qtcore-proxy.xml">&lt;QtClassHelperMacros&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Qt class helper macros</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtcompilerdetection.xml">&lt;QtCompilerDetection&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Compiler-specific macro definitions</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtdeprecationmarkers.xml">&lt;QtDeprecationMarkers&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Deprecation helper macros</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtenvironmentvariables-qtcore-proxy.xml">&lt;QtEnvironmentVariables&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Helpers for working with environment variables</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>&lt;QtExceptionHandling&gt;</db:para>
</db:td>
<db:td>
<db:para>Helpers for exception handling</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtlogging.xml">&lt;QtLogging&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Qt logging helpers</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>&lt;QtMalloc&gt;</db:para>
</db:td>
<db:td>
<db:para>Memory allocation helpers</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtminmax-qtcore-proxy.xml">&lt;QtMinMax&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Helpers for comparing values</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtnumeric.xml">&lt;QtNumeric&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Various numeric functions</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtpreprocessorsupport-qtcore-proxy.xml">&lt;QtPreprocessorSupport&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Helper preprocessor macros</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtprocessordetection.xml">&lt;QtProcessorDetection&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Architecture-specific macro definitions</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtresource-qtcore-proxy.xml">&lt;QtResource&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Helpers for initializing and cleaning resources</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtswap-qtcore-proxy.xml">&lt;QtSwap&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Implementation of <db:link xlink:href="qtswap-qtcore-proxy.xml#qSwap">qSwap</db:link>()</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtsystemdetection.xml">&lt;QtSystemDetection&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Platform-specific macro definitions</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qttranslation-qtcore-proxy.xml">&lt;QtTranslation&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Qt translation helpers</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qttypetraits.xml">&lt;QtTypeTraits&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Qt type traits</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qttypes.xml">&lt;QtTypes&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para>Qt fundamental type declarations</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtversionchecks-qtcore-proxy.xml">&lt;QtVersionChecks&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtversionchecks-qtcore-proxy.xml#QT_VERSION_CHECK">QT_VERSION_CHECK</db:link> and related checks</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qtversion-qtcore-proxy.xml">&lt;QtVersion&gt;</db:link></db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qtversion-qtcore-proxy.xml#QT_VERSION_STR">QT_VERSION_STR</db:link> and <db:link xlink:href="qtversion-qtcore-proxy.xml#qVersion">qVersion</db:link>()</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="macro-documentation">
<db:title>Macro Documentation</db:title>
<db:section xml:id="QT_ENABLE_STRICT_MODE_UP_TO">
<db:title>[since 6.8] QT_ENABLE_STRICT_MODE_UP_TO</db:title>
<db:para>Defining this macro will disable a number of Qt APIs that are deemed suboptimal or dangerous.</db:para>
<db:para>This macro's value must be set to a Qt version, using <db:link xlink:href="qtversionchecks-qtcore-proxy.xml#QT_VERSION_CHECK">QT_VERSION_CHECK</db:link>'s encoding. For instance, in order to set it to Qt 6.6, define QT_ENABLE_STRICT_MODE_UP_TO=0x060600. This will disable only the APIs introduced in versions up to (and including) the specified Qt version.</db:para>
<db:para>If the <db:link xlink:href="qtdeprecationmarkers.xml#QT_DISABLE_DEPRECATED_UP_TO">QT_DISABLE_DEPRECATED_UP_TO</db:link> macro is <db:emphasis>not</db:emphasis> defined, then QT_ENABLE_STRICT_MODE_UP_TO will define it as well, to the same value.</db:para>
<db:para>This macro should always be set to the minimum Qt version that your project wants to support.</db:para>
<db:para>The APIs disabled by this macro are listed in the table below, together with the minimum value to use in order to disable them.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Version</db:para>
</db:th>
<db:th>
<db:para>Disabled APIs</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>6.0.0</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="foreach-keyword.xml#the-foreach-keyword">foreach</db:link> (see <db:link xlink:href="qtglobal.xml#QT_NO_FOREACH">QT_NO_FOREACH</db:link>)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>6.0.0</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qstring.xml">QString</db:link> conversions towards const char * / <db:link xlink:href="qbytearray.xml">QByteArray</db:link> (see <db:link xlink:href="qstring.xml#QT_NO_CAST_TO_ASCII">QT_NO_CAST_TO_ASCII</db:link>)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>6.0.0</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qbytearray.xml">QByteArray</db:link> implicit conversions towards const char * (see <db:link xlink:href="qbytearray.xml#QT_NO_CAST_FROM_BYTEARRAY">QT_NO_CAST_FROM_BYTEARRAY</db:link>)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>6.0.0</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qurl.xml">QUrl</db:link> implicit conversions from <db:link xlink:href="qstring.xml">QString</db:link> (see <db:link xlink:href="qurl.xml#QT_NO_URL_CAST_FROM_STRING">QT_NO_URL_CAST_FROM_STRING</db:link>)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>6.0.0</db:para>
</db:td>
<db:td>
<db:para>Allowing narrowing conversions in signal-slot connections (see <db:link xlink:href="qobject.xml#QT_NO_NARROWING_CONVERSIONS_IN_CONNECT">QT_NO_NARROWING_CONVERSIONS_IN_CONNECT</db:link>)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>6.0.0</db:para>
</db:td>
<db:td>
<db:para>Java-style iterators for Qt containers</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>6.6.0</db:para>
</db:td>
<db:td>
<db:para>The <db:link xlink:href="qttypetraits.xml#qExchange">qExchange</db:link>() function (see <db:link xlink:href="qttypetraits.xml#QT_NO_QEXCHANGE">QT_NO_QEXCHANGE</db:link>)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>6.7.0</db:para>
</db:td>
<db:td>
<db:para>Overloads of <db:link xlink:href="qobject.xml#connect">QObject::connect</db:link> that do not take a context object (see <db:link xlink:href="qobject.xml#QT_NO_CONTEXTLESS_CONNECT">QT_NO_CONTEXTLESS_CONNECT</db:link>)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>6.8.0</db:para>
</db:td>
<db:td>
<db:para>The qAsConst() function (see <db:link xlink:href="qttypetraits.xml#QT_NO_QASCONST">QT_NO_QASCONST</db:link>)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>6.8.0</db:para>
</db:td>
<db:td>
<db:para>File-related I/O classes have their open() functions marked [[nodiscard]] (see <db:link xlink:href="qfiledevice.xml#QT_USE_NODISCARD_FILE_OPEN">QT_USE_NODISCARD_FILE_OPEN</db:link>)</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>6.9.0</db:para>
</db:td>
<db:td>
<db:para>The qsnprintf() and qvnprintf() functions (see <db:link xlink:href="qbytearray.xml#QT_NO_QSNPRINTF">QT_NO_QSNPRINTF</db:link>).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Moreover, individual APIs may also get disabled as part of the setting of <db:link xlink:href="qtdeprecationmarkers.xml#QT_DISABLE_DEPRECATED_UP_TO">QT_DISABLE_DEPRECATED_UP_TO</db:link>. Please refer to each class' documentation for more details.</db:para>
<db:para>This macro was introduced in Qt 6.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtdeprecationmarkers.xml#QT_DISABLE_DEPRECATED_UP_TO">QT_DISABLE_DEPRECATED_UP_TO</db:link></db:member>
<db:member><db:link xlink:href="qtglobal.xml#QT_NO_KEYWORDS">QT_NO_KEYWORDS</db:link></db:member>
<db:member><db:link xlink:href="qtversionchecks-qtcore-proxy.xml#QT_VERSION_CHECK">QT_VERSION_CHECK</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QT_NO_FOREACH">
<db:title>[since 6.0] QT_NO_FOREACH</db:title>
<db:para>Defining this macro removes the availability of Qt's foreach loop.</db:para>
<db:para>This macro was introduced in Qt 6.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtglobal.xml#QT_NO_KEYWORDS">QT_NO_KEYWORDS</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QT_NO_KEYWORDS">
<db:title>QT_NO_KEYWORDS</db:title>
<db:para>Define this macro to disable the Qt-specific keywords that are usually enabled, such as signals and slots. Use Q_SIGNALS and Q_SLOTS instead.</db:para>
<db:para>Libraries should define this macro to make sure that they don't use the generic keywords without the Q_ prefix in their public headers.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtglobal.xml#QT_NO_FOREACH">QT_NO_FOREACH</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for &lt;QtGlobal&gt;</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qtglobal.xml">&lt;QtGlobal&gt;</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-macro-documentation">
<db:title>Obsolete Macro Documentation</db:title>
<db:section xml:id="qMove">
<db:title>[deprecated] qMove(<db:emphasis>x</db:emphasis>)</db:title>
<db:para>This macro is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use std::move instead.</db:para>
<db:para>It expands to &quot;std::move&quot;.</db:para>
<db:para>qMove takes an rvalue reference to its parameter <db:code role="parameter">x</db:code>, and converts it to an xvalue.</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
