<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QT_DEPLOY_PREFIX</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Base location for a deployment.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:anchor xml:id="cmake-variable-qt-deploy-prefix"/>
<db:para>Base location for a deployment.</db:para>
<db:para>This variable is defined by the script named by <db:link xlink:href="cmake-variable-qt-deploy-support.xml">QT_DEPLOY_SUPPORT</db:link>. It should only be used as part of deployment during installation or a post-build rule.</db:para>
<db:para>This variable was introduced in Qt 6.3.</db:para>
<db:para>QT_DEPLOY_PREFIX provides the base deployment directory. The other QT_DEPLOY_..._DIR variables should be treated as relative to this location. The value of QT_DEPLOY_PREFIX may be relative or absolute, so projects should not assume one or the other in any given situation. A relative path is expected to be treated as relative to the current working directory, as seen by the build tool (ninja, make, and so on) at install time.</db:para>
<db:para>The default value is $ENV{DESTDIR}${CMAKE_INSTALL_PREFIX}, which is the base location CMake uses during installation. If that evaluates to an empty string, the default value will be a dot (.) instead, which is generally the appropriate value when deploying as part of a post-build rule. This two-step fallback logic ensures that projects can assume QT_DEPLOY_PREFIX will not be an empty string, so it can safely be used as part of a path like ${QT_DEPLOY_PREFIX}/${QT_DEPLOY_BIN_DIR}.</db:para>
<db:para>To change the value of QT_DEPLOY_PREFIX, the project can be configured with a custom <db:link xlink:href="https://cmake.org/cmake/help/latest/variable/CMAKE_INSTALL_PREFIX.html">CMAKE_INSTALL_PREFIX</db:link> as described in <db:link xlink:href="https://cmake.org/cmake/help/latest/guide/user-interaction/index.html#command-line-cmake-tool">Command Line cmake invocation</db:link>.</db:para>
<db:para>The <db:link xlink:href="https://cmake.org/cmake/help/latest/envvar/DESTDIR.html">DESTDIR</db:link> environment variable can also be used to modify the final installation, and thus deployment, location.</db:para>
<db:para>Projects should rarely need to use this variable. In typical scenarios, deploy scripts should assume that the working directory is already set to the base install location and just use the prefix-relative QT_DEPLOY_..._DIR variables.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="cmake-variable-qt-deploy-support.xml">QT_DEPLOY_SUPPORT</db:link></db:member>
<db:member><db:link xlink:href="cmake-variable-qt-deploy-bin-dir.xml">QT_DEPLOY_BIN_DIR</db:link></db:member>
<db:member><db:link xlink:href="cmake-variable-qt-deploy-lib-dir.xml">QT_DEPLOY_LIB_DIR</db:link></db:member>
<db:member><db:link xlink:href="cmake-variable-qt-deploy-plugins-dir.xml">QT_DEPLOY_PLUGINS_DIR</db:link></db:member>
<db:member><db:link xlink:href="cmake-variable-qt-deploy-qml-dir.xml">QT_DEPLOY_QML_DIR</db:link></db:member>
<db:member><db:link xlink:href="cmake-variable-qt-deploy-translations-dir.xml">QT_DEPLOY_TRANSLATIONS_DIR</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
