<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Demo - StocQt</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A configurable stock chart for the NASDAQ-100.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/
import QtQuick 2.0

ListModel {
    id: stocks

    // pre-fetch data for all entries
    Component.onCompleted: {
        for (var idx = 0; idx &amp;lt; count; ++idx) {
            getCloseValue(idx)
        }
    }

    function getCloseValue(index) {

        var endDate = new Date(); // today
        var startDate = new Date();
        endDate.setDate(startDate.getDate() - 1);
        startDate.setDate(endDate.getDate() - 7);

        var req = &quot;data/&quot; + get(index).stockId + &quot;.csv&quot;

        var xhr = new XMLHttpRequest;

        xhr.open(&quot;GET&quot;, req, true);

        xhr.onreadystatechange = function() {
            if (xhr.readyState === XMLHttpRequest.LOADING || xhr.readyState === XMLHttpRequest.DONE) {
                var records = xhr.responseText.split('\n');
                var unknown = &quot;n/a&quot;;
                set(index, {&quot;value&quot;: unknown, &quot;change&quot;: unknown, &quot;changePercentage&quot;: unknown});
                if (records.length &amp;gt; 0 &amp;amp;&amp;amp; xhr.status == 200) {
                    var r = records[1].split(',');
                    var today = parseFloat(r[4]);

                    if (!isNaN(today))
                        setProperty(index, &quot;value&quot;, today.toFixed(2));
                    if (records.length &amp;gt; 2) {
                        r = records[2].split(',');
                        var yesterday = parseFloat(r[4]);
                        var change = today - yesterday;

                        if (change &amp;gt;= 0.0)
                            setProperty(index, &quot;change&quot;, &quot;+&quot; + change.toFixed(2));
                        else
                            setProperty(index, &quot;change&quot;, change.toFixed(2));

                        var changePercentage = (change / yesterday) * 100.0;
                        if (changePercentage &amp;gt;= 0.0)
                            setProperty(index, &quot;changePercentage&quot;, &quot;+&quot; + changePercentage.toFixed(2) + &quot;%&quot;);
                        else
                            setProperty(index, &quot;changePercentage&quot;, changePercentage.toFixed(2) + &quot;%&quot;);
                    }
                }
            }
        }
        xhr.send()
    }
    // Uncomment to test invalid entries
    // ListElement {name: &quot;The Qt Company&quot;; stockId: &quot;TQTC&quot;; value: &quot;999.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}

    // Offline data downloaded using the url, https://www.quandl.com/api/v3/datasets/WIKI/&amp;lt;stockId&amp;gt;.csv.
    ListElement {name: &quot;Advanced Micro Devices Inc.&quot;; stockId: &quot;AMD&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;Amazon.com Inc.&quot;; stockId: &quot;AMZN&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;Apple Inc.&quot;; stockId: &quot;AAPL&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;Autodesk Inc.&quot;; stockId: &quot;ADSK&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;Cisco Systems Inc.&quot;; stockId: &quot;CSCO&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;eBay Inc.&quot;; stockId: &quot;EBAY&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;Electronic Arts Inc.&quot;; stockId: &quot;EA&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;Intel Corp.&quot;; stockId: &quot;INTC&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;Microsoft Corp.&quot;; stockId: &quot;MSFT&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;NetApp Inc.&quot;; stockId: &quot;NTAP&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;Netflix Inc.&quot;; stockId: &quot;NFLX&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;Norwegian Cruise Line Holdings Ltd.&quot;; stockId: &quot;NCLH&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;NVIDIA Corp.&quot;; stockId: &quot;NVDA&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;PayPal Holdings Inc.&quot;; stockId: &quot;PYPL&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;QUALCOMM Inc.&quot;; stockId: &quot;QCOM&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;Tesla Motors Inc.&quot;; stockId: &quot;TSLA&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;Texas Instruments Inc.&quot;; stockId: &quot;TXN&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
    ListElement {name: &quot;Facebook Inc.&quot;; stockId: &quot;FB&quot;; value: &quot;0.0&quot;; change: &quot;0.0&quot;; changePercentage: &quot;0.0&quot;}
}

</db:programlisting>
</db:article>
