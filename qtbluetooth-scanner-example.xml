<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QML Bluetooth Scanner Example</db:title>
<db:productname>QtBluetooth</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Bluetooth Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A QML example about locating Bluetooth devices.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>This is an example on how to locate Bluetooth devices in QML.</db:para>
<db:para>The user has the choice to run three different types of Bluetooth scans. The device retrieves information about the remote device within Bluetooth range. This implies that the remote device can be discovered. The picture below demonstrates the potential result of such a search:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/devicescan.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The second and third type of scan dicover the types of services offered by each remote device. A full service discovery can take quite some time to finish. The local device connects to each remote device and performs an SDP enquiry. The results of such an enquiry can be seen below.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/servicescan.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>In general a service discovery is based on the results of a previously run device enquiry. A minimal service discovery returns the same data set as a full discovery except that the results are retrieved from local cache information and may not always be complete and accurate. The primary reason to perform a minimal discovery are time constraints. A full service discovery can take up to two minutes. Note that not every platform supports a minimal discovery. In such cases the API performs a full discovery.</db:para>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="http://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="scanner/Button.qml">scanner/Button.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="scanner/qmlscanner.cpp">scanner/qmlscanner.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="scanner/scanner.pro">scanner/scanner.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="scanner/scanner.qml">scanner/scanner.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="scanner/scanner.qrc">scanner/scanner.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Images:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="scanner/default.png">scanner/default.png</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtbluetooth-index.xml">Qt Bluetooth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section></db:section></db:article>
