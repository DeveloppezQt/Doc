<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Examples - Shapes</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>A Qt Quick example demonstrating the use of shape items.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QtQuick module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.9
import QtQuick.Shapes 1.0

Rectangle {
    id: root
    width: 1024
    height: 768

    property color col: &quot;lightsteelblue&quot;
    gradient: Gradient {
        GradientStop { position: 0.0; color: Qt.tint(root.col, &quot;#20FFFFFF&quot;) }
        GradientStop { position: 0.1; color: Qt.tint(root.col, &quot;#20AAAAAA&quot;) }
        GradientStop { position: 0.9; color: Qt.tint(root.col, &quot;#20666666&quot;) }
        GradientStop { position: 1.0; color: Qt.tint(root.col, &quot;#20000000&quot;) }
    }

    ListModel {
        id: pathGalleryModel
        ListElement {
            name: &quot;Stroke and fill&quot;
            shapeUrl: &quot;tapableTriangle.qml&quot;
        }
        ListElement {
            name: &quot;Stroke or fill only&quot;
            shapeUrl: &quot;item2.qml&quot;
        }
        ListElement {
            name: &quot;Dash pattern&quot;
            shapeUrl: &quot;item4.qml&quot;
        }
        ListElement {
            name: &quot;Linear gradient&quot;
            shapeUrl: &quot;item5.qml&quot;
        }
        ListElement {
            name: &quot;Radial gradient&quot;
            shapeUrl: &quot;item3.qml&quot;
        }
        ListElement {
            name: &quot;Fill rules&quot;
            shapeUrl: &quot;item6.qml&quot;
        }
        ListElement {
            name: &quot;Join styles&quot;
            shapeUrl: &quot;item7.qml&quot;
        }
        ListElement {
            name: &quot;Cap styles&quot;
            shapeUrl: &quot;item8.qml&quot;
        }
        ListElement {
            name: &quot;Quadratic curve&quot;
            shapeUrl: &quot;item9.qml&quot;
        }
        ListElement {
            name: &quot;Cubic curve&quot;
            shapeUrl: &quot;item10.qml&quot;
        }
        ListElement {
            name: &quot;Elliptical arc&quot;
            shapeUrl: &quot;item11.qml&quot;
        }
        ListElement {
            name: &quot;Gradient spread modes&quot;
            shapeUrl: &quot;item12.qml&quot;
        }
        ListElement {
            name: &quot;Arc direction&quot;
            shapeUrl: &quot;item13.qml&quot;
        }
        ListElement {
            name: &quot;Large/small arc&quot;
            shapeUrl: &quot;item14.qml&quot;
        }
        ListElement {
            name: &quot;Arc rotation&quot;
            shapeUrl: &quot;item15.qml&quot;
        }
        ListElement {
            name: &quot;Tiger&quot;
            shapeUrl: &quot;item17.qml&quot;
        }
    }

    property int gridSpacing: 10

    Component {
        id: pathGalleryDelegate
        Rectangle {
            border.color: &quot;purple&quot;
            width: grid.cellWidth - root.gridSpacing
            height: grid.cellHeight - root.gridSpacing
            Column {
                anchors.fill: parent
                anchors.margins: 4
                Item {
                    width: parent.width
                    height: parent.height - delegText.height
                    Loader {
                        source: Qt.resolvedUrl(shapeUrl)
                        anchors.fill: parent
                    }
                }
                Text {
                    id: delegText
                    text: model.name
                    font.pointSize: 16
                    anchors.horizontalCenter: parent.horizontalCenter
                }
            }
        }
    }

    Rectangle {
        anchors.fill: parent
        anchors.margins: 10
        color: &quot;lightBlue&quot;
        clip: true

        GridView {
            id: grid
            anchors.fill: parent
            anchors.margins: root.gridSpacing
            cellWidth: 300
            cellHeight: 300
            delegate: pathGalleryDelegate
            model: pathGalleryModel
        }
    }

    Text {
        anchors.right: parent.right
        Shape { id: dummyShape; ShapePath { } } // used only to get the renderer type
        color: &quot;darkBlue&quot;
        font.pointSize: 12
        property variant rendererStrings: [ &quot;Unknown&quot;, &quot;Generic (QtGui triangulator)&quot;, &quot;GL_NV_path_rendering&quot;, &quot;Software (QPainter)&quot; ]
        text: &quot;Active Shape backend: &quot; + rendererStrings[dummyShape.rendererType]
        SequentialAnimation on opacity {
            NumberAnimation { from: 1; to: 0; duration: 5000 }
            PauseAnimation { duration: 5000 }
            NumberAnimation { from: 0; to: 1; duration: 1000 }
            PauseAnimation { duration: 5000 }
            loops: Animation.Infinite
        }
    }
}

</db:programlisting>
</db:article>
