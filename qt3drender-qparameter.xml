<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QParameter Class</db:title>
<db:subtitle>Qt3DRender::QParameter</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides storage for a name and value pair. This maps to a shader uniform.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Qt3DRender/QParameter</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-parameter.xml" xlink:role="">Parameter</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qnode.xml" xlink:role="class">Qt3DCore::QNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> can be referenced by a <db:link xlink:href="qt3drender-qrenderpass.xml">QRenderPass</db:link>, <db:link xlink:href="qt3drender-qtechnique.xml">QTechnique</db:link>, <db:link xlink:href="qt3drender-qeffect.xml">QEffect</db:link>, <db:link xlink:href="qt3drender-qmaterial.xml">QMaterial</db:link>, <db:link xlink:href="qt3drender-qtechniquefilter.xml">QTechniqueFilter</db:link>, <db:link xlink:href="qt3drender-qrenderpassfilter.xml">QRenderPassFilter</db:link>. At runtime, depending on which shader is selected for a given step of the rendering, the value contained in a <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> will be converted and uploaded if the shader contains a uniform with a name matching that of the <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link>.</db:para>
<db:programlisting language="cpp">QParameter *param = new QParameter();
param-&gt;setName(QStringLiteral(&quot;diffuseColor&quot;));
param-&gt;setValue(QColor::fromRgbF(0.0f, 0.0f, 1.0f, 1.0f));

// Alternatively you can create and set a QParameter this way
QParameter *param2 = new QParameter(QStringLiteral(&quot;diffuseColor&quot;), QColor::fromRgbF(0.0f, 0.0f, 1.0f, 1.0f));

// Such QParameters will work with the following GLSL uniform shader declarations
// uniform vec4 diffuseColor;
// uniform vec3 diffuseColor;
// uniform vec2 diffuseColor;
// uniform float diffuseColor;
</db:programlisting>
<db:note>
<db:para>some care must be taken to ensure the value wrapped by a <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> can actually be converted to what the real uniform expect. Giving a value stored as an int where the actual shader uniform is of type float could result in undefined behaviors.</db:para>
</db:note>
<db:note>
<db:para>when the targeted uniform is an array, the name should be the name of the uniform with [0] appended to it.</db:para>
</db:note>
<db:note>
<db:para><db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> node can not be disabled.</db:para>
</db:note>
<db:programlisting language="cpp">QParameter *param = new QParameter();
QVariantList values = QVariantList() &lt;&lt; 0.0f &lt;&lt; 1.0f &lt;&lt; 2.0f &lt;&lt; 3.0f &lt;&lt; 4.0f &lt;&lt; 883.0f &lt;&lt; 1340.0f &lt;&lt; 1584.0f;

param-&gt;setName(QStringLiteral(&quot;diffuseValues[0]&quot;));
param-&gt;setValue(values);

// Matching GLSL shader uniform  declaration
// uniform float diffuseValues[8];
</db:programlisting>
<db:para>When it comes to texture support, the <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> value should be set to the appropriate <db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link> subclass that matches the sampler type of the shader uniform.</db:para>
<db:programlisting language="cpp">QTexture2D *texture = new QTexture2D();
...
QParameter *param = new QParameter();
param-&gt;setName(QStringLiteral(&quot;diffuseTexture&quot;));
param-&gt;setValue(QVariant::fromValue(texture));

// Works with the following GLSL uniform shader declaration
// uniform sampler2D diffuseTexture
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="name-prop">
<db:title>name : QString</db:title>
<db:para>Specifies the name of the parameter</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QString</db:type> <db:emphasis role="bold">name</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setName</db:emphasis>(const <db:type>QString</db:type> &amp;<db:emphasis>name</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">nameChanged</db:emphasis>(const <db:type>QString</db:type> &amp;<db:emphasis>name</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="value-prop">
<db:title>value : QVariant</db:title>
<db:para>Specifies the value of the parameter</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QVariant</db:type> <db:emphasis role="bold">value</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setValue</db:emphasis>(const <db:type>QVariant</db:type> &amp;<db:emphasis>dv</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">valueChanged</db:emphasis>(const <db:type>QVariant</db:type> &amp;<db:emphasis>value</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QParameter">
<db:title>[explicit] QParameter::QParameter(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a new <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> with the specified <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="QParameter-1">
<db:title>[explicit] QParameter::QParameter(const QString &amp;<db:emphasis>name</db:emphasis>, Qt3DRender::QAbstractTexture *<db:emphasis>texture</db:emphasis>, Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a new <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> with the specified <db:code role="parameter">parent</db:code> <db:code role="parameter">name</db:code> and takes its value from <db:code role="parameter">texture</db:code>.</db:para>
</db:section>
<db:section xml:id="QParameter-2">
<db:title>[explicit] QParameter::QParameter(const QString &amp;<db:emphasis>name</db:emphasis>, const QVariant &amp;<db:emphasis>value</db:emphasis>, Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs a new <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> with the specified <db:code role="parameter">parent</db:code> <db:code role="parameter">name</db:code> and <db:code role="parameter">value</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
