<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAbstractFunctor Class</db:title>
<db:subtitle>Qt3DCore::QAbstractFunctor</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qt3dcore-qabstractfunctor.xml">QAbstractFunctor</db:link> is an abstract base class for all functors.</db:para>
<db:para>This class was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAbstractFunctor</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3dcore)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3dcore)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dcore</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qtexturegenerator.xml" xlink:role="class">Qt3DRender::QTextureGenerator</db:link> and <db:link xlink:href="qt3drender-qtextureimagedatagenerator.xml" xlink:role="class">Qt3DRender::QTextureImageDataGenerator</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qt3dcore-qabstractfunctor.xml">QAbstractFunctor</db:link> is used as a base class for all functors and data generators in <db:link xlink:href="qt3dcore-module.xml">Qt3DCore</db:link> module.</db:para>
<db:para>When user defines a new functor or generator, they need to implement the <db:link xlink:href="qt3dcore-qabstractfunctor.xml#id">QAbstractFunctor::id</db:link>() method, which should be done using the <db:code>QT3D_FUNCTOR</db:code> macro in the class definition.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="dtor.QAbstractFunctor">
<db:title>[virtual] QAbstractFunctor::~QAbstractFunctor()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QAbstractFunctor</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QAbstractFunctor()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Desctructor</db:para>
</db:section>
<db:section xml:id="functor_cast">
<db:title>const T *QAbstractFunctor::functor_cast(const Qt3DCore::QAbstractFunctor *<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>const T *</db:type>
<db:methodname>functor_cast</db:methodname>
<db:methodparam>
<db:type>const Qt3DCore::QAbstractFunctor *</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">const T * functor_cast(const Qt3DCore::QAbstractFunctor *other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This method is used to cast functor <db:code role="parameter">other</db:code> to type T if the other is of type T (or of subclass); otherwise returns 0. This method works similarly to <db:link xlink:href="qobject.xml#qobject_cast-1">qobject_cast</db:link>(), except with functors derived from <db:link xlink:href="qt3dcore-qabstractfunctor.xml">QAbstractFunctor</db:link>.</db:para>
<db:warning>
<db:para>If T was not declared with <db:link xlink:href="qt3dcore-qabstractfunctor.xml#QT3D_FUNCTOR">QT3D_FUNCTOR</db:link> macro, then the results are undefined.</db:para>
</db:warning>
</db:section>
<db:section xml:id="id">
<db:title>[pure virtual] qintptr QAbstractFunctor::id() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>qintptr</db:type>
<db:methodname>id</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qintptr id() const = 0</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a pointer to the id of the functor.</db:para>
</db:section>
</db:section>
<db:section xml:id="macro-documentation">
<db:title>Macro Documentation</db:title>
<db:section xml:id="QT3D_FUNCTOR">
<db:title>QT3D_FUNCTOR(<db:emphasis>Class</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:methodname>QT3D_FUNCTOR</db:methodname>
<db:methodparam>
<db:type></db:type>
<db:parameter>Class</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">macrowithparams</db:synopsisinfo>
<db:synopsisinfo role="signature">QT3D_FUNCTOR(Class)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This macro assigns functor id to the <db:code role="parameter">Class</db:code>, which is used by <db:link xlink:href="qt3dcore-qabstractfunctor.xml#functor_cast">QAbstractFunctor::functor_cast</db:link> to determine if the cast can be done.</db:para>
</db:section>
</db:section>
</db:article>
