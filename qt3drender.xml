<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt3DRender Namespace</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Contains classes that enable 2D and 3D rendering.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Qt3DRender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Qt3DRender is part of <db:simplelist><db:member>qt3d-namespaces</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-assimpparser.xml" xlink:role="class">AssimpParser</db:link></db:title>
<db:para>Provides a generic way of loading various 3D assets format into a Qt3D scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qabstractattribute.xml" xlink:role="class">QAbstractAttribute</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qabstractbuffer.xml" xlink:role="class">QAbstractBuffer</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qabstracttextureimage.xml" xlink:role="class">QAbstractTextureImage</db:link></db:title>
<db:para>Encapsulates the necessary information to create an OpenGL texture image.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qabstracttextureprovider.xml" xlink:role="class">QAbstractTextureProvider</db:link></db:title>
<db:para>A base class to be used to provide textures.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qannotation.xml" xlink:role="class">QAnnotation</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qannotation.xml">QAnnotation</db:link> class provides ...</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qblendstate.xml" xlink:role="class">QBlendState</db:link></db:title>
<db:para>Encapsulates blending information.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qblendstateseparate.xml" xlink:role="class">QBlendStateSeparate</db:link></db:title>
<db:para>Encapsulates blending information.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qboundingvolumespecifier.xml" xlink:role="class">QBoundingVolumeSpecifier</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qbuffer.xml" xlink:role="class">QBuffer</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qcameraselector.xml" xlink:role="class">QCameraSelector</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qclipplane.xml" xlink:role="class">QClipPlane</db:link></db:title>
<db:para>Enables an additional OpenGL clipping plane that can be in shaders using gl_ClipDistance.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qcolormask.xml" xlink:role="class">QColorMask</db:link></db:title>
<db:para>Allows specifying which color components should be written to the currently bound frame buffer.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qcuboidgeometry.xml" xlink:role="class">QCuboidGeometry</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qcuboidmesh.xml" xlink:role="class">QCuboidMesh</db:link></db:title>
<db:para>A cube mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qcylindergeometry.xml" xlink:role="class">QCylinderGeometry</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qcylindermesh.xml" xlink:role="class">QCylinderMesh</db:link></db:title>
<db:para>A cylindrical mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qdiffusemapmaterial.xml" xlink:role="class">QDiffuseMapMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qdiffusemapmaterial.xml">QDiffuseMapMaterial</db:link> provides a default implementation of the phong lighting effect where the diffuse light component is read from a texture map.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qdiffusespecularmapmaterial.xml" xlink:role="class">QDiffuseSpecularMapMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qdiffusespecularmapmaterial.xml">QDiffuseSpecularMapMaterial</db:link> provides a default implementation of the phong lighting and bump effect where the diffuse and specular light components are read from texture maps.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qforwardrenderer.xml" xlink:role="class">QForwardRenderer</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qforwardrenderer.xml">Qt3DRender::QForwardRenderer</db:link> provides a default <db:link xlink:href="qt3drender-qframegraph.xml">FrameGraph</db:link> implementation of a forward renderer.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qframegraph.xml" xlink:role="class">QFrameGraph</db:link></db:title>
<db:para>Defines the rendering method to be used by the renderer.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qframegraphnode.xml" xlink:role="class">QFrameGraphNode</db:link></db:title>
<db:para>Base class of all <db:link xlink:href="qml-qt3d-render-framegraph.xml">FrameGraph</db:link> configuration nodes.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qframegraphselector.xml" xlink:role="class">QFrameGraphSelector</db:link></db:title>
<db:para><db:link xlink:href="qt3drender-qframegraphselector.xml">Qt3DRender::QFrameGraphSelector</db:link> provide a way to select a one or more subtree of the <db:link xlink:href="qml-qt3d-render-framegraph.xml">FrameGraph</db:link> at runtime.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qgeometry.xml" xlink:role="class">QGeometry</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qgeometryrenderer.xml" xlink:role="class">QGeometryRenderer</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qgoochmaterial.xml" xlink:role="class">QGoochMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qgoochmaterial.xml">QGoochMaterial</db:link> provides a material that implements the Gooch shading model, popular in CAD and CAM applications.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qgraphicsapifilter.xml" xlink:role="class">QGraphicsApiFilter</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qgraphicsapifilter.xml">QGraphicsApiFilter</db:link> class provides ...</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qlayer.xml" xlink:role="class">QLayer</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qlayer.xml">QLayer</db:link> class provides ...</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qlayerfilter.xml" xlink:role="class">QLayerFilter</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qlayerfilter.xml">QLayerFilter</db:link> class provides ...</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qlight.xml" xlink:role="class">QLight</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qmaterial.xml" xlink:role="class">QMaterial</db:link></db:title>
<db:para>Provides an abstract class that should be the base of all Material component classes in a scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qmesh.xml" xlink:role="class">QMesh</db:link></db:title>
<db:para>A custom mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qnodraw.xml" xlink:role="class">QNoDraw</db:link></db:title>
<db:para>When a <db:link xlink:href="qt3drender-qnodraw.xml">QNoDraw</db:link> node is present in a <db:link xlink:href="qml-qt3d-render-framegraph.xml">FrameGraph</db:link> branch, this prevents the renderer from rendering any primitive.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qnormaldiffusemapalphamaterial.xml" xlink:role="class">QNormalDiffuseMapAlphaMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qnormaldiffusemapalphamaterial.xml">QNormalDiffuseMapAlphaMaterial</db:link> provides a default implementation of the phong lighting and bump effect where the diffuse light component is read from a texture map and the normals of the mesh being rendered from a normal texture map. In addition, it defines an alpha to coverage and a depth test to be performed in the rendering pass.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qnormaldiffusemapmaterial.xml" xlink:role="class">QNormalDiffuseMapMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qnormaldiffusemapmaterial.xml">QNormalDiffuseMapMaterial</db:link> provides a default implementation of the phong lighting and bump effect where the diffuse light component is read from a texture map and the normals of the mesh being rendered from a normal texture map.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qnormaldiffusespecularmapmaterial.xml" xlink:role="class">QNormalDiffuseSpecularMapMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qnormaldiffusespecularmapmaterial.xml">QNormalDiffuseSpecularMapMaterial</db:link> provides a default implementation of the phong lighting and bump effect where the diffuse and specular light components are read from texture maps and the normals of the mesh being rendered from a normal texture map.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qobjectpicker.xml" xlink:role="class">QObjectPicker</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qobjectpicker.xml">QObjectPicker</db:link> class instantiates a component that can be used to interact with a QEntity by a process known as picking.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qparametermapping.xml" xlink:role="class">QParameterMapping</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qparametermapping.xml">QParameterMapping</db:link> class provides ...</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qpervertexcolormaterial.xml" xlink:role="class">QPerVertexColorMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qpervertexcolormaterial.xml">QPerVertexColorMaterial</db:link> class provides a default implementation for rendering the color properties set for each vertex.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qphongalphamaterial.xml" xlink:role="class">QPhongAlphaMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qphongalphamaterial.xml">QPhongAlphaMaterial</db:link> class provides a default implementation of the phong lighting effect with alpha.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qphongmaterial.xml" xlink:role="class">QPhongMaterial</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qphongmaterial.xml">QPhongMaterial</db:link> class provides a default implementation of the phong lighting effect.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qplanegeometry.xml" xlink:role="class">QPlaneGeometry</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qplanemesh.xml" xlink:role="class">QPlaneMesh</db:link></db:title>
<db:para>A square planar mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qpointlight.xml" xlink:role="class">QPointLight</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qpointsize.xml" xlink:role="class">QPointSize</db:link></db:title>
<db:para>Specifies the size of rasterized points. May either be set statically or by shader programs.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qshaderdata.xml" xlink:role="class">QShaderData</db:link></db:title>
<db:para>Provides a way of specifying values of a Uniform Block or a shader structure.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qskyboxentity.xml" xlink:role="class">QSkyboxEntity</db:link></db:title>
<db:para><db:link xlink:href="qt3drender-qskyboxentity.xml">Qt3DRender::QSkyboxEntity</db:link> is a convenience <db:link xlink:href="qt3dcore-qentity.xml">Qt3DCore::QEntity</db:link> subclass that can be used to insert a skybox in a 3D scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qspheregeometry.xml" xlink:role="class">QSphereGeometry</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qspheremesh.xml" xlink:role="class">QSphereMesh</db:link></db:title>
<db:para>A spherical mesh.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qspotlight.xml" xlink:role="class">QSpotLight</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qstateset.xml" xlink:role="class">QStateSet</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qstateset.xml">QStateSet</db:link> <db:link xlink:href="qt3drender-qframegraphnode.xml">FrameGraph</db:link> node offers a way of specifying a set of QRenderState objects to be applied during the execution of a framegraph branch.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture1d.xml" xlink:role="class">QTexture1D</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttextureprovider.xml">QAbstractTextureProvider</db:link> with a Target1D target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture1darray.xml" xlink:role="class">QTexture1DArray</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttextureprovider.xml">QAbstractTextureProvider</db:link> with a Target1DArray target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture2d.xml" xlink:role="class">QTexture2D</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttextureprovider.xml">QAbstractTextureProvider</db:link> with a Target2D target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture2darray.xml" xlink:role="class">QTexture2DArray</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttextureprovider.xml">QAbstractTextureProvider</db:link> with a Target2DArray target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture2dmultisample.xml" xlink:role="class">QTexture2DMultisample</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttextureprovider.xml">QAbstractTextureProvider</db:link> with a Target2DMultisample target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture2dmultisamplearray.xml" xlink:role="class">QTexture2DMultisampleArray</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttextureprovider.xml">QAbstractTextureProvider</db:link> with a Target2DMultisampleArray target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture3d.xml" xlink:role="class">QTexture3D</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttextureprovider.xml">QAbstractTextureProvider</db:link> with a Target3D target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexturebuffer.xml" xlink:role="class">QTextureBuffer</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttextureprovider.xml">QAbstractTextureProvider</db:link> with a TargetBuffer target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexturecubemap.xml" xlink:role="class">QTextureCubeMap</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttextureprovider.xml">QAbstractTextureProvider</db:link> with a TargetCubeMap target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexturecubemaparray.xml" xlink:role="class">QTextureCubeMapArray</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttextureprovider.xml">QAbstractTextureProvider</db:link> with a TargetCubeMapArray target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtextureimage.xml" xlink:role="class">QTextureImage</db:link></db:title>
<db:para>Encapsulates the necessary information to create an OpenGL texture image from an image source.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexturerectangle.xml" xlink:role="class">QTextureRectangle</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttextureprovider.xml">QAbstractTextureProvider</db:link> with a TargetRectangle target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexturewrapmode.xml" xlink:role="class">QTextureWrapMode</db:link></db:title>
<db:para>Defines the wrap mode a <db:link xlink:href="qt3drender-qabstracttextureprovider.xml">Qt3DRender::QAbstractTextureProvider</db:link> should apply to a texture.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtorusgeometry.xml" xlink:role="class">QTorusGeometry</db:link></db:title>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtorusmesh.xml" xlink:role="class">QTorusMesh</db:link></db:title>
<db:para>A custom mesh.</db:para>
</db:section>
</db:section>
<db:section xml:id="type-documentation">
<db:title>Type Documentation</db:title>
<db:section xml:id="QAbstractBufferPtr-typedef">
<db:title>QAbstractBufferPtr</db:title>
</db:section>
<db:section xml:id="QAttributeList-typedef">
<db:title>QAttributeList</db:title>
<db:para>A vector of {<db:link xlink:href="qt3drender-qabstractattribute.xml">QAbstractAttribute</db:link>}s.</db:para>
</db:section>
</db:section>
<db:section xml:id="function-documentation">
<db:title>Function Documentation</db:title>
<db:section xml:id="operator-not-eq">
<db:title>bool operator!=(const Qt3DRender::QGraphicsApiFilter &amp;<db:emphasis>reference</db:emphasis>, const Qt3DRender::QGraphicsApiFilter &amp;<db:emphasis>sample</db:emphasis>)</db:title>
<db:para>Returns <db:code>true</db:code> if <db:code role="parameter">reference</db:code> and <db:code role="parameter">sample</db:code> are different.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool operator==(const Qt3DRender::QGraphicsApiFilter &amp;<db:emphasis>reference</db:emphasis>, const Qt3DRender::QGraphicsApiFilter &amp;<db:emphasis>sample</db:emphasis>)</db:title>
<db:para>Returns <db:code>true</db:code> if <db:code role="parameter">reference</db:code> and <db:code role="parameter">sample</db:code> are equivalent.</db:para>
</db:section>
</db:section>
</db:article>
