<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt3DRender Namespace</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Contains classes that enable 2D and 3D rendering.</db:para>
<db:para>This namespace was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Qt3DRender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Qt3DRender is part of <db:simplelist><db:member>qt3d-namespaces</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="namespaces">
<db:title>Namespaces</db:title>
<db:section>
<db:title>namespace Qt3DRender::Quick</db:title>
</db:section>
<db:section>
<db:title>[since 5.7] namespace Qt3DRender::Render</db:title>
<db:para>This namespace was introduced in Qt 5.7.</db:para>
</db:section>
</db:section>
<db:section xml:id="classes">
<db:title>Classes</db:title>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qabstractlight.xml" xlink:role="class">QAbstractLight</db:link></db:title>
<db:para>Encapsulate a <db:link xlink:href="qt3drender-qabstractlight.xml">QAbstractLight</db:link> object in a Qt 3D scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qabstractraycaster.xml" xlink:role="class">QAbstractRayCaster</db:link></db:title>
<db:para>An abstract base class for ray casting in 3d scenes.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qabstracttexture.xml" xlink:role="class">QAbstractTexture</db:link></db:title>
<db:para>A base class to be used to provide textures.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qabstracttextureimage.xml" xlink:role="class">QAbstractTextureImage</db:link></db:title>
<db:para>Encapsulates the necessary information to create an OpenGL texture image.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qalphacoverage.xml" xlink:role="class">QAlphaCoverage</db:link></db:title>
<db:para>Enable alpha-to-coverage multisampling mode.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qalphatest.xml" xlink:role="class">QAlphaTest</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qalphatest.xml">QAlphaTest</db:link> class specify alpha reference test.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qblendequation.xml" xlink:role="class">QBlendEquation</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qblendequation.xml">QBlendEquation</db:link> class specifies the equation used for both the RGB blend equation and the Alpha blend equation.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qblendequationarguments.xml" xlink:role="class">QBlendEquationArguments</db:link></db:title>
<db:para>Encapsulates blending information: specifies how the incoming values (what's going to be drawn) are going to affect the existing values (what is already drawn).</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qblitframebuffer.xml" xlink:role="class">QBlitFramebuffer</db:link></db:title>
<db:para>FrameGraph node to transfer a rectangle of pixel values from one region of a render target to another.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qbuffercapture.xml" xlink:role="class">QBufferCapture</db:link></db:title>
<db:para>Exchanges buffer data between GPU and CPU.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qcamera.xml" xlink:role="class">QCamera</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qcamera.xml">QCamera</db:link> class defines a view point through which the scene will be rendered.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qcameralens.xml" xlink:role="class">QCameraLens</db:link></db:title>
<db:para><db:link xlink:href="qt3drender-qcameralens.xml">Qt3DRender::QCameraLens</db:link> specifies the projection matrix that will be used to define a Camera for a 3D scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qcameraselector.xml" xlink:role="class">QCameraSelector</db:link></db:title>
<db:para>Class to allow for selection of camera to be used.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qclearbuffers.xml" xlink:role="class">QClearBuffers</db:link></db:title>
<db:para>Class to clear buffers.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qclipplane.xml" xlink:role="class">QClipPlane</db:link></db:title>
<db:para>Enables an additional OpenGL clipping plane that can be in shaders using gl_ClipDistance.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qcolormask.xml" xlink:role="class">QColorMask</db:link></db:title>
<db:para>Allows specifying which color components should be written to the currently bound frame buffer.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qcomputecommand.xml" xlink:role="class">QComputeCommand</db:link></db:title>
<db:para>QComponent to issue work for the compute shader on GPU.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qcullface.xml" xlink:role="class">QCullFace</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qcullface.xml">QCullFace</db:link> class specifies whether front or back face culling is enabled.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qdebugoverlay.xml" xlink:role="class">QDebugOverlay</db:link></db:title>
<db:para>Enables a visual overlay with scene details.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qdepthrange.xml" xlink:role="class">QDepthRange</db:link></db:title>
<db:para>Enables remapping depth values written into the depth buffer.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qdepthtest.xml" xlink:role="class">QDepthTest</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qdepthtest.xml">QDepthTest</db:link> class tests the fragment shader's depth value against the depth of a sample being written to.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qdirectionallight.xml" xlink:role="class">QDirectionalLight</db:link></db:title>
<db:para>Encapsulate a Directional Light object in a Qt 3D scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qdispatchcompute.xml" xlink:role="class">QDispatchCompute</db:link></db:title>
<db:para>FrameGraph node to issue work for the compute shader on GPU.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qdithering.xml" xlink:role="class">QDithering</db:link></db:title>
<db:para>Enable dithering.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qeffect.xml" xlink:role="class">QEffect</db:link></db:title>
<db:para>The base class for effects in a Qt 3D scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qenvironmentlight.xml" xlink:role="class">QEnvironmentLight</db:link></db:title>
<db:para>Encapsulate an environment light object in a Qt 3D scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qfilterkey.xml" xlink:role="class">QFilterKey</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qfilterkey.xml">QFilterKey</db:link> class provides storage for filter keys and their values.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qframegraphnode.xml" xlink:role="class">QFrameGraphNode</db:link></db:title>
<db:para>Base class of all FrameGraph configuration nodes.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qfrontface.xml" xlink:role="class">QFrontFace</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qfrontface.xml">QFrontFace</db:link> class defines front and back facing polygons.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qfrustumculling.xml" xlink:role="class">QFrustumCulling</db:link></db:title>
<db:para>Enable frustum culling for the FrameGraph.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qgeometryrenderer.xml" xlink:role="class">QGeometryRenderer</db:link></db:title>
<db:para>Encapsulates geometry rendering.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qgraphicsapifilter.xml" xlink:role="class">QGraphicsApiFilter</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qgraphicsapifilter.xml">QGraphicsApiFilter</db:link> class identifies the API required for the attached <db:link xlink:href="qt3drender-qtechnique.xml">QTechnique</db:link>.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qlayer.xml" xlink:role="class">QLayer</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qlayer.xml">QLayer</db:link> class provides a way of filtering which entities will be rendered.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qlayerfilter.xml" xlink:role="class">QLayerFilter</db:link></db:title>
<db:para>Controls layers drawn in a frame graph branch.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qlevelofdetail.xml" xlink:role="class">QLevelOfDetail</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qlevelofdetail.xml">QLevelOfDetail</db:link> class provides a way of controlling the complexity of rendered entities based on their size on the screen.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qlevelofdetailboundingsphere.xml" xlink:role="class">QLevelOfDetailBoundingSphere</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qlevelofdetailboundingsphere.xml">QLevelOfDetailBoundingSphere</db:link> class provides a simple spherical volume, defined by its center and radius.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qlevelofdetailswitch.xml" xlink:role="class">QLevelOfDetailSwitch</db:link></db:title>
<db:para>Provides a way of enabling child entities based on distance or screen size.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qlinewidth.xml" xlink:role="class">QLineWidth</db:link></db:title>
<db:para>Specifies the width of rasterized lines.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qmaterial.xml" xlink:role="class">QMaterial</db:link></db:title>
<db:para>Provides an abstract class that should be the base of all material component classes in a scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qmemorybarrier.xml" xlink:role="class">QMemoryBarrier</db:link></db:title>
<db:para>Class to emplace a memory barrier.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qmesh.xml" xlink:role="class">QMesh</db:link></db:title>
<db:para>A custom mesh loader.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qmultisampleantialiasing.xml" xlink:role="class">QMultiSampleAntiAliasing</db:link></db:title>
<db:para>Enable multisample antialiasing.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qnodepthmask.xml" xlink:role="class">QNoDepthMask</db:link></db:title>
<db:para>Disable depth write.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qnodraw.xml" xlink:role="class">QNoDraw</db:link></db:title>
<db:para>When a <db:link xlink:href="qt3drender-qnodraw.xml">Qt3DRender::QNoDraw</db:link> node is present in a FrameGraph branch, this prevents the renderer from rendering any primitive.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qnopicking.xml" xlink:role="class">QNoPicking</db:link></db:title>
<db:para>When a <db:link xlink:href="qt3drender-qnopicking.xml">Qt3DRender::QNoPicking</db:link> node is present in a FrameGraph branch, this prevents the render aspect from performing picking selection for the given branch.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qobjectpicker.xml" xlink:role="class">QObjectPicker</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qobjectpicker.xml">QObjectPicker</db:link> class instantiates a component that can be used to interact with a QEntity by a process known as picking.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qpaintedtextureimage.xml" xlink:role="class">QPaintedTextureImage</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttextureimage.xml">QAbstractTextureImage</db:link> that can be written through a <db:link xlink:href="qpainter.xml">QPainter</db:link>.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qparameter.xml" xlink:role="class">QParameter</db:link></db:title>
<db:para>Provides storage for a name and value pair. This maps to a shader uniform.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qpickevent.xml" xlink:role="class">QPickEvent</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qpickevent.xml">QPickEvent</db:link> class holds information when an object is picked.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qpicklineevent.xml" xlink:role="class">QPickLineEvent</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qpicklineevent.xml">QPickLineEvent</db:link> class holds information when a segment of a line is picked.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qpickpointevent.xml" xlink:role="class">QPickPointEvent</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qpickpointevent.xml">QPickPointEvent</db:link> class holds information when a segment of a point cloud is picked.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qpicktriangleevent.xml" xlink:role="class">QPickTriangleEvent</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qpicktriangleevent.xml">QPickTriangleEvent</db:link> class holds information when a triangle is picked.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qpickingproxy.xml" xlink:role="class">QPickingProxy</db:link></db:title>
<db:para>Can be used to provide an alternate QGeometryView used only for picking.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qpickingsettings.xml" xlink:role="class">QPickingSettings</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qpickingsettings.xml">QPickingSettings</db:link> class specifies how entity picking is handled.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qpointlight.xml" xlink:role="class">QPointLight</db:link></db:title>
<db:para>Encapsulate a Point Light object in a Qt 3D scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qpointsize.xml" xlink:role="class">QPointSize</db:link></db:title>
<db:para>Specifies the size of rasterized points. May either be set statically or by shader programs.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qpolygonoffset.xml" xlink:role="class">QPolygonOffset</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qpolygonoffset.xml">QPolygonOffset</db:link> class sets the scale and steps to calculate depth values for polygon offsets.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qproximityfilter.xml" xlink:role="class">QProximityFilter</db:link></db:title>
<db:para>Select entities which are within a distance threshold of a target entity.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrastermode.xml" xlink:role="class">QRasterMode</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qrastermode.xml">QRasterMode</db:link> render state allows to control the type of rasterization to be performed.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qraycaster.xml" xlink:role="class">QRayCaster</db:link></db:title>
<db:para><db:link xlink:href="qt3drender-qraycaster.xml">Qt3DRender::QRayCaster</db:link> is used to perform ray casting tests in 3d world coordinates.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qraycasterhit.xml" xlink:role="class">QRayCasterHit</db:link></db:title>
<db:para>Details of a hit when casting a ray through a model.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrenderaspect.xml" xlink:role="class">QRenderAspect</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qrenderaspect.xml">QRenderAspect</db:link> class.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrendercapabilities.xml" xlink:role="class">QRenderCapabilities</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qrendercapabilities.xml">QRenderCapabilities</db:link> class holds settings related to available rendering engines.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrendercapture.xml" xlink:role="class">QRenderCapture</db:link></db:title>
<db:para>Frame graph node for render capture.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrendercapturereply.xml" xlink:role="class">QRenderCaptureReply</db:link></db:title>
<db:para>Receives the result of render capture request.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrenderpass.xml" xlink:role="class">QRenderPass</db:link></db:title>
<db:para>Encapsulates a Render Pass.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrenderpassfilter.xml" xlink:role="class">QRenderPassFilter</db:link></db:title>
<db:para>Provides storage for vectors of Filter Keys and Parameters.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrendersettings.xml" xlink:role="class">QRenderSettings</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qrendersettings.xml">QRenderSettings</db:link> class holds settings related to rendering process and host the active <db:link xlink:href="qt3drender-framegraph.xml">FrameGraph</db:link>.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrenderstate.xml" xlink:role="class">QRenderState</db:link></db:title>
<db:para>An abstract base class for all render states.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrenderstateset.xml" xlink:role="class">QRenderStateSet</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qrenderstateset.xml">QRenderStateSet</db:link> <db:link xlink:href="qt3drender-qframegraphnode.xml">FrameGraph</db:link> node offers a way of specifying a set of <db:link xlink:href="qt3drender-qrenderstate.xml">QRenderState</db:link> objects to be applied during the execution of a framegraph branch.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrendersurfaceselector.xml" xlink:role="class">QRenderSurfaceSelector</db:link></db:title>
<db:para>Provides a way of specifying the render surface.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrendertarget.xml" xlink:role="class">QRenderTarget</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qrendertarget.xml">QRenderTarget</db:link> class encapsulates a target (usually a frame buffer object) which the renderer can render into.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrendertargetoutput.xml" xlink:role="class">QRenderTargetOutput</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qrendertargetoutput.xml">QRenderTargetOutput</db:link> class allows the specification of an attachment of a render target (whether it is a color texture, a depth texture, etc... ).</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qrendertargetselector.xml" xlink:role="class">QRenderTargetSelector</db:link></db:title>
<db:para>Provides a way of specifying a render target.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qsceneloader.xml" xlink:role="class">QSceneLoader</db:link></db:title>
<db:para>Provides the facility to load an existing Scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qscissortest.xml" xlink:role="class">QScissorTest</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qscissortest.xml">QScissorTest</db:link> class discards fragments that fall outside of a certain rectangular portion of the screen.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qscreenraycaster.xml" xlink:role="class">QScreenRayCaster</db:link></db:title>
<db:para>Performe ray casting test based on screen coordinates.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qseamlesscubemap.xml" xlink:role="class">QSeamlessCubemap</db:link></db:title>
<db:para>Enables seamless cubemap texture filtering.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qsetfence.xml" xlink:role="class">QSetFence</db:link></db:title>
<db:para><db:link xlink:href="qml-qt3d-render-framegraphnode.xml">FrameGraphNode</db:link> used to insert a fence in the graphics command stream.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qshaderdata.xml" xlink:role="class">QShaderData</db:link></db:title>
<db:para>Provides a way of specifying values of a Uniform Block or a shader structure.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qshaderimage.xml" xlink:role="class">QShaderImage</db:link></db:title>
<db:para>Provides Image access to shader programs.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qshaderprogram.xml" xlink:role="class">QShaderProgram</db:link></db:title>
<db:para>Encapsulates a Shader Program.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qshaderprogrambuilder.xml" xlink:role="class">QShaderProgramBuilder</db:link></db:title>
<db:para>Generates a Shader Program content from loaded graphs.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qsharedgltexture.xml" xlink:role="class">QSharedGLTexture</db:link></db:title>
<db:para>Allows to use a <db:link xlink:href="qt3drender-qsharedgltexture.xml#textureId-prop">textureId</db:link> from a separate OpenGL context in a Qt 3D scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qsortpolicy.xml" xlink:role="class">QSortPolicy</db:link></db:title>
<db:para>Provides storage for the sort types to be used.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qspotlight.xml" xlink:role="class">QSpotLight</db:link></db:title>
<db:para>Encapsulate a Spot Light object in a Qt 3D scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qstencilmask.xml" xlink:role="class">QStencilMask</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qstencilmask.xml">QStencilMask</db:link> class controls the front and back writing of individual bits in the stencil planes.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qstenciloperation.xml" xlink:role="class">QStencilOperation</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qstenciloperation.xml">QStencilOperation</db:link> class specifies stencil operation.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qstenciloperationarguments.xml" xlink:role="class">QStencilOperationArguments</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qstenciloperationarguments.xml">QStencilOperationArguments</db:link> class sets the actions to be taken when stencil and depth tests fail.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qstenciltest.xml" xlink:role="class">QStencilTest</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qstenciltest.xml">QStencilTest</db:link> class specifies arguments for the stecil test.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qstenciltestarguments.xml" xlink:role="class">QStencilTestArguments</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qstenciltestarguments.xml">QStencilTestArguments</db:link> class specifies arguments for stencil test.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qsubtreeenabler.xml" xlink:role="class">QSubtreeEnabler</db:link></db:title>
<db:para>Enables or disables entire subtrees of framegraph nodes.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtechnique.xml" xlink:role="class">QTechnique</db:link></db:title>
<db:para>Encapsulates a Technique.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtechniquefilter.xml" xlink:role="class">QTechniqueFilter</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qframegraphnode.xml">QFrameGraphNode</db:link> used to select QTechniques to use.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture1d.xml" xlink:role="class">QTexture1D</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link> with a Target1D target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture1darray.xml" xlink:role="class">QTexture1DArray</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link> with a Target1DArray target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture2d.xml" xlink:role="class">QTexture2D</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link> with a Target2D target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture2darray.xml" xlink:role="class">QTexture2DArray</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link> with a Target2DArray target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture2dmultisample.xml" xlink:role="class">QTexture2DMultisample</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link> with a Target2DMultisample target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture2dmultisamplearray.xml" xlink:role="class">QTexture2DMultisampleArray</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link> with a Target2DMultisampleArray target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexture3d.xml" xlink:role="class">QTexture3D</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link> with a Target3D target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexturebuffer.xml" xlink:role="class">QTextureBuffer</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link> with a TargetBuffer target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexturecubemap.xml" xlink:role="class">QTextureCubeMap</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link> with a TargetCubeMap target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexturecubemaparray.xml" xlink:role="class">QTextureCubeMapArray</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link> with a TargetCubeMapArray target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexturedata.xml" xlink:role="class">QTextureData</db:link></db:title>
<db:para>The <db:link xlink:href="qt3drender-qtexturedata.xml">QTextureData</db:link> class stores texture information such as the target, height, width, depth, layers, wrap, and if mipmaps are enabled.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexturedataupdate.xml" xlink:role="class">QTextureDataUpdate</db:link></db:title>
<db:para><db:link xlink:href="qt3drender-qtexturedataupdate.xml">QTextureDataUpdate</db:link> holds content and information required to perform partial updates of a texture content.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexturegenerator.xml" xlink:role="class">QTextureGenerator</db:link></db:title>
<db:para>Provides the image data for a texture.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtextureimage.xml" xlink:role="class">QTextureImage</db:link></db:title>
<db:para>Encapsulates the necessary information to create an OpenGL texture image from an image source.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtextureimagedata.xml" xlink:role="class">QTextureImageData</db:link></db:title>
<db:para><db:link xlink:href="qt3drender-qtextureimagedata.xml">QTextureImageData</db:link> stores data representing a texture.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtextureimagedatagenerator.xml" xlink:role="class">QTextureImageDataGenerator</db:link></db:title>
<db:para>Provides texture image data for <db:link xlink:href="qt3drender-qabstracttextureimage.xml">QAbstractTextureImage</db:link>.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtextureloader.xml" xlink:role="class">QTextureLoader</db:link></db:title>
<db:para>Handles the texture loading and setting the texture's properties.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexturerectangle.xml" xlink:role="class">QTextureRectangle</db:link></db:title>
<db:para>A <db:link xlink:href="qt3drender-qabstracttexture.xml">QAbstractTexture</db:link> with a TargetRectangle target format.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qtexturewrapmode.xml" xlink:role="class">QTextureWrapMode</db:link></db:title>
<db:para>Defines the wrap mode a <db:link xlink:href="qt3drender-qabstracttexture.xml">Qt3DRender::QAbstractTexture</db:link> should apply to a texture.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qviewport.xml" xlink:role="class">QViewport</db:link></db:title>
<db:para>A viewport on the Qt3D Scene.</db:para>
</db:section>
<db:section>
<db:title>class <db:link xlink:href="qt3drender-qwaitfence.xml" xlink:role="class">QWaitFence</db:link></db:title>
<db:para><db:link xlink:href="qml-qt3d-render-framegraphnode.xml">FrameGraphNode</db:link> used to wait for a fence in the graphics command stream to become signaled.</db:para>
</db:section>
</db:section>
<db:section xml:id="type-documentation">
<db:title>Type Documentation</db:title>
<db:section xml:id="ParameterList-typedef">
<db:title>[alias] ParameterList</db:title>
<db:typedefsynopsis>
<db:typedefname>ParameterList</db:typedefname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:typedefsynopsis>
<db:para>A list of <db:link xlink:href="qt3drender-qparameter.xml">Qt3DRender::QParameter</db:link> parameters.</db:para>
</db:section>
<db:section xml:id="QTextureImageDataPtr-typedef">
<db:title>QTextureImageDataPtr</db:title>
<db:typedefsynopsis>
<db:typedefname>QTextureImageDataPtr</db:typedefname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:typedefsynopsis>
<db:para>Shared pointer to <db:link xlink:href="qt3drender-qtextureimagedata.xml">QTextureImageData</db:link>.</db:para>
</db:section>
</db:section>
<db:section xml:id="function-documentation">
<db:title>Function Documentation</db:title>
<db:section xml:id="operator-not-eq">
<db:title>bool operator!=(const Qt3DRender::QGraphicsApiFilter &amp;<db:emphasis>reference</db:emphasis>, const Qt3DRender::QGraphicsApiFilter &amp;<db:emphasis>sample</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>operator!=</db:methodname>
<db:methodparam>
<db:type>const Qt3DRender::QGraphicsApiFilter &amp;</db:type>
<db:parameter>reference</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const Qt3DRender::QGraphicsApiFilter &amp;</db:type>
<db:parameter>sample</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator!=(const Qt3DRender::QGraphicsApiFilter &amp;reference, const Qt3DRender::QGraphicsApiFilter &amp;sample)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if <db:code role="parameter">reference</db:code> and <db:code role="parameter">sample</db:code> are different.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool operator==(const Qt3DRender::QGraphicsApiFilter &amp;<db:emphasis>reference</db:emphasis>, const Qt3DRender::QGraphicsApiFilter &amp;<db:emphasis>sample</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>const Qt3DRender::QGraphicsApiFilter &amp;</db:type>
<db:parameter>reference</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const Qt3DRender::QGraphicsApiFilter &amp;</db:type>
<db:parameter>sample</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(const Qt3DRender::QGraphicsApiFilter &amp;reference, const Qt3DRender::QGraphicsApiFilter &amp;sample)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if <db:code role="parameter">reference</db:code> and <db:code role="parameter">sample</db:code> are equivalent.</db:para>
</db:section>
</db:section>
</db:article>
