<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QScxmlDynamicScxmlServiceFactory Class</db:title>
<db:productname>QtScxml</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Scxml Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qscxmldynamicscxmlservicefactory.xml">QScxmlDynamicScxmlServiceFactory</db:link> class creates SCXML service instances from documents loaded at runtime.</db:para>
<db:para>This class was introduced in Qt 5.8.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QScxmlDynamicScxmlServiceFactory</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += scxml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qscxmlinvokableservicefactory.xml" xlink:role="class">QScxmlInvokableServiceFactory</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Dynamically resolved services are used when loading <db:link xlink:href="http://www.w3.org/TR/scxml/">SCXML</db:link> content from files that a parent state machine requests at runtime, via the <db:code>srcexpr</db:code> attribute in the <db:code>&lt;invoke&gt;</db:code> element.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QScxmlDynamicScxmlServiceFactory">
<db:title>QScxmlDynamicScxmlServiceFactory::QScxmlDynamicScxmlServiceFactory(const QScxmlExecutableContent::InvokeInfo &amp;<db:emphasis>invokeInfo</db:emphasis>, const QVector&lt;QScxmlExecutableContent::StringId&gt; &amp;<db:emphasis>names</db:emphasis>, const QVector&lt;QScxmlExecutableContent::ParameterInfo&gt; &amp;<db:emphasis>parameters</db:emphasis>, QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QScxmlDynamicScxmlServiceFactory</db:methodname>
<db:methodparam>
<db:type>const QScxmlExecutableContent::InvokeInfo &amp;</db:type>
<db:parameter>invokeInfo</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QVector&lt;QScxmlExecutableContent::StringId&gt; &amp;</db:type>
<db:parameter>names</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QVector&lt;QScxmlExecutableContent::ParameterInfo&gt; &amp;</db:type>
<db:parameter>parameters</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QScxmlDynamicScxmlServiceFactory(const QScxmlExecutableContent::InvokeInfo &amp;invokeInfo, const QVector&lt;QScxmlExecutableContent::StringId&gt; &amp;names, const QVector&lt;QScxmlExecutableContent::ParameterInfo&gt; &amp;parameters, QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Creates a factory for dynamically resolved services, passing the attributes of the <db:code>&lt;invoke&gt;</db:code> element as <db:code role="parameter">invokeInfo</db:code>, any <db:code>&lt;param&gt;</db:code> child elements as <db:code role="parameter">parameters</db:code>, the content of the <db:code>names</db:code> attribute as <db:code role="parameter">names</db:code>, and the <db:link xlink:href="qobject.xml">QObject</db:link> parent <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="invoke">
<db:title>[override virtual] QScxmlInvokableService *QScxmlDynamicScxmlServiceFactory::invoke(QScxmlStateMachine *<db:emphasis>parentStateMachine</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:type>QScxmlInvokableService *</db:type>
<db:methodname>invoke</db:methodname>
<db:methodparam>
<db:type>QScxmlStateMachine *</db:type>
<db:parameter>parentStateMachine</db:parameter>
</db:methodparam>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QScxmlInvokableService * invoke(QScxmlStateMachine *parentStateMachine) override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qscxmlinvokableservicefactory.xml#invoke" role="function">QScxmlInvokableServiceFactory::invoke(QScxmlStateMachine *parentStateMachine)</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
