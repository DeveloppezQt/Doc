<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QWinJumpListCategory Class</db:title>
<db:productname>QtWinExtras</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Windows Extras Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qwinjumplistcategory.xml">QWinJumpListCategory</db:link> class represents a jump list category.</db:para>
<db:para>This class was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QWinJumpListCategory</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += winextras</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Type-enum">
<db:title>enum QWinJumpListCategory::Type</db:title>
<db:para>This enum describes the available <db:link xlink:href="qwinjumplistcategory.xml">QWinJumpListCategory</db:link> types.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwinjumplistcategory.xml">QWinJumpListCategory</db:link></db:emphasis>::Custom</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>A custom jump list category.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwinjumplistcategory.xml">QWinJumpListCategory</db:link></db:emphasis>::Recent</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>A jump list category of &quot;recent&quot; items.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwinjumplistcategory.xml">QWinJumpListCategory</db:link></db:emphasis>::Frequent</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>A jump list category of &quot;frequent&quot; items.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwinjumplistcategory.xml">QWinJumpListCategory</db:link></db:emphasis>::Tasks</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>A jump list category of tasks.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QWinJumpListCategory">
<db:title>[explicit] QWinJumpListCategory::QWinJumpListCategory(const QString &amp;<db:emphasis>title</db:emphasis> = QString())</db:title>
<db:para>Constructs a custom <db:link xlink:href="qwinjumplistcategory.xml">QWinJumpListCategory</db:link> with the specified <db:code role="parameter">title</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QWinJumpListCategory">
<db:title>[noexcept] QWinJumpListCategory::~QWinJumpListCategory()</db:title>
<db:para>Destroys the <db:link xlink:href="qwinjumplistcategory.xml">QWinJumpListCategory</db:link>.</db:para>
</db:section>
<db:section xml:id="addDestination">
<db:title>QWinJumpListItem *QWinJumpListCategory::addDestination(const QString &amp;<db:emphasis>filePath</db:emphasis>)</db:title>
<db:para>Adds a destination to the category pointing to <db:code role="parameter">filePath</db:code>.</db:para>
</db:section>
<db:section xml:id="addItem">
<db:title>void QWinJumpListCategory::addItem(QWinJumpListItem *<db:emphasis>item</db:emphasis>)</db:title>
<db:para>Adds an <db:code role="parameter">item</db:code> to the category.</db:para>
</db:section>
<db:section xml:id="addLink">
<db:title>QWinJumpListItem *QWinJumpListCategory::addLink(const QString &amp;<db:emphasis>title</db:emphasis>, const QString &amp;<db:emphasis>executablePath</db:emphasis>, const QStringList &amp;<db:emphasis>arguments</db:emphasis> = QStringList())</db:title>
<db:para>Adds a link to the category using <db:code role="parameter">title</db:code>, <db:code role="parameter">executablePath</db:code>, and optionally <db:code role="parameter">arguments</db:code>.</db:para>
</db:section>
<db:section xml:id="addLink-1">
<db:title>QWinJumpListItem *QWinJumpListCategory::addLink(const QIcon &amp;<db:emphasis>icon</db:emphasis>, const QString &amp;<db:emphasis>title</db:emphasis>, const QString &amp;<db:emphasis>executablePath</db:emphasis>, const QStringList &amp;<db:emphasis>arguments</db:emphasis> = QStringList())</db:title>
<db:para>This function overloads <db:link xlink:href="qwinjumplistcategory.xml#addLink">addLink</db:link>().</db:para>
<db:para>Adds a link to the category using <db:code role="parameter">icon</db:code>, <db:code role="parameter">title</db:code>, <db:code role="parameter">executablePath</db:code>, and optionally <db:code role="parameter">arguments</db:code>.</db:para>
</db:section>
<db:section xml:id="addSeparator">
<db:title>QWinJumpListItem *QWinJumpListCategory::addSeparator()</db:title>
<db:para>Adds a separator to the category.</db:para>
<db:note>
<db:para>Only tasks category supports separators.</db:para>
</db:note>
</db:section>
<db:section xml:id="clear">
<db:title>void QWinJumpListCategory::clear()</db:title>
<db:para>Clears the category.</db:para>
</db:section>
<db:section xml:id="count">
<db:title>int QWinJumpListCategory::count() const</db:title>
<db:para>Returns the amount of items in the category.</db:para>
</db:section>
<db:section xml:id="isEmpty">
<db:title>bool QWinJumpListCategory::isEmpty() const</db:title>
<db:para>Returns whether the category is empty.</db:para>
</db:section>
<db:section xml:id="isVisible">
<db:title>bool QWinJumpListCategory::isVisible() const</db:title>
<db:para>Returns whether the category is visible.</db:para>
</db:section>
<db:section xml:id="items">
<db:title>QList&lt;QWinJumpListItem *&gt; QWinJumpListCategory::items() const</db:title>
<db:para>Returns the list of items in the category.</db:para>
</db:section>
<db:section xml:id="setTitle">
<db:title>void QWinJumpListCategory::setTitle(const QString &amp;<db:emphasis>title</db:emphasis>)</db:title>
<db:para>Sets the category <db:code role="parameter">title</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwinjumplistcategory.xml#title">title</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setVisible">
<db:title>void QWinJumpListCategory::setVisible(bool <db:emphasis>visible</db:emphasis>)</db:title>
<db:para>Sets the category <db:code role="parameter">visible</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwinjumplistcategory.xml#isVisible">isVisible</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="title">
<db:title>QString QWinJumpListCategory::title() const</db:title>
<db:para>Returns the category title.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwinjumplistcategory.xml#setTitle">setTitle</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="type">
<db:title>QWinJumpListCategory::Type QWinJumpListCategory::type() const</db:title>
<db:para>Returns the category type.</db:para>
</db:section>
</db:section>
</db:article>
