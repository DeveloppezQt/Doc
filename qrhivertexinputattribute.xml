<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QRhiVertexInputAttribute Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Describes a single vertex input element.</db:para>
<db:para>This class was introduced in Qt 6.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>rhi/qrhi.h</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::GuiPrivate)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui-private</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The members specify the binding number, location, format, and offset for a single vertex input element.</db:para>
<db:note>
<db:para>For HLSL it is assumed that the vertex shader translated from SPIR-V uses <db:code>TEXCOORD&lt;location&gt;</db:code> as the semantic for each input. Hence no separate semantic name and index.</db:para>
</db:note>
<db:para>As an example, assume a vertex shader with the following inputs:</db:para>
<db:programlisting language="cpp" role="bad">layout(location = 0) in vec4 position;
layout(location = 1) in vec2 texcoord;
</db:programlisting>
<db:para>Now let's assume that we have 3 component vertex positions <db:code>(x, y, z)</db:code> and 2 component texture coordinates <db:code>(u, v)</db:code> are provided in a non-interleaved format in a buffer (or separate buffers even). Once two bindings are defined, the attributes could be specified as:</db:para>
<db:programlisting language="cpp">QRhiVertexInputLayout inputLayout;
inputLayout.setBindings({
    { 3 * sizeof(float) },
    { 2 * sizeof(float) }
});
inputLayout.setAttributes({
    { 0, 0, QRhiVertexInputAttribute::Float3, 0 },
    { 1, 1, QRhiVertexInputAttribute::Float2, 0 }
});
</db:programlisting>
<db:para>Once a graphics pipeline with this vertex input layout is bound, the vertex inputs could be set up like the following for drawing a cube with 36 vertices, assuming we have a single buffer with first the positions and then the texture coordinates:</db:para>
<db:programlisting language="cpp">const QRhiCommandBuffer::VertexInput vbufBindings[] = {
    { cubeBuf, 0 },
    { cubeBuf, 36 * 3 * sizeof(float) }
};
cb-&gt;setVertexInput(0, 2, vbufBindings);
</db:programlisting>
<db:para>When working with interleaved data, there will typically be just one binding, with multiple attributes referring to that same buffer binding point:</db:para>
<db:programlisting language="cpp">QRhiVertexInputLayout inputLayout;
inputLayout.setBindings({
    { 5 * sizeof(float) }
});
inputLayout.setAttributes({
    { 0, 0, QRhiVertexInputAttribute::Float3, 0 },
    { 0, 1, QRhiVertexInputAttribute::Float2, 3 * sizeof(float) }
});
</db:programlisting>
<db:para>and then:</db:para>
<db:programlisting language="cpp">const QRhiCommandBuffer::VertexInput vbufBinding(interleavedCubeBuf, 0);
cb-&gt;setVertexInput(0, 1, &amp;vbufBinding);
</db:programlisting>
<db:note>
<db:para>This is a RHI API with limited compatibility guarantees, see <db:link xlink:href="qrhi.xml">QRhi</db:link> for details.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qrhicommandbuffer.xml#setVertexInput">QRhiCommandBuffer::setVertexInput</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Format-enum">
<db:title>enum QRhiVertexInputAttribute::Format</db:title>
<db:para>Specifies the type of the element data.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::Float4</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Four component float vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::Float3</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Three component float vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::Float2</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Two component float vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::Float</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Float</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::UNormByte4</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>Four component normalized unsigned byte vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::UNormByte2</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>Two component normalized unsigned byte vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::UNormByte</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>Normalized unsigned byte</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::UInt4</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>Four component unsigned integer vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::UInt3</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para>Three component unsigned integer vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::UInt2</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para>Two component unsigned integer vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::UInt</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>Unsigned integer</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::SInt4</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>Four component signed integer vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::SInt3</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>Three component signed integer vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::SInt2</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>Two component signed integer vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::SInt</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>Signed integer</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::Half4</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para>Four component half precision (16 bit) float vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::Half3</db:code></db:para>
</db:td>
<db:td><db:code>16</db:code></db:td>
<db:td>
<db:para>Three component half precision (16 bit) float vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::Half2</db:code></db:para>
</db:td>
<db:td><db:code>17</db:code></db:td>
<db:td>
<db:para>Two component half precision (16 bit) float vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::Half</db:code></db:para>
</db:td>
<db:td><db:code>18</db:code></db:td>
<db:td>
<db:para>Half precision (16 bit) float</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::UShort4</db:code></db:para>
</db:td>
<db:td><db:code>19</db:code></db:td>
<db:td>
<db:para>Four component unsigned short (16 bit) integer vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::UShort3</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>Three component unsigned short (16 bit) integer vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::UShort2</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>Two component unsigned short (16 bit) integer vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::UShort</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>Unsigned short (16 bit) integer</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::SShort4</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>Four component signed short (16 bit) integer vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::SShort3</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td>
<db:para>Three component signed short (16 bit) integer vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::SShort2</db:code></db:para>
</db:td>
<db:td><db:code>25</db:code></db:td>
<db:td>
<db:para>Two component signed short (16 bit) integer vector</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qrhivertexinputattribute.xml">QRhiVertexInputAttribute</db:link></db:emphasis>::SShort</db:code></db:para>
</db:td>
<db:td><db:code>26</db:code></db:td>
<db:td>
<db:para>Signed short (16 bit) integer</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:note>
<db:para>Support for half precision floating point attributes is indicated at run time by the QRhi::Feature::HalfAttributes feature flag.</db:para>
</db:note>
<db:note>
<db:para>Direct3D 11/12 supports 16 bit input attributes, but does not support the Half3, UShort3 or SShort3 types. The D3D backends pass through Half3 as Half4, UShort3 as UShort4, and SShort3 as SShort4. To ensure cross platform compatibility, 16 bit inputs should be padded to 8 bytes.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QRhiVertexInputAttribute">
<db:title>QRhiVertexInputAttribute::QRhiVertexInputAttribute(int <db:emphasis>binding</db:emphasis>, int <db:emphasis>location</db:emphasis>, QRhiVertexInputAttribute::Format <db:emphasis>format</db:emphasis>, quint32 <db:emphasis>offset</db:emphasis>, int <db:emphasis>matrixSlice</db:emphasis> = -1)</db:title>
<db:para>Constructs a vertex input attribute description with the specified <db:code role="parameter">binding</db:code> number, <db:code role="parameter">location</db:code>, <db:code role="parameter">format</db:code>, and <db:code role="parameter">offset</db:code>.</db:para>
<db:para><db:code role="parameter">matrixSlice</db:code> should be -1 except when this attribute corresponds to a row or column of a matrix (for example, a 4x4 matrix becomes 4 vec4s, consuming 4 consecutive vertex input locations), in which case it is the index of the row or column. <db:code>location - matrixSlice</db:code> must always be equal to the <db:code>location</db:code> for the first row or column of the unrolled matrix.</db:para>
</db:section>
</db:section>
</db:article>
