<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QCommandLineOption Class</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qcommandlineoption.xml">QCommandLineOption</db:link> class defines a possible command-line option.</db:para>
<db:para>This class was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QCommandLineOption</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += core</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QCommandLineOption is part of <db:simplelist><db:member><db:link xlink:href="shared.xml">Implicitly Shared Classes</db:link></db:member><db:member>tools</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This class is used to describe an option on the command line. It allows different ways of defining the same option with multiple aliases possible. It is also used to describe how the option is used - it may be a flag (e.g. <db:code>-v</db:code>) or take a value (e.g. <db:code>-o file</db:code>).</db:para>
<db:para>Examples:</db:para>
<db:programlisting language="cpp">QCommandLineOption verboseOption(&quot;verbose&quot;, &quot;Verbose mode. Prints out more information.&quot;);
QCommandLineOption outputOption(QStringList() &lt;&lt; &quot;o&quot; &lt;&lt; &quot;output&quot;, &quot;Write generated data into &lt;file&gt;.&quot;, &quot;file&quot;);
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineparser.xml">QCommandLineParser</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Flag-enum">
<db:title>enum QCommandLineOption::Flag</db:title>
<db:bridgehead renderas="sect2">flags QCommandLineOption::Flags</db:bridgehead>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcommandlineoption.xml">QCommandLineOption</db:link></db:emphasis>::HiddenFromHelp</db:code></db:para>
</db:td>
<db:td><db:code>0x1</db:code></db:td>
<db:td>
<db:para>Hide this option in the user-visible help output. All options are visible by default. Setting this flag for a particular option makes it internal, i.e. not listed in the help output.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcommandlineoption.xml">QCommandLineOption</db:link></db:emphasis>::ShortOptionStyle</db:code></db:para>
</db:td>
<db:td><db:code>0x2</db:code></db:td>
<db:td>
<db:para>The option will always be understood as a short option, regardless of what was set by <db:link xlink:href="qcommandlineparser.xml#setSingleDashWordOptionMode">QCommandLineParser::setSingleDashWordOptionMode</db:link>. This allows flags such as <db:code>-DDEFINE=VALUE</db:code> or <db:code>-I/include/path</db:code> to be interpreted as short flags even when the parser is in <db:link xlink:href="qcommandlineparser.xml#SingleDashWordOptionMode-enum">QCommandLineParser::ParseAsLongOptions</db:link> mode.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>Flags</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;Flag&gt;. </db:code>It stores an OR combination of <db:code>Flag</db:code> values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#setFlags">QCommandLineOption::setFlags</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#flags">QCommandLineOption::flags</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QCommandLineOption-1">
<db:title>[explicit] QCommandLineOption::QCommandLineOption(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:para>Constructs a command line option object with the name <db:code role="parameter">name</db:code>.</db:para>
<db:para>The name can be either short or long. If the name is one character in length, it is considered a short name. Option names must not be empty, must not start with a dash or a slash character, must not contain a <db:code>=</db:code> and cannot be repeated.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#setDescription">setDescription</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#setValueName">setValueName</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#setDefaultValues">setDefaultValues</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QCommandLineOption-2">
<db:title>[explicit] QCommandLineOption::QCommandLineOption(const QStringList &amp;<db:emphasis>names</db:emphasis>)</db:title>
<db:para>Constructs a command line option object with the names <db:code role="parameter">names</db:code>.</db:para>
<db:para>This overload allows to set multiple names for the option, for instance <db:code>o</db:code> and <db:code>output</db:code>.</db:para>
<db:para>The names can be either short or long. Any name in the list that is one character in length is a short name. Option names must not be empty, must not start with a dash or a slash character, must not contain a <db:code>=</db:code> and cannot be repeated.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#setDescription">setDescription</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#setValueName">setValueName</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#setDefaultValues">setDefaultValues</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QCommandLineOption-3">
<db:title>QCommandLineOption::QCommandLineOption(const QString &amp;<db:emphasis>name</db:emphasis>, const QString &amp;<db:emphasis>description</db:emphasis>, const QString &amp;<db:emphasis>valueName</db:emphasis> = QString(), const QString &amp;<db:emphasis>defaultValue</db:emphasis> = QString())</db:title>
<db:para>Constructs a command line option object with the given arguments.</db:para>
<db:para>The name of the option is set to <db:code role="parameter">name</db:code>. The name can be either short or long. If the name is one character in length, it is considered a short name. Option names must not be empty, must not start with a dash or a slash character, must not contain a <db:code>=</db:code> and cannot be repeated.</db:para>
<db:para>The description is set to <db:code role="parameter">description</db:code>. It is customary to add a &quot;.&quot; at the end of the description.</db:para>
<db:para>In addition, the <db:code role="parameter">valueName</db:code> needs to be set if the option expects a value. The default value for the option is set to <db:code role="parameter">defaultValue</db:code>.</db:para>
<db:para>In Qt versions before 5.4, this constructor was <db:code>explicit</db:code>. In Qt 5.4 and later, it no longer is and can be used for C++11-style uniform initialization:</db:para>
<db:programlisting language="cpp">QCommandLineParser parser;
parser.addOption({&quot;verbose&quot;, &quot;Verbose mode. Prints out more information.&quot;});
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#setDescription">setDescription</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#setValueName">setValueName</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#setDefaultValues">setDefaultValues</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QCommandLineOption-4">
<db:title>QCommandLineOption::QCommandLineOption(const QStringList &amp;<db:emphasis>names</db:emphasis>, const QString &amp;<db:emphasis>description</db:emphasis>, const QString &amp;<db:emphasis>valueName</db:emphasis> = QString(), const QString &amp;<db:emphasis>defaultValue</db:emphasis> = QString())</db:title>
<db:para>Constructs a command line option object with the given arguments.</db:para>
<db:para>This overload allows to set multiple names for the option, for instance <db:code>o</db:code> and <db:code>output</db:code>.</db:para>
<db:para>The names of the option are set to <db:code role="parameter">names</db:code>. The names can be either short or long. Any name in the list that is one character in length is a short name. Option names must not be empty, must not start with a dash or a slash character, must not contain a <db:code>=</db:code> and cannot be repeated.</db:para>
<db:para>The description is set to <db:code role="parameter">description</db:code>. It is customary to add a &quot;.&quot; at the end of the description.</db:para>
<db:para>In addition, the <db:code role="parameter">valueName</db:code> needs to be set if the option expects a value. The default value for the option is set to <db:code role="parameter">defaultValue</db:code>.</db:para>
<db:para>In Qt versions before 5.4, this constructor was <db:code>explicit</db:code>. In Qt 5.4 and later, it no longer is and can be used for C++11-style uniform initialization:</db:para>
<db:programlisting language="cpp">QCommandLineParser parser;
parser.addOption({{&quot;o&quot;, &quot;output&quot;}, &quot;Write generated data into &lt;file&gt;.&quot;, &quot;file&quot;});
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#setDescription">setDescription</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#setValueName">setValueName</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#setDefaultValues">setDefaultValues</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QCommandLineOption">
<db:title>QCommandLineOption::QCommandLineOption(const QCommandLineOption &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a <db:link xlink:href="qcommandlineoption.xml">QCommandLineOption</db:link> object that is a copy of the <db:link xlink:href="qcommandlineoption.xml">QCommandLineOption</db:link> object <db:code role="parameter">other</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#operator-eq">operator=</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dtor.QCommandLineOption">
<db:title>[noexcept] QCommandLineOption::~QCommandLineOption()</db:title>
<db:para>Destroys the command line option object.</db:para>
</db:section>
<db:section xml:id="defaultValues">
<db:title>QStringList QCommandLineOption::defaultValues() const</db:title>
<db:para>Returns the default values set for this option.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#setDefaultValues">setDefaultValues</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="description">
<db:title>QString QCommandLineOption::description() const</db:title>
<db:para>Returns the description set for this option.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#setDescription">setDescription</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="flags">
<db:title>[since 5.8] QCommandLineOption::Flags QCommandLineOption::flags() const</db:title>
<db:para>Returns a set of flags that affect this command-line option.</db:para>
<db:para>This function was introduced in Qt 5.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#setFlags">setFlags</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#Flag-enum">QCommandLineOption::Flags</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="names">
<db:title>QStringList QCommandLineOption::names() const</db:title>
<db:para>Returns the names set for this option.</db:para>
</db:section>
<db:section xml:id="setDefaultValue">
<db:title>void QCommandLineOption::setDefaultValue(const QString &amp;<db:emphasis>defaultValue</db:emphasis>)</db:title>
<db:para>Sets the default value used for this option to <db:code role="parameter">defaultValue</db:code>.</db:para>
<db:para>The default value is used if the user of the application does not specify the option on the command line.</db:para>
<db:para>If <db:code role="parameter">defaultValue</db:code> is empty, the option has no default values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#defaultValues">defaultValues</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#setDefaultValues">setDefaultValues</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDefaultValues">
<db:title>void QCommandLineOption::setDefaultValues(const QStringList &amp;<db:emphasis>defaultValues</db:emphasis>)</db:title>
<db:para>Sets the list of default values used for this option to <db:code role="parameter">defaultValues</db:code>.</db:para>
<db:para>The default values are used if the user of the application does not specify the option on the command line.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#defaultValues">defaultValues</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#setDefaultValue">setDefaultValue</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setDescription">
<db:title>void QCommandLineOption::setDescription(const QString &amp;<db:emphasis>description</db:emphasis>)</db:title>
<db:para>Sets the description used for this option to <db:code role="parameter">description</db:code>.</db:para>
<db:para>It is customary to add a &quot;.&quot; at the end of the description.</db:para>
<db:para>The description is used by <db:link xlink:href="qcommandlineparser.xml#showHelp">QCommandLineParser::showHelp</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#description">description</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFlags">
<db:title>[since 5.8] void QCommandLineOption::setFlags(QCommandLineOption::Flags <db:emphasis>flags</db:emphasis>)</db:title>
<db:para>Set the set of flags that affect this command-line option to <db:code role="parameter">flags</db:code>.</db:para>
<db:para>This function was introduced in Qt 5.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#flags">flags</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#Flag-enum">QCommandLineOption::Flags</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setValueName">
<db:title>void QCommandLineOption::setValueName(const QString &amp;<db:emphasis>valueName</db:emphasis>)</db:title>
<db:para>Sets the name of the expected value, for the documentation, to <db:code role="parameter">valueName</db:code>.</db:para>
<db:para>Options without a value assigned have a boolean-like behavior: either the user specifies –option or they don't.</db:para>
<db:para>Options with a value assigned need to set a name for the expected value, for the documentation of the option in the help output. An option with names <db:code>o</db:code> and <db:code>output</db:code>, and a value name of <db:code>file</db:code> will appear as <db:code>-o, --output &lt;file&gt;</db:code>.</db:para>
<db:para>Call <db:link xlink:href="qcommandlineparser.xml#value">QCommandLineParser::value</db:link>() if you expect the option to be present only once, and <db:link xlink:href="qcommandlineparser.xml#values">QCommandLineParser::values</db:link>() if you expect that option to be present multiple times.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#valueName">valueName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="swap">
<db:title>[noexcept] void QCommandLineOption::swap(QCommandLineOption &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps option <db:code role="parameter">other</db:code> with this option. This operation is very fast and never fails.</db:para>
</db:section>
<db:section xml:id="valueName">
<db:title>QString QCommandLineOption::valueName() const</db:title>
<db:para>Returns the name of the expected value.</db:para>
<db:para>If empty, the option doesn't take a value.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#setValueName">setValueName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>[default, since 5.2] QCommandLineOption &amp;QCommandLineOption::operator=(QCommandLineOption &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Move-assigns <db:code role="parameter">other</db:code> to this <db:link xlink:href="qcommandlineoption.xml">QCommandLineOption</db:link> instance.</db:para>
<db:para>This function was introduced in Qt 5.2.</db:para>
</db:section>
<db:section xml:id="operator-eq-1">
<db:title>QCommandLineOption &amp;QCommandLineOption::operator=(const QCommandLineOption &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Makes a copy of the <db:code role="parameter">other</db:code> object and assigns it to this <db:link xlink:href="qcommandlineoption.xml">QCommandLineOption</db:link> object.</db:para>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for QCommandLineOption</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qcommandlineoption.xml">QCommandLineOption</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-member-function-documentation">
<db:title>Obsolete Member Function Documentation</db:title>
<db:section xml:id="isHidden">
<db:title>[since 5.6, deprecated] bool QCommandLineOption::isHidden() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Returns true if this option is omitted from the help output, false if the option is listed.</db:para>
<db:para>Use <db:link xlink:href="qcommandlineoption.xml#flags">flags</db:link>() &amp; <db:link xlink:href="qcommandlineoption.xml#Flag-enum">QCommandLineOption::HiddenFromHelp</db:link></db:para>
<db:para>This function was introduced in Qt 5.6.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#setHidden">setHidden</db:link>()</db:member>
<db:member><db:link xlink:href="qcommandlineoption.xml#Flag-enum">QCommandLineOption::HiddenFromHelp</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setHidden">
<db:title>[since 5.6, deprecated] void QCommandLineOption::setHidden(bool <db:emphasis>hide</db:emphasis>)</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Sets whether to hide this option in the user-visible help output.</db:para>
<db:para>All options are visible by default. Setting <db:code role="parameter">hide</db:code> to true for a particular option makes it internal, i.e. not listed in the help output.</db:para>
<db:para>Use <db:link xlink:href="qcommandlineoption.xml#setFlags">setFlags</db:link>(<db:link xlink:href="qcommandlineoption.xml#Flag-enum">QCommandLineOption::HiddenFromHelp</db:link>), <db:link xlink:href="qcommandlineoption.xml#Flag-enum">QCommandLineOption::HiddenFromHelp</db:link></db:para>
<db:para>This function was introduced in Qt 5.6.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcommandlineoption.xml#isHidden">isHidden</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:section>
</db:article>
