<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>MediaPlayer QML Type</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>Adds media playback to a scene.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtMultimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qmediaplayer.xml">QMediaPlayer</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>MediaPlayer is part of <db:simplelist><db:member>multimedia_qml</db:member><db:member>multimedia_audio_qml</db:member><db:member>multimedia_video_qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:programlisting language="qml">Text {
    text: &quot;Click Me!&quot;;
    font.pointSize: 24;
    width: 150; height: 50;

    MediaPlayer {
        id: playMusic
        source: &quot;music.wav&quot;
        audioOutput: AudioOutput {}
    }
    MouseArea {
        anchors.fill: parent
        onPressed:  { playMusic.play() }
    }
}
</db:programlisting>
<db:para>You can use <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml">MediaPlayer</db:link> together with a MultiMedia::AudioOutput to play audio content, or you can use it in conjunction with a Multimedia::VideoOutput for rendering video.</db:para>
<db:programlisting language="qml">Item {
    MediaPlayer {
        id: mediaplayer
        source: &quot;groovy_video.mp4&quot;
        audioOutput: AudioOutput {}
        videoOutput: videoOutput
    }

    VideoOutput {
        id: videoOutput
        anchors.fill: parent
    }

    MouseArea {
        anchors.fill: parent
        onPressed: mediaplayer.play();
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-audiooutput.xml">AudioOutput</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="activeAudioTrack-prop">
<db:title>activeAudioTrack : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>activeAudioTrack</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the track number of the currently active audio track. Set to <db:code>-1</db:code> to disable audio track.</db:para>
<db:para>The default property value is <db:code>0</db:code>: the first audio track.</db:para>
</db:section>
<db:section xml:id="activeSubtitleTrack-prop">
<db:title>activeSubtitleTrack : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>activeSubtitleTrack</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the track number of the currently active subtitle track. Set to <db:code>-1</db:code> to disable subtitle track.</db:para>
<db:para>The default property value is <db:code>-1</db:code>: no subtitles active.</db:para>
</db:section>
<db:section xml:id="activeVideoTrack-prop">
<db:title>activeVideoTrack : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>activeVideoTrack</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the track number of the currently active video audio track. Set to <db:code>-1</db:code> to disable video track.</db:para>
<db:para>The default property value is <db:code>0</db:code>: the first video track.</db:para>
</db:section>
<db:section xml:id="audioOutput-prop">
<db:title>audioOutput : AudioOutput</db:title>
<db:fieldsynopsis>
<db:type>AudioOutput</db:type>
<db:varname>audioOutput</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the target audio output. Accepts one <db:link xlink:href="qml-qtmultimedia-audiooutput.xml">AudioOutput</db:link> elements.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediaplayer.xml#audioOutput-prop">QMediaPlayer::setAudioOutput</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="audioTracks-prop">
<db:title>[read-only] audioTracks : list&lt;mediaMetaData&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;mediaMetaData&gt;</db:type>
<db:varname>audioTracks</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a list of metadata. Each index refers to an audio track.</db:para>
<db:para>The metadata holds properties describing the individual tracks. For audio tracks the <db:link xlink:href="qmediametadata.xml">Language</db:link> is usually the most important property.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-mediametadata.xml">mediaMetaData</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="bufferProgress-prop">
<db:title>[read-only] bufferProgress : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>bufferProgress</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds how much of the data buffer is currently filled, from <db:code>0.0</db:code> (empty) to <db:code>1.0</db:code> (full).</db:para>
<db:para>Playback can start or resume only when the buffer is entirely filled. When the buffer is filled, <db:code>MediaPlayer.Buffered</db:code> is true. When buffer progress is between <db:code>0.0</db:code> and <db:code>0.1</db:code>, <db:code>MediaPlayer.Buffering</db:code> is set to <db:code>true</db:code>.</db:para>
<db:para>A value lower than <db:code>1.0</db:code> implies that the property <db:code>MediaPlayer.StalledMedia</db:code> is <db:code>true</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#mediaStatus-prop">mediaStatus</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="duration-prop">
<db:title>[read-only] duration : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>duration</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the duration of the media in milliseconds.</db:para>
<db:para>If the media doesn't have a fixed duration (a live stream for example) this will be set to <db:code>0</db:code>.</db:para>
</db:section>
<db:section xml:id="error-prop">
<db:title>[read-only] error : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>error</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the error state of the audio. It can be one of the following.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Value</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qdtls.xml#QDtlsError-enum">NoError</db:link></db:para>
</db:td>
<db:td>
<db:para>There is no current error.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>ResourceError</db:para>
</db:td>
<db:td>
<db:para>The audio cannot be played due to a problem allocating resources.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>FormatError</db:para>
</db:td>
<db:td>
<db:para>The audio format is not supported.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>NetworkError</db:para>
</db:td>
<db:td>
<db:para>The audio cannot be played due to network issues.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>AccessDeniedError</db:para>
</db:td>
<db:td>
<db:para>The audio cannot be played due to insufficient permissions.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="errorString-prop">
<db:title>[read-only] errorString : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>errorString</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a string describing the current error condition in more detail.</db:para>
</db:section>
<db:section xml:id="hasAudio-prop">
<db:title>[read-only] hasAudio : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>hasAudio</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the media contains audio.</db:para>
</db:section>
<db:section xml:id="hasVideo-prop">
<db:title>[read-only] hasVideo : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>hasVideo</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the media contains video.</db:para>
</db:section>
<db:section xml:id="loops-prop">
<db:title>loops : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>loops</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Determines how often the media is played before the player stops. Set to MediaPlayer::Infinite to loop the current media file forever.</db:para>
<db:para>The default value is <db:code>1</db:code>. Setting this property to <db:code>0</db:code> has no effect.</db:para>
</db:section>
<db:section xml:id="mediaStatus-prop">
<db:title>[read-only] mediaStatus : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>mediaStatus</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the status of media loading. It can be one of the following:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Property value</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>NoMedia</db:para>
</db:td>
<db:td>
<db:para>No media has been set.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>LoadingMedia</db:para>
</db:td>
<db:td>
<db:para>The media is currently being loaded.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>LoadedMedia</db:para>
</db:td>
<db:td>
<db:para>The media has been loaded.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BufferingMedia</db:para>
</db:td>
<db:td>
<db:para>The media is buffering data.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>StalledMedia</db:para>
</db:td>
<db:td>
<db:para>Playback has been interrupted while the media is buffering data.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>BufferedMedia</db:para>
</db:td>
<db:td>
<db:para>The media has buffered data.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>EndOfMedia</db:para>
</db:td>
<db:td>
<db:para>The media has played to the end.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>InvalidMedia</db:para>
</db:td>
<db:td>
<db:para>The media cannot be played.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="metaData-prop">
<db:title>[read-only] metaData : mediaMetaData</db:title>
<db:fieldsynopsis>
<db:type>mediaMetaData</db:type>
<db:varname>metaData</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns meta data for the current media used by the media player.</db:para>
<db:para>Meta data can contain information such as the title of the video or its creation date.</db:para>
<db:note>
<db:para>The Windows implementation provides metadata only for media located on the local file system.</db:para>
</db:note>
</db:section>
<db:section xml:id="playbackRate-prop">
<db:title>playbackRate : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>playbackRate</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the rate at which media is played at as a multiple of the normal rate.</db:para>
<db:para>For more information, see <db:link xlink:href="qmediaplayer.xml#playbackRate">QMediaPlayer::playbackRate</db:link>.</db:para>
<db:para>Defaults to <db:code>1.0</db:code>.</db:para>
</db:section>
<db:section xml:id="playbackState-prop">
<db:title>[read-only] playbackState : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>playbackState</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the state of media playback. It can be one of the following:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Property value</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>PlayingState</db:para>
</db:td>
<db:td>
<db:para>The media is currently playing. This indicates the same as the <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#playing-prop">playing</db:link> property.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>PausedState</db:para>
</db:td>
<db:td>
<db:para>Playback of the media has been suspended.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>StoppedState</db:para>
</db:td>
<db:td>
<db:para>Playback of the media is yet to begin.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="playing-prop">
<db:title>[read-only, since 6.5] playing : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>playing</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Indicates whether the media is currently playing.</db:para>
<db:para>This property was introduced in Qt 6.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#playbackState-prop">playbackState</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="position-prop">
<db:title>position : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>position</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The value is the current playback position, expressed in milliseconds since the beginning of the media. Periodically changes in the position will be indicated with the positionChanged() signal.</db:para>
<db:para>If the <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#seekable-prop">seekable</db:link> property is true, this property can be set to milliseconds.</db:para>
</db:section>
<db:section xml:id="seekable-prop">
<db:title>[read-only] seekable : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>seekable</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#position-prop">position</db:link> of the media can be changed.</db:para>
</db:section>
<db:section xml:id="source-prop">
<db:title>source : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>source</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the source URL of the media.</db:para>
<db:programlisting language="qml">Item {
    MediaPlayer {
        id: mediaplayer
        source: &quot;file:///test.mp4&quot;
        videoOutput: videoOutput
        audioOutput: AudioOutput {

        }
    }

    VideoOutput {
        id: videoOutput
        anchors.fill: parent
    }

    MouseArea {
        id: playArea
        anchors.fill: parent
        onPressed: mediaplayer.play();
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediaplayer.xml#setSource">QMediaPlayer::setSource</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="subtitleTracks-prop">
<db:title>[read-only] subtitleTracks : list&lt;mediaMetaData&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;mediaMetaData&gt;</db:type>
<db:varname>subtitleTracks</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a list of metadata. Each index refers to a subtitle track.</db:para>
<db:para>The metadata holds properties describing the individual tracks. For subtitle tracks the <db:link xlink:href="qmediametadata.xml">Language</db:link> is usually the most important property.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-mediametadata.xml">mediaMetaData</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="videoOutput-prop">
<db:title>videoOutput : VideoOutput</db:title>
<db:fieldsynopsis>
<db:type>VideoOutput</db:type>
<db:varname>videoOutput</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the target video output. Accepts one <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link> elements.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediaplayer.xml#videoOutput-prop">QMediaPlayer::setVideoOutput</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="videoTracks-prop">
<db:title>[read-only] videoTracks : list&lt;mediaMetaData&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;mediaMetaData&gt;</db:type>
<db:varname>videoTracks</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds a list of metadata. Each index refers to a video track.</db:para>
<db:para>The metadata holds properties describing the individual tracks.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-mediametadata.xml">mediaMetaData</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="errorOccurred-signal">
<db:title>errorOccurred(<db:emphasis>error</db:emphasis>, <db:emphasis>errorString</db:emphasis>)</db:title>
<db:para>This signal is emitted when an <db:code role="parameter">error</db:code> has occurred. The <db:code role="parameter">errorString</db:code> parameter may contain more detailed information about the error.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onErrorOccurred</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qmediaplayer.xml#Error-enum">QMediaPlayer::Error</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="playbackStateChanged-signal">
<db:title>playbackStateChanged()</db:title>
<db:para>This signal is emitted when the <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#playbackState-prop">playbackState</db:link> property is altered.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onPlaybackStateChanged</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="pause-method">
<db:title>pause()</db:title>
<db:para>Pauses playback of the media.</db:para>
<db:para>Sets the <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#playbackState-prop">playbackState</db:link> property to PausedState, and changes <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#playing-prop">playing</db:link> to <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="play-method">
<db:title>play()</db:title>
<db:para>Starts or resumes playback of the media.</db:para>
<db:para>Sets the <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#playbackState-prop">playbackState</db:link> property to PlayingState, and changes <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#playing-prop">playing</db:link> to <db:code>true</db:code>.</db:para>
</db:section>
<db:section xml:id="stop-method">
<db:title>stop()</db:title>
<db:para>Stops playback of the media.</db:para>
<db:para>Sets the <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#playbackState-prop">playbackState</db:link> property to StoppedState, and changes <db:link xlink:href="qml-qtmultimedia-mediaplayer.xml#playing-prop">playing</db:link> to <db:code>false</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
