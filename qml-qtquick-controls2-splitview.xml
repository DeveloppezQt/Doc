<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>SplitView QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Lays out items with a draggable splitter between each item.</db:para>
<db:para>This type was introduced in Qt 5.13.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.13</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Container</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>SplitView is part of <db:simplelist><db:member>qtquickcontrols2-containers</db:member><db:member>qtquickcontrols2-focusscopes</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-controls2-splitview.xml">SplitView</db:link> is a control that lays out items horizontally or vertically with a draggable splitter between each item.</db:para>
<db:para><db:link xlink:href="qml-qtquick-controls2-splitview.xml">SplitView</db:link> supports the following attached properties on items it manages:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumWidth-attached-prop">SplitView.minimumWidth</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumHeight-attached-prop">SplitView.minimumHeight</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredWidth-attached-prop">SplitView.preferredWidth</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredHeight-attached-prop">SplitView.preferredHeight</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumWidth-attached-prop">SplitView.maximumWidth</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumHeight-attached-prop">SplitView.maximumHeight</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-splitview.xml#fillWidth-attached-prop">SplitView.fillWidth</db:link> (true for only one child)</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-splitview.xml#fillHeight-attached-prop">SplitView.fillHeight</db:link> (true for only one child)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>In addition, each handle has the following read-only attached properties:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-splithandle.xml#hovered-attached-prop">SplitHandle.hovered</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-splithandle.xml#pressed-attached-prop">SplitHandle.pressed</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:note>
<db:para>Handles should be purely visual and not handle events, as it can interfere with their hovered and pressed states.</db:para>
</db:note>
<db:para>The preferred size of items in a <db:link xlink:href="qml-qtquick-controls2-splitview.xml">SplitView</db:link> can be specified via <db:link xlink:href="qml-qtquick-item.xml#implicitWidth-prop">implicitWidth</db:link> and <db:link xlink:href="qml-qtquick-item.xml#implicitHeight-prop">implicitHeight</db:link> or <db:code>SplitView.preferredWidth</db:code> and <db:code>SplitView.preferredHeight</db:code>:</db:para>
<db:programlisting language="cpp">SplitView {
    anchors.fill: parent

    Item {
        SplitView.preferredWidth: 50
    }

    // ...
}
</db:programlisting>
<db:para>For a horizontal <db:link xlink:href="qml-qtquick-controls2-splitview.xml">SplitView</db:link>, it's not necessary to specify the preferred height of each item, as they will be resized to the height of the view. This applies in reverse for vertical views.</db:para>
<db:para>When a split handle is dragged, the <db:code>SplitView.preferredWidth</db:code> or <db:code>SplitView.preferredHeight</db:code> property is overwritten, depending on the <db:link xlink:href="qml-qtquick-controls2-splitview.xml#orientation-prop">orientation</db:link> of the view.</db:para>
<db:para>To limit the size of items in a horizontal view, use the following properties:</db:para>
<db:programlisting language="cpp">SplitView {
    anchors.fill: parent

    Item {
        SplitView.minimumWidth: 25
        SplitView.preferredWidth: 50
        SplitView.maximumWidth: 100
    }

    // ...
}
</db:programlisting>
<db:para>To limit the size of items in a vertical view, use the following properties:</db:para>
<db:programlisting language="cpp">SplitView {
    anchors.fill: parent
    orientation: Qt.Vertical

    Item {
        SplitView.minimumHeight: 25
        SplitView.preferredHeight: 50
        SplitView.maximumHeight: 100
    }

    // ...
}
</db:programlisting>
<db:para>There will always be one item (the fill item) in the <db:link xlink:href="qml-qtquick-controls2-splitview.xml">SplitView</db:link> that has <db:code>SplitView.fillWidth</db:code> set to <db:code>true</db:code> (or <db:code>SplitView.fillHeight</db:code>, if <db:link xlink:href="qml-qtquick-controls2-splitview.xml#orientation-prop">orientation</db:link> is <db:code>Qt.Vertical</db:code>). This means that the item will get all leftover space when other items have been laid out. By default, the last visible child of the <db:link xlink:href="qml-qtquick-controls2-splitview.xml">SplitView</db:link> will have this set, but it can be changed by explicitly setting <db:code>fillWidth</db:code> to <db:code>true</db:code> on another item.</db:para>
<db:para>A handle can belong to the item either on the left or top side, or on the right or bottom side:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>If the fill item is to the right: the handle belongs to the left item.</db:para>
</db:listitem>
<db:listitem>
<db:para>If the fill item is on the left: the handle belongs to the right item.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>To create a <db:link xlink:href="qml-qtquick-controls2-splitview.xml">SplitView</db:link> with three items, and let the center item get superfluous space, one could do the following:</db:para>
<db:programlisting language="cpp">SplitView {
    anchors.fill: parent
    orientation: Qt.Horizontal

    Rectangle {
        implicitWidth: 200
        SplitView.maximumWidth: 400
        color: &quot;lightblue&quot;
        Label {
            text: &quot;View 1&quot;
            anchors.centerIn: parent
        }
    }
    Rectangle {
        id: centerItem
        SplitView.minimumWidth: 50
        SplitView.fillWidth: true
        color: &quot;lightgray&quot;
        Label {
            text: &quot;View 2&quot;
            anchors.centerIn: parent
        }
    }
    Rectangle {
        implicitWidth: 200
        color: &quot;lightgreen&quot;
        Label {
            text: &quot;View 3&quot;
            anchors.centerIn: parent
        }
    }
}
</db:programlisting>
<db:section xml:id="serializing-splitview-s-state">
<db:title>Serializing SplitView's State</db:title>
<db:para>The main purpose of <db:link xlink:href="qml-qtquick-controls2-splitview.xml">SplitView</db:link> is to allow users to easily configure the size of various UI elements. In addition, the user's preferred sizes should be remembered across sessions. To achieve this, the values of the <db:code>SplitView.preferredWidth</db:code> and <db:code>SplitView.preferredHeight</db:code> properties can be serialized using the <db:link xlink:href="qml-qtquick-controls2-splitview.xml#saveState-method">saveState</db:link>() and <db:link xlink:href="qml-qtquick-controls2-splitview.xml#restoreState-method">restoreState</db:link>() functions:</db:para>
<db:programlisting language="qml">import QtQuick.Controls
import Qt.labs.settings

ApplicationWindow {
    // ...

    Component.onCompleted: splitView.restoreState(settings.splitView)
    Component.onDestruction: settings.splitView = splitView.saveState()

    Settings {
        id: settings
        property var splitView
    }

    SplitView {
        id: splitView
        // ...
    }
}
</db:programlisting>
<db:para>Alternatively, the <db:link xlink:href="qml-qt-labs-settings-settings.xml#value-method">value</db:link>() and <db:link xlink:href="qml-qt-labs-settings-settings.xml#setValue-method">setValue</db:link>() functions of <db:link xlink:href="qpainter.xml#settings">Settings</db:link> can be used:</db:para>
<db:programlisting language="qml">import QtQuick.Controls
import Qt.labs.settings

ApplicationWindow {
    // ...

    Component.onCompleted: splitView.restoreState(settings.value(&quot;ui/splitview&quot;))
    Component.onDestruction: settings.setValue(&quot;ui/splitview&quot;, splitView.saveState())

    Settings {
        id: settings
    }

    SplitView {
        id: splitView
        // ...
    }
}
</db:programlisting>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-splithandle.xml">SplitHandle</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-splitview">Customizing SplitView</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-containers.xml">Container Controls</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="handle-prop">
<db:title>handle : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>handle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the handle component.</db:para>
<db:para>An instance of this component will be instantiated <db:code>count - 1</db:code> times, as long as <db:code>count</db:code> is greater than than <db:code>1</db:code>.</db:para>
<db:para>The following table explains how each handle will be resized depending on the orientation of the split view:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Orientation</db:para>
</db:th>
<db:th>
<db:para>Handle Width</db:para>
</db:th>
<db:th>
<db:para>Handle Height</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:code>Qt.Horizontal</db:code></db:para>
</db:td>
<db:td>
<db:para><db:code>implicitWidth</db:code></db:para>
</db:td>
<db:td>
<db:para>The <db:code>height</db:code> of the <db:link xlink:href="qml-qtquick-controls2-splitview.xml">SplitView</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:code>Qt.Vertical</db:code></db:para>
</db:td>
<db:td>
<db:para>The <db:code>width</db:code> of the <db:link xlink:href="qml-qtquick-controls2-splitview.xml">SplitView</db:link>.</db:para>
</db:td>
<db:td>
<db:para><db:code>implicitHeight</db:code></db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-splitview">Customizing SplitView</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="orientation-prop">
<db:title>orientation : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>orientation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the orientation of the <db:link xlink:href="qml-qtquick-controls2-splitview.xml">SplitView</db:link>.</db:para>
<db:para>The orientation determines how the split items are laid out:</db:para>
<db:para>Possible values:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Qt.Horizontal</db:para>
</db:td>
<db:td>
<db:para>The items are laid out horizontally (default).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.Vertical</db:para>
</db:td>
<db:td>
<db:para>The items are laid out vertically.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="resizing-prop">
<db:title>[read-only] resizing : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>resizing</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property is <db:code>true</db:code> when the user is resizing split items by dragging on the splitter handles.</db:para>
</db:section>
</db:section>
<db:section xml:id="attached-property-documentation">
<db:title>Attached Property Documentation</db:title>
<db:section xml:id="fillHeight-attached-prop">
<db:title>SplitView.fillHeight : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>SplitView.fillHeight</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property controls whether the item takes the remaining space in the split view after all other items have been laid out.</db:para>
<db:para>By default, the last visible child of the split view will have this set, but it can be changed by explicitly setting <db:code>fillHeight</db:code> to <db:code>true</db:code> on another item.</db:para>
<db:para>The height of a split item with <db:code>fillHeight</db:code> set to <db:code>true</db:code> is still restricted within its <db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumHeight-attached-prop">minimumHeight</db:link> and <db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumHeight-attached-prop">maximumHeight</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumHeight-attached-prop">minimumHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredHeight-attached-prop">preferredHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumHeight-attached-prop">maximumHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#fillWidth-attached-prop">fillWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fillWidth-attached-prop">
<db:title>SplitView.fillWidth : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>SplitView.fillWidth</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property controls whether the item takes the remaining space in the split view after all other items have been laid out.</db:para>
<db:para>By default, the last visible child of the split view will have this set, but it can be changed by explicitly setting <db:code>fillWidth</db:code> to <db:code>true</db:code> on another item.</db:para>
<db:para>The width of a split item with <db:code>fillWidth</db:code> set to <db:code>true</db:code> is still restricted within its <db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumWidth-attached-prop">minimumWidth</db:link> and <db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumWidth-attached-prop">maximumWidth</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumWidth-attached-prop">minimumWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredWidth-attached-prop">preferredWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumWidth-attached-prop">maximumWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#fillHeight-attached-prop">fillHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="maximumHeight-attached-prop">
<db:title>SplitView.maximumHeight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>SplitView.maximumHeight</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property controls the maximum height of the split item. The <db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredHeight-attached-prop">preferredHeight</db:link> is bound within the <db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumHeight-attached-prop">minimumHeight</db:link> and maximumHeight. A split item cannot be dragged to be larger than its <db:code>maximumHeight</db:code>.</db:para>
<db:para>The default value is <db:code>Infinity</db:code>. To reset this property to its default value, set it to <db:code>undefined</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumHeight-attached-prop">minimumHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredHeight-attached-prop">preferredHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#fillHeight-attached-prop">fillHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumWidth-attached-prop">maximumWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="maximumWidth-attached-prop">
<db:title>SplitView.maximumWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>SplitView.maximumWidth</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property controls the maximum width of the split item. The <db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredWidth-attached-prop">preferredWidth</db:link> is bound within the <db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumWidth-attached-prop">minimumWidth</db:link> and maximumWidth. A split item cannot be dragged to be larger than its <db:code>maximumWidth</db:code>.</db:para>
<db:para>The default value is <db:code>Infinity</db:code>. To reset this property to its default value, set it to <db:code>undefined</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumWidth-attached-prop">minimumWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredWidth-attached-prop">preferredWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#fillWidth-attached-prop">fillWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumHeight-attached-prop">maximumHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="minimumHeight-attached-prop">
<db:title>SplitView.minimumHeight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>SplitView.minimumHeight</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property controls the minimum height of the split item. The <db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredHeight-attached-prop">preferredHeight</db:link> is bound within the minimumHeight and <db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumHeight-attached-prop">maximumHeight</db:link>. A split item cannot be dragged to be smaller than its <db:code>minimumHeight</db:code>.</db:para>
<db:para>The default value is <db:code>0</db:code>. To reset this property to its default value, set it to <db:code>undefined</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumHeight-attached-prop">maximumHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredHeight-attached-prop">preferredHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#fillHeight-attached-prop">fillHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumWidth-attached-prop">minimumWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="minimumWidth-attached-prop">
<db:title>SplitView.minimumWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>SplitView.minimumWidth</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property controls the minimum width of the split item. The <db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredWidth-attached-prop">preferredWidth</db:link> is bound within the minimumWidth and <db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumWidth-attached-prop">maximumWidth</db:link>. A split item cannot be dragged to be smaller than its <db:code>minimumWidth</db:code>.</db:para>
<db:para>The default value is <db:code>0</db:code>. To reset this property to its default value, set it to <db:code>undefined</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumWidth-attached-prop">maximumWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredWidth-attached-prop">preferredWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#fillWidth-attached-prop">fillWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumHeight-attached-prop">minimumHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="preferredHeight-attached-prop">
<db:title>SplitView.preferredHeight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>SplitView.preferredHeight</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property controls the preferred height of the split item. The preferred height will be used as the size of the item, and will be bound within the <db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumHeight-attached-prop">minimumHeight</db:link> and <db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumHeight-attached-prop">maximumHeight</db:link>. If the preferred height is not set, the item's <db:link xlink:href="qml-qtquick-item.xml#implicitHeight-prop">implicitHeight</db:link> will be used.</db:para>
<db:para>When a split item is resized, the preferredHeight will be set in order to keep track of the new size.</db:para>
<db:para>By default, this property is not set, and therefore <db:link xlink:href="qml-qtquick-item.xml#implicitHeight-prop">implicitHeight</db:link> will be used instead. To reset this property to its default value, set it to <db:code>undefined</db:code>.</db:para>
<db:note>
<db:para>Do not set the <db:link xlink:href="qml-qtquick-item.xml#height-prop">height</db:link> property of a split item, as it will be overwritten upon each layout of the <db:link xlink:href="qml-qtquick-controls2-splitview.xml">SplitView</db:link>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumHeight-attached-prop">minimumHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumHeight-attached-prop">maximumHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#fillHeight-attached-prop">fillHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredWidth-attached-prop">preferredWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="preferredWidth-attached-prop">
<db:title>SplitView.preferredWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>SplitView.preferredWidth</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property controls the preferred width of the split item. The preferred width will be used as the size of the item, and will be bound within the <db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumWidth-attached-prop">minimumWidth</db:link> and <db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumWidth-attached-prop">maximumWidth</db:link>. If the preferred width is not set, the item's <db:link xlink:href="qml-qtquick-item.xml#implicitWidth-prop">implicitWidth</db:link> will be used.</db:para>
<db:para>When a split item is resized, the preferredWidth will be set in order to keep track of the new size.</db:para>
<db:para>By default, this property is not set, and therefore <db:link xlink:href="qml-qtquick-item.xml#implicitWidth-prop">implicitWidth</db:link> will be used instead. To reset this property to its default value, set it to <db:code>undefined</db:code>.</db:para>
<db:note>
<db:para>Do not set the <db:link xlink:href="qml-qtquick-item.xml#width-prop">width</db:link> property of a split item, as it will be overwritten upon each layout of the <db:link xlink:href="qml-qtquick-controls2-splitview.xml">SplitView</db:link>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#minimumWidth-attached-prop">minimumWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#maximumWidth-attached-prop">maximumWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#fillWidth-attached-prop">fillWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#preferredHeight-attached-prop">preferredHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="view-attached-prop">
<db:title>SplitView.view : SplitView</db:title>
<db:fieldsynopsis>
<db:type>SplitView</db:type>
<db:varname>SplitView.view</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This attached property holds the split view of the item it is attached to, or <db:code>null</db:code> if the item is not in a split view.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="restoreState-method">
<db:title>bool restoreState(<db:emphasis>state</db:emphasis>)</db:title>
<db:para>Reads the preferred sizes from <db:code role="parameter">state</db:code> and applies them to the split items.</db:para>
<db:para>Returns <db:code>true</db:code> if the state was successfully restored, otherwise <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#serializing-splitview-s-state">Serializing SplitView's State</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#saveState-method">saveState</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="saveState-method">
<db:title>var saveState()</db:title>
<db:para>Saves the preferred sizes of split items into a byte array and returns it.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#serializing-splitview-s-state">Serializing SplitView's State</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-splitview.xml#restoreState-method">restoreState</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
