<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Popup QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 5.13.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Base type of popup-like user interface controls.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 2.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-controls2-dialog.xml" xlink:role="">Dialog</db:link>, <db:link xlink:href="qml-qtquick-controls2-drawer.xml" xlink:role="">Drawer</db:link>, <db:link xlink:href="qml-qtquick-controls2-menu.xml" xlink:role="">Menu</db:link>, and <db:link xlink:href="qml-qtquick-controls2-tooltip.xml" xlink:role="">ToolTip</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>QtObject</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Popup is part of <db:simplelist><db:member>qtquickcontrols2-popups</db:member><db:member>qtquickcontrols2-focusscopes</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Popup is the base type of popup-like user interface controls. It can be used with <db:link xlink:href="qml-qtquick-window-window.xml">Window</db:link> or <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link>.</db:para>
<db:programlisting language="qml">import QtQuick.Window 2.2
import QtQuick.Controls 2.12

ApplicationWindow {
    id: window
    width: 400
    height: 400
    visible: true

    Button {
        text: &quot;Open&quot;
        onClicked: popup.open()
    }

    Popup {
        id: popup
        x: 100
        y: 100
        width: 200
        height: 300
        modal: true
        focus: true
        closePolicy: Popup.CloseOnEscape | Popup.CloseOnPressOutsideParent
    }
}
</db:programlisting>
<db:para>In order to ensure that a popup is displayed above other items in the scene, it is recommended to use <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link>. <db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link> also provides background dimming effects.</db:para>
<db:para>Popup does not provide a layout of its own, but requires you to position its contents, for instance by creating a <db:link xlink:href="qml-qtquick-layouts-rowlayout.xml">RowLayout</db:link> or a <db:link xlink:href="qml-qtquick-layouts-columnlayout.xml">ColumnLayout</db:link>.</db:para>
<db:para>Items declared as children of a Popup are automatically parented to the Popups's <db:link xlink:href="qml-qtquick-controls2-popup.xml#contentItem-prop">contentItem</db:link>. Items created dynamically need to be explicitly parented to the <db:link xlink:href="qml-qtquick-controls2-popup.xml#contentItem-prop">contentItem</db:link>.</db:para>
<db:section xml:id="popup-layout">
<db:title>Popup Layout</db:title>
<db:para>The following diagram illustrates the layout of a popup within a window:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-popup.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The <db:link xlink:href="qml-qtquick-controls2-popup.xml#implicitWidth-prop">implicitWidth</db:link> and <db:link xlink:href="qml-qtquick-controls2-popup.xml#implicitHeight-prop">implicitHeight</db:link> of a popup are typically based on the implicit sizes of the background and the content item plus any insets and paddings. These properties determine how large the popup will be when no explicit <db:link xlink:href="qml-qtquick-controls2-popup.xml#width-prop">width</db:link> or <db:link xlink:href="qml-qtquick-controls2-popup.xml#height-prop">height</db:link> is specified.</db:para>
<db:para>The geometry of the <db:link xlink:href="qml-qtquick-controls2-popup.xml#contentItem-prop">contentItem</db:link> is determined by the padding. The following example reserves 10px padding between the boundaries of the popup and its content:</db:para>
<db:programlisting language="cpp">Popup {
    padding: 10

    contentItem: Text {
        text: &quot;Content&quot;
    }
}
</db:programlisting>
<db:para>The <db:link xlink:href="qml-qtquick-controls2-popup.xml#background-prop">background</db:link> item fills the entire width and height of the popup, unless insets or an explicit size have been given for it.</db:para>
<db:para>Negative insets can be used to make the background larger than the popup. The following example uses negative insets to place a shadow outside the popup's boundaries:</db:para>
<db:programlisting language="cpp">Popup {
    topInset: -2
    leftInset: -2
    rightInset: -6
    bottomInset: -6

    background: BorderImage {
        source: &quot;:/images/shadowed-background.png&quot;
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="popup-sizing">
<db:title>Popup Sizing</db:title>
<db:para>If only a single item is used within a Popup, it will resize to fit the implicit size of its contained item. This makes it particularly suitable for use together with layouts.</db:para>
<db:programlisting language="cpp">Popup {
    ColumnLayout {
        anchors.fill: parent
        CheckBox { text: qsTr(&quot;E-mail&quot;) }
        CheckBox { text: qsTr(&quot;Calendar&quot;) }
        CheckBox { text: qsTr(&quot;Contacts&quot;) }
    }
}
</db:programlisting>
<db:para>Sometimes there might be two items within the popup:</db:para>
<db:programlisting language="cpp">Popup {
    SwipeView {
        // ...
    }
    PageIndicator {
        anchors.horizontalCenter: parent.horizontalCenter
        anchors.bottom: parent.bottom
    }
}
</db:programlisting>
<db:para>In this case, Popup cannot calculate a sensible implicit size. Since we're anchoring the <db:link xlink:href="qml-qtquick-controls2-pageindicator.xml">PageIndicator</db:link> over the <db:link xlink:href="qml-qtquick-controls2-swipeview.xml">SwipeView</db:link>, we can simply set the content size to the view's implicit size:</db:para>
<db:programlisting language="cpp">Popup {
    contentWidth: view.implicitWidth
    contentHeight: view.implicitHeight

    SwipeView {
        id: view
        // ...
    }
    PageIndicator {
        anchors.horizontalCenter: parent.horizontalCenter
        anchors.bottom: parent.bottom
    }
 }
</db:programlisting>
</db:section>
<db:section xml:id="popup-positioning">
<db:title>Popup Positioning</db:title>
<db:para>Similar to items in Qt Quick, Popup's <db:link xlink:href="qml-qtquick-controls2-popup.xml#x-prop">x</db:link> and <db:link xlink:href="qml-qtquick-controls2-popup.xml#y-prop">y</db:link> coordinates are relative to its parent. This means that opening a popup that is a child of a <db:link xlink:href="qml-qtquick-controls2-button.xml">Button</db:link>, for example, will cause the popup to be positioned relative to the button.</db:para>
<db:para>The following example uses the attached <db:link xlink:href="qml-qtquick-controls2-overlay.xml#overlay-attached-prop">Overlay.overlay</db:link> property to position a popup in the center of the window, despite the position of the button that opens the popup:</db:para>
<db:programlisting language="cpp">Button {
    onClicked: popup.open()

    Popup {
        id: popup

        parent: Overlay.overlay

        x: Math.round((parent.width - width) / 2)
        y: Math.round((parent.height - height) / 2)
        width: 100
        height: 100
    }
}
</db:programlisting>
<db:para>Another way to center a popup in the window regardless of its parent item is to use <db:link xlink:href="qml-qtquick-controls2-popup.xml#anchors.centerIn-prop">anchors.centerIn</db:link>:</db:para>
<db:programlisting language="qml">ApplicationWindow {
    id: window
    // ...

    Pane {
        // ...

        Popup {
            anchors.centerIn: Overlay.overlay
        }
    }
}
</db:programlisting>
<db:para>To ensure that the popup is positioned within the bounds of the enclosing window, the <db:link xlink:href="qml-qtquick-controls2-popup.xml#margins-prop">margins</db:link> property can be set to a non-negative value.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols2-popups.xml">Popup Controls</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-popup">Customizing Popup</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml">ApplicationWindow</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="activeFocus-prop">
<db:title>[read-only] activeFocus : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>activeFocus</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the popup has active focus.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#focus-prop">focus</db:link></db:member>
<db:member><db:link xlink:href="qtquick-input-focus.xml">Keyboard Focus in Qt Quick</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="anchors.centerIn-prop">
<db:title>[since QtQuick.Controls 2.5 (Qt 5.12)] anchors.centerIn : Object</db:title>
<db:fieldsynopsis>
<db:type>Object</db:type>
<db:varname>anchors.centerIn</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Anchors provide a way to position an item by specifying its relationship with other items.</db:para>
<db:para>A common use case is to center a popup within its parent. One way to do this is with the <db:link xlink:href="qml-qtquick-item.xml#x-prop">x</db:link> and <db:link xlink:href="qml-qtquick-item.xml#y-prop">y</db:link> properties. Anchors offer a more convenient approach:</db:para>
<db:programlisting language="qml">Pane {
    // ...

    Popup {
        anchors.centerIn: parent
    }
}
</db:programlisting>
<db:para>It is also possible to center the popup in the window by using <db:link xlink:href="qml-qtquick-controls2-overlay.xml">Overlay</db:link>:</db:para>
<db:programlisting language="qml">ApplicationWindow {
    id: window
    // ...

    Pane {
        // ...

        Popup {
            anchors.centerIn: Overlay.overlay
        }
    }
}
</db:programlisting>
<db:para>This makes it easy to center a popup in the window from any component.</db:para>
<db:note>
<db:para>Popups can only be centered within their immediate parent or the window overlay; trying to center in other items will produce a warning.</db:para>
</db:note>
<db:para>This property was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#popup-positioning">Popup Positioning</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-item.xml#anchors-prop">Item::anchors</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="availableHeight-prop">
<db:title>[read-only] availableHeight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>availableHeight</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the height available to the <db:link xlink:href="qml-qtquick-controls2-popup.xml#contentItem-prop">contentItem</db:link> after deducting vertical padding from the <db:link xlink:href="qml-qtquick-item.xml#height-prop">height</db:link> of the popup.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#topPadding-prop">topPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#bottomPadding-prop">bottomPadding</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="availableWidth-prop">
<db:title>[read-only] availableWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>availableWidth</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the width available to the <db:link xlink:href="qml-qtquick-controls2-popup.xml#contentItem-prop">contentItem</db:link> after deducting horizontal padding from the <db:link xlink:href="qml-qtquick-item.xml#width-prop">width</db:link> of the popup.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#leftPadding-prop">leftPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#rightPadding-prop">rightPadding</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="background-prop">
<db:title>background : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>background</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the background item.</db:para>
<db:note>
<db:para>If the background item has no explicit size specified, it automatically follows the popup's size. In most cases, there is no need to specify width or height for a background item.</db:para>
</db:note>
<db:note>
<db:para>Most popups use the implicit size of the background item to calculate the implicit size of the popup itself. If you replace the background item with a custom one, you should also consider providing a sensible implicit size for it (unless it is an item like <db:link xlink:href="qml-qtquick-image.xml">Image</db:link> which has its own implicit size).</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-popup">Customizing Popup</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="bottomInset-prop">
<db:title>[since QtQuick.Controls 2.5 (Qt 5.12)] bottomInset : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>bottomInset</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the bottom inset for the background.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#popup-layout">Popup Layout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#topInset-prop">topInset</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="bottomMargin-prop">
<db:title>bottomMargin : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>bottomMargin</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the distance between the bottom edge of the popup and the bottom edge of its window.</db:para>
<db:para>A popup with a negative bottom margin is not pushed within the bottom edge of the enclosing window. The default value is <db:code>-1</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#margins-prop">margins</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#topMargin-prop">topMargin</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#popup-layout">Popup Layout</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="bottomPadding-prop">
<db:title>bottomPadding : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>bottomPadding</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the bottom padding. Unless explicitly set, the value is equal to <db:code>verticalPadding</db:code>.</db:para>
<db:para>The padding properties are used to control the geometry of the <db:link xlink:href="qml-qtquick-controls2-popup.xml#contentItem-prop">content item</db:link>.</db:para>
<db:para>Popup uses the same approach to padding as <db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">Control</db:link>. For a visual explanation of the padding system, see the <db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link> section of the documentation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#topPadding-prop">topPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#verticalPadding-prop">verticalPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#availableHeight-prop">availableHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clip-prop">
<db:title>clip : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>clip</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether clipping is enabled. The default value is <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="closePolicy-prop">
<db:title>closePolicy : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>closePolicy</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property determines the circumstances under which the popup closes. The flags can be combined to allow several ways of closing the popup.</db:para>
<db:para>The available values are:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Popup.NoAutoClose</db:para>
</db:td>
<db:td>
<db:para>The popup will only close when manually instructed to do so.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Popup.CloseOnPressOutside</db:para>
</db:td>
<db:td>
<db:para>The popup will close when the mouse is pressed outside of it.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Popup.CloseOnPressOutsideParent</db:para>
</db:td>
<db:td>
<db:para>The popup will close when the mouse is pressed outside of its parent.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Popup.CloseOnReleaseOutside</db:para>
</db:td>
<db:td>
<db:para>The popup will close when the mouse is released outside of it.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Popup.CloseOnReleaseOutsideParent</db:para>
</db:td>
<db:td>
<db:para>The popup will close when the mouse is released outside of its parent.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Popup.CloseOnEscape</db:para>
</db:td>
<db:td>
<db:para>The popup will close when the escape key is pressed while the popup has active focus.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The default value is <db:code>Popup.CloseOnEscape | Popup.CloseOnPressOutside</db:code>.</db:para>
<db:note>
<db:para>There is a known limitation that the <db:code>Popup.CloseOnReleaseOutside</db:code> and <db:code>Popup.CloseOnReleaseOutsideParent</db:code> policies only work with <db:link xlink:href="qml-qtquick-controls2-popup.xml#modal-prop">modal</db:link> popups.</db:para>
</db:note>
</db:section>
<db:section xml:id="contentChildren-prop">
<db:title>contentChildren : list&lt;Item&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;Item&gt;</db:type>
<db:varname>contentChildren</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the list of content children.</db:para>
<db:para>The list contains all items that have been declared in QML as children of the popup.</db:para>
<db:note>
<db:para>Unlike <db:code>contentData</db:code>, <db:code>contentChildren</db:code> does not include non-visual QML objects.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-item.xml#children-prop">Item::children</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#contentData-prop">contentData</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contentData-prop">
<db:title>contentData : list&lt;Object&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;Object&gt;</db:type>
<db:varname>contentData</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the list of content data.</db:para>
<db:para>The list contains all objects that have been declared in QML as children of the popup.</db:para>
<db:note>
<db:para>Unlike <db:code>contentChildren</db:code>, <db:code>contentData</db:code> does include non-visual QML objects.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-item.xml#data-prop">Item::data</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#contentChildren-prop">contentChildren</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contentHeight-prop">
<db:title>contentHeight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>contentHeight</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the content height. It is used for calculating the total implicit height of the Popup.</db:para>
<db:para>For more information, see <db:link xlink:href="qml-qtquick-controls2-popup.xml#popup-sizing">Popup Sizing</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#contentWidth-prop">contentWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contentItem-prop">
<db:title>contentItem : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>contentItem</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the content item of the popup.</db:para>
<db:para>The content item is the visual implementation of the popup. When the popup is made visible, the content item is automatically reparented to the <db:link xlink:href="qml-qtquick-controls2-overlay.xml#overlay-attached-prop">overlay item</db:link>.</db:para>
<db:note>
<db:para>The content item is automatically resized to fit within the <db:link xlink:href="qml-qtquick-controls2-popup.xml#padding-prop">padding</db:link> of the popup.</db:para>
</db:note>
<db:note>
<db:para>Most popups use the implicit size of the content item to calculate the implicit size of the popup itself. If you replace the content item with a custom one, you should also consider providing a sensible implicit size for it (unless it is an item like <db:link xlink:href="qml-qtquick-text.xml">Text</db:link> which has its own implicit size).</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-popup">Customizing Popup</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="contentWidth-prop">
<db:title>contentWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>contentWidth</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the content width. It is used for calculating the total implicit width of the Popup.</db:para>
<db:para>For more information, see <db:link xlink:href="qml-qtquick-controls2-popup.xml#popup-sizing">Popup Sizing</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#contentHeight-prop">contentHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dim-prop">
<db:title>dim : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>dim</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the popup dims the background.</db:para>
<db:para>Unless explicitly set, this property follows the value of <db:link xlink:href="qml-qtquick-controls2-popup.xml#modal-prop">modal</db:link>. To return to the default value, set this property to <db:code>undefined</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#modal-prop">modal</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-overlay.xml#modeless-attached-prop">Overlay.modeless</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="enabled-prop">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] enabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>enabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the popup is enabled. The default value is <db:code>true</db:code>.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#visible-prop">visible</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-item.xml#enabled-prop">Item::enabled</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="enter-prop">
<db:title>enter : Transition</db:title>
<db:fieldsynopsis>
<db:type>Transition</db:type>
<db:varname>enter</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the transition that is applied to the popup item when the popup is opened and enters the screen.</db:para>
<db:para>The following example animates the opacity of the popup when it enters the screen:</db:para>
<db:programlisting language="cpp">Popup {
    enter: Transition {
        NumberAnimation { property: &quot;opacity&quot;; from: 0.0; to: 1.0 }
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#exit-prop">exit</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="exit-prop">
<db:title>exit : Transition</db:title>
<db:fieldsynopsis>
<db:type>Transition</db:type>
<db:varname>exit</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the transition that is applied to the popup item when the popup is closed and exits the screen.</db:para>
<db:para>The following example animates the opacity of the popup when it exits the screen:</db:para>
<db:programlisting language="cpp">Popup {
    exit: Transition {
        NumberAnimation { property: &quot;opacity&quot;; from: 1.0; to: 0.0 }
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#enter-prop">enter</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="focus-prop">
<db:title>focus : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>focus</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the popup wants focus.</db:para>
<db:para>When the popup actually receives focus, <db:link xlink:href="qml-qtquick-controls2-popup.xml#activeFocus-prop">activeFocus</db:link> will be <db:code>true</db:code>. For more information, see <db:link xlink:href="qtquick-input-focus.xml">Keyboard Focus in Qt Quick</db:link>.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#activeFocus-prop">activeFocus</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="font-prop">
<db:title>font : font</db:title>
<db:fieldsynopsis>
<db:type>font</db:type>
<db:varname>font</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the font currently set for the popup.</db:para>
<db:para>Popup propagates explicit font properties to its children. If you change a specific property on a popup's font, that property propagates to all of the popup's children, overriding any system defaults for that property.</db:para>
<db:programlisting language="cpp">Popup {
    font.family: &quot;Courier&quot;

    Column {
        Label {
            text: qsTr(&quot;This will use Courier...&quot;)
        }

        Switch {
            text: qsTr(&quot;... and so will this&quot;)
        }
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#font-prop">Control::font</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#font-prop">ApplicationWindow::font</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="height-prop">
<db:title>height : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>height</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the height of the popup.</db:para>
</db:section>
<db:section xml:id="horizontalPadding-prop">
<db:title>[since QtQuick.Controls 2.5 (Qt 5.12)] horizontalPadding : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>horizontalPadding</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the horizontal padding. Unless explicitly set, the value is equal to <db:code>padding</db:code>.</db:para>
<db:para>The padding properties are used to control the geometry of the <db:link xlink:href="qml-qtquick-controls2-popup.xml#contentItem-prop">content item</db:link>.</db:para>
<db:para>Popup uses the same approach to padding as <db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">Control</db:link>. For a visual explanation of the padding system, see the <db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link> section of the documentation.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#leftPadding-prop">leftPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#rightPadding-prop">rightPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#verticalPadding-prop">verticalPadding</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="implicitBackgroundHeight-prop">
<db:title>[read-only, since QtQuick.Controls 2.5 (Qt 5.12)] implicitBackgroundHeight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>implicitBackgroundHeight</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the implicit background height.</db:para>
<db:para>The value is equal to <db:code>background ? background.implicitHeight : 0</db:code>.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#implicitBackgroundWidth-prop">implicitBackgroundWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#implicitContentHeight-prop">implicitContentHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="implicitBackgroundWidth-prop">
<db:title>[read-only, since QtQuick.Controls 2.5 (Qt 5.12)] implicitBackgroundWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>implicitBackgroundWidth</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the implicit background width.</db:para>
<db:para>The value is equal to <db:code>background ? background.implicitWidth : 0</db:code>.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#implicitBackgroundHeight-prop">implicitBackgroundHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#implicitContentWidth-prop">implicitContentWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="implicitContentHeight-prop">
<db:title>[read-only, since QtQuick.Controls 2.5 (Qt 5.12)] implicitContentHeight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>implicitContentHeight</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the implicit content height.</db:para>
<db:para>The value is calculated based on the content children.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#implicitContentWidth-prop">implicitContentWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#implicitBackgroundHeight-prop">implicitBackgroundHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="implicitContentWidth-prop">
<db:title>[read-only, since QtQuick.Controls 2.5 (Qt 5.12)] implicitContentWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>implicitContentWidth</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the implicit content width.</db:para>
<db:para>The value is calculated based on the content children.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#implicitContentHeight-prop">implicitContentHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#implicitBackgroundWidth-prop">implicitBackgroundWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="implicitHeight-prop">
<db:title>implicitHeight : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>implicitHeight</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the implicit height of the popup.</db:para>
</db:section>
<db:section xml:id="implicitWidth-prop">
<db:title>implicitWidth : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>implicitWidth</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the implicit width of the popup.</db:para>
</db:section>
<db:section xml:id="leftInset-prop">
<db:title>[since QtQuick.Controls 2.5 (Qt 5.12)] leftInset : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>leftInset</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the left inset for the background.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#popup-layout">Popup Layout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#rightInset-prop">rightInset</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="leftMargin-prop">
<db:title>leftMargin : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>leftMargin</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the distance between the left edge of the popup and the left edge of its window.</db:para>
<db:para>A popup with a negative left margin is not pushed within the left edge of the enclosing window. The default value is <db:code>-1</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#margins-prop">margins</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#rightMargin-prop">rightMargin</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#popup-layout">Popup Layout</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="leftPadding-prop">
<db:title>leftPadding : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>leftPadding</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the left padding. Unless explicitly set, the value is equal to <db:code>horizontalPadding</db:code>.</db:para>
<db:para>The padding properties are used to control the geometry of the <db:link xlink:href="qml-qtquick-controls2-popup.xml#contentItem-prop">content item</db:link>.</db:para>
<db:para>Popup uses the same approach to padding as <db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">Control</db:link>. For a visual explanation of the padding system, see the <db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link> section of the documentation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#rightPadding-prop">rightPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#horizontalPadding-prop">horizontalPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#availableWidth-prop">availableWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="locale-prop">
<db:title>locale : Locale</db:title>
<db:fieldsynopsis>
<db:type>Locale</db:type>
<db:varname>locale</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the locale of the popup.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#mirrored-prop">mirrored</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-layoutmirroring.xml">LayoutMirroring</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="margins-prop">
<db:title>margins : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>margins</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the distance between the edges of the popup and the edges of its window.</db:para>
<db:para>A popup with negative margins is not pushed within the bounds of the enclosing window. The default value is <db:code>-1</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#topMargin-prop">topMargin</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#leftMargin-prop">leftMargin</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#rightMargin-prop">rightMargin</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#bottomMargin-prop">bottomMargin</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#popup-layout">Popup Layout</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mirrored-prop">
<db:title>[read-only, since QtQuick.Controls 2.3 (Qt 5.10)] mirrored : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>mirrored</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the popup is mirrored.</db:para>
<db:para>This property is provided for convenience. A popup is considered mirrored when its visual layout direction is right-to-left; that is, when using a right-to-left locale.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#locale-prop">locale</db:link></db:member>
<db:member><db:link xlink:href="qtquick-positioning-righttoleft.xml">Right-to-left User Interfaces</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="modal-prop">
<db:title>modal : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>modal</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the popup is modal.</db:para>
<db:para>Modal popups often have a distinctive background dimming effect defined in <db:link xlink:href="qml-qtquick-controls2-overlay.xml#modal-attached-prop">Overlay.modal</db:link>, and do not allow press or release events through to items beneath them. For example, if the user accidentally clicks outside of a popup, any item beneath that popup at the location of the click will not receive the event.</db:para>
<db:para>On desktop platforms, it is common for modal popups to be closed only when the escape key is pressed. To achieve this behavior, set <db:link xlink:href="qml-qtquick-controls2-popup.xml#closePolicy-prop">closePolicy</db:link> to <db:code>Popup.CloseOnEscape</db:code>. By default, <db:code>closePolicy</db:code> is set to <db:code>Popup.CloseOnEscape | Popup.CloseOnPressOutside</db:code>, which means that clicking outside of a modal popup will close it.</db:para>
<db:para>The default value is <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#dim-prop">dim</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="opacity-prop">
<db:title>opacity : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>opacity</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the opacity of the popup. Opacity is specified as a number between <db:code>0.0</db:code> (fully transparent) and <db:code>1.0</db:code> (fully opaque). The default value is <db:code>1.0</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#visible-prop">visible</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="opened-prop">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] opened : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>opened</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the popup is fully open. The popup is considered opened when it's visible and neither the <db:link xlink:href="qml-qtquick-controls2-popup.xml#enter-prop">enter</db:link> nor <db:link xlink:href="qml-qtquick-controls2-popup.xml#exit-prop">exit</db:link> transitions are running.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#open-method">open</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#close-method">close</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#visible-prop">visible</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="padding-prop">
<db:title>padding : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>padding</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the default padding.</db:para>
<db:para>The padding properties are used to control the geometry of the <db:link xlink:href="qml-qtquick-controls2-popup.xml#contentItem-prop">content item</db:link>.</db:para>
<db:para>Popup uses the same approach to padding as <db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">Control</db:link>. For a visual explanation of the padding system, see the <db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link> section of the documentation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#availableWidth-prop">availableWidth</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#availableHeight-prop">availableHeight</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#topPadding-prop">topPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#leftPadding-prop">leftPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#rightPadding-prop">rightPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#bottomPadding-prop">bottomPadding</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="palette-prop">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] palette : palette</db:title>
<db:fieldsynopsis>
<db:type>palette</db:type>
<db:varname>palette</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the palette currently set for the popup.</db:para>
<db:para>Popup propagates explicit palette properties to its children. If you change a specific property on a popup's palette, that property propagates to all of the popup's children, overriding any system defaults for that property.</db:para>
<db:programlisting language="cpp">Popup {
    palette.text: &quot;red&quot;

    Column {
        Label {
            text: qsTr(&quot;This will use red color...&quot;)
        }

        Switch {
            text: qsTr(&quot;... and so will this&quot;)
        }
    }
}
</db:programlisting>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-control.xml#palette-prop">Control::palette</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-applicationwindow.xml#palette-prop">ApplicationWindow::palette</db:link></db:member>
<db:member><db:link xlink:href="qml-palette.xml#qtquickcontrols2-palette">palette QML Basic Type</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="parent-prop">
<db:title>parent : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>parent</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the parent item.</db:para>
</db:section>
<db:section xml:id="rightInset-prop">
<db:title>[since QtQuick.Controls 2.5 (Qt 5.12)] rightInset : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>rightInset</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the right inset for the background.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#popup-layout">Popup Layout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#leftInset-prop">leftInset</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rightMargin-prop">
<db:title>rightMargin : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>rightMargin</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the distance between the right edge of the popup and the right edge of its window.</db:para>
<db:para>A popup with a negative right margin is not pushed within the right edge of the enclosing window. The default value is <db:code>-1</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#margins-prop">margins</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#leftMargin-prop">leftMargin</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#popup-layout">Popup Layout</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rightPadding-prop">
<db:title>rightPadding : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>rightPadding</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the right padding. Unless explicitly set, the value is equal to <db:code>horizontalPadding</db:code>.</db:para>
<db:para>The padding properties are used to control the geometry of the <db:link xlink:href="qml-qtquick-controls2-popup.xml#contentItem-prop">content item</db:link>.</db:para>
<db:para>Popup uses the same approach to padding as <db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">Control</db:link>. For a visual explanation of the padding system, see the <db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link> section of the documentation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#leftPadding-prop">leftPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#horizontalPadding-prop">horizontalPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#availableWidth-prop">availableWidth</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="scale-prop">
<db:title>scale : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>scale</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the scale factor of the popup. The default value is <db:code>1.0</db:code>.</db:para>
<db:para>A scale of less than <db:code>1.0</db:code> causes the popup to be rendered at a smaller size, and a scale greater than <db:code>1.0</db:code> renders the popup at a larger size. Negative scales are not supported.</db:para>
</db:section>
<db:section xml:id="spacing-prop">
<db:title>[since QtQuick.Controls 2.1 (Qt 5.8)] spacing : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>spacing</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the spacing.</db:para>
<db:para>Spacing is useful for popups that have multiple or repetitive building blocks. For example, some styles use spacing to determine the distance between the header, content, and footer of <db:link xlink:href="qml-qtquick-controls2-dialog.xml">Dialog</db:link>. Spacing is not enforced by Popup, so each style may interpret it differently, and some may ignore it altogether.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.1 (Qt 5.8).</db:para>
</db:section>
<db:section xml:id="topInset-prop">
<db:title>[since QtQuick.Controls 2.5 (Qt 5.12)] topInset : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>topInset</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the top inset for the background.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#popup-layout">Popup Layout</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#bottomInset-prop">bottomInset</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="topMargin-prop">
<db:title>topMargin : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>topMargin</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the distance between the top edge of the popup and the top edge of its window.</db:para>
<db:para>A popup with a negative top margin is not pushed within the top edge of the enclosing window. The default value is <db:code>-1</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#margins-prop">margins</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#bottomMargin-prop">bottomMargin</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#popup-layout">Popup Layout</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="topPadding-prop">
<db:title>topPadding : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>topPadding</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the top padding. Unless explicitly set, the value is equal to <db:code>verticalPadding</db:code>.</db:para>
<db:para>The padding properties are used to control the geometry of the <db:link xlink:href="qml-qtquick-controls2-popup.xml#contentItem-prop">content item</db:link>.</db:para>
<db:para>Popup uses the same approach to padding as <db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">Control</db:link>. For a visual explanation of the padding system, see the <db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link> section of the documentation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#bottomPadding-prop">bottomPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#verticalPadding-prop">verticalPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#availableHeight-prop">availableHeight</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="transformOrigin-prop">
<db:title>transformOrigin : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>transformOrigin</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the origin point for transformations in enter and exit transitions.</db:para>
<db:para>Nine transform origins are available, as shown in the image below. The default transform origin is <db:code>Popup.Center</db:code>.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-popup-transformorigin.png"/>
</db:imageobject>
</db:mediaobject>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#enter-prop">enter</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#exit-prop">exit</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-item.xml#transformOrigin-prop">Item::transformOrigin</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="verticalPadding-prop">
<db:title>[since QtQuick.Controls 2.5 (Qt 5.12)] verticalPadding : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>verticalPadding</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the vertical padding. Unless explicitly set, the value is equal to <db:code>padding</db:code>.</db:para>
<db:para>The padding properties are used to control the geometry of the <db:link xlink:href="qml-qtquick-controls2-popup.xml#contentItem-prop">content item</db:link>.</db:para>
<db:para>Popup uses the same approach to padding as <db:link xlink:href="qml-qtquick-controls2-control.xml#padding-prop">Control</db:link>. For a visual explanation of the padding system, see the <db:link xlink:href="qml-qtquick-controls2-control.xml#control-layout">Control Layout</db:link> section of the documentation.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#padding-prop">padding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#topPadding-prop">topPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#bottomPadding-prop">bottomPadding</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#horizontalPadding-prop">horizontalPadding</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="visible-prop">
<db:title>visible : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>visible</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the popup is visible. The default value is <db:code>false</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#open-method">open</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#close-method">close</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#opened-signal">opened</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="width-prop">
<db:title>width : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>width</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the width of the popup.</db:para>
</db:section>
<db:section xml:id="x-prop">
<db:title>x : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>x</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the x-coordinate of the popup.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#y-prop">y</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#z-prop">z</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="y-prop">
<db:title>y : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>y</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the y-coordinate of the popup.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#x-prop">x</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#z-prop">z</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="z-prop">
<db:title>z : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>z</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the z-value of the popup. Z-value determines the stacking order of popups.</db:para>
<db:para>If two visible popups have the same z-value, the last one that was opened will be on top.</db:para>
<db:para>The default z-value is <db:code>0</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#x-prop">x</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#y-prop">y</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="aboutToHide-signal">
<db:title>void aboutToHide()</db:title>
<db:para>This signal is emitted when the popup is about to hide.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onAboutToHide</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#closed-signal">closed</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="aboutToShow-signal">
<db:title>void aboutToShow()</db:title>
<db:para>This signal is emitted when the popup is about to show.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onAboutToShow</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#opened-signal">opened</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="closed-signal">
<db:title>void closed()</db:title>
<db:para>This signal is emitted when the popup is closed.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onClosed</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#aboutToHide-signal">aboutToHide</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="opened-signal">
<db:title>void opened()</db:title>
<db:para>This signal is emitted when the popup is opened.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onOpened</db:code>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#aboutToShow-signal">aboutToShow</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="close-method">
<db:title>void close()</db:title>
<db:para>Closes the popup.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#visible-prop">visible</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="forceActiveFocus-method">
<db:title>forceActiveFocus(<db:emphasis>reason</db:emphasis> = Qt.OtherFocusReason)</db:title>
<db:para>Forces active focus on the popup with the given <db:code role="parameter">reason</db:code>.</db:para>
<db:para>This method sets focus on the popup and ensures that all ancestor <db:link xlink:href="qml-qtquick-focusscope.xml">FocusScope</db:link> objects in the object hierarchy are also given <db:link xlink:href="qml-qtquick-controls2-popup.xml#focus-prop">focus</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#activeFocus-prop">activeFocus</db:link></db:member>
<db:member><db:link xlink:href="">Qt::FocusReason</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="open-method">
<db:title>void open()</db:title>
<db:para>Opens the popup.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-popup.xml#visible-prop">visible</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
