<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Rendering SVG Files</db:title>
<db:productname>QtSvg</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt SVG Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Rendering SVG files with the Qt SVG module.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Qt SVG provides classes for rendering SVG files. To include the definitions of the module's classes, use the following directive:</db:para>
<db:programlisting language="cpp">#include &amp;lt;QtSvg&amp;gt;
</db:programlisting>
<db:para>To link against the module, add this line to your <db:link xlink:href="qmake-manual.xml">qmake</db:link> <db:code>.pro</db:code> file:</db:para>
<db:programlisting language="cpp">QT += svg
</db:programlisting>
<db:section xml:id="rendering-svg-files">
<db:title>Rendering SVG Files</db:title>
<db:para>Scalable Vector Graphics (SVG) is a language for describing two-dimensional graphics and graphical applications in XML. SVG 1.1 is a W3C Recommendation and forms the core of the current SVG developments in Qt. SVG 1.2 is the specification currently being developed by the <db:link xlink:href="http://www.w3.org/Graphics/SVG/">SVG Working Group</db:link>, and it is <db:link xlink:href="http://www.w3.org/TR/SVG12/">available in draft form</db:link>. The <db:link xlink:href="http://www.w3.org/TR/SVGMobile/">Mobile SVG Profiles</db:link> (SVG Basic and SVG Tiny) are aimed at resource-limited devices and are part of the 3GPP platform for third generation mobile phones. You can read more about SVG at <db:link xlink:href="http://www.w3.org/Graphics/SVG/About.html">About SVG</db:link>.</db:para>
<db:para>Qt supports the <db:link xlink:href="http://www.w3.org/Graphics/SVG/feature/1.2/#SVG-static">static features</db:link> of <db:link xlink:href="http://www.w3.org/TR/SVGMobile12">SVG 1.2 Tiny</db:link>. ECMA scripts and DOM manipulation are currently not supported.</db:para>
<db:para>SVG drawings can be rendered onto any <db:link xlink:href="qpaintdevice.xml">QPaintDevice</db:link> subclass. This approach gives developers the flexibility to experiment, in order to find the best solution for each application.</db:para>
<db:para>The easiest way to render SVG files is to construct a <db:link xlink:href="qsvgwidget.xml">QSvgWidget</db:link> and load an SVG file using one of the <db:link xlink:href="qsvgwidget.xml#load">QSvgWidget::load</db:link>() functions.</db:para>
<db:para><db:link xlink:href="qsvgrenderer.xml">QSvgRenderer</db:link> is the class responsible for rendering SVG files for <db:link xlink:href="qsvgwidget.xml">QSvgWidget</db:link>, and it can be used directly to provide SVG support for custom widgets. To load an SVG file, construct a <db:link xlink:href="qsvgrenderer.xml">QSvgRenderer</db:link> with a file name or the contents of a file, or call <db:link xlink:href="qsvgrenderer.xml#load">QSvgRenderer::load</db:link>() on an existing renderer. If the SVG file has been loaded successfully the <db:link xlink:href="qsvgrenderer.xml#isValid">QSvgRenderer::isValid</db:link>() will return true.</db:para>
<db:para>Once you have loaded the SVG file successfully, you can render it with the <db:link xlink:href="qsvgrenderer.xml#render">QSvgRenderer::render</db:link>() function. Note that this scheme allows you to render SVG files on all paint devices supported by Qt, including <db:link xlink:href="qwidget.xml">QWidget</db:link>, QGLWidget, and <db:link xlink:href="qimage.xml">QImage</db:link>. See the <db:link xlink:href="qtsvg-svgviewer-example.xml">SVG Viewer</db:link> example for more details.</db:para>
</db:section>
</db:article>
