<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ScreenCapture QML Type</db:title>
<db:productname>QtMultimedia</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Multimedia Documentation</db:titleabbrev>
<db:abstract>
<db:para>This type is used for capturing a screen.</db:para>
<db:para>This type was introduced in Qt 6.5.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtMultimedia</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qscreencapture.xml">QScreenCapture</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>ScreenCapture is part of <db:simplelist><db:member>multimedia_qml</db:member><db:member>multimedia_video_qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtmultimedia-screencapture.xml">ScreenCapture</db:link> captures a screen. It is managed by MediaCaptureSession where the captured screen can be displayed in a video preview object or recorded to a file.</db:para>
<db:para>The code below shows a simple capture session with <db:link xlink:href="qml-qtmultimedia-screencapture.xml">ScreenCapture</db:link> playing back the captured primary screen view in <db:link xlink:href="qml-qtmultimedia-videooutput.xml">VideoOutput</db:link>.</db:para>
<db:programlisting language="qml">CaptureSession {
    id: captureSession
    screenCapture: ScreenCapture {
        id: screenCapture
        active: true
    }
    videoOutput: VideoOutput {
        id: videoOutput
    }
}
</db:programlisting>
<db:section xml:id="screen-capture-limitations">
<db:title>Screen Capture Limitations</db:title>
<db:para>On Qt 6.5.2 and 6.5.3, the following limitations apply to using <db:link xlink:href="qml-qtmultimedia-screencapture.xml">ScreenCapture</db:link>:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>It is only supported with the FFmpeg backend.</db:para>
</db:listitem>
<db:listitem>
<db:para>It is supported on all desktop platforms, except Linux with Wayland compositor, due to Wayland protocol restrictions and limitations.</db:para>
</db:listitem>
<db:listitem>
<db:para>It is not supported on mobile operating systems, except on Android. There, you might run into performance issues as the class is currently implemented via <db:link xlink:href="qscreen.xml#grabWindow">QScreen::grabWindow</db:link>, which is not optimal for the use case.</db:para>
</db:listitem>
<db:listitem>
<db:para>On Linux, it works with X11, but it has not been tested on embedded.</db:para>
</db:listitem>
<db:listitem>
<db:para>In most cases, we set a screen capture frame rate that equals the screen refresh rate, except on Windows, where the rate might be flexible. Such a frame rate (75/120 FPS) might cause performance issues on weak CPUs if the captured screen is of 4K resolution.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtmultimedia-windowcapture.xml">WindowCapture</db:link></db:member>
<db:member><db:link xlink:href="qml-qtmultimedia-capturesession.xml">CaptureSession</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="active-prop">
<db:title>active : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>active</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Describes whether the capturing is currently active.</db:para>
</db:section>
<db:section xml:id="error-prop">
<db:title>[read-only] error : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>error</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns a code of the last error.</db:para>
</db:section>
<db:section xml:id="errorString-prop">
<db:title>[read-only] errorString : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>errorString</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns a human readable string describing the cause of error.</db:para>
</db:section>
<db:section xml:id="screen-prop">
<db:title>screen : Screen</db:title>
<db:fieldsynopsis>
<db:type>Screen</db:type>
<db:varname>screen</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Describes the screen for capturing.</db:para>
</db:section>
</db:section>
</db:article>
