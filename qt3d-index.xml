<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt 3D</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.15.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt 3D Reference Documentation.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para><db:emphasis>Qt 3D</db:emphasis> provides functionality for near-realtime simulation systems with support for 2D and 3D rendering in both Qt C++ and Qt Quick applications.</db:para>
<db:para>The functionality in Qt 3D is divided into the following C++ modules:</db:para>
<db:variablelist role="qt3d-modules">
<db:varlistentry>
<db:term><db:link xlink:href="qt3dcore-module.xml" xlink:role="module">Qt 3D Core C++ Classes</db:link></db:term>
<db:listitem>
<db:para>The Qt 3D module contains functionality to support near-realtime simulation systems.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dinput-module.xml" xlink:role="module">Qt 3D Input C++ Classes</db:link></db:term>
<db:listitem>
<db:para>The Qt 3D Input module provides classes for handling user input in applications using Qt3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dlogic-module.xml" xlink:role="module">Qt 3D Logic C++ Classes</db:link></db:term>
<db:listitem>
<db:para>The Qt 3D Logic module enables synchronizing frames with the Qt 3D backend.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3drender-module.xml" xlink:role="module">Qt 3D Render C++ Classes</db:link></db:term>
<db:listitem>
<db:para>The Qt 3D Render module contains functionality to support 2D and 3D rendering using Qt 3D.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para>The following C++ modules are in still development but are available as technology previews:</db:para>
<db:variablelist role="qt3d-modules-preliminary">
<db:varlistentry>
<db:term><db:link xlink:href="qt3danimation-module.xml" xlink:role="module">Qt 3D Animation C++ Classes</db:link></db:term>
<db:listitem>
<db:para>The Qt 3D Animation modules provides a set of prebuilt elements to help you get started with Qt 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dextras-module.xml" xlink:role="module">Qt 3D Extras C++ Classes</db:link></db:term>
<db:listitem>
<db:para>The Qt 3D Extras module provides a set of prebuilt elements to help you get started with Qt 3D.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3dscene2d-module.xml" xlink:role="module">Qt 3D Scene2D C++ Classes</db:link></db:term>
<db:listitem>
<db:para>The Qt 3D Scene2D module provides a way to render Quick2 qml content to a Qt 3D texture.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para>For Qt Quick applications, Qt 3D provides the following QML modules:</db:para>
<db:variablelist role="qt3d-qmlmodules">
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-core-qmlmodule.xml" xlink:role="">Qt 3D Core QML Types</db:link></db:term>
<db:listitem>
<db:para>Provides core Qt 3D QML types.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-input-qmlmodule.xml" xlink:role="">Qt 3D Input QML Types</db:link></db:term>
<db:listitem>
<db:para>Provides QML types for Qt 3D user input.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-logic-qmlmodule.xml" xlink:role="">Qt 3D Logic QML Types</db:link></db:term>
<db:listitem>
<db:para>Provides QML types to synchronize frames with the 3D backend.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-render-qmlmodule.xml" xlink:role="">Qt 3D Render QML Types</db:link></db:term>
<db:listitem>
<db:para>Provides Qt 3D QML types for rendering.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para>The following QML modules are in still development but are available as technology previews:</db:para>
<db:variablelist role="qt3d-qmlmodules-preliminary">
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-extras-qmlmodule.xml" xlink:role="">Qt 3D Extras QML Types</db:link></db:term>
<db:listitem>
<db:para>Provides Qt 3D QML types for the extras module.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qt3d-animation-qmlmodule.xml" xlink:role="">Qt 3D Qt3DAnimation QML Types</db:link></db:term>
<db:listitem>
<db:para>Provides Qt 3D QML types for the animation module.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scene2d-qmlmodule.xml" xlink:role="">Qt 3D Scene2D QML Types</db:link></db:term>
<db:listitem>
<db:para>Provides Qt 3D QML types for the scene2d module.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-scene3d-qmlmodule.xml" xlink:role="">Qt 3D Scene3D QML Types</db:link></db:term>
<db:listitem>
<db:para>Provides Qt 3D QML types for the Scene3D module.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="getting-started">
<db:title>Getting Started</db:title>
<db:para>For a C++ application that performs 2D or 3D rendering, collision detection, and also handle user input, add the following line to its qmake <db:code>.pro</db:code> file:</db:para>
<db:programlisting language="cpp" role="bad">QT += 3dcore 3drender 3dinput 3dlogic 3dextras 3danimation
</db:programlisting>
<db:para>To include the definitions of the modules' classes, use the following directives:</db:para>
<db:programlisting language="cpp" role="bad">#include &amp;lt;Qt3DCore&amp;gt;
#include &amp;lt;Qt3DRender&amp;gt;
#include &amp;lt;Qt3DInput&amp;gt;
#include &amp;lt;Qt3DLogic&amp;gt;
#include &amp;lt;Qt3DExtras&amp;gt;
#include &amp;lt;Qt3DAnimation&amp;gt;
</db:programlisting>
<db:para>A Qt Quick application requires also additional dependencies:</db:para>
<db:programlisting language="cpp" role="bad">QT += 3dcore 3drender 3dinput 3dlogic 3dextras qml quick 3dquick 3danimation
</db:programlisting>
</db:section>
<db:section xml:id="overview">
<db:title>Overview</db:title>
<db:para>The high level design and motivation for Qt 3D is described in the <db:link xlink:href="qt3d-overview.xml">Qt 3D Overview</db:link>. The Qt 3D Render aspect offers support for data-driven configuration as described in <db:link xlink:href="qt3drender-framegraph.xml">Qt 3D Render Framegraph</db:link>.</db:para>
</db:section>
<db:section xml:id="reference">
<db:title>Reference</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qt3d-overview.xml">Qt 3D Overview</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt3d-cpp.xml">Qt 3D C++ Classes</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt3d-qml.xml">Qt 3D QML Types</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qt3d-examples.xml">Qt 3D Examples</db:link></db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="qt-3d-platform-support">
<db:title>Qt 3D Platform Support</db:title>
<db:para>Qt 3D has the following support for platforms:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Microsoft Windows (win32) - Supported</db:para>
</db:listitem>
<db:listitem>
<db:para>Linux X11 - Supported</db:para>
</db:listitem>
<db:listitem>
<db:para>macOS - Supported although there may be some retina scaling issues</db:para>
</db:listitem>
<db:listitem>
<db:para>Android - Supported</db:para>
</db:listitem>
<db:listitem>
<db:para>Embedded Linux - Supported</db:para>
</db:listitem>
<db:listitem>
<db:para>iOS - Supported since (Qt 5.7)</db:para>
</db:listitem>
<db:listitem>
<db:para>WinRT - Not supported yet</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="licenses-and-attributions">
<db:title>Licenses and Attributions</db:title>
<db:para>Qt 3D is available under commercial licenses from <db:link xlink:href="http://www.qt.io/about-us/">The Qt Company</db:link>. In addition, it is available under the <db:link xlink:href="http://www.gnu.org/licenses/lgpl-3.0.html">GNU Lesser General Public License, version 3</db:link>, or the <db:link xlink:href="http://www.gnu.org/licenses/gpl-2.0.html">GNU General Public License, version 2</db:link>. See <db:link xlink:href="licensing.xml">Qt Licensing</db:link> for further details.</db:para>
<db:para>Furthermore Qt 3D contains third party modules under following permissive licenses:</db:para>
<db:para/>
</db:section>
</db:article>
