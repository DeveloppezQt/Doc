<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QSurface Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qsurface.xml">QSurface</db:link> class is an abstraction of renderable surfaces in Qt.</db:para>
<db:para>This class was introduced in Qt 5.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSurface</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qoffscreensurface.xml" xlink:role="class">QOffscreenSurface</db:link> and <db:link xlink:href="qwindow.xml" xlink:role="class">QWindow</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The size of the surface is accessible with the <db:link xlink:href="qsurface.xml#size">size</db:link>() function. The rendering specific attributes of the surface are accessible through the <db:link xlink:href="qsurface.xml#format">format</db:link>() function.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="SurfaceClass-enum">
<db:title>enum QSurface::SurfaceClass</db:title>
<db:para>The SurfaceClass enum describes the actual subclass of the surface.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsurface.xml">QSurface</db:link></db:emphasis>::Window</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The surface is an instance of <db:link xlink:href="qwindow.xml">QWindow</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsurface.xml">QSurface</db:link></db:emphasis>::Offscreen</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The surface is an instance of <db:link xlink:href="qoffscreensurface.xml">QOffscreenSurface</db:link>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="SurfaceType-enum">
<db:title>enum QSurface::SurfaceType</db:title>
<db:para>The SurfaceType enum describes what type of surface this is.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsurface.xml">QSurface</db:link></db:emphasis>::RasterSurface</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The surface is is composed of pixels and can be rendered to using a software rasterizer like Qt's raster paint engine.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsurface.xml">QSurface</db:link></db:emphasis>::OpenGLSurface</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The surface is an OpenGL compatible surface and can be used in conjunction with <db:link xlink:href="qopenglcontext.xml">QOpenGLContext</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qsurface.xml">QSurface</db:link></db:emphasis>::RasterGLSurface</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The surface can be rendered to using a software rasterizer, and also supports OpenGL. This surface type is intended for internal Qt use, and requires the use of private API.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSurface">
<db:title>[explicit protected] QSurface::QSurface(QSurface::SurfaceClass <db:emphasis>type</db:emphasis>)</db:title>
<db:para>Creates a surface with the given <db:code role="parameter">type</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QSurface">
<db:title>[virtual noexcept] QSurface::~QSurface()</db:title>
<db:para>Destroys the surface.</db:para>
</db:section>
<db:section xml:id="format">
<db:title>[pure virtual] QSurfaceFormat QSurface::format() const</db:title>
<db:para>Returns the format of the surface.</db:para>
</db:section>
<db:section xml:id="size">
<db:title>[pure virtual] QSize QSurface::size() const</db:title>
<db:para>Returns the size of the surface in pixels.</db:para>
</db:section>
<db:section xml:id="supportsOpenGL">
<db:title>[since 5.3] bool QSurface::supportsOpenGL() const</db:title>
<db:para>Returns true if the surface is OpenGL compatible and can be used in conjunction with <db:link xlink:href="qopenglcontext.xml">QOpenGLContext</db:link>; otherwise returns false.</db:para>
<db:para>This function was introduced in Qt 5.3.</db:para>
</db:section>
<db:section xml:id="surfaceClass">
<db:title>QSurface::SurfaceClass QSurface::surfaceClass() const</db:title>
<db:para>Returns the surface class of this surface.</db:para>
</db:section>
<db:section xml:id="surfaceHandle">
<db:title>[pure virtual] QPlatformSurface *QSurface::surfaceHandle() const</db:title>
<db:para>Returns a handle to the platform-specific implementation of the surface.</db:para>
</db:section>
<db:section xml:id="surfaceType">
<db:title>[pure virtual] QSurface::SurfaceType QSurface::surfaceType() const</db:title>
<db:para>Returns the type of the surface.</db:para>
</db:section>
</db:section>
</db:article>
