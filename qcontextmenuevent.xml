<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QContextMenuEvent Class</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qcontextmenuevent.xml">QContextMenuEvent</db:link> class contains parameters that describe a context menu event.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QContextMenuEvent</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Gui)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Gui)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += gui</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qinputevent.xml" xlink:role="class">QInputEvent</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QContextMenuEvent is part of <db:simplelist><db:member>events</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A context menu event is sent when a user performs an action that should open a contextual menu:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>clicking the right mouse button</db:para>
</db:listitem>
<db:listitem>
<db:para>pressing a dedicated keyboard menu key (if the keyboard has one, such as the menu key on standard 104-key PC keyboards)</db:para>
</db:listitem>
<db:listitem>
<db:para>pressing some other keyboard shortcut (such as &quot;Ctrl+Return&quot; by default on macOS 15 and newer)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The expected context menu should contain <db:link xlink:href="qaction.xml">actions</db:link> that are relevant to some content within the application (the &quot;context&quot;). In Qt, the context is at least the particular widget or Qt Quick Item that receives the <db:link xlink:href="qcontextmenuevent.xml">QContextMenuEvent</db:link>. If there is a selection, that should probably be treated as the context. The context can be further refined using <db:link xlink:href="qcontextmenuevent.xml#pos">QContextMenuEvent::pos</db:link>() to pinpoint the content within the widget, item or selection.</db:para>
<db:para>Widgets can override <db:link xlink:href="">QWidget::contextMenuEvent()</db:link> to handle this event. Many widgets already do that, and have useful context menus by default. Some widgets have a function such as <db:link xlink:href="">createStandardContextMenu()</db:link> to populate the default set of actions into a QMenu, which can be customized further in your subclass and then shown.</db:para>
<db:para>In Qt Quick, the event can be handled via the ContextMenu attached property. Some <db:link xlink:href="">QtQuick.Controls</db:link> Controls already provide context menus by default.</db:para>
<db:para>Unlike most synthetic events (such as a <db:link xlink:href="qmouseevent.xml">QMouseEvent</db:link> that is sent only after a <db:link xlink:href="qtouchevent.xml">QTouchEvent</db:link> or <db:link xlink:href="qtabletevent.xml">QTabletEvent</db:link> was not accepted), <db:link xlink:href="qcontextmenuevent.xml">QContextMenuEvent</db:link> is sent regardless of whether the original mouse or key event was already handled and <db:link xlink:href="qevent.xml#accepted-prop">accepted</db:link>. This is to accommodate the Windows UI pattern of selecting some kind of items (icons, drawing elements, or cells in an Item View) using the right mouse button (clicking or dragging), and then getting a context menu as soon as you release the right mouse button. (The actions on the menu are meant to apply to the selection.) Therefore, on Windows the <db:link xlink:href="qcontextmenuevent.xml">QContextMenuEvent</db:link> is sent on mouse release; while on other platforms, it's sent on press. Qt follows the <db:link xlink:href="qstylehints.xml#contextMenuTrigger-prop">platform convention</db:link> by default.</db:para>
<db:para>There are also some Qt Quick Controls such as Pane that accept mouse events, and nevertheless receive a <db:link xlink:href="qcontextmenuevent.xml">QContextMenuEvent</db:link> after a mouse press or click.</db:para>
<db:para>If you prefer to support the press-drag-release UI pattern to open a context menu on press, and drag over a menu item to select it on release, you will need to do that by handling <db:link xlink:href="qmouseevent.xml">QMouseEvents</db:link> directly (by overriding <db:link xlink:href="">virtual functions</db:link> in QWidget subclasses, or using TapHandler to open a Menu in Qt Quick); and then the <db:link xlink:href="qcontextmenuevent.xml">QContextMenuEvent</db:link> will be redundant when the <db:link xlink:href="qcontextmenuevent.xml#reason">reason</db:link>() is <db:code>Mouse</db:code>. You should <db:link xlink:href="qevent.xml#ignore">ignore</db:link>() the event in that case; but you should still ensure that the widget, custom control or application can respond to a <db:link xlink:href="qcontextmenuevent.xml">QContextMenuEvent</db:link> that <db:link xlink:href="qcontextmenuevent.xml#reason">comes from</db:link> the platform-specific keyboard shortcut.</db:para>
<db:para>When a <db:link xlink:href="qcontextmenuevent.xml">QContextMenuEvent</db:link> is <db:link xlink:href="qevent.xml#ignore">ignored</db:link>, Qt attempts to deliver it to other widgets and/or Items under the <db:link xlink:href="qcontextmenuevent.xml#pos">position</db:link> (which is usually translated from the cursor position).</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Reason-enum">
<db:title>enum QContextMenuEvent::Reason</db:title>
<db:para>This enum describes the reason why the event was sent.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcontextmenuevent.xml">QContextMenuEvent</db:link></db:emphasis>::Mouse</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The mouse caused the event to be sent. Normally this means the right mouse button was clicked, but this is platform dependent.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcontextmenuevent.xml">QContextMenuEvent</db:link></db:emphasis>::Keyboard</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The keyboard caused this event to be sent. On Windows, this means the menu button was pressed.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qcontextmenuevent.xml">QContextMenuEvent</db:link></db:emphasis>::Other</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The event was sent by some other means (i.e. not by the mouse or keyboard).</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QContextMenuEvent-1">
<db:title>QContextMenuEvent::QContextMenuEvent(QContextMenuEvent::Reason <db:emphasis>reason</db:emphasis>, const QPoint &amp;<db:emphasis>pos</db:emphasis>, const QPoint &amp;<db:emphasis>globalPos</db:emphasis>, Qt::KeyboardModifiers <db:emphasis>modifiers</db:emphasis> = Qt::NoModifier)</db:title>
<db:para>Constructs a context menu event object with the accept parameter flag set to false.</db:para>
<db:para>The <db:code role="parameter">reason</db:code> parameter must be <db:link xlink:href="qcontextmenuevent.xml#Reason-enum">QContextMenuEvent::Mouse</db:link> or <db:link xlink:href="qcontextmenuevent.xml#Reason-enum">QContextMenuEvent::Keyboard</db:link>.</db:para>
<db:para>The <db:code role="parameter">pos</db:code> parameter specifies the mouse position relative to the receiving widget. <db:code role="parameter">globalPos</db:code> is the mouse position in absolute coordinates. The <db:code role="parameter">modifiers</db:code> holds the keyboard modifiers.</db:para>
</db:section>
<db:section xml:id="globalPos">
<db:title>const QPoint &amp;QContextMenuEvent::globalPos() const</db:title>
<db:para>Returns the global position of the mouse pointer at the time of the event.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcontextmenuevent.xml#x">x</db:link>()</db:member>
<db:member><db:link xlink:href="qcontextmenuevent.xml#y">y</db:link>()</db:member>
<db:member><db:link xlink:href="qcontextmenuevent.xml#pos">pos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="globalX">
<db:title>int QContextMenuEvent::globalX() const</db:title>
<db:para>Returns the global x position of the mouse pointer at the time of the event.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcontextmenuevent.xml#globalY">globalY</db:link>()</db:member>
<db:member><db:link xlink:href="qcontextmenuevent.xml#globalPos">globalPos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="globalY">
<db:title>int QContextMenuEvent::globalY() const</db:title>
<db:para>Returns the global y position of the mouse pointer at the time of the event.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcontextmenuevent.xml#globalX">globalX</db:link>()</db:member>
<db:member><db:link xlink:href="qcontextmenuevent.xml#globalPos">globalPos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pos">
<db:title>const QPoint &amp;QContextMenuEvent::pos() const</db:title>
<db:para>Returns the position of the mouse pointer relative to the widget that received the event.</db:para>
<db:note>
<db:para>If the <db:link xlink:href="qcontextmenuevent.xml">QContextMenuEvent</db:link> did not come from the right mouse button, <db:code>pos()</db:code> may be <db:link xlink:href="qpoint.xml#isNull">null</db:link>.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcontextmenuevent.xml#x">x</db:link>()</db:member>
<db:member><db:link xlink:href="qcontextmenuevent.xml#y">y</db:link>()</db:member>
<db:member><db:link xlink:href="qcontextmenuevent.xml#globalPos">globalPos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="reason">
<db:title>QContextMenuEvent::Reason QContextMenuEvent::reason() const</db:title>
<db:para>Returns the reason for this context event.</db:para>
</db:section>
<db:section xml:id="x">
<db:title>int QContextMenuEvent::x() const</db:title>
<db:para>Returns the x position of the mouse pointer, relative to the widget that received the event.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcontextmenuevent.xml#y">y</db:link>()</db:member>
<db:member><db:link xlink:href="qcontextmenuevent.xml#pos">pos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="y">
<db:title>int QContextMenuEvent::y() const</db:title>
<db:para>Returns the y position of the mouse pointer, relative to the widget that received the event.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qcontextmenuevent.xml#x">x</db:link>()</db:member>
<db:member><db:link xlink:href="qcontextmenuevent.xml#pos">pos</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for QContextMenuEvent</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qcontextmenuevent.xml">QContextMenuEvent</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-member-function-documentation">
<db:title>Obsolete Member Function Documentation</db:title>
<db:section xml:id="QContextMenuEvent">
<db:title>[deprecated in 6.4] QContextMenuEvent::QContextMenuEvent(QContextMenuEvent::Reason <db:emphasis>reason</db:emphasis>, const QPoint &amp;<db:emphasis>pos</db:emphasis>)</db:title>
<db:para>This function is deprecated since 6.4. We strongly advise against using it in new code.</db:para>
<db:para>Use the other constructor instead (global position is required).</db:para>
<db:para>Constructs a context menu event object with the accept parameter flag set to false.</db:para>
<db:para>The <db:code role="parameter">reason</db:code> parameter must be <db:link xlink:href="qcontextmenuevent.xml#Reason-enum">QContextMenuEvent::Mouse</db:link> or <db:link xlink:href="qcontextmenuevent.xml#Reason-enum">QContextMenuEvent::Keyboard</db:link>.</db:para>
<db:para>The <db:code role="parameter">pos</db:code> parameter specifies the mouse position relative to the receiving widget.</db:para>
<db:para>The <db:link xlink:href="qcontextmenuevent.xml#globalPos">globalPos</db:link>() is initialized to <db:link xlink:href="qcursor.xml#pos">QCursor::pos</db:link>(), which may not be appropriate. Use the other constructor to specify the global position explicitly.</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
