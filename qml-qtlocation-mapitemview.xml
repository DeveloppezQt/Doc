<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>MapItemView QML Type</db:title>
<db:productname>QtLocation</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Location Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qml-qtlocation-mapitemview.xml">MapItemView</db:link> is used to populate Map from a model.</db:para>
<db:para>This type was introduced in QtLocation 5.5.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtLocation 6.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtLocation 5.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>MapItemView is part of <db:simplelist><db:member><db:link xlink:href="qml-qtlocation5-maps.xml">QML Maps Plugin</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtlocation-mapitemview.xml">MapItemView</db:link> is used to populate Map with MapItems from a model. The <db:link xlink:href="qml-qtlocation-mapitemview.xml">MapItemView</db:link> type only makes sense when contained in a Map, meaning that it has no standalone presentation.</db:para>
<db:section xml:id="example-usage">
<db:title>Example Usage</db:title>
<db:para>This example demonstrates how to use the MapViewItem object to display a <db:link xlink:href="qml-route.xml">route</db:link> on a <db:link xlink:href="qml-qtlocation-map.xml">map</db:link>:</db:para>
<db:programlisting language="qml">import QtQuick
import QtPositioning
import QtLocation

Map {
    RouteModel {
        id: routeModel
    }

    MapItemView {
        model: routeModel
        delegate: routeDelegate
    }

    Component {
        id: routeDelegate

        MapRoute {
            route: routeData
            line.color: &quot;blue&quot;
            line.width: 5
            smooth: true
            opacity: 0.8
        }
    }
}
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="add-prop">
<db:title>[since QtLocation 5.12] add : Transition</db:title>
<db:fieldsynopsis>
<db:type>Transition</db:type>
<db:varname>add</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the transition that is applied to the map items created by the view when they are instantiated and added to the map.</db:para>
<db:para>This property was introduced in QtLocation 5.12.</db:para>
</db:section>
<db:section xml:id="autoFitViewport-prop">
<db:title>autoFitViewport : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>autoFitViewport</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property controls whether to automatically pan and zoom the viewport to display all map items when items are added or removed.</db:para>
<db:para>Defaults to false.</db:para>
</db:section>
<db:section xml:id="delegate-prop">
<db:title>delegate : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>delegate</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the delegate which defines how each item in the model should be displayed. The Component must contain exactly one MapItem -derived object as the root object.</db:para>
</db:section>
<db:section xml:id="model-prop">
<db:title>model : model</db:title>
<db:fieldsynopsis>
<db:type>model</db:type>
<db:varname>model</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the model that provides data used for creating the map items defined by the delegate. Only <db:link xlink:href="qabstractitemmodel.xml">QAbstractItemModel</db:link> based models are supported.</db:para>
</db:section>
<db:section xml:id="remove-prop">
<db:title>[since QtLocation 5.12] remove : Transition</db:title>
<db:fieldsynopsis>
<db:type>Transition</db:type>
<db:varname>remove</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the transition that is applied to the map items created by the view when they are removed.</db:para>
<db:para>This property was introduced in QtLocation 5.12.</db:para>
</db:section>
</db:section>
</db:article>
