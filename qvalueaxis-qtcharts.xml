<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QValueAxis Class</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qvalueaxis-qtcharts.xml">QValueAxis</db:link> class adds values to a chart's axes.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QValueAxis</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtcharts-valueaxis.xml" xlink:role="">ValueAxis</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstractaxis-qtcharts.xml" xlink:role="class">QAbstractAxis</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qcategoryaxis-qtcharts.xml" xlink:role="class">QCategoryAxis</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A value axis can be set up to show an axis line with tick marks, grid lines, and shades. The values on the axis are drawn at the positions of tick marks.</db:para>
<db:para>The following example code illustrates how to use the <db:link xlink:href="qvalueaxis-qtcharts.xml">QValueAxis</db:link> class:</db:para>
<db:programlisting language="cpp">QChartView *chartView = new QChartView;
QLineSeries *series = new QLineSeries;
// ...
chartView-&gt;chart()-&gt;addSeries(series);

QValueAxis *axisX = new QValueAxis;
axisX-&gt;setRange(10, 20.5);
axisX-&gt;setTickCount(10);
axisX-&gt;setLabelFormat(&quot;%.2f&quot;);
chartView-&gt;chart()-&gt;setAxisX(axisX, series);
</db:programlisting>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="TickType-enum">
<db:title>enum QValueAxis::TickType</db:title>
<db:para>This enum describes how the ticks and labels are positioned on the axis.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qvalueaxis-qtcharts.xml">QValueAxis</db:link></db:emphasis>::TicksDynamic</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Ticks are placed according to <db:link xlink:href="qvalueaxis-qtcharts.xml#tickAnchor-prop">tickAnchor</db:link> and <db:link xlink:href="qvalueaxis-qtcharts.xml#tickInterval-prop">tickInterval</db:link> values.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qvalueaxis-qtcharts.xml">QValueAxis</db:link></db:emphasis>::TicksFixed</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Ticks are placed evenly across the axis range. The <db:link xlink:href="qvalueaxis-qtcharts.xml#tickCount-prop">tickCount</db:link> value specifies the number of ticks.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="labelFormat-prop">
<db:title>labelFormat : QString</db:title>
<db:para>This property holds the label format of the axis.</db:para>
<db:para>The format string supports the following conversion specifiers, length modifiers, and flags provided by <db:code>printf()</db:code> in the standard C++ library: d, i, o, x, X, f, F, e, E, g, G, c.</db:para>
<db:para>If <db:link xlink:href="qchart-qtcharts.xml#localizeNumbers-prop">QChart::localizeNumbers</db:link> is <db:code>true</db:code>, the supported specifiers are limited to: d, e, E, f, g, G, and i. Also, only the precision modifier is supported. The rest of the formatting comes from the default <db:link xlink:href="qlocale.xml">QLocale</db:link> of the application.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">labelFormat</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLabelFormat</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>format</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qvalueaxis-qtcharts.xml#labelFormatChanged">labelFormatChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>format</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstring.xml#asprintf">QString::asprintf</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="max-prop">
<db:title>max : qreal</db:title>
<db:para>This property holds the maximum value on the axis.</db:para>
<db:para>When setting this property, the minimum value is adjusted if necessary, to ensure that the range remains valid.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">max</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMax</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>max</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qvalueaxis-qtcharts.xml#maxChanged">maxChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>max</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="min-prop">
<db:title>min : qreal</db:title>
<db:para>This property holds the minimum value on the axis.</db:para>
<db:para>When setting this property, the maximum value is adjusted if necessary, to ensure that the range remains valid.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">min</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMin</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>min</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qvalueaxis-qtcharts.xml#minChanged">minChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>min</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="minorTickCount-prop">
<db:title>minorTickCount : int</db:title>
<db:para>This property holds the number of minor tick marks on the axis. This indicates how many grid lines are drawn between major ticks on the chart. Labels are not drawn for minor ticks. The default value is 0.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">minorTickCount</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinorTickCount</db:emphasis>(<db:type>int</db:type> <db:emphasis>count</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qvalueaxis-qtcharts.xml#minorTickCountChanged">minorTickCountChanged</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>minorTickCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="tickAnchor-prop">
<db:title>tickAnchor : qreal</db:title>
<db:para>This property holds the base value where the dynamically placed tick marks and labels are started from.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">tickAnchor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTickAnchor</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>anchor</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">tickAnchorChanged</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>anchor</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="tickCount-prop">
<db:title>tickCount : int</db:title>
<db:para>This property holds the number of tick marks on the axis. This indicates how many grid lines are drawn on the chart. The default value is 5, and the number cannot be less than 2.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">tickCount</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTickCount</db:emphasis>(<db:type>int</db:type> <db:emphasis>count</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qvalueaxis-qtcharts.xml#tickCountChanged">tickCountChanged</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>tickCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="tickInterval-prop">
<db:title>tickInterval : qreal</db:title>
<db:para>This property holds the interval between dynamically placed tick marks and labels.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">tickInterval</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTickInterval</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>insterval</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">tickIntervalChanged</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>interval</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="tickType-prop">
<db:title>tickType : TickType</db:title>
<db:para>This property holds the positioning method of tick and labels.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qvalueaxis-qtcharts.xml#TickType-enum">QValueAxis::TickType</db:link></db:type> <db:emphasis role="bold">tickType</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTickType</db:emphasis>(<db:type><db:link xlink:href="qvalueaxis-qtcharts.xml#TickType-enum">QValueAxis::TickType</db:link></db:type> <db:emphasis>type</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">tickTypeChanged</db:emphasis>(<db:type><db:link xlink:href="qvalueaxis-qtcharts.xml#TickType-enum">QValueAxis::TickType</db:link></db:type> <db:emphasis>type</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QValueAxis">
<db:title>[explicit] QValueAxis::QValueAxis(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:para>Constructs an axis object that is a child of <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QValueAxis">
<db:title>[virtual noexcept] QValueAxis::~QValueAxis()</db:title>
<db:para>Destroys the object.</db:para>
</db:section>
<db:section xml:id="applyNiceNumbers">
<db:title>void QValueAxis::applyNiceNumbers()</db:title>
<db:para>Modifies the current range and number of tick marks on the axis to look <db:emphasis>nice</db:emphasis>. The algorithm considers numbers that can be expressed as a form of 1*10^n, 2* 10^n, or 5*10^n to be nice numbers. These numbers are used for setting spacing for the tick marks.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qvalueaxis-qtcharts.xml#setRange">setRange</db:link>()</db:member>
<db:member><db:link xlink:href="qvalueaxis-qtcharts.xml#tickCount-prop">setTickCount</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="labelFormatChanged">
<db:title>void QValueAxis::labelFormatChanged(const QString &amp;<db:emphasis>format</db:emphasis>)</db:title>
<db:para>This signal is emitted when the <db:code role="parameter">format</db:code> of axis labels changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qvalueaxis-qtcharts.xml#labelFormat-prop">labelFormat</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="maxChanged">
<db:title>void QValueAxis::maxChanged(qreal <db:emphasis>max</db:emphasis>)</db:title>
<db:para>This signal is emitted when the maximum value of the axis, specified by <db:code role="parameter">max</db:code>, changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qvalueaxis-qtcharts.xml#max-prop">max</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="minChanged">
<db:title>void QValueAxis::minChanged(qreal <db:emphasis>min</db:emphasis>)</db:title>
<db:para>This signal is emitted when the minimum value of the axis, specified by <db:code role="parameter">min</db:code>, changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qvalueaxis-qtcharts.xml#min-prop">min</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="minorTickCountChanged">
<db:title>void QValueAxis::minorTickCountChanged(int <db:emphasis>minorTickCount</db:emphasis>)</db:title>
<db:para>This signal is emitted when the number of minor tick marks on the axis, specified by <db:code role="parameter">minorTickCount</db:code>, changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qvalueaxis-qtcharts.xml#minorTickCount-prop">minorTickCount</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="rangeChanged">
<db:title>void QValueAxis::rangeChanged(qreal <db:emphasis>min</db:emphasis>, qreal <db:emphasis>max</db:emphasis>)</db:title>
<db:para>This signal is emitted when the minimum or maximum value of the axis, specified by <db:code role="parameter">min</db:code> and <db:code role="parameter">max</db:code>, changes.</db:para>
</db:section>
<db:section xml:id="setRange">
<db:title>void QValueAxis::setRange(qreal <db:emphasis>min</db:emphasis>, qreal <db:emphasis>max</db:emphasis>)</db:title>
<db:para>Sets the range from <db:code role="parameter">min</db:code> to <db:code role="parameter">max</db:code> on the axis. If <db:code role="parameter">min</db:code> is greater than <db:code role="parameter">max</db:code>, this function returns without making any changes.</db:para>
</db:section>
<db:section xml:id="tickCountChanged">
<db:title>void QValueAxis::tickCountChanged(int <db:emphasis>tickCount</db:emphasis>)</db:title>
<db:para>This signal is emitted when the number of tick marks on the axis, specified by <db:code role="parameter">tickCount</db:code>, changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qvalueaxis-qtcharts.xml#tickCount-prop">tickCount</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="type">
<db:title>[override virtual] QAbstractAxis::AxisType QValueAxis::type() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractaxis-qtcharts.xml#type" role="function">QAbstractAxis::type() const</db:link>.</db:para>
<db:para>Returns the type of the axis.</db:para>
</db:section>
</db:section>
</db:article>
