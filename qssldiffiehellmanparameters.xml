<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSslDiffieHellmanParameters Class</db:title>
<db:productname>QtNetwork</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Network Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> class provides an interface for Diffie-Hellman parameters for servers.</db:para>
<db:para>This class was introduced in Qt 5.8.</db:para>
<db:note>
<db:para>All functions in this class are <db:link xlink:href="threads-reentrancy.xml">reentrant</db:link>.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSslDiffieHellmanParameters</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += network</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSslDiffieHellmanParameters is part of <db:simplelist><db:member><db:link xlink:href="network.xml">Network Programming API</db:link></db:member><db:member>ssl</db:member><db:member>shared</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> provides an interface for setting Diffie-Hellman parameters to servers based on <db:link xlink:href="qsslsocket.xml">QSslSocket</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsslsocket.xml">QSslSocket</db:link></db:member>
<db:member><db:link xlink:href="qsslcipher.xml">QSslCipher</db:link></db:member>
<db:member><db:link xlink:href="qsslconfiguration.xml">QSslConfiguration</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Error-enum">
<db:title>enum QSslDiffieHellmanParameters::Error</db:title>
<db:para>Describes a <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> error.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link></db:emphasis>::NoError</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>No error occurred.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link></db:emphasis>::InvalidInputDataError</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The given input data could not be used to construct a <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> object.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link></db:emphasis>::UnsafeParametersError</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The Diffie-Hellman parameters are unsafe and should not be used.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSslDiffieHellmanParameters">
<db:title>QSslDiffieHellmanParameters::QSslDiffieHellmanParameters()</db:title>
<db:para>Constructs an empty <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> instance.</db:para>
<db:para>If an empty <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> instance is set on a <db:link xlink:href="qsslconfiguration.xml">QSslConfiguration</db:link> object, Diffie-Hellman negotiation will be disabled.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qssldiffiehellmanparameters.xml#isValid">isValid</db:link>()</db:member>
<db:member><db:link xlink:href="qsslconfiguration.xml">QSslConfiguration</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QSslDiffieHellmanParameters-1">
<db:title>QSslDiffieHellmanParameters::QSslDiffieHellmanParameters(const QSslDiffieHellmanParameters &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs an identical copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QSslDiffieHellmanParameters">
<db:title>[noexcept] QSslDiffieHellmanParameters::~QSslDiffieHellmanParameters()</db:title>
<db:para>Destroys the <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> object.</db:para>
</db:section>
<db:section xml:id="defaultParameters">
<db:title>[static] QSslDiffieHellmanParameters QSslDiffieHellmanParameters::defaultParameters()</db:title>
<db:para>Returns the default <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> used by <db:link xlink:href="qsslsocket.xml">QSslSocket</db:link>.</db:para>
<db:para>This is currently the 1024-bit MODP group from RFC 2459, also known as the Second Oakley Group.</db:para>
</db:section>
<db:section xml:id="error">
<db:title>[noexcept] QSslDiffieHellmanParameters::Error QSslDiffieHellmanParameters::error() const</db:title>
<db:para>Returns the error that caused the <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> object to be invalid.</db:para>
</db:section>
<db:section xml:id="errorString">
<db:title>[noexcept] QString QSslDiffieHellmanParameters::errorString() const</db:title>
<db:para>Returns a human-readable description of the error that caused the <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> object to be invalid.</db:para>
</db:section>
<db:section xml:id="fromEncoded">
<db:title>[static] QSslDiffieHellmanParameters QSslDiffieHellmanParameters::fromEncoded(QIODevice *<db:emphasis>device</db:emphasis>, QSsl::EncodingFormat <db:emphasis>encoding</db:emphasis> = QSsl::Pem)</db:title>
<db:para>Constructs a <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> object by reading from <db:code role="parameter">device</db:code> in either PEM or DER form as specified by <db:code role="parameter">encoding</db:code>.</db:para>
<db:para>Use the <db:link xlink:href="qssldiffiehellmanparameters.xml#isValid">isValid</db:link>() method on the returned object to check whether the Diffie-Hellman parameters were valid and loaded correctly.</db:para>
<db:para>In particular, if <db:code role="parameter">device</db:code> is nullptr or not open for reading, an invalid object will be returned.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qssldiffiehellmanparameters.xml#isValid">isValid</db:link>()</db:member>
<db:member><db:link xlink:href="qsslconfiguration.xml">QSslConfiguration</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fromEncoded-1">
<db:title>[static] QSslDiffieHellmanParameters QSslDiffieHellmanParameters::fromEncoded(const QByteArray &amp;<db:emphasis>encoded</db:emphasis>, QSsl::EncodingFormat <db:emphasis>encoding</db:emphasis> = QSsl::Pem)</db:title>
<db:para>Constructs a <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> object using the byte array <db:code role="parameter">encoded</db:code> in either PEM or DER form as specified by <db:code role="parameter">encoding</db:code>.</db:para>
<db:para>Use the <db:link xlink:href="qssldiffiehellmanparameters.xml#isValid">isValid</db:link>() method on the returned object to check whether the Diffie-Hellman parameters were valid and loaded correctly.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qssldiffiehellmanparameters.xml#isValid">isValid</db:link>()</db:member>
<db:member><db:link xlink:href="qsslconfiguration.xml">QSslConfiguration</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isEmpty">
<db:title>[noexcept] bool QSslDiffieHellmanParameters::isEmpty() const</db:title>
<db:para>Returns true if this is a an empty <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> instance.</db:para>
<db:para>Setting an empty <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> instance on a <db:link xlink:href="qsslsocket.xml">QSslSocket</db:link>-based server will disable Diffie-Hellman key exchange.</db:para>
</db:section>
<db:section xml:id="isValid">
<db:title>[noexcept] bool QSslDiffieHellmanParameters::isValid() const</db:title>
<db:para>Returns true if this is a valid <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link>; otherwise false.</db:para>
<db:para>This method should be used after constructing a <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> object to determine its validity.</db:para>
<db:para>If a <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> object is not valid, you can use the <db:link xlink:href="qssldiffiehellmanparameters.xml#error">error</db:link>() method to determine what error prevented the object from being constructed.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qssldiffiehellmanparameters.xml#error">error</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="swap">
<db:title>[noexcept] void QSslDiffieHellmanParameters::swap(QSslDiffieHellmanParameters &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps this <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> with <db:code role="parameter">other</db:code>. This function is very fast and never fails.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>[noexcept] QSslDiffieHellmanParameters &amp;QSslDiffieHellmanParameters::operator=(QSslDiffieHellmanParameters &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Move-assigns <db:code role="parameter">other</db:code> to this <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> instance.</db:para>
<db:note>
<db:para>The moved-from object <db:code role="parameter">other</db:code> is placed in a partially-formed state, in which the only valid operations are destruction and assignment of a new value.</db:para>
</db:note>
</db:section>
<db:section xml:id="operator-eq-1">
<db:title>QSslDiffieHellmanParameters &amp;QSslDiffieHellmanParameters::operator=(const QSslDiffieHellmanParameters &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Copies the contents of <db:code role="parameter">other</db:code> into this <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link>, making the two <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link> identical.</db:para>
<db:para>Returns a reference to this <db:link xlink:href="qssldiffiehellmanparameters.xml">QSslDiffieHellmanParameters</db:link>.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="qHash-2">
<db:title>[noexcept, since 5.8] uint qHash(const QSslDiffieHellmanParameters &amp;<db:emphasis>dhparam</db:emphasis>, uint <db:emphasis>seed</db:emphasis> = 0)</db:title>
<db:para>Returns an hash value for <db:code role="parameter">dhparam</db:code>, using <db:code role="parameter">seed</db:code> to seed the calculation.</db:para>
<db:para>This function was introduced in Qt 5.8.</db:para>
</db:section>
<db:section xml:id="operator-lt-lt-4">
<db:title>[since 5.8] QDebug operator&lt;&lt;(QDebug <db:emphasis>debug</db:emphasis>, const QSslDiffieHellmanParameters &amp;<db:emphasis>dhparam</db:emphasis>)</db:title>
<db:para>Writes the set of Diffie-Hellman parameters in <db:code role="parameter">dhparam</db:code> into the debug object <db:code role="parameter">debug</db:code> for debugging purposes.</db:para>
<db:para>The Diffie-Hellman parameters will be represented in Base64-encoded DER form.</db:para>
<db:para>This function was introduced in Qt 5.8.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="debug.xml">Debugging Techniques</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq-eq-1">
<db:title>[noexcept, since 5.8] bool operator==(const QSslDiffieHellmanParameters &amp;<db:emphasis>lhs</db:emphasis>, const QSslDiffieHellmanParameters &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:para>Returns true if <db:code role="parameter">lhs</db:code> is equal to <db:code role="parameter">rhs</db:code>; otherwise returns false.</db:para>
<db:para>This function was introduced in Qt 5.8.</db:para>
</db:section>
</db:section>
</db:article>
