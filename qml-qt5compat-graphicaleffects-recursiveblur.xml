<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>RecursiveBlur QML Type</db:title>
<db:productname>QtGraphicalEffects5Compat</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 5 Compatibility APIs: Graphical Effects Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Blurs repeatedly, providing a strong blur effect.</db:para>
<db:para>This type was introduced in QtGraphicalEffects 1.0.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt5Compat.GraphicalEffects</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtGraphicalEffects 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Item</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>RecursiveBlur is part of <db:simplelist><db:member>qtgraphicaleffects-blur</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qt5compat-graphicaleffects-recursiveblur.xml">RecursiveBlur</db:link> effect softens the image by blurring it with an algorithm that uses a recursive feedback loop to blur the source multiple times. The effect may give more blurry results than <db:link xlink:href="qml-qt5compat-graphicaleffects-gaussianblur.xml">GaussianBlur</db:link> or <db:link xlink:href="qml-qt5compat-graphicaleffects-fastblur.xml">FastBlur</db:link>, but the result is produced asynchronously and takes more time.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Source</db:para>
</db:th>
<db:th>
<db:para>Effect applied</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/Original_bug.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/RecursiveBlur_bug.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
<db:note>
<db:para>This effect is available when running with OpenGL.</db:para>
</db:note>
<db:section xml:id="example">
<db:title>Example</db:title>
<db:para>The following example shows how to apply the effect.</db:para>
<db:programlisting language="qml">import QtQuick
import Qt5Compat.GraphicalEffects

Item {
    width: 300
    height: 300

    Image {
        id: bug
        source: &quot;images/bug.jpg&quot;
        sourceSize: Qt.size(parent.width, parent.height)
        smooth: true
        visible: false
    }

    RecursiveBlur {
        anchors.fill: bug
        source: bug
        radius: 7.5
        loops: 50
    }
}
</db:programlisting>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="cached-prop">
<db:title>cached : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>cached</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property allows the effect output pixels to be cached in order to improve the rendering performance.</db:para>
<db:para>Every time the source or effect properties are changed, the pixels in the cache must be updated. Memory consumption is increased, because an extra buffer of memory is required for storing the effect output.</db:para>
<db:para>It is recommended to disable the cache when the source or the effect properties are animated.</db:para>
<db:para>By default, the property is set to <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="loops-prop">
<db:title>loops : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>loops</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the amount of blur iterations that are going to be performed for the source. When the property changes, the iterative blurring process starts. If the value is decreased or if the value changes from zero to non-zero, a snapshot is taken from the source. The snapshot is used as a starting point for the process.</db:para>
<db:para>The iteration loop tries to run as fast as possible. The speed might be limited by the VSYNC or the time needed for one blur step, or both. Sometimes it may be desirable to perform the blurring with a slower pace. In that case, it may be convenient to control the property with Animation which increases the value.</db:para>
<db:para>The value ranges from 0 to inf. By default, the property is set to <db:code>0</db:code>.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Output examples with different loops values</db:para>
</db:th>
<db:th>
</db:th>
<db:th>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/RecursiveBlur_loops1.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/RecursiveBlur_loops2.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/RecursiveBlur_loops3.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold"> loops: 4 </db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold"> loops: 20 </db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold"> loops: 70 </db:emphasis></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qt5compat-graphicaleffects-recursiveblur.xml#radius-prop">radius</db:link>: 7.5</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qt5compat-graphicaleffects-recursiveblur.xml#radius-prop">radius</db:link>: 7.5</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qt5compat-graphicaleffects-recursiveblur.xml#radius-prop">radius</db:link>: 7.5</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="progress-prop">
<db:title>progress : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>progress</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the progress of asynchronous source blurring process, from 0.0 (nothing blurred) to 1.0 (finished).</db:para>
</db:section>
<db:section xml:id="radius-prop">
<db:title>radius : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>radius</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the distance of neighboring pixels which influence the blurring of individual pixels. A larger radius provides better quality, but is slower to render.</db:para>
<db:para><db:emphasis role="bold">Note</db:emphasis>: The radius value in this effect is not intended to be changed or animated frequently. The correct way to use it is to set the correct value and keep it unchanged for the whole duration of the iterative blur sequence.</db:para>
<db:para>The value ranges from (no blur) to 16.0 (maximum blur step). By default, the property is set to <db:code>0.0</db:code> (no blur).</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Output examples with different radius values</db:para>
</db:th>
<db:th>
</db:th>
<db:th>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/RecursiveBlur_radius1.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/RecursiveBlur_radius2.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/RecursiveBlur_radius3.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold"> radius: 2.5 </db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold"> radius: 4.5 </db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold"> radius: 7.5 </db:emphasis></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qt5compat-graphicaleffects-recursiveblur.xml#loops-prop">loops</db:link>: 20</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qt5compat-graphicaleffects-recursiveblur.xml#loops-prop">loops</db:link>: 20</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qt5compat-graphicaleffects-recursiveblur.xml#loops-prop">loops</db:link>: 20</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="source-prop">
<db:title>source : variant</db:title>
<db:fieldsynopsis>
<db:type>variant</db:type>
<db:varname>source</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the source item that is going to be blurred.</db:para>
<db:note>
<db:para>It is not supported to let the effect include itself, for instance by setting source to the effect's parent.</db:para>
</db:note>
</db:section>
<db:section xml:id="transparentBorder-prop">
<db:title>transparentBorder : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>transparentBorder</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the blur behavior near the edges of the item, where the pixel blurring is affected by the pixels outside the source edges.</db:para>
<db:para>If the property is set to <db:code>true</db:code>, the pixels outside the source are interpreted to be transparent, which is similar to OpenGL clamp-to-border extension. The blur is expanded slightly outside the effect item area.</db:para>
<db:para>If the property is set to <db:code>false</db:code>, the pixels outside the source are interpreted to contain the same color as the pixels at the edge of the item, which is similar to OpenGL clamp-to-edge behavior. The blur does not expand outside the effect item area.</db:para>
<db:para>By default, the property is set to <db:code>false</db:code>.</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Output examples with different transparentBorder values</db:para>
</db:th>
<db:th>
</db:th>
<db:th>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/RecursiveBlur_transparentBorder1.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/RecursiveBlur_transparentBorder2.png"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:emphasis role="bold"> transparentBorder: false </db:emphasis></db:para>
</db:td>
<db:td>
<db:para><db:emphasis role="bold"> transparentBorder: true </db:emphasis></db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qt5compat-graphicaleffects-recursiveblur.xml#loops-prop">loops</db:link>: 20</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qt5compat-graphicaleffects-recursiveblur.xml#loops-prop">loops</db:link>: 20</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qml-qt5compat-graphicaleffects-recursiveblur.xml#radius-prop">radius</db:link>: 7.5</db:para>
</db:td>
<db:td>
<db:para><db:link xlink:href="qml-qt5compat-graphicaleffects-recursiveblur.xml#radius-prop">radius</db:link>: 7.5</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
</db:article>
