<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>WebEngineHistory QML Type</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides data models that represent the history of a web engine page.</db:para>
<db:para>This type was introduced in QtWebEngine 1.1.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtWebEngine</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtWebEngine 1.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qwebenginehistory.xml">QWebEngineHistory</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtwebengine-webenginehistory.xml">WebEngineHistory</db:link> type can be accessed by using the <db:link xlink:href="qml-qtwebengine-webengineview.xml#history-prop">WebEngineView.history</db:link> property.</db:para>
<db:para>The <db:link xlink:href="qml-qtwebengine-webenginehistory.xml">WebEngineHistory</db:link> type provides the following <db:link xlink:href="qml-qtwebengine-webenginehistorymodel.xml">WebEngineHistoryModel</db:link> data model objects:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:code>backItems</db:code>, which contains the URLs of visited pages.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>forwardItems</db:code>, which contains the URLs of the pages that were visited after visiting the current page.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:code>items</db:code>, which contains the URLs of the back and forward items, as well as the URL of the current page.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The easiest way to use these models is to use them in a <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link> as illustrated by the following code snippet:</db:para>
<db:programlisting language="cpp">ListView {
    id: historyItemsList
    anchors.fill: parent
    model: webEngineView.history.items
    delegate:
        Text {
            color: &quot;black&quot;
            text: model.title + &quot; - &quot; + model.url + &quot; (&quot; + model.offset + &quot;)&quot;
        }
}
</db:programlisting>
<db:para>The <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link> shows the content of the corresponding model. The delegate is responsible for the format of the list items. The appearance of each item of the list in the delegate can be defined separately (it is not web engine specific).</db:para>
<db:para>The model roles <db:emphasis>title</db:emphasis>, <db:emphasis>url</db:emphasis>, and <db:emphasis>icon</db:emphasis> specify the title, URL, and favicon of the visited page. The <db:emphasis>offset</db:emphasis> role specifies the position of the page in respect to the current page (0). A positive number indicates that the page was visited after the current page, whereas a negative number indicates that the page was visited before the current page.</db:para>
<db:para>The data models can also be used to create a menu, as illustrated by the following code snippet:</db:para>
<db:programlisting language="cpp">    menuBar: ToolBar {
        id: navigationBar
        RowLayout {
            anchors.fill: parent
            ToolButton {
                enabled: currentWebView &amp;amp;&amp;amp; (currentWebView.canGoBack || currentWebView.canGoForward)
                onClicked: historyMenu.open()
                text: qsTr(&quot;â–¼&quot;)
                Menu {
                    id: historyMenu
                    Instantiator {
                        model: currentWebView &amp;amp;&amp;amp; currentWebView.history.items
                        MenuItem {
                            text: model.title
                            onTriggered: currentWebView.goBackOrForward(model.offset)
                            checkable: !enabled
                            checked: !enabled
                            enabled: model.offset
                        }

                        onObjectAdded: function(index, object) {
                            historyMenu.insertItem(index, object)
                        }
                        onObjectRemoved: function(index, object) {
                            historyMenu.removeItem(object)
                        }
                    }
                }
</db:programlisting>
<db:para>For the complete example, see <db:link xlink:href="qtwebengine-webenginequick-quicknanobrowser-example.xml">WebEngine Quick Nano Browser</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtwebengine-webenginehistorymodel.xml">WebEngineHistoryModel</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="backItems-prop">
<db:title>[read-only] backItems : WebEngineHistoryModel</db:title>
<db:fieldsynopsis>
<db:type>WebEngineHistoryModel</db:type>
<db:varname>backItems</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>URLs of visited pages.</db:para>
</db:section>
<db:section xml:id="forwardItems-prop">
<db:title>[read-only] forwardItems : WebEngineHistoryModel</db:title>
<db:fieldsynopsis>
<db:type>WebEngineHistoryModel</db:type>
<db:varname>forwardItems</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>URLs of the pages that were visited after visiting the current page.</db:para>
</db:section>
<db:section xml:id="items-prop">
<db:title>[read-only] items : WebEngineHistoryModel</db:title>
<db:fieldsynopsis>
<db:type>WebEngineHistoryModel</db:type>
<db:varname>items</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>URLs of back items, forward items, and the current item in the history.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="clear-method">
<db:title>[since QtWebEngine 1.11] void clear()</db:title>
<db:para>Clears the history.</db:para>
<db:para>This method was introduced in QtWebEngine 1.11.</db:para>
</db:section>
</db:section>
</db:article>
