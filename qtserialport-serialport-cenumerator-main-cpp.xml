<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Command Line Enumerator Example</db:title>
<db:productname>QtSerialPort</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Serial Port Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Shows how to get information about serial devices in a system.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2012 Laszlo Papp &amp;lt;lpapp@kde.org&amp;gt;
** Contact: https://www.qt.io/licensing/
**
** This file is part of the QtSerialPort module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &amp;lt;QCoreApplication&amp;gt;
#include &amp;lt;QSerialPortInfo&amp;gt;
#include &amp;lt;QTextStream&amp;gt;

int main(int argc, char *argv[])
{
    QCoreApplication coreApplication(argc, argv);
    QTextStream out(stdout);
    const auto serialPortInfos = QSerialPortInfo::availablePorts();

    out &amp;lt;&amp;lt; &quot;Total number of ports available: &quot; &amp;lt;&amp;lt; serialPortInfos.count() &amp;lt;&amp;lt; endl;

    const QString blankString = &quot;N/A&quot;;
    QString description;
    QString manufacturer;
    QString serialNumber;

    for (const QSerialPortInfo &amp;amp;serialPortInfo : serialPortInfos) {
        description = serialPortInfo.description();
        manufacturer = serialPortInfo.manufacturer();
        serialNumber = serialPortInfo.serialNumber();
        out &amp;lt;&amp;lt; endl
            &amp;lt;&amp;lt; &quot;Port: &quot; &amp;lt;&amp;lt; serialPortInfo.portName() &amp;lt;&amp;lt; endl
            &amp;lt;&amp;lt; &quot;Location: &quot; &amp;lt;&amp;lt; serialPortInfo.systemLocation() &amp;lt;&amp;lt; endl
            &amp;lt;&amp;lt; &quot;Description: &quot; &amp;lt;&amp;lt; (!description.isEmpty() ? description : blankString) &amp;lt;&amp;lt; endl
            &amp;lt;&amp;lt; &quot;Manufacturer: &quot; &amp;lt;&amp;lt; (!manufacturer.isEmpty() ? manufacturer : blankString) &amp;lt;&amp;lt; endl
            &amp;lt;&amp;lt; &quot;Serial number: &quot; &amp;lt;&amp;lt; (!serialNumber.isEmpty() ? serialNumber : blankString) &amp;lt;&amp;lt; endl
            &amp;lt;&amp;lt; &quot;Vendor Identifier: &quot; &amp;lt;&amp;lt; (serialPortInfo.hasVendorIdentifier()
                                         ? QByteArray::number(serialPortInfo.vendorIdentifier(), 16)
                                         : blankString) &amp;lt;&amp;lt; endl
            &amp;lt;&amp;lt; &quot;Product Identifier: &quot; &amp;lt;&amp;lt; (serialPortInfo.hasProductIdentifier()
                                          ? QByteArray::number(serialPortInfo.productIdentifier(), 16)
                                          : blankString) &amp;lt;&amp;lt; endl
            &amp;lt;&amp;lt; &quot;Busy: &quot; &amp;lt;&amp;lt; (serialPortInfo.isBusy() ? &quot;Yes&quot; : &quot;No&quot;) &amp;lt;&amp;lt; endl;
    }

    return 0;
}

</db:programlisting>
</db:article>
