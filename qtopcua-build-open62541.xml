<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Building Qt OPC UA Open62541 Plugin</db:title>
<db:productname>QtOpcUa</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>An OPC UA module for Qt</db:titleabbrev>
<db:abstract>
<db:para>Build instructions for the Qt OPC UA Open62541 plugin.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Open62541 plugin is built by default from the included 3rd party sources and has no external dependencies. The open62541 library uses OpenSSL for security. If the OpenSSL library is detected during configuration, security is enabled for the tests and the open62541 backend. The Open62541 source and header files bundled with Qt OPC UA have been generated from the open62541 1.1 commit e941fc23b0 using the following commands:</db:para>
<db:programlisting language="cpp">cmake -DUA_ENABLE_AMALGAMATION=ON -DUA_AMALGAMATION_ARCHITECTURES=&quot;win32;posix&quot; -DUA_ENABLE_SUBSCRIPTIONS_EVENTS=ON
make
</db:programlisting>
<db:para>In order to disable the Open62541 plugin completely, use:</db:para>
<db:programlisting language="cpp">    cmake &amp;lt;/path/to/qtopcua&amp;gt; -DINPUT_open62541=no
\encode

In case you want to build a custom version of the Open62541 plugin, Open62541 1.1 (e941fc23b0) built with the same options as above is required.

The following options must be passed to cmake when building with open62541 installed to a custom location:

\code
    -DINPUT_open62541=system -DOPEN62541_INCDIR=/path/to/sdk/include -DOPEN62541_LIBDIR=/path/to/sdk/lib
</db:programlisting>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Setting</db:para>
</db:th>
<db:th>
<db:para>Value</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>OPEN62541_INCDIR</db:para>
</db:td>
<db:td>
<db:para>The directory which contains open62541.h</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>OPEN62541_LIBDIR</db:para>
</db:td>
<db:td>
<db:para>The directory which contains the library file</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>For example, the following options can be used for building the open62541 plugin using a static build directly from its build directory without installing it:</db:para>
<db:programlisting language="cpp">-DOPEN62541_INCDIR=/path/to/open62541/build -DOPEN62541_LIBDIR=/path/to/open62541/build/bin
</db:programlisting>
<db:para>The output of the configuration step indicates whether the detection was successful:</db:para>
<db:programlisting language="cpp">Open62541 .............................. yes
</db:programlisting>
</db:article>
