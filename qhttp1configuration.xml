<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QHttp1Configuration Class</db:title>
<db:productname>QtNetwork</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Network Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qhttp1configuration.xml">QHttp1Configuration</db:link> class controls HTTP/1 parameters and settings.</db:para>
<db:para>This class was introduced in Qt 6.5.</db:para>
<db:note>
<db:para>All functions in this class are reentrant.</db:para>
</db:note>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QHttp1Configuration</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Network)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Network)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += network</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QHttp1Configuration is part of <db:simplelist><db:member><db:link xlink:href="network.xml">Network Programming API</db:link></db:member><db:member>shared</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qhttp1configuration.xml">QHttp1Configuration</db:link> controls HTTP/1 parameters and settings that <db:link xlink:href="qnetworkaccessmanager.xml">QNetworkAccessManager</db:link> will use to send requests and process responses.</db:para>
<db:note>
<db:para>The configuration must be set before the first request was sent to a given host (and thus an HTTP/1 session established).</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qnetworkrequest.xml#setHttp1Configuration">QNetworkRequest::setHttp1Configuration</db:link>()</db:member>
<db:member><db:link xlink:href="qnetworkrequest.xml#http1Configuration">QNetworkRequest::http1Configuration</db:link>()</db:member>
<db:member><db:link xlink:href="qnetworkaccessmanager.xml">QNetworkAccessManager</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QHttp1Configuration">
<db:title>QHttp1Configuration::QHttp1Configuration()</db:title>
<db:para>Default constructs a <db:link xlink:href="qhttp1configuration.xml">QHttp1Configuration</db:link> object.</db:para>
</db:section>
<db:section xml:id="QHttp1Configuration-2">
<db:title>QHttp1Configuration::QHttp1Configuration(const QHttp1Configuration &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Copy-constructs this <db:link xlink:href="qhttp1configuration.xml">QHttp1Configuration</db:link>.</db:para>
</db:section>
<db:section xml:id="QHttp1Configuration-1">
<db:title>[noexcept] QHttp1Configuration::QHttp1Configuration(QHttp1Configuration &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Move-constructs this <db:link xlink:href="qhttp1configuration.xml">QHttp1Configuration</db:link> from <db:code role="parameter">other</db:code>.</db:para>
<db:note>
<db:para>The moved-from object <db:code role="parameter">other</db:code> is placed in a partially-formed state, in which the only valid operations are destruction and assignment of a new value.</db:para>
</db:note>
</db:section>
<db:section xml:id="dtor.QHttp1Configuration">
<db:title>[noexcept] QHttp1Configuration::~QHttp1Configuration()</db:title>
<db:para>Destructor.</db:para>
</db:section>
<db:section xml:id="numberOfConnectionsPerHost">
<db:title>qsizetype QHttp1Configuration::numberOfConnectionsPerHost() const</db:title>
<db:para>Returns the number of connections used per http(s) host:<db:emphasis>port</db:emphasis> combination. The default is six (6).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttp1configuration.xml#setNumberOfConnectionsPerHost">setNumberOfConnectionsPerHost</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setNumberOfConnectionsPerHost">
<db:title>void QHttp1Configuration::setNumberOfConnectionsPerHost(qsizetype <db:emphasis>number</db:emphasis>)</db:title>
<db:para>Sets the number of connections (minimum: 1; maximum: 255) used per http(s) <db:emphasis>host</db:emphasis>:<db:emphasis>port</db:emphasis> combination to <db:code role="parameter">number</db:code>.</db:para>
<db:para>If <db:code role="parameter">number</db:code> is â‰¤ 0, does nothing. If <db:code role="parameter">number</db:code> is &gt; 255, 255 is used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttp1configuration.xml#numberOfConnectionsPerHost">numberOfConnectionsPerHost</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="swap">
<db:title>[noexcept] void QHttp1Configuration::swap(QHttp1Configuration &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps this HTTP/1 configuration with <db:code role="parameter">other</db:code>. This operation is very fast and never fails.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>[noexcept] QHttp1Configuration &amp;QHttp1Configuration::operator=(QHttp1Configuration &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Move-assigns <db:code role="parameter">other</db:code> to this <db:link xlink:href="qhttp1configuration.xml">QHttp1Configuration</db:link>.</db:para>
<db:note>
<db:para>The moved-from object <db:code role="parameter">other</db:code> is placed in a partially-formed state, in which the only valid operations are destruction and assignment of a new value.</db:para>
</db:note>
</db:section>
<db:section xml:id="operator-eq-1">
<db:title>QHttp1Configuration &amp;QHttp1Configuration::operator=(const QHttp1Configuration &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Copy-assigns <db:code role="parameter">other</db:code> to this <db:link xlink:href="qhttp1configuration.xml">QHttp1Configuration</db:link>.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="qHash">
<db:title>[noexcept, since 6.5] size_t qHash(const QHttp1Configuration &amp;<db:emphasis>key</db:emphasis>, size_t <db:emphasis>seed</db:emphasis> = 0)</db:title>
<db:para>Returns the hash value for <db:code role="parameter">key</db:code>, using <db:code role="parameter">seed</db:code> to seed the calculation.</db:para>
<db:para>This function was introduced in Qt 6.5.</db:para>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>[noexcept, since 6.5] bool operator!=(const QHttp1Configuration &amp;<db:emphasis>lhs</db:emphasis>, const QHttp1Configuration &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:para>Returns true if <db:code role="parameter">lhs</db:code> and <db:code role="parameter">rhs</db:code> do not represent the same set of HTTP/1 parameters.</db:para>
<db:para>This function was introduced in Qt 6.5.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>[noexcept, since 6.5] bool operator==(const QHttp1Configuration &amp;<db:emphasis>lhs</db:emphasis>, const QHttp1Configuration &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:para>Returns true if <db:code role="parameter">lhs</db:code> and <db:code role="parameter">rhs</db:code> represent the same set of HTTP/1 parameters.</db:para>
<db:para>This function was introduced in Qt 6.5.</db:para>
</db:section>
</db:section>
</db:article>
