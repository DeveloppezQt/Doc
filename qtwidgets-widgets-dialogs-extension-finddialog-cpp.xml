<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Extension Example</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The Extension example shows how to add an extension to a <db:link xlink:href="qdialog.xml">QDialog</db:link> using the <db:link xlink:href="qabstractbutton.xml#toggled">QAbstractButton::toggled</db:link>() signal and the <db:link xlink:href="qwidget.xml#visible-prop">QWidget::setVisible</db:link>() slot.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &amp;lt;QtWidgets&amp;gt;

#include &quot;finddialog.h&quot;

FindDialog::FindDialog(QWidget *parent)
    : QDialog(parent)
{
    label = new QLabel(tr(&quot;Find &amp;amp;what:&quot;));
    lineEdit = new QLineEdit;
    label-&amp;gt;setBuddy(lineEdit);

    caseCheckBox = new QCheckBox(tr(&quot;Match &amp;amp;case&quot;));
    fromStartCheckBox = new QCheckBox(tr(&quot;Search from &amp;amp;start&quot;));
    fromStartCheckBox-&amp;gt;setChecked(true);

    findButton = new QPushButton(tr(&quot;&amp;amp;Find&quot;));
    findButton-&amp;gt;setDefault(true);

    moreButton = new QPushButton(tr(&quot;&amp;amp;More&quot;));
    moreButton-&amp;gt;setCheckable(true);
    moreButton-&amp;gt;setAutoDefault(false);


    extension = new QWidget;

    wholeWordsCheckBox = new QCheckBox(tr(&quot;&amp;amp;Whole words&quot;));
    backwardCheckBox = new QCheckBox(tr(&quot;Search &amp;amp;backward&quot;));
    searchSelectionCheckBox = new QCheckBox(tr(&quot;Search se&amp;amp;lection&quot;));

    buttonBox = new QDialogButtonBox(Qt::Vertical);
    buttonBox-&amp;gt;addButton(findButton, QDialogButtonBox::ActionRole);
    buttonBox-&amp;gt;addButton(moreButton, QDialogButtonBox::ActionRole);

    connect(moreButton, &amp;amp;QAbstractButton::toggled, extension, &amp;amp;QWidget::setVisible);

    QVBoxLayout *extensionLayout = new QVBoxLayout;
    extensionLayout-&amp;gt;setMargin(0);
    extensionLayout-&amp;gt;addWidget(wholeWordsCheckBox);
    extensionLayout-&amp;gt;addWidget(backwardCheckBox);
    extensionLayout-&amp;gt;addWidget(searchSelectionCheckBox);
    extension-&amp;gt;setLayout(extensionLayout);

    QHBoxLayout *topLeftLayout = new QHBoxLayout;
    topLeftLayout-&amp;gt;addWidget(label);
    topLeftLayout-&amp;gt;addWidget(lineEdit);

    QVBoxLayout *leftLayout = new QVBoxLayout;
    leftLayout-&amp;gt;addLayout(topLeftLayout);
    leftLayout-&amp;gt;addWidget(caseCheckBox);
    leftLayout-&amp;gt;addWidget(fromStartCheckBox);

    QGridLayout *mainLayout = new QGridLayout;
    mainLayout-&amp;gt;setSizeConstraint(QLayout::SetFixedSize);
    mainLayout-&amp;gt;addLayout(leftLayout, 0, 0);
    mainLayout-&amp;gt;addWidget(buttonBox, 0, 1);
    mainLayout-&amp;gt;addWidget(extension, 1, 0, 1, 2);
    mainLayout-&amp;gt;setRowStretch(2, 1);

    setLayout(mainLayout);

    setWindowTitle(tr(&quot;Extension&quot;));
    extension-&amp;gt;hide();
}

</db:programlisting>
</db:article>
