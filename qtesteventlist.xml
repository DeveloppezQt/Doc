<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QTestEventList Class</db:title>
<db:productname>QtTestLib</db:productname>
<db:edition>Qt 5.5.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Test Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qtesteventlist.xml">QTestEventList</db:link> class provides a list of GUI events.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QTestEventList</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += testlib</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qtesteventlist.xml">QTestEventList</db:link> inherits from <db:link xlink:href="qlist.xml">QList</db:link>&lt;QTestEvent *&gt;, and provides convenience functions for populating the list.</db:para>
<db:para>A <db:link xlink:href="qtesteventlist.xml">QTestEventList</db:link> can be populated with GUI events that can be stored as test data for later usage, or be replayed on any QWidget.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">QTestEventList events;
events.addKeyClick('a');
events.addKeyClick(Qt::Key_Backspace);
events.addDelay(200);

QLineEdit *lineEdit = new QLineEdit(myParent);
...
events.simulate(lineEdit);
events.simulate(lineEdit);
</db:programlisting>
<db:para>The example above simulates the user entering the character <db:code>a</db:code> followed by a backspace, waiting for 200 milliseconds and repeating it.</db:para>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QTestEventList">
<db:title>QTestEventList::QTestEventList()</db:title>
<db:para>Constructs an empty <db:link xlink:href="qtesteventlist.xml">QTestEventList</db:link>.</db:para>
</db:section>
<db:section xml:id="QTestEventList-1">
<db:title>QTestEventList::QTestEventList(const QTestEventList &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a new <db:link xlink:href="qtesteventlist.xml">QTestEventList</db:link> as a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QTestEventList">
<db:title>[noexcept] QTestEventList::~QTestEventList()</db:title>
<db:para>Empties the list and destroys all stored events.</db:para>
</db:section>
<db:section xml:id="addDelay">
<db:title>void QTestEventList::addDelay(int <db:emphasis>msecs</db:emphasis>)</db:title>
<db:para>Adds a <db:code role="parameter">msecs</db:code> milliseconds delay.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtest.xml#qWait">QTest::qWait</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addKeyClick">
<db:title>void QTestEventList::addKeyClick(int <db:emphasis>qtKey</db:emphasis>, int <db:emphasis>modifiers</db:emphasis>, int <db:emphasis>msecs</db:emphasis> = -1)</db:title>
<db:para>Adds a new key click to the list. The event will simulate the key <db:code role="parameter">qtKey</db:code> with the modifier <db:code role="parameter">modifiers</db:code> and then wait for <db:code role="parameter">msecs</db:code> milliseconds.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtest.xml#keyClick">QTest::keyClick</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addKeyClick-1">
<db:title>void QTestEventList::addKeyClick(char <db:emphasis>ascii</db:emphasis>, int <db:emphasis>modifiers</db:emphasis>, int <db:emphasis>msecs</db:emphasis> = -1)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Adds a new key click to the list. The event will simulate the key <db:code role="parameter">ascii</db:code> with the modifier <db:code role="parameter">modifiers</db:code> and then wait for <db:code role="parameter">msecs</db:code> milliseconds.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtest.xml#keyClick">QTest::keyClick</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addKeyClicks">
<db:title>void QTestEventList::addKeyClicks(const int &amp;<db:emphasis>keys</db:emphasis>, int <db:emphasis>modifiers</db:emphasis>, int <db:emphasis>msecs</db:emphasis> = -1)</db:title>
<db:para>Adds new keyboard entries to the list. The event will press the <db:code role="parameter">keys</db:code> with the <db:code role="parameter">modifiers</db:code> and wait <db:code role="parameter">msecs</db:code> milliseconds between each key.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtest.xml#keyClicks">QTest::keyClicks</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addKeyPress">
<db:title>void QTestEventList::addKeyPress(int <db:emphasis>qtKey</db:emphasis>, int <db:emphasis>modifiers</db:emphasis>, int <db:emphasis>msecs</db:emphasis> = -1)</db:title>
<db:para>Adds a new key press to the list. The event will press the key <db:code role="parameter">qtKey</db:code> with the modifier <db:code role="parameter">modifiers</db:code> and then wait for <db:code role="parameter">msecs</db:code> milliseconds.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtest.xml#keyPress">QTest::keyPress</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addKeyPress-1">
<db:title>void QTestEventList::addKeyPress(char <db:emphasis>ascii</db:emphasis>, int <db:emphasis>modifiers</db:emphasis>, int <db:emphasis>msecs</db:emphasis> = -1)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Adds a new key press to the list. The event will press the key <db:code role="parameter">ascii</db:code> with the modifier <db:code role="parameter">modifiers</db:code> and then wait for <db:code role="parameter">msecs</db:code> milliseconds.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtest.xml#keyPress">QTest::keyPress</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addKeyRelease">
<db:title>void QTestEventList::addKeyRelease(int <db:emphasis>qtKey</db:emphasis>, int <db:emphasis>modifiers</db:emphasis>, int <db:emphasis>msecs</db:emphasis> = -1)</db:title>
<db:para>Adds a new key release to the list. The event will release the key <db:code role="parameter">qtKey</db:code> with the modifier <db:code role="parameter">modifiers</db:code> and then wait for <db:code role="parameter">msecs</db:code> milliseconds.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtest.xml#keyRelease">QTest::keyRelease</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addKeyRelease-1">
<db:title>void QTestEventList::addKeyRelease(char <db:emphasis>ascii</db:emphasis>, int <db:emphasis>modifiers</db:emphasis>, int <db:emphasis>msecs</db:emphasis> = -1)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Adds a new key release to the list. The event will release the key <db:code role="parameter">ascii</db:code> with the modifier <db:code role="parameter">modifiers</db:code> and then wait for <db:code role="parameter">msecs</db:code> milliseconds.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtest.xml#keyRelease">QTest::keyRelease</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addMouseClick">
<db:title>void QTestEventList::addMouseClick(int <db:emphasis>button</db:emphasis>, int <db:emphasis>modifiers</db:emphasis> = 0, int <db:emphasis>pos</db:emphasis> = QPoint(), int <db:emphasis>delay</db:emphasis> = -1)</db:title>
<db:para>Add a mouse click to the list. The event will click the <db:code role="parameter">button</db:code> with optional <db:code role="parameter">modifiers</db:code> at the position <db:code role="parameter">pos</db:code> with an optional <db:code role="parameter">delay</db:code>. The default position is the center of the widget.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtest.xml#mouseClick">QTest::mouseClick</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addMouseDClick">
<db:title>void QTestEventList::addMouseDClick(int <db:emphasis>button</db:emphasis>, int <db:emphasis>modifiers</db:emphasis> = 0, int <db:emphasis>pos</db:emphasis> = QPoint(), int <db:emphasis>delay</db:emphasis> = -1)</db:title>
<db:para>Add a double mouse click to the list. The event will double click the <db:code role="parameter">button</db:code> with optional <db:code role="parameter">modifiers</db:code> at the position <db:code role="parameter">pos</db:code> with an optional <db:code role="parameter">delay</db:code>. The default position is the center of the widget.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtest.xml#mousePress">QTest::mousePress</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addMouseMove">
<db:title>void QTestEventList::addMouseMove(int <db:emphasis>pos</db:emphasis> = QPoint(), int <db:emphasis>delay</db:emphasis> = -1)</db:title>
<db:para>Adds a mouse move to the list. The event will move the mouse to the position <db:code role="parameter">pos</db:code>. If a <db:code role="parameter">delay</db:code> (in milliseconds) is set, the test will wait after moving the mouse. The default position is the center of the widget.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtest.xml#mousePress">QTest::mousePress</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addMousePress">
<db:title>void QTestEventList::addMousePress(int <db:emphasis>button</db:emphasis>, int <db:emphasis>modifiers</db:emphasis> = 0, int <db:emphasis>pos</db:emphasis> = QPoint(), int <db:emphasis>delay</db:emphasis> = -1)</db:title>
<db:para>Add a mouse press to the list. The event will press the <db:code role="parameter">button</db:code> with optional <db:code role="parameter">modifiers</db:code> at the position <db:code role="parameter">pos</db:code> with an optional <db:code role="parameter">delay</db:code>. The default position is the center of the widget.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtest.xml#mousePress">QTest::mousePress</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="addMouseRelease">
<db:title>void QTestEventList::addMouseRelease(int <db:emphasis>button</db:emphasis>, int <db:emphasis>modifiers</db:emphasis> = 0, int <db:emphasis>pos</db:emphasis> = QPoint(), int <db:emphasis>delay</db:emphasis> = -1)</db:title>
<db:para>Add a mouse release to the list. The event will release the <db:code role="parameter">button</db:code> with optional <db:code role="parameter">modifiers</db:code> at the position <db:code role="parameter">pos</db:code> with an optional <db:code role="parameter">delay</db:code>. The default position is the center of the widget.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtest.xml#mouseRelease">QTest::mouseRelease</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="clear">
<db:title>void QTestEventList::clear()</db:title>
<db:para>Removes all events from the list.</db:para>
</db:section>
<db:section xml:id="simulate">
<db:title>void QTestEventList::simulate(int *<db:emphasis>w</db:emphasis>)</db:title>
<db:para>Simulates the events from the list one by one on the widget <db:code role="parameter">w</db:code>. For an example, please read the <db:link xlink:href="qtesteventlist.xml">QTestEventList</db:link> class documentation.</db:para>
</db:section>
</db:section>
</db:article>
