<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QConeGeometry Class</db:title>
<db:subtitle>Qt3DExtras::QConeGeometry</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qt3dextras-qconegeometry.xml">QConeGeometry</db:link> class allows creation of a cone in 3D space.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Qt3DExtras/QConeGeometry</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3dextras)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3dextras)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dextras</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In QML</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-extras-conegeometry.xml" xlink:role="">ConeGeometry</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qgeometry.xml" xlink:role="class">Qt3DCore::QGeometry</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QConeGeometry is part of <db:simplelist><db:member>qt3d-extras-geometries</db:member><db:member>geometries</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qt3dextras-qconegeometry.xml">QConeGeometry</db:link> class is most commonly used internally by the <db:link xlink:href="qt3dextras-qconemesh.xml">QConeMesh</db:link> but can also be used in custom <db:link xlink:href="qt3drender-qgeometryrenderer.xml">Qt3DRender::QGeometryRenderer</db:link> subclasses. The class allows for creation of both a cone and a truncated cone.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="bottomRadius-prop">
<db:title>bottomRadius : float</db:title>
<db:para>Holds the bottom radius of the cone.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">bottomRadius</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setBottomRadius</db:emphasis>(<db:type>float</db:type> <db:emphasis>bottomRadius</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">bottomRadiusChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>bottomRadius</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="hasBottomEndcap-prop">
<db:title>hasBottomEndcap : bool</db:title>
<db:para>Determines if the cone bottom is capped or open.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">hasBottomEndcap</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setHasBottomEndcap</db:emphasis>(<db:type>bool</db:type> <db:emphasis>hasBottomEndcap</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">hasBottomEndcapChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>hasBottomEndcap</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="hasTopEndcap-prop">
<db:title>hasTopEndcap : bool</db:title>
<db:para>Determines if the cone top is capped or open.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">hasTopEndcap</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setHasTopEndcap</db:emphasis>(<db:type>bool</db:type> <db:emphasis>hasTopEndcap</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">hasTopEndcapChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>hasTopEndcap</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="indexAttribute-prop">
<db:title>[read-only] indexAttribute : Qt3DCore::QAttribute* const</db:title>
<db:para>Holds the geometry index attribute.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qattribute.xml">Qt3DCore::QAttribute</db:link></db:type> *<db:emphasis role="bold">indexAttribute</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="length-prop">
<db:title>length : float</db:title>
<db:para>Holds the length of the cone.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">length</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLength</db:emphasis>(<db:type>float</db:type> <db:emphasis>length</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">lengthChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>length</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="normalAttribute-prop">
<db:title>[read-only] normalAttribute : Qt3DCore::QAttribute* const</db:title>
<db:para>Holds the geometry normal attribute.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qattribute.xml">Qt3DCore::QAttribute</db:link></db:type> *<db:emphasis role="bold">normalAttribute</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="positionAttribute-prop">
<db:title>[read-only] positionAttribute : Qt3DCore::QAttribute* const</db:title>
<db:para>Holds the geometry position attribute.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qattribute.xml">Qt3DCore::QAttribute</db:link></db:type> *<db:emphasis role="bold">positionAttribute</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="rings-prop">
<db:title>rings : int</db:title>
<db:para>Holds the number of rings in the geometry.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">rings</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setRings</db:emphasis>(<db:type>int</db:type> <db:emphasis>rings</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">ringsChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>rings</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="slices-prop">
<db:title>slices : int</db:title>
<db:para>Holds the number of slices in the geometry.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">slices</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSlices</db:emphasis>(<db:type>int</db:type> <db:emphasis>slices</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">slicesChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>slices</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="texCoordAttribute-prop">
<db:title>[read-only] texCoordAttribute : Qt3DCore::QAttribute* const</db:title>
<db:para>Holds the geometry texture coordinate attribute.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qattribute.xml">Qt3DCore::QAttribute</db:link></db:type> *<db:emphasis role="bold">texCoordAttribute</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="topRadius-prop">
<db:title>topRadius : float</db:title>
<db:para>Holds the top radius of the cone.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">topRadius</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTopRadius</db:emphasis>(<db:type>float</db:type> <db:emphasis>topRadius</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">topRadiusChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>topRadius</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="updateIndices">
<db:title>void QConeGeometry::updateIndices()</db:title>
<db:para>Updates indices based on geometry properties.</db:para>
</db:section>
<db:section xml:id="updateVertices">
<db:title>void QConeGeometry::updateVertices()</db:title>
<db:para>Updates vertices based on geometry properties.</db:para>
</db:section>
</db:section>
</db:article>
