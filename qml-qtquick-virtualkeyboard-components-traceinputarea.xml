<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>TraceInputArea QML Type</db:title>
<db:productname>QtVirtualKeyboard</db:productname>
<db:edition>Qt Virtual Keyboard | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Virtual Keyboard</db:titleabbrev>
<db:abstract>
<db:para>A specialized <db:link xlink:href="qml-qtquick-multipointtoucharea.xml">MultiPointTouchArea</db:link> for collecting touch input data.</db:para>
<db:para>This type was introduced in QtQuick.VirtualKeyboard 2.0.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.VirtualKeyboard.Components</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtQuick.VirtualKeyboard 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>MultiPointTouchArea</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>TraceInputArea is part of <db:simplelist><db:member>qmlclass</db:member><db:member>qtvirtualkeyboard-components-qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This type handles the trace interaction between the touch screen and the input engine.</db:para>
<db:para>The traces are rendered using the delegate from the <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keyboardstyle.xml#traceCanvasDelegate-prop">traceCanvasDelegate</db:link> property of the current <db:link xlink:href="qml-qtquick-virtualkeyboard-styles-keyboardstyle.xml">KeyboardStyle</db:link>.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="boundingBox-prop">
<db:title>[read-only] boundingBox : rect</db:title>
<db:fieldsynopsis>
<db:type>rect</db:type>
<db:varname>boundingBox</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Bounding box for the trace input.</db:para>
<db:para>This property is readonly and is automatically updated based on the item size and margins.</db:para>
</db:section>
<db:section xml:id="canvasType-prop">
<db:title>canvasType : string</db:title>
<db:fieldsynopsis>
<db:type>string</db:type>
<db:varname>canvasType</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Canvas type of this trace input area.</db:para>
<db:para>This property can be used to distinguish between different types of canvases. For example, in full screen handwriting mode this property is set to <db:code>&quot;fullscreen&quot;</db:code>, and in keyboard handwriting mode this property is set to <db:code>&quot;keyboard&quot;</db:code>.</db:para>
</db:section>
<db:section xml:id="horizontalRulers-prop">
<db:title>horizontalRulers : var</db:title>
<db:fieldsynopsis>
<db:type>var</db:type>
<db:varname>horizontalRulers</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>List of horizontal rulers in the input area.</db:para>
<db:para>The rulers are defined as a number of pixels from the top edge of the <db:link xlink:href="qml-qtquick-virtualkeyboard-components-traceinputarea.xml#boundingBox-prop">boundingBox</db:link>.</db:para>
<db:para>Here is an example that demonstrates how to define rulers:</db:para>
<db:programlisting language="cpp">horizontalRulers: [boundingBox.height / 3, boundingBox.height / 3 * 2]
verticalRulers: [boundingBox.width / 3, boundingBox.width / 3 * 2]
</db:programlisting>
</db:section>
<db:section xml:id="patternRecognitionMode-prop">
<db:title>patternRecognitionMode : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>patternRecognitionMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Pattern recognition mode of this input area.</db:para>
<db:para>The default value is <db:link xlink:href="qml-qtquick-virtualkeyboard-inputengine.xml#patternRecognitionModes-prop">InputEngine.PatternRecognitionMode.None</db:link>.</db:para>
</db:section>
<db:section xml:id="verticalRulers-prop">
<db:title>verticalRulers : var</db:title>
<db:fieldsynopsis>
<db:type>var</db:type>
<db:varname>verticalRulers</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>List of vertical rulers in the input area.</db:para>
<db:para>The rulers are defined as a number of pixels from the left edge of the <db:link xlink:href="qml-qtquick-virtualkeyboard-components-traceinputarea.xml#boundingBox-prop">boundingBox</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
