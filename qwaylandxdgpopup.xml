<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QWaylandXdgPopup Class</db:title>
<db:productname>QtWaylandCompositor</db:productname>
<db:edition>Qt 6.0.4 Reference Documentation</db:edition>
<db:titleabbrev>Qt Wayland Compositor Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qwaylandxdgpopup.xml">QWaylandXdgPopup</db:link> class represents the popup specific parts of an xdg surface.</db:para>
<db:para>This class was introduced in Qt 5.12.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QWaylandXdgPopup</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.12</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Waylandcompositor)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Waylandcompositor)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += waylandcompositor</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-xdgpopup.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This class is part of the <db:link xlink:href="qwaylandxdgshell.xml">QWaylandXdgShell</db:link> extension and provides a way to extend the functionality of a <db:link xlink:href="qwaylandxdgsurface.xml">QWaylandXdgSurface</db:link> with features specific to desktop-style menus for an xdg surface.</db:para>
<db:para>It corresponds to the Wayland interface <db:code>xdg_popup</db:code>.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="anchorEdges-prop">
<db:title>[read-only] anchorEdges : const Qt::Edges</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt::Edges</db:type>
<db:varname>anchorEdges</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">anchorEdges</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns the set of edges on the anchor rect that the child surface should be placed relative to. If no edges are specified in a direction, the anchor point should be centered between the edges.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt.xml#Edge-enum">Qt::Edges</db:link></db:type> <db:emphasis role="bold">anchorEdges</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="anchorRect-prop">
<db:title>[read-only] anchorRect : const QRect</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QRect</db:type>
<db:varname>anchorRect</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">anchorRect</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns the anchor rectangle relative to the parent window geometry that the child surface should be placed relative to.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qrect.xml">QRect</db:link></db:type> <db:emphasis role="bold">anchorRect</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="configuredGeometry-prop">
<db:title>[read-only] configuredGeometry : const QRect</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QRect</db:type>
<db:varname>configuredGeometry</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">configuredGeometry</db:synopsisinfo>
<db:synopsisinfo role="notifier">configuredGeometryChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The window geometry the popup received in the configure event. Relative to the upper left corner of the parent surface.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qrect.xml">QRect</db:link></db:type> <db:emphasis role="bold">configuredGeometry</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">configuredGeometryChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="flipConstraints-prop">
<db:title>[read-only] flipConstraints : const Qt::Orientations</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt::Orientations</db:type>
<db:varname>flipConstraints</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">flipConstraints</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the orientations in which the child should flip to fit within the screen.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt.xml#Orientation-enum">Qt::Orientations</db:link></db:type> <db:emphasis role="bold">flipConstraints</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="gravityEdges-prop">
<db:title>[read-only] gravityEdges : const Qt::Edges</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt::Edges</db:type>
<db:varname>gravityEdges</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">gravityEdges</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Specifies in what direction the surface should be positioned, relative to the anchor point.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt.xml#Edge-enum">Qt::Edges</db:link></db:type> <db:emphasis role="bold">gravityEdges</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="offset-prop">
<db:title>[read-only] offset : const QPoint</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QPoint</db:type>
<db:varname>offset</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">offset</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns the surface position relative to the position of the anchor on the anchor rectangle and the anchor on the surface.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpoint.xml">QPoint</db:link></db:type> <db:emphasis role="bold">offset</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="parentXdgSurface-prop">
<db:title>[read-only] parentXdgSurface : QWaylandXdgSurface* const</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QWaylandXdgSurface*</db:type>
<db:varname>parentXdgSurface</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">parentXdgSurface</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the <db:link xlink:href="qwaylandxdgsurface.xml">QWaylandXdgSurface</db:link> associated with the parent of this <db:link xlink:href="qwaylandxdgpopup.xml">QWaylandXdgPopup</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qwaylandxdgsurface.xml">QWaylandXdgSurface</db:link></db:type> *<db:emphasis role="bold">parentXdgSurface</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="positionerSize-prop">
<db:title>[read-only] positionerSize : const QSize</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QSize</db:type>
<db:varname>positionerSize</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">positionerSize</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Returns the size requested for the window geometry by the positioner object.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qsize.xml">QSize</db:link></db:type> <db:emphasis role="bold">positionerSize</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="resizeConstraints-prop">
<db:title>[read-only] resizeConstraints : const Qt::Orientations</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt::Orientations</db:type>
<db:varname>resizeConstraints</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">resizeConstraints</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the orientations in which the child should resize to fit within the screen.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt.xml#Orientation-enum">Qt::Orientations</db:link></db:type> <db:emphasis role="bold">resizeConstraints</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="slideConstraints-prop">
<db:title>[read-only] slideConstraints : const Qt::Orientations</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt::Orientations</db:type>
<db:varname>slideConstraints</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">slideConstraints</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the orientations in which the child should slide to fit within the screen.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt.xml#Orientation-enum">Qt::Orientations</db:link></db:type> <db:emphasis role="bold">slideConstraints</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="unconstrainedPosition-prop">
<db:title>[read-only] unconstrainedPosition : const QPoint</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QPoint</db:type>
<db:varname>unconstrainedPosition</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">unconstrainedPosition</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The position of the surface relative to the parent window geometry if the surface is not constrained. I.e. when not moved to fit inside the screen or similar.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qpoint.xml">QPoint</db:link></db:type> <db:emphasis role="bold">unconstrainedPosition</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="xdgSurface-prop">
<db:title>[read-only] xdgSurface : QWaylandXdgSurface* const</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QWaylandXdgSurface*</db:type>
<db:varname>xdgSurface</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">xdgSurface</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the <db:link xlink:href="qwaylandxdgsurface.xml">QWaylandXdgSurface</db:link> associated with this <db:link xlink:href="qwaylandxdgpopup.xml">QWaylandXdgPopup</db:link>.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qwaylandxdgsurface.xml">QWaylandXdgSurface</db:link></db:type> *<db:emphasis role="bold">xdgSurface</db:emphasis>() const</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="role">
<db:title>[static] QWaylandSurfaceRole *QWaylandXdgPopup::role()</db:title>
<db:methodsynopsis>
<db:modifier>static</db:modifier>
<db:type>QWaylandSurfaceRole *</db:type>
<db:methodname>role</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QWaylandSurfaceRole * role()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the surface role for the QWaylandPopup.</db:para>
</db:section>
<db:section xml:id="sendConfigure">
<db:title>uint QWaylandXdgPopup::sendConfigure(const QRect &amp;<db:emphasis>geometry</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>uint</db:type>
<db:methodname>sendConfigure</db:methodname>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>geometry</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">uint sendConfigure(const QRect &amp;geometry)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sends a configure event to the client. <db:code role="parameter">geometry</db:code> contains the window geometry relative to the upper left corner of the window geometry of the parent surface.</db:para>
<db:para>This implicitly sends a configure event to the corresponding <db:link xlink:href="qwaylandxdgsurface.xml">QWaylandXdgSurface</db:link> as well.</db:para>
</db:section>
<db:section xml:id="sendPopupDone">
<db:title>[since 5.14] void QWaylandXdgPopup::sendPopupDone()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>sendPopupDone</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void sendPopupDone()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Dismiss the popup. According to the <db:code>xdg-shell</db:code> protocol this should make the client destroy the popup.</db:para>
<db:para>This function was introduced in Qt 5.14.</db:para>
</db:section>
</db:section>
</db:article>
