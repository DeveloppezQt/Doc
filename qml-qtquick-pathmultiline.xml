<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>PathMultiline QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Defines a set of polylines through a list of lists of coordinates.</db:para>
<db:para>This type was introduced in QtQuick 2.14.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtQuick 2.14</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>PathMultiline is part of <db:simplelist><db:member>qtquick-animation-paths</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This element allows to define a list of polylines at once. Each polyline in the list will be preceded by a <db:link xlink:href="qpainterpath.xml#moveTo">moveTo</db:link> command, effectively making each polyline a separate one. The polylines in this list are supposed to be non-intersecting with each other. In any case, when used in conjunction with a <db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link>, the containing <db:link xlink:href="qml-qtquick-shapes-shapepath.xml">ShapePath</db:link>'s <db:link xlink:href="qml-qtquick-shapes-shapepath.xml#fillRule-prop">ShapePath::fillRule</db:link> applies. That is, with the default OddEvenFill and non intersecting shapes, the largest shape in the list defines an area to be filled; areas where two shapes overlap are holes; areas where three shapes overlap are filled areas inside holes, etc.</db:para>
<db:para>The example below creates a high voltage symbol by adding each path of the symbol to the list of paths. The coordinates of the vertices are normalized, and through the containing shape's <db:link xlink:href="qml-qtquick-path.xml#scale-prop">scale</db:link> property, the path will be rescaled together with its containing shape.</db:para>
<db:programlisting language="qml">PathMultiline {
    paths: [
            [Qt.point(0.5,     0.06698),
             Qt.point(1,       0.93301),
             Qt.point(0,       0.93301),
             Qt.point(0.5,     0.06698)],

            [Qt.point(0.5,     0.12472),
             Qt.point(0.95,    0.90414),
             Qt.point(0.05,    0.90414),
             Qt.point(0.5,     0.12472)],

            [Qt.point(0.47131, 0.32986),
             Qt.point(0.36229, 0.64789),
             Qt.point(0.51492, 0.58590),
             Qt.point(0.47563, 0.76014),
             Qt.point(0.44950, 0.73590),
             Qt.point(0.46292, 0.83392),
             Qt.point(0.52162, 0.75190),
             Qt.point(0.48531, 0.76230),
             Qt.point(0.57529, 0.53189),
             Qt.point(0.41261, 0.59189),
             Qt.point(0.53001, 0.32786),
             Qt.point(0.47131, 0.32986)]
           ]
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-path.xml">Path</db:link></db:member>
<db:member><db:link xlink:href="qpainterpath.xml#setFillRule">QPainterPath::setFillRule</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathpolyline.xml">PathPolyline</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathquad.xml">PathQuad</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathcubic.xml">PathCubic</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-patharc.xml">PathArc</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathanglearc.xml">PathAngleArc</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathcurve.xml">PathCurve</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathsvg.xml">PathSvg</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-pathmove.xml">PathMove</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="paths-prop">
<db:title>paths : list&lt;list&lt;point&gt;&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;list&lt;point&gt;&gt;</db:type>
<db:varname>paths</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the vertices of the polylines.</db:para>
<db:para>It can be a JS array of JS arrays of points constructed with Qt.point(), a <db:link xlink:href="qlist.xml">QList</db:link> or <db:link xlink:href="qvector.xml">QVector</db:link> of <db:link xlink:href="qpolygonf.xml">QPolygonF</db:link>, or <db:link xlink:href="qvector.xml">QVector</db:link>&lt;<db:link xlink:href="qvector.xml">QVector</db:link>&lt;<db:link xlink:href="qpointf.xml">QPointF</db:link>&gt;&gt;. If you are binding this to a custom property in some C++ object, <db:link xlink:href="qvector.xml">QVector</db:link>&lt;<db:link xlink:href="qpolygonf.xml">QPolygonF</db:link>&gt; or <db:link xlink:href="qvector.xml">QVector</db:link>&lt;<db:link xlink:href="qvector.xml">QVector</db:link>&lt;<db:link xlink:href="qpointf.xml">QPointF</db:link>&gt;&gt; is the most appropriate type to use.</db:para>
</db:section>
<db:section xml:id="start-prop">
<db:title>start : point</db:title>
<db:fieldsynopsis>
<db:type>point</db:type>
<db:varname>start</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This read-only property contains the beginning of the polylines.</db:para>
</db:section>
</db:section>
</db:article>
