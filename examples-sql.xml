<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>SQL Examples</db:title>
<db:productname>QtDoc</db:productname>
<db:edition>Qt 5.14.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Accessing your SQL database from Qt.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/sql-examples.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Qt provides extensive database interoperability, with support for products from both open source and proprietary vendors.</db:para>
<db:para>SQL support is integrated with Qt's model/view architecture, making it easier to provide GUI integration for your database applications.</db:para>
<db:variablelist role="sql_examples">
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-books-example.xml" xlink:role="page">Books</db:link></db:term>
<db:listitem>
<db:para>Shows how to use Qt SQL classes with a model/view framework.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-cachedtable-example.xml" xlink:role="page">Cached Table Example</db:link></db:term>
<db:listitem>
<db:para>The Cached Table example shows how a table view can be used to access a database, caching any changes to the data until the user explicitly submits them using a push button.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-drilldown-example.xml" xlink:role="page">Drill Down Example</db:link></db:term>
<db:listitem>
<db:para>The Drill Down example shows how to read data from a database as well as submit changes, using the QSqlRelationalTableModel and QDataWidgetMapper classes.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-masterdetail-example.xml" xlink:role="page">Master Detail Example</db:link></db:term>
<db:listitem>
<db:para>The Master Detail Example shows how to present data from different data sources in the same application. The album titles, and the corresponding artists and release dates, are kept in a database, while each album's tracks are stored in an XML file.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-querymodel-example.xml" xlink:role="page">Query Model Example</db:link></db:term>
<db:listitem>
<db:para>The Query Model example shows how to make customized versions of data obtained from a SQL query, using a model that encapsulates the query and table views to display the results.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-relationaltablemodel-example.xml" xlink:role="page">Relational Table Model Example</db:link></db:term>
<db:listitem>
<db:para>The Relational Table Model example shows how to use table views with a relational model to visualize the relations between items in a database.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-sqlbrowser-example.xml" xlink:role="page">SQL Browser</db:link></db:term>
<db:listitem>
<db:para>The SQL Browser example shows how a data browser can be used to visualize the results of SQL statements on a live database.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-sqlwidgetmapper-example.xml" xlink:role="page">SQL Widget Mapper Example</db:link></db:term>
<db:listitem>
<db:para>The SQL Widget Mapper example shows how to use a map information from a database to widgets on a form.</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term><db:link xlink:href="qtsql-tablemodel-example.xml" xlink:role="page">Table Model Example</db:link></db:term>
<db:listitem>
<db:para>The Table Model example shows how to use a specialized SQL table model with table views to edit information in a database.</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:para>Examples marked with an asterisk (*) are fully documented.</db:para>
</db:article>
