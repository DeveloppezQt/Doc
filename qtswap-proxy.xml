<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>&lt;QtSwap&gt;</db:title>
<db:productname>QtCore</db:productname>
<db:edition>Qt 6.7.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Qt Core Reference Documentation.</db:para></db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="function-documentation">
<db:title>Function Documentation</db:title>
<db:section xml:id="qSwap">
<db:title>[constexpr] void qSwap(T &amp;<db:emphasis>lhs</db:emphasis>, T &amp;<db:emphasis>rhs</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>qSwap</db:methodname>
<db:methodparam>
<db:type>T &amp;</db:type>
<db:parameter>lhs</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>T &amp;</db:type>
<db:parameter>rhs</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void qSwap(T &amp;lhs, T &amp;rhs)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Exchanges the values of variables <db:code role="parameter">lhs</db:code> and <db:code role="parameter">rhs</db:code>, taking type-specific swap() overloads into account.</db:para>
<db:para>This function is Qt's version of <db:link xlink:href="https://www.boost.org/doc/libs/release/libs/core/doc/html/core/swap.html">boost::swap()</db:link>, and is equivalent to</db:para>
<db:programlisting language="cpp">using std::swap;   // bring std::swap into scope (for built-in types)
swap(lhs, rhs);    // unqualified call (picks up type-specific overloads
                   // via Argument-Dependent Lookup, or falls back to std::swap)
</db:programlisting>
<db:para>Use this function primarily in generic code, where you would traditionally have written the above two lines, because you don't know anything about T.</db:para>
<db:para>If you already know what T is, then use one of the following options, in order of preference:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>lhs.swap(rhs); if such a member-swap exists</db:para>
</db:listitem>
<db:listitem>
<db:para>std::swap(lhs, rhs); if no type-specific swap() exists</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>See <db:link xlink:href="https://www.boost.org/doc/libs/release/libs/core/doc/html/core/swap.html">boost::swap() on boost.org</db:link> for more details.</db:para>
<db:para>See also <db:link xlink:href="https://en.cppreference.com/w/cpp/algorithm/swap">std::swap on cppreference.com</db:link>, <db:link xlink:href="https://en.cppreference.com/w/cpp/named_req/Swappable">Swappable on cppreference.com</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
