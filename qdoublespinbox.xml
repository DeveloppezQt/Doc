<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QDoubleSpinBox Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdoublespinbox.xml">QDoubleSpinBox</db:link> class provides a spin box widget that takes doubles.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDoubleSpinBox</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstractspinbox.xml" xlink:role="class">QAbstractSpinBox</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QDoubleSpinBox is part of <db:simplelist><db:member>basicwidgets</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qdoublespinbox.xml">QDoubleSpinBox</db:link> allows the user to choose a value by clicking the up and down buttons or by pressing Up or Down on the keyboard to increase or decrease the value currently displayed. The user can also type the value in manually. The spin box supports double values but can be extended to use different strings with <db:link xlink:href="qdoublespinbox.xml#validate">validate</db:link>(), <db:link xlink:href="qdoublespinbox.xml#textFromValue">textFromValue</db:link>() and <db:link xlink:href="qdoublespinbox.xml#valueFromText">valueFromText</db:link>().</db:para>
<db:para>Every time the value changes <db:link xlink:href="qdoublespinbox.xml">QDoubleSpinBox</db:link> emits two <db:link xlink:href="qdoublespinbox.xml#valueChanged">valueChanged</db:link>() signals, one taking providing a double and the other a <db:link xlink:href="qstring.xml">QString</db:link>. The <db:link xlink:href="qstring.xml">QString</db:link> overload provides the value with both prefix() and suffix(). The current value can be fetched with value() and set with setValue().</db:para>
<db:para>Note: <db:link xlink:href="qdoublespinbox.xml">QDoubleSpinBox</db:link> will round numbers so they can be displayed with the current precision. In a <db:link xlink:href="qdoublespinbox.xml">QDoubleSpinBox</db:link> with decimals set to 2, calling setValue(2.555) will cause value() to return 2.56.</db:para>
<db:para>Clicking the up and down buttons or using the keyboard accelerator's Up and Down arrows will increase or decrease the current value in steps of size singleStep(). If you want to change this behavior you can reimplement the virtual function <db:link xlink:href="qabstractspinbox.xml#stepBy">stepBy</db:link>(). The minimum and maximum value and the step size can be set using one of the constructors, and can be changed later with setMinimum(), setMaximum() and setSingleStep(). The spinbox has a default precision of 2 decimal places but this can be changed using setDecimals().</db:para>
<db:para>Most spin boxes are directional, but <db:link xlink:href="qdoublespinbox.xml">QDoubleSpinBox</db:link> can also operate as a circular spin box, i.e. if the range is 0.0-99.9 and the current value is 99.9, clicking &quot;up&quot; will give 0 if wrapping() is set to true. Use setWrapping() if you want circular behavior.</db:para>
<db:para>The displayed value can be prepended and appended with arbitrary strings indicating, for example, currency or the unit of measurement. See setPrefix() and setSuffix(). The text in the spin box is retrieved with text() (which includes any prefix() and suffix()), or with cleanText() (which has no prefix(), no suffix() and no leading or trailing whitespace).</db:para>
<db:para>It is often desirable to give the user a special (often default) choice in addition to the range of numeric values. See setSpecialValueText() for how to do this with <db:link xlink:href="qdoublespinbox.xml">QDoubleSpinBox</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qspinbox.xml">QSpinBox</db:link></db:member>
<db:member><db:link xlink:href="qdatetimeedit.xml">QDateTimeEdit</db:link></db:member>
<db:member><db:link xlink:href="qslider.xml">QSlider</db:link></db:member>
<db:member><db:link xlink:href="qtwidgets-widgets-spinboxes-example.xml">Spin Boxes Example</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QDoubleSpinBox">
<db:title>[explicit] QDoubleSpinBox::QDoubleSpinBox(QWidget *<db:emphasis>parent</db:emphasis> = 0)</db:title>
<db:para>Constructs a spin box with 0.0 as minimum value and 99.99 as maximum value, a step value of 1.0 and a precision of 2 decimal places. The value is initially set to 0.00. The spin box has the given <db:code role="parameter">parent</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">setMinimum()</db:link></db:member>
<db:member><db:link xlink:href="">setMaximum()</db:link></db:member>
<db:member><db:link xlink:href="">setSingleStep()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dtor.QDoubleSpinBox">
<db:title>[virtual noexcept] QDoubleSpinBox::~QDoubleSpinBox()</db:title>
<db:para>Destructor.</db:para>
</db:section>
<db:section xml:id="fixup">
<db:title>[override virtual] void QDoubleSpinBox::fixup(QString &amp;<db:emphasis>input</db:emphasis>) const</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#fixup" role="function">QAbstractSpinBox::fixup(QString &amp;input) const</db:link>.</db:para>
</db:section>
<db:section xml:id="setRange">
<db:title>void QDoubleSpinBox::setRange(double <db:emphasis>minimum</db:emphasis>, double <db:emphasis>maximum</db:emphasis>)</db:title>
<db:para>Convenience function to set the <db:code role="parameter">minimum</db:code> and <db:code role="parameter">maximum</db:code> values with a single function call.</db:para>
<db:para>Note: The maximum and minimum values will be rounded to match the decimals property.</db:para>
<db:programlisting language="cpp">setRange(minimum, maximum);
</db:programlisting>
<db:para>is equivalent to:</db:para>
<db:programlisting language="cpp">setMinimum(minimum);
setMaximum(maximum);
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member>minimum</db:member>
<db:member>maximum</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="textFromValue">
<db:title>[virtual] QString QDoubleSpinBox::textFromValue(double <db:emphasis>value</db:emphasis>) const</db:title>
<db:para>This virtual function is used by the spin box whenever it needs to display the given <db:code role="parameter">value</db:code>. The default implementation returns a string containing <db:code role="parameter">value</db:code> printed using QWidget::locale().toString(<db:code role="parameter">value</db:code>, <db:link xlink:href="qlatin1char.xml">QLatin1Char</db:link>('f'), decimals()) and will remove the thousand separator. Reimplementations may return anything.</db:para>
<db:para>Note: <db:link xlink:href="qdoublespinbox.xml">QDoubleSpinBox</db:link> does not call this function for specialValueText() and that neither prefix() nor suffix() should be included in the return value.</db:para>
<db:para>If you reimplement this, you may also need to reimplement <db:link xlink:href="qdoublespinbox.xml#valueFromText">valueFromText</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdoublespinbox.xml#valueFromText">valueFromText</db:link>()</db:member>
<db:member><db:link xlink:href="qlocale.xml#groupSeparator">QLocale::groupSeparator</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="validate">
<db:title>[override virtual] QValidator::State QDoubleSpinBox::validate(QString &amp;<db:emphasis>text</db:emphasis>, int &amp;<db:emphasis>pos</db:emphasis>) const</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractspinbox.xml#validate" role="function">QAbstractSpinBox::validate(QString &amp;input, int &amp;pos) const</db:link>.</db:para>
</db:section>
<db:section xml:id="valueChanged">
<db:title>void QDoubleSpinBox::valueChanged(double <db:emphasis>d</db:emphasis>)</db:title>
<db:para>This signal is emitted whenever the spin box's value is changed. The new value is passed in <db:code role="parameter">d</db:code>.</db:para>
</db:section>
<db:section xml:id="valueChanged-1">
<db:title>void QDoubleSpinBox::valueChanged(const QString &amp;<db:emphasis>text</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>The new value is passed in <db:code role="parameter">text</db:code> with prefix() and suffix().</db:para>
</db:section>
<db:section xml:id="valueFromText">
<db:title>[virtual] double QDoubleSpinBox::valueFromText(const QString &amp;<db:emphasis>text</db:emphasis>) const</db:title>
<db:para>This virtual function is used by the spin box whenever it needs to interpret <db:code role="parameter">text</db:code> entered by the user as a value.</db:para>
<db:para>Subclasses that need to display spin box values in a non-numeric way need to reimplement this function.</db:para>
<db:para>Note: <db:link xlink:href="qdoublespinbox.xml">QDoubleSpinBox</db:link> handles specialValueText() separately; this function is only concerned with the other values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdoublespinbox.xml#textFromValue">textFromValue</db:link>()</db:member>
<db:member><db:link xlink:href="qdoublespinbox.xml#validate">validate</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
