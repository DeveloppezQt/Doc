<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Command Line Enumerator Example</db:title>
<db:productname>QtSerialPort</db:productname>
<db:edition>Qt 5.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Serial Port Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Shows how to get information about serial devices in a system.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2012 Laszlo Papp &lt;lpapp@kde.org&gt;
** Contact: http://www.qt.io/licensing/
**
** This file is part of the QtSerialPort module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:LGPL21$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see http://www.qt.io/terms-conditions. For further
** information use the contact form at http://www.qt.io/contact-us.
**
** GNU Lesser General Public License Usage
** Alternatively, this file may be used under the terms of the GNU Lesser
** General Public License version 2.1 or version 3 as published by the Free
** Software Foundation and appearing in the file LICENSE.LGPLv21 and
** LICENSE.LGPLv3 included in the packaging of this file. Please review the
** following information to ensure the GNU Lesser General Public License
** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
**
** As a special exception, The Qt Company gives you certain additional
** rights. These rights are described in The Qt Company LGPL Exception
** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &lt;QTextStream&gt;
#include &lt;QCoreApplication&gt;
#include &lt;QtSerialPort/QSerialPortInfo&gt;

QT_USE_NAMESPACE

int main(int argc, char *argv[])
{
    QCoreApplication a(argc, argv);
    QTextStream out(stdout);
    QList&lt;QSerialPortInfo&gt; serialPortInfoList = QSerialPortInfo::availablePorts();

    out &lt;&lt; QObject::tr(&quot;Total number of ports available: &quot;) &lt;&lt; serialPortInfoList.count() &lt;&lt; endl;

    const QString blankString = QObject::tr(&quot;N/A&quot;);
    QString description;
    QString manufacturer;
    QString serialNumber;

    foreach (const QSerialPortInfo &amp;serialPortInfo, serialPortInfoList) {
        description = serialPortInfo.description();
        manufacturer = serialPortInfo.manufacturer();
        serialNumber = serialPortInfo.serialNumber();
        out &lt;&lt; endl
            &lt;&lt; QObject::tr(&quot;Port: &quot;) &lt;&lt; serialPortInfo.portName() &lt;&lt; endl
            &lt;&lt; QObject::tr(&quot;Location: &quot;) &lt;&lt; serialPortInfo.systemLocation() &lt;&lt; endl
            &lt;&lt; QObject::tr(&quot;Description: &quot;) &lt;&lt; (!description.isEmpty() ? description : blankString) &lt;&lt; endl
            &lt;&lt; QObject::tr(&quot;Manufacturer: &quot;) &lt;&lt; (!manufacturer.isEmpty() ? manufacturer : blankString) &lt;&lt; endl
            &lt;&lt; QObject::tr(&quot;Serial number: &quot;) &lt;&lt; (!serialNumber.isEmpty() ? serialNumber : blankString) &lt;&lt; endl
            &lt;&lt; QObject::tr(&quot;Vendor Identifier: &quot;) &lt;&lt; (serialPortInfo.hasVendorIdentifier() ? QByteArray::number(serialPortInfo.vendorIdentifier(), 16) : blankString) &lt;&lt; endl
            &lt;&lt; QObject::tr(&quot;Product Identifier: &quot;) &lt;&lt; (serialPortInfo.hasProductIdentifier() ? QByteArray::number(serialPortInfo.productIdentifier(), 16) : blankString) &lt;&lt; endl
            &lt;&lt; QObject::tr(&quot;Busy: &quot;) &lt;&lt; (serialPortInfo.isBusy() ? QObject::tr(&quot;Yes&quot;) : QObject::tr(&quot;No&quot;)) &lt;&lt; endl;
    }

    return 0;
}

</db:programlisting>
</db:article>
