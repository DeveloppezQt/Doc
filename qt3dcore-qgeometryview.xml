<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGeometryView Class</db:title>
<db:subtitle>Qt3DCore::QGeometryView</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Encapsulates geometry details.</db:para>
<db:para>This class was introduced in Qt 6.0.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGeometryView</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3dcore)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3dcore)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3dcore</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dextras-qconegeometryview.xml" xlink:role="class">Qt3DExtras::QConeGeometryView</db:link>, <db:link xlink:href="qt3dextras-qcuboidgeometryview.xml" xlink:role="class">Qt3DExtras::QCuboidGeometryView</db:link>, <db:link xlink:href="qt3dextras-qcylindergeometryview.xml" xlink:role="class">Qt3DExtras::QCylinderGeometryView</db:link>, <db:link xlink:href="qt3dextras-qplanegeometryview.xml" xlink:role="class">Qt3DExtras::QPlaneGeometryView</db:link>, <db:link xlink:href="qt3dextras-qspheregeometryview.xml" xlink:role="class">Qt3DExtras::QSphereGeometryView</db:link>, and <db:link xlink:href="qt3dextras-qtorusgeometryview.xml" xlink:role="class">Qt3DExtras::QTorusGeometryView</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-core-geometryview.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qnode.xml" xlink:role="class">Qt3DCore::QNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dextras-qconegeometryview.xml" xlink:role="class">Qt3DExtras::QConeGeometryView</db:link>, <db:link xlink:href="qt3dextras-qcuboidgeometryview.xml" xlink:role="class">Qt3DExtras::QCuboidGeometryView</db:link>, <db:link xlink:href="qt3dextras-qcylindergeometryview.xml" xlink:role="class">Qt3DExtras::QCylinderGeometryView</db:link>, <db:link xlink:href="qt3dextras-qplanegeometryview.xml" xlink:role="class">Qt3DExtras::QPlaneGeometryView</db:link>, <db:link xlink:href="qt3dextras-qspheregeometryview.xml" xlink:role="class">Qt3DExtras::QSphereGeometryView</db:link>, and <db:link xlink:href="qt3dextras-qtorusgeometryview.xml" xlink:role="class">Qt3DExtras::QTorusGeometryView</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qml-qt3d-core-geometryview.xml">GeometryView</db:link> holds all the information necessary to handle a Geometry. A Geometry holds the coordinates of the geometry data - <db:link xlink:href="qml-qt3d-core-geometryview.xml">GeometryView</db:link> specifies how to interpret that data.</db:para>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="PrimitiveType-enum">
<db:title>enum QGeometryView::PrimitiveType</db:title>
<db:enumsynopsis>
<db:enumname>PrimitiveType</db:enumname>
<db:enumitem>
<db:enumidentifier>Points</db:enumidentifier>
<db:enumvalue>0x0000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Lines</db:enumidentifier>
<db:enumvalue>0x0001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>LineLoop</db:enumidentifier>
<db:enumvalue>0x0002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>LineStrip</db:enumidentifier>
<db:enumvalue>0x0003</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Triangles</db:enumidentifier>
<db:enumvalue>0x0004</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>TriangleStrip</db:enumidentifier>
<db:enumvalue>0x0005</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>TriangleFan</db:enumidentifier>
<db:enumvalue>0x0006</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>LinesAdjacency</db:enumidentifier>
<db:enumvalue>0x000A</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>TrianglesAdjacency</db:enumidentifier>
<db:enumvalue>0x000C</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>LineStripAdjacency</db:enumidentifier>
<db:enumvalue>0x000B</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>TriangleStripAdjacency</db:enumidentifier>
<db:enumvalue>0x000D</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Patches</db:enumidentifier>
<db:enumvalue>0x000E</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>The type of the primitive.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link></db:emphasis>::Points</db:code></db:para>
</db:td>
<db:td><db:code>0x0000</db:code></db:td>
<db:td>
<db:para>List of points</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link></db:emphasis>::Lines</db:code></db:para>
</db:td>
<db:td><db:code>0x0001</db:code></db:td>
<db:td>
<db:para>List of lines</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link></db:emphasis>::LineLoop</db:code></db:para>
</db:td>
<db:td><db:code>0x0002</db:code></db:td>
<db:td>
<db:para>Connected group of lines connected at ends forming a loop</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link></db:emphasis>::LineStrip</db:code></db:para>
</db:td>
<db:td><db:code>0x0003</db:code></db:td>
<db:td>
<db:para>Connected group of lines</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link></db:emphasis>::Triangles</db:code></db:para>
</db:td>
<db:td><db:code>0x0004</db:code></db:td>
<db:td>
<db:para>List of triangles</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link></db:emphasis>::TriangleStrip</db:code></db:para>
</db:td>
<db:td><db:code>0x0005</db:code></db:td>
<db:td>
<db:para>List of connected triangles</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link></db:emphasis>::TriangleFan</db:code></db:para>
</db:td>
<db:td><db:code>0x0006</db:code></db:td>
<db:td>
<db:para>List of connected triagles where all triangles share the first vertex</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link></db:emphasis>::LinesAdjacency</db:code></db:para>
</db:td>
<db:td><db:code>0x000A</db:code></db:td>
<db:td>
<db:para>Allows geometry shader to access adjacent lines in a line list</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link></db:emphasis>::TrianglesAdjacency</db:code></db:para>
</db:td>
<db:td><db:code>0x000C</db:code></db:td>
<db:td>
<db:para>Allows geometry shader to access adjacent triangles in a triangle list</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link></db:emphasis>::LineStripAdjacency</db:code></db:para>
</db:td>
<db:td><db:code>0x000B</db:code></db:td>
<db:td>
<db:para>Allows geometry shader to access adjacent lines in a line strip</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link></db:emphasis>::TriangleStripAdjacency</db:code></db:para>
</db:td>
<db:td><db:code>0x000D</db:code></db:td>
<db:td>
<db:para>Allows geometry shader to access adjacent triangles in a triangle strip</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3dcore.xml">Qt3DCore</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link></db:emphasis>::Patches</db:code></db:para>
</db:td>
<db:td><db:code>0x000E</db:code></db:td>
<db:td>
<db:para>Only primitive type accepted by tesselation shader where a patch consists of arbitrary number of vertices</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="firstInstance-prop">
<db:title>firstInstance : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>firstInstance</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">firstInstance</db:synopsisinfo>
<db:synopsisinfo role="setter">setFirstInstance</db:synopsisinfo>
<db:synopsisinfo role="notifier">firstInstanceChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the base instance.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">firstInstance</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setFirstInstance</db:emphasis>(<db:type>int</db:type> <db:emphasis>firstInstance</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">firstInstanceChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>firstInstance</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="firstVertex-prop">
<db:title>firstVertex : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>firstVertex</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">firstVertex</db:synopsisinfo>
<db:synopsisinfo role="setter">setFirstVertex</db:synopsisinfo>
<db:synopsisinfo role="notifier">firstVertexChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the base vertex.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">firstVertex</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setFirstVertex</db:emphasis>(<db:type>int</db:type> <db:emphasis>firstVertex</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">firstVertexChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>firstVertex</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="geometry-prop">
<db:title>geometry : Qt3DCore::QGeometry*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>Qt3DCore::QGeometry*</db:type>
<db:varname>geometry</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">geometry</db:synopsisinfo>
<db:synopsisinfo role="setter">setGeometry</db:synopsisinfo>
<db:synopsisinfo role="notifier">geometryChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the geometry.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qgeometry.xml">Qt3DCore::QGeometry</db:link></db:type> *<db:emphasis role="bold">geometry</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setGeometry</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qgeometry.xml">Qt3DCore::QGeometry</db:link></db:type> *<db:emphasis>geometry</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">geometryChanged</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qgeometry.xml">Qt3DCore::QGeometry</db:link></db:type> *<db:emphasis>geometry</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="indexBufferByteOffset-prop">
<db:title>indexBufferByteOffset : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>indexBufferByteOffset</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">indexBufferByteOffset</db:synopsisinfo>
<db:synopsisinfo role="setter">setIndexBufferByteOffset</db:synopsisinfo>
<db:synopsisinfo role="notifier">indexBufferByteOffsetChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the byte offset into the index buffer.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">indexBufferByteOffset</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setIndexBufferByteOffset</db:emphasis>(<db:type>int</db:type> <db:emphasis>offset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">indexBufferByteOffsetChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>offset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="indexOffset-prop">
<db:title>indexOffset : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>indexOffset</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">indexOffset</db:synopsisinfo>
<db:synopsisinfo role="setter">setIndexOffset</db:synopsisinfo>
<db:synopsisinfo role="notifier">indexOffsetChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the base vertex.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">indexOffset</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setIndexOffset</db:emphasis>(<db:type>int</db:type> <db:emphasis>indexOffset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">indexOffsetChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>indexOffset</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="instanceCount-prop">
<db:title>instanceCount : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>instanceCount</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">instanceCount</db:synopsisinfo>
<db:synopsisinfo role="setter">setInstanceCount</db:synopsisinfo>
<db:synopsisinfo role="notifier">instanceCountChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the instance count.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">instanceCount</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setInstanceCount</db:emphasis>(<db:type>int</db:type> <db:emphasis>instanceCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">instanceCountChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>instanceCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="primitiveRestartEnabled-prop">
<db:title>primitiveRestartEnabled : bool</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>bool</db:type>
<db:varname>primitiveRestartEnabled</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">primitiveRestartEnabled</db:synopsisinfo>
<db:synopsisinfo role="setter">setPrimitiveRestartEnabled</db:synopsisinfo>
<db:synopsisinfo role="notifier">primitiveRestartEnabledChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the primitive restart flag.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>bool</db:type> <db:emphasis role="bold">primitiveRestartEnabled</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setPrimitiveRestartEnabled</db:emphasis>(<db:type>bool</db:type> <db:emphasis>enabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">primitiveRestartEnabledChanged</db:emphasis>(<db:type>bool</db:type> <db:emphasis>primitiveRestartEnabled</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="primitiveType-prop">
<db:title>primitiveType : PrimitiveType</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>PrimitiveType</db:type>
<db:varname>primitiveType</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">primitiveType</db:synopsisinfo>
<db:synopsisinfo role="setter">setPrimitiveType</db:synopsisinfo>
<db:synopsisinfo role="notifier">primitiveTypeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the primitive type.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3dcore-qgeometryview.xml#PrimitiveType-enum">Qt3DCore::QGeometryView::PrimitiveType</db:link></db:type> <db:emphasis role="bold">primitiveType</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setPrimitiveType</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qgeometryview.xml#PrimitiveType-enum">Qt3DCore::QGeometryView::PrimitiveType</db:link></db:type> <db:emphasis>primitiveType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">primitiveTypeChanged</db:emphasis>(<db:type><db:link xlink:href="qt3dcore-qgeometryview.xml#PrimitiveType-enum">Qt3DCore::QGeometryView::PrimitiveType</db:link></db:type> <db:emphasis>primitiveType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="restartIndexValue-prop">
<db:title>restartIndexValue : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>restartIndexValue</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">restartIndexValue</db:synopsisinfo>
<db:synopsisinfo role="setter">setRestartIndexValue</db:synopsisinfo>
<db:synopsisinfo role="notifier">restartIndexValueChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the restart index.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">restartIndexValue</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setRestartIndexValue</db:emphasis>(<db:type>int</db:type> <db:emphasis>index</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">restartIndexValueChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>restartIndexValue</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="vertexCount-prop">
<db:title>vertexCount : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>vertexCount</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">vertexCount</db:synopsisinfo>
<db:synopsisinfo role="setter">setVertexCount</db:synopsisinfo>
<db:synopsisinfo role="notifier">vertexCountChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the primitive count.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">vertexCount</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setVertexCount</db:emphasis>(<db:type>int</db:type> <db:emphasis>vertexCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">vertexCountChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>vertexCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="verticesPerPatch-prop">
<db:title>verticesPerPatch : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>verticesPerPatch</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">verticesPerPatch</db:synopsisinfo>
<db:synopsisinfo role="setter">setVerticesPerPatch</db:synopsisinfo>
<db:synopsisinfo role="notifier">verticesPerPatchChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds vertices per patch.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">verticesPerPatch</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setVerticesPerPatch</db:emphasis>(<db:type>int</db:type> <db:emphasis>verticesPerPatch</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">verticesPerPatchChanged</db:emphasis>(<db:type>int</db:type> <db:emphasis>verticesPerPatch</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGeometryView">
<db:title>[explicit] QGeometryView::QGeometryView(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QGeometryView</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QNode *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QGeometryView(Qt3DCore::QNode *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a new <db:link xlink:href="qt3dcore-qgeometryview.xml">QGeometryView</db:link> with <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
