<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>RenderPass QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.6.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Encapsulates a Render Pass.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Render 2.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Node</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qrenderpass.xml">QRenderPass</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A <db:link xlink:href="qml-qt3d-render-renderpass.xml">RenderPass</db:link> specifies a single rendering pass - an instance of shader program execution - used by Technique. A Render pass consists of a <db:link xlink:href="qml-qt3d-render-shaderprogram.xml">ShaderProgram</db:link> and a list of <db:link xlink:href="qml-qt3d-render-filterkey.xml">FilterKey</db:link> objects, a list of <db:link xlink:href="qml-qt3d-render-renderstate.xml">RenderState</db:link> objects and a list of <db:link xlink:href="qml-qt3d-render-parameter.xml">Parameter</db:link> objects.</db:para>
<db:para><db:link xlink:href="qml-qt3d-render-renderpass.xml">RenderPass</db:link> executes the <db:link xlink:href="qml-qt3d-render-shaderprogram.xml">ShaderProgram</db:link> using the given <db:link xlink:href="qml-qt3d-render-renderstate.xml">RenderState</db:link> and Parameter nodes when at least one of <db:link xlink:href="qml-qt3d-render-filterkey.xml">FilterKey</db:link> nodes being referenced matches any of the <db:link xlink:href="qml-qt3d-render-filterkey.xml">FilterKey</db:link> nodes in <db:link xlink:href="qml-qt3d-render-renderpassfilter.xml">RenderPassFilter</db:link> or when no <db:link xlink:href="qml-qt3d-render-renderpassfilter.xml">RenderPassFilter</db:link> is present in the FrameGraph.</db:para>
<db:para>If the <db:link xlink:href="qml-qt3d-render-renderpass.xml">RenderPass</db:link> defines a Parameter, it will be overridden by a Parameter with the same name if it exists in any of the Technique, Effect, Material, <db:link xlink:href="qml-qt3d-render-techniquefilter.xml">TechniqueFilter</db:link>, <db:link xlink:href="qml-qt3d-render-renderpassfilter.xml">RenderPassFilter</db:link> associated with the pass at runtime. This still can be useful to define sane default values.</db:para>
<db:para>At render time, for each leaf node of the FrameGraph a base render state is recorded by accumulating states defined by all <db:link xlink:href="qml-qt3d-render-renderstateset.xml">RenderStateSet</db:link> nodes in the FrameGraph branch. Each <db:link xlink:href="qml-qt3d-render-renderpass.xml">RenderPass</db:link> can overload this base render state by specifying its own <db:link xlink:href="qml-qt3d-render-renderstate.xml">RenderState</db:link> nodes.</db:para>
<db:programlisting language="qml">Technique {
    filterKeys: [
        FilterKey { name: &quot;renderingStyle&quot;; value: &quot;forward&quot; }
    ]
    graphicsApiFilter: {
        api: GraphicsApiFilter.OpenGL
        profile: GraphicsApiFilter.CoreProfile
        majorVersion: 3
        minorVersion: 1
    }
    renderPasses: [
        RenderPass {
            id: pass
            shaderProgram: ShaderProgram {
                // ...
            }
            parameters: [
                Parameter { name: &quot;color&quot;; value: &quot;red&quot; }
            ]
            renderStates: [
                DepthTest {}
            ]
        }
    ]
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt3d-render-renderpassfilter.xml">RenderPassFilter</db:link></db:member>
<db:member><db:link xlink:href="qml-qt3d-render-filterkey.xml">FilterKey</db:link></db:member>
<db:member><db:link xlink:href="qml-qt3d-render-parameter.xml">Parameter</db:link></db:member>
<db:member><db:link xlink:href="qml-qt3d-render-renderstate.xml">RenderState</db:link></db:member>
<db:member><db:link xlink:href="qml-qt3d-render-effect.xml">Effect</db:link></db:member>
<db:member><db:link xlink:href="qml-qt3d-render-technique.xml">Technique</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="filterKeys-prop">
<db:title>filterKeys : list&lt;FilterKey&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;FilterKey&gt;</db:type>
<db:varname>filterKeys</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the filter keys enabling the use of this render pass.</db:para>
</db:section>
<db:section xml:id="parameters-prop">
<db:title>parameters : list&lt;Parameter&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;Parameter&gt;</db:type>
<db:varname>parameters</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the shader parameter values used by the render pass.</db:para>
</db:section>
<db:section xml:id="renderStates-prop">
<db:title>renderStates : list&lt;RenderState&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;RenderState&gt;</db:type>
<db:varname>renderStates</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the render states used by the render pass.</db:para>
</db:section>
<db:section xml:id="shaderProgram-prop">
<db:title>shaderProgram : ShaderProgram</db:title>
<db:fieldsynopsis>
<db:type>ShaderProgram</db:type>
<db:varname>shaderProgram</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the shader program to be used for this render pass.</db:para>
</db:section>
</db:section>
</db:article>
