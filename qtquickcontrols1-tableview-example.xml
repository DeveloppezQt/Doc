<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Controls 1 - Table View Example</db:title>
<db:productname>QtQuickControls1</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 1 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>An example for the <db:link xlink:href="qml-qtquick-controls-tableview.xml">TableView</db:link> control.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols-example-tableview.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>This example project demonstrates the usage of <db:link xlink:href="qml-qtquick-controls-tableview.xml">TableView</db:link> from <db:link xlink:href="qtquickcontrols1-index.xml">Qt Quick Controls 1</db:link> - a control to display one or more columns of information from a data list model. The example includes a model that supports sorting and filtering.</db:para>
<db:para>The C++ class, SortFilterProxyModel, is registered as a QML type under the namespace, &quot;<db:code>org.qtproject.example 1.0</db:code>&quot;.</db:para>
<db:para>The following snippets show how the type is registered under a namespace and later imported by <db:emphasis>main.qml</db:emphasis>.</db:para>
<db:para>QML type registration:</db:para>
<db:programlisting language="cpp">#include &amp;lt;QtQml/qqml.h&amp;gt;
...
qmlRegisterType&amp;lt;SortFilterProxyModel&amp;gt;(&quot;org.qtproject.example&quot;, 1, 0, &quot;SortFilterProxyModel&quot;);
...
</db:programlisting>
<db:para>QML namespace import:</db:para>
<db:programlisting language="cpp">import org.qtproject.example 1.0
</db:programlisting>
<db:para>For more information about registering C++ classes as QML types, see <db:link xlink:href="qtqml-cppintegration-definetypes.xml">Defining QML Types from C++</db:link>.</db:para>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="http://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="tableview/main.qml">tableview/main.qml</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="tableview/src/main.cpp">tableview/src/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="tableview/src/sortfilterproxymodel.cpp">tableview/src/sortfilterproxymodel.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="tableview/src/sortfilterproxymodel.h">tableview/src/sortfilterproxymodel.h</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="tableview/tableview.pro">tableview/tableview.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="tableview/tableview.qrc">tableview/tableview.qrc</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
