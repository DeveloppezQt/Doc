<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QGeoAreaMonitorInfo Class</db:title>
<db:productname>QtPositioning</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Positioning Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> class describes the parameters of an area or region to be monitored for proximity.</db:para>
<db:para>This class was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QGeoAreaMonitorInfo</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += positioning</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QGeoAreaMonitorInfo is part of <db:simplelist><db:member>QtPositioning-positioning</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The purpose of area monitoring is to inform a user when he/she comes close to an area of interest. In general such an area is described by a <db:link xlink:href="qgeocircle.xml">QGeoCircle</db:link>. The circle's center represents the place of interest and the area around it identifies the geographical region within which notifications are sent.</db:para>
<db:para>A <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> object is valid if it has a non-empty name and a valid <db:link xlink:href="qgeoareamonitorinfo.xml#area">area</db:link>(). Such objects must be registered with a <db:link xlink:href="qgeoareamonitorsource.xml">QGeoAreaMonitorSource</db:link> to start and stop the monitoring process. Note that extensive monitoring can be very resource consuming because the positioning engine must remain active and has to match the current position with each <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> instance.</db:para>
<db:para>To further reduce the burden on the system there are optional attributes which can set. Each monitored area can have an expiry date which automatically removes the to-be-monitored area from the monitoring source once the expiry date has been reached. Another option is to adjust the persistence of a monitored area. A <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> that <db:link xlink:href="qgeoareamonitorinfo.xml#isPersistent">isPersistent</db:link>() will remain active beyond the current applications lifetime. If an area is entered while the monitoring application is not running the application will be started. Note that this feature is not available on all platforms. Its availability can be checked via <db:link xlink:href="qgeoareamonitorsource.xml#supportedAreaMonitorFeatures">QGeoAreaMonitorSource::supportedAreaMonitorFeatures</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoareamonitorsource.xml">QGeoAreaMonitorSource</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QGeoAreaMonitorInfo">
<db:title>[explicit] QGeoAreaMonitorInfo::QGeoAreaMonitorInfo(const QString &amp;<db:emphasis>name</db:emphasis> = QString())</db:title>
<db:constructorsynopsis>
<db:methodname>QGeoAreaMonitorInfo</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>name</db:parameter>
<db:initializer>QString()</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QGeoAreaMonitorInfo(const QString &amp;name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> object with the specified <db:code role="parameter">name</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoareamonitorinfo.xml#name">name</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QGeoAreaMonitorInfo-1">
<db:title>QGeoAreaMonitorInfo::QGeoAreaMonitorInfo(const QGeoAreaMonitorInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QGeoAreaMonitorInfo</db:methodname>
<db:methodparam>
<db:type>const QGeoAreaMonitorInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QGeoAreaMonitorInfo(const QGeoAreaMonitorInfo &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> object as a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QGeoAreaMonitorInfo">
<db:title>QGeoAreaMonitorInfo::~QGeoAreaMonitorInfo()</db:title>
<db:destructorsynopsis>
<db:methodname>~QGeoAreaMonitorInfo</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QGeoAreaMonitorInfo()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destructor</db:para>
</db:section>
<db:section xml:id="area">
<db:title>QGeoShape QGeoAreaMonitorInfo::area() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QGeoShape</db:type>
<db:methodname>area</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QGeoShape area() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the boundaries of the to-be-monitored area. This area must not be empty.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoareamonitorinfo.xml#setArea">setArea</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="expiration">
<db:title>QDateTime QGeoAreaMonitorInfo::expiration() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QDateTime</db:type>
<db:methodname>expiration</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QDateTime expiration() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the expiry date.</db:para>
<db:para>After an active <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> has expired the region is no longer monitored and the <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> object is removed from the list of <db:link xlink:href="qgeoareamonitorsource.xml#activeMonitors">active monitors</db:link>.</db:para>
<db:para>If the expiry <db:link xlink:href="qdatetime.xml">QDateTime</db:link> is invalid the <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> object is treated as not having an expiry date. This implies an indefinite monitoring period if the object is persistent or until the current application closes if the object is non-persistent.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoareamonitorinfo.xml#setExpiration">setExpiration</db:link>()</db:member>
<db:member><db:link xlink:href="qgeoareamonitorsource.xml#activeMonitors">QGeoAreaMonitorSource::activeMonitors</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="identifier">
<db:title>QString QGeoAreaMonitorInfo::identifier() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>identifier</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString identifier() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the identifier of the <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> object. The identifier is automatically generated upon construction of a new <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> object.</db:para>
</db:section>
<db:section xml:id="isPersistent">
<db:title>bool QGeoAreaMonitorInfo::isPersistent() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isPersistent</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isPersistent() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if the <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> is persistent. The default value for this property is false.</db:para>
<db:para>A non-persistent <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> will be removed by the system once the application owning the monitor object stops. Persistent objects remain active and can be retrieved once the application restarts.</db:para>
<db:para>If the system triggers an event associated to a persistent <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> the relevant application will be re-started and the appropriate signal emitted.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoareamonitorinfo.xml#setPersistent">setPersistent</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isValid">
<db:title>bool QGeoAreaMonitorInfo::isValid() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isValid</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isValid() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true, if the monitor is valid. A valid <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> has a non-empty <db:link xlink:href="qgeoareamonitorinfo.xml#name">name</db:link>() and the monitored area is not <db:link xlink:href="qgeoshape.xml#isEmpty">empty</db:link>(). Otherwise this function returns false.</db:para>
</db:section>
<db:section xml:id="name">
<db:title>QString QGeoAreaMonitorInfo::name() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>name</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString name() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the name of the <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> object. The name should be used to for user-visibility purposes.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoareamonitorinfo.xml#setName">setName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="notificationParameters">
<db:title>QVariantMap QGeoAreaMonitorInfo::notificationParameters() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QVariantMap</db:type>
<db:methodname>notificationParameters</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QVariantMap notificationParameters() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the set of platform specific paraemters used by this <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoareamonitorinfo.xml#setNotificationParameters">setNotificationParameters</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setArea">
<db:title>void QGeoAreaMonitorInfo::setArea(const QGeoShape &amp;<db:emphasis>newShape</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setArea</db:methodname>
<db:methodparam>
<db:type>const QGeoShape &amp;</db:type>
<db:parameter>newShape</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setArea(const QGeoShape &amp;newShape)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the to-be-monitored area to <db:code role="parameter">newShape</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoareamonitorinfo.xml#area">area</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setExpiration">
<db:title>void QGeoAreaMonitorInfo::setExpiration(const QDateTime &amp;<db:emphasis>expiry</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setExpiration</db:methodname>
<db:methodparam>
<db:type>const QDateTime &amp;</db:type>
<db:parameter>expiry</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setExpiration(const QDateTime &amp;expiry)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the expiry date and time to <db:code role="parameter">expiry</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoareamonitorinfo.xml#expiration">expiration</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setName">
<db:title>void QGeoAreaMonitorInfo::setName(const QString &amp;<db:emphasis>name</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setName</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>name</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setName(const QString &amp;name)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the user visibile <db:code role="parameter">name</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoareamonitorinfo.xml#name">name</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setNotificationParameters">
<db:title>void QGeoAreaMonitorInfo::setNotificationParameters(const QVariantMap &amp;<db:emphasis>parameters</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setNotificationParameters</db:methodname>
<db:methodparam>
<db:type>const QVariantMap &amp;</db:type>
<db:parameter>parameters</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setNotificationParameters(const QVariantMap &amp;parameters)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the set of platform specific <db:code role="parameter">parameters</db:code> used by <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoareamonitorinfo.xml#notificationParameters">notificationParameters</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPersistent">
<db:title>void QGeoAreaMonitorInfo::setPersistent(bool <db:emphasis>isPersistent</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setPersistent</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>isPersistent</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setPersistent(bool isPersistent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> objects persistence to <db:code role="parameter">isPersistent</db:code>.</db:para>
<db:para>Note that setting this flag does not imply that QGeoAreaMonitorInfoSource supports persistent monitoring. <db:link xlink:href="qgeoareamonitorsource.xml#supportedAreaMonitorFeatures">QGeoAreaMonitorSource::supportedAreaMonitorFeatures</db:link>() can be used to check for this feature's availability.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qgeoareamonitorinfo.xml#isPersistent">isPersistent</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QGeoAreaMonitorInfo::operator!=(const QGeoAreaMonitorInfo &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator!=</db:methodname>
<db:methodparam>
<db:type>const QGeoAreaMonitorInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator!=(const QGeoAreaMonitorInfo &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if any of this object's values are not the same as those of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QGeoAreaMonitorInfo &amp;QGeoAreaMonitorInfo::operator=(const QGeoAreaMonitorInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QGeoAreaMonitorInfo &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QGeoAreaMonitorInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QGeoAreaMonitorInfo &amp; operator=(const QGeoAreaMonitorInfo &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Assigns <db:code role="parameter">other</db:code> to this <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> object and returns a reference to this <db:link xlink:href="qgeoareamonitorinfo.xml">QGeoAreaMonitorInfo</db:link> object.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QGeoAreaMonitorInfo::operator==(const QGeoAreaMonitorInfo &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>operator==</db:methodname>
<db:methodparam>
<db:type>const QGeoAreaMonitorInfo &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool operator==(const QGeoAreaMonitorInfo &amp;other) const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns true if all of this object's values are the same as those of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-lt-lt">
<db:title>QDataStream &amp;operator&lt;&lt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, const QGeoAreaMonitorInfo &amp;<db:emphasis>monitor</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QDataStream &amp;</db:type>
<db:methodname>operator&lt;&lt;</db:methodname>
<db:methodparam>
<db:type>QDataStream &amp;</db:type>
<db:parameter>stream</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>const QGeoAreaMonitorInfo &amp;</db:type>
<db:parameter>monitor</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QDataStream &amp; operator&lt;&lt;(QDataStream &amp;stream, const QGeoAreaMonitorInfo &amp;monitor)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Writes the given <db:code role="parameter">monitor</db:code> to the specified <db:code role="parameter">stream</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="datastreamformat.xml">Serializing Qt Data Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-gt-gt">
<db:title>QDataStream &amp;operator&gt;&gt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, QGeoAreaMonitorInfo &amp;<db:emphasis>monitor</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QDataStream &amp;</db:type>
<db:methodname>operator&gt;&gt;</db:methodname>
<db:methodparam>
<db:type>QDataStream &amp;</db:type>
<db:parameter>stream</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>QGeoAreaMonitorInfo &amp;</db:type>
<db:parameter>monitor</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QDataStream &amp; operator&gt;&gt;(QDataStream &amp;stream, QGeoAreaMonitorInfo &amp;monitor)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reads a area monitoring data from the specified <db:code role="parameter">stream</db:code> into the given <db:code role="parameter">monitor</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="datastreamformat.xml">Serializing Qt Data Types</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
