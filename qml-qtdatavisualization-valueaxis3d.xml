<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ValueAxis3D QML Type</db:title>
<db:productname>QtDataVis3D</db:productname>
<db:edition>Qt Data Visualization | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Data Visualization Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Manipulates an axis of a graph.</db:para>
<db:para>This type was introduced in QtDataVisualization 1.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtDataVisualization 1.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtDataVisualization 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtdatavisualization-abstractaxis3d.xml">AbstractAxis3D</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In C++:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qvalue3daxis-qtdatavis.xml">QValue3DAxis</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>ValueAxis3D is part of <db:simplelist><db:member>datavisualization_qml</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This type provides an axis that can be given a range of values and segment and subsegment counts to divide the range into.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="formatter-prop">
<db:title>[since QtDataVisualization 1.1] formatter : ValueAxis3DFormatter</db:title>
<db:para>The axis formatter to be used. Any existing formatter is deleted when a new formatter is set.</db:para>
<db:para>This property was introduced in QtDataVisualization 1.1.</db:para>
</db:section>
<db:section xml:id="labelFormat-prop">
<db:title>labelFormat : string</db:title>
<db:para>The label format to be used for the labels on this axis.</db:para>
<db:para>The format string supports the following conversion specifiers, length modifiers, and flags provided by <db:code>printf()</db:code> in the standard C++ library: d, i, o, x, X, f, F, e, E, g, G, c.</db:para>
<db:para>If <db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#locale-prop">AbstractGraph3D::locale</db:link> is anything else than <db:code>&quot;C&quot;</db:code>, the supported specifiers are limited to: d, e, E, f, g, G, and i. Also, only the precision modifier is supported. The rest of the formatting comes from the default Locale of the application.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#locale-prop">AbstractGraph3D::locale</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="reversed-prop">
<db:title>[since QtDataVisualization 1.1] reversed : bool</db:title>
<db:para>If <db:code>true</db:code>, the axis will be rendered in reverse. That is, the positions of the minimum and maximum values are swapped when the graph is rendered. This property does not affect the actual minimum and maximum values of the axis.</db:para>
<db:para>This property was introduced in QtDataVisualization 1.1.</db:para>
</db:section>
<db:section xml:id="segmentCount-prop">
<db:title>segmentCount : int</db:title>
<db:para>The number of segments on the axis. This indicates how many labels are drawn. The number of grid lines to be drawn is calculated with the following formula: <db:code>segments * subsegments + 1</db:code>. The preset default is <db:code>5</db:code>. The value cannot be below <db:code>1</db:code>.</db:para>
</db:section>
<db:section xml:id="subSegmentCount-prop">
<db:title>subSegmentCount : int</db:title>
<db:para>The number of subsegments inside each segment on the axis. Grid lines are drawn between each subsegment, in addition to each segment. The preset default is <db:code>1</db:code>. The value cannot be below <db:code>1</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
