<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Anchor Layout Example</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Demonstrates anchor layout in a graphics view scene.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The Anchor Layout example demonstrates the use of the <db:link xlink:href="qgraphicsanchorlayout.xml">QGraphicsAnchorLayout</db:link> class.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/graphicsanchorlayout-example.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>The basic steps of this example are:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Create a <db:link xlink:href="qgraphicsscene.xml">QGraphicsScene</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para>Create widgets</db:para>
</db:listitem>
<db:listitem>
<db:para>Create a <db:link xlink:href="qgraphicsanchorlayout.xml">QGraphicsAnchorLayout</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para>Create a <db:link xlink:href="qgraphicswidget.xml">QGraphicsWidget</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para>Add vertical and horizontal anchors between the widgets</db:para>
</db:listitem>
<db:listitem>
<db:para>View the scene with a <db:link xlink:href="qgraphicsview.xml">QGraphicsView</db:link> object</db:para>
</db:listitem>
</db:itemizedlist>
<db:section xml:id="creating-a-qgraphicsscene">
<db:title>Creating a QGraphicsScene</db:title>
<db:programlisting language="cpp">    QGraphicsScene scene;
    scene.setSceneRect(0, 0, 800, 480);
</db:programlisting>
</db:section>
<db:section xml:id="creating-widgets">
<db:title>Creating Widgets</db:title>
<db:programlisting language="cpp">    QGraphicsProxyWidget *a = createItem(minSize, prefSize, maxSize, &quot;A&quot;);
    QGraphicsProxyWidget *b = createItem(minSize, prefSize, maxSize, &quot;B&quot;);
    QGraphicsProxyWidget *c = createItem(minSize, prefSize, maxSize, &quot;C&quot;);
    QGraphicsProxyWidget *d = createItem(minSize, prefSize, maxSize, &quot;D&quot;);
    QGraphicsProxyWidget *e = createItem(minSize, prefSize, maxSize, &quot;E&quot;);
    QGraphicsProxyWidget *f = createItem(QSizeF(30, 50), QSizeF(150, 50), maxSize, &quot;F (overflow)&quot;);
    QGraphicsProxyWidget *g = createItem(QSizeF(30, 50), QSizeF(30, 100), maxSize, &quot;G (overflow)&quot;);
</db:programlisting>
</db:section>
<db:section xml:id="creating-a-layout">
<db:title>Creating a Layout</db:title>
<db:programlisting language="cpp">    QGraphicsAnchorLayout *l = new QGraphicsAnchorLayout;
    l-&amp;gt;setSpacing(0);
</db:programlisting>
</db:section>
<db:section xml:id="creating-a-qgraphicswidget">
<db:title>Creating a QGraphicsWidget</db:title>
<db:programlisting language="cpp">    QGraphicsWidget *w = new QGraphicsWidget(nullptr, Qt::Window);
    w-&amp;gt;setPos(20, 20);
    w-&amp;gt;setLayout(l);
</db:programlisting>
</db:section>
<db:section xml:id="adding-anchors">
<db:title>Adding Anchors</db:title>
<db:programlisting language="cpp">    // vertical
    l-&amp;gt;addAnchor(a, Qt::AnchorTop, l, Qt::AnchorTop);
    l-&amp;gt;addAnchor(b, Qt::AnchorTop, l, Qt::AnchorTop);

    l-&amp;gt;addAnchor(c, Qt::AnchorTop, a, Qt::AnchorBottom);
    l-&amp;gt;addAnchor(c, Qt::AnchorTop, b, Qt::AnchorBottom);
    l-&amp;gt;addAnchor(c, Qt::AnchorBottom, d, Qt::AnchorTop);
    l-&amp;gt;addAnchor(c, Qt::AnchorBottom, e, Qt::AnchorTop);

    l-&amp;gt;addAnchor(d, Qt::AnchorBottom, l, Qt::AnchorBottom);
    l-&amp;gt;addAnchor(e, Qt::AnchorBottom, l, Qt::AnchorBottom);

    l-&amp;gt;addAnchor(c, Qt::AnchorTop, f, Qt::AnchorTop);
    l-&amp;gt;addAnchor(c, Qt::AnchorVerticalCenter, f, Qt::AnchorBottom);
    l-&amp;gt;addAnchor(f, Qt::AnchorBottom, g, Qt::AnchorTop);
    l-&amp;gt;addAnchor(c, Qt::AnchorBottom, g, Qt::AnchorBottom);

    // horizontal
    l-&amp;gt;addAnchor(l, Qt::AnchorLeft, a, Qt::AnchorLeft);
    l-&amp;gt;addAnchor(l, Qt::AnchorLeft, d, Qt::AnchorLeft);
    l-&amp;gt;addAnchor(a, Qt::AnchorRight, b, Qt::AnchorLeft);

    l-&amp;gt;addAnchor(a, Qt::AnchorRight, c, Qt::AnchorLeft);
    l-&amp;gt;addAnchor(c, Qt::AnchorRight, e, Qt::AnchorLeft);

    l-&amp;gt;addAnchor(b, Qt::AnchorRight, l, Qt::AnchorRight);
    l-&amp;gt;addAnchor(e, Qt::AnchorRight, l, Qt::AnchorRight);
    l-&amp;gt;addAnchor(d, Qt::AnchorRight, e, Qt::AnchorLeft);

    l-&amp;gt;addAnchor(l, Qt::AnchorLeft, f, Qt::AnchorLeft);
    l-&amp;gt;addAnchor(l, Qt::AnchorLeft, g, Qt::AnchorLeft);
    l-&amp;gt;addAnchor(f, Qt::AnchorRight, g, Qt::AnchorRight);
</db:programlisting>
</db:section>
<db:section xml:id="viewing-the-scene-with-qgraphicsview">
<db:title>Viewing the Scene with QGraphicsView</db:title>
<db:programlisting language="cpp">    scene.addItem(w);
    scene.setBackgroundBrush(Qt::darkGreen);
    QGraphicsView view(&amp;amp;scene);

    view.show();
</db:programlisting>
</db:section>
<db:section>
<db:title>Example project</db:title>
<db:para><db:link xlink:href="https://code.qt.io/cgit/qt/qtbase.git/tree/examples/widgets/graphicsview/anchorlayout?h=6.1">Example project @ code.qt.io</db:link></db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtwidgets-graphicsview-simpleanchorlayout-example.xml">Simple Anchor Layout Example</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
