<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>RotationAnimation QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Animates changes in rotation values.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>PropertyAnimation</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>RotationAnimation is part of <db:simplelist><db:member>qtquick-animation-properties</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-rotationanimation.xml">RotationAnimation</db:link> is a specialized <db:link xlink:href="qml-qtquick-propertyanimation.xml">PropertyAnimation</db:link> that gives control over the direction of rotation during an animation.</db:para>
<db:para>By default, it rotates in the direction of the numerical change; a rotation from 0 to 240 will rotate 240 degrees clockwise, while a rotation from 240 to 0 will rotate 240 degrees counterclockwise. The <db:link xlink:href="qml-qtquick-rotationanimation.xml#direction-prop">direction</db:link> property can be set to specify the direction in which the rotation should occur.</db:para>
<db:para>In the following example we use <db:link xlink:href="qml-qtquick-rotationanimation.xml">RotationAnimation</db:link> to animate the rotation between states via the shortest path:</db:para>
<db:programlisting language="qml">import QtQuick 2.0

Item {
    width: 300; height: 300

    Rectangle {
        id: rect
        width: 150; height: 100; anchors.centerIn: parent
        color: &quot;red&quot;
        antialiasing: true

        states: State {
            name: &quot;rotated&quot;
            PropertyChanges { target: rect; rotation: 180 }
        }

        transitions: Transition {
            RotationAnimation { duration: 1000; direction: RotationAnimation.Counterclockwise }
        }
    }

    MouseArea { anchors.fill: parent; onClicked: rect.state = &quot;rotated&quot; }
}
</db:programlisting>
<db:para>Notice the <db:link xlink:href="qml-qtquick-rotationanimation.xml">RotationAnimation</db:link> did not need to set a target value. As a convenience, when used in a transition, <db:link xlink:href="qml-qtquick-rotationanimation.xml">RotationAnimation</db:link> will rotate all properties named &quot;rotation&quot; or &quot;angle&quot;. You can override this by providing your own properties via <db:link xlink:href="qml-qtquick-propertyanimation.xml#properties-prop">properties</db:link> or <db:link xlink:href="qml-qtquick-propertyanimation.xml#property-prop">property</db:link>.</db:para>
<db:para>Also, note the <db:link xlink:href="qml-qtquick-rectangle.xml">Rectangle</db:link> will be rotated around its default <db:link xlink:href="qml-qtquick-item.xml#transformOrigin-prop">transformOrigin</db:link> (which is Item.Center). To use a different transform origin, set the origin in the <db:link xlink:href="qml-qtquick-propertychanges.xml">PropertyChanges</db:link> object and apply the change at the start of the animation using <db:link xlink:href="qml-qtquick-propertyaction.xml">PropertyAction</db:link>. See the <db:link xlink:href="qml-qtquick-propertyaction.xml">PropertyAction</db:link> documentation for more details.</db:para>
<db:para>Like any other animation type, a <db:link xlink:href="qml-qtquick-rotationanimation.xml">RotationAnimation</db:link> can be applied in a number of ways, including transitions, behaviors and property value sources. The <db:link xlink:href="qtquick-statesanimations-animations.xml">Animation and Transitions in Qt Quick</db:link> documentation shows a variety of methods for creating animations.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-statesanimations-animations.xml">Animation and Transitions in Qt Quick</db:link></db:member>
<db:member><db:link xlink:href="qtquick-animation-example.xml">Qt Quick Examples - Animation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="direction-prop">
<db:title>direction : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>direction</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the direction of the rotation.</db:para>
<db:para>Possible values are:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-rotationanimation.xml">RotationAnimation</db:link>.Numerical (default) - Rotate by linearly interpolating between the two numbers. A rotation from 10 to 350 will rotate 340 degrees clockwise.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-rotationanimation.xml">RotationAnimation</db:link>.Clockwise - Rotate clockwise between the two values</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-rotationanimation.xml">RotationAnimation</db:link>.Counterclockwise - Rotate counterclockwise between the two values</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-rotationanimation.xml">RotationAnimation</db:link>.Shortest - Rotate in the direction that produces the shortest animation path. A rotation from 10 to 350 will rotate 20 degrees counterclockwise.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="from-prop">
<db:title>from : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>from</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the starting value for the animation.</db:para>
<db:para>For example, the following animation is not applied until the angle value has reached 100:</db:para>
<db:programlisting language="qml">Item {
    states: [
        // ...
    ]

    transitions: Transition {
        RotationAnimation { properties: &quot;angle&quot;; from: 100; duration: 2000 }
    }
}
</db:programlisting>
<db:para>If the <db:link xlink:href="qml-qtquick-rotationanimation.xml">RotationAnimation</db:link> is defined within a <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link> or <db:link xlink:href="qml-qtquick-behavior.xml">Behavior</db:link>, this value defaults to the value defined in the starting state of the <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link>, or the current value of the property at the moment the <db:link xlink:href="qml-qtquick-behavior.xml">Behavior</db:link> is triggered.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-statesanimations-animations.xml">Animation and Transitions in Qt Quick</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="to-prop">
<db:title>to : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>to</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the end value for the animation..</db:para>
<db:para>If the <db:link xlink:href="qml-qtquick-rotationanimation.xml">RotationAnimation</db:link> is defined within a <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link> or <db:link xlink:href="qml-qtquick-behavior.xml">Behavior</db:link>, this value defaults to the value defined in the end state of the <db:link xlink:href="qml-qtquick-transition.xml">Transition</db:link>, or the value of the property change that triggered the <db:link xlink:href="qml-qtquick-behavior.xml">Behavior</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-statesanimations-animations.xml">Animation and Transitions in Qt Quick</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
