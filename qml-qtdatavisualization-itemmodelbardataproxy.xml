<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ItemModelBarDataProxy QML Type</db:title>
<db:productname>QtDataVis3D</db:productname>
<db:edition>Qt Data Visualization | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Data Visualization Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Proxy class for presenting data in item models with <db:link xlink:href="qml-qtdatavisualization-bars3d.xml">Bars3D</db:link>.</db:para>
<db:para>This type was introduced in QtDataVisualization 1.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtDataVisualization 1.9</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtDataVisualization 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtdatavisualization-bardataproxy.xml">BarDataProxy</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>In C++:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qitemmodelbardataproxy-qtdatavis.xml">QItemModelBarDataProxy</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>ItemModelBarDataProxy is part of <db:simplelist><db:member>datavisualization_qml</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This type allows you to use AbstractItemModel derived models as a data source for <db:link xlink:href="qml-qtdatavisualization-bars3d.xml">Bars3D</db:link>.</db:para>
<db:para>Data is resolved asynchronously whenever the mapping or the model changes. <db:link xlink:href="qbardataproxy-qtdatavis.xml#arrayReset">QBarDataProxy::arrayReset</db:link>() is emitted when the data has been resolved.</db:para>
<db:para>For <db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml">ItemModelBarDataProxy</db:link> enums, see <db:link xlink:href="qitemmodelbardataproxy-qtdatavis.xml#MultiMatchBehavior-enum">QItemModelBarDataProxy::MultiMatchBehavior</db:link>.</db:para>
<db:para>For more details, see <db:link xlink:href="qitemmodelbardataproxy-qtdatavis.xml">QItemModelBarDataProxy</db:link> documentation.</db:para>
<db:para>Usage example:</db:para>
<db:programlisting language="cpp">ItemModelBarDataProxy {
    itemModel: model // E.g. a list model defined elsewhere containing yearly expenses data.
    // Mapping model roles to bar series rows, columns, and values.
    rowRole: &quot;year&quot;
    columnRole: &quot;city&quot;
    valueRole: &quot;expenses&quot;
    rowCategories: [&quot;2010&quot;, &quot;2011&quot;, &quot;2012&quot;, &quot;2013&quot;]
    columnCategories: [&quot;Oulu&quot;, &quot;Rauma&quot;, &quot;Helsinki&quot;, &quot;Tampere&quot;]
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-bardataproxy.xml">BarDataProxy</db:link></db:member>
<db:member><db:link xlink:href="qtdatavisualization-data-handling.xml">Qt Data Visualization Data Handling</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="autoColumnCategories-prop">
<db:title>autoColumnCategories : bool</db:title>
<db:para>When set to <db:code>true</db:code>, the mapping ignores any explicitly set column categories and overwrites them with automatically generated ones whenever the data from model is resolved. Defaults to <db:code>true</db:code>.</db:para>
</db:section>
<db:section xml:id="autoRowCategories-prop">
<db:title>autoRowCategories : bool</db:title>
<db:para>When set to <db:code>true</db:code>, the mapping ignores any explicitly set row categories and overwrites them with automatically generated ones whenever the data from the model is resolved. Defaults to <db:code>true</db:code>.</db:para>
</db:section>
<db:section xml:id="columnCategories-prop">
<db:title>columnCategories : list&lt;String&gt;</db:title>
<db:para>The column categories of the mapping. Only items with column role values that are found in this list are included when the data is resolved. The columns are ordered in the same order as they are in this list.</db:para>
</db:section>
<db:section xml:id="columnRole-prop">
<db:title>columnRole : string</db:title>
<db:para>The item model role to map into column category.</db:para>
</db:section>
<db:section xml:id="columnRolePattern-prop">
<db:title>columnRolePattern : regExp</db:title>
<db:para>When set, a search and replace is done on the value mapped by column role before it is used as a column category. This property specifies the regular expression to find the portion of the mapped value to replace and <db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#columnRoleReplace-prop">columnRoleReplace</db:link> property contains the replacement string. This is useful for example in parsing row and column categories from a single timestamp field in the item model.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#columnRole-prop">columnRole</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#columnRoleReplace-prop">columnRoleReplace</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="columnRoleReplace-prop">
<db:title>columnRoleReplace : string</db:title>
<db:para>This property defines the replace content to be used in conjunction with <db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#columnRolePattern-prop">columnRolePattern</db:link>. Defaults to empty string. For more information on how the search and replace using regular expressions works, see <db:link xlink:href="qstring.xml#replace">QString::replace</db:link>(const <db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link> &amp;rx, const <db:link xlink:href="qstring.xml">QString</db:link> &amp;after) function documentation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#columnRole-prop">columnRole</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#columnRolePattern-prop">columnRolePattern</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="itemModel-prop">
<db:title>itemModel : model</db:title>
<db:para>The item model.</db:para>
</db:section>
<db:section xml:id="multiMatchBehavior-prop">
<db:title>multiMatchBehavior : ItemModelBarDataProxy.MultiMatchBehavior</db:title>
<db:para>Defines how multiple matches for each row/column combination are handled. Defaults to <db:link xlink:href="qitemmodelbardataproxy-qtdatavis.xml#MultiMatchBehavior-enum">ItemModelBarDataProxy.MMBLast</db:link>. The chosen behavior affects both bar value and rotation.</db:para>
<db:para>For example, you might have an item model with timestamped data taken at irregular intervals and you want to visualize total value of data items on each day with a bar graph. This can be done by specifying row and column categories so that each bar represents a day, and setting multiMatchBehavior to <db:link xlink:href="qitemmodelbardataproxy-qtdatavis.xml#MultiMatchBehavior-enum">ItemModelBarDataProxy.MMBCumulative</db:link>.</db:para>
</db:section>
<db:section xml:id="rotationRole-prop">
<db:title>rotationRole : string</db:title>
<db:para>The item model role to map into bar rotation angle.</db:para>
</db:section>
<db:section xml:id="rotationRolePattern-prop">
<db:title>rotationRolePattern : regExp</db:title>
<db:para>When set, a search and replace is done on the value mapped by rotation role before it is used as a bar rotation angle. This property specifies the regular expression to find the portion of the mapped value to replace and <db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#rotationRoleReplace-prop">rotationRoleReplace</db:link> property contains the replacement string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#rotationRole-prop">rotationRole</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#rotationRoleReplace-prop">rotationRoleReplace</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rotationRoleReplace-prop">
<db:title>rotationRoleReplace : string</db:title>
<db:para>This property defines the replace content to be used in conjunction with <db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#rotationRolePattern-prop">rotationRolePattern</db:link>. Defaults to empty string. For more information on how the search and replace using regular expressions works, see <db:link xlink:href="qstring.xml#replace">QString::replace</db:link>(const <db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link> &amp;rx, const <db:link xlink:href="qstring.xml">QString</db:link> &amp;after) function documentation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#rotationRole-prop">rotationRole</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#rotationRolePattern-prop">rotationRolePattern</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rowCategories-prop">
<db:title>rowCategories : list&lt;String&gt;</db:title>
<db:para>The row categories of the mapping. Only items with row role values that are found in this list are included when the data is resolved. The rows are ordered in the same order as they are in this list.</db:para>
</db:section>
<db:section xml:id="rowRole-prop">
<db:title>rowRole : string</db:title>
<db:para>The item model role to map into row category.</db:para>
</db:section>
<db:section xml:id="rowRolePattern-prop">
<db:title>rowRolePattern : regExp</db:title>
<db:para>When set, a search and replace is done on the value mapped by row role before it is used as a row category. This property specifies the regular expression to find the portion of the mapped value to replace and <db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#rowRoleReplace-prop">rowRoleReplace</db:link> property contains the replacement string. This is useful for example in parsing row and column categories from a single timestamp field in the item model.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#rowRole-prop">rowRole</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#rowRoleReplace-prop">rowRoleReplace</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rowRoleReplace-prop">
<db:title>rowRoleReplace : string</db:title>
<db:para>This property defines the replace content to be used in conjunction with <db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#rowRolePattern-prop">rowRolePattern</db:link>. Defaults to empty string. For more information on how the search and replace using regular expressions works, see <db:link xlink:href="qstring.xml#replace">QString::replace</db:link>(const <db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link> &amp;rx, const <db:link xlink:href="qstring.xml">QString</db:link> &amp;after) function documentation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#rowRole-prop">rowRole</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#rowRolePattern-prop">rowRolePattern</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="useModelCategories-prop">
<db:title>useModelCategories : bool</db:title>
<db:para>When set to <db:code>true</db:code>, the mapping ignores row and column roles and categories, and uses the rows and columns from the model instead. Row and column headers are used for row and column labels. Defaults to <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="valueRole-prop">
<db:title>valueRole : string</db:title>
<db:para>The item model role to map into bar value.</db:para>
</db:section>
<db:section xml:id="valueRolePattern-prop">
<db:title>valueRolePattern : regExp</db:title>
<db:para>When set, a search and replace is done on the value mapped by value role before it is used as a bar value. This property specifies the regular expression to find the portion of the mapped value to replace and <db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#valueRoleReplace-prop">valueRoleReplace</db:link> property contains the replacement string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#valueRole-prop">valueRole</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#valueRoleReplace-prop">valueRoleReplace</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="valueRoleReplace-prop">
<db:title>valueRoleReplace : string</db:title>
<db:para>This property defines the replace content to be used in conjunction with <db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#valueRolePattern-prop">valueRolePattern</db:link>. Defaults to empty string. For more information on how the search and replace using regular expressions works, see <db:link xlink:href="qstring.xml#replace">QString::replace</db:link>(const <db:link xlink:href="qregularexpression.xml">QRegularExpression</db:link> &amp;rx, const <db:link xlink:href="qstring.xml">QString</db:link> &amp;after) function documentation.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#valueRole-prop">valueRole</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelbardataproxy.xml#valueRolePattern-prop">valueRolePattern</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
