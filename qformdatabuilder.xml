<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QFormDataBuilder Class</db:title>
<db:productname>QtNetwork</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Network Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link> class is a convenience class to simplify the construction of <db:link xlink:href="qhttpmultipart.xml">QHttpMultiPart</db:link> objects.</db:para>
<db:para>This class was introduced in Qt 6.8.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QFormDataBuilder</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.8</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Network)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Network)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += network</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QFormDataBuilder is part of <db:simplelist><db:member><db:link xlink:href="network.xml">Network Programming API</db:link></db:member><db:member>shared</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link> class can be used to build a <db:link xlink:href="qhttpmultipart.xml">QHttpMultiPart</db:link> object with the content type set to be FormDataType by default.</db:para>
<db:para>The snippet below demonstrates how to build a multipart message with <db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link>:</db:para>
<db:programlisting language="cpp">QFormDataBuilder builder;
QFile image(u&quot;../../pic.png&quot;_s); image.open(QFile::ReadOnly);
QFile mask(u&quot;../../mask.png&quot;_s); mask.open(QFile::ReadOnly);

builder.part(&quot;image&quot;_L1).setBodyDevice(&amp;image, &quot;the actual image&quot;);
builder.part(&quot;mask&quot;_L1).setBodyDevice(&amp;mask, &quot;the mask image&quot;);
builder.part(&quot;prompt&quot;_L1).setBody(&quot;Lobster wearing a beret&quot;);
builder.part(&quot;n&quot;_L1).setBody(&quot;2&quot;);
builder.part(&quot;size&quot;_L1).setBody(&quot;512x512&quot;);

std::unique_ptr&lt;QHttpMultiPart&gt; mp = builder.buildMultiPart();
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttppart.xml">QHttpPart</db:link></db:member>
<db:member><db:link xlink:href="qhttpmultipart.xml">QHttpMultiPart</db:link></db:member>
<db:member><db:link xlink:href="qformdatapartbuilder.xml">QFormDataPartBuilder</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="Option-enum">
<db:title>enum QFormDataBuilder::Option</db:title>
<db:bridgehead renderas="sect2">flags QFormDataBuilder::Options</db:bridgehead>
<db:para>Options controlling <db:link xlink:href="qformdatabuilder.xml#buildMultiPart">buildMultiPart</db:link>().</db:para>
<db:para>Several current RFCs disagree on how, exactly, to format multipart/form-data. Instead of hard-coding any one RFC, these options give you control over which RFC to follow.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link></db:emphasis>::<db:emphasis role="bold">Option</db:emphasis>::Default</db:code></db:para>
</db:td>
<db:td><db:code>0x00</db:code></db:td>
<db:td>
<db:para>The default values, designed to maximize interoperability in general. All options named below are off.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link></db:emphasis>::<db:emphasis role="bold">Option</db:emphasis>::OmitRfc8187EncodedFilename</db:code></db:para>
</db:td>
<db:td><db:code>0x01</db:code></db:td>
<db:td>
<db:para>When a body-part's file-name contains non-US-ASCII characters, <db:link xlink:href="https://datatracker.ietf.org/doc/html/rfc6266#section-4.3">RFC 6266 Section 4.3</db:link> suggests to use <db:link xlink:href="https://datatracker.ietf.org/doc/html/rfc8187">RFC 8187</db:link>-style encoding (filename*=utf-8''...). The more recent <db:link xlink:href="https://datatracker.ietf.org/doc/html/rfc7578#section-4.2">RFC 7578 Section 4.2</db:link>, however, bans the use of that mechanism. Both RFCs are current as of this writing, so this option allows you to choose which one to follow. The default is to include the RFC 8187-encoded filename* alongside the unencoded filename, as suggested by RFC 6266.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link></db:emphasis>::<db:emphasis role="bold">Option</db:emphasis>::UseRfc7578PercentEncodedFilename</db:code></db:para>
</db:td>
<db:td><db:code>0x02</db:code></db:td>
<db:td>
<db:para>When a body-part's file-name contains non-US-ASCII characters, <db:link xlink:href="https://datatracker.ietf.org/doc/html/rfc7578#section-4.2">RFC 7578 Section 4.2</db:link> suggests to use percent-encoding of the octets of the UTF-8-encoded file-name. It goes on to note that many implementations, however, do <db:emphasis>not</db:emphasis> percent-encode the UTF-8-encoded file-name, but just emit &quot;raw&quot; UTF-8 (with &quot; and \ escaped using \). This is the default of <db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link>, too.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link></db:emphasis>::<db:emphasis role="bold">Option</db:emphasis>::PreferLatin1EncodedFilename</db:code></db:para>
</db:td>
<db:td><db:code>0x04</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="https://datatracker.ietf.org/doc/html/rfc5987#section-3.2">RFC 5987 Section 3.2</db:link> required recipients to support ISO-8859-1 (&quot;Latin-1&quot;) encoding. When a body-part's file-name contains non-US-ASCII characters that, however, fit into Latin-1, this option prefers to use ISO-8859-1 encoding over UTF-8. The more recent {https://datatracker.ietf.org/doc/html/rfc8187#appendix-A}{RFC 8187} no longer requires ISO-8859-1 support, so the default is to send all non-US-ASCII file-names in UTF-8 encoding instead.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link></db:emphasis>::<db:emphasis role="bold">Option</db:emphasis>::StrictRfc7578</db:code></db:para>
</db:td>
<db:td><db:code>OmitRfc8187EncodedFilename | UseRfc7578PercentEncodedFilename</db:code></db:td>
<db:td>
<db:para>This option combines other options to select strict <db:link xlink:href="https://datatracker.ietf.org/doc/html/rfc7578">RFC 7578</db:link> compliance.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>Options</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;Option&gt;. </db:code>It stores an OR combination of <db:code>Option</db:code> values.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QFormDataBuilder">
<db:title>QFormDataBuilder::QFormDataBuilder()</db:title>
<db:para>Constructs an empty <db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link> object.</db:para>
</db:section>
<db:section xml:id="QFormDataBuilder-1">
<db:title>[noexcept] QFormDataBuilder::QFormDataBuilder(QFormDataBuilder &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Move-constructs a <db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link> instance, making it point at the same object that <db:code role="parameter">other</db:code> was pointing to.</db:para>
</db:section>
<db:section xml:id="dtor.QFormDataBuilder">
<db:title>[noexcept] QFormDataBuilder::~QFormDataBuilder()</db:title>
<db:para>Destroys the <db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link> object.</db:para>
</db:section>
<db:section xml:id="buildMultiPart">
<db:title>std::unique_ptr&lt;QHttpMultiPart&gt; QFormDataBuilder::buildMultiPart(QFormDataBuilder::Options <db:emphasis>options</db:emphasis> = {})</db:title>
<db:para>Constructs and returns a pointer to a QHttpMultipart object constructed according to <db:code role="parameter">options</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qhttpmultipart.xml">QHttpMultiPart</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="part">
<db:title>QFormDataPartBuilder QFormDataBuilder::part(QAnyStringView <db:emphasis>name</db:emphasis>)</db:title>
<db:para>Returns a newly-constructed <db:link xlink:href="qformdatapartbuilder.xml">QFormDataPartBuilder</db:link> object using <db:code role="parameter">name</db:code> as the form-data's name parameter. The object is valid for as long as the associated <db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link> has not been destroyed.</db:para>
<db:para>Limiting <db:code role="parameter">name</db:code> characters to US-ASCII is <db:link xlink:href="https://datatracker.ietf.org/doc/html/rfc7578#section-5.1.1">strongly recommended</db:link> for interoperability reasons.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qformdatapartbuilder.xml">QFormDataPartBuilder</db:link></db:member>
<db:member><db:link xlink:href="qhttppart.xml">QHttpPart</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>[noexcept] QFormDataBuilder &amp;QFormDataBuilder::operator=(QFormDataBuilder &amp;&amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Move-assigns <db:code role="parameter">other</db:code> to this <db:link xlink:href="qformdatabuilder.xml">QFormDataBuilder</db:link> instance.</db:para>
</db:section>
</db:section>
</db:article>
