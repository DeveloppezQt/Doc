<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>TraceInputKey QML Type</db:title>
<db:productname>QtVirtualKeyboard</db:productname>
<db:edition>Qt 5.7.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Virtual Keyboard</db:titleabbrev>
<db:abstract>
<db:para>A specialized key for collecting touch input data.</db:para>
<db:para>This type was introduced in QtQuick.VirtualKeyboard 2.0.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.VirtualKeyboard 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtQuick.VirtualKeyboard 2.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-item.xml">Item</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>TraceInputKey is part of <db:simplelist><db:member>qtvirtualkeyboard-qml</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This type can be placed in the keyboard layout. It collects and renders touch input data (trace) from the key area.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="boundingBox-prop">
<db:title>[read-only] boundingBox : alias</db:title>
<db:para>Bounding box for the trace input.</db:para>
<db:para>This property is readonly and is automatically updated based on the item size and margins.</db:para>
</db:section>
<db:section xml:id="canvasType-prop">
<db:title>canvasType : alias</db:title>
<db:para>Canvas type of this trace input area.</db:para>
<db:para>This property can be used to distinguish between different types of canvases. The default value is &quot;keyboard&quot;.</db:para>
</db:section>
<db:section xml:id="horizontalRulers-prop">
<db:title>horizontalRulers : alias</db:title>
<db:para>List of horizontal rulers in the input area.</db:para>
<db:para>The rulers are defined as a number of pixels from the top edge of the bounding box.</db:para>
<db:para>Here is an example how to define rulers:</db:para>
<db:programlisting language="cpp">horizontalRulers: [boundingBox.height / 3, boundingBox.height / 3 * 2]
verticalRulers: [boundingBox.width / 3, boundingBox.width / 3 * 2]
</db:programlisting>
</db:section>
<db:section xml:id="patternRecognitionMode-prop">
<db:title>patternRecognitionMode : alias</db:title>
<db:para>Pattern recognition mode of this input area.</db:para>
<db:para>The default value is <db:link xlink:href="qtvirtualkeyboard-inputengine.xml#PatternRecognitionMode-enum">InputEngine.PatternRecognitionDisabled</db:link>.</db:para>
</db:section>
<db:section xml:id="verticalRulers-prop">
<db:title>verticalRulers : alias</db:title>
<db:para>List of vertical rulers in the input area.</db:para>
<db:para>The rulers are defined as a number of pixels from the left edge of the bounding box.</db:para>
</db:section>
<db:section xml:id="weight-prop">
<db:title>weight : real</db:title>
<db:para>Sets the key weight value which determines the relative size of the key.</db:para>
<db:para>Use this property to change the key size in the layout.</db:para>
<db:para>The default value is inherited from the parent element of the key in the layout hierarchy.</db:para>
</db:section>
</db:section>
</db:article>
