<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>qt_add_ui</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Adds .ui files to a target.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>Adds .ui files to a target.</db:para>
<db:para>The command is defined in the Widgets component of the Qt6 package. Load the package with:</db:para>
<db:programlisting language="cpp">find_package(Qt6 REQUIRED COMPONENTS Widgets)
</db:programlisting>
<db:section xml:id="synopsis">
<db:title>Synopsis</db:title>
<db:programlisting language="cpp" role="bad">qt_add_ui(&lt;TARGET&gt;
          SOURCES file1.ui [file2.ui ...]
          [INCLUDE_PREFIX &lt;PREFIX&gt;]
          [OPTIONS ...])
</db:programlisting>
<db:para>If <db:link xlink:href="">versionless commands</db:link> are disabled, use qt6_add_ui() instead. It supports the same set of arguments as this command.</db:para>
<db:para>This command was introduced in Qt 6.8.</db:para>
</db:section>
<db:section xml:id="description">
<db:title>Description</db:title>
<db:para>Creates rules for calling the <db:link xlink:href="">User Interface Compiler (uic)</db:link> on the .ui files. For each input file, a header file is generated in the build directory. The generated header files are added to sources of the target.</db:para>
</db:section>
<db:section xml:id="arguments">
<db:title>Arguments</db:title>
<db:section xml:id="target">
<db:title>TARGET</db:title>
<db:para>The TARGET argument specifies the CMake target to which the generated header files will be added.</db:para>
</db:section>
<db:section xml:id="sources">
<db:title>SOURCES</db:title>
<db:para>The SOURCES argument specifies the list of .ui files to process.</db:para>
</db:section>
<db:section xml:id="include-prefix">
<db:title>INCLUDE_PREFIX</db:title>
<db:para>INCLUDE_PREFIX specifies the include prefix for the generated header files. Use the same include prefix as in the #include directive in the source files. If ui_&lt;basename&gt;.h is included without a prefix, then this argument can be omitted.</db:para>
</db:section>
<db:section xml:id="options">
<db:title>OPTIONS</db:title>
<db:para>You can set additional OPTIONS that should be added to the uic calls. You can find possible options in the <db:link xlink:href="">uic documentation</db:link>.</db:para>
</db:section>
</db:section>
<db:section xml:id="examples">
<db:title>Examples</db:title>
<db:section xml:id="without-include-prefix">
<db:title>Without INCLUDE_PREFIX</db:title>
<db:para>In the following snippet, the mainwindow.cpp file includes ui_mainwindow.h and mainwindow.h.</db:para>
<db:programlisting language="cpp">#include &quot;mainwindow.h&quot;
#include &quot;ui_mainwindow.h&quot;
</db:programlisting>
<db:para>CMakeLists.txt is implemented as follows and it calls qt_add_ui to add ui_mainwindow.h to the myapp target.</db:para>
<db:programlisting language="cpp">qt_add_executable(myapp mainwindow.cpp main.cpp)
qt_add_ui(myapp SOURCES mainwindow.ui)
</db:programlisting>
<db:para>In the above example, ui_mainwindow.h is included without a prefix. So the INCLUDE_PREFIX argument is not specified.</db:para>
</db:section>
<db:section xml:id="with-include-prefix">
<db:title>With INCLUDE_PREFIX</db:title>
<db:programlisting language="cpp">#include &quot;mainwindow.h&quot;
#include &quot;src/files/ui_mainwindow.h&quot;
</db:programlisting>
<db:para>In the above snippet, mainwindow.cpp includes ui_mainwindow.h with a prefix.</db:para>
<db:programlisting language="cpp">qt_add_executable(myapp mainwindow.cpp main.cpp)
qt_add_ui(myapp INCLUDE_PREFIX &quot;src/files&quot; SOURCES mainwindow.ui)
</db:programlisting>
<db:para>Since ui_mainwindow.h is included with a prefix, the INCLUDE_PREFIX argument is specified as src/files in the above example.</db:para>
</db:section>
<db:section xml:id="multiple-ui-files">
<db:title>Multiple .ui files</db:title>
<db:para>In the following snippets, both widget1.cpp and widget2.cpp include ui_widget1.h and ui_widget2.h respectively.</db:para>
<db:para>widget1.cpp:</db:para>
<db:programlisting language="cpp">#include &quot;src/files/ui_widget1.h&quot;
</db:programlisting>
<db:para>widget2.cpp:</db:para>
<db:programlisting language="cpp">#include &quot;src/files/ui_widget2.h&quot;
</db:programlisting>
<db:para>Both ui_widget1.h and ui_widget2.h are included with the same prefix</db:para>
<db:programlisting language="cpp">qt_add_executable(myapp widget1.cpp widget2.cpp main.cpp)
qt_add_ui(myapp INCLUDE_PREFIX &quot;src/files&quot; SOURCES widget1.ui widget2.ui)
</db:programlisting>
<db:para>In this case, the INCLUDE_PREFIX argument can be specified as src/files for both files in the above snippet.</db:para>
</db:section>
</db:section>
<db:section xml:id="when-to-prefer-qt-add-ui-over-autouic">
<db:title>When to prefer qt_add_ui over AUTOUIC?</db:title>
<db:para>qt_add_ui has some advantages over <db:link xlink:href="https://cmake.org/cmake/help/latest/manual/cmake-qt.7.html#autouic">AUTOUIC</db:link>:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>qt_add_ui ensures that the .ui files are generated correctly during the first build, for the Ninja and Ninja Multi-Config generators.</db:para>
</db:listitem>
<db:listitem>
<db:para>qt_add_ui guarantees that the generated .h files are not leaked outside the build directory.</db:para>
</db:listitem>
<db:listitem>
<db:para>Since qt_add_ui does not scan source files, it provides a faster build than AUTOUIC.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="when-to-prefer-qt-add-ui-over-qt-wrap-ui">
<db:title>When to prefer qt_add_ui over qt_wrap_ui?</db:title>
<db:para>qt_add_ui has the INCLUDE_PREFIX argument, which can be used to specify the include prefix for the generated header files.</db:para>
<db:note>
<db:para>It is not recommended to use both qt_add_ui and <db:link xlink:href="https://cmake.org/cmake/help/latest/manual/cmake-qt.7.html#autouic">AUTOUIC</db:link> for the same target.</db:para>
</db:note>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt-wrap-ui.xml">qt_wrap_ui</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:article>
