<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QPdfDocumentRenderOptions Class</db:title>
<db:productname>QtPdf</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Pdf Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link> class holds the options to render a page from a PDF document.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QPdfDocumentRenderOptions</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfdocument.xml">QPdfDocument</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="RenderFlag-enum">
<db:title>enum QPdfDocumentRenderOptions::RenderFlag</db:title>
<db:bridgehead renderas="sect2">flags QPdfDocumentRenderOptions::RenderFlags</db:bridgehead>
<db:enumsynopsis>
<db:enumname>RenderFlag</db:enumname>
<db:enumitem>
<db:enumidentifier>None</db:enumidentifier>
<db:enumvalue>0x000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Annotations</db:enumidentifier>
<db:enumvalue>0x001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>OptimizedForLcd</db:enumidentifier>
<db:enumvalue>0x002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Grayscale</db:enumidentifier>
<db:enumvalue>0x004</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ForceHalftone</db:enumidentifier>
<db:enumvalue>0x008</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>TextAliased</db:enumidentifier>
<db:enumvalue>0x010</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ImageAliased</db:enumidentifier>
<db:enumvalue>0x020</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PathAliased</db:enumidentifier>
<db:enumvalue>0x040</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:typedefsynopsis>
<db:typedefname>QPdfDocumentRenderOptions::RenderFlags</db:typedefname>
</db:typedefsynopsis>
<db:para>This enum is used to describe how a page should be rendered.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link></db:emphasis>::<db:emphasis role="bold">RenderFlag</db:emphasis>::None</db:code></db:para>
</db:td>
<db:td><db:code>0x000</db:code></db:td>
<db:td>
<db:para>The default value, representing no flags.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link></db:emphasis>::<db:emphasis role="bold">RenderFlag</db:emphasis>::Annotations</db:code></db:para>
</db:td>
<db:td><db:code>0x001</db:code></db:td>
<db:td>
<db:para>The page is rendered with annotations.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link></db:emphasis>::<db:emphasis role="bold">RenderFlag</db:emphasis>::OptimizedForLcd</db:code></db:para>
</db:td>
<db:td><db:code>0x002</db:code></db:td>
<db:td>
<db:para>The text of the page is rendered optimized for LCD display.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link></db:emphasis>::<db:emphasis role="bold">RenderFlag</db:emphasis>::Grayscale</db:code></db:para>
</db:td>
<db:td><db:code>0x004</db:code></db:td>
<db:td>
<db:para>The page is rendered grayscale.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link></db:emphasis>::<db:emphasis role="bold">RenderFlag</db:emphasis>::ForceHalftone</db:code></db:para>
</db:td>
<db:td><db:code>0x008</db:code></db:td>
<db:td>
<db:para>Always use halftones for rendering if the output image is stretched.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link></db:emphasis>::<db:emphasis role="bold">RenderFlag</db:emphasis>::TextAliased</db:code></db:para>
</db:td>
<db:td><db:code>0x010</db:code></db:td>
<db:td>
<db:para>Anti-aliasing is disabled for rendering text.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link></db:emphasis>::<db:emphasis role="bold">RenderFlag</db:emphasis>::ImageAliased</db:code></db:para>
</db:td>
<db:td><db:code>0x020</db:code></db:td>
<db:td>
<db:para>Anti-aliasing is disabled for rendering images.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link></db:emphasis>::<db:emphasis role="bold">RenderFlag</db:emphasis>::PathAliased</db:code></db:para>
</db:td>
<db:td><db:code>0x040</db:code></db:td>
<db:td>
<db:para>Anti-aliasing is disabled for rendering paths.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The <db:code>RenderFlags</db:code> type is a typedef for <db:code><db:link xlink:href="qflags.xml">QFlags</db:link>&lt;RenderFlag&gt;. </db:code>It stores an OR combination of <db:code>RenderFlag</db:code> values.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfdocument.xml#render">QPdfDocument::render</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="Rotation-enum">
<db:title>enum QPdfDocumentRenderOptions::Rotation</db:title>
<db:enumsynopsis>
<db:enumname>Rotation</db:enumname>
<db:enumitem>
<db:enumidentifier>None</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Clockwise90</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Clockwise180</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>Clockwise270</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the rotation of the page for rendering.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link></db:emphasis>::<db:emphasis role="bold">Rotation</db:emphasis>::None</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Do not rotate (the default)</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link></db:emphasis>::<db:emphasis role="bold">Rotation</db:emphasis>::Clockwise90</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Rotate 90 degrees clockwise</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link></db:emphasis>::<db:emphasis role="bold">Rotation</db:emphasis>::Clockwise180</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Rotate 180 degrees</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link></db:emphasis>::<db:emphasis role="bold">Rotation</db:emphasis>::Clockwise270</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Rotate 270 degrees clockwise</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfdocument.xml#render">QPdfDocument::render</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QPdfDocumentRenderOptions">
<db:title>[constexpr] QPdfDocumentRenderOptions::QPdfDocumentRenderOptions()</db:title>
<db:constructorsynopsis>
<db:methodname>QPdfDocumentRenderOptions</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QPdfDocumentRenderOptions()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qpdfdocumentrenderoptions.xml">QPdfDocumentRenderOptions</db:link> object.</db:para>
</db:section>
<db:section xml:id="renderFlags">
<db:title>[constexpr] QPdfDocumentRenderOptions::RenderFlags QPdfDocumentRenderOptions::renderFlags() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPdfDocumentRenderOptions::RenderFlags</db:type>
<db:methodname>renderFlags</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPdfDocumentRenderOptions::RenderFlags renderFlags() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the special flags used for rendering a page from a PDF document.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfdocumentrenderoptions.xml#setRenderFlags">setRenderFlags</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rotation">
<db:title>[constexpr] QPdfDocumentRenderOptions::Rotation QPdfDocumentRenderOptions::rotation() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QPdfDocumentRenderOptions::Rotation</db:type>
<db:methodname>rotation</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPdfDocumentRenderOptions::Rotation rotation() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the rotation used for rendering a page from a PDF document.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfdocumentrenderoptions.xml#setRotation">setRotation</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="scaledClipRect">
<db:title>[constexpr] QRect QPdfDocumentRenderOptions::scaledClipRect() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QRect</db:type>
<db:methodname>scaledClipRect</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QRect scaledClipRect() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the rectangular region to be clipped from the page after having been scaled to <db:link xlink:href="qpdfdocumentrenderoptions.xml#scaledSize">scaledSize</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfdocumentrenderoptions.xml#setScaledClipRect">setScaledClipRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="scaledSize">
<db:title>[constexpr] QSize QPdfDocumentRenderOptions::scaledSize() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QSize</db:type>
<db:methodname>scaledSize</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QSize scaledSize() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the size of the page to be rendered, in pixels.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfdocumentrenderoptions.xml#setScaledSize">setScaledSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setRenderFlags">
<db:title>[constexpr] void QPdfDocumentRenderOptions::setRenderFlags(QPdfDocumentRenderOptions::RenderFlags <db:emphasis>flags</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setRenderFlags</db:methodname>
<db:methodparam>
<db:type>QPdfDocumentRenderOptions::RenderFlags</db:type>
<db:parameter>flags</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setRenderFlags(QPdfDocumentRenderOptions::RenderFlags flags)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the special <db:code role="parameter">flags</db:code> used for rendering a page from a PDF document.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfdocumentrenderoptions.xml#renderFlags">renderFlags</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setRotation">
<db:title>[constexpr] void QPdfDocumentRenderOptions::setRotation(QPdfDocumentRenderOptions::Rotation <db:emphasis>rotation</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setRotation</db:methodname>
<db:methodparam>
<db:type>QPdfDocumentRenderOptions::Rotation</db:type>
<db:parameter>rotation</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setRotation(QPdfDocumentRenderOptions::Rotation rotation)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the <db:code role="parameter">rotation</db:code> used for rendering a page from a PDF document.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfdocumentrenderoptions.xml#rotation">rotation</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setScaledClipRect">
<db:title>[constexpr] void QPdfDocumentRenderOptions::setScaledClipRect(const QRect &amp;<db:emphasis>r</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setScaledClipRect</db:methodname>
<db:methodparam>
<db:type>const QRect &amp;</db:type>
<db:parameter>r</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setScaledClipRect(const QRect &amp;r)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the rectangle region (<db:code role="parameter">r</db:code>) to be clipped from the page after having been scaled to <db:link xlink:href="qpdfdocumentrenderoptions.xml#scaledSize">scaledSize</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfdocumentrenderoptions.xml#scaledClipRect">scaledClipRect</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setScaledSize">
<db:title>[constexpr] void QPdfDocumentRenderOptions::setScaledSize(const QSize &amp;<db:emphasis>s</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setScaledSize</db:methodname>
<db:methodparam>
<db:type>const QSize &amp;</db:type>
<db:parameter>s</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setScaledSize(const QSize &amp;s)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the size (<db:code role="parameter">s</db:code>) of the page to be rendered, in pixels.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qpdfdocumentrenderoptions.xml#scaledSize">scaledSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
