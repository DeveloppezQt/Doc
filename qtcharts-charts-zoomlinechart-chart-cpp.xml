<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Zoom Line Example</db:title>
<db:productname>QtCharts</db:productname>
<db:edition>Qt Charts | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Charts Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The example shows how to create your own custom zooming effect.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Qt Charts module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:GPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3 or (at your option) any later version
** approved by the KDE Free Qt Foundation. The licenses are as published by
** the Free Software Foundation and appearing in the file LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;chart.h&quot;
#include &amp;lt;QtWidgets/QGesture&amp;gt;
#include &amp;lt;QtWidgets/QGraphicsScene&amp;gt;
#include &amp;lt;QtWidgets/QGraphicsView&amp;gt;

Chart::Chart(QGraphicsItem *parent, Qt::WindowFlags wFlags)
    : QChart(QChart::ChartTypeCartesian, parent, wFlags)
{
    // Seems that QGraphicsView (QChartView) does not grab gestures.
    // They can only be grabbed here in the QGraphicsWidget (QChart).
    grabGesture(Qt::PanGesture);
    grabGesture(Qt::PinchGesture);
}

Chart::~Chart()
{

}

bool Chart::sceneEvent(QEvent *event)
{
    if (event-&amp;gt;type() == QEvent::Gesture)
        return gestureEvent(static_cast&amp;lt;QGestureEvent *&amp;gt;(event));
    return QChart::event(event);
}

bool Chart::gestureEvent(QGestureEvent *event)
{
    if (QGesture *gesture = event-&amp;gt;gesture(Qt::PanGesture)) {
        QPanGesture *pan = static_cast&amp;lt;QPanGesture *&amp;gt;(gesture);
        QChart::scroll(-(pan-&amp;gt;delta().x()), pan-&amp;gt;delta().y());
    }

    if (QGesture *gesture = event-&amp;gt;gesture(Qt::PinchGesture)) {
        QPinchGesture *pinch = static_cast&amp;lt;QPinchGesture *&amp;gt;(gesture);
        if (pinch-&amp;gt;changeFlags() &amp;amp; QPinchGesture::ScaleFactorChanged)
            QChart::zoom(pinch-&amp;gt;scaleFactor());
    }

    return true;
}

</db:programlisting>
</db:article>
