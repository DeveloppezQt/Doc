<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QLowEnergyDescriptorData Class</db:title>
<db:productname>QtBluetooth</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Bluetooth Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qlowenergydescriptordata.xml">QLowEnergyDescriptorData</db:link> class is used to create GATT service data.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QLowEnergyDescriptorData</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += bluetooth</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QLowEnergyDescriptorData is part of <db:simplelist><db:member>shared</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>An object of this class provides a descriptor to be added to a <db:link xlink:href="qlowenergycharacteristicdata.xml">QLowEnergyCharacteristicData</db:link> object via <db:link xlink:href="qlowenergycharacteristicdata.xml#addDescriptor">QLowEnergyCharacteristicData::addDescriptor</db:link>().</db:para>
<db:note>
<db:para>The member functions related to access permissions are only applicable to those types of descriptors for which the Bluetooth specification does not prescribe if and how their values can be accessed.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergycharacteristicdata.xml">QLowEnergyCharacteristicData</db:link></db:member>
<db:member><db:link xlink:href="qlowenergyservicedata.xml">QLowEnergyServiceData</db:link></db:member>
<db:member><db:link xlink:href="qlowenergycontroller.xml#addService">QLowEnergyController::addService</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QLowEnergyDescriptorData">
<db:title>QLowEnergyDescriptorData::QLowEnergyDescriptorData()</db:title>
<db:para>Creates a new invalid object of this class.</db:para>
</db:section>
<db:section xml:id="QLowEnergyDescriptorData-2">
<db:title>QLowEnergyDescriptorData::QLowEnergyDescriptorData(const QBluetoothUuid &amp;<db:emphasis>uuid</db:emphasis>, const QByteArray &amp;<db:emphasis>value</db:emphasis>)</db:title>
<db:para>Creates a new object of this class with UUID and value being provided by <db:code role="parameter">uuid</db:code> and <db:code role="parameter">value</db:code>, respectively.</db:para>
</db:section>
<db:section xml:id="QLowEnergyDescriptorData-1">
<db:title>QLowEnergyDescriptorData::QLowEnergyDescriptorData(const QLowEnergyDescriptorData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a new object of this class that is a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QLowEnergyDescriptorData">
<db:title>[noexcept] QLowEnergyDescriptorData::~QLowEnergyDescriptorData()</db:title>
<db:para>Destroys this object.</db:para>
</db:section>
<db:section xml:id="isReadable">
<db:title>bool QLowEnergyDescriptorData::isReadable() const</db:title>
<db:para>Returns <db:code>true</db:code> if the value of this descriptor is readable and <db:code>false</db:code> otherwise.</db:para>
</db:section>
<db:section xml:id="isValid">
<db:title>bool QLowEnergyDescriptorData::isValid() const</db:title>
<db:para>Returns true if and only if this object has a non-null UUID.</db:para>
</db:section>
<db:section xml:id="isWritable">
<db:title>bool QLowEnergyDescriptorData::isWritable() const</db:title>
<db:para>Returns <db:code>true</db:code> if the value of this descriptor is writable and <db:code>false</db:code> otherwise.</db:para>
</db:section>
<db:section xml:id="readConstraints">
<db:title>QBluetooth::AttAccessConstraints QLowEnergyDescriptorData::readConstraints() const</db:title>
<db:para>Returns the constraints under which the value of this descriptor can be read. This value is only relevant if <db:link xlink:href="qlowenergydescriptordata.xml#isReadable">isReadable</db:link>() returns <db:code>true</db:code>.</db:para>
</db:section>
<db:section xml:id="setReadPermissions">
<db:title>void QLowEnergyDescriptorData::setReadPermissions(bool <db:emphasis>readable</db:emphasis>, QBluetooth::AttAccessConstraints <db:emphasis>constraints</db:emphasis> = QBluetooth::AttAccessConstraints())</db:title>
<db:para>Specifies whether the value of this descriptor is <db:code role="parameter">readable</db:code> and if so, under which <db:code role="parameter">constraints</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergydescriptordata.xml#setWritePermissions">setWritePermissions</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setUuid">
<db:title>void QLowEnergyDescriptorData::setUuid(const QBluetoothUuid &amp;<db:emphasis>uuid</db:emphasis>)</db:title>
<db:para>Sets the UUID of this descriptor to <db:code role="parameter">uuid</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergydescriptordata.xml#uuid">uuid</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setValue">
<db:title>void QLowEnergyDescriptorData::setValue(const QByteArray &amp;<db:emphasis>value</db:emphasis>)</db:title>
<db:para>Sets the value of this descriptor to <db:code role="parameter">value</db:code>. It will be sent to a peer device exactly the way it is provided here, so callers need to take care of things such as endianness.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergydescriptordata.xml#value">value</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setWritePermissions">
<db:title>void QLowEnergyDescriptorData::setWritePermissions(bool <db:emphasis>writable</db:emphasis>, QBluetooth::AttAccessConstraints <db:emphasis>constraints</db:emphasis> = QBluetooth::AttAccessConstraints())</db:title>
<db:para>Specifies whether the value of this descriptor is <db:code role="parameter">writable</db:code> and if so, under which <db:code role="parameter">constraints</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergydescriptordata.xml#setReadPermissions">setReadPermissions</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="swap">
<db:title>[noexcept] void QLowEnergyDescriptorData::swap(QLowEnergyDescriptorData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps this object with <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="uuid">
<db:title>QBluetoothUuid QLowEnergyDescriptorData::uuid() const</db:title>
<db:para>Returns the UUID of this descriptor.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergydescriptordata.xml#setUuid">setUuid</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="value">
<db:title>QByteArray QLowEnergyDescriptorData::value() const</db:title>
<db:para>Returns the value of this descriptor.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlowenergydescriptordata.xml#setValue">setValue</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="writeConstraints">
<db:title>QBluetooth::AttAccessConstraints QLowEnergyDescriptorData::writeConstraints() const</db:title>
<db:para>Returns the constraints under which the value of this descriptor can be written. This value is only relevant if <db:link xlink:href="qlowenergydescriptordata.xml#isWritable">isWritable</db:link>() returns <db:code>true</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QLowEnergyDescriptorData &amp;QLowEnergyDescriptorData::operator=(const QLowEnergyDescriptorData &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Makes this object a copy of <db:code role="parameter">other</db:code> and returns the new value of this object.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-not-eq">
<db:title>bool operator!=(const QLowEnergyDescriptorData &amp;<db:emphasis>a</db:emphasis>, const QLowEnergyDescriptorData &amp;<db:emphasis>b</db:emphasis>)</db:title>
<db:para>Returns <db:code>true</db:code> if <db:code role="parameter">a</db:code> and <db:code role="parameter">b</db:code> are unequal with respect to their public state, otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool operator==(const QLowEnergyDescriptorData &amp;<db:emphasis>a</db:emphasis>, const QLowEnergyDescriptorData &amp;<db:emphasis>b</db:emphasis>)</db:title>
<db:para>Returns <db:code>true</db:code> if <db:code role="parameter">a</db:code> and <db:code role="parameter">b</db:code> are equal with respect to their public state, otherwise returns <db:code>false</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
