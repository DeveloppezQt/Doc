<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>SliderStyle QML Type</db:title>
<db:productname>QtQuickControls1</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 1 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides custom styling for Slider.</db:para>
<db:para>This type was introduced in Qt 5.1.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls.Styles 1.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>SliderStyle is part of <db:simplelist><db:member><db:link xlink:href="controlsstyling.xml">Styling Controls</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The slider style allows you to create a custom appearance for a <db:link xlink:href="qml-qtquick-controls-slider.xml">Slider</db:link> control.</db:para>
<db:para>The implicit size of the slider is calculated based on the maximum implicit size of the <db:code>background</db:code> and <db:code>handle</db:code> delegates combined.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="qml">Slider {
    anchors.centerIn: parent
    style: SliderStyle {
        groove: Rectangle {
            implicitWidth: 200
            implicitHeight: 8
            color: &quot;gray&quot;
            radius: 8
        }
        handle: Rectangle {
            anchors.centerIn: parent
            color: control.pressed ? &quot;white&quot; : &quot;lightgray&quot;
            border.color: &quot;gray&quot;
            border.width: 2
            implicitWidth: 34
            implicitHeight: 34
            radius: 12
        }
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="control-prop">
<db:title>[read-only] control : Slider</db:title>
<db:fieldsynopsis>
<db:type>Slider</db:type>
<db:varname>control</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The <db:link xlink:href="qml-qtquick-controls-slider.xml">Slider</db:link> this style is attached to.</db:para>
</db:section>
<db:section xml:id="groove-prop">
<db:title>groove : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>groove</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the background groove of the slider.</db:para>
<db:para>You can access the handle position through the <db:code>styleData.handlePosition</db:code> property.</db:para>
</db:section>
<db:section xml:id="handle-prop">
<db:title>handle : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>handle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the item for the slider handle. You can access the slider through the <db:code>control</db:code> property</db:para>
</db:section>
<db:section xml:id="padding-prop">
<db:title>padding group</db:title>
<db:bridgehead renderas="sect2" xml:id="padding.bottom-prop">padding.bottom : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>padding.bottom</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="padding.left-prop">padding.left : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>padding.left</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="padding.right-prop">padding.right : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>padding.right</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="padding.top-prop">padding.top : int</db:bridgehead>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>padding.top</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This grouped property holds the <db:code>top</db:code>, <db:code>left</db:code>, <db:code>right</db:code> and <db:code>bottom</db:code> padding.</db:para>
</db:section>
<db:section xml:id="panel-prop">
<db:title>panel : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>panel</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the slider style panel.</db:para>
<db:para>Note that it is generally not recommended to override this.</db:para>
</db:section>
<db:section xml:id="tickmarks-prop">
<db:title>[since QtQuick.Controls.Styles 1.1] tickmarks : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>tickmarks</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the tick mark labels.</db:para>
<db:para>Every tickmark that should be drawn must be defined within this component, so it is common to use a <db:link xlink:href="qml-qtquick-repeater.xml">Repeater</db:link>, for example.</db:para>
<db:para>You can access the handle width through the <db:code>styleData.handleWidth</db:code> property.</db:para>
<db:para>This property was introduced in QtQuick.Controls.Styles 1.1.</db:para>
</db:section>
</db:section>
</db:article>
