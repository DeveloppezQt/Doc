<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Hello Vulkan Cubes Example</db:title>
<db:productname>QtGui</db:productname>
<db:edition>Qt 5.11.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt GUI Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Shows the basics of using <db:link xlink:href="qvulkanwindow.xml">QVulkanWindow</db:link>.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The <db:emphasis>Hello Vulkan Cubes Example</db:emphasis> shows more advanced usage of <db:link xlink:href="qvulkanwindow.xml">QVulkanWindow</db:link>.</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/hellovulkancubes.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>In this example there is a mesh loaded from a file and two different materials and corresponding graphics pipelines. The rounded cubes are drawn using instancing and feature a Phong lighting model with a single directional light.</db:para>
<db:para>Unlike hellovulkantexture and hellovulkantriangle, the uniform buffer handling takes an alternative approach here: dynamic uniform buffers are used instead of multiple descriptor sets.</db:para>
<db:para>The example requires <db:link xlink:href="qtconcurrent-module.xml">QtConcurrent</db:link> since it demonstrates simple usage of QtConcurrent::run(), <db:link xlink:href="qfuture.xml">QFuture</db:link>, and <db:link xlink:href="qfuturewatcher.xml">QFutureWatcher</db:link> in combination of <db:link xlink:href="qvulkanwindow.xml">QVulkanWindow</db:link>. Mesh and shader data loading, the potentially expensive graphics pipeline construction, and the building of the frame command buffer are all done in separate worker threads.</db:para>
<db:para>The scene is embedded into a widget-based user interface. The <db:link xlink:href="qvulkanwindow.xml">QVulkanWindow</db:link> subclass handles mouse and keyboard input as well since it provides a first-person style camera in order to allow moving around in the scene.</db:para>
<db:section xml:id="running-the-example">
<db:title>Running the Example</db:title>
<db:para>To run the example from <db:link xlink:href="http://doc.qt.io/qtcreator/index.html">Qt Creator</db:link>, open the <db:emphasis role="bold">Welcome</db:emphasis> mode and select the example from <db:emphasis role="bold">Examples</db:emphasis>. For more information, visit <db:link xlink:href="http://doc.qt.io/qtcreator/creator-build-example-application.html">Building and Running an Example</db:link>.</db:para>
</db:section>
<db:section>
<db:title>List of Files</db:title>
<db:para>Files:</db:para>
<db:section>
<db:title>List of Files</db:title>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/camera.cpp">hellovulkancubes/camera.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/camera.h">hellovulkancubes/camera.h</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/hellovulkancubes.pro">hellovulkancubes/hellovulkancubes.pro</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/hellovulkancubes.qrc">hellovulkancubes/hellovulkancubes.qrc</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/main.cpp">hellovulkancubes/main.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/mainwindow.cpp">hellovulkancubes/mainwindow.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/mainwindow.h">hellovulkancubes/mainwindow.h</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/mesh.cpp">hellovulkancubes/mesh.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/mesh.h">hellovulkancubes/mesh.h</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/renderer.cpp">hellovulkancubes/renderer.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/renderer.h">hellovulkancubes/renderer.h</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/shader.cpp">hellovulkancubes/shader.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/shader.h">hellovulkancubes/shader.h</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/vulkanwindow.cpp">hellovulkancubes/vulkanwindow.cpp</db:link></db:para></db:listitem>
<db:listitem>
<db:para><db:link xlink:href="hellovulkancubes/vulkanwindow.h">hellovulkancubes/vulkanwindow.h</db:link></db:para></db:listitem>
</db:itemizedlist>
</db:section>
</db:section></db:article>
