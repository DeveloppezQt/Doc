<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QCameraLens Class</db:title>
<db:subtitle>Qt3DRender::QCameraLens</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para><db:link xlink:href="qt3drender-qcameralens.xml">Qt3DRender::QCameraLens</db:link> specifies the projection matrix that will be used to define a Camera for a 3D scene.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>Qt3DRender/QCameraLens</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-cameralens.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qcomponent.xml" xlink:role="class">Qt3DCore::QComponent</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="ProjectionType-enum">
<db:title>enum QCameraLens::ProjectionType</db:title>
<db:enumsynopsis>
<db:enumname>ProjectionType</db:enumname>
<db:enumitem>
<db:enumidentifier>OrthographicProjection</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>PerspectiveProjection</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FrustumProjection</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CustomProjection</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>Specifies which parameters of <db:link xlink:href="qt3drender-qcameralens.xml">Qt3DRender::QCameraLens</db:link> are used to compute the projection matrix.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml">QCameraLens</db:link></db:emphasis>::OrthographicProjection</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Orthogonal projection</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml">QCameraLens</db:link></db:emphasis>::PerspectiveProjection</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Perspective projection</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml">QCameraLens</db:link></db:emphasis>::FrustumProjection</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Frustum projection</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml">QCameraLens</db:link></db:emphasis>::CustomProjection</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Custom user-defined projection</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="aspectRatio-prop">
<db:title>aspectRatio : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>aspectRatio</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">aspectRatio</db:synopsisinfo>
<db:synopsisinfo role="setter">setAspectRatio</db:synopsisinfo>
<db:synopsisinfo role="notifier">aspectRatioChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current aspect ratio of the camera lens.</db:para>
<db:note>
<db:para>: The return value may be undefined if the projection type is not <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::PerspectiveProjection</db:link>.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">aspectRatio</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml#setAspectRatio">setAspectRatio</db:link></db:emphasis>(<db:type>float</db:type> <db:emphasis>aspectRatio</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">aspectRatioChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>aspectRatio</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="bottom-prop">
<db:title>bottom : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>bottom</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">bottom</db:synopsisinfo>
<db:synopsisinfo role="setter">setBottom</db:synopsisinfo>
<db:synopsisinfo role="notifier">bottomChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current bottom plane of the camera lens.</db:para>
<db:note>
<db:para>The return value may be undefined if the projection type is <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::PerspectiveProjection</db:link>.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">bottom</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml#setBottom">setBottom</db:link></db:emphasis>(<db:type>float</db:type> <db:emphasis>bottom</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">bottomChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>bottom</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="exposure-prop">
<db:title>exposure : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>exposure</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">exposure</db:synopsisinfo>
<db:synopsisinfo role="setter">setExposure</db:synopsisinfo>
<db:synopsisinfo role="notifier">exposureChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current exposure of the camera lens.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">exposure</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml#setExposure">setExposure</db:link></db:emphasis>(<db:type>float</db:type> <db:emphasis>exposure</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">exposureChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>exposure</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="farPlane-prop">
<db:title>farPlane : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>farPlane</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">farPlane</db:synopsisinfo>
<db:synopsisinfo role="setter">setFarPlane</db:synopsisinfo>
<db:synopsisinfo role="notifier">farPlaneChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current near plane of the camera lens.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">farPlane</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml#setFarPlane">setFarPlane</db:link></db:emphasis>(<db:type>float</db:type> <db:emphasis>farPlane</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">farPlaneChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>farPlane</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="fieldOfView-prop">
<db:title>fieldOfView : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>fieldOfView</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">fieldOfView</db:synopsisinfo>
<db:synopsisinfo role="setter">setFieldOfView</db:synopsisinfo>
<db:synopsisinfo role="notifier">fieldOfViewChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current field of view of the camera lens.</db:para>
<db:note>
<db:para>: The return value may be undefined if the projection type is not <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::PerspectiveProjection</db:link>.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">fieldOfView</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml#setFieldOfView">setFieldOfView</db:link></db:emphasis>(<db:type>float</db:type> <db:emphasis>fieldOfView</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">fieldOfViewChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>fieldOfView</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="left-prop">
<db:title>left : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>left</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">left</db:synopsisinfo>
<db:synopsisinfo role="setter">setLeft</db:synopsisinfo>
<db:synopsisinfo role="notifier">leftChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current left plane of the camera lens.</db:para>
<db:note>
<db:para>The return value may be undefined if the projection type is <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::PerspectiveProjection</db:link>.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">left</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml#setLeft">setLeft</db:link></db:emphasis>(<db:type>float</db:type> <db:emphasis>left</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">leftChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>left</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="nearPlane-prop">
<db:title>nearPlane : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>nearPlane</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">nearPlane</db:synopsisinfo>
<db:synopsisinfo role="setter">setNearPlane</db:synopsisinfo>
<db:synopsisinfo role="notifier">nearPlaneChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current near plane of the camera lens.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">nearPlane</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml#setNearPlane">setNearPlane</db:link></db:emphasis>(<db:type>float</db:type> <db:emphasis>nearPlane</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">nearPlaneChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>nearPlane</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="projectionMatrix-prop">
<db:title>projectionMatrix : QMatrix4x4</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QMatrix4x4</db:type>
<db:varname>projectionMatrix</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">projectionMatrix</db:synopsisinfo>
<db:synopsisinfo role="setter">setProjectionMatrix</db:synopsisinfo>
<db:synopsisinfo role="notifier">projectionMatrixChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current projection matrix of the camera lens.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qmatrix4x4.xml">QMatrix4x4</db:link></db:type> <db:emphasis role="bold">projectionMatrix</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml#setProjectionMatrix">setProjectionMatrix</db:link></db:emphasis>(const <db:type><db:link xlink:href="qmatrix4x4.xml">QMatrix4x4</db:link></db:type> &amp;<db:emphasis>projectionMatrix</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">projectionMatrixChanged</db:emphasis>(const <db:type><db:link xlink:href="qmatrix4x4.xml">QMatrix4x4</db:link></db:type> &amp;<db:emphasis>projectionMatrix</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="projectionType-prop">
<db:title>projectionType : ProjectionType</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>ProjectionType</db:type>
<db:varname>projectionType</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">projectionType</db:synopsisinfo>
<db:synopsisinfo role="setter">setProjectionType</db:synopsisinfo>
<db:synopsisinfo role="notifier">projectionTypeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the type of the camera projection.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::ProjectionType</db:link></db:type> <db:emphasis role="bold">projectionType</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml#setProjectionType">setProjectionType</db:link></db:emphasis>(<db:type><db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::ProjectionType</db:link></db:type> <db:emphasis>projectionType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">projectionTypeChanged</db:emphasis>(<db:type><db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">QCameraLens::ProjectionType</db:link></db:type> <db:emphasis>projectionType</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::ProjectionType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="right-prop">
<db:title>right : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>right</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">right</db:synopsisinfo>
<db:synopsisinfo role="setter">setRight</db:synopsisinfo>
<db:synopsisinfo role="notifier">rightChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current right plane of the camera lens.</db:para>
<db:note>
<db:para>The return value may be undefined if the projection type is <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::PerspectiveProjection</db:link>.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">right</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml#setRight">setRight</db:link></db:emphasis>(<db:type>float</db:type> <db:emphasis>right</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">rightChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>right</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="top-prop">
<db:title>top : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>top</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">top</db:synopsisinfo>
<db:synopsisinfo role="setter">setTop</db:synopsisinfo>
<db:synopsisinfo role="notifier">topChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the current top plane of the camera lens.</db:para>
<db:note>
<db:para>The return value may be undefined if the projection type is <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::PerspectiveProjection</db:link>.</db:para>
</db:note>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">top</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qcameralens.xml#setTop">setTop</db:link></db:emphasis>(<db:type>float</db:type> <db:emphasis>top</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">topChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>top</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QCameraLens">
<db:title>[explicit] QCameraLens::QCameraLens(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QCameraLens</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QNode *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QCameraLens(Qt3DCore::QNode *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qt3drender-qcameralens.xml">QCameraLens</db:link> with given <db:code role="parameter">parent</db:code></db:para>
</db:section>
<db:section xml:id="setAspectRatio">
<db:title>void QCameraLens::setAspectRatio(float <db:emphasis>aspectRatio</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setAspectRatio</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>aspectRatio</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">aspectRatio</db:synopsisinfo>
<db:synopsisinfo role="signature">void setAspectRatio(float aspectRatio)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the projection's aspect ratio to <db:code role="parameter">aspectRatio</db:code>. This triggers a projection matrix update.</db:para>
<db:note>
<db:para>this has no effect if the projection type is not <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::PerspectiveProjection</db:link>.</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcameralens.xml#aspectRatio-prop">aspectRatio</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcameralens.xml#aspectRatio-prop">aspectRatio</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBottom">
<db:title>void QCameraLens::setBottom(float <db:emphasis>bottom</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setBottom</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>bottom</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">bottom</db:synopsisinfo>
<db:synopsisinfo role="signature">void setBottom(float bottom)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the projection's bottom window coordinate to <db:code role="parameter">bottom</db:code>. This triggers a projection matrix update.</db:para>
<db:note>
<db:para>this has no effect if the projection type is <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::PerspectiveProjection</db:link>.</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcameralens.xml#bottom-prop">bottom</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcameralens.xml#bottom-prop">bottom</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setExposure">
<db:title>void QCameraLens::setExposure(float <db:emphasis>exposure</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setExposure</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>exposure</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">exposure</db:synopsisinfo>
<db:synopsisinfo role="signature">void setExposure(float exposure)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the camera lens' <db:code role="parameter">exposure</db:code></db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcameralens.xml#exposure-prop">exposure</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcameralens.xml#exposure-prop">exposure</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFarPlane">
<db:title>void QCameraLens::setFarPlane(float <db:emphasis>farPlane</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setFarPlane</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>farPlane</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">farPlane</db:synopsisinfo>
<db:synopsisinfo role="signature">void setFarPlane(float farPlane)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the projection's far plane to <db:code role="parameter">farPlane</db:code>. This triggers a projection matrix update.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcameralens.xml#farPlane-prop">farPlane</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcameralens.xml#farPlane-prop">farPlane</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFieldOfView">
<db:title>void QCameraLens::setFieldOfView(float <db:emphasis>fieldOfView</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setFieldOfView</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>fieldOfView</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">fieldOfView</db:synopsisinfo>
<db:synopsisinfo role="signature">void setFieldOfView(float fieldOfView)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the projection's field of view to <db:code role="parameter">fieldOfView</db:code> degrees. This triggers a projection matrix update.</db:para>
<db:note>
<db:para>this has no effect if the projection type is not <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::PerspectiveProjection</db:link>.</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcameralens.xml#fieldOfView-prop">fieldOfView</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcameralens.xml#fieldOfView-prop">fieldOfView</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setFrustumProjection">
<db:title>void QCameraLens::setFrustumProjection(float <db:emphasis>left</db:emphasis>, float <db:emphasis>right</db:emphasis>, float <db:emphasis>bottom</db:emphasis>, float <db:emphasis>top</db:emphasis>, float <db:emphasis>nearPlane</db:emphasis>, float <db:emphasis>farPlane</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setFrustumProjection</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>left</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>right</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>bottom</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>top</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>nearPlane</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>farPlane</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setFrustumProjection(float left, float right, float bottom, float top, float nearPlane, float farPlane)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defines an orthographic projection based on <db:code role="parameter">left</db:code>, <db:code role="parameter">right</db:code>, <db:code role="parameter">bottom</db:code>, <db:code role="parameter">top</db:code>, <db:code role="parameter">nearPlane</db:code>, <db:code role="parameter">farPlane</db:code>.</db:para>
</db:section>
<db:section xml:id="setLeft">
<db:title>void QCameraLens::setLeft(float <db:emphasis>left</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setLeft</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>left</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">left</db:synopsisinfo>
<db:synopsisinfo role="signature">void setLeft(float left)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the projection's lower left window coordinate to <db:code role="parameter">left</db:code>. This triggers a projection matrix update.</db:para>
<db:note>
<db:para>this has no effect if the projection type is <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::PerspectiveProjection</db:link>.</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcameralens.xml#left-prop">left</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcameralens.xml#left-prop">left</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setNearPlane">
<db:title>void QCameraLens::setNearPlane(float <db:emphasis>nearPlane</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setNearPlane</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>nearPlane</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">nearPlane</db:synopsisinfo>
<db:synopsisinfo role="signature">void setNearPlane(float nearPlane)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the projection's near plane to <db:code role="parameter">nearPlane</db:code>. This triggers a projection matrix update.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcameralens.xml#nearPlane-prop">nearPlane</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcameralens.xml#nearPlane-prop">nearPlane</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setOrthographicProjection">
<db:title>void QCameraLens::setOrthographicProjection(float <db:emphasis>left</db:emphasis>, float <db:emphasis>right</db:emphasis>, float <db:emphasis>bottom</db:emphasis>, float <db:emphasis>top</db:emphasis>, float <db:emphasis>nearPlane</db:emphasis>, float <db:emphasis>farPlane</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setOrthographicProjection</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>left</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>right</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>bottom</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>top</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>nearPlane</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>farPlane</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setOrthographicProjection(float left, float right, float bottom, float top, float nearPlane, float farPlane)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defines an orthographic projection based on <db:code role="parameter">left</db:code>, <db:code role="parameter">right</db:code>, <db:code role="parameter">bottom</db:code>, <db:code role="parameter">top</db:code>, <db:code role="parameter">nearPlane</db:code>, <db:code role="parameter">farPlane</db:code>.</db:para>
</db:section>
<db:section xml:id="setPerspectiveProjection">
<db:title>void QCameraLens::setPerspectiveProjection(float <db:emphasis>fieldOfView</db:emphasis>, float <db:emphasis>aspectRatio</db:emphasis>, float <db:emphasis>nearPlane</db:emphasis>, float <db:emphasis>farPlane</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setPerspectiveProjection</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>fieldOfView</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>aspectRatio</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>nearPlane</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>farPlane</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setPerspectiveProjection(float fieldOfView, float aspectRatio, float nearPlane, float farPlane)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Defines a perspective projection based on <db:code role="parameter">fieldOfView</db:code>, <db:code role="parameter">aspectRatio</db:code>, <db:code role="parameter">nearPlane</db:code>, <db:code role="parameter">farPlane</db:code>.</db:para>
</db:section>
<db:section xml:id="setProjectionMatrix">
<db:title>void QCameraLens::setProjectionMatrix(const QMatrix4x4 &amp;<db:emphasis>projectionMatrix</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setProjectionMatrix</db:methodname>
<db:methodparam>
<db:type>const QMatrix4x4 &amp;</db:type>
<db:parameter>projectionMatrix</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">projectionMatrix</db:synopsisinfo>
<db:synopsisinfo role="signature">void setProjectionMatrix(const QMatrix4x4 &amp;projectionMatrix)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the project matrix to <db:code role="parameter">projectionMatrix</db:code>.</db:para>
<db:note>
<db:para>This will set the projection type to <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::CustomProjection</db:link> and thus ignore all other camera parameters that might have been specified.</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcameralens.xml#projectionMatrix-prop">projectionMatrix</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcameralens.xml#projectionMatrix-prop">projectionMatrix</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setProjectionType">
<db:title>void QCameraLens::setProjectionType(Qt3DRender::QCameraLens::ProjectionType <db:emphasis>projectionType</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setProjectionType</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QCameraLens::ProjectionType</db:type>
<db:parameter>projectionType</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">projectionType</db:synopsisinfo>
<db:synopsisinfo role="signature">void setProjectionType(Qt3DRender::QCameraLens::ProjectionType projectionType)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the lens' projection type <db:code role="parameter">projectionType</db:code>.</db:para>
<db:note>
<db:para>Qt3DRender::QCameraLens::Frustum and <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::PerspectiveProjection</db:link> are two different ways of specifying the same projection.</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcameralens.xml#projectionType-prop">projectionType</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcameralens.xml#projectionType-prop">projectionType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setRight">
<db:title>void QCameraLens::setRight(float <db:emphasis>right</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setRight</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>right</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">right</db:synopsisinfo>
<db:synopsisinfo role="signature">void setRight(float right)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the projection's upper right window coordinate to <db:code role="parameter">right</db:code>. This triggers a projection matrix update.</db:para>
<db:note>
<db:para>this has no effect if the projection type is <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::PerspectiveProjection</db:link>.</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcameralens.xml#right-prop">right</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcameralens.xml#right-prop">right</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setTop">
<db:title>void QCameraLens::setTop(float <db:emphasis>top</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setTop</db:methodname>
<db:methodparam>
<db:type>float</db:type>
<db:parameter>top</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">top</db:synopsisinfo>
<db:synopsisinfo role="signature">void setTop(float top)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the projection's top window coordinate to <db:code role="parameter">top</db:code>. This triggers a projection matrix update.</db:para>
<db:note>
<db:para>this has no effect if the projection type is <db:link xlink:href="qt3drender-qcameralens.xml#ProjectionType-enum">Qt3DRender::QCameraLens::PerspectiveProjection</db:link>.</db:para>
</db:note>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qcameralens.xml#top-prop">top</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qcameralens.xml#top-prop">top</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
