<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>LayoutMirroring QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Property used to mirror layout behavior.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>LayoutMirroring is part of <db:simplelist><db:member>qtquick-positioners</db:member><db:member>qml-utility-elements</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qml-qtquick-layoutmirroring.xml">LayoutMirroring</db:link> attached property is used to horizontally mirror <db:link xlink:href="qtquick-positioning-anchors.xml">Item anchors</db:link>, <db:link xlink:href="qtquick-positioning-layouts.xml">positioner</db:link> types (such as <db:link xlink:href="qml-qtquick-row.xml">Row</db:link> and <db:link xlink:href="qml-qtquick-grid.xml">Grid</db:link>) and views (such as <db:link xlink:href="qml-qtquick-gridview.xml">GridView</db:link> and horizontal <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>). Mirroring is a visual change: left anchors become right anchors, and positioner types like <db:link xlink:href="qml-qtquick-grid.xml">Grid</db:link> and <db:link xlink:href="qml-qtquick-row.xml">Row</db:link> reverse the horizontal layout of child items.</db:para>
<db:para>Mirroring is enabled for an item by setting the <db:link xlink:href="qml-qtquick-layoutmirroring.xml#enabled-prop">enabled</db:link> property to true. By default, this only affects the item itself; setting the <db:link xlink:href="qml-qtquick-layoutmirroring.xml#childrenInherit-prop">childrenInherit</db:link> property to true propagates the mirroring behavior to all child items as well. If the <db:code>LayoutMirroring</db:code> attached property has not been defined for an item, mirroring is not enabled.</db:para>
<db:note>
<db:para>Since Qt 5.8, <db:code>LayoutMirroring</db:code> can be attached to a <db:link xlink:href="qml-qtquick-window.xml">Window</db:link>. In practice, it is the same as attaching <db:code>LayoutMirroring</db:code> to the window's <db:code>contentItem</db:code>.</db:para>
</db:note>
<db:para>The following example shows mirroring in action. The <db:link xlink:href="qml-qtquick-row.xml">Row</db:link> below is specified as being anchored to the left of its parent. However, since mirroring has been enabled, the anchor is horizontally reversed and it is now anchored to the right. Also, since items in a <db:link xlink:href="qml-qtquick-row.xml">Row</db:link> are positioned from left to right by default, they are now positioned from right to left instead, as demonstrated by the numbering and opacity of the items:</db:para>
<db:programlisting language="qml">import QtQuick 2.0

Rectangle {
    LayoutMirroring.enabled: true
    LayoutMirroring.childrenInherit: true

    width: 300; height: 50
    color: &quot;yellow&quot;
    border.width: 1

    Row {
        anchors { left: parent.left; margins: 5 }
        y: 5; spacing: 5

        Repeater {
            model: 5

            Rectangle {
                color: &quot;red&quot;
                opacity: (5 - index) / 5
                width: 40; height: 40

                Text {
                    text: index + 1
                    anchors.centerIn: parent
                }
            }
        }
    }
}
</db:programlisting>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/layoutmirroring.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>Layout mirroring is useful when it is necessary to support both left-to-right and right-to-left layout versions of an application to target different language areas. The <db:link xlink:href="qml-qtquick-layoutmirroring.xml#childrenInherit-prop">childrenInherit</db:link> property allows layout mirroring to be applied without manually setting layout configurations for every item in an application. Keep in mind, however, that mirroring does not affect any positioning that is defined by the <db:link xlink:href="qml-qtquick-item.xml">Item</db:link> <db:link xlink:href="qml-qtquick-item.xml#x-prop">x</db:link> coordinate value, so even with mirroring enabled, it will often be necessary to apply some layout fixes to support the desired layout direction. Also, it may be necessary to disable the mirroring of individual child items (by setting <db:link xlink:href="qml-qtquick-layoutmirroring.xml#enabled-prop">LayoutMirroring.enabled</db:link> to false for such items) if mirroring is not the desired behavior, or if the child item already implements mirroring in some custom way.</db:para>
<db:para>To set the layout direction based on the <db:link xlink:href="qtquick-positioning-righttoleft.xml#default-layout-direction">default layout direction</db:link> of the application, use the following code:</db:para>
<db:programlisting language="cpp">LayoutMirroring.enabled: Qt.application.layoutDirection === Qt.RightToLeft
</db:programlisting>
<db:para>See <db:link xlink:href="qtquick-positioning-righttoleft.xml">Right-to-left User Interfaces</db:link> for further details on using <db:code>LayoutMirroring</db:code> and other related features to implement right-to-left support for an application.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="childrenInherit-prop">
<db:title>childrenInherit : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>childrenInherit</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the <db:link xlink:href="qml-qtquick-layoutmirroring.xml#enabled-prop">LayoutMirroring.enabled</db:link> value for this item is inherited by its children.</db:para>
<db:para>The default value is false.</db:para>
</db:section>
<db:section xml:id="enabled-prop">
<db:title>enabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>enabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the item's layout is mirrored horizontally. Setting this to true horizontally reverses <db:link xlink:href="qtquick-positioning-anchors.xml">anchor</db:link> settings such that left anchors become right, and right anchors become left. For <db:link xlink:href="qtquick-positioning-layouts.xml">positioner</db:link> types (such as <db:link xlink:href="qml-qtquick-row.xml">Row</db:link> and <db:link xlink:href="qml-qtquick-grid.xml">Grid</db:link>) and view types (such as <db:link xlink:href="qml-qtquick-gridview.xml">GridView</db:link> and <db:link xlink:href="qml-qtquick-listview.xml">ListView</db:link>) this also mirrors the horizontal layout direction of the item.</db:para>
<db:para>The default value is false.</db:para>
</db:section>
</db:section>
</db:article>
