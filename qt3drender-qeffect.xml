<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QEffect Class</db:title>
<db:subtitle>Qt3DRender::QEffect</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The base class for effects in a Qt 3D scene.</db:para>
<db:para>This class was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QEffect</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-effect.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3dcore-qnode.xml" xlink:role="class">Qt3DCore::QNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qt3drender-qeffect.xml">QEffect</db:link> class combines a set of techniques and parameters used by those techniques to produce a rendering effect for a material.</db:para>
<db:para>An <db:link xlink:href="qt3drender-qeffect.xml">QEffect</db:link> instance should be shared among several <db:link xlink:href="qt3drender-qmaterial.xml">QMaterial</db:link> instances when possible.</db:para>
<db:programlisting language="cpp">QEffect *effect = new QEffect();

// Create technique, render pass and shader
QTechnique *gl3Technique = new QTechnique();
QRenderPass *gl3Pass = new QRenderPass();
QShaderProgram *glShader = new QShaderProgram();

// Set the shader on the render pass
gl3Pass-&amp;gt;setShaderProgram(glShader);

// Add the pass to the technique
gl3Technique-&amp;gt;addRenderPass(gl3Pass);

// Set the targeted GL version for the technique
gl3Technique-&amp;gt;graphicsApiFilter()-&amp;gt;setApi(QGraphicsApiFilter::OpenGL);
gl3Technique-&amp;gt;graphicsApiFilter()-&amp;gt;setMajorVersion(3);
gl3Technique-&amp;gt;graphicsApiFilter()-&amp;gt;setMinorVersion(1);
gl3Technique-&amp;gt;graphicsApiFilter()-&amp;gt;setProfile(QGraphicsApiFilter::CoreProfile);

// Add the technique to the effect
effect-&amp;gt;addTechnique(gl3Technique);
</db:programlisting>
<db:para>A <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> defined on an Effect is overridden by a <db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link> (of the same name) defined in a <db:link xlink:href="qt3drender-qmaterial.xml">QMaterial</db:link>, <db:link xlink:href="qt3drender-qtechniquefilter.xml">QTechniqueFilter</db:link>, <db:link xlink:href="qt3drender-qrenderpassfilter.xml">QRenderPassFilter</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qmaterial.xml">QMaterial</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qtechnique.xml">QTechnique</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qparameter.xml">QParameter</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="addParameter">
<db:title>void QEffect::addParameter(Qt3DRender::QParameter *<db:emphasis>parameter</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addParameter</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QParameter *</db:type>
<db:parameter>parameter</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addParameter(Qt3DRender::QParameter *parameter)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Adds <db:code role="parameter">parameter</db:code> to the effect. It sends a QPropertyNodeAddedChange to the backend. The <db:code role="parameter">parameter</db:code> will be used to set a corresponding uniform value in the shader used by this effect.</db:para>
</db:section>
<db:section xml:id="addTechnique">
<db:title>void QEffect::addTechnique(Qt3DRender::QTechnique *<db:emphasis>t</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>addTechnique</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QTechnique *</db:type>
<db:parameter>t</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void addTechnique(Qt3DRender::QTechnique *t)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Adds a new technique <db:code role="parameter">t</db:code> to the effect. It sends a QPropertyNodeAddedChange to the backend.</db:para>
</db:section>
<db:section xml:id="parameters">
<db:title>QVector&lt;Qt3DRender::QParameter *&gt; QEffect::parameters() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QVector&lt;Qt3DRender::QParameter *&gt;</db:type>
<db:methodname>parameters</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QVector&lt;Qt3DRender::QParameter *&gt; parameters() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of parameters used by the effect.</db:para>
</db:section>
<db:section xml:id="removeParameter">
<db:title>void QEffect::removeParameter(Qt3DRender::QParameter *<db:emphasis>parameter</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>removeParameter</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QParameter *</db:type>
<db:parameter>parameter</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void removeParameter(Qt3DRender::QParameter *parameter)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Removes a parameter <db:code role="parameter">parameter</db:code> from the effect.</db:para>
</db:section>
<db:section xml:id="removeTechnique">
<db:title>void QEffect::removeTechnique(Qt3DRender::QTechnique *<db:emphasis>t</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>removeTechnique</db:methodname>
<db:methodparam>
<db:type>Qt3DRender::QTechnique *</db:type>
<db:parameter>t</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void removeTechnique(Qt3DRender::QTechnique *t)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Removes a technique <db:code role="parameter">t</db:code> from the effect.</db:para>
</db:section>
<db:section xml:id="techniques">
<db:title>QVector&lt;Qt3DRender::QTechnique *&gt; QEffect::techniques() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QVector&lt;Qt3DRender::QTechnique *&gt;</db:type>
<db:methodname>techniques</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QVector&lt;Qt3DRender::QTechnique *&gt; techniques() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the list of techniques used by the effect.</db:para>
</db:section>
</db:section>
</db:article>
