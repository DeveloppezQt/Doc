<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>SceneLoader QML Type</db:title>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.4.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides the facility to load an existing Scene.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-01-26</db:pubdate>
<db:date>2024-01-26</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import Qt3D.Render 2.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Component</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiates:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qsceneloader.xml">QSceneLoader</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>Given a 3D source file, the <db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link> will try to parse it and build a tree of Entity objects with proper <db:link xlink:href="qml-qt3d-render-geometryrenderer.xml">GeometryRenderer</db:link>, Transform and Material components.</db:para>
<db:para>The loader will try to determine the best material to be used based on the properties of the model file. If you wish to use a custom material, you will have to traverse the tree and replace the default associated materials with yours.</db:para>
<db:para>As the name implies, <db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link> loads a complete scene subtree. If you wish to load a single piece of geometry, you should rather use the Mesh instead.</db:para>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link> internally relies on the use of plugins to support a wide variety of 3D file formats. <db:link xlink:href="http://assimp.sourceforge.net/main_features_formats.html">Here</db:link> is a list of formats that are supported by Qt3D.</db:para>
<db:note>
<db:para>this component shouldn't be shared among several Entity instances. Undefined behavior will result.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qt3d-render-mesh.xml">Mesh</db:link></db:member>
<db:member><db:link xlink:href="qml-qt3d-render-geometryrenderer.xml">GeometryRenderer</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="source-prop">
<db:title>source : url</db:title>
<db:fieldsynopsis>
<db:type>url</db:type>
<db:varname>source</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the url to the source to be loaded.</db:para>
</db:section>
<db:section xml:id="status-prop">
<db:title>[read-only] status : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>status</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the status of scene loading.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.None</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.Loading</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.Ready</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.Error</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qsceneloader.xml#Status-enum">Qt3DRender::QSceneLoader::Status</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="component-method">
<db:title>Entity component(string <db:emphasis>entityName</db:emphasis>, enumeration <db:emphasis>componentType</db:emphasis>)</db:title>
<db:para>Returns a component matching <db:code role="parameter">componentType</db:code> of a loaded entity with an <db:emphasis>objectName</db:emphasis> matching the <db:code role="parameter">entityName</db:code>. If the entity has multiple matching components, the first match in the component list of the entity is returned. If there is no match, an undefined item is returned.</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.UnknownComponent Unknown component type</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.GeometryRendererComponent <db:link xlink:href="qt3drender-qgeometryrenderer.xml">Qt3DRender::QGeometryRenderer</db:link> component</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.TransformComponent <db:link xlink:href="qt3dcore-qtransform.xml">Qt3DCore::QTransform</db:link> component</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.MaterialComponent <db:link xlink:href="qt3drender-qmaterial.xml">Qt3DRender::QMaterial</db:link> component</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.LightComponent <db:link xlink:href="qt3drender-qabstractlight.xml">Qt3DRender::QAbstractLight</db:link> component</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qml-qt3d-render-sceneloader.xml">SceneLoader</db:link>.CameraLensComponent <db:link xlink:href="qt3drender-qcameralens.xml">Qt3DRender::QCameraLens</db:link> component</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qsceneloader.xml#ComponentType-enum">Qt3DRender::QSceneLoader::ComponentType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="entity-method">
<db:title>Entity entity(string <db:emphasis>entityName</db:emphasis>)</db:title>
<db:para>Returns a loaded entity with the <db:code>objectName</db:code> matching the <db:code role="parameter">entityName</db:code> parameter. If multiple entities have the same name, it is undefined which one of them is returned, but it will always be the same one.</db:para>
</db:section>
<db:section xml:id="entityNames-method">
<db:title>list entityNames()</db:title>
<db:para>Returns a list of the <db:code>objectNames</db:code> of the loaded entities.</db:para>
</db:section>
</db:section>
</db:article>
