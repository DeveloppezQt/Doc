<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QRayCasterHit Class</db:title>
<db:subtitle>Qt3DRender::QRayCasterHit</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Details of a hit when casting a ray through a model.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QRayCasterHit</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Status</db:term>
<db:listitem>
<db:para>Deprecated</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qt3drender-qraycasterhit.xml">Qt3DRender::QRayCasterHit</db:link> contains the details of a successful hit when casting a ray through a model using a <db:link xlink:href="qt3drender-qraycaster.xml">Qt3DRender::QRayCaster</db:link> or <db:link xlink:href="qt3drender-qscreenraycaster.xml">Qt3DRender::QScreenRayCaster</db:link> component.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qraycaster.xml">Qt3DRender::QRayCaster</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qscreenraycaster.xml">Qt3DRender::QScreenRayCaster</db:link></db:member>
<db:member><db:link xlink:href="qt3drender-qpickingsettings.xml">Qt3DRender::QPickingSettings</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="HitType-enum">
<db:title>enum QRayCasterHit::HitType</db:title>
<db:para>Specifies type of hit that was returned. This is controlled using <db:link xlink:href="qt3drender-qpickingsettings.xml">QPickingSettings</db:link>.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qraycasterhit.xml">QRayCasterHit</db:link></db:emphasis>::TriangleHit</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The picked primitive was a triangle and the vertex indices refer to the three points making up the triangle</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qraycasterhit.xml">QRayCasterHit</db:link></db:emphasis>::LineHit</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The picked primitive was a line segment, and the first two vertices refer to the two points making up the line</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qraycasterhit.xml">QRayCasterHit</db:link></db:emphasis>::PointHit</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The picked primitive was a single point; all 3 vertex indices will be undefined</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qt3drender.xml">Qt3DRender</db:link></db:emphasis>::<db:emphasis role="bold"><db:link xlink:href="qt3drender-qraycasterhit.xml">QRayCasterHit</db:link></db:emphasis>::EntityHit</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Only the bounding volume was considered; the primitive and vertex indices will be undefined</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="distance">
<db:title>float QRayCasterHit::distance() const</db:title>
<db:para>Returns the distance between the origin of the ray and the intersection point</db:para>
<db:note>
<db:para>Getter function for property distance. </db:para>
</db:note>
</db:section>
<db:section xml:id="entity">
<db:title>Qt3DCore::QEntity *QRayCasterHit::entity() const</db:title>
<db:para>Returns a pointer to the entity that was hit</db:para>
<db:note>
<db:para>Getter function for property entity. </db:para>
</db:note>
</db:section>
<db:section xml:id="entityId">
<db:title>Qt3DCore::QNodeId QRayCasterHit::entityId() const</db:title>
<db:para>Returns the id of the entity that was hit</db:para>
<db:note>
<db:para>Getter function for property entityId. </db:para>
</db:note>
</db:section>
<db:section xml:id="localIntersection">
<db:title>QVector3D QRayCasterHit::localIntersection() const</db:title>
<db:para>Returns the coordinates of the intersection point in the entity's coordinate system</db:para>
<db:note>
<db:para>Getter function for property localIntersection. </db:para>
</db:note>
</db:section>
<db:section xml:id="primitiveIndex">
<db:title>uint QRayCasterHit::primitiveIndex() const</db:title>
<db:para>Returns the index of the picked primitive</db:para>
<db:note>
<db:para>Getter function for property primitiveIndex. </db:para>
</db:note>
</db:section>
<db:section xml:id="type">
<db:title>Qt3DRender::QRayCasterHit::HitType QRayCasterHit::type() const</db:title>
<db:para>Returns the type of the hit</db:para>
<db:note>
<db:para>Getter function for property type. </db:para>
</db:note>
</db:section>
<db:section xml:id="vertex1Index">
<db:title>uint QRayCasterHit::vertex1Index() const</db:title>
<db:para>Returns the index of the first vertex of the picked primitive</db:para>
<db:note>
<db:para>Getter function for property vertex1Index. </db:para>
</db:note>
</db:section>
<db:section xml:id="vertex2Index">
<db:title>uint QRayCasterHit::vertex2Index() const</db:title>
<db:para>Returns the index of the second vertex of the picked primitive</db:para>
<db:note>
<db:para>Getter function for property vertex2Index. </db:para>
</db:note>
</db:section>
<db:section xml:id="vertex3Index">
<db:title>uint QRayCasterHit::vertex3Index() const</db:title>
<db:para>Returns the index of the third vertex of the picked primitive</db:para>
<db:note>
<db:para>Getter function for property vertex3Index. </db:para>
</db:note>
</db:section>
<db:section xml:id="worldIntersection">
<db:title>QVector3D QRayCasterHit::worldIntersection() const</db:title>
<db:para>Returns the coordinates of the intersection point in the model's coordinate system</db:para>
<db:note>
<db:para>Getter function for property worldIntersection. </db:para>
</db:note>
</db:section>
</db:section>
</db:article>
