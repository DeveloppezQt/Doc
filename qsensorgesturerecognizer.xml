<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QSensorGestureRecognizer Class</db:title>
<db:productname>QtSensors</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Sensors Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qsensorgesturerecognizer.xml">QSensorGestureRecognizer</db:link> class is the base class for a sensor gesture recognizer.</db:para>
<db:para>This class was introduced in Qt 5.1.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QSensorGestureRecognizer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += sensors</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QSensorGestureRecognizer is part of <db:simplelist><db:member>sensorgestures_recognizer</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qsensorgesture.xml">QSensorGesture</db:link> recognizer developers should sub-class this to implement their own recognizer.</db:para>
<db:para>All sensor gesture recognizers have a detected(<db:link xlink:href="qstring.xml">QString</db:link>) signal. Implementors can use this and send recognizer specific gestures, such as detected(&quot;shake_left&quot;) or implement custom signals such as shakeLeft().</db:para>
<db:para>These custom signals will be available in the <db:link xlink:href="qsensorgesture.xml">QSensorGesture</db:link> object at runtime.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsensorgesturerecognizer.xml#gestureSignals">QSensorGestureRecognizer::gestureSignals</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QSensorGestureRecognizer">
<db:title>[explicit] QSensorGestureRecognizer::QSensorGestureRecognizer(QObject *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Constructs the <db:link xlink:href="qsensorgesturerecognizer.xml">QSensorGestureRecognizer</db:link> with <db:code role="parameter">parent</db:code> as parent.</db:para>
</db:section>
<db:section xml:id="dtor.QSensorGestureRecognizer">
<db:title>[virtual noexcept] QSensorGestureRecognizer::~QSensorGestureRecognizer()</db:title>
<db:para>Destroy the <db:link xlink:href="qsensorgesturerecognizer.xml">QSensorGestureRecognizer</db:link></db:para>
</db:section>
<db:section xml:id="create">
<db:title>[pure virtual protected] void QSensorGestureRecognizer::create()</db:title>
<db:para>Called by <db:link xlink:href="qsensorgesture.xml">QSensorGesture</db:link> object constructor to create the recognizers backend.</db:para>
<db:para>Implementors would use this to instantiate QSensors and connect signals.</db:para>
</db:section>
<db:section xml:id="createBackend">
<db:title>void QSensorGestureRecognizer::createBackend()</db:title>
<db:para>Calls <db:link xlink:href="qsensorgesturerecognizer.xml#create">QSensorGestureRecognizer::create</db:link>() if the recognizer is valid.</db:para>
</db:section>
<db:section xml:id="detected">
<db:title>void QSensorGestureRecognizer::detected(const QString &amp;<db:emphasis>gestureId</db:emphasis>)</db:title>
<db:para>Signals when the <db:code role="parameter">gestureId</db:code> gesture has been recognized.</db:para>
</db:section>
<db:section xml:id="gestureSignals">
<db:title>QStringList QSensorGestureRecognizer::gestureSignals() const</db:title>
<db:para>Returns a list of signals that this recognizer supports.</db:para>
<db:para>Note that all signals declared will be exported to the <db:link xlink:href="qsensorgesture.xml">QSensorGesture</db:link> object. If you need to use signals that are not exported, you should use a private class to do so.</db:para>
</db:section>
<db:section xml:id="id">
<db:title>[pure virtual] QString QSensorGestureRecognizer::id() const</db:title>
<db:para>Returns the identifier for this recognizer.</db:para>
</db:section>
<db:section xml:id="isActive">
<db:title>[pure virtual] bool QSensorGestureRecognizer::isActive()</db:title>
<db:para>Returns true if this recognizer is active, otherwise false.</db:para>
</db:section>
<db:section xml:id="start">
<db:title>[pure virtual protected] bool QSensorGestureRecognizer::start()</db:title>
<db:para>Called by <db:link xlink:href="qsensorgesture.xml#startDetection">QSensorGesture::startDetection</db:link>() to start this recognizer. Implementors should start the sensors. Returns true if the operation is successful.</db:para>
</db:section>
<db:section xml:id="startBackend">
<db:title>void QSensorGestureRecognizer::startBackend()</db:title>
<db:para>Calls <db:link xlink:href="qsensorgesturerecognizer.xml#start">QSensorGestureRecognizer::start</db:link>() if the recognizer isn't already initialized. This is called by the <db:link xlink:href="qsensorgesture.xml">QSensorGesture</db:link> object, so please use that instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsensorgesture.xml#startDetection">QSensorGesture::startDetection</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="stop">
<db:title>[pure virtual protected] bool QSensorGestureRecognizer::stop()</db:title>
<db:para>Called by <db:link xlink:href="qsensorgesture.xml#stopDetection">QSensorGesture::stopDetection</db:link>() to stop this recognizer. Returns true if the call succeeds, otherwise false.</db:para>
<db:para>Implementors should stop the sensors.</db:para>
</db:section>
<db:section xml:id="stopBackend">
<db:title>void QSensorGestureRecognizer::stopBackend()</db:title>
<db:para>Calls <db:link xlink:href="qsensorgesturerecognizer.xml#stop">QSensorGestureRecognizer::stop</db:link>() if no other clients are using it. This is called by the <db:link xlink:href="qsensorgesture.xml">QSensorGesture</db:link> object, so please use that instead.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qsensorgesture.xml#stopDetection">QSensorGesture::stopDetection</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
