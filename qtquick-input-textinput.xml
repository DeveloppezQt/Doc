<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Text Input Handling and Validators</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.15.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Text input and validation.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:section xml:id="text-visual-types">
<db:title>Text Visual Types</db:title>
<db:para>Qt Quick provides several types to display text onto the screen. The <db:link xlink:href="qml-qtquick-text.xml">Text</db:link> type will display formatted text onto the screen, the <db:link xlink:href="qml-qtquick-textedit.xml">TextEdit</db:link> type will place a multiline line edit onto the screen, and the <db:link xlink:href="qml-qtquick-textinput.xml">TextInput</db:link> will place a single editable line field onto the screen.</db:para>
<db:para>To learn more about their specific features and properties, visit their respective documentation.</db:para>
</db:section>
<db:section xml:id="validating-input-text">
<db:title>Validating Input Text</db:title>
<db:para>The <db:emphasis>validator</db:emphasis> types enforce the type and format of <db:link xlink:href="qml-qtquick-textinput.xml">TextInput</db:link> objects.</db:para>
<db:variablelist role="qtquick-text-validator">
<db:varlistentry>
<db:term><db:link xlink:href="qtquick-text-validator.xml" xlink:role="page">Qt Quick Text Validators</db:link></db:term>
<db:listitem>
<db:para>Types that validate text input</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:programlisting language="qml">Column {
    spacing: 10

    Text {
        text: &quot;Enter a value from 0 to 2000&quot;
    }
    TextInput {
        focus: true
        validator: IntValidator { bottom:0; top: 2000}
    }
}
</db:programlisting>
<db:para>The validator types bind to <db:code>TextInput</db:code>'s <db:code>validator</db:code> property.</db:para>
<db:programlisting language="qml">Column {
    spacing: 10

    Text {
        text: &quot;Which basket?&quot;
    }
    TextInput {
        focus: true
        validator: RegularExpressionValidator { regularExpression: /fruit basket/ }
    }
}
</db:programlisting>
<db:para>The regular expression in the snippet will only allow the inputted text to be <db:code>fruit basket</db:code>.</db:para>
<db:para>Note that QML parses JavaScript regular expressions, while Qt's <db:link xlink:href="qregexp.xml">QRegExp</db:link> class' regular expressions are based on Perl regular expressions.</db:para>
</db:section>
</db:article>
