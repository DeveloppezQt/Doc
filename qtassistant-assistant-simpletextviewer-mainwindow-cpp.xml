<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Simple Text Viewer Example</db:title>
<db:productname>QtAssistant</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Assistant Manual</db:titleabbrev>
<db:abstract>
<db:para>Using <db:emphasis>Qt Assistant</db:emphasis> as a customized help viewer for your application.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="cpp">/****************************************************************************
**
** Copyright (C) 2017 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** BSD License Usage
** Alternatively, you may use this file under the terms of the BSD license
** as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &quot;assistant.h&quot;
#include &quot;findfiledialog.h&quot;
#include &quot;mainwindow.h&quot;
#include &quot;textedit.h&quot;

#include &amp;lt;QAction&amp;gt;
#include &amp;lt;QApplication&amp;gt;
#include &amp;lt;QLibraryInfo&amp;gt;
#include &amp;lt;QMenu&amp;gt;
#include &amp;lt;QMenuBar&amp;gt;
#include &amp;lt;QMessageBox&amp;gt;

// ![0]
MainWindow::MainWindow()
{
    assistant = new Assistant;
// ![0]
    textViewer = new TextEdit;
    textViewer-&amp;gt;setContents(QLibraryInfo::location(QLibraryInfo::ExamplesPath)
            + QLatin1String(&quot;/assistant/simpletextviewer/documentation/intro.html&quot;));
    setCentralWidget(textViewer);

    createActions();
    createMenus();

    setWindowTitle(tr(&quot;Simple Text Viewer&quot;));
    resize(750, 400);
// ![1]
}

void MainWindow::closeEvent(QCloseEvent *)
{
    delete assistant;
}

void MainWindow::about()
{
    QMessageBox::about(this, tr(&quot;About Simple Text Viewer&quot;),
                       tr(&quot;This example demonstrates how to use\n&quot;
                          &quot;Qt Assistant as help system for your\n&quot;
                          &quot;own application.&quot;));
}

void MainWindow::showDocumentation()
{
    assistant-&amp;gt;showDocumentation(&quot;index.html&quot;);
}

void MainWindow::open()
{
    FindFileDialog dialog(textViewer, assistant);
    dialog.exec();
}

void MainWindow::createActions()
{
    assistantAct = new QAction(tr(&quot;Help Contents&quot;), this);
    assistantAct-&amp;gt;setShortcut(QKeySequence::HelpContents);
    connect(assistantAct, SIGNAL(triggered()), this, SLOT(showDocumentation()));

    openAct = new QAction(tr(&quot;&amp;amp;Open...&quot;), this);
    openAct-&amp;gt;setShortcut(QKeySequence::Open);
    connect(openAct, SIGNAL(triggered()), this, SLOT(open()));

    clearAct = new QAction(tr(&quot;&amp;amp;Clear&quot;), this);
    clearAct-&amp;gt;setShortcut(tr(&quot;Ctrl+C&quot;));
    connect(clearAct, SIGNAL(triggered()), textViewer, SLOT(clear()));

    exitAct = new QAction(tr(&quot;E&amp;amp;xit&quot;), this);
    exitAct-&amp;gt;setShortcuts(QKeySequence::Quit);
    connect(exitAct, SIGNAL(triggered()), this, SLOT(close()));

    aboutAct = new QAction(tr(&quot;&amp;amp;About&quot;), this);
    connect(aboutAct, SIGNAL(triggered()), this, SLOT(about()));

    aboutQtAct = new QAction(tr(&quot;About &amp;amp;Qt&quot;), this);
    connect(aboutQtAct, SIGNAL(triggered()), qApp, SLOT(aboutQt()));
}

void MainWindow::createMenus()
{
    fileMenu = new QMenu(tr(&quot;&amp;amp;File&quot;), this);
    fileMenu-&amp;gt;addAction(openAct);
    fileMenu-&amp;gt;addAction(clearAct);
    fileMenu-&amp;gt;addSeparator();
    fileMenu-&amp;gt;addAction(exitAct);

    helpMenu = new QMenu(tr(&quot;&amp;amp;Help&quot;), this);
    helpMenu-&amp;gt;addAction(assistantAct);
    helpMenu-&amp;gt;addSeparator();
    helpMenu-&amp;gt;addAction(aboutAct);
    helpMenu-&amp;gt;addAction(aboutQtAct);

    menuBar()-&amp;gt;addMenu(fileMenu);
    menuBar()-&amp;gt;addMenu(helpMenu);
}

</db:programlisting>
</db:article>
