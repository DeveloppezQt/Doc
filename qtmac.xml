<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QtMac Namespace</db:title>
<db:productname>QtMacExtras</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Mac Extras Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qtmac.xml">QtMac</db:link> namespace contains miscellaneous functionality specific to the macOS and iOS operating systems.</db:para>
<db:para>This namespace was introduced in Qt 5.2.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QtMac</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += macextras</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
</db:section>
<db:section xml:id="function-documentation">
<db:title>Function Documentation</db:title>
<db:section xml:id="applicationIconBadgeNumber">
<db:title>int QtMac::applicationIconBadgeNumber()</db:title>
<db:methodsynopsis>
<db:type>int</db:type>
<db:methodname>applicationIconBadgeNumber</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">int applicationIconBadgeNumber()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the value of the application icon a.k.a badge.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmac.xml#setApplicationIconBadgeNumber">setApplicationIconBadgeNumber</db:link>()</db:member>
<db:member><db:link xlink:href="qtmac.xml#badgeLabelText">badgeLabelText</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="badgeLabelText">
<db:title>QString QtMac::badgeLabelText()</db:title>
<db:methodsynopsis>
<db:type>QString</db:type>
<db:methodname>badgeLabelText</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString badgeLabelText()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the text of the application icon a.k.a badge.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmac.xml#setBadgeLabelText">setBadgeLabelText</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="currentCGContext">
<db:title>CGContextRef QtMac::currentCGContext()</db:title>
<db:methodsynopsis>
<db:type>CGContextRef</db:type>
<db:methodname>currentCGContext</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">CGContextRef currentCGContext()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the current CoreGraphics context.</db:para>
</db:section>
<db:section xml:id="fromCGImageRef">
<db:title>QPixmap QtMac::fromCGImageRef(CGImageRef <db:emphasis>image</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QPixmap</db:type>
<db:methodname>fromCGImageRef</db:methodname>
<db:methodparam>
<db:type>CGImageRef</db:type>
<db:parameter>image</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QPixmap fromCGImageRef(CGImageRef image)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a <db:link xlink:href="qpixmap.xml">QPixmap</db:link> that is equivalent to the given <db:code role="parameter">image</db:code>.</db:para>
<db:para>This function is not available in Qt 5.x until 5.0.2 and will return a null pixmap in earlier versions.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmac.xml#toCGImageRef">toCGImageRef</db:link>()</db:member>
<db:member><db:link xlink:href="qpixmap.xml#pixmap-conversion">Pixmap Conversion</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isMainWindow">
<db:title>bool QtMac::isMainWindow(QWindow *<db:emphasis>window</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>bool</db:type>
<db:methodname>isMainWindow</db:methodname>
<db:methodparam>
<db:type>QWindow *</db:type>
<db:parameter>window</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isMainWindow(QWindow *window)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns whether the given <db:link xlink:href="qwindow.xml">QWindow</db:link> <db:code role="parameter">window</db:code> is the application's main window</db:para>
</db:section>
<db:section xml:id="setApplicationIconBadgeNumber">
<db:title>void QtMac::setApplicationIconBadgeNumber(int <db:emphasis>number</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setApplicationIconBadgeNumber</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>number</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setApplicationIconBadgeNumber(int number)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the value shown on the application icon a.k.a badge to <db:code role="parameter">number</db:code>.</db:para>
<db:para>Unlike its macOS counterpart, only numbers can be used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmac.xml#applicationIconBadgeNumber">applicationIconBadgeNumber</db:link>()</db:member>
<db:member><db:link xlink:href="qtmac.xml#setBadgeLabelText">setBadgeLabelText</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBadgeLabelText">
<db:title>void QtMac::setBadgeLabelText(const QString &amp;<db:emphasis>text</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setBadgeLabelText</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>text</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setBadgeLabelText(const QString &amp;text)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the <db:code role="parameter">text</db:code> shown on the application icon a.k.a badge.</db:para>
<db:para>This is generally used with numbers (e.g. number of unread emails); it can also show a string.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmac.xml#badgeLabelText">badgeLabelText</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="toCGImageRef">
<db:title>CGImageRef QtMac::toCGImageRef(const QPixmap &amp;<db:emphasis>pixmap</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>CGImageRef</db:type>
<db:methodname>toCGImageRef</db:methodname>
<db:methodparam>
<db:type>const QPixmap &amp;</db:type>
<db:parameter>pixmap</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">CGImageRef toCGImageRef(const QPixmap &amp;pixmap)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Creates a <db:code>CGImageRef</db:code> equivalent to the <db:link xlink:href="qpixmap.xml">QPixmap</db:link> <db:code role="parameter">pixmap</db:code>. Returns the <db:code>CGImageRef</db:code> handle.</db:para>
<db:para>It is the caller's responsibility to release the <db:code>CGImageRef</db:code> data after use.</db:para>
<db:para>This function is not available in Qt 5.x until 5.0.2 and will return NULL in earlier versions.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtmac.xml#fromCGImageRef">fromCGImageRef</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="toNSImage">
<db:title>NSImage *QtMac::toNSImage(const QPixmap &amp;<db:emphasis>pixmap</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>NSImage *</db:type>
<db:methodname>toNSImage</db:methodname>
<db:methodparam>
<db:type>const QPixmap &amp;</db:type>
<db:parameter>pixmap</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">NSImage * toNSImage(const QPixmap &amp;pixmap)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Creates an <db:code>NSImage</db:code> equivalent to the <db:link xlink:href="qpixmap.xml">QPixmap</db:link> <db:code role="parameter">pixmap</db:code>. Returns the <db:code>NSImage</db:code> handle.</db:para>
<db:para>It is the caller's responsibility to release the <db:code>NSImage</db:code> data after use.</db:para>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for QtMac</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qtmac.xml">QtMac</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-function-documentation">
<db:title>Obsolete Function Documentation</db:title>
<db:section xml:id="fromNSData">
<db:title>QByteArray QtMac::fromNSData(const NSData *<db:emphasis>data</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QByteArray</db:type>
<db:methodname>fromNSData</db:methodname>
<db:methodparam>
<db:type>const NSData *</db:type>
<db:parameter>data</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QByteArray fromNSData(const NSData *data)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qbytearray.xml#fromNSData">QByteArray::fromNSData</db:link>() instead.</db:para>
</db:section>
<db:section xml:id="toNSData">
<db:title>NSData *QtMac::toNSData(const QByteArray &amp;<db:emphasis>data</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>NSData *</db:type>
<db:methodname>toNSData</db:methodname>
<db:methodparam>
<db:type>const QByteArray &amp;</db:type>
<db:parameter>data</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">NSData * toNSData(const QByteArray &amp;data)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Use <db:link xlink:href="qbytearray.xml#toNSData">QByteArray::toNSData</db:link>() instead.</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
