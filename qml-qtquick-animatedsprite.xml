<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>AnimatedSprite QML Type</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 6.8.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Draws a sprite animation.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick-item.xml">Item</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>AnimatedSprite is part of <db:simplelist><db:member>qtquick-visual</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-animatedsprite.xml">AnimatedSprite</db:link> provides rendering and control over animations which are provided as multiple frames in the same image file. You can play it at a fixed speed, at the frame rate of your display, or manually advance and control the progress.</db:para>
<db:para>Consider the following sprite sheet:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/animatedsprite-loading.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>It can be divided up into four frames:</db:para>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/animatedsprite-loading-frames.png"/>
</db:imageobject>
</db:mediaobject>
<db:para>To play each of these frames at a speed of 500 milliseconds per frame, the following code can be used:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Code</db:para>
</db:th>
<db:th>
<db:para>Result</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:programlisting language="cpp">AnimatedSprite {
    source: &quot;loading.png&quot;
    frameWidth: 64
    frameHeight: 64
    frameCount: 4
    frameDuration: 500
}
</db:programlisting>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/animatedsprite-loading-interpolated.gif"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
<db:para>By default, the frames are interpolated (blended together) to make the animation appear smoother. To disable this, set <db:link xlink:href="qml-qtquick-animatedsprite.xml#interpolate-prop">interpolate</db:link> to <db:code>false</db:code>:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Code</db:para>
</db:th>
<db:th>
<db:para>Result</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:programlisting language="cpp">AnimatedSprite {
    source: &quot;loading.png&quot;
    frameWidth: 64
    frameHeight: 64
    frameCount: 4
    frameDuration: 500
    interpolate: false
}
</db:programlisting>
</db:td>
<db:td>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/animatedsprite-loading.gif"/>
</db:imageobject>
</db:mediaobject>
</db:td>
</db:tr>
</db:informaltable>
<db:para>To control how <db:link xlink:href="qml-qtquick-animatedsprite.xml">AnimatedSprite</db:link> responds to being scaled, use the <db:link xlink:href="qml-qtquick-item.xml#smooth-prop">smooth</db:link> property.</db:para>
<db:para>Note that unlike <db:link xlink:href="qml-qtquick-spritesequence.xml">SpriteSequence</db:link>, the <db:link xlink:href="qml-qtquick-animatedsprite.xml">AnimatedSprite</db:link> type does not use <db:link xlink:href="qml-qtquick-sprite.xml">Sprite</db:link> to define multiple animations, but instead encapsulates a single animation itself.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-effects-sprites.xml">Sprite Animations</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="currentFrame-prop">
<db:title>currentFrame : int</db:title>
<db:para>When paused, the current frame can be advanced manually by setting this property or calling <db:link xlink:href="qml-qtquick-animatedsprite.xml#advance-method">advance</db:link>().</db:para>
</db:section>
<db:section xml:id="finishBehavior-prop">
<db:title>finishBehavior : enumeration</db:title>
<db:para>The behavior when the animation finishes on its own.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>FinishAtInitialFrame</db:para>
</db:td>
<db:td>
<db:para>When the animation finishes it returns to the initial frame. This is the default behavior.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>FinishAtFinalFrame</db:para>
</db:td>
<db:td>
<db:para>When the animation finishes it stays on the final frame.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="frameCount-prop">
<db:title>frameCount : int</db:title>
<db:para>Number of frames in this <db:link xlink:href="qml-qtquick-animatedsprite.xml">AnimatedSprite</db:link>.</db:para>
</db:section>
<db:section xml:id="frameDuration-prop">
<db:title>frameDuration : int</db:title>
<db:para>Duration of each frame of the animation in milliseconds. Values less than or equal to <db:code>0</db:code> are invalid.</db:para>
<db:para>If <db:link xlink:href="qml-qtquick-animatedsprite.xml#frameRate-prop">frameRate</db:link> is valid, it will be used to calculate the duration of the frames. If not, and frameDuration is valid, <db:code>frameDuration</db:code> will be used.</db:para>
<db:para>Changing this parameter will restart the animation.</db:para>
</db:section>
<db:section xml:id="frameHeight-prop">
<db:title>frameHeight : int</db:title>
<db:para>Height of a single frame in this <db:link xlink:href="qml-qtquick-animatedsprite.xml">AnimatedSprite</db:link>.</db:para>
<db:para>May be omitted if it is the only sprite in the file.</db:para>
</db:section>
<db:section xml:id="frameRate-prop">
<db:title>frameRate : real</db:title>
<db:para>Frames per second to show in the animation. Values less than or equal to <db:code>0</db:code> are invalid.</db:para>
<db:para>If <db:code>frameRate</db:code> is valid, it will be used to calculate the duration of the frames. If not, and <db:link xlink:href="qml-qtquick-animatedsprite.xml#frameDuration-prop">frameDuration</db:link> is valid, <db:code>frameDuration</db:code> will be used.</db:para>
<db:para>Changing this parameter will restart the animation.</db:para>
</db:section>
<db:section xml:id="frameSync-prop">
<db:title>frameSync : bool</db:title>
<db:para>If <db:code>true</db:code>, the animation will have no duration. Instead, the animation will advance one frame each time a frame is rendered to the screen. This synchronizes it with the painting rate as opposed to elapsed time.</db:para>
<db:para>If frameSync is set to true, it overrides both <db:link xlink:href="qml-qtquick-animatedsprite.xml#frameRate-prop">frameRate</db:link> and <db:link xlink:href="qml-qtquick-animatedsprite.xml#frameDuration-prop">frameDuration</db:link>.</db:para>
<db:para>Default is <db:code>false</db:code>.</db:para>
<db:para>Changing this parameter will restart the animation.</db:para>
</db:section>
<db:section xml:id="frameWidth-prop">
<db:title>frameWidth : int</db:title>
<db:para>Width of a single frame in this <db:link xlink:href="qml-qtquick-animatedsprite.xml">AnimatedSprite</db:link>.</db:para>
<db:para>May be omitted if it is the only sprite in the file.</db:para>
</db:section>
<db:section xml:id="frameX-prop">
<db:title>frameX : int</db:title>
<db:para>The X coordinate in the image file of the first frame of the <db:link xlink:href="qml-qtquick-animatedsprite.xml">AnimatedSprite</db:link>.</db:para>
<db:para>May be omitted if the first frame starts in the upper left corner of the file.</db:para>
</db:section>
<db:section xml:id="frameY-prop">
<db:title>frameY : int</db:title>
<db:para>The Y coordinate in the image file of the first frame of the <db:link xlink:href="qml-qtquick-animatedsprite.xml">AnimatedSprite</db:link>.</db:para>
<db:para>May be omitted if the first frame starts in the upper left corner of the file.</db:para>
</db:section>
<db:section xml:id="interpolate-prop">
<db:title>interpolate : bool</db:title>
<db:para>If true, interpolation will occur between sprite frames to make the animation appear smoother.</db:para>
<db:para>Default is true.</db:para>
</db:section>
<db:section xml:id="loops-prop">
<db:title>loops : int</db:title>
<db:para>After playing the animation this many times, the animation will automatically stop. Negative values are invalid.</db:para>
<db:para>If this is set to <db:code>AnimatedSprite.Infinite</db:code> the animation will not stop playing on its own.</db:para>
<db:para>Default is <db:code>AnimatedSprite.Infinite</db:code></db:para>
</db:section>
<db:section xml:id="paused-prop">
<db:title>paused : bool</db:title>
<db:para>When paused, the current frame can be advanced manually.</db:para>
<db:para>Default is <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="reverse-prop">
<db:title>reverse : bool</db:title>
<db:para>If <db:code>true</db:code>, the animation will be played in reverse.</db:para>
<db:para>Default is <db:code>false</db:code>.</db:para>
</db:section>
<db:section xml:id="running-prop">
<db:title>running : bool</db:title>
<db:para>Whether the sprite is animating or not.</db:para>
<db:para>Default is true</db:para>
</db:section>
<db:section xml:id="source-prop">
<db:title>source : url</db:title>
<db:para>The image source for the animation.</db:para>
<db:para>If <db:link xlink:href="qml-qtquick-animatedsprite.xml#frameHeight-prop">frameHeight</db:link> and <db:link xlink:href="qml-qtquick-animatedsprite.xml#frameWidth-prop">frameWidth</db:link> are not specified, it is assumed to be a single long row of square frames. Otherwise, it can be multiple contiguous rows or rectangluar frames, when one row runs out the next will be used.</db:para>
<db:para>If <db:link xlink:href="qml-qtquick-animatedsprite.xml#frameX-prop">frameX</db:link> and <db:link xlink:href="qml-qtquick-animatedsprite.xml#frameY-prop">frameY</db:link> are specified, the row of frames will be taken with that x/y coordinate as the upper left corner.</db:para>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="finished-signal">
<db:title>finished()</db:title>
<db:para>This signal is emitted when the sprite has finished animating.</db:para>
<db:para>It is not emitted when running is set to <db:code>false</db:code>, nor for sprites whose <db:link xlink:href="qml-qtquick-animatedsprite.xml#loops-prop">loops</db:link> property is set to <db:code>AnimatedSprite.Infinite</db:code>.</db:para>
<db:note>
<db:para>The corresponding handler is <db:code>onFinished</db:code>.</db:para>
</db:note>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="advance-method">
<db:title>int advance()</db:title>
<db:para>Advances the sprite animation by one frame.</db:para>
</db:section>
<db:section xml:id="pause-method">
<db:title>int pause()</db:title>
<db:para>Pauses the sprite animation. This does nothing if <db:link xlink:href="qml-qtquick-animatedsprite.xml#paused-prop">paused</db:link> is <db:code>true</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-animatedsprite.xml#resume-method">resume</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="restart-method">
<db:title>int restart()</db:title>
<db:para>Stops, then starts the sprite animation.</db:para>
</db:section>
<db:section xml:id="resume-method">
<db:title>int resume()</db:title>
<db:para>Resumes the sprite animation if <db:link xlink:href="qml-qtquick-animatedsprite.xml#paused-prop">paused</db:link> is <db:code>true</db:code>; otherwise, this does nothing.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-animatedsprite.xml#pause-method">pause</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="start-method">
<db:title>start()</db:title>
<db:para>Starts the sprite animation. If the animation is already running, calling this method has no effect.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-animatedsprite.xml#stop-method">stop</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="stop-method">
<db:title>stop()</db:title>
<db:para>Stops the sprite animation. If the animation is not running, calling this method has no effect.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-animatedsprite.xml#start-method">start</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
