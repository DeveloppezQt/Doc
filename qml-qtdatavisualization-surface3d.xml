<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Surface3D QML Type</db:title>
<db:productname>QtDataVis3D</db:productname>
<db:edition>Qt Data Visualization | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Data Visualization Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Describes the usage of the 3D surface graph.</db:para>
<db:para>This type was introduced in QtDataVisualization 1.0.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtDataVisualization 1.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>QtDataVisualization 1.0</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>AbstractGraph3D</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>Surface3D is part of <db:simplelist><db:member>datavisualization_qml</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This type enables developers to render surface plots in 3D with Qt Quick.</db:para>
<db:para>You will need to import the data visualization module to use this type:</db:para>
<db:programlisting language="cpp">import QtDataVisualization 1.2
</db:programlisting>
<db:para>After that you can use <db:link xlink:href="qml-qtdatavisualization-surface3d.xml">Surface3D</db:link> in your qml files:</db:para>
<db:programlisting language="cpp">import QtQuick 2.0
import QtDataVisualization 1.2

Item {
    width: 640
    height: 480

    Surface3D {
        width: parent.width
        height: parent.height
        Surface3DSeries {
            itemLabelFormat: &quot;Pop density at (@xLabel N, @zLabel E): @yLabel&quot;
            ItemModelSurfaceDataProxy {
                itemModel: dataModel
                // Mapping model roles to surface series rows, columns, and values.
                rowRole: &quot;longitude&quot;
                columnRole: &quot;latitude&quot;
                yPosRole: &quot;pop_density&quot;
            }
        }
    }
    ListModel {
        id: dataModel
        ListElement{ longitude: &quot;20&quot;; latitude: &quot;10&quot;; pop_density: &quot;4.75&quot;; }
        ListElement{ longitude: &quot;21&quot;; latitude: &quot;10&quot;; pop_density: &quot;3.00&quot;; }
        ListElement{ longitude: &quot;22&quot;; latitude: &quot;10&quot;; pop_density: &quot;1.24&quot;; }
        ListElement{ longitude: &quot;23&quot;; latitude: &quot;10&quot;; pop_density: &quot;2.53&quot;; }
        ListElement{ longitude: &quot;20&quot;; latitude: &quot;11&quot;; pop_density: &quot;2.55&quot;; }
        ListElement{ longitude: &quot;21&quot;; latitude: &quot;11&quot;; pop_density: &quot;2.03&quot;; }
        ListElement{ longitude: &quot;22&quot;; latitude: &quot;11&quot;; pop_density: &quot;3.46&quot;; }
        ListElement{ longitude: &quot;23&quot;; latitude: &quot;11&quot;; pop_density: &quot;5.12&quot;; }
        ListElement{ longitude: &quot;20&quot;; latitude: &quot;12&quot;; pop_density: &quot;1.37&quot;; }
        ListElement{ longitude: &quot;21&quot;; latitude: &quot;12&quot;; pop_density: &quot;2.98&quot;; }
        ListElement{ longitude: &quot;22&quot;; latitude: &quot;12&quot;; pop_density: &quot;3.33&quot;; }
        ListElement{ longitude: &quot;23&quot;; latitude: &quot;12&quot;; pop_density: &quot;3.23&quot;; }
        ListElement{ longitude: &quot;20&quot;; latitude: &quot;13&quot;; pop_density: &quot;4.34&quot;; }
        ListElement{ longitude: &quot;21&quot;; latitude: &quot;13&quot;; pop_density: &quot;3.54&quot;; }
        ListElement{ longitude: &quot;22&quot;; latitude: &quot;13&quot;; pop_density: &quot;1.65&quot;; }
        ListElement{ longitude: &quot;23&quot;; latitude: &quot;13&quot;; pop_density: &quot;2.67&quot;; }
    }
}
</db:programlisting>
<db:para>See <db:link xlink:href="qtdatavis3d-qmlsurfacegallery-example.xml">Surface Graph Gallery</db:link> for more thorough usage example.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-surface3dseries.xml">Surface3DSeries</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-itemmodelsurfacedataproxy.xml">ItemModelSurfaceDataProxy</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-bars3d.xml">Bars3D</db:link></db:member>
<db:member><db:link xlink:href="qml-qtdatavisualization-scatter3d.xml">Scatter3D</db:link></db:member>
<db:member><db:link xlink:href="qtdatavisualization-module.xml">Qt Data Visualization C++ Classes</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="axisX-prop">
<db:title>axisX : ValueAxis3D</db:title>
<db:fieldsynopsis>
<db:type>ValueAxis3D</db:type>
<db:varname>axisX</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The active x-axis.</db:para>
<db:para>If an axis is not given, a temporary default axis with no labels and an automatically adjusting range is created. This temporary axis is destroyed if another axis is explicitly set to the same orientation.</db:para>
</db:section>
<db:section xml:id="axisY-prop">
<db:title>axisY : ValueAxis3D</db:title>
<db:fieldsynopsis>
<db:type>ValueAxis3D</db:type>
<db:varname>axisY</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The active y-axis.</db:para>
<db:para>If an axis is not given, a temporary default axis with no labels and an automatically adjusting range is created. This temporary axis is destroyed if another axis is explicitly set to the same orientation.</db:para>
</db:section>
<db:section xml:id="axisZ-prop">
<db:title>axisZ : ValueAxis3D</db:title>
<db:fieldsynopsis>
<db:type>ValueAxis3D</db:type>
<db:varname>axisZ</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The active z-axis.</db:para>
<db:para>If an axis is not given, a temporary default axis with no labels and an automatically adjusting range is created. This temporary axis is destroyed if another axis is explicitly set to the same orientation.</db:para>
</db:section>
<db:section xml:id="flipHorizontalGrid-prop">
<db:title>[since QtDataVisualization 1.2] flipHorizontalGrid : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>flipHorizontalGrid</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>In some use cases the horizontal axis grid is mostly covered by the surface, so it can be more useful to display the horizontal axis grid on top of the graph rather than on the bottom. A typical use case for this is showing 2D spectrograms using orthoGraphic projection with a top-down viewpoint.</db:para>
<db:para>If <db:code>false</db:code>, the horizontal axis grid and labels are drawn on the horizontal background of the graph. If <db:code>true</db:code>, the horizontal axis grid and labels are drawn on the opposite side of the graph from the horizontal background. Defaults to <db:code>false</db:code>.</db:para>
<db:para>This property was introduced in QtDataVisualization 1.2.</db:para>
</db:section>
<db:section xml:id="selectedSeries-prop">
<db:title>selectedSeries : Surface3DSeries</db:title>
<db:fieldsynopsis>
<db:type>Surface3DSeries</db:type>
<db:varname>selectedSeries</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The selected series or null. If <db:link xlink:href="qabstract3dgraph.xml#selectionMode-prop">selectionMode</db:link> has the <db:code>SelectionMultiSeries</db:code> flag set, this property holds the series which owns the selected point.</db:para>
</db:section>
<db:section xml:id="seriesList-prop">
<db:title>[default] seriesList : list&lt;Surface3DSeries&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;Surface3DSeries&gt;</db:type>
<db:varname>seriesList</db:varname>
<db:modifier>writable</db:modifier>
<db:modifier>[default]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the series of the graph. By default, this property contains an empty list. To set the series, either use the <db:link xlink:href="qml-qtdatavisualization-surface3d.xml#addSeries-method">addSeries</db:link>() function or define them as children of the graph.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="addSeries-method">
<db:title>void addSeries(Surface3DSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Adds the <db:code role="parameter">series</db:code> to the graph.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#hasSeries-method">AbstractGraph3D::hasSeries</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="removeSeries-method">
<db:title>void removeSeries(Surface3DSeries <db:emphasis>series</db:emphasis>)</db:title>
<db:para>Removes the <db:code role="parameter">series</db:code> from the graph.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtdatavisualization-abstractgraph3d.xml#hasSeries-method">AbstractGraph3D::hasSeries</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
