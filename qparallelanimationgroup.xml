<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QParallelAnimationGroup Class</db:title>
<db:productname>QtCore</db:productname>
<db:titleabbrev>Qt Core Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qparallelanimationgroup.xml">QParallelAnimationGroup</db:link> class provides a parallel group of animations.</db:para>
<db:para>This class was introduced in Qt 4.6.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QParallelAnimationGroup</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.6</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qanimationgroup.xml" xlink:role="class">QAnimationGroup</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QParallelAnimationGroup is part of <db:simplelist><db:member><db:link xlink:href="animation.xml">Animation Framework</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qparallelanimationgroup.xml">QParallelAnimationGroup</db:link>–a <db:link xlink:href="qanimationgroup.xml">container for animations</db:link>–starts all its animations when it is <db:link xlink:href="qabstractanimation.xml#start">started</db:link> itself, i.e., runs all animations in parallel. The animation group finishes when the longest lasting animation has finished.</db:para>
<db:para>You can treat QParallelAnimation as any other <db:link xlink:href="qabstractanimation.xml">QAbstractAnimation</db:link>, e.g., pause, resume, or add it to other animation groups.</db:para>
<db:programlisting language="cpp">QParallelAnimationGroup *group = new QParallelAnimationGroup;
group-&gt;addAnimation(anim1);
group-&gt;addAnimation(anim2);

group-&gt;start();
</db:programlisting>
<db:para>In this example, <db:code>anim1</db:code> and <db:code>anim2</db:code> are two <db:link xlink:href="qpropertyanimation.xml">QPropertyAnimation</db:link>s that have already been set up.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qanimationgroup.xml">QAnimationGroup</db:link></db:member>
<db:member><db:link xlink:href="qpropertyanimation.xml">QPropertyAnimation</db:link></db:member>
<db:member><db:link xlink:href="animation-overview.xml">The Animation Framework</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QParallelAnimationGroup">
<db:title>QParallelAnimationGroup::QParallelAnimationGroup(QObject *<db:emphasis>parent</db:emphasis> = 0)</db:title>
<db:para>Constructs a <db:link xlink:href="qparallelanimationgroup.xml">QParallelAnimationGroup</db:link>. <db:code role="parameter">parent</db:code> is passed to <db:link xlink:href="qobject.xml">QObject</db:link>'s constructor.</db:para>
</db:section>
<db:section xml:id="dtor.QParallelAnimationGroup">
<db:title>[virtual noexcept] QParallelAnimationGroup::~QParallelAnimationGroup()</db:title>
<db:para>Destroys the animation group. It will also destroy all its animations.</db:para>
</db:section>
<db:section xml:id="duration">
<db:title>[override virtual] int QParallelAnimationGroup::duration() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractanimation.xml#duration" role="function">QAbstractAnimation::duration() const</db:link>.</db:para>
</db:section>
<db:section xml:id="event">
<db:title>[override virtual protected] bool QParallelAnimationGroup::event(QEvent *<db:emphasis>event</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qanimationgroup.xml#event" role="function">QAnimationGroup::event(QEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="updateCurrentTime">
<db:title>[override virtual protected] void QParallelAnimationGroup::updateCurrentTime(int <db:emphasis>currentTime</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractanimation.xml#updateCurrentTime" role="function">QAbstractAnimation::updateCurrentTime(int currentTime)</db:link>.</db:para>
</db:section>
<db:section xml:id="updateDirection">
<db:title>[override virtual protected] void QParallelAnimationGroup::updateDirection(QAbstractAnimation::Direction <db:emphasis>direction</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractanimation.xml#updateDirection" role="function">QAbstractAnimation::updateDirection(QAbstractAnimation::Direction direction)</db:link>.</db:para>
</db:section>
<db:section xml:id="updateState">
<db:title>[override virtual protected] void QParallelAnimationGroup::updateState(QAbstractAnimation::State <db:emphasis>newState</db:emphasis>, QAbstractAnimation::State <db:emphasis>oldState</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qabstractanimation.xml#updateState" role="function">QAbstractAnimation::updateState(QAbstractAnimation::State newState, QAbstractAnimation::State oldState)</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
