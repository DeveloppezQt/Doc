<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>StatusBar QML Type</db:title>
<db:productname>QtQuickControls1</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls 1 Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Contains status information in your app.</db:para>
<db:para>This type was introduced in Qt 5.1.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 1.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>FocusScope</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>StatusBar is part of <db:simplelist><db:member><db:link xlink:href="applicationwindow.xml">Application Window</db:link></db:member><db:member><db:link xlink:href="controls.xml">Buttons and Controls</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The common way of using <db:link xlink:href="qml-qtquick-controls-statusbar.xml">StatusBar</db:link> is in relation to <db:link xlink:href="qml-qtquick-controls-applicationwindow.xml">ApplicationWindow</db:link>.</db:para>
<db:para>Note that the <db:link xlink:href="qml-qtquick-controls-statusbar.xml">StatusBar</db:link> does not provide a layout of its own, but requires you to position its contents, for instance by creating a <db:link xlink:href="qml-qtquick-layouts-rowlayout.xml">RowLayout</db:link>.</db:para>
<db:para>If only a single item is used within the <db:link xlink:href="qml-qtquick-controls-statusbar.xml">StatusBar</db:link>, it will resize to fit the implicitHeight of its contained item. This makes it particularly suitable for use together with layouts. Otherwise the height is platform dependent.</db:para>
<db:programlisting language="cpp">import QtQuick.Controls 1.2
import QtQuick.Layouts 1.0

ApplicationWindow {
    statusBar: StatusBar {
        RowLayout {
            anchors.fill: parent
            Label { text: &quot;Read Only&quot; }
        }
    }
}
</db:programlisting>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="contentItem-prop">
<db:title>[read-only] contentItem : Item</db:title>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>contentItem</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the content Item of the status bar.</db:para>
<db:para>Items declared as children of a <db:link xlink:href="qml-qtquick-controls-statusbar.xml">StatusBar</db:link> are automatically parented to the <db:link xlink:href="qml-qtquick-controls-statusbar.xml">StatusBar</db:link>'s contentItem. Items created dynamically need to be explicitly parented to the contentItem:</db:para>
<db:note>
<db:para>The implicit size of the <db:link xlink:href="qml-qtquick-controls-statusbar.xml">StatusBar</db:link> is calculated based on the size of its content. If you want to anchor items inside the status bar, you must specify an explicit width and height on the <db:link xlink:href="qml-qtquick-controls-statusbar.xml">StatusBar</db:link> itself.</db:para>
</db:note>
</db:section>
<db:section xml:id="style-prop">
<db:title>style : Component</db:title>
<db:fieldsynopsis>
<db:type>Component</db:type>
<db:varname>style</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>The style Component for this control.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls-styles-statusbarstyle.xml">StatusBarStyle</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
