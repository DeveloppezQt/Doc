<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en_US">
<db:info>
<db:title>QLabel Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 5.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qlabel.xml">QLabel</db:link> widget provides a text or image display.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QLabel</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qframe.xml" xlink:role="class">QFrame</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QLabel is part of <db:simplelist><db:member>basicwidgets</db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qlabel.xml">QLabel</db:link> is used for displaying text or an image. No user interaction functionality is provided. The visual appearance of the label can be configured in various ways, and it can be used for specifying a focus mnemonic key for another widget.</db:para>
<db:para>A <db:link xlink:href="qlabel.xml">QLabel</db:link> can contain any of the following content types:</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Content</db:para>
</db:th>
<db:th>
<db:para>Setting</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>Plain text</db:para>
</db:td>
<db:td>
<db:para>Pass a <db:link xlink:href="qstring.xml">QString</db:link> to setText().</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Rich text</db:para>
</db:td>
<db:td>
<db:para>Pass a <db:link xlink:href="qstring.xml">QString</db:link> that contains rich text to setText().</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>A pixmap</db:para>
</db:td>
<db:td>
<db:para>Pass a <db:link xlink:href="qpixmap.xml">QPixmap</db:link> to setPixmap().</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>A movie</db:para>
</db:td>
<db:td>
<db:para>Pass a <db:link xlink:href="qmovie.xml">QMovie</db:link> to <db:link xlink:href="qlabel.xml#setMovie">setMovie</db:link>().</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>A number</db:para>
</db:td>
<db:td>
<db:para>Pass an <db:emphasis>int</db:emphasis> or a <db:emphasis>double</db:emphasis> to <db:link xlink:href="qlabel.xml#setNum">setNum</db:link>(), which converts the number to plain text.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>Nothing</db:para>
</db:td>
<db:td>
<db:para>The same as an empty plain text. This is the default. Set by <db:link xlink:href="qlabel.xml#clear">clear</db:link>().</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:warning>
<db:para>When passing a <db:link xlink:href="qstring.xml">QString</db:link> to the constructor or calling setText(), make sure to sanitize your input, as <db:link xlink:href="qlabel.xml">QLabel</db:link> tries to guess whether it displays the text as plain text or as rich text, a subset of HTML 4 markup. You may want to call setTextFormat() explicitly, e.g. in case you expect the text to be in plain format but cannot control the text source (for instance when displaying data loaded from the Web).</db:para>
</db:warning>
<db:para>When the content is changed using any of these functions, any previous content is cleared.</db:para>
<db:para>By default, labels display <db:link xlink:href="stylesheet-reference.xml#alignment">left-aligned, vertically-centered</db:link> text and images, where any tabs in the text to be displayed are <db:link xlink:href="qt.xml#TextFlag-enum">automatically expanded</db:link>. However, the look of a <db:link xlink:href="qlabel.xml">QLabel</db:link> can be adjusted and fine-tuned in several ways.</db:para>
<db:para>The positioning of the content within the <db:link xlink:href="qlabel.xml">QLabel</db:link> widget area can be tuned with setAlignment() and setIndent(). Text content can also wrap lines along word boundaries with setWordWrap(). For example, this code sets up a sunken panel with a two-line text in the bottom right corner (both lines being flush with the right side of the label):</db:para>
<db:programlisting language="cpp">QLabel *label = new QLabel(this);
label-&gt;setFrameStyle(QFrame::Panel | QFrame::Sunken);
label-&gt;setText(&quot;first line\nsecond line&quot;);
label-&gt;setAlignment(Qt::AlignBottom | Qt::AlignRight);
</db:programlisting>
<db:para>The properties and functions <db:link xlink:href="qlabel.xml">QLabel</db:link> inherits from <db:link xlink:href="qframe.xml">QFrame</db:link> can also be used to specify the widget frame to be used for any given label.</db:para>
<db:para>A <db:link xlink:href="qlabel.xml">QLabel</db:link> is often used as a label for an interactive widget. For this use <db:link xlink:href="qlabel.xml">QLabel</db:link> provides a useful mechanism for adding an mnemonic (see <db:link xlink:href="qkeysequence.xml">QKeySequence</db:link>) that will set the keyboard focus to the other widget (called the <db:link xlink:href="qlabel.xml">QLabel</db:link>'s &quot;buddy&quot;). For example:</db:para>
<db:programlisting language="cpp">QLineEdit *phoneEdit = new QLineEdit(this);
QLabel *phoneLabel = new QLabel(&quot;&amp;Phone:&quot;, this);
phoneLabel-&gt;setBuddy(phoneEdit);
</db:programlisting>
<db:para>In this example, keyboard focus is transferred to the label's buddy (the <db:link xlink:href="qlineedit.xml">QLineEdit</db:link>) when the user presses Alt+P. If the buddy was a button (inheriting from <db:link xlink:href="qabstractbutton.xml">QAbstractButton</db:link>), triggering the mnemonic would emulate a button click.</db:para>
<db:informaltable style="generic" width="100%">
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/macintosh-label.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of a Macintosh style label</db:para>
</db:td>
<db:td>
<db:para>A label shown in the <db:link xlink:href="gallery-macintosh.xml">Macintosh widget style</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/fusion-label.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of a Fusion style label</db:para>
</db:td>
<db:td>
<db:para>A label shown in the <db:link xlink:href="gallery-fusion.xml">Fusion widget style</db:link>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:inlinemediaobject>
<db:imageobject>
<db:imagedata fileref="images/windowsvista-label.png"/>
</db:imageobject>
</db:inlinemediaobject> Screenshot of a Windows Vista style label</db:para>
</db:td>
<db:td>
<db:para>A label shown in the <db:link xlink:href="gallery-windowsvista.xml">Windows Vista widget style</db:link>.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlineedit.xml">QLineEdit</db:link></db:member>
<db:member><db:link xlink:href="qtextedit.xml">QTextEdit</db:link></db:member>
<db:member><db:link xlink:href="qpixmap.xml">QPixmap</db:link></db:member>
<db:member><db:link xlink:href="qmovie.xml">QMovie</db:link></db:member>
<db:member><db:link xlink:href="guibooks.xml#fowler">GUI Design Handbook: Label</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QLabel">
<db:title>[explicit] QLabel::QLabel(QWidget *<db:emphasis>parent</db:emphasis> = 0, Qt::WindowFlags <db:emphasis>f</db:emphasis> = 0)</db:title>
<db:para>Constructs an empty label.</db:para>
<db:para>The <db:code role="parameter">parent</db:code> and widget flag <db:code role="parameter">f</db:code>, arguments are passed to the <db:link xlink:href="qframe.xml">QFrame</db:link> constructor.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">setAlignment()</db:link></db:member>
<db:member><db:link xlink:href="qframe.xml#setFrameStyle">setFrameStyle</db:link>()</db:member>
<db:member><db:link xlink:href="">setIndent()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QLabel-1">
<db:title>[explicit] QLabel::QLabel(const QString &amp;<db:emphasis>text</db:emphasis>, QWidget *<db:emphasis>parent</db:emphasis> = 0, Qt::WindowFlags <db:emphasis>f</db:emphasis> = 0)</db:title>
<db:para>Constructs a label that displays the text, <db:code role="parameter">text</db:code>.</db:para>
<db:para>The <db:code role="parameter">parent</db:code> and widget flag <db:code role="parameter">f</db:code>, arguments are passed to the <db:link xlink:href="qframe.xml">QFrame</db:link> constructor.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">setText()</db:link></db:member>
<db:member><db:link xlink:href="">setAlignment()</db:link></db:member>
<db:member><db:link xlink:href="qframe.xml#setFrameStyle">setFrameStyle</db:link>()</db:member>
<db:member><db:link xlink:href="">setIndent()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="dtor.QLabel">
<db:title>[virtual noexcept] QLabel::~QLabel()</db:title>
<db:para>Destroys the label.</db:para>
</db:section>
<db:section xml:id="buddy">
<db:title>QWidget *QLabel::buddy() const</db:title>
<db:para>Returns this label's buddy, or 0 if no buddy is currently set.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlabel.xml#setBuddy">setBuddy</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="changeEvent">
<db:title>[override virtual protected] void QLabel::changeEvent(QEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qframe.xml#changeEvent" role="function">QFrame::changeEvent(QEvent *ev)</db:link>.</db:para>
</db:section>
<db:section xml:id="clear">
<db:title>void QLabel::clear()</db:title>
<db:para>Clears any label contents.</db:para>
</db:section>
<db:section xml:id="contextMenuEvent">
<db:title>[override virtual protected] void QLabel::contextMenuEvent(QContextMenuEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#contextMenuEvent" role="function">QWidget::contextMenuEvent(QContextMenuEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="event">
<db:title>[override virtual protected] bool QLabel::event(QEvent *<db:emphasis>e</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qframe.xml#event" role="function">QFrame::event(QEvent *e)</db:link>.</db:para>
</db:section>
<db:section xml:id="focusInEvent">
<db:title>[override virtual protected] void QLabel::focusInEvent(QFocusEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#focusInEvent" role="function">QWidget::focusInEvent(QFocusEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="focusNextPrevChild">
<db:title>[override virtual protected] bool QLabel::focusNextPrevChild(bool <db:emphasis>next</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#focusNextPrevChild" role="function">QWidget::focusNextPrevChild(bool next)</db:link>.</db:para>
</db:section>
<db:section xml:id="focusOutEvent">
<db:title>[override virtual protected] void QLabel::focusOutEvent(QFocusEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#focusOutEvent" role="function">QWidget::focusOutEvent(QFocusEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="heightForWidth">
<db:title>[override virtual] int QLabel::heightForWidth(int <db:emphasis>w</db:emphasis>) const</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#heightForWidth" role="function">QWidget::heightForWidth(int w) const</db:link>.</db:para>
</db:section>
<db:section xml:id="keyPressEvent">
<db:title>[override virtual protected] void QLabel::keyPressEvent(QKeyEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#keyPressEvent" role="function">QWidget::keyPressEvent(QKeyEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="linkActivated">
<db:title>[since 4.2] void QLabel::linkActivated(const QString &amp;<db:emphasis>link</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user clicks a link. The URL referred to by the anchor is passed in <db:code role="parameter">link</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlabel.xml#linkHovered">linkHovered</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="linkHovered">
<db:title>[since 4.2] void QLabel::linkHovered(const QString &amp;<db:emphasis>link</db:emphasis>)</db:title>
<db:para>This signal is emitted when the user hovers over a link. The URL referred to by the anchor is passed in <db:code role="parameter">link</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.2.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlabel.xml#linkActivated">linkActivated</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="minimumSizeHint">
<db:title>[override virtual] QSize QLabel::minimumSizeHint() const</db:title>
</db:section>
<db:section xml:id="mouseMoveEvent">
<db:title>[override virtual protected] void QLabel::mouseMoveEvent(QMouseEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#mouseMoveEvent" role="function">QWidget::mouseMoveEvent(QMouseEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="mousePressEvent">
<db:title>[override virtual protected] void QLabel::mousePressEvent(QMouseEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#mousePressEvent" role="function">QWidget::mousePressEvent(QMouseEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="mouseReleaseEvent">
<db:title>[override virtual protected] void QLabel::mouseReleaseEvent(QMouseEvent *<db:emphasis>ev</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qwidget.xml#mouseReleaseEvent" role="function">QWidget::mouseReleaseEvent(QMouseEvent *event)</db:link>.</db:para>
</db:section>
<db:section xml:id="movie">
<db:title>QMovie *QLabel::movie() const</db:title>
<db:para>Returns a pointer to the label's movie, or 0 if no movie has been set.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlabel.xml#setMovie">setMovie</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="paintEvent">
<db:title>[override virtual protected] void QLabel::paintEvent(<db:emphasis>QPaintEvent *</db:emphasis>)</db:title>
<db:para>Reimplements: <db:link xlink:href="qframe.xml#paintEvent" role="function">QFrame::paintEvent(QPaintEvent *)</db:link>.</db:para>
</db:section>
<db:section xml:id="picture">
<db:title>const QPicture *QLabel::picture() const</db:title>
<db:para>Returns the label's picture or 0 if the label doesn't have a picture.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlabel.xml#setPicture">setPicture</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="selectionStart">
<db:title>[since 4.7] int QLabel::selectionStart() const</db:title>
<db:para>selectionStart() returns the index of the first selected character in the label or -1 if no text is selected.</db:para>
<db:para><db:emphasis role="bold">Note:</db:emphasis> The textInteractionFlags set on the label need to include either TextSelectableByMouse or TextSelectableByKeyboard.</db:para>
<db:para>This function was introduced in Qt 4.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">selectedText()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setBuddy">
<db:title>void QLabel::setBuddy(QWidget *<db:emphasis>buddy</db:emphasis>)</db:title>
<db:para>Sets this label's buddy to <db:code role="parameter">buddy</db:code>.</db:para>
<db:para>When the user presses the shortcut key indicated by this label, the keyboard focus is transferred to the label's buddy widget.</db:para>
<db:para>The buddy mechanism is only available for QLabels that contain text in which one character is prefixed with an ampersand, '&amp;'. This character is set as the shortcut key. See the <db:link xlink:href="qkeysequence.xml#mnemonic">QKeySequence::mnemonic</db:link>() documentation for details (to display an actual ampersand, use '&amp;&amp;').</db:para>
<db:para>In a dialog, you might create two data entry widgets and a label for each, and set up the geometry layout so each label is just to the left of its data entry widget (its &quot;buddy&quot;), for example:</db:para>
<db:programlisting language="cpp">QLineEdit *nameEdit  = new QLineEdit(this);
QLabel    *nameLabel = new QLabel(&quot;&amp;Name:&quot;, this);
nameLabel-&gt;setBuddy(nameEdit);
QLineEdit *phoneEdit  = new QLineEdit(this);
QLabel    *phoneLabel = new QLabel(&quot;&amp;Phone:&quot;, this);
phoneLabel-&gt;setBuddy(phoneEdit);
// (layout setup not shown)
</db:programlisting>
<db:para>With the code above, the focus jumps to the Name field when the user presses Alt+N, and to the Phone field when the user presses Alt+P.</db:para>
<db:para>To unset a previously set buddy, call this function with <db:code role="parameter">buddy</db:code> set to 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlabel.xml#buddy">buddy</db:link>()</db:member>
<db:member><db:link xlink:href="">setText()</db:link></db:member>
<db:member><db:link xlink:href="qshortcut.xml">QShortcut</db:link></db:member>
<db:member><db:link xlink:href="">setAlignment()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setMovie">
<db:title>void QLabel::setMovie(QMovie *<db:emphasis>movie</db:emphasis>)</db:title>
<db:para>Sets the label contents to <db:code role="parameter">movie</db:code>. Any previous content is cleared. The label does NOT take ownership of the movie.</db:para>
<db:para>The buddy shortcut, if any, is disabled.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlabel.xml#movie">movie</db:link>()</db:member>
<db:member><db:link xlink:href="qlabel.xml#setBuddy">setBuddy</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setNum">
<db:title>void QLabel::setNum(int <db:emphasis>num</db:emphasis>)</db:title>
<db:para>Sets the label contents to plain text containing the textual representation of integer <db:code role="parameter">num</db:code>. Any previous content is cleared. Does nothing if the integer's string representation is the same as the current contents of the label.</db:para>
<db:para>The buddy shortcut, if any, is disabled.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">setText()</db:link></db:member>
<db:member><db:link xlink:href="qstring.xml#setNum">QString::setNum</db:link>()</db:member>
<db:member><db:link xlink:href="qlabel.xml#setBuddy">setBuddy</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setNum-1">
<db:title>void QLabel::setNum(double <db:emphasis>num</db:emphasis>)</db:title>
<db:para>This is an overloaded function.</db:para>
<db:para>Sets the label contents to plain text containing the textual representation of double <db:code role="parameter">num</db:code>. Any previous content is cleared. Does nothing if the double's string representation is the same as the current contents of the label.</db:para>
<db:para>The buddy shortcut, if any, is disabled.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">setText()</db:link></db:member>
<db:member><db:link xlink:href="qstring.xml#setNum">QString::setNum</db:link>()</db:member>
<db:member><db:link xlink:href="qlabel.xml#setBuddy">setBuddy</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPicture">
<db:title>void QLabel::setPicture(const QPicture &amp;<db:emphasis>picture</db:emphasis>)</db:title>
<db:para>Sets the label contents to <db:code role="parameter">picture</db:code>. Any previous content is cleared.</db:para>
<db:para>The buddy shortcut, if any, is disabled.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qlabel.xml#picture">picture</db:link>()</db:member>
<db:member><db:link xlink:href="qlabel.xml#setBuddy">setBuddy</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSelection">
<db:title>[since 4.7] void QLabel::setSelection(int <db:emphasis>start</db:emphasis>, int <db:emphasis>length</db:emphasis>)</db:title>
<db:para>Selects text from position <db:code role="parameter">start</db:code> and for <db:code role="parameter">length</db:code> characters.</db:para>
<db:para><db:emphasis role="bold">Note:</db:emphasis> The textInteractionFlags set on the label need to include either TextSelectableByMouse or TextSelectableByKeyboard.</db:para>
<db:para>This function was introduced in Qt 4.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="">selectedText()</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="sizeHint">
<db:title>[override virtual] QSize QLabel::sizeHint() const</db:title>
<db:para>Reimplements: <db:link xlink:href="qframe.xml#sizeHint" role="function">QFrame::sizeHint() const</db:link>.</db:para>
</db:section>
</db:section>
</db:article>
