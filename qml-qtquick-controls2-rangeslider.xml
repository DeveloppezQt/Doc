<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>RangeSlider QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 5.13.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Used to select a range of values by sliding two handles along a track.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 2.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Control</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>RangeSlider is part of <db:simplelist><db:member>qtquickcontrols2-input</db:member><db:member>qtquickcontrols2-focusscopes</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:mediaobject>
<db:imageobject>
<db:imagedata fileref="images/qtquickcontrols2-rangeslider.gif"/>
</db:imageobject>
</db:mediaobject>
<db:para><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml">RangeSlider</db:link> is used to select a range specified by two values, by sliding each handle along a track.</db:para>
<db:para>In the example below, custom <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#from-prop">from</db:link> and <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#to-prop">to</db:link> values are set, and the initial positions of the <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first-prop">first</db:link> and <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second-prop">second</db:link> handles are set:</db:para>
<db:programlisting language="cpp">RangeSlider {
    from: 1
    to: 100
    first.value: 25
    second.value: 75
}
</db:programlisting>
<db:para>In order to perform an action when the value for a particular handle changes, use the following syntax:</db:para>
<db:programlisting language="cpp">first.onMoved: console.log(&quot;first.value changed to &quot; + first.value)
</db:programlisting>
<db:para>The <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.position-prop">first.position</db:link> and <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second.position-prop">second.position</db:link> properties are expressed as fractions of the control's size, in the range <db:code>0.0 - 1.0</db:code>. The <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.visualPosition-prop">first.visualPosition</db:link> and <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second.visualPosition-prop">second.visualPosition</db:link> properties are the same, except that they are reversed in a <db:link xlink:href="qtquick-positioning-righttoleft.xml">right-to-left</db:link> application. The <db:code>visualPosition</db:code> is useful for positioning the handles when styling <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml">RangeSlider</db:link>. In the example above, <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.visualPosition-prop">first.visualPosition</db:link> will be <db:code>0.24</db:code> in a left-to-right application, and <db:code>0.76</db:code> in a right-to-left application.</db:para>
<db:para>For a slider that allows the user to select a single value, see <db:link xlink:href="qml-qtquick-controls2-slider.xml">Slider</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquickcontrols2-customize.xml#customizing-rangeslider">Customizing RangeSlider</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-input.xml">Input Controls</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-focus.xml">Focus Management in Qt Quick Controls</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="first-prop">
<db:title>first group</db:title>
<db:bridgehead renderas="sect2" xml:id="first.handle-prop">first.handle : Item</db:bridgehead>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>first.handle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="first.hovered-prop">first.hovered : bool</db:bridgehead>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>first.hovered</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="first.implicitHandleHeight-prop">first.implicitHandleHeight : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>first.implicitHandleHeight</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="first.implicitHandleWidth-prop">first.implicitHandleWidth : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>first.implicitHandleWidth</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="first.position-prop">first.position : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>first.position</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="first.pressed-prop">first.pressed : bool</db:bridgehead>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>first.pressed</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="first.value-prop">first.value : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>first.value</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="first.visualPosition-prop">first.visualPosition : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>first.visualPosition</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Property</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>value</db:para>
</db:td>
<db:td>
<db:para>This property holds the value of the first handle in the range <db:code>from</db:code> - <db:code>to</db:code>.</db:para>
<db:para>If <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#from-prop">from</db:link> is greater than <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#to-prop">to</db:link>, the value of the first handle must be greater than the second, and vice versa.</db:para>
<db:para>The default value is <db:code>0.0</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>handle</db:para>
</db:td>
<db:td>
<db:para>This property holds the first handle item.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>visualPosition</db:para>
</db:td>
<db:td>
<db:para>This property holds the visual position of the first handle.</db:para>
<db:para>The position is expressed as a fraction of the control's size, in the range <db:code>0.0 - 1.0</db:code>. When the control is <db:link xlink:href="qml-qtquick-controls2-control.xml#mirrored-prop">mirrored</db:link>, the value is equal to <db:code>1.0 - position</db:code>. This makes the value suitable for visualizing the slider, taking right-to-left support into account.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>position</db:para>
</db:td>
<db:td>
<db:para>This property holds the logical position of the first handle.</db:para>
<db:para>The position is expressed as a fraction of the control's size, in the range <db:code>0.0 - 1.0</db:code>. For visualizing a slider, the right-to-left aware <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.visualPosition-prop">visualPosition</db:link> should be used instead.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>pressed</db:para>
</db:td>
<db:td>
<db:para>This property holds whether the first handle is pressed by either touch, mouse, or keys.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>hovered</db:para>
</db:td>
<db:td>
<db:para>This property holds whether the first handle is hovered. This property was introduced in <db:link xlink:href="qtquick-module.xml">QtQuick</db:link>.Controls 2.1.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>implicitHandleWidth</db:para>
</db:td>
<db:td>
<db:para>This property holds the implicit width of the first handle. This property was introduced in <db:link xlink:href="qtquick-module.xml">QtQuick</db:link>.Controls 2.5.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>implicitHandleHeight</db:para>
</db:td>
<db:td>
<db:para>This property holds the implicit height of the first handle. This property was introduced in <db:link xlink:href="qtquick-module.xml">QtQuick</db:link>.Controls 2.5.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.moved-signal">first.moved</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.increase-method">first.increase</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.decrease-method">first.decrease</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="from-prop">
<db:title>from : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>from</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the starting value for the range. The default value is <db:code>0.0</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#to-prop">to</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.value-prop">first.value</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second.value-prop">second.value</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="horizontal-prop">
<db:title>[read-only, since QtQuick.Controls 2.3 (Qt 5.10)] horizontal : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>horizontal</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the slider is horizontal.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#orientation-prop">orientation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="live-prop">
<db:title>[since QtQuick.Controls 2.2 (Qt 5.9)] live : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>live</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the slider provides live updates for the <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.value-prop">first.value</db:link> and <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second.value-prop">second.value</db:link> properties while the respective handles are dragged.</db:para>
<db:para>The default value is <db:code>true</db:code>.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.2 (Qt 5.9).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.value-prop">first.value</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second.value-prop">second.value</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="orientation-prop">
<db:title>orientation : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>orientation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the orientation.</db:para>
<db:para>Possible values:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Qt.Horizontal</db:para>
</db:td>
<db:td>
<db:para>Horizontal (default)</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.Vertical</db:para>
</db:td>
<db:td>
<db:para>Vertical</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#horizontal-prop">horizontal</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#vertical-prop">vertical</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="second-prop">
<db:title>second group</db:title>
<db:bridgehead renderas="sect2" xml:id="second.handle-prop">second.handle : Item</db:bridgehead>
<db:fieldsynopsis>
<db:type>Item</db:type>
<db:varname>second.handle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="second.hovered-prop">second.hovered : bool</db:bridgehead>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>second.hovered</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="second.implicitHandleHeight-prop">second.implicitHandleHeight : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>second.implicitHandleHeight</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="second.implicitHandleWidth-prop">second.implicitHandleWidth : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>second.implicitHandleWidth</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="second.position-prop">second.position : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>second.position</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="second.pressed-prop">second.pressed : bool</db:bridgehead>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>second.pressed</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="second.value-prop">second.value : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>second.value</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:bridgehead renderas="sect2" xml:id="second.visualPosition-prop">second.visualPosition : real</db:bridgehead>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>second.visualPosition</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Property</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para>value</db:para>
</db:td>
<db:td>
<db:para>This property holds the value of the second handle in the range <db:code>from</db:code> - <db:code>to</db:code>.</db:para>
<db:para>If <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#from-prop">from</db:link> is greater than <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#to-prop">to</db:link>, the value of the first handle must be greater than the second, and vice versa.</db:para>
<db:para>The default value is <db:code>0.0</db:code>.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>handle</db:para>
</db:td>
<db:td>
<db:para>This property holds the second handle item.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>visualPosition</db:para>
</db:td>
<db:td>
<db:para>This property holds the visual position of the second handle.</db:para>
<db:para>The position is expressed as a fraction of the control's size, in the range <db:code>0.0 - 1.0</db:code>. When the control is <db:link xlink:href="qml-qtquick-controls2-control.xml#mirrored-prop">mirrored</db:link>, the value is equal to <db:code>1.0 - position</db:code>. This makes the value suitable for visualizing the slider, taking right-to-left support into account.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>position</db:para>
</db:td>
<db:td>
<db:para>This property holds the logical position of the second handle.</db:para>
<db:para>The position is expressed as a fraction of the control's size, in the range <db:code>0.0 - 1.0</db:code>. For visualizing a slider, the right-to-left aware <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second.visualPosition-prop">visualPosition</db:link> should be used instead.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>pressed</db:para>
</db:td>
<db:td>
<db:para>This property holds whether the second handle is pressed by either touch, mouse, or keys.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>hovered</db:para>
</db:td>
<db:td>
<db:para>This property holds whether the second handle is hovered. This property was introduced in <db:link xlink:href="qtquick-module.xml">QtQuick</db:link>.Controls 2.1.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>implicitHandleWidth</db:para>
</db:td>
<db:td>
<db:para>This property holds the implicit width of the second handle. This property was introduced in <db:link xlink:href="qtquick-module.xml">QtQuick</db:link>.Controls 2.5.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para>implicitHandleHeight</db:para>
</db:td>
<db:td>
<db:para>This property holds the implicit height of the second handle. This property was introduced in <db:link xlink:href="qtquick-module.xml">QtQuick</db:link>.Controls 2.5.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second.moved-signal">second.moved</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second.increase-method">second.increase</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second.decrease-method">second.decrease</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="snapMode-prop">
<db:title>snapMode : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>snapMode</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the snap mode.</db:para>
<db:para>The snap mode determines how the slider handles behave with regards to the <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#stepSize-prop">stepSize</db:link>.</db:para>
<db:para>Possible values:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>RangeSlider.NoSnap</db:para>
</db:td>
<db:td>
<db:para>The slider does not snap (default).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>RangeSlider.SnapAlways</db:para>
</db:td>
<db:td>
<db:para>The slider snaps while the handle is dragged.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>RangeSlider.SnapOnRelease</db:para>
</db:td>
<db:td>
<db:para>The slider does not snap while being dragged, but only after the handle is released.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>For visual explanations of the various modes, see the <db:link xlink:href="qml-qtquick-controls2-slider.xml#snapMode-prop">snapMode</db:link> documentation of <db:link xlink:href="qml-qtquick-controls2-slider.xml">Slider</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#stepSize-prop">stepSize</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="stepSize-prop">
<db:title>stepSize : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>stepSize</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the step size. The default value is <db:code>0.0</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#snapMode-prop">snapMode</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.increase-method">first.increase</db:link>()</db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.decrease-method">first.decrease</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="to-prop">
<db:title>to : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>to</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the end value for the range. The default value is <db:code>1.0</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#from-prop">from</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.value-prop">first.value</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second.value-prop">second.value</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="touchDragThreshold-prop">
<db:title>[since QtQuick.Controls 2.5 (Qt 5.12)] touchDragThreshold : qreal</db:title>
<db:fieldsynopsis>
<db:type>qreal</db:type>
<db:varname>touchDragThreshold</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the threshold (in logical pixels) at which a touch drag event will be initiated. The mouse drag threshold won't be affected. The default value is <db:code>Qt.styleHints.startDragDistance</db:code>.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member>QStyleHints</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="vertical-prop">
<db:title>[read-only, since QtQuick.Controls 2.3 (Qt 5.10)] vertical : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>vertical</db:varname>
<db:modifier>[read-only]</db:modifier>

<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the slider is vertical.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#orientation-prop">orientation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="first.moved-signal">
<db:title>[since QtQuick.Controls 2.5] void first.moved()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>first.moved</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">qmlsignal</db:synopsisinfo>
<db:synopsisinfo role="signature">void first.moved()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:bridgehead renderas="sect2">[since QtQuick.Controls 2.5] void second.moved()</db:bridgehead><db:methodsynopsis>
<db:void/>
<db:methodname>second.moved</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">qmlsignal</db:synopsisinfo>
<db:synopsisinfo role="signature">void second.moved()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when either the first or second handle has been interactively moved by the user by either touch, mouse, or keys.</db:para>
<db:para>This QML signal was introduced in QtQuick.Controls 2.5.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first-prop">first</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second-prop">second</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="first.decrease-method">
<db:title>void first.decrease()</db:title>
<db:para>Decreases the value of the handle by <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#stepSize-prop">stepSize</db:link>, or <db:code>0.1</db:code> if <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#stepSize-prop">stepSize</db:link> is not defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first-prop">first</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="first.increase-method">
<db:title>void first.increase()</db:title>
<db:para>Increases the value of the handle by <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#stepSize-prop">stepSize</db:link>, or <db:code>0.1</db:code> if <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#stepSize-prop">stepSize</db:link> is not defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first-prop">first</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="second.decrease-method">
<db:title>void second.decrease()</db:title>
<db:para>Decreases the value of the handle by <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#stepSize-prop">stepSize</db:link>, or <db:code>0.1</db:code> if <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#stepSize-prop">stepSize</db:link> is not defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second-prop">second</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="second.increase-method">
<db:title>void second.increase()</db:title>
<db:para>Increases the value of the handle by <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#stepSize-prop">stepSize</db:link>, or <db:code>0.1</db:code> if <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#stepSize-prop">stepSize</db:link> is not defined.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second-prop">second</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setValues-method">
<db:title>void setValues(real <db:emphasis>firstValue</db:emphasis>, real <db:emphasis>secondValue</db:emphasis>)</db:title>
<db:para>Sets <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.value-prop">first.value</db:link> and <db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second.value-prop">second.value</db:link> with the given arguments.</db:para>
<db:para>If <db:code role="parameter">to</db:code> is larger than <db:code role="parameter">from</db:code> and <db:code role="parameter">firstValue</db:code> is larger than <db:code role="parameter">secondValue</db:code>, <db:code role="parameter">firstValue</db:code> will be clamped to <db:code role="parameter">secondValue</db:code>.</db:para>
<db:para>If <db:code role="parameter">from</db:code> is larger than <db:code role="parameter">to</db:code> and <db:code role="parameter">secondValue</db:code> is larger than <db:code role="parameter">firstValue</db:code>, <db:code role="parameter">secondValue</db:code> will be clamped to <db:code role="parameter">firstValue</db:code>.</db:para>
<db:para>This function may be necessary to set the first and second values after the control has been completed, as there is a circular dependency between firstValue and secondValue which can cause assigned values to be clamped to each other.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#stepSize-prop">stepSize</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="valueAt-method">
<db:title>[since QtQuick.Controls 2.5 (Qt 5.12)] real valueAt(real <db:emphasis>position</db:emphasis>)</db:title>
<db:para>Returns the value for the given <db:code role="parameter">position</db:code>.</db:para>
<db:para>This method was introduced in QtQuick.Controls 2.5 (Qt 5.12).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.value-prop">first.value</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second.value-prop">second.value</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#first.position-prop">first.position</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#second.position-prop">second.position</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-rangeslider.xml#live-prop">live</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
