<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QAbstractFormBuilder Class</db:title>
<db:productname>QtDesigner</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>Qt Designer Manual</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qabstractformbuilder.xml">QAbstractFormBuilder</db:link> class provides a default implementation for classes that create user interfaces at run-time.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QAbstractFormBuilder</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += designer</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qformbuilder.xml" xlink:role="class">QFormBuilder</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qabstractformbuilder.xml">QAbstractFormBuilder</db:link> provides a standard interface and a default implementation for constructing forms from user interface files. It is not intended to be instantiated directly. Use the <db:link xlink:href="qformbuilder.xml">QFormBuilder</db:link> class to create user interfaces from UI files at run-time. For example:</db:para>
<db:programlisting language="cpp">        MyForm::MyForm(QWidget *parent)
            : QWidget(parent)
        {
            QFormBuilder builder;
            QFile file(&quot;:/forms/myWidget.ui&quot;);
            file.open(QFile::ReadOnly);
            QWidget *myWidget = builder.load(&amp;file, this);
            file.close();

            QVBoxLayout *layout = new QVBoxLayout;
            layout-&gt;addWidget(myWidget);
            setLayout(layout);
        }
</db:programlisting>
<db:para>To override certain aspects of the form builder's behavior, subclass <db:link xlink:href="qabstractformbuilder.xml">QAbstractFormBuilder</db:link> and reimplement the relevant virtual functions:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qabstractformbuilder.xml#load">load</db:link>() handles reading of UI format files from arbitrary QIODevices, and construction of widgets from the XML data that they contain.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qabstractformbuilder.xml#save">save</db:link>() handles saving of widget details in UI format to arbitrary QIODevices.</db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qabstractformbuilder.xml#workingDirectory">workingDirectory</db:link>() and <db:link xlink:href="qabstractformbuilder.xml#setWorkingDirectory">setWorkingDirectory</db:link>() control the directory in which forms are held. The form builder looks for other resources on paths relative to this directory.</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>The <db:link xlink:href="qformbuilder.xml">QFormBuilder</db:link> class is typically used by custom components and applications that embed <db:emphasis>Qt Designer</db:emphasis>. Standalone applications that need to dynamically generate user interfaces at run-time use the <db:link xlink:href="quiloader.xml">QUiLoader</db:link>, found in the <db:link xlink:href="qtuitools-index.xml">Qt UI Tools</db:link> module.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtuitools-index.xml">Qt UI Tools</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QAbstractFormBuilder">
<db:title>QAbstractFormBuilder::QAbstractFormBuilder()</db:title>
<db:para>Constructs a new form builder.</db:para>
</db:section>
<db:section xml:id="dtor.QAbstractFormBuilder">
<db:title>[virtual noexcept] QAbstractFormBuilder::~QAbstractFormBuilder()</db:title>
<db:para>Destroys the form builder.</db:para>
</db:section>
<db:section xml:id="errorString">
<db:title>[since 5.0] QString QAbstractFormBuilder::errorString() const</db:title>
<db:para>Returns a human-readable description of the last error occurred in <db:link xlink:href="qabstractformbuilder.xml#load">load</db:link>().</db:para>
<db:para>This function was introduced in Qt 5.0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractformbuilder.xml#load">load</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="load">
<db:title>[virtual] QWidget *QAbstractFormBuilder::load(QIODevice *<db:emphasis>device</db:emphasis>, QWidget *<db:emphasis>parent</db:emphasis> = Q_NULLPTR)</db:title>
<db:para>Loads an XML representation of a widget from the given <db:code role="parameter">device</db:code>, and constructs a new widget with the specified <db:code role="parameter">parent</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractformbuilder.xml#save">save</db:link>()</db:member>
<db:member><db:link xlink:href="qabstractformbuilder.xml#errorString">errorString</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="save">
<db:title>[virtual] void QAbstractFormBuilder::save(QIODevice *<db:emphasis>device</db:emphasis>, QWidget *<db:emphasis>widget</db:emphasis>)</db:title>
<db:para>Saves an XML representation of the given <db:code role="parameter">widget</db:code> to the specified <db:code role="parameter">device</db:code> in the standard UI file format.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractformbuilder.xml#load">load</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setWorkingDirectory">
<db:title>void QAbstractFormBuilder::setWorkingDirectory(const QDir &amp;<db:emphasis>directory</db:emphasis>)</db:title>
<db:para>Sets the current working directory of the form builder to the specified <db:code role="parameter">directory</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractformbuilder.xml#workingDirectory">workingDirectory</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="workingDirectory">
<db:title>QDir QAbstractFormBuilder::workingDirectory() const</db:title>
<db:para>Returns the current working directory of the form builder.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qabstractformbuilder.xml#setWorkingDirectory">setWorkingDirectory</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
