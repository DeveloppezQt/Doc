<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QQuick3DObject Class</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Base class of all 3D nodes and resources.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QQuick3DObject</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qquick3dgeometry.xml" xlink:role="class">QQuick3DGeometry</db:link>, <db:link xlink:href="qquick3dinstancing.xml" xlink:role="class">QQuick3DInstancing</db:link>, <db:link xlink:href="qquick3drenderextension.xml" xlink:role="class">QQuick3DRenderExtension</db:link>, and <db:link xlink:href="qquick3dtexturedata.xml" xlink:role="class">QQuick3DTextureData</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qtquick3d-object3d.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link> and <db:link xlink:href="qqmlparserstatus.xml" xlink:role="class">QQmlParserStatus</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qquick3dgeometry.xml" xlink:role="class">QQuick3DGeometry</db:link>, <db:link xlink:href="qquick3dinstancing.xml" xlink:role="class">QQuick3DInstancing</db:link>, <db:link xlink:href="qquick3drenderextension.xml" xlink:role="class">QQuick3DRenderExtension</db:link>, and <db:link xlink:href="qquick3dtexturedata.xml" xlink:role="class">QQuick3DTextureData</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick3d-object3d.xml">Object3D</db:link> is the base class for all Qt Quick 3D scene objects. Currently the types available in C++ are:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:link xlink:href="qquick3dgeometry.xml">QQuick3DGeometry</db:link></db:para>
</db:listitem>
<db:listitem>
<db:para><db:link xlink:href="qquick3dtexturedata.xml">QQuick3DTextureData</db:link></db:para>
</db:listitem>
</db:itemizedlist>
<db:para>Both of these types are resource objects which directly inherit <db:link xlink:href="qquick3dobject.xml">QQuick3DObject</db:link>.</db:para>
<db:para>It should not be necessary to use <db:link xlink:href="qquick3dobject.xml">QQuick3DObject</db:link> directly anywhere currently because it is just an interface for supporting spatial items and resources in a 3D scene, as well as exposing similar functionality as <db:link xlink:href="qquickitem.xml">QQuickItem</db:link> for 3D scene content.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="parent-prop">
<db:title>parent : QQuick3DObject*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QQuick3DObject*</db:type>
<db:varname>parent</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">parentItem</db:synopsisinfo>
<db:synopsisinfo role="setter">setParentItem</db:synopsisinfo>
<db:synopsisinfo role="notifier">parentChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the parent of the <db:link xlink:href="qml-qtquick3d-object3d.xml">Object3D</db:link> in a 3D scene.</db:para>
<db:note>
<db:para>An <db:link xlink:href="qml-qtquick3d-object3d.xml">Object3D</db:link>'s parent may not necessarily be the same as its object parent. This is necessary because the object parent may be an item that is not of type <db:link xlink:href="qml-qtquick3d-object3d.xml">Object3D</db:link>, for example the root object in a scene.</db:para>
</db:note>
<db:note>
<db:para>Currently for 3D items to be correctly handled by the scene manager when parenting 3D objects from C++ it is necessary to call QQuick3DObject::setParentItem before the <db:link xlink:href="qobject.xml#setParent">QObject::setParent</db:link>. This requirement is likely to change in a future release though.</db:para>
</db:note>
<db:programlisting language="cpp">QQuick3DObject *newItem = new QQuick3DObject();
newItem-&amp;gt;setParentItem(parentItem);
newItem-&amp;gt;setParent(parentItem);
</db:programlisting>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QQuick3DObject</db:type> *<db:emphasis role="bold">parentItem</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setParentItem</db:emphasis>(<db:type>QQuick3DObject</db:type> *<db:emphasis>parentItem</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">parentChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="state-prop">
<db:title>state : QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>state</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">state</db:synopsisinfo>
<db:synopsisinfo role="setter">setState</db:synopsisinfo>
<db:synopsisinfo role="notifier">stateChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the name of the current state of the object.</db:para>
<db:para>If the item is in its default state, that is, no explicit state has been set, then this property holds an empty string. Likewise, you can return an item to its default state by setting this property to an empty string.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">state</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setState</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>state</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">stateChanged</db:emphasis>()</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qtquick-statesanimations-states.xml">Qt Quick States</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
