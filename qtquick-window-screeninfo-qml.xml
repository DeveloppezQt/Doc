<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Qt Quick Examples - Window and Screen</db:title>
<db:productname>QtQuick</db:productname>
<db:edition>Qt 5.5.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>This example demonstrates the Window and Screen types in QML.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:programlisting language="qml">/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Contact: http://www.qt.io/licensing/
**
** This file is part of the examples of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:BSD$
** You may use this file under the terms of the BSD license as follows:
**
** &quot;Redistribution and use in source and binary forms, with or without
** modification, are permitted provided that the following conditions are
** met:
**   * Redistributions of source code must retain the above copyright
**     notice, this list of conditions and the following disclaimer.
**   * Redistributions in binary form must reproduce the above copyright
**     notice, this list of conditions and the following disclaimer in
**     the documentation and/or other materials provided with the
**     distribution.
**   * Neither the name of The Qt Company Ltd nor the names of its
**     contributors may be used to endorse or promote products derived
**     from this software without specific prior written permission.
**
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
** &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
** LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
** A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
** OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
** DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
** THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
** (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&quot;
**
** $QT_END_LICENSE$
**
****************************************************************************/

import QtQuick 2.3
import QtQuick.Window 2.1

Item {
    id: root
    width: 400
    height: propertyGrid.implicitHeight + 16

    function orientationToString(o) {
        switch (o) {
        case Qt.PrimaryOrientation:
            return &quot;primary&quot;;
        case Qt.PortraitOrientation:
            return &quot;portrait&quot;;
        case Qt.LandscapeOrientation:
            return &quot;landscape&quot;;
        case Qt.InvertedPortraitOrientation:
            return &quot;inverted portrait&quot;;
        case Qt.InvertedLandscapeOrientation:
            return &quot;inverted landscape&quot;;
        }
        return &quot;unknown&quot;;
    }

    Grid {
        id: propertyGrid
        columns: 2
        spacing: 8
        x: spacing
        y: spacing

        Text {
            text: &quot;Screen \&quot;&quot; + Screen.name + &quot;\&quot;:&quot;
            font.bold: true
        }
        Item { width: 1; height: 1 } // spacer

        Text { text: &quot;dimensions&quot; }
        Text { text: Screen.width + &quot;x&quot; + Screen.height }

        Text { text: &quot;pixel density&quot; }
        Text { text: Screen.pixelDensity.toFixed(2) + &quot; dots/mm (&quot; + (Screen.pixelDensity * 25.4).toFixed(2) + &quot; dots/inch)&quot; }

        Text { text: &quot;logical pixel density&quot; }
        Text { text: Screen.logicalPixelDensity.toFixed(2) + &quot; dots/mm (&quot; + (Screen.logicalPixelDensity * 25.4).toFixed(2) + &quot; dots/inch)&quot; }

        Text { text: &quot;device pixel ratio&quot; }
        Text { text: Screen.devicePixelRatio.toFixed(2) }

        Text { text: &quot;available virtual desktop&quot; }
        Text { text: Screen.desktopAvailableWidth + &quot;x&quot; + Screen.desktopAvailableHeight }

        Text { text: &quot;orientation&quot; }
        Text { text: orientationToString(Screen.orientation) + &quot; (&quot; + Screen.orientation + &quot;)&quot; }

        Text { text: &quot;primary orientation&quot; }
        Text { text: orientationToString(Screen.primaryOrientation) + &quot; (&quot; + Screen.primaryOrientation + &quot;)&quot; }
    }
}

</db:programlisting>
</db:article>
