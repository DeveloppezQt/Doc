<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ButtonGroup QML Type</db:title>
<db:productname>QtQuickControls</db:productname>
<db:edition>Qt 6.1.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Quick Controls Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Mutually-exclusive group of checkable buttons.</db:para>
<db:para>This type was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick.Controls 2.1</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>QtObject</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>ButtonGroup is part of <db:simplelist><db:member>utilities</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qml-qtquick-controls2-buttongroup.xml">ButtonGroup</db:link> is a non-visual, mutually exclusive group of buttons. It is used with controls such as <db:link xlink:href="qml-qtquick-controls2-radiobutton.xml">RadioButton</db:link>, where only one of the options can be selected at a time.</db:para>
<db:para>The most straight-forward way to use <db:link xlink:href="qml-qtquick-controls2-buttongroup.xml">ButtonGroup</db:link> is to assign a list of buttons. For example, the list of children of a <db:link xlink:href="qtquick-positioning-layouts.xml">positioner</db:link> or a <db:link xlink:href="qtquicklayouts-index.xml">layout</db:link> that manages a group of mutually exclusive buttons.</db:para>
<db:programlisting language="cpp">ButtonGroup {
    buttons: column.children
}

Column {
    id: column

    RadioButton {
        checked: true
        text: qsTr(&quot;DAB&quot;)
    }

    RadioButton {
        text: qsTr(&quot;FM&quot;)
    }

    RadioButton {
        text: qsTr(&quot;AM&quot;)
    }
}
</db:programlisting>
<db:para>Mutually exclusive buttons do not always share the same parent item, or the parent layout may sometimes contain items that should not be included in the button group. Such cases are best handled using the <db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#group-attached-prop">group</db:link> attached property.</db:para>
<db:programlisting language="cpp">ButtonGroup { id: radioGroup }

Column {
    Label {
        text: qsTr(&quot;Radio:&quot;)
    }

    RadioButton {
        checked: true
        text: qsTr(&quot;DAB&quot;)
        ButtonGroup.group: radioGroup
    }

    RadioButton {
        text: qsTr(&quot;FM&quot;)
        ButtonGroup.group: radioGroup
    }

    RadioButton {
        text: qsTr(&quot;AM&quot;)
        ButtonGroup.group: radioGroup
    }
}
</db:programlisting>
<db:para>More advanced use cases can be handled using the <db:code>addButton()</db:code> and <db:code>removeButton()</db:code> methods.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-radiobutton.xml">RadioButton</db:link></db:member>
<db:member><db:link xlink:href="qtquickcontrols2-buttons.xml">Button Controls</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="buttons-prop">
<db:title>buttons : list&lt;AbstractButton&gt;</db:title>
<db:fieldsynopsis>
<db:type>list&lt;AbstractButton&gt;</db:type>
<db:varname>buttons</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the list of buttons.</db:para>
<db:programlisting language="cpp">ButtonGroup {
    buttons: column.children
}

Column {
    id: column

    RadioButton {
        checked: true
        text: qsTr(&quot;Option A&quot;)
    }

    RadioButton {
        text: qsTr(&quot;Option B&quot;)
    }
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#group-attached-prop">group</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="checkState-prop">
<db:title>[since QtQuick.Controls 2.4 (Qt 5.11)] checkState : enumeration</db:title>
<db:fieldsynopsis>
<db:type>enumeration</db:type>
<db:varname>checkState</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the combined check state of the button group.</db:para>
<db:para>Available states:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para>Qt.Unchecked</db:para>
</db:td>
<db:td>
<db:para>None of the buttons are checked.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.PartiallyChecked</db:para>
</db:td>
<db:td>
<db:para>Some of the buttons are checked.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para>Qt.Checked</db:para>
</db:td>
<db:td>
<db:para>All of the buttons are checked.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>Setting the check state of a non-exclusive button group to <db:code>Qt.Unchecked</db:code> or <db:code>Qt.Checked</db:code> unchecks or checks all buttons in the group, respectively. <db:code>Qt.PartiallyChecked</db:code> is ignored.</db:para>
<db:para>Setting the check state of an exclusive button group to <db:code>Qt.Unchecked</db:code> unchecks the <db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#checkedButton-prop">checkedButton</db:link>. <db:code>Qt.Checked</db:code> and <db:code>Qt.PartiallyChecked</db:code> are ignored.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.4 (Qt 5.11).</db:para>
</db:section>
<db:section xml:id="checkedButton-prop">
<db:title>checkedButton : AbstractButton</db:title>
<db:fieldsynopsis>
<db:type>AbstractButton</db:type>
<db:varname>checkedButton</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the currently selected button in an exclusive group, or <db:code>null</db:code> if there is none or the group is non-exclusive.</db:para>
<db:para>By default, it is the first checked button added to an exclusive button group.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#exclusive-prop">exclusive</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="exclusive-prop">
<db:title>[since QtQuick.Controls 2.3 (Qt 5.10)] exclusive : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>exclusive</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds whether the button group is exclusive. The default value is <db:code>true</db:code>.</db:para>
<db:para>If this property is <db:code>true</db:code>, then only one button in the group can be checked at any given time. The user can click on any button to check it, and that button will replace the existing one as the checked button in the group.</db:para>
<db:para>In an exclusive group, the user cannot uncheck the currently checked button by clicking on it; instead, another button in the group must be clicked to set the new checked button for that group.</db:para>
<db:para>In a non-exclusive group, checking and unchecking buttons does not affect the other buttons in the group. Furthermore, the value of the <db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#checkedButton-prop">checkedButton</db:link> property is <db:code>null</db:code>.</db:para>
<db:para>This property was introduced in QtQuick.Controls 2.3 (Qt 5.10).</db:para>
</db:section>
</db:section>
<db:section xml:id="attached-property-documentation">
<db:title>Attached Property Documentation</db:title>
<db:section xml:id="group-attached-prop">
<db:title>ButtonGroup.group : ButtonGroup</db:title>
<db:fieldsynopsis>
<db:type>ButtonGroup</db:type>
<db:varname>ButtonGroup.group</db:varname>
<db:modifier>attached</db:modifier>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property attaches a button to a button group.</db:para>
<db:programlisting language="cpp">ButtonGroup { id: group }

RadioButton {
    checked: true
    text: qsTr(&quot;Option A&quot;)
    ButtonGroup.group: group
}

RadioButton {
    text: qsTr(&quot;Option B&quot;)
    ButtonGroup.group: group
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#buttons-prop">buttons</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="signal-documentation">
<db:title>Signal Documentation</db:title>
<db:section xml:id="clicked-signal">
<db:title>[since QtQuick.Controls 2.1 (Qt 5.8)] clicked(AbstractButton <db:emphasis>button</db:emphasis>)</db:title>
<db:para>This signal is emitted when a <db:code role="parameter">button</db:code> in the group has been clicked.</db:para>
<db:para>This signal is convenient for implementing a common signal handler for all buttons in the same group.</db:para>
<db:programlisting language="cpp">ButtonGroup {
    buttons: column.children
    onClicked: console.log(&quot;clicked:&quot;, button.text)
}

Column {
    id: column
    Button { text: &quot;First&quot; }
    Button { text: &quot;Second&quot; }
    Button { text: &quot;Third&quot; }
}
</db:programlisting>
<db:note>
<db:para>The corresponding handler is <db:code>onClicked</db:code>.</db:para>
</db:note>
<db:para>This signal was introduced in QtQuick.Controls 2.1 (Qt 5.8).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-abstractbutton.xml#clicked-signal">AbstractButton::clicked</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="addButton-method">
<db:title>void addButton(AbstractButton <db:emphasis>button</db:emphasis>)</db:title>
<db:para>Adds a <db:code role="parameter">button</db:code> to the button group.</db:para>
<db:note>
<db:para>Manually adding objects to a button group is typically unnecessary. The <db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#buttons-prop">buttons</db:link> property and the <db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#group-attached-prop">group</db:link> attached property provide a convenient and declarative syntax.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#buttons-prop">buttons</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#group-attached-prop">group</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="removeButton-method">
<db:title>void removeButton(AbstractButton <db:emphasis>button</db:emphasis>)</db:title>
<db:para>Removes a <db:code role="parameter">button</db:code> from the button group.</db:para>
<db:note>
<db:para>Manually removing objects from a button group is typically unnecessary. The <db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#buttons-prop">buttons</db:link> property and the <db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#group-attached-prop">group</db:link> attached property provide a convenient and declarative syntax.</db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#buttons-prop">buttons</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick-controls2-buttongroup.xml#group-attached-prop">group</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
