<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QWebEngineDownloadItem Class</db:title>
<db:productname>QtWebEngine</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt WebEngine Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link> class provides information about a download.</db:para>
<db:para>This class was introduced in Qt 5.5.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QWebEngineDownloadItem</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.5</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += webenginewidgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qobject.xml" xlink:role="class">QObject</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link> models a download throughout its life cycle, starting with a pending download request and finishing with a completed download. It can be used, for example, to get information about new downloads, to monitor progress, and to pause, resume, and cancel downloads.</db:para>
<db:para>Downloads are usually triggered by user interaction on a web page. It is the <db:link xlink:href="qwebengineprofile.xml">QWebEngineProfile</db:link>'s responsibility to notify the application of new download requests, which it does by emitting the <db:link xlink:href="qwebengineprofile.xml#downloadRequested">downloadRequested</db:link> signal together with a newly created <db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link>. The application can then examine this item and decide whether to accept it or not. A signal handler must explicitly call <db:link xlink:href="qwebenginedownloaditem.xml#accept">accept</db:link>() on the item for Qt WebEngine to actually start downloading and writing data to disk. If no signal handler calls <db:link xlink:href="qwebenginedownloaditem.xml#accept">accept</db:link>(), then the download request will be automatically rejected and nothing will be written to disk.</db:para>
<db:note>
<db:para>Some properties, like the <db:link xlink:href="qwebenginedownloaditem.xml#path">path</db:link> under which the file will be saved, can only be changed before calling <db:link xlink:href="qwebenginedownloaditem.xml#accept">accept</db:link>().</db:para>
</db:note>
<db:section xml:id="object-life-cycle">
<db:title>Object Life Cycle</db:title>
<db:para>All items are guaranteed to be valid during the emission of the <db:link xlink:href="qwebengineprofile.xml#downloadRequested">downloadRequested</db:link> signal. If <db:link xlink:href="qwebenginedownloaditem.xml#accept">accept</db:link>() is <db:emphasis>not</db:emphasis> called by any signal handler, then the item will be deleted <db:emphasis>immediately</db:emphasis> after signal emission. This means that the application <db:emphasis role="bold">must not</db:emphasis> keep references to rejected download items. It also means the application should not use a queued connection to this signal.</db:para>
<db:para>If <db:link xlink:href="qwebenginedownloaditem.xml#accept">accept</db:link>() <db:emphasis>is</db:emphasis> called by a signal handler, then the <db:link xlink:href="qwebengineprofile.xml">QWebEngineProfile</db:link> will take ownership of the item. However, it is safe for the application to delete the item at any time, except during the handling of the <db:link xlink:href="qwebengineprofile.xml#downloadRequested">downloadRequested</db:link> signal. The <db:link xlink:href="qwebengineprofile.xml">QWebEngineProfile</db:link> being a long-lived object, it is in fact recommended that the application delete any items it is no longer interested in.</db:para>
<db:note>
<db:para>Deleting an item will also automatically cancel a download since 5.12.2, but it is recommended to cancel manually before deleting for portability.</db:para>
</db:note>
</db:section>
<db:section xml:id="web-page-downloads">
<db:title>Web Page Downloads</db:title>
<db:para>In addition to normal file downloads, which consist simply of retrieving some raw bytes from the network and writing them to disk, Qt WebEngine also supports saving complete web pages, which involves parsing the page's HTML, downloading any dependent resources, and potentially packaging everything into a special file format (<db:link xlink:href="qwebenginedownloaditem.xml#savePageFormat">savePageFormat</db:link>). To check if a download is for a file or a web page, use <db:link xlink:href="qwebenginedownloaditem.xml#isSavePageDownload">isSavePageDownload</db:link>.</db:para>
</db:section>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebengineprofile.xml">QWebEngineProfile</db:link></db:member>
<db:member><db:link xlink:href="qwebengineprofile.xml#downloadRequested">QWebEngineProfile::downloadRequested</db:link></db:member>
<db:member><db:link xlink:href="qwebenginepage.xml#download">QWebEnginePage::download</db:link></db:member>
<db:member><db:link xlink:href="qwebenginepage.xml#save">QWebEnginePage::save</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="DownloadInterruptReason-enum">
<db:title>[since 5.9] enum QWebEngineDownloadItem::DownloadInterruptReason</db:title>
<db:enumsynopsis>
<db:enumname>DownloadInterruptReason</db:enumname>
<db:enumitem>
<db:enumidentifier>NoReason</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FileFailed</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FileAccessDenied</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FileNoSpace</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FileNameTooLong</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FileTooLarge</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FileVirusInfected</db:enumidentifier>
<db:enumvalue>7</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FileTransientError</db:enumidentifier>
<db:enumvalue>10</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FileBlocked</db:enumidentifier>
<db:enumvalue>11</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FileSecurityCheckFailed</db:enumidentifier>
<db:enumvalue>12</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FileTooShort</db:enumidentifier>
<db:enumvalue>13</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>FileHashMismatch</db:enumidentifier>
<db:enumvalue>14</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NetworkFailed</db:enumidentifier>
<db:enumvalue>20</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NetworkTimeout</db:enumidentifier>
<db:enumvalue>21</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NetworkDisconnected</db:enumidentifier>
<db:enumvalue>22</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NetworkServerDown</db:enumidentifier>
<db:enumvalue>23</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>NetworkInvalidRequest</db:enumidentifier>
<db:enumvalue>24</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ServerFailed</db:enumidentifier>
<db:enumvalue>30</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ServerBadContent</db:enumidentifier>
<db:enumvalue>33</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ServerUnauthorized</db:enumidentifier>
<db:enumvalue>34</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ServerCertProblem</db:enumidentifier>
<db:enumvalue>35</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ServerForbidden</db:enumidentifier>
<db:enumvalue>36</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>ServerUnreachable</db:enumidentifier>
<db:enumvalue>37</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>UserCanceled</db:enumidentifier>
<db:enumvalue>40</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>Describes the reason why a download was interrupted:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::NoReason</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Unknown reason or not interrupted.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::FileFailed</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>General file operation failure.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::FileAccessDenied</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The file cannot be written locally, due to access restrictions.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::FileNoSpace</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Insufficient space on the target drive.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::FileNameTooLong</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para>The directory or file name is too long.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::FileTooLarge</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para>The file size exceeds the file system limitation.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::FileVirusInfected</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para>The file is infected with a virus.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::FileTransientError</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para>Temporary problem (for example the file is in use, out of memory, or too many files are opened at once).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::FileBlocked</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para>The file was blocked due to local policy.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::FileSecurityCheckFailed</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para>An attempt to check the safety of the download failed due to unexpected reasons.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::FileTooShort</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para>An attempt was made to seek past the end of a file when opening a file (as part of resuming a previously interrupted download).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::FileHashMismatch</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para>The partial file did not match the expected hash.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::NetworkFailed</db:code></db:para>
</db:td>
<db:td><db:code>20</db:code></db:td>
<db:td>
<db:para>General network failure.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::NetworkTimeout</db:code></db:para>
</db:td>
<db:td><db:code>21</db:code></db:td>
<db:td>
<db:para>The network operation has timed out.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::NetworkDisconnected</db:code></db:para>
</db:td>
<db:td><db:code>22</db:code></db:td>
<db:td>
<db:para>The network connection has been terminated.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::NetworkServerDown</db:code></db:para>
</db:td>
<db:td><db:code>23</db:code></db:td>
<db:td>
<db:para>The server has gone down.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::NetworkInvalidRequest</db:code></db:para>
</db:td>
<db:td><db:code>24</db:code></db:td>
<db:td>
<db:para>The network request was invalid (for example, the original or redirected URL is invalid, has an unsupported scheme, or is disallowed by policy).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::ServerFailed</db:code></db:para>
</db:td>
<db:td><db:code>30</db:code></db:td>
<db:td>
<db:para>General server failure.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::ServerBadContent</db:code></db:para>
</db:td>
<db:td><db:code>33</db:code></db:td>
<db:td>
<db:para>The server does not have the requested data.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::ServerUnauthorized</db:code></db:para>
</db:td>
<db:td><db:code>34</db:code></db:td>
<db:td>
<db:para>The server did not authorize access to the resource.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::ServerCertProblem</db:code></db:para>
</db:td>
<db:td><db:code>35</db:code></db:td>
<db:td>
<db:para>A problem with the server certificate occurred.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::ServerForbidden</db:code></db:para>
</db:td>
<db:td><db:code>36</db:code></db:td>
<db:td>
<db:para>Access forbidden by the server.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::ServerUnreachable</db:code></db:para>
</db:td>
<db:td><db:code>37</db:code></db:td>
<db:td>
<db:para>Unexpected server response (might indicate that the responding server may not be the intended server).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::UserCanceled</db:code></db:para>
</db:td>
<db:td><db:code>40</db:code></db:td>
<db:td>
<db:para>The user canceled the download.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This enum was introduced or modified in Qt 5.9.</db:para>
</db:section>
<db:section xml:id="DownloadState-enum">
<db:title>enum QWebEngineDownloadItem::DownloadState</db:title>
<db:enumsynopsis>
<db:enumname>DownloadState</db:enumname>
<db:enumitem>
<db:enumidentifier>DownloadRequested</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DownloadInProgress</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DownloadCompleted</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DownloadCancelled</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DownloadInterrupted</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the state of the download:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::DownloadRequested</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>Download has been requested, but has not been accepted yet.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::DownloadInProgress</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>Download is in progress.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::DownloadCompleted</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>Download completed successfully.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::DownloadCancelled</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Download has been cancelled.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::DownloadInterrupted</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para>Download has been interrupted (by the server or because of lost connectivity).</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
<db:section xml:id="SavePageFormat-enum">
<db:title>[since 5.7] enum QWebEngineDownloadItem::SavePageFormat</db:title>
<db:enumsynopsis>
<db:enumname>SavePageFormat</db:enumname>
<db:enumitem>
<db:enumidentifier>UnknownSaveFormat</db:enumidentifier>
<db:enumvalue>-1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SingleHtmlSaveFormat</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>CompleteHtmlSaveFormat</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>MimeHtmlSaveFormat</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum describes the format that is used to save a web page.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::UnknownSaveFormat</db:code></db:para>
</db:td>
<db:td><db:code>-1</db:code></db:td>
<db:td>
<db:para>This is not a request for downloading a complete web page.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::SingleHtmlSaveFormat</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The page is saved as a single HTML page. Resources such as images are not saved.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::CompleteHtmlSaveFormat</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The page is saved as a complete HTML page, for example a directory containing the single HTML page and the resources.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::MimeHtmlSaveFormat</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The page is saved as a complete web page in the MIME HTML format.</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This enum was introduced or modified in Qt 5.7.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="accept">
<db:title>void QWebEngineDownloadItem::accept()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>accept</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void accept()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Accepts the current download request, which will start the download.</db:para>
<db:para>If the item is in the <db:link xlink:href="qwebenginedownloaditem.xml#DownloadState-enum">DownloadRequested</db:link> state, then it will transition into the <db:link xlink:href="qwebenginedownloaditem.xml#DownloadState-enum">DownloadInProgress</db:link> state and the downloading will begin. If the item is in any other state, then nothing will happen.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#finished">finished</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#stateChanged">stateChanged</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="cancel">
<db:title>void QWebEngineDownloadItem::cancel()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>cancel</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void cancel()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Cancels the current download.</db:para>
<db:para>If the item is in the <db:link xlink:href="qwebenginedownloaditem.xml#DownloadState-enum">DownloadInProgress</db:link> state, then it will transition into the <db:link xlink:href="qwebenginedownloaditem.xml#DownloadState-enum">DownloadCancelled</db:link> state, the downloading will stop, and partially downloaded files will be deleted from disk.</db:para>
<db:para>If the item is in the <db:link xlink:href="qwebenginedownloaditem.xml#DownloadState-enum">DownloadCompleted</db:link> state, then nothing will happen. If the item is in any other state, then it will transition into the <db:link xlink:href="qwebenginedownloaditem.xml#DownloadState-enum">DownloadCancelled</db:link> state without further effect.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#finished">finished</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#stateChanged">stateChanged</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="downloadProgress">
<db:title>void QWebEngineDownloadItem::downloadProgress(qint64 <db:emphasis>bytesReceived</db:emphasis>, qint64 <db:emphasis>bytesTotal</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>downloadProgress</db:methodname>
<db:methodparam>
<db:type>qint64</db:type>
<db:parameter>bytesReceived</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>qint64</db:type>
<db:parameter>bytesTotal</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void downloadProgress(qint64 bytesReceived, qint64 bytesTotal)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted to indicate the progress of the download request.</db:para>
<db:para>The <db:code role="parameter">bytesReceived</db:code> parameter indicates the number of bytes received, while <db:code role="parameter">bytesTotal</db:code> indicates the total number of bytes expected to be downloaded. If the size of the file to be downloaded is not known, <db:code>bytesTotal</db:code> will be 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#totalBytes">totalBytes</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#receivedBytes">receivedBytes</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="finished">
<db:title>void QWebEngineDownloadItem::finished()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>finished</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void finished()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the download finishes.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#state">state</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#isFinished">isFinished</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="id">
<db:title>quint32 QWebEngineDownloadItem::id() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>quint32</db:type>
<db:methodname>id</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">quint32 id() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the download item's ID.</db:para>
</db:section>
<db:section xml:id="interruptReason">
<db:title>[since 5.9] QWebEngineDownloadItem::DownloadInterruptReason QWebEngineDownloadItem::interruptReason() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QWebEngineDownloadItem::DownloadInterruptReason</db:type>
<db:methodname>interruptReason</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QWebEngineDownloadItem::DownloadInterruptReason interruptReason() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the reason why the download was interrupted.</db:para>
<db:para>This function was introduced in Qt 5.9.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#interruptReasonString">interruptReasonString</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="interruptReasonString">
<db:title>[since 5.9] QString QWebEngineDownloadItem::interruptReasonString() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>interruptReasonString</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString interruptReasonString() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a human-readable description of the reason for interrupting the download.</db:para>
<db:para>This function was introduced in Qt 5.9.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#interruptReason">interruptReason</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isFinished">
<db:title>bool QWebEngineDownloadItem::isFinished() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isFinished</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isFinished() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns whether this download is finished (completed, cancelled, or non-resumable interrupted state).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#finished">finished</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#state">state</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isPaused">
<db:title>bool QWebEngineDownloadItem::isPaused() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isPaused</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isPaused() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns whether this download is paused.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#pause">pause</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#resume">resume</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isPausedChanged">
<db:title>[since 5.10] void QWebEngineDownloadItem::isPausedChanged(bool <db:emphasis>isPaused</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>isPausedChanged</db:methodname>
<db:methodparam>
<db:type>bool</db:type>
<db:parameter>isPaused</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void isPausedChanged(bool isPaused)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted whenever <db:code role="parameter">isPaused</db:code> changes.</db:para>
<db:para>This function was introduced in Qt 5.10.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#pause">pause</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#isPaused">isPaused</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isSavePageDownload">
<db:title>[since 5.11] bool QWebEngineDownloadItem::isSavePageDownload() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>bool</db:type>
<db:methodname>isSavePageDownload</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">bool isSavePageDownload() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns <db:code>true</db:code> if this is a download request for saving a web page.</db:para>
<db:para>This function was introduced in Qt 5.11.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#savePageFormat">savePageFormat</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#setSavePageFormat">setSavePageFormat</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="mimeType">
<db:title>[since 5.6] QString QWebEngineDownloadItem::mimeType() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>mimeType</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString mimeType() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the MIME type of the download.</db:para>
<db:para>This function was introduced in Qt 5.6.</db:para>
</db:section>
<db:section xml:id="page">
<db:title>[since 5.12] QWebEnginePage *QWebEngineDownloadItem::page() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QWebEnginePage *</db:type>
<db:methodname>page</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QWebEnginePage * page() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the page the download was requested on. If the download was not triggered by content in a page, <db:code>nullptr</db:code> is returned.</db:para>
<db:para>This function was introduced in Qt 5.12.</db:para>
</db:section>
<db:section xml:id="path">
<db:title>QString QWebEngineDownloadItem::path() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QString</db:type>
<db:methodname>path</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QString path() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the full target path where data is being downloaded to.</db:para>
<db:para>The path includes the file name. The default suggested path is the standard download location and file name is deduced not to overwrite already existing files.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#setPath">setPath</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="pause">
<db:title>[since 5.10] void QWebEngineDownloadItem::pause()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>pause</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void pause()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Pauses the download.</db:para>
<db:para>Has no effect if the state is not <db:link xlink:href="qwebenginedownloaditem.xml#DownloadState-enum">DownloadInProgress</db:link>. Does not change the state.</db:para>
<db:para>This function was introduced in Qt 5.10.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#resume">resume</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#isPaused">isPaused</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="receivedBytes">
<db:title>qint64 QWebEngineDownloadItem::receivedBytes() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>qint64</db:type>
<db:methodname>receivedBytes</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qint64 receivedBytes() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the amount of data in bytes that has been downloaded so far.</db:para>
<db:para><db:code>-1</db:code> means the size is unknown.</db:para>
</db:section>
<db:section xml:id="resume">
<db:title>[since 5.10] void QWebEngineDownloadItem::resume()</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>resume</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void resume()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Resumes the current download if it was paused or interrupted.</db:para>
<db:para>Has no effect if the state is not <db:link xlink:href="qwebenginedownloaditem.xml#DownloadState-enum">DownloadInProgress</db:link> or <db:link xlink:href="qwebenginedownloaditem.xml#DownloadState-enum">DownloadInterrupted</db:link>. Does not change the state.</db:para>
<db:para>This function was introduced in Qt 5.10.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#pause">pause</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#isPaused">isPaused</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#state">state</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="savePageFormat">
<db:title>[since 5.7] QWebEngineDownloadItem::SavePageFormat QWebEngineDownloadItem::savePageFormat() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QWebEngineDownloadItem::SavePageFormat</db:type>
<db:methodname>savePageFormat</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QWebEngineDownloadItem::SavePageFormat savePageFormat() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the format the web page will be saved in if this is a download request for a web page.</db:para>
<db:para>This function was introduced in Qt 5.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#setSavePageFormat">setSavePageFormat</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#isSavePageDownload">isSavePageDownload</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setPath">
<db:title>void QWebEngineDownloadItem::setPath(QString <db:emphasis>path</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setPath</db:methodname>
<db:methodparam>
<db:type>QString</db:type>
<db:parameter>path</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setPath(QString path)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the full target path to download the file to.</db:para>
<db:para>The <db:code role="parameter">path</db:code> should also include the file name. The download path can only be set in response to the <db:link xlink:href="qwebengineprofile.xml#downloadRequested">QWebEngineProfile::downloadRequested</db:link>() signal before the download is accepted. Past that point, this function has no effect on the download item's state.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#path">path</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSavePageFormat">
<db:title>[since 5.7] void QWebEngineDownloadItem::setSavePageFormat(QWebEngineDownloadItem::SavePageFormat <db:emphasis>format</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setSavePageFormat</db:methodname>
<db:methodparam>
<db:type>QWebEngineDownloadItem::SavePageFormat</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setSavePageFormat(QWebEngineDownloadItem::SavePageFormat format)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the <db:code role="parameter">format</db:code> the web page will be saved in if this is a download request for a web page.</db:para>
<db:para>This function was introduced in Qt 5.7.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#savePageFormat">savePageFormat</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#isSavePageDownload">isSavePageDownload</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="state">
<db:title>QWebEngineDownloadItem::DownloadState QWebEngineDownloadItem::state() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QWebEngineDownloadItem::DownloadState</db:type>
<db:methodname>state</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QWebEngineDownloadItem::DownloadState state() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the download item's current state.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#DownloadState-enum">DownloadState</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="stateChanged">
<db:title>void QWebEngineDownloadItem::stateChanged(QWebEngineDownloadItem::DownloadState <db:emphasis>state</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>stateChanged</db:methodname>
<db:methodparam>
<db:type>QWebEngineDownloadItem::DownloadState</db:type>
<db:parameter>state</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void stateChanged(QWebEngineDownloadItem::DownloadState state)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted whenever the download's <db:code role="parameter">state</db:code> changes.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#state">state</db:link>()</db:member>
<db:member><db:link xlink:href="qwebenginedownloaditem.xml#DownloadState-enum">DownloadState</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="totalBytes">
<db:title>qint64 QWebEngineDownloadItem::totalBytes() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>qint64</db:type>
<db:methodname>totalBytes</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">qint64 totalBytes() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the the total amount of data to download in bytes.</db:para>
<db:para><db:code>-1</db:code> means the size is unknown.</db:para>
</db:section>
<db:section xml:id="url">
<db:title>QUrl QWebEngineDownloadItem::url() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QUrl</db:type>
<db:methodname>url</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QUrl url() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns the download's origin URL.</db:para>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for QWebEngineDownloadItem</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-member-type-documentation">
<db:title>Obsolete Member Type Documentation</db:title>
<db:section xml:id="DownloadType-enum">
<db:title>[since 5.8] enum QWebEngineDownloadItem::DownloadType</db:title>
<db:enumsynopsis>
<db:enumname>DownloadType</db:enumname>
<db:enumitem>
<db:enumidentifier>Attachment</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>DownloadAttribute</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>UserRequested</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SavePage</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Describes the requested download's type.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::Attachment</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The web server's response includes a <db:code>Content-Disposition</db:code> header with the <db:code>attachment</db:code> directive. If <db:code>Content-Disposition</db:code> is present in the reply, the web server is indicating that the client should prompt the user to save the content regardless of the content type. See <db:link xlink:href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1">RFC 2616 section 19.5.1</db:link> for details.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::DownloadAttribute</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The user clicked a link with the <db:code>download</db:code> attribute.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::UserRequested</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The user initiated the download, for example by selecting a web action.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qwebenginedownloaditem.xml">QWebEngineDownloadItem</db:link></db:emphasis>::SavePage</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>Saving of the current page was requested (for example by the <db:link xlink:href="qwebenginepage.xml#WebAction-enum">QWebEnginePage::SavePage</db:link> web action).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>This enum was introduced or modified in Qt 5.8.</db:para>
</db:section>
</db:section>
<db:section xml:id="obsolete-member-function-documentation">
<db:title>Obsolete Member Function Documentation</db:title>
<db:section xml:id="type">
<db:title>[since 5.8] QWebEngineDownloadItem::DownloadType QWebEngineDownloadItem::type() const</db:title>
<db:methodsynopsis>
<db:modifier>const</db:modifier>
<db:type>QWebEngineDownloadItem::DownloadType</db:type>
<db:methodname>type</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QWebEngineDownloadItem::DownloadType type() const</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">deprecated</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
<db:para>Returns the requested download's type.</db:para>
<db:note>
<db:para>This property works unreliably, except for <db:code>SavePage</db:code> downloads. Use <db:link xlink:href="qwebenginedownloaditem.xml#isSavePageDownload">isSavePageDownload</db:link>() instead.</db:para>
</db:note>
<db:para>This function was introduced in Qt 5.8.</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
