<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>Using PeakCAN Plugin</db:title>
<db:productname>QtSerialBus</db:productname>
<db:edition>Qt 5.12.12 Reference Documentation</db:edition>
<db:titleabbrev>Qt Serial Bus Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Overview of how to use the PeakCAN plugin.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:para>The PeakCAN plugin encapsulates the low-level API to work with the <db:link xlink:href="http://www.peak-system.com/">PEAK-System</db:link> CAN adapters.</db:para>
<db:para>This plugin requires the PCAN device drivers and the PCAN-Basic library version 4.0.0 or higher. Supported platforms are Windows (pcanbasic.dll) and Linux (libpcanbasic.so).</db:para>
<db:section xml:id="creating-can-bus-devices">
<db:title>Creating CAN Bus Devices</db:title>
<db:para>At first it is necessary to check that <db:link xlink:href="qcanbus.xml">QCanBus</db:link> provides the desired plugin:</db:para>
<db:programlisting language="cpp">if (QCanBus::instance()-&amp;gt;plugins().contains(QStringLiteral(&quot;peakcan&quot;))) {
    // plugin available
}
</db:programlisting>
<db:para>Where <db:emphasis>peakcan</db:emphasis> is the plugin name.</db:para>
<db:para>Next, a connection to a specific interface can be established:</db:para>
<db:programlisting language="cpp">QString errorString;
QCanBusDevice *device = QCanBus::instance()-&amp;gt;createDevice(
    QStringLiteral(&quot;peakcan&quot;), QStringLiteral(&quot;usb0&quot;), &amp;amp;errorString);
if (!device) {
    // Error handling goes here
    qDebug &amp;lt;&amp;lt; errorString;
} else {
    device-&amp;gt;connectDevice();
}
</db:programlisting>
<db:para>Where <db:emphasis>usb0</db:emphasis> is the active CAN interface name. The PeakCAN plugin supports 16 USB interfaces from <db:emphasis>usb0</db:emphasis> to <db:emphasis>usb15</db:emphasis> and 16 PCI interfaces from <db:emphasis>pci0</db:emphasis> to <db:emphasis>pci15</db:emphasis>. The <db:link xlink:href="qcanbus.xml#availableDevices">availableDevices</db:link>() method returns a list of currently available devices.</db:para>
<db:note>
<db:para>Only the USB and PCI adapters are currently supported by this plugin.</db:para>
</db:note>
<db:para>The device is now open for writing and reading CAN frames:</db:para>
<db:programlisting language="cpp">QCanBusFrame frame;
frame.setFrameId(8);
QByteArray payload(&quot;A36E&quot;);
frame.setPayload(payload);
device-&amp;gt;writeFrame(frame);
</db:programlisting>
<db:para>The reading can be done using the <db:link xlink:href="qcanbusdevice.xml#readFrame">readFrame</db:link>() method. The <db:link xlink:href="qcanbusdevice.xml#framesReceived">framesReceived</db:link>() signal is emitted when at least one new frame is available for reading:</db:para>
<db:programlisting language="cpp">QCanBusFrame frame = device-&amp;gt;readFrame();
</db:programlisting>
<db:para>PeakCAN supports the following configurations that can be controlled through <db:link xlink:href="qcanbusdevice.xml#setConfigurationParameter">setConfigurationParameter</db:link>():</db:para>
<db:informaltable style="generic">
<db:thead>
<db:tr>
<db:th>
<db:para>Configuration parameter key</db:para>
</db:th>
<db:th>
<db:para>Description</db:para>
</db:th>
</db:tr>
</db:thead>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qcanbusdevice.xml#ConfigurationKey-enum">QCanBusDevice::CanFdKey</db:link></db:para>
</db:td>
<db:td>
<db:para>This configuration option determines whether CAN FD frames may be sent or received. By default, this option is disabled. CAN FD compatible hardware is needed to enable this option.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qcanbusdevice.xml#ConfigurationKey-enum">QCanBusDevice::BitRateKey</db:link></db:para>
</db:td>
<db:td>
<db:para>Determines the bit rate of the CAN bus connection. The following bit rates are supported: 5000, 10000, 20000, 33000, 47000, 50000, 83000, 95000, 100000, 125000, 250000, 500000, 800000, 1000000. If the <db:link xlink:href="qcanbusdevice.xml#ConfigurationKey-enum">QCanBusDevice::CanFdKey</db:link> option is enabled, the bit rates are limited to 125000, 250000, 500000, or 1000000. Note that this configuration parameter can only be adjusted while the <db:link xlink:href="qcanbusdevice.xml">QCanBusDevice</db:link> is not connected.</db:para>
</db:td>
</db:tr>
<db:tr valign="top">
<db:td>
<db:para><db:link xlink:href="qcanbusdevice.xml#ConfigurationKey-enum">QCanBusDevice::DataBitRateKey</db:link></db:para>
</db:td>
<db:td>
<db:para>Determines the data bit rate of the CAN FD bus connection. The <db:link xlink:href="qcanbusdevice.xml#ConfigurationKey-enum">QCanBusDevice::CanFdKey</db:link> option must be enabled to allow setting this option. Possible data bitrates are 2000000, 4000000, 8000000, or 10000000. Note that this configuration parameter can only be adjusted while the <db:link xlink:href="qcanbusdevice.xml">QCanBusDevice</db:link> is not connected.</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:article>
