<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QDBusVariant Class</db:title>
<db:productname>QtDBus</db:productname>
<db:edition>Qt 6.9.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt D-Bus Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qdbusvariant.xml">QDBusVariant</db:link> class enables the programmer to identify the variant type provided by the D-Bus typesystem.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QDBusVariant</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS DBus)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::DBus)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += dbus</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A D-Bus function that takes an integer, a D-Bus variant and a string as parameters can be called with the following argument list (see <db:link xlink:href="qdbusmessage.xml#setArguments">QDBusMessage::setArguments</db:link>()):</db:para>
<db:programlisting language="cpp">    QList&lt;QVariant&gt; arguments;
    arguments &lt;&lt; QVariant(42) &lt;&lt; QVariant::fromValue(QDBusVariant(43)) &lt;&lt; QVariant(&quot;hello&quot;);
    myDBusMessage.setArguments(arguments);
</db:programlisting>
<db:para>When a D-Bus function returns a D-Bus variant, it can be retrieved as follows:</db:para>
<db:programlisting language="cpp">    // call a D-Bus function that returns a D-Bus variant
    QVariant v = callMyDBusFunction();
    // retrieve the D-Bus variant
    QDBusVariant dbusVariant = qvariant_cast&lt;QDBusVariant&gt;(v);
    // retrieve the actual value stored in the D-Bus variant
    QVariant result = dbusVariant.variant();
</db:programlisting>
<db:para>The <db:link xlink:href="qvariant.xml">QVariant</db:link> within a <db:link xlink:href="qdbusvariant.xml">QDBusVariant</db:link> is required to distinguish between a normal D-Bus value and a value within a D-Bus variant.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdbustypesystem.xml">The Qt D-Bus Type System</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QDBusVariant">
<db:title>[noexcept] QDBusVariant::QDBusVariant()</db:title>
<db:para>Constructs a new D-Bus variant.</db:para>
</db:section>
<db:section xml:id="QDBusVariant-1">
<db:title>[explicit] QDBusVariant::QDBusVariant(const QVariant &amp;<db:emphasis>variant</db:emphasis>)</db:title>
<db:para>Constructs a new D-Bus variant from the given Qt <db:code role="parameter">variant</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdbusvariant.xml#setVariant">setVariant</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setVariant">
<db:title>void QDBusVariant::setVariant(const QVariant &amp;<db:emphasis>variant</db:emphasis>)</db:title>
<db:para>Assigns the value of the given Qt <db:code role="parameter">variant</db:code> to this D-Bus variant.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdbusvariant.xml#variant">variant</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="swap">
<db:title>[noexcept] void QDBusVariant::swap(QDBusVariant &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Swaps this variant with <db:code role="parameter">other</db:code>. This operation is very fast and never fails.</db:para>
</db:section>
<db:section xml:id="variant">
<db:title>QVariant QDBusVariant::variant() const</db:title>
<db:para>Returns this D-Bus variant as a <db:link xlink:href="qvariant.xml">QVariant</db:link> object.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qdbusvariant.xml#setVariant">setVariant</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
