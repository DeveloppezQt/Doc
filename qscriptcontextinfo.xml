<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QScriptContextInfo Class</db:title>
<db:productname>QtScript</db:productname>
<db:edition>Qt 5.8.0 Reference Documentation</db:edition>
<db:titleabbrev>QtScript Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link> class provides additional information about a <db:link xlink:href="qscriptcontext.xml">QScriptContext</db:link>.</db:para>
<db:para>This class was introduced in Qt 4.4.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QScriptContextInfo</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 4.4</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += script</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QScriptContextInfo is part of <db:simplelist><db:member><db:link xlink:href="script.xml">Scripting Classes and Overviews</db:link></db:member></db:simplelist>
</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link> is typically used for debugging purposes. It can provide information about the code being executed, such as the type of the called function, and the original source code location of the current statement.</db:para>
<db:para>If the called function is executing Qt Script code, you can obtain the script location with the functions <db:link xlink:href="qscriptcontextinfo.xml#fileName">fileName</db:link>() and <db:link xlink:href="qscriptcontextinfo.xml#lineNumber">lineNumber</db:link>().</db:para>
<db:para>You can obtain the starting line number and ending line number of a Qt Script function definition with <db:link xlink:href="qscriptcontextinfo.xml#functionStartLineNumber">functionStartLineNumber</db:link>() and <db:link xlink:href="qscriptcontextinfo.xml#functionEndLineNumber">functionEndLineNumber</db:link>(), respectively.</db:para>
<db:para>For Qt Script functions and Qt methods (e.g. slots), you can call <db:link xlink:href="qscriptcontextinfo.xml#functionParameterNames">functionParameterNames</db:link>() to get the names of the formal parameters of the function.</db:para>
<db:para>For Qt methods and Qt property accessors, you can obtain the index of the underlying <db:link xlink:href="qmetamethod.xml">QMetaMethod</db:link> or <db:link xlink:href="qmetaproperty.xml">QMetaProperty</db:link> by calling <db:link xlink:href="qscriptcontextinfo.xml#functionMetaIndex">functionMetaIndex</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscriptcontext.xml">QScriptContext</db:link></db:member>
<db:member><db:link xlink:href="qscriptengineagent.xml">QScriptEngineAgent</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="FunctionType-enum">
<db:title>enum QScriptContextInfo::FunctionType</db:title>
<db:para>This enum specifies the type of function being called.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link></db:emphasis>::ScriptFunction</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para>The function is a Qt Script function, i.e. it was defined through a call to <db:link xlink:href="qscriptengine.xml#evaluate">QScriptEngine::evaluate</db:link>().</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link></db:emphasis>::QtFunction</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>The function is a Qt function (a signal, slot or method).</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link></db:emphasis>::QtPropertyFunction</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para>The function is a Qt property getter or setter.</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link></db:emphasis>::NativeFunction</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para>The function is a built-in Qt Script function, or it was defined through a call to <db:link xlink:href="qscriptengine.xml#newFunction">QScriptEngine::newFunction</db:link>().</db:para>
</db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QScriptContextInfo">
<db:title>QScriptContextInfo::QScriptContextInfo()</db:title>
<db:para>Constructs a null <db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscriptcontextinfo.xml#isNull">isNull</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QScriptContextInfo-1">
<db:title>QScriptContextInfo::QScriptContextInfo(const QScriptContext *<db:emphasis>context</db:emphasis>)</db:title>
<db:para>Constructs a new <db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link> from the given <db:code role="parameter">context</db:code>.</db:para>
<db:para>The relevant information is extracted from the <db:code role="parameter">context</db:code> at construction time; i.e. if you continue script execution in the <db:code role="parameter">context</db:code>, the new state of the context will not be reflected in a previously created <db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link>.</db:para>
</db:section>
<db:section xml:id="QScriptContextInfo-2">
<db:title>QScriptContextInfo::QScriptContextInfo(const QScriptContextInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Constructs a new <db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link> from the <db:code role="parameter">other</db:code> info.</db:para>
</db:section>
<db:section xml:id="dtor.QScriptContextInfo">
<db:title>[noexcept] QScriptContextInfo::~QScriptContextInfo()</db:title>
<db:para>Destroys the <db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link>.</db:para>
</db:section>
<db:section xml:id="fileName">
<db:title>QString QScriptContextInfo::fileName() const</db:title>
<db:para>Returns the name of the file where the code being executed was defined, if available; otherwise returns an empty string.</db:para>
<db:para>For Qt Script code, this function returns the fileName argument that was passed to <db:link xlink:href="qscriptengine.xml#evaluate">QScriptEngine::evaluate</db:link>().</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscriptcontextinfo.xml#lineNumber">lineNumber</db:link>()</db:member>
<db:member><db:link xlink:href="qscriptcontextinfo.xml#functionName">functionName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="functionEndLineNumber">
<db:title>int QScriptContextInfo::functionEndLineNumber() const</db:title>
<db:para>Returns the line number where the definition of the called function ends, or -1 if the line number is not available.</db:para>
<db:para>The ending line number is only available if the <db:link xlink:href="qscriptcontextinfo.xml#functionType">functionType</db:link>() is <db:link xlink:href="qscriptcontextinfo.xml#FunctionType-enum">ScriptFunction</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscriptcontextinfo.xml#functionStartLineNumber">functionStartLineNumber</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="functionMetaIndex">
<db:title>int QScriptContextInfo::functionMetaIndex() const</db:title>
<db:para>Returns the meta index of the called function, or -1 if the meta index is not available.</db:para>
<db:para>The meta index is only available if the <db:link xlink:href="qscriptcontextinfo.xml#functionType">functionType</db:link>() is <db:link xlink:href="qscriptcontextinfo.xml#FunctionType-enum">QtFunction</db:link> or <db:link xlink:href="qscriptcontextinfo.xml#FunctionType-enum">QtPropertyFunction</db:link>. For <db:link xlink:href="qscriptcontextinfo.xml#FunctionType-enum">QtFunction</db:link>, the meta index can be passed to <db:link xlink:href="qmetaobject.xml#method">QMetaObject::method</db:link>() to obtain the corresponding method definition; for <db:link xlink:href="qscriptcontextinfo.xml#FunctionType-enum">QtPropertyFunction</db:link>, the meta index can be passed to <db:link xlink:href="qmetaobject.xml#property">QMetaObject::property</db:link>() to obtain the corresponding property definition.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscriptcontext.xml#thisObject">QScriptContext::thisObject</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="functionName">
<db:title>QString QScriptContextInfo::functionName() const</db:title>
<db:para>Returns the name of the called function, or an empty string if the name is not available.</db:para>
<db:para>For script functions of type <db:link xlink:href="qscriptcontextinfo.xml#FunctionType-enum">QtPropertyFunction</db:link>, this function always returns the name of the property; you can use <db:link xlink:href="qscriptcontext.xml#argumentCount">QScriptContext::argumentCount</db:link>() to differentiate between reads and writes.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscriptcontextinfo.xml#fileName">fileName</db:link>()</db:member>
<db:member><db:link xlink:href="qscriptcontextinfo.xml#functionType">functionType</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="functionParameterNames">
<db:title>QStringList QScriptContextInfo::functionParameterNames() const</db:title>
<db:para>Returns the names of the formal parameters of the called function, or an empty <db:link xlink:href="qstringlist.xml">QStringList</db:link> if the parameter names are not available.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscriptcontext.xml#argument">QScriptContext::argument</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="functionStartLineNumber">
<db:title>int QScriptContextInfo::functionStartLineNumber() const</db:title>
<db:para>Returns the line number where the definition of the called function starts, or -1 if the line number is not available.</db:para>
<db:para>The starting line number is only available if the <db:link xlink:href="qscriptcontextinfo.xml#functionType">functionType</db:link>() is <db:link xlink:href="qscriptcontextinfo.xml#FunctionType-enum">ScriptFunction</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscriptcontextinfo.xml#functionEndLineNumber">functionEndLineNumber</db:link>()</db:member>
<db:member><db:link xlink:href="qscriptcontextinfo.xml#fileName">fileName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="functionType">
<db:title>QScriptContextInfo::FunctionType QScriptContextInfo::functionType() const</db:title>
<db:para>Returns the type of the called function.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscriptcontextinfo.xml#functionName">functionName</db:link>()</db:member>
<db:member><db:link xlink:href="qscriptcontext.xml#callee">QScriptContext::callee</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="isNull">
<db:title>bool QScriptContextInfo::isNull() const</db:title>
<db:para>Returns true if this <db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link> is null, i.e. does not contain any information.</db:para>
</db:section>
<db:section xml:id="lineNumber">
<db:title>int QScriptContextInfo::lineNumber() const</db:title>
<db:para>Returns the line number corresponding to the statement being executed, or -1 if the line number is not available.</db:para>
<db:para>The line number is only available if Qt Script code is being executed.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscriptcontextinfo.xml#columnNumber" role="deprecated">columnNumber</db:link>()</db:member>
<db:member><db:link xlink:href="qscriptcontextinfo.xml#fileName">fileName</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="scriptId">
<db:title>qint64 QScriptContextInfo::scriptId() const</db:title>
<db:para>Returns the ID of the script where the code being executed was defined, or -1 if the ID is not available (i.e. a native function is being executed).</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qscriptengineagent.xml#scriptLoad">QScriptEngineAgent::scriptLoad</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-not-eq">
<db:title>bool QScriptContextInfo::operator!=(const QScriptContextInfo &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if this <db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link> is not equal to the <db:code role="parameter">other</db:code> info, otherwise returns false.</db:para>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QScriptContextInfo &amp;QScriptContextInfo::operator=(const QScriptContextInfo &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:para>Assigns the <db:code role="parameter">other</db:code> info to this <db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link>, and returns a reference to this <db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link>.</db:para>
</db:section>
<db:section xml:id="operator-eq-eq">
<db:title>bool QScriptContextInfo::operator==(const QScriptContextInfo &amp;<db:emphasis>other</db:emphasis>) const</db:title>
<db:para>Returns true if this <db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link> is equal to the <db:code role="parameter">other</db:code> info, otherwise returns false.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="operator-lt-lt">
<db:title>[since 4.4] QDataStream &amp;operator&lt;&lt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, const QScriptContextInfo &amp;<db:emphasis>info</db:emphasis>)</db:title>
<db:para>Writes the given <db:code role="parameter">info</db:code> to the specified <db:code role="parameter">stream</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
</db:section>
<db:section xml:id="operator-gt-gt">
<db:title>[since 4.4] QDataStream &amp;operator&gt;&gt;(QDataStream &amp;<db:emphasis>stream</db:emphasis>, QScriptContextInfo &amp;<db:emphasis>info</db:emphasis>)</db:title>
<db:para>Reads a <db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link> from the specified <db:code role="parameter">stream</db:code> into the given <db:code role="parameter">info</db:code>.</db:para>
<db:para>This function was introduced in Qt 4.4.</db:para>
</db:section>
</db:section>
<db:section xml:id="obsolete">
<db:title>Obsolete Members for QScriptContextInfo</db:title>
<db:para><db:emphasis role="bold">The following members of class <db:link xlink:href="qscriptcontextinfo.xml">QScriptContextInfo</db:link> are deprecated.</db:emphasis> We strongly advise against using them in new code.</db:para>
<db:section xml:id="obsolete-member-function-documentation">
<db:title>Obsolete Member Function Documentation</db:title>
<db:section xml:id="columnNumber">
<db:title>[deprecated] int QScriptContextInfo::columnNumber() const</db:title>
<db:para>This function is deprecated. We strongly advise against using it in new code.</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
