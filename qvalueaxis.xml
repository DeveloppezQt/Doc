<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QValueAxis Class</db:title>
<db:productname>QtGraphs</db:productname>
<db:edition>Qt Graphs | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Graphs Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qvalueaxis.xml">QValueAxis</db:link> class adds values to a graph's axes.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QValueAxis</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Graphs)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Graphs)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += graphs</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qtgraphs-valueaxis.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qabstractaxis.xml" xlink:role="class">QAbstractAxis</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QValueAxis is part of <db:simplelist><db:member><db:link xlink:href="graphs-2d.xml">Qt Graphs C++ Classes for 2D</db:link></db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A value axis can be set up to show an axis line with tick marks, grid lines, and shades. The values on the axis are drawn at the positions of tick marks.</db:para>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="labelDecimals-prop">
<db:title>labelDecimals : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>labelDecimals</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">labelDecimals</db:synopsisinfo>
<db:synopsisinfo role="setter">setLabelDecimals</db:synopsisinfo>
<db:synopsisinfo role="notifier">labelDecimalsChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the number of decimals used for showing the labels. When set to -1, decimal amount is adjusted automatically based on the values range. The default value is -1.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">labelDecimals</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLabelDecimals</db:emphasis>(<db:type>int</db:type> <db:emphasis>decimals</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qvalueaxis.xml#labelDecimalsChanged">labelDecimalsChanged</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>decimals</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="labelFormat-prop">
<db:title>labelFormat : QString</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QString</db:type>
<db:varname>labelFormat</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">labelFormat</db:synopsisinfo>
<db:synopsisinfo role="setter">setLabelFormat</db:synopsisinfo>
<db:synopsisinfo role="notifier">labelFormatChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the label format of the axis.</db:para>
<db:para>The format string supports the following conversion specifiers, length modifiers, and flags provided by <db:code>printf()</db:code> in the standard C++ library: d, i, o, x, X, f, F, e, E, g, G, c.</db:para>
<db:para>The default value is empty, in which case 'f' format is used.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> <db:emphasis role="bold">labelFormat</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setLabelFormat</db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>format</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qvalueaxis.xml#labelFormatChanged">labelFormatChanged</db:link></db:emphasis>(const <db:type><db:link xlink:href="qstring.xml">QString</db:link></db:type> &amp;<db:emphasis>format</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstring.xml#asprintf">QString::asprintf</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="max-prop">
<db:title>max : qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>max</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">max</db:synopsisinfo>
<db:synopsisinfo role="setter">setMax</db:synopsisinfo>
<db:synopsisinfo role="notifier">maxChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the maximum value on the axis.</db:para>
<db:para>When setting this property, the minimum value is adjusted if necessary, to ensure that the range remains valid. The default value is 10.0</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">max</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMax</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>max</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qvalueaxis.xml#maxChanged">maxChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>max</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="min-prop">
<db:title>min : qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>min</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">min</db:synopsisinfo>
<db:synopsisinfo role="setter">setMin</db:synopsisinfo>
<db:synopsisinfo role="notifier">minChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the minimum value on the axis.</db:para>
<db:para>When setting this property, the maximum value is adjusted if necessary, to ensure that the range remains valid. The default value is 0.0</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">min</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMin</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>min</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qvalueaxis.xml#minChanged">minChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>min</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="minorTickCount-prop">
<db:title>minorTickCount : int</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>int</db:type>
<db:varname>minorTickCount</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">minorTickCount</db:synopsisinfo>
<db:synopsisinfo role="setter">setMinorTickCount</db:synopsisinfo>
<db:synopsisinfo role="notifier">minorTickCountChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the number of minor tick marks on the axis. This indicates how many grid lines are drawn between major ticks on the graph. Labels are not drawn for minor ticks. The default value is 0.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>int</db:type> <db:emphasis role="bold">minorTickCount</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setMinorTickCount</db:emphasis>(<db:type>int</db:type> <db:emphasis>count</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qvalueaxis.xml#minorTickCountChanged">minorTickCountChanged</db:link></db:emphasis>(<db:type>int</db:type> <db:emphasis>minorTickCount</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="tickAnchor-prop">
<db:title>tickAnchor : qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>tickAnchor</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">tickAnchor</db:synopsisinfo>
<db:synopsisinfo role="setter">setTickAnchor</db:synopsisinfo>
<db:synopsisinfo role="notifier">tickAnchorChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the base value where the dynamically placed tick marks and labels are started from. The default value is 0.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">tickAnchor</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTickAnchor</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>anchor</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qvalueaxis.xml#tickAnchorChanged">tickAnchorChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>tickAnchor</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="tickInterval-prop">
<db:title>tickInterval : qreal</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>qreal</db:type>
<db:varname>tickInterval</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">tickInterval</db:synopsisinfo>
<db:synopsisinfo role="setter">setTickInterval</db:synopsisinfo>
<db:synopsisinfo role="notifier">tickIntervalChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property holds the interval between dynamically placed tick marks and labels. The default value is 0, which means that intervals are automatically calculated based on the min and max range.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis role="bold">tickInterval</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setTickInterval</db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>insterval</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qvalueaxis.xml#tickIntervalChanged">tickIntervalChanged</db:link></db:emphasis>(<db:type><db:link xlink:href="qttypes.xml#qreal-typedef">qreal</db:link></db:type> <db:emphasis>tickInterval</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QValueAxis">
<db:title>[explicit] QValueAxis::QValueAxis(QObject *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QValueAxis</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QValueAxis(QObject *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs an axis object that is a child of <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QValueAxis">
<db:title>[virtual] QValueAxis::~QValueAxis()</db:title>
<db:destructorsynopsis>
<db:modifier>virtual</db:modifier>
<db:methodname>~QValueAxis</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QValueAxis()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys the object.</db:para>
</db:section>
<db:section xml:id="labelDecimalsChanged">
<db:title>void QValueAxis::labelDecimalsChanged(int <db:emphasis>decimals</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>labelDecimalsChanged</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>decimals</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">labelDecimals</db:synopsisinfo>
<db:synopsisinfo role="signature">void labelDecimalsChanged(int decimals)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the <db:code role="parameter">decimals</db:code> amount of axis labels changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qvalueaxis.xml#labelDecimals-prop">labelDecimals</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="labelFormatChanged">
<db:title>void QValueAxis::labelFormatChanged(const QString &amp;<db:emphasis>format</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>labelFormatChanged</db:methodname>
<db:methodparam>
<db:type>const QString &amp;</db:type>
<db:parameter>format</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">labelFormat</db:synopsisinfo>
<db:synopsisinfo role="signature">void labelFormatChanged(const QString &amp;format)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the <db:code role="parameter">format</db:code> of axis labels changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qvalueaxis.xml#labelFormat-prop">labelFormat</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="maxChanged">
<db:title>void QValueAxis::maxChanged(qreal <db:emphasis>max</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>maxChanged</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>max</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">max</db:synopsisinfo>
<db:synopsisinfo role="signature">void maxChanged(qreal max)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the maximum value of the axis, specified by <db:code role="parameter">max</db:code>, changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qvalueaxis.xml#max-prop">max</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="minChanged">
<db:title>void QValueAxis::minChanged(qreal <db:emphasis>min</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>minChanged</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>min</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">min</db:synopsisinfo>
<db:synopsisinfo role="signature">void minChanged(qreal min)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the minimum value of the axis, specified by <db:code role="parameter">min</db:code>, changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qvalueaxis.xml#min-prop">min</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="minorTickCountChanged">
<db:title>void QValueAxis::minorTickCountChanged(int <db:emphasis>minorTickCount</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>minorTickCountChanged</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>minorTickCount</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">minorTickCount</db:synopsisinfo>
<db:synopsisinfo role="signature">void minorTickCountChanged(int minorTickCount)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the number of minor tick marks on the axis, specified by <db:code role="parameter">minorTickCount</db:code>, changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qvalueaxis.xml#minorTickCount-prop">minorTickCount</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="rangeChanged">
<db:title>void QValueAxis::rangeChanged(qreal <db:emphasis>min</db:emphasis>, qreal <db:emphasis>max</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>rangeChanged</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>min</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>max</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void rangeChanged(qreal min, qreal max)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the minimum or maximum value of the axis, specified by <db:code role="parameter">min</db:code> and <db:code role="parameter">max</db:code>, changes.</db:para>
</db:section>
<db:section xml:id="setRange">
<db:title>void QValueAxis::setRange(qreal <db:emphasis>min</db:emphasis>, qreal <db:emphasis>max</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setRange</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>min</db:parameter>
</db:methodparam>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>max</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void setRange(qreal min, qreal max)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets the range from <db:code role="parameter">min</db:code> to <db:code role="parameter">max</db:code> on the axis. If <db:code role="parameter">min</db:code> is greater than <db:code role="parameter">max</db:code>, this function returns without making any changes.</db:para>
</db:section>
<db:section xml:id="tickAnchorChanged">
<db:title>void QValueAxis::tickAnchorChanged(qreal <db:emphasis>tickAnchor</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>tickAnchorChanged</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>tickAnchor</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">tickAnchor</db:synopsisinfo>
<db:synopsisinfo role="signature">void tickAnchorChanged(qreal tickAnchor)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the tick anchoring value, specified by <db:code role="parameter">tickAnchor</db:code>, changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qvalueaxis.xml#tickAnchor-prop">tickAnchor</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="tickIntervalChanged">
<db:title>void QValueAxis::tickIntervalChanged(qreal <db:emphasis>tickInterval</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>tickIntervalChanged</db:methodname>
<db:methodparam>
<db:type>qreal</db:type>
<db:parameter>tickInterval</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">tickInterval</db:synopsisinfo>
<db:synopsisinfo role="signature">void tickIntervalChanged(qreal tickInterval)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This signal is emitted when the tick interval value, specified by <db:code role="parameter">tickInterval</db:code>, changes.</db:para>
<db:note>
<db:para>Notifier signal for property <db:link xlink:href="qvalueaxis.xml#tickInterval-prop">tickInterval</db:link>. </db:para>
</db:note>
</db:section>
<db:section xml:id="type">
<db:title>[override virtual] QAbstractAxis::AxisType QValueAxis::type() const</db:title>
<db:methodsynopsis>
<db:modifier>virtual</db:modifier>
<db:modifier>const</db:modifier>
<db:type>QAbstractAxis::AxisType</db:type>
<db:methodname>type</db:methodname>
<db:void/>
<db:modifier>override</db:modifier>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">QAbstractAxis::AxisType type() const override</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Reimplements: <db:link xlink:href="qabstractaxis.xml#type" role="function">QAbstractAxis::type() const</db:link>.</db:para>
<db:para>Returns the type of the axis.</db:para>
</db:section>
</db:section>
</db:article>
