<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QRenderSurfaceSelector Class</db:title>
<db:subtitle>Qt3DRender::QRenderSurfaceSelector</db:subtitle>
<db:productname>Qt3D</db:productname>
<db:edition>Qt 6.3.2 Reference Documentation</db:edition>
<db:titleabbrev>Qt 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Provides a way of specifying the render surface.</db:para>
<db:para>This class was introduced in Qt 5.7.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QRenderSurfaceSelector</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 5.7</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS 3drender)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::3drender)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += 3drender</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para/>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Instantiated By</db:term>
<db:listitem>
<db:para>qml-qt3d-render-rendersurfaceselector.xml</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para><db:link xlink:href="qt3drender-qframegraphnode.xml" xlink:role="class">Qt3DRender::QFrameGraphNode</db:link></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>The <db:link xlink:href="qt3drender-qrendersurfaceselector.xml">Qt3DRender::QRenderSurfaceSelector</db:link> can be used to select the surface, where Qt3D renders the content. The surface can either be window surface or offscreen surface. The <db:link xlink:href="qt3drender-qrendersurfaceselector.xml#externalRenderTargetSize-prop">externalRenderTargetSize</db:link> is used to specify the actual size of the surface when offscreen surface is used.</db:para>
<db:para>When DPI scaling is used by the system, the logical surface size, which is used by mouse events, and the actual 'physical' size of the surface can differ. The <db:link xlink:href="qt3drender-qrendersurfaceselector.xml#surfacePixelRatio-prop">surfacePixelRatio</db:link> is the factor to convert the logical size to the physical size.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member>QWindow</db:member>
<db:member>QOffscreenSurface</db:member>
<db:member>QSurface</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="externalRenderTargetSize-prop">
<db:title>externalRenderTargetSize : QSize</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QSize</db:type>
<db:varname>externalRenderTargetSize</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">externalRenderTargetSize</db:synopsisinfo>
<db:synopsisinfo role="setter">setExternalRenderTargetSize</db:synopsisinfo>
<db:synopsisinfo role="notifier">externalRenderTargetSizeChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the size of the external render target.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QSize</db:type> <db:emphasis role="bold">externalRenderTargetSize</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qrendersurfaceselector.xml#setExternalRenderTargetSize">setExternalRenderTargetSize</db:link></db:emphasis>(const <db:type>QSize</db:type> &amp;<db:emphasis>size</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">externalRenderTargetSizeChanged</db:emphasis>(const <db:type>QSize</db:type> &amp;<db:emphasis>size</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="surface-prop">
<db:title>surface : QObject*</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>QObject*</db:type>
<db:varname>surface</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">surface</db:synopsisinfo>
<db:synopsisinfo role="setter">setSurface</db:synopsisinfo>
<db:synopsisinfo role="notifier">surfaceChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the surface</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>QObject</db:type> *<db:emphasis role="bold">surface</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold"><db:link xlink:href="qt3drender-qrendersurfaceselector.xml#setSurface">setSurface</db:link></db:emphasis>(<db:type>QObject</db:type> *<db:emphasis>surfaceObject</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">surfaceChanged</db:emphasis>(<db:type>QObject</db:type> *<db:emphasis>surface</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="surfacePixelRatio-prop">
<db:title>surfacePixelRatio : float</db:title>
<db:fieldsynopsis>
<db:modifier>(Qt property)</db:modifier>
<db:type>float</db:type>
<db:varname>surfacePixelRatio</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
<db:synopsisinfo role="getter">surfacePixelRatio</db:synopsisinfo>
<db:synopsisinfo role="setter">setSurfacePixelRatio</db:synopsisinfo>
<db:synopsisinfo role="notifier">surfacePixelRatioChanged</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the surfacePixelRatio of the surface.</db:para>
<db:para>
<db:emphasis role="bold">Access functions:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>float</db:type> <db:emphasis role="bold">surfacePixelRatio</db:emphasis>() const</db:para>
</db:listitem>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">setSurfacePixelRatio</db:emphasis>(<db:type>float</db:type> <db:emphasis>ratio</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
<db:para>
<db:emphasis role="bold">Notifier signal:
</db:emphasis>
</db:para>
<db:itemizedlist>
<db:listitem>
<db:para><db:type>void</db:type> <db:emphasis role="bold">surfacePixelRatioChanged</db:emphasis>(<db:type>float</db:type> <db:emphasis>ratio</db:emphasis>)</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QRenderSurfaceSelector">
<db:title>[explicit] QRenderSurfaceSelector::QRenderSurfaceSelector(Qt3DCore::QNode *<db:emphasis>parent</db:emphasis> = nullptr)</db:title>
<db:constructorsynopsis>
<db:methodname>QRenderSurfaceSelector</db:methodname>
<db:methodparam>
<db:type>Qt3DCore::QNode *</db:type>
<db:parameter>parent</db:parameter>
<db:initializer>nullptr</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QRenderSurfaceSelector(Qt3DCore::QNode *parent)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs <db:link xlink:href="qt3drender-qrendersurfaceselector.xml">QRenderSurfaceSelector</db:link> with given <db:code role="parameter">parent</db:code>.</db:para>
</db:section>
<db:section xml:id="setExternalRenderTargetSize">
<db:title>void QRenderSurfaceSelector::setExternalRenderTargetSize(const QSize &amp;<db:emphasis>size</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setExternalRenderTargetSize</db:methodname>
<db:methodparam>
<db:type>const QSize &amp;</db:type>
<db:parameter>size</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">externalRenderTargetSize</db:synopsisinfo>
<db:synopsisinfo role="signature">void setExternalRenderTargetSize(const QSize &amp;size)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets render target <db:code role="parameter">size</db:code> if different than underlying surface size. Tells picking the correct size.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qrendersurfaceselector.xml#externalRenderTargetSize-prop">externalRenderTargetSize</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qrendersurfaceselector.xml#externalRenderTargetSize-prop">externalRenderTargetSize</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="setSurface">
<db:title>void QRenderSurfaceSelector::setSurface(QObject *<db:emphasis>surfaceObject</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>setSurface</db:methodname>
<db:methodparam>
<db:type>QObject *</db:type>
<db:parameter>surfaceObject</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="associated-property">surface</db:synopsisinfo>
<db:synopsisinfo role="signature">void setSurface(QObject *surfaceObject)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Sets <db:code role="parameter">surfaceObject</db:code>.</db:para>
<db:note>
<db:para>Setter function for property <db:link xlink:href="qt3drender-qrendersurfaceselector.xml#surface-prop">surface</db:link>. </db:para>
</db:note>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qt3drender-qrendersurfaceselector.xml#surface-prop">surface</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
</db:article>
