<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>ParticleEmitter3D QML Type</db:title>
<db:productname>QtQuick3D</db:productname>
<db:edition>Qt Quick 3D | Commercial or GPLv3</db:edition>
<db:titleabbrev>Qt Quick 3D Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>Emitter for logical particles.</db:para>
<db:para>This type was introduced in Qt 6.2.</db:para>
</db:abstract>
<db:pubdate>2024-12-27</db:pubdate>
<db:date>2024-12-27</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Import Statement</db:term>
<db:listitem>
<db:para>import QtQuick3D.Particles3D</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Since</db:term>
<db:listitem>
<db:para>Qt 6.2</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By:</db:term>
<db:listitem>
<db:para><db:link xlink:href="qml-qtquick3d-particles3d-trailemitter3d.xml" xlink:role="">TrailEmitter3D</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherits</db:term>
<db:listitem>
<db:para>Node</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>This element emits logical particles into the <db:link xlink:href="qml-qtquick3d-particles3d-particlesystem3d.xml">ParticleSystem3D</db:link>, with the given starting attributes.</db:para>
<db:para>At least one emitter is required to have particles in the <db:link xlink:href="qml-qtquick3d-particles3d-particlesystem3d.xml">ParticleSystem3D</db:link>. There are a few different ways to control the emitting amount:</db:para>
<db:itemizedlist>
<db:listitem>
<db:para>Set the <db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#emitRate-prop">emitRate</db:link> which controls how many particles per second get emitted continuously.</db:para>
</db:listitem>
<db:listitem>
<db:para>Add <db:link xlink:href="qml-qtquick3d-particles3d-emitburst3d.xml">EmitBurst3D</db:link> elements into <db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#emitBursts-prop">emitBursts</db:link> property to emit bursts declaratively.</db:para>
</db:listitem>
<db:listitem>
<db:para>Call any of the <db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#burst-method">burst</db:link>() methods to emit bursts immediately.</db:para>
</db:listitem>
</db:itemizedlist>
</db:section>
<db:section xml:id="property-documentation">
<db:title>Property Documentation</db:title>
<db:section xml:id="depthBias-prop">
<db:title>depthBias : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>depthBias</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>Holds the depth bias of the emitter. Depth bias is added to the object distance from camera when sorting objects. This can be used to force rendering order between objects close to each other, that might otherwise be rendered in different order in different frames. Negative values cause the sorting value to move closer to the camera while positive values move it further from the camera.</db:para>
</db:section>
<db:section xml:id="emitBursts-prop">
<db:title>emitBursts : List&lt;EmitBurst3D&gt;</db:title>
<db:fieldsynopsis>
<db:type>List&lt;EmitBurst3D&gt;</db:type>
<db:varname>emitBursts</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property takes a list of <db:link xlink:href="qml-qtquick3d-particles3d-emitburst3d.xml">EmitBurst3D</db:link> elements, to declaratively define bursts. If the burst starting time, amount, and duration are known beforehand, it is better to use this property than e.g. calling <db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#burst-method">burst</db:link>() with a <db:link xlink:href="qml-qtqml-timer.xml">Timer</db:link>.</db:para>
<db:para>For example, to emit 100 particles at the beginning, and 50 particles at 2 seconds:</db:para>
<db:programlisting language="qml">ParticleEmitter3D {
    emitBursts: [
        EmitBurst3D {
            time: 0
            amount: 100
        },
        EmitBurst3D {
            time: 2000
            amount: 50
        }
    ]
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#burst-method">burst</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="emitRate-prop">
<db:title>emitRate : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>emitRate</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the constant emitting rate in particles per second. For example, if the emitRate is 120 and system animates at 60 frames per second, 2 new particles are emitted at every frame.</db:para>
<db:para>The default value is <db:code>0</db:code>.</db:para>
</db:section>
<db:section xml:id="enabled-prop">
<db:title>enabled : bool</db:title>
<db:fieldsynopsis>
<db:type>bool</db:type>
<db:varname>enabled</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>If enabled is set to <db:code>false</db:code>, this emitter will not emit any particles. Usually this is used to conditionally turn an emitter on or off. If you want to continue emitting burst, keep <db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#emitRate-prop">emitRate</db:link> at 0 instead of toggling this to <db:code>false</db:code>.</db:para>
<db:para>The default value is <db:code>true</db:code>.</db:para>
</db:section>
<db:section xml:id="lifeSpan-prop">
<db:title>lifeSpan : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>lifeSpan</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the lifespan of a single particle in milliseconds.</db:para>
<db:para>The default value is <db:code>1000</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#lifeSpanVariation-prop">lifeSpanVariation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="lifeSpanVariation-prop">
<db:title>lifeSpanVariation : int</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>lifeSpanVariation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the lifespan variation of a single particle in milliseconds.</db:para>
<db:para>For example, to emit particles which will exist between 3 and 4 seconds:</db:para>
<db:programlisting language="qml">ParticleEmitter3D {
    ...
    lifeSpan: 3500
    lifeSpanVariation: 500
}
</db:programlisting>
<db:para>The default value is <db:code>0</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#lifeSpan-prop">lifeSpan</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="particle-prop">
<db:title>particle : Particle3D</db:title>
<db:fieldsynopsis>
<db:type>Particle3D</db:type>
<db:varname>particle</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the logical particle which this emitter emits. Emitter must have a particle defined, or it doesn't emit anything. Particle can be either <db:link xlink:href="qml-qtquick3d-particles3d-spriteparticle3d.xml">SpriteParticle3D</db:link> or <db:link xlink:href="qml-qtquick3d-particles3d-modelparticle3d.xml">ModelParticle3D</db:link>.</db:para>
</db:section>
<db:section xml:id="particleEndScale-prop">
<db:title>particleEndScale : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>particleEndScale</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the scale multiplier of the particles at the end of particle <db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#lifeSpan-prop">lifeSpan</db:link>. To have variation in the particle end sizes, use <db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleEndScaleVariation-prop">particleEndScaleVariation</db:link>. When the value is negative, end scale is the same as the <db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleScale-prop">particleScale</db:link>, so scale doesn't change during the particle <db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#lifeSpan-prop">lifeSpan</db:link>.</db:para>
<db:para>The default value is <db:code>-1.0</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleScale-prop">particleScale</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleScaleVariation-prop">particleScaleVariation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="particleEndScaleVariation-prop">
<db:title>particleEndScaleVariation : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>particleEndScaleVariation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the scale variation of the particles in the end. When the value is negative, <db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleScaleVariation-prop">particleScaleVariation</db:link> is used also for the end scale. For example, to emit particles which start at scale 0.5 - 1.5 and end at scale 1.0 - 5.0:</db:para>
<db:programlisting language="qml">ParticleEmitter3D {
    ...
    particleScale: 1.0
    particleScaleVariation: 0.5
    particleEndScale: 3.0
    particleEndScaleVariation: 2.0
}
</db:programlisting>
<db:para>The default value is <db:code>-1.0</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleEndScale-prop">particleEndScale</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="particleRotation-prop">
<db:title>particleRotation : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>particleRotation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the rotation of the particles in the beginning. Rotation is defined as degrees in euler angles.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleRotationVariation-prop">particleRotationVariation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="particleRotationVariation-prop">
<db:title>particleRotationVariation : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>particleRotationVariation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the rotation variation of the particles in the beginning. Rotation variation is defined as degrees in euler angles.</db:para>
<db:para>For example, to emit particles in fully random rotations:</db:para>
<db:programlisting language="qml">ParticleEmitter3D {
    ...
    particleRotationVariation: Qt.vector3d(180, 180, 180)
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleRotation-prop">particleRotation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="particleRotationVelocity-prop">
<db:title>particleRotationVelocity : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>particleRotationVelocity</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the rotation velocity of the particles in the beginning. Rotation velocity is defined as degrees per second in euler angles.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleRotationVelocityVariation-prop">particleRotationVelocityVariation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="particleRotationVelocityVariation-prop">
<db:title>particleRotationVelocityVariation : vector3d</db:title>
<db:fieldsynopsis>
<db:type>vector3d</db:type>
<db:varname>particleRotationVelocityVariation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the rotation velocity variation of the particles. Rotation velocity variation is defined as degrees per second in euler angles.</db:para>
<db:para>For example, to emit particles in random rotations which have random rotation velocity between -100 and 100 degrees per second into any directions:</db:para>
<db:programlisting language="qml">ParticleEmitter3D {
    ...
    particleRotationVariation: Qt.vector3d(180, 180, 180)
    particleRotationVelocityVariation: Qt.vector3d(100, 100, 100)
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleRotationVelocity-prop">particleRotationVelocity</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="particleScale-prop">
<db:title>particleScale : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>particleScale</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the scale multiplier of the particles at the beginning. To have variation in the particle sizes, use <db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleScaleVariation-prop">particleScaleVariation</db:link>.</db:para>
<db:para>The default value is <db:code>1.0</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleEndScale-prop">particleEndScale</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleScaleVariation-prop">particleScaleVariation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="particleScaleVariation-prop">
<db:title>particleScaleVariation : real</db:title>
<db:fieldsynopsis>
<db:type>real</db:type>
<db:varname>particleScaleVariation</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the scale variation of the particles. For example, to emit particles at scale 0.5 - 1.5:</db:para>
<db:programlisting language="qml">ParticleEmitter3D {
    ...
    particleScale: 1.0
    particleScaleVariation: 0.5
}
</db:programlisting>
<db:para>The default value is <db:code>0.0</db:code>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleScale-prop">particleScale</db:link></db:member>
<db:member><db:link xlink:href="qml-qtquick3d-particles3d-particleemitter3d.xml#particleEndScaleVariation-prop">particleEndScaleVariation</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="shape-prop">
<db:title>shape : ParticleAbstractShape3D</db:title>
<db:fieldsynopsis>
<db:type>ParticleAbstractShape3D</db:type>
<db:varname>shape</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines optional shape for the emitting area. It can be either <db:link xlink:href="qml-qtquick3d-particles3d-particleshape3d.xml">ParticleShape3D</db:link> or <db:link xlink:href="qml-qtquick3d-particles3d-particlemodelshape3d.xml">ParticleModelShape3D</db:link>. Shape is scaled, positioned and rotated based on the emitter node properties. When the Shape <db:link xlink:href="qml-qtquick3d-particles3d-particleshape3d.xml#fill-prop">fill</db:link> property is set to false, emitting happens only from the surface of the shape.</db:para>
<db:para>When the shape is not defined, emitting is done from the center point of the emitter node.</db:para>
</db:section>
<db:section xml:id="system-prop">
<db:title>system : ParticleSystem3D</db:title>
<db:fieldsynopsis>
<db:type>ParticleSystem3D</db:type>
<db:varname>system</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property defines the <db:link xlink:href="qml-qtquick3d-particles3d-particlesystem3d.xml">ParticleSystem3D</db:link> for the emitter. If system is direct parent of the emitter, this property does not need to be defined.</db:para>
</db:section>
<db:section xml:id="velocity-prop">
<db:title>velocity : Direction3D</db:title>
<db:fieldsynopsis>
<db:type>Direction3D</db:type>
<db:varname>velocity</db:varname>
<db:modifier>writable</db:modifier>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This property can be used to set a starting velocity for emitted particles. If velocity is not set, particles start motionless and velocity comes from <db:link xlink:href="qml-qtquick3d-particles3d-affector3d.xml">affectors</db:link> if they are used.</db:para>
</db:section>
</db:section>
<db:section xml:id="method-documentation">
<db:title>Method Documentation</db:title>
<db:section xml:id="burst-method">
<db:title>vector3d burst(int <db:emphasis>count</db:emphasis>)</db:title>
<db:para>This method emits <db:code role="parameter">count</db:code> amount of particles from this emitter immediately.</db:para>
</db:section>
<db:section xml:id="burst-method-1">
<db:title>vector3d burst(int <db:emphasis>count</db:emphasis>, int <db:emphasis>duration</db:emphasis>)</db:title>
<db:para>This method emits <db:code role="parameter">count</db:code> amount of particles from this emitter during the next <db:code role="parameter">duration</db:code> milliseconds.</db:para>
</db:section>
<db:section xml:id="burst-method-2">
<db:title>vector3d burst(int <db:emphasis>count</db:emphasis>, int <db:emphasis>duration</db:emphasis>, vector3d <db:emphasis>position</db:emphasis>)</db:title>
<db:para>This method emits <db:code role="parameter">count</db:code> amount of particles from this emitter during the next <db:code role="parameter">duration</db:code> milliseconds. The particles are emitted as if the emitter was at <db:code role="parameter">position</db:code> but all other properties are the same.</db:para>
</db:section>
</db:section>
</db:article>
