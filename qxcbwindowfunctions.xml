<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QXcbWindowFunctions Class</db:title>
<db:productname>QtPlatformHeaders</db:productname>
<db:edition>Qt 5.5.1 Reference Documentation</db:edition>
<db:titleabbrev>Qt Platform Headers Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link> class is an inline class containing miscellaneous functionality for xcb window specific functionality.</db:para>
</db:abstract>
<db:pubdate>2025-06-29</db:pubdate>
<db:date>2025-06-29</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QXcbWindowFunctions</db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para>A common usage pattern is as follows:</db:para>
<db:programlisting language="cpp">int main(int argc, char **argv)
{
    QApplication app(argc, argv);

    QPushButton topLevelWidget(&quot;Hello World!&quot;);
    topLevelWidget.winId(); //have to create the QWindow

    QWindow *tlwWindow = topLevelWidget.windowHandle();

    QXcbWindowFunctions::setWmWindowType(tlwWindow, QXcbWindowFunctions::Dock);

    topLevelWidget.show();

    return app.exec();
}
</db:programlisting>
<db:note>
<db:para>There is no binary compatibility guarantee for this class, meaning that an application using it is only guaranteed to work with the Qt version it was developed against.</db:para>
</db:note>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="WmWindowType-enum">
<db:title>enum QXcbWindowFunctions::WmWindowType</db:title>
<db:para>This enum represents the supported WM_WINDOW_TYPE atoms.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::Normal</db:code></db:para>
</db:td>
<db:td><db:code>0x000001</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::Desktop</db:code></db:para>
</db:td>
<db:td><db:code>0x000002</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::Dock</db:code></db:para>
</db:td>
<db:td><db:code>0x000004</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::Toolbar</db:code></db:para>
</db:td>
<db:td><db:code>0x000008</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::Menu</db:code></db:para>
</db:td>
<db:td><db:code>0x000010</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::Utility</db:code></db:para>
</db:td>
<db:td><db:code>0x000020</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::Splash</db:code></db:para>
</db:td>
<db:td><db:code>0x000040</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::Dialog</db:code></db:para>
</db:td>
<db:td><db:code>0x000080</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::DropDownMenu</db:code></db:para>
</db:td>
<db:td><db:code>0x000100</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::PopupMenu</db:code></db:para>
</db:td>
<db:td><db:code>0x000200</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::Tooltip</db:code></db:para>
</db:td>
<db:td><db:code>0x000400</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::Notification</db:code></db:para>
</db:td>
<db:td><db:code>0x000800</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::Combo</db:code></db:para>
</db:td>
<db:td><db:code>0x001000</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::Dnd</db:code></db:para>
</db:td>
<db:td><db:code>0x002000</db:code></db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qxcbwindowfunctions.xml">QXcbWindowFunctions</db:link></db:emphasis>::KdeOverride</db:code></db:para>
</db:td>
<db:td><db:code>0x004000</db:code></db:td>
</db:tr>
</db:informaltable>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="setWmWindowType">
<db:title>[static] void QXcbWindowFunctions::setWmWindowType(int *<db:emphasis>window</db:emphasis>, QXcbWindowFunctions::WmWindowType <db:emphasis>type</db:emphasis>)</db:title>
<db:para>This is a convenience function that can be used directly instead of resolving the function pointer. <db:code role="parameter">window</db:code> and <db:code role="parameter">type</db:code> will be relayed to the function retrieved by QGuiApplication</db:para>
</db:section>
<db:section xml:id="setWmWindowTypeIdentifier">
<db:title>[static] const int QXcbWindowFunctions::setWmWindowTypeIdentifier()</db:title>
<db:para>This function returns the byte array that can be used to query QGuiApplication::platformFunction to retrieve the SetWmWindowType function.</db:para>
</db:section>
</db:section>
</db:article>
