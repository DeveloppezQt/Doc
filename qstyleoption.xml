<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.2" xml:lang="en">
<db:info>
<db:title>QStyleOption Class</db:title>
<db:productname>QtWidgets</db:productname>
<db:edition>Qt 6.5.3 Reference Documentation</db:edition>
<db:titleabbrev>Qt Widgets Reference Documentation</db:titleabbrev>
<db:abstract>
<db:para>The <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> class stores the parameters used by <db:link xlink:href="qstyle.xml">QStyle</db:link> functions.</db:para>
</db:abstract>
<db:pubdate>2024-02-14</db:pubdate>
<db:date>2024-02-14</db:date>
<db:authorgroup>
<db:author>
<db:orgname class="corporation">The Qt Company Ltd.</db:orgname>
</db:author>
</db:authorgroup>
</db:info>
<db:variablelist>
<db:varlistentry>
<db:term>Header</db:term>
<db:listitem>
<db:para>QStyleOption</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>CMake</db:term>
<db:listitem>
<db:para>find_package(Qt6 REQUIRED COMPONENTS Widgets)</db:para>
<db:para>target_link_libraries(mytarget PRIVATE Qt6::Widgets)</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>qmake</db:term>
<db:listitem>
<db:para>QT += widgets</db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Inherited By</db:term>
<db:listitem>
<db:para><db:link xlink:href="qstyleoptionbutton.xml" xlink:role="class">QStyleOptionButton</db:link>, <db:link xlink:href="qstyleoptioncomplex.xml" xlink:role="class">QStyleOptionComplex</db:link>, <db:link xlink:href="qstyleoptiondockwidget.xml" xlink:role="class">QStyleOptionDockWidget</db:link>, <db:link xlink:href="qstyleoptionfocusrect.xml" xlink:role="class">QStyleOptionFocusRect</db:link>, <db:link xlink:href="qstyleoptionframe.xml" xlink:role="class">QStyleOptionFrame</db:link>, <db:link xlink:href="qstyleoptiongraphicsitem.xml" xlink:role="class">QStyleOptionGraphicsItem</db:link>, <db:link xlink:href="qstyleoptionheader.xml" xlink:role="class">QStyleOptionHeader</db:link>, <db:link xlink:href="qstyleoptionmenuitem.xml" xlink:role="class">QStyleOptionMenuItem</db:link>, <db:link xlink:href="qstyleoptionprogressbar.xml" xlink:role="class">QStyleOptionProgressBar</db:link>, <db:link xlink:href="qstyleoptionrubberband.xml" xlink:role="class">QStyleOptionRubberBand</db:link>, <db:link xlink:href="qstyleoptiontab.xml" xlink:role="class">QStyleOptionTab</db:link>, <db:link xlink:href="qstyleoptiontabbarbase.xml" xlink:role="class">QStyleOptionTabBarBase</db:link>, <db:link xlink:href="qstyleoptiontabwidgetframe.xml" xlink:role="class">QStyleOptionTabWidgetFrame</db:link>, <db:link xlink:href="qstyleoptiontoolbar.xml" xlink:role="class">QStyleOptionToolBar</db:link>, <db:link xlink:href="qstyleoptiontoolbox.xml" xlink:role="class">QStyleOptionToolBox</db:link>, and <db:link xlink:href="qstyleoptionviewitem.xml" xlink:role="class">QStyleOptionViewItem</db:link></db:para>
</db:listitem>
</db:varlistentry>
<db:varlistentry>
<db:term>Group</db:term>
<db:listitem>
<db:para>QStyleOption is part of <db:simplelist><db:member>appearance</db:member></db:simplelist></db:para>
</db:listitem>
</db:varlistentry>
</db:variablelist>
<db:section xml:id="details">
<db:title>Detailed Description</db:title>
<db:para><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> and its subclasses contain all the information that <db:link xlink:href="qstyle.xml">QStyle</db:link> functions need to draw a graphical element.</db:para>
<db:para>For performance reasons, there are few member functions and the access to the member variables is direct (i.e., using the <db:code>.</db:code> or <db:code>-&gt;</db:code> operator). This makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</db:para>
<db:para>The caller of a <db:link xlink:href="qstyle.xml">QStyle</db:link> function usually creates <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> objects on the stack. This combined with Qt's extensive use of <db:link xlink:href="implicit-sharing.xml">implicit sharing</db:link> for types such as <db:link xlink:href="qstring.xml">QString</db:link>, <db:link xlink:href="qpalette.xml">QPalette</db:link>, and <db:link xlink:href="qcolor.xml">QColor</db:link> ensures that no memory allocation needlessly takes place.</db:para>
<db:para>The following code snippet shows how to use a specific <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass to paint a push button:</db:para>
<db:programlisting language="cpp">void MyPushButton::paintEvent(QPaintEvent *)
{
    QStyleOptionButton option;
    option.initFrom(this);
    option.state = isDown() ? QStyle::State_Sunken : QStyle::State_Raised;
    if (isDefault())
        option.features |= QStyleOptionButton::DefaultButton;
    option.text = text();
    option.icon = icon();

    QPainter painter(this);
    style()-&amp;gt;drawControl(QStyle::CE_PushButton, &amp;amp;option, &amp;amp;painter, this);
}
</db:programlisting>
<db:para>In our example, the control is a <db:link xlink:href="qstyle.xml#ControlElement-enum">QStyle::CE_PushButton</db:link>, and according to the <db:link xlink:href="qstyle.xml#drawControl">QStyle::drawControl</db:link>() documentation the corresponding class is <db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link>.</db:para>
<db:para>When reimplementing <db:link xlink:href="qstyle.xml">QStyle</db:link> functions that take a <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> parameter, you often need to cast the <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> to a subclass. For safety, you can use <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>() to ensure that the pointer type is correct. For example:</db:para>
<db:programlisting language="cpp">void MyStyle::drawPrimitive(PrimitiveElement element,
                            const QStyleOption *option,
                            QPainter *painter,
                            const QWidget *widget)
{
    if (element == PE_FrameFocusRect) {
        const QStyleOptionFocusRect *focusRectOption =
                qstyleoption_cast&amp;lt;const QStyleOptionFocusRect *&amp;gt;(option);
        if (focusRectOption) {
            // ...
        }
    }
    // ...
}
</db:programlisting>
<db:para>The <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>() function will return 0 if the object to which <db:code>option</db:code> points is not of the correct type.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyle.xml">QStyle</db:link></db:member>
<db:member><db:link xlink:href="qstylepainter.xml">QStylePainter</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="member-type-documentation">
<db:title>Member Type Documentation</db:title>
<db:section xml:id="OptionType-enum">
<db:title>enum QStyleOption::OptionType</db:title>
<db:enumsynopsis>
<db:enumname>OptionType</db:enumname>
<db:enumitem>
<db:enumidentifier>SO_Default</db:enumidentifier>
<db:enumvalue>0</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_FocusRect</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_Button</db:enumidentifier>
<db:enumvalue>2</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_Tab</db:enumidentifier>
<db:enumvalue>3</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_MenuItem</db:enumidentifier>
<db:enumvalue>4</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_Frame</db:enumidentifier>
<db:enumvalue>5</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_ProgressBar</db:enumidentifier>
<db:enumvalue>6</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_ToolBox</db:enumidentifier>
<db:enumvalue>7</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_Header</db:enumidentifier>
<db:enumvalue>8</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_DockWidget</db:enumidentifier>
<db:enumvalue>9</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_ViewItem</db:enumidentifier>
<db:enumvalue>10</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_TabWidgetFrame</db:enumidentifier>
<db:enumvalue>11</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_TabBarBase</db:enumidentifier>
<db:enumvalue>12</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_RubberBand</db:enumidentifier>
<db:enumvalue>13</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_ToolBar</db:enumidentifier>
<db:enumvalue>14</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_GraphicsItem</db:enumidentifier>
<db:enumvalue>15</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_Complex</db:enumidentifier>
<db:enumvalue>0xf0000</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_Slider</db:enumidentifier>
<db:enumvalue>0xf0001</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_SpinBox</db:enumidentifier>
<db:enumvalue>0xf0002</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_ToolButton</db:enumidentifier>
<db:enumvalue>0xf0003</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_ComboBox</db:enumidentifier>
<db:enumvalue>0xf0004</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_TitleBar</db:enumidentifier>
<db:enumvalue>0xf0005</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_GroupBox</db:enumidentifier>
<db:enumvalue>0xf0006</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_SizeGrip</db:enumidentifier>
<db:enumvalue>0xf0007</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_CustomBase</db:enumidentifier>
<db:enumvalue>0xf00</db:enumvalue>
</db:enumitem>
<db:enumitem>
<db:enumidentifier>SO_ComplexCustomBase</db:enumidentifier>
<db:enumvalue>0xf000000</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum is used internally by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link>, its subclasses, and <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>() to determine the type of style option. In general you do not need to worry about this unless you want to create your own <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass and your own styles.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_Button</db:code></db:para>
</db:td>
<db:td><db:code>2</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionbutton.xml">QStyleOptionButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_ComboBox</db:code></db:para>
</db:td>
<db:td><db:code>0xf0004</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptioncombobox.xml">QStyleOptionComboBox</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_Complex</db:code></db:para>
</db:td>
<db:td><db:code>0xf0000</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptioncomplex.xml">QStyleOptionComplex</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_Default</db:code></db:para>
</db:td>
<db:td><db:code>0</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_DockWidget</db:code></db:para>
</db:td>
<db:td><db:code>9</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiondockwidget.xml">QStyleOptionDockWidget</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_FocusRect</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionfocusrect.xml">QStyleOptionFocusRect</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_Frame</db:code></db:para>
</db:td>
<db:td><db:code>5</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionframe.xml">QStyleOptionFrame</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_GraphicsItem</db:code></db:para>
</db:td>
<db:td><db:code>15</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiongraphicsitem.xml">QStyleOptionGraphicsItem</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_GroupBox</db:code></db:para>
</db:td>
<db:td><db:code>0xf0006</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiongroupbox.xml">QStyleOptionGroupBox</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_Header</db:code></db:para>
</db:td>
<db:td><db:code>8</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionheader.xml">QStyleOptionHeader</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_MenuItem</db:code></db:para>
</db:td>
<db:td><db:code>4</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionmenuitem.xml">QStyleOptionMenuItem</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_ProgressBar</db:code></db:para>
</db:td>
<db:td><db:code>6</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionprogressbar.xml">QStyleOptionProgressBar</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_RubberBand</db:code></db:para>
</db:td>
<db:td><db:code>13</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionrubberband.xml">QStyleOptionRubberBand</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_SizeGrip</db:code></db:para>
</db:td>
<db:td><db:code>0xf0007</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionsizegrip.xml">QStyleOptionSizeGrip</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_Slider</db:code></db:para>
</db:td>
<db:td><db:code>0xf0001</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionslider.xml">QStyleOptionSlider</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_SpinBox</db:code></db:para>
</db:td>
<db:td><db:code>0xf0002</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionspinbox.xml">QStyleOptionSpinBox</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_Tab</db:code></db:para>
</db:td>
<db:td><db:code>3</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontab.xml">QStyleOptionTab</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_TabBarBase</db:code></db:para>
</db:td>
<db:td><db:code>12</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontabbarbase.xml">QStyleOptionTabBarBase</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_TabWidgetFrame</db:code></db:para>
</db:td>
<db:td><db:code>11</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontabwidgetframe.xml">QStyleOptionTabWidgetFrame</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_TitleBar</db:code></db:para>
</db:td>
<db:td><db:code>0xf0005</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontitlebar.xml">QStyleOptionTitleBar</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_ToolBar</db:code></db:para>
</db:td>
<db:td><db:code>14</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontoolbar.xml">QStyleOptionToolBar</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_ToolBox</db:code></db:para>
</db:td>
<db:td><db:code>7</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontoolbox.xml">QStyleOptionToolBox</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_ToolButton</db:code></db:para>
</db:td>
<db:td><db:code>0xf0003</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptiontoolbutton.xml">QStyleOptionToolButton</db:link></db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_ViewItem</db:code></db:para>
</db:td>
<db:td><db:code>10</db:code></db:td>
<db:td>
<db:para><db:link xlink:href="qstyleoptionviewitem.xml">QStyleOptionViewItem</db:link> (used in Interviews)</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The following values are used for custom controls:</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_CustomBase</db:code></db:para>
</db:td>
<db:td><db:code>0xf00</db:code></db:td>
<db:td>
<db:para>Reserved for custom QStyleOptions; all custom controls values must be above this value</db:para>
</db:td>
</db:tr>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::SO_ComplexCustomBase</db:code></db:para>
</db:td>
<db:td><db:code>0xf000000</db:code></db:td>
<db:td>
<db:para>Reserved for custom QStyleOptions; all custom complex controls values must be above this value</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#type-var">type</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="StyleOptionType-enum">
<db:title>enum QStyleOption::StyleOptionType</db:title>
<db:enumsynopsis>
<db:enumname>StyleOptionType</db:enumname>
<db:enumitem>
<db:enumidentifier>Type</db:enumidentifier>
<db:enumvalue>SO_Default</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum is used to hold information about the type of the style option, and is defined for each <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::Type</db:code></db:para>
</db:td>
<db:td><db:code>SO_Default</db:code></db:td>
<db:td>
<db:para>The type of style option provided (<db:link xlink:href="qstyleoption.xml#OptionType-enum">SO_Default</db:link> for this class).</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The type is used internally by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link>, its subclasses, and <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>() to determine the type of style option. In general you do not need to worry about this unless you want to create your own <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass and your own styles.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#StyleOptionVersion-enum">StyleOptionVersion</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="StyleOptionVersion-enum">
<db:title>enum QStyleOption::StyleOptionVersion</db:title>
<db:enumsynopsis>
<db:enumname>StyleOptionVersion</db:enumname>
<db:enumitem>
<db:enumidentifier>Version</db:enumidentifier>
<db:enumvalue>1</db:enumvalue>
</db:enumitem>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:enumsynopsis>
<db:para>This enum is used to hold information about the version of the style option, and is defined for each <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclass.</db:para>
<db:informaltable>
<db:thead>
<db:tr>
<db:th>Constant</db:th>
<db:th>Value</db:th>
<db:th>Description</db:th>
</db:tr>
</db:thead>
<db:tr>
<db:td>
<db:para><db:code><db:emphasis role="bold"><db:link xlink:href="qstyleoption.xml">QStyleOption</db:link></db:emphasis>::Version</db:code></db:para>
</db:td>
<db:td><db:code>1</db:code></db:td>
<db:td>
<db:para>1</db:para>
</db:td>
</db:tr>
</db:informaltable>
<db:para>The version is used by <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> subclasses to implement extensions without breaking compatibility. If you use <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>(), you normally do not need to check it.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#StyleOptionType-enum">StyleOptionType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
</db:section>
<db:section xml:id="member-function-documentation">
<db:title>Member Function Documentation</db:title>
<db:section xml:id="QStyleOption">
<db:title>QStyleOption::QStyleOption(int <db:emphasis>version</db:emphasis> = QStyleOption::Version, int <db:emphasis>type</db:emphasis> = SO_Default)</db:title>
<db:constructorsynopsis>
<db:methodname>QStyleOption</db:methodname>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>version</db:parameter>
<db:initializer>QStyleOption::Version</db:initializer>
</db:methodparam>
<db:methodparam>
<db:type>int</db:type>
<db:parameter>type</db:parameter>
<db:initializer>SO_Default</db:initializer>
</db:methodparam>
<db:synopsisinfo role="meta">constructor</db:synopsisinfo>
<db:synopsisinfo role="signature">QStyleOption(int version, int type)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link> with the specified <db:code role="parameter">version</db:code> and <db:code role="parameter">type</db:code>.</db:para>
<db:para>The version has no special meaning for <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link>; it can be used by subclasses to distinguish between different version of the same option type.</db:para>
<db:para>The <db:link xlink:href="qstyleoption.xml#state-var">state</db:link> member variable is initialized to <db:link xlink:href="qstyle.xml#StateFlag-enum">QStyle::State_None</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#version-var">version</db:link></db:member>
<db:member><db:link xlink:href="qstyleoption.xml#type-var">type</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="QStyleOption-1">
<db:title>QStyleOption::QStyleOption(const QStyleOption &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:constructorsynopsis>
<db:methodname>QStyleOption</db:methodname>
<db:methodparam>
<db:type>const QStyleOption &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-constructor</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">QStyleOption(const QStyleOption &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:constructorsynopsis>
<db:para>Constructs a copy of <db:code role="parameter">other</db:code>.</db:para>
</db:section>
<db:section xml:id="dtor.QStyleOption">
<db:title>QStyleOption::~QStyleOption()</db:title>
<db:destructorsynopsis>
<db:methodname>~QStyleOption</db:methodname>
<db:void/>
<db:synopsisinfo role="meta">destructor</db:synopsisinfo>
<db:synopsisinfo role="signature">~QStyleOption()</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:destructorsynopsis>
<db:para>Destroys this style option object.</db:para>
</db:section>
<db:section xml:id="initFrom">
<db:title>void QStyleOption::initFrom(const QWidget *<db:emphasis>widget</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:void/>
<db:methodname>initFrom</db:methodname>
<db:methodparam>
<db:type>const QWidget *</db:type>
<db:parameter>widget</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">void initFrom(const QWidget *widget)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Initializes the <db:link xlink:href="qstyleoption.xml#state-var">state</db:link>, <db:link xlink:href="qstyleoption.xml#direction-var">direction</db:link>, <db:link xlink:href="qstyleoption.xml#rect-var">rect</db:link>, <db:link xlink:href="qstyleoption.xml#palette-var">palette</db:link>, <db:link xlink:href="qstyleoption.xml#fontMetrics-var">fontMetrics</db:link> and <db:link xlink:href="qstyleoption.xml#styleObject-var">styleObject</db:link> member variables based on the specified <db:code role="parameter">widget</db:code>.</db:para>
<db:para>This is a convenience function; the member variables can also be initialized manually.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qwidget.xml#layoutDirection-prop">QWidget::layoutDirection</db:link>()</db:member>
<db:member><db:link xlink:href="qwidget.xml#rect-prop">QWidget::rect</db:link>()</db:member>
<db:member><db:link xlink:href="qwidget.xml#palette-prop">QWidget::palette</db:link>()</db:member>
<db:member><db:link xlink:href="qwidget.xml#fontMetrics">QWidget::fontMetrics</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="operator-eq">
<db:title>QStyleOption &amp;QStyleOption::operator=(const QStyleOption &amp;<db:emphasis>other</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>QStyleOption &amp;</db:type>
<db:methodname>operator=</db:methodname>
<db:methodparam>
<db:type>const QStyleOption &amp;</db:type>
<db:parameter>other</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">copy-assign</db:synopsisinfo>
<db:synopsisinfo role="signature">QStyleOption &amp; operator=(const QStyleOption &amp;other)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Assign <db:code role="parameter">other</db:code> to this <db:link xlink:href="qstyleoption.xml">QStyleOption</db:link>.</db:para>
</db:section>
</db:section>
<db:section xml:id="member-variable-documentation">
<db:title>Member Variable Documentation</db:title>
<db:section xml:id="direction-var">
<db:title>Qt::LayoutDirection QStyleOption::direction</db:title>
<db:fieldsynopsis>
<db:type>Qt::LayoutDirection</db:type>
<db:varname>direction</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the text layout direction that should be used when drawing text in the control</db:para>
<db:para>By default, the layout direction is <db:link xlink:href="qt.xml#LayoutDirection-enum">Qt::LeftToRight</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#initFrom">initFrom</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="fontMetrics-var">
<db:title>QFontMetrics QStyleOption::fontMetrics</db:title>
<db:fieldsynopsis>
<db:type>QFontMetrics</db:type>
<db:varname>fontMetrics</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the font metrics that should be used when drawing text in the control</db:para>
<db:para>By default, the application's default font is used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#initFrom">initFrom</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="palette-var">
<db:title>QPalette QStyleOption::palette</db:title>
<db:fieldsynopsis>
<db:type>QPalette</db:type>
<db:varname>palette</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the palette that should be used when painting the control</db:para>
<db:para>By default, the application's default palette is used.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#initFrom">initFrom</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="rect-var">
<db:title>QRect QStyleOption::rect</db:title>
<db:fieldsynopsis>
<db:type>QRect</db:type>
<db:varname>rect</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the area that should be used for various calculations and painting</db:para>
<db:para>This can have different meanings for different types of elements. For example, for a <db:link xlink:href="qstyle.xml#ControlElement-enum">QStyle::CE_PushButton</db:link> element it would be the rectangle for the entire button, while for a <db:link xlink:href="qstyle.xml#ControlElement-enum">QStyle::CE_PushButtonLabel</db:link> element it would be just the area for the push button label.</db:para>
<db:para>The default value is a null rectangle, i.e. a rectangle with both the width and the height set to 0.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#initFrom">initFrom</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="state-var">
<db:title>QStyle::State QStyleOption::state</db:title>
<db:fieldsynopsis>
<db:type>QStyle::State</db:type>
<db:varname>state</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the style flags that are used when drawing the control</db:para>
<db:para>The default value is <db:link xlink:href="qstyle.xml#StateFlag-enum">QStyle::State_None</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#initFrom">initFrom</db:link>()</db:member>
<db:member><db:link xlink:href="qstyle.xml#drawPrimitive">QStyle::drawPrimitive</db:link>()</db:member>
<db:member><db:link xlink:href="qstyle.xml#drawControl">QStyle::drawControl</db:link>()</db:member>
<db:member><db:link xlink:href="qstyle.xml#drawComplexControl">QStyle::drawComplexControl</db:link>()</db:member>
<db:member><db:link xlink:href="qstyle.xml#StateFlag-enum">QStyle::State</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="styleObject-var">
<db:title>QObject * QStyleOption::styleObject</db:title>
<db:fieldsynopsis>
<db:type>QObject *</db:type>
<db:varname>styleObject</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the object being styled</db:para>
<db:para>The built-in styles support the following types: <db:link xlink:href="qwidget.xml">QWidget</db:link>, <db:link xlink:href="qgraphicsobject.xml">QGraphicsObject</db:link> and <db:link xlink:href="qquickitem.xml">QQuickItem</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#initFrom">initFrom</db:link>()</db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="type-var">
<db:title>int QStyleOption::type</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>type</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the option type of the style option</db:para>
<db:para>The default value is <db:link xlink:href="qstyleoption.xml#OptionType-enum">SO_Default</db:link>.</db:para>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#OptionType-enum">OptionType</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="version-var">
<db:title>int QStyleOption::version</db:title>
<db:fieldsynopsis>
<db:type>int</db:type>
<db:varname>version</db:varname>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:fieldsynopsis>
<db:para>This variable holds the version of the style option</db:para>
<db:para>This value can be used by subclasses to implement extensions without breaking compatibility. If you use the <db:link xlink:href="qstyleoption.xml#qstyleoption_cast">qstyleoption_cast</db:link>() function, you normally do not need to check it.</db:para>
<db:para>The default value is 1.</db:para>
</db:section>
</db:section>
<db:section xml:id="related-non-members">
<db:title>Related Non-Members</db:title>
<db:section xml:id="qstyleoption_cast">
<db:title>T qstyleoption_cast(const QStyleOption *<db:emphasis>option</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>T</db:type>
<db:methodname>qstyleoption_cast</db:methodname>
<db:methodparam>
<db:type>const QStyleOption *</db:type>
<db:parameter>option</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="signature">T qstyleoption_cast(const QStyleOption *option)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>Returns a T or <db:code>nullptr</db:code> depending on the <db:link xlink:href="qstyleoption.xml#type-var">type</db:link> and <db:link xlink:href="qstyleoption.xml#version-var">version</db:link> of the given <db:code role="parameter">option</db:code>.</db:para>
<db:para>Example:</db:para>
<db:programlisting language="cpp">void MyStyle::drawPrimitive(PrimitiveElement element,
                            const QStyleOption *option,
                            QPainter *painter,
                            const QWidget *widget)
{
    if (element == PE_FrameFocusRect) {
        const QStyleOptionFocusRect *focusRectOption =
                qstyleoption_cast&amp;lt;const QStyleOptionFocusRect *&amp;gt;(option);
        if (focusRectOption) {
            // ...
        }
    }
    // ...
}
</db:programlisting>
<db:section>
<db:title>See Also</db:title>
<db:para><db:emphasis>See also </db:emphasis>
<db:simplelist type="vert" role="see-also">
<db:member><db:link xlink:href="qstyleoption.xml#type-var">QStyleOption::type</db:link></db:member>
<db:member><db:link xlink:href="qstyleoption.xml#version-var">QStyleOption::version</db:link></db:member>
</db:simplelist>
</db:para>
</db:section>
</db:section>
<db:section xml:id="qstyleoption_cast-1">
<db:title>T qstyleoption_cast(QStyleOption *<db:emphasis>option</db:emphasis>)</db:title>
<db:methodsynopsis>
<db:type>T</db:type>
<db:methodname>qstyleoption_cast</db:methodname>
<db:methodparam>
<db:type>QStyleOption *</db:type>
<db:parameter>option</db:parameter>
</db:methodparam>
<db:synopsisinfo role="meta">plain</db:synopsisinfo>
<db:synopsisinfo role="overload">overload</db:synopsisinfo>
<db:synopsisinfo role="overload-number">1</db:synopsisinfo>
<db:synopsisinfo role="signature">T qstyleoption_cast(QStyleOption *option)</db:synopsisinfo>
<db:synopsisinfo role="access">public</db:synopsisinfo>
<db:synopsisinfo role="status">active</db:synopsisinfo>
<db:synopsisinfo role="threadsafeness">unspecified</db:synopsisinfo>
</db:methodsynopsis>
<db:para>This is an overloaded function.</db:para>
<db:para>Returns a T or <db:code>nullptr</db:code> depending on the type of the given <db:code role="parameter">option</db:code>.</db:para>
</db:section>
</db:section>
</db:article>
